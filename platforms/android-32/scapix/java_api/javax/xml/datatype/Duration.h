// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_XML_DATATYPE_DURATION_FWD
#define SCAPIX_JAVA_API_JAVAX_XML_DATATYPE_DURATION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::xml::datatype { class Duration; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::xml::datatype::Duration>
{
	static constexpr fixed_string class_name = "javax/xml/datatype/Duration";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_XML_DATATYPE_DURATION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_XML_DATATYPE_DURATION)
#define SCAPIX_JAVA_API_JAVAX_XML_DATATYPE_DURATION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Number.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/math/BigDecimal.h>
#include <scapix/java_api/java/util/Calendar.h>
#include <scapix/java_api/java/util/Date.h>
#include <scapix/java_api/javax/xml/datatype/DatatypeConstants_Field.h>
#include <scapix/java_api/javax/xml/namespace/QName.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::xml::datatype::Duration : public jni::object_base<"javax/xml/datatype/Duration",
	java::lang::Object>
{
public:

	static jni::ref<javax::xml::datatype::Duration> new_object() { return base_::new_object(); }
	jni::ref<javax::xml::namespace_::QName> getXMLSchemaType() { return call_method<"getXMLSchemaType", jni::ref<javax::xml::namespace_::QName>>(); }
	jint getSign() { return call_method<"getSign", jint>(); }
	jint getYears() { return call_method<"getYears", jint>(); }
	jint getMonths() { return call_method<"getMonths", jint>(); }
	jint getDays() { return call_method<"getDays", jint>(); }
	jint getHours() { return call_method<"getHours", jint>(); }
	jint getMinutes() { return call_method<"getMinutes", jint>(); }
	jint getSeconds() { return call_method<"getSeconds", jint>(); }
	jlong getTimeInMillis(jni::ref<java::util::Calendar> startInstant) { return call_method<"getTimeInMillis", jlong>(startInstant); }
	jlong getTimeInMillis(jni::ref<java::util::Date> startInstant) { return call_method<"getTimeInMillis", jlong>(startInstant); }
	jni::ref<java::lang::Number> getField(jni::ref<javax::xml::datatype::DatatypeConstants_Field> p1) { return call_method<"getField", jni::ref<java::lang::Number>>(p1); }
	jboolean isSet(jni::ref<javax::xml::datatype::DatatypeConstants_Field> p1) { return call_method<"isSet", jboolean>(p1); }
	jni::ref<javax::xml::datatype::Duration> add(jni::ref<javax::xml::datatype::Duration> p1) { return call_method<"add", jni::ref<javax::xml::datatype::Duration>>(p1); }
	void addTo(jni::ref<java::util::Calendar> p1) { return call_method<"addTo", void>(p1); }
	void addTo(jni::ref<java::util::Date> date) { return call_method<"addTo", void>(date); }
	jni::ref<javax::xml::datatype::Duration> subtract(jni::ref<javax::xml::datatype::Duration> rhs) { return call_method<"subtract", jni::ref<javax::xml::datatype::Duration>>(rhs); }
	jni::ref<javax::xml::datatype::Duration> multiply(jint factor) { return call_method<"multiply", jni::ref<javax::xml::datatype::Duration>>(factor); }
	jni::ref<javax::xml::datatype::Duration> multiply(jni::ref<java::math::BigDecimal> p1) { return call_method<"multiply", jni::ref<javax::xml::datatype::Duration>>(p1); }
	jni::ref<javax::xml::datatype::Duration> negate() { return call_method<"negate", jni::ref<javax::xml::datatype::Duration>>(); }
	jni::ref<javax::xml::datatype::Duration> normalizeWith(jni::ref<java::util::Calendar> p1) { return call_method<"normalizeWith", jni::ref<javax::xml::datatype::Duration>>(p1); }
	jint compare(jni::ref<javax::xml::datatype::Duration> p1) { return call_method<"compare", jint>(p1); }
	jboolean isLongerThan(jni::ref<javax::xml::datatype::Duration> duration) { return call_method<"isLongerThan", jboolean>(duration); }
	jboolean isShorterThan(jni::ref<javax::xml::datatype::Duration> duration) { return call_method<"isShorterThan", jboolean>(duration); }
	jboolean equals(jni::ref<java::lang::Object> duration) { return call_method<"equals", jboolean>(duration); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	Duration(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_XML_DATATYPE_DURATION
