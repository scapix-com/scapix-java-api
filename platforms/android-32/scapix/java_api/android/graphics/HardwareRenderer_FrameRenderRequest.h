// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_GRAPHICS_HARDWARERENDERER_FRAMERENDERREQUEST_FWD
#define SCAPIX_JAVA_API_ANDROID_GRAPHICS_HARDWARERENDERER_FRAMERENDERREQUEST_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::graphics { class HardwareRenderer_FrameRenderRequest; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::graphics::HardwareRenderer_FrameRenderRequest>
{
	static constexpr fixed_string class_name = "android/graphics/HardwareRenderer$FrameRenderRequest";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_GRAPHICS_HARDWARERENDERER_FRAMERENDERREQUEST_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_GRAPHICS_HARDWARERENDERER_FRAMERENDERREQUEST)
#define SCAPIX_JAVA_API_ANDROID_GRAPHICS_HARDWARERENDERER_FRAMERENDERREQUEST

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Runnable.h>
#include <scapix/java_api/java/util/concurrent/Executor.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::graphics::HardwareRenderer_FrameRenderRequest : public jni::object_base<"android/graphics/HardwareRenderer$FrameRenderRequest",
	java::lang::Object>
{
public:

	jni::ref<android::graphics::HardwareRenderer_FrameRenderRequest> setVsyncTime(jlong vsyncTime) { return call_method<"setVsyncTime", jni::ref<android::graphics::HardwareRenderer_FrameRenderRequest>>(vsyncTime); }
	jni::ref<android::graphics::HardwareRenderer_FrameRenderRequest> setFrameCommitCallback(jni::ref<java::util::concurrent::Executor> executor, jni::ref<java::lang::Runnable> frameCommitCallback) { return call_method<"setFrameCommitCallback", jni::ref<android::graphics::HardwareRenderer_FrameRenderRequest>>(executor, frameCommitCallback); }
	jni::ref<android::graphics::HardwareRenderer_FrameRenderRequest> setWaitForPresent(jboolean shouldWait) { return call_method<"setWaitForPresent", jni::ref<android::graphics::HardwareRenderer_FrameRenderRequest>>(shouldWait); }
	jint syncAndDraw() { return call_method<"syncAndDraw", jint>(); }

protected:

	HardwareRenderer_FrameRenderRequest(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_GRAPHICS_HARDWARERENDERER_FRAMERENDERREQUEST
