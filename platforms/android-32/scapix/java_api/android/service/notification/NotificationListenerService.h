// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/app/Service.h>

#ifndef SCAPIX_JAVA_API_ANDROID_SERVICE_NOTIFICATION_NOTIFICATIONLISTENERSERVICE_FWD
#define SCAPIX_JAVA_API_ANDROID_SERVICE_NOTIFICATION_NOTIFICATIONLISTENERSERVICE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::service::notification { class NotificationListenerService; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::service::notification::NotificationListenerService>
{
	static constexpr fixed_string class_name = "android/service/notification/NotificationListenerService";
	using base_classes = std::tuple<scapix::java_api::android::app::Service>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_SERVICE_NOTIFICATION_NOTIFICATIONLISTENERSERVICE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_SERVICE_NOTIFICATION_NOTIFICATIONLISTENERSERVICE)
#define SCAPIX_JAVA_API_ANDROID_SERVICE_NOTIFICATION_NOTIFICATIONLISTENERSERVICE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/app/NotificationChannel.h>
#include <scapix/java_api/android/app/NotificationChannelGroup.h>
#include <scapix/java_api/android/content/ComponentName.h>
#include <scapix/java_api/android/content/Intent.h>
#include <scapix/java_api/android/os/IBinder.h>
#include <scapix/java_api/android/os/UserHandle.h>
#include <scapix/java_api/android/service/notification/NotificationListenerService_RankingMap.h>
#include <scapix/java_api/android/service/notification/StatusBarNotification.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/android/service/notification/NotificationListenerService_Ranking.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::service::notification::NotificationListenerService : public jni::object_base<"android/service/notification/NotificationListenerService",
	android::app::Service>
{
public:

	using RankingMap = NotificationListenerService_RankingMap;
	using Ranking = NotificationListenerService_Ranking;

	static jint FLAG_FILTER_TYPE_ALERTING() { return get_static_field<"FLAG_FILTER_TYPE_ALERTING", jint>(); }
	static jint FLAG_FILTER_TYPE_CONVERSATIONS() { return get_static_field<"FLAG_FILTER_TYPE_CONVERSATIONS", jint>(); }
	static jint FLAG_FILTER_TYPE_ONGOING() { return get_static_field<"FLAG_FILTER_TYPE_ONGOING", jint>(); }
	static jint FLAG_FILTER_TYPE_SILENT() { return get_static_field<"FLAG_FILTER_TYPE_SILENT", jint>(); }
	static jint HINT_HOST_DISABLE_CALL_EFFECTS() { return get_static_field<"HINT_HOST_DISABLE_CALL_EFFECTS", jint>(); }
	static jint HINT_HOST_DISABLE_EFFECTS() { return get_static_field<"HINT_HOST_DISABLE_EFFECTS", jint>(); }
	static jint HINT_HOST_DISABLE_NOTIFICATION_EFFECTS() { return get_static_field<"HINT_HOST_DISABLE_NOTIFICATION_EFFECTS", jint>(); }
	static jint INTERRUPTION_FILTER_ALARMS() { return get_static_field<"INTERRUPTION_FILTER_ALARMS", jint>(); }
	static jint INTERRUPTION_FILTER_ALL() { return get_static_field<"INTERRUPTION_FILTER_ALL", jint>(); }
	static jint INTERRUPTION_FILTER_NONE() { return get_static_field<"INTERRUPTION_FILTER_NONE", jint>(); }
	static jint INTERRUPTION_FILTER_PRIORITY() { return get_static_field<"INTERRUPTION_FILTER_PRIORITY", jint>(); }
	static jint INTERRUPTION_FILTER_UNKNOWN() { return get_static_field<"INTERRUPTION_FILTER_UNKNOWN", jint>(); }
	static jni::ref<java::lang::String> META_DATA_DEFAULT_FILTER_TYPES() { return get_static_field<"META_DATA_DEFAULT_FILTER_TYPES", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> META_DATA_DISABLED_FILTER_TYPES() { return get_static_field<"META_DATA_DISABLED_FILTER_TYPES", jni::ref<java::lang::String>>(); }
	static jint NOTIFICATION_CHANNEL_OR_GROUP_ADDED() { return get_static_field<"NOTIFICATION_CHANNEL_OR_GROUP_ADDED", jint>(); }
	static jint NOTIFICATION_CHANNEL_OR_GROUP_DELETED() { return get_static_field<"NOTIFICATION_CHANNEL_OR_GROUP_DELETED", jint>(); }
	static jint NOTIFICATION_CHANNEL_OR_GROUP_UPDATED() { return get_static_field<"NOTIFICATION_CHANNEL_OR_GROUP_UPDATED", jint>(); }
	static jint REASON_APP_CANCEL() { return get_static_field<"REASON_APP_CANCEL", jint>(); }
	static jint REASON_APP_CANCEL_ALL() { return get_static_field<"REASON_APP_CANCEL_ALL", jint>(); }
	static jint REASON_CANCEL() { return get_static_field<"REASON_CANCEL", jint>(); }
	static jint REASON_CANCEL_ALL() { return get_static_field<"REASON_CANCEL_ALL", jint>(); }
	static jint REASON_CHANNEL_BANNED() { return get_static_field<"REASON_CHANNEL_BANNED", jint>(); }
	static jint REASON_CHANNEL_REMOVED() { return get_static_field<"REASON_CHANNEL_REMOVED", jint>(); }
	static jint REASON_CLEAR_DATA() { return get_static_field<"REASON_CLEAR_DATA", jint>(); }
	static jint REASON_CLICK() { return get_static_field<"REASON_CLICK", jint>(); }
	static jint REASON_ERROR() { return get_static_field<"REASON_ERROR", jint>(); }
	static jint REASON_GROUP_OPTIMIZATION() { return get_static_field<"REASON_GROUP_OPTIMIZATION", jint>(); }
	static jint REASON_GROUP_SUMMARY_CANCELED() { return get_static_field<"REASON_GROUP_SUMMARY_CANCELED", jint>(); }
	static jint REASON_LISTENER_CANCEL() { return get_static_field<"REASON_LISTENER_CANCEL", jint>(); }
	static jint REASON_LISTENER_CANCEL_ALL() { return get_static_field<"REASON_LISTENER_CANCEL_ALL", jint>(); }
	static jint REASON_PACKAGE_BANNED() { return get_static_field<"REASON_PACKAGE_BANNED", jint>(); }
	static jint REASON_PACKAGE_CHANGED() { return get_static_field<"REASON_PACKAGE_CHANGED", jint>(); }
	static jint REASON_PACKAGE_SUSPENDED() { return get_static_field<"REASON_PACKAGE_SUSPENDED", jint>(); }
	static jint REASON_PROFILE_TURNED_OFF() { return get_static_field<"REASON_PROFILE_TURNED_OFF", jint>(); }
	static jint REASON_SNOOZED() { return get_static_field<"REASON_SNOOZED", jint>(); }
	static jint REASON_TIMEOUT() { return get_static_field<"REASON_TIMEOUT", jint>(); }
	static jint REASON_UNAUTOBUNDLED() { return get_static_field<"REASON_UNAUTOBUNDLED", jint>(); }
	static jint REASON_USER_STOPPED() { return get_static_field<"REASON_USER_STOPPED", jint>(); }
	static jni::ref<java::lang::String> SERVICE_INTERFACE() { return get_static_field<"SERVICE_INTERFACE", jni::ref<java::lang::String>>(); }
	static jint SUPPRESSED_EFFECT_SCREEN_OFF() { return get_static_field<"SUPPRESSED_EFFECT_SCREEN_OFF", jint>(); }
	static jint SUPPRESSED_EFFECT_SCREEN_ON() { return get_static_field<"SUPPRESSED_EFFECT_SCREEN_ON", jint>(); }

	static jni::ref<android::service::notification::NotificationListenerService> new_object() { return base_::new_object(); }
	void onNotificationPosted(jni::ref<android::service::notification::StatusBarNotification> sbn) { return call_method<"onNotificationPosted", void>(sbn); }
	void onNotificationPosted(jni::ref<android::service::notification::StatusBarNotification> sbn, jni::ref<android::service::notification::NotificationListenerService_RankingMap> rankingMap) { return call_method<"onNotificationPosted", void>(sbn, rankingMap); }
	void onNotificationRemoved(jni::ref<android::service::notification::StatusBarNotification> sbn) { return call_method<"onNotificationRemoved", void>(sbn); }
	void onNotificationRemoved(jni::ref<android::service::notification::StatusBarNotification> sbn, jni::ref<android::service::notification::NotificationListenerService_RankingMap> rankingMap) { return call_method<"onNotificationRemoved", void>(sbn, rankingMap); }
	void onNotificationRemoved(jni::ref<android::service::notification::StatusBarNotification> sbn, jni::ref<android::service::notification::NotificationListenerService_RankingMap> rankingMap, jint reason) { return call_method<"onNotificationRemoved", void>(sbn, rankingMap, reason); }
	void onListenerConnected() { return call_method<"onListenerConnected", void>(); }
	void onListenerDisconnected() { return call_method<"onListenerDisconnected", void>(); }
	void onNotificationRankingUpdate(jni::ref<android::service::notification::NotificationListenerService_RankingMap> rankingMap) { return call_method<"onNotificationRankingUpdate", void>(rankingMap); }
	void onListenerHintsChanged(jint hints) { return call_method<"onListenerHintsChanged", void>(hints); }
	void onSilentStatusBarIconsVisibilityChanged(jboolean hideSilentStatusIcons) { return call_method<"onSilentStatusBarIconsVisibilityChanged", void>(hideSilentStatusIcons); }
	void onNotificationChannelModified(jni::ref<java::lang::String> pkg, jni::ref<android::os::UserHandle> user, jni::ref<android::app::NotificationChannel> channel, jint modificationType) { return call_method<"onNotificationChannelModified", void>(pkg, user, channel, modificationType); }
	void onNotificationChannelGroupModified(jni::ref<java::lang::String> pkg, jni::ref<android::os::UserHandle> user, jni::ref<android::app::NotificationChannelGroup> group, jint modificationType) { return call_method<"onNotificationChannelGroupModified", void>(pkg, user, group, modificationType); }
	void onInterruptionFilterChanged(jint interruptionFilter) { return call_method<"onInterruptionFilterChanged", void>(interruptionFilter); }
	void cancelNotification(jni::ref<java::lang::String> pkg, jni::ref<java::lang::String> tag, jint id) { return call_method<"cancelNotification", void>(pkg, tag, id); }
	void cancelNotification(jni::ref<java::lang::String> key) { return call_method<"cancelNotification", void>(key); }
	void cancelAllNotifications() { return call_method<"cancelAllNotifications", void>(); }
	void cancelNotifications(jni::ref<jni::array<java::lang::String>> keys) { return call_method<"cancelNotifications", void>(keys); }
	void snoozeNotification(jni::ref<java::lang::String> key, jlong durationMs) { return call_method<"snoozeNotification", void>(key, durationMs); }
	void migrateNotificationFilter(jint defaultTypes, jni::ref<java::util::List> disallowedPkgs) { return call_method<"migrateNotificationFilter", void>(defaultTypes, disallowedPkgs); }
	void setNotificationsShown(jni::ref<jni::array<java::lang::String>> keys) { return call_method<"setNotificationsShown", void>(keys); }
	void updateNotificationChannel(jni::ref<java::lang::String> pkg, jni::ref<android::os::UserHandle> user, jni::ref<android::app::NotificationChannel> channel) { return call_method<"updateNotificationChannel", void>(pkg, user, channel); }
	jni::ref<java::util::List> getNotificationChannels(jni::ref<java::lang::String> pkg, jni::ref<android::os::UserHandle> user) { return call_method<"getNotificationChannels", jni::ref<java::util::List>>(pkg, user); }
	jni::ref<java::util::List> getNotificationChannelGroups(jni::ref<java::lang::String> pkg, jni::ref<android::os::UserHandle> user) { return call_method<"getNotificationChannelGroups", jni::ref<java::util::List>>(pkg, user); }
	jni::ref<jni::array<android::service::notification::StatusBarNotification>> getActiveNotifications() { return call_method<"getActiveNotifications", jni::ref<jni::array<android::service::notification::StatusBarNotification>>>(); }
	jni::ref<jni::array<android::service::notification::StatusBarNotification>> getSnoozedNotifications() { return call_method<"getSnoozedNotifications", jni::ref<jni::array<android::service::notification::StatusBarNotification>>>(); }
	jni::ref<jni::array<android::service::notification::StatusBarNotification>> getActiveNotifications(jni::ref<jni::array<java::lang::String>> keys) { return call_method<"getActiveNotifications", jni::ref<jni::array<android::service::notification::StatusBarNotification>>>(keys); }
	jint getCurrentListenerHints() { return call_method<"getCurrentListenerHints", jint>(); }
	jint getCurrentInterruptionFilter() { return call_method<"getCurrentInterruptionFilter", jint>(); }
	void clearRequestedListenerHints() { return call_method<"clearRequestedListenerHints", void>(); }
	void requestListenerHints(jint hints) { return call_method<"requestListenerHints", void>(hints); }
	void requestInterruptionFilter(jint interruptionFilter) { return call_method<"requestInterruptionFilter", void>(interruptionFilter); }
	jni::ref<android::service::notification::NotificationListenerService_RankingMap> getCurrentRanking() { return call_method<"getCurrentRanking", jni::ref<android::service::notification::NotificationListenerService_RankingMap>>(); }
	jni::ref<android::os::IBinder> onBind(jni::ref<android::content::Intent> intent) { return call_method<"onBind", jni::ref<android::os::IBinder>>(intent); }
	void onDestroy() { return call_method<"onDestroy", void>(); }
	static void requestRebind(jni::ref<android::content::ComponentName> componentName) { return call_static_method<"requestRebind", void>(componentName); }
	void requestUnbind() { return call_method<"requestUnbind", void>(); }

protected:

	NotificationListenerService(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_SERVICE_NOTIFICATION_NOTIFICATIONLISTENERSERVICE
