// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_SERVICE_CONTROLS_CONTROL_FWD
#define SCAPIX_JAVA_API_ANDROID_SERVICE_CONTROLS_CONTROL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::service::controls { class Control; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::service::controls::Control>
{
	static constexpr fixed_string class_name = "android/service/controls/Control";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_SERVICE_CONTROLS_CONTROL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_SERVICE_CONTROLS_CONTROL)
#define SCAPIX_JAVA_API_ANDROID_SERVICE_CONTROLS_CONTROL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/app/PendingIntent.h>
#include <scapix/java_api/android/content/res/ColorStateList.h>
#include <scapix/java_api/android/graphics/drawable/Icon.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/android/service/controls/templates/ControlTemplate.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/android/service/controls/Control_StatelessBuilder.h>
#include <scapix/java_api/android/service/controls/Control_StatefulBuilder.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::service::controls::Control : public jni::object_base<"android/service/controls/Control",
	java::lang::Object,
	android::os::Parcelable>
{
public:

	using StatelessBuilder = Control_StatelessBuilder;
	using StatefulBuilder = Control_StatefulBuilder;

	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }
	static jint STATUS_DISABLED() { return get_static_field<"STATUS_DISABLED", jint>(); }
	static jint STATUS_ERROR() { return get_static_field<"STATUS_ERROR", jint>(); }
	static jint STATUS_NOT_FOUND() { return get_static_field<"STATUS_NOT_FOUND", jint>(); }
	static jint STATUS_OK() { return get_static_field<"STATUS_OK", jint>(); }
	static jint STATUS_UNKNOWN() { return get_static_field<"STATUS_UNKNOWN", jint>(); }

	jni::ref<java::lang::String> getControlId() { return call_method<"getControlId", jni::ref<java::lang::String>>(); }
	jint getDeviceType() { return call_method<"getDeviceType", jint>(); }
	jni::ref<java::lang::CharSequence> getTitle() { return call_method<"getTitle", jni::ref<java::lang::CharSequence>>(); }
	jni::ref<java::lang::CharSequence> getSubtitle() { return call_method<"getSubtitle", jni::ref<java::lang::CharSequence>>(); }
	jni::ref<java::lang::CharSequence> getStructure() { return call_method<"getStructure", jni::ref<java::lang::CharSequence>>(); }
	jni::ref<java::lang::CharSequence> getZone() { return call_method<"getZone", jni::ref<java::lang::CharSequence>>(); }
	jni::ref<android::app::PendingIntent> getAppIntent() { return call_method<"getAppIntent", jni::ref<android::app::PendingIntent>>(); }
	jni::ref<android::graphics::drawable::Icon> getCustomIcon() { return call_method<"getCustomIcon", jni::ref<android::graphics::drawable::Icon>>(); }
	jni::ref<android::content::res::ColorStateList> getCustomColor() { return call_method<"getCustomColor", jni::ref<android::content::res::ColorStateList>>(); }
	jint getStatus() { return call_method<"getStatus", jint>(); }
	jni::ref<android::service::controls::templates::ControlTemplate> getControlTemplate() { return call_method<"getControlTemplate", jni::ref<android::service::controls::templates::ControlTemplate>>(); }
	jni::ref<java::lang::CharSequence> getStatusText() { return call_method<"getStatusText", jni::ref<java::lang::CharSequence>>(); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	void writeToParcel(jni::ref<android::os::Parcel> dest, jint flags) { return call_method<"writeToParcel", void>(dest, flags); }

protected:

	Control(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_SERVICE_CONTROLS_CONTROL
