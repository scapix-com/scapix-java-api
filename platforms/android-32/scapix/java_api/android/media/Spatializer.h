// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_SPATIALIZER_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_SPATIALIZER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media { class Spatializer; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::Spatializer>
{
	static constexpr fixed_string class_name = "android/media/Spatializer";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_SPATIALIZER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_SPATIALIZER)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_SPATIALIZER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/media/AudioAttributes.h>
#include <scapix/java_api/android/media/AudioFormat.h>
#include <scapix/java_api/android/media/Spatializer_OnSpatializerStateChangedListener.h>
#include <scapix/java_api/java/util/concurrent/Executor.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::Spatializer : public jni::object_base<"android/media/Spatializer",
	java::lang::Object>
{
public:

	using OnSpatializerStateChangedListener = Spatializer_OnSpatializerStateChangedListener;

	static jint SPATIALIZER_IMMERSIVE_LEVEL_MULTICHANNEL() { return get_static_field<"SPATIALIZER_IMMERSIVE_LEVEL_MULTICHANNEL", jint>(); }
	static jint SPATIALIZER_IMMERSIVE_LEVEL_NONE() { return get_static_field<"SPATIALIZER_IMMERSIVE_LEVEL_NONE", jint>(); }
	static jint SPATIALIZER_IMMERSIVE_LEVEL_OTHER() { return get_static_field<"SPATIALIZER_IMMERSIVE_LEVEL_OTHER", jint>(); }

	jboolean isEnabled() { return call_method<"isEnabled", jboolean>(); }
	jboolean isAvailable() { return call_method<"isAvailable", jboolean>(); }
	jint getImmersiveAudioLevel() { return call_method<"getImmersiveAudioLevel", jint>(); }
	jboolean canBeSpatialized(jni::ref<android::media::AudioAttributes> attributes, jni::ref<android::media::AudioFormat> format) { return call_method<"canBeSpatialized", jboolean>(attributes, format); }
	void addOnSpatializerStateChangedListener(jni::ref<java::util::concurrent::Executor> executor, jni::ref<android::media::Spatializer_OnSpatializerStateChangedListener> listener) { return call_method<"addOnSpatializerStateChangedListener", void>(executor, listener); }
	void removeOnSpatializerStateChangedListener(jni::ref<android::media::Spatializer_OnSpatializerStateChangedListener> listener) { return call_method<"removeOnSpatializerStateChangedListener", void>(listener); }

protected:

	Spatializer(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_SPATIALIZER
