// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/RuntimeException.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIACODEC_INCOMPATIBLEWITHBLOCKMODELEXCEPTION_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIACODEC_INCOMPATIBLEWITHBLOCKMODELEXCEPTION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media { class MediaCodec_IncompatibleWithBlockModelException; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::MediaCodec_IncompatibleWithBlockModelException>
{
	static constexpr fixed_string class_name = "android/media/MediaCodec$IncompatibleWithBlockModelException";
	using base_classes = std::tuple<scapix::java_api::java::lang::RuntimeException>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIACODEC_INCOMPATIBLEWITHBLOCKMODELEXCEPTION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIACODEC_INCOMPATIBLEWITHBLOCKMODELEXCEPTION)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIACODEC_INCOMPATIBLEWITHBLOCKMODELEXCEPTION

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::MediaCodec_IncompatibleWithBlockModelException : public jni::object_base<"android/media/MediaCodec$IncompatibleWithBlockModelException",
	java::lang::RuntimeException>
{
public:


protected:

	MediaCodec_IncompatibleWithBlockModelException(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIACODEC_INCOMPATIBLEWITHBLOCKMODELEXCEPTION
