// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/io/Closeable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIADATASOURCE_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIADATASOURCE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media { class MediaDataSource; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::MediaDataSource>
{
	static constexpr fixed_string class_name = "android/media/MediaDataSource";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::io::Closeable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIADATASOURCE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIADATASOURCE)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIADATASOURCE

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::MediaDataSource : public jni::object_base<"android/media/MediaDataSource",
	java::lang::Object,
	java::io::Closeable>
{
public:

	static jni::ref<android::media::MediaDataSource> new_object() { return base_::new_object(); }
	jint readAt(jlong p1, jni::ref<jni::array<jbyte>> p2, jint p3, jint p4) { return call_method<"readAt", jint>(p1, p2, p3, p4); }
	jlong getSize() { return call_method<"getSize", jlong>(); }

protected:

	MediaDataSource(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIADATASOURCE
