// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_VIEW_CONTENTCAPTURE_DATASHAREWRITEADAPTER_FWD
#define SCAPIX_JAVA_API_ANDROID_VIEW_CONTENTCAPTURE_DATASHAREWRITEADAPTER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::view::contentcapture { class DataShareWriteAdapter; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::view::contentcapture::DataShareWriteAdapter>
{
	static constexpr fixed_string class_name = "android/view/contentcapture/DataShareWriteAdapter";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_CONTENTCAPTURE_DATASHAREWRITEADAPTER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_VIEW_CONTENTCAPTURE_DATASHAREWRITEADAPTER)
#define SCAPIX_JAVA_API_ANDROID_VIEW_CONTENTCAPTURE_DATASHAREWRITEADAPTER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/os/ParcelFileDescriptor.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::view::contentcapture::DataShareWriteAdapter : public jni::object_base<"android/view/contentcapture/DataShareWriteAdapter",
	java::lang::Object>
{
public:

	void onWrite(jni::ref<android::os::ParcelFileDescriptor> p1) { return call_method<"onWrite", void>(p1); }
	void onRejected() { return call_method<"onRejected", void>(); }
	void onError(jint errorCode) { return call_method<"onError", void>(errorCode); }

protected:

	DataShareWriteAdapter(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_CONTENTCAPTURE_DATASHAREWRITEADAPTER
