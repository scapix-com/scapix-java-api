// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_VIEW_KEYBOARDSHORTCUTINFO_FWD
#define SCAPIX_JAVA_API_ANDROID_VIEW_KEYBOARDSHORTCUTINFO_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::view { class KeyboardShortcutInfo; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::view::KeyboardShortcutInfo>
{
	static constexpr fixed_string class_name = "android/view/KeyboardShortcutInfo";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_KEYBOARDSHORTCUTINFO_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_VIEW_KEYBOARDSHORTCUTINFO)
#define SCAPIX_JAVA_API_ANDROID_VIEW_KEYBOARDSHORTCUTINFO

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::view::KeyboardShortcutInfo : public jni::object_base<"android/view/KeyboardShortcutInfo",
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }

	static jni::ref<android::view::KeyboardShortcutInfo> new_object(jni::ref<java::lang::CharSequence> label, jint keycode, jint modifiers) { return base_::new_object(label, keycode, modifiers); }
	static jni::ref<android::view::KeyboardShortcutInfo> new_object(jni::ref<java::lang::CharSequence> label, jchar baseCharacter, jint modifiers) { return base_::new_object(label, baseCharacter, modifiers); }
	jni::ref<java::lang::CharSequence> getLabel() { return call_method<"getLabel", jni::ref<java::lang::CharSequence>>(); }
	jint getKeycode() { return call_method<"getKeycode", jint>(); }
	jchar getBaseCharacter() { return call_method<"getBaseCharacter", jchar>(); }
	jint getModifiers() { return call_method<"getModifiers", jint>(); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	void writeToParcel(jni::ref<android::os::Parcel> dest, jint flags) { return call_method<"writeToParcel", void>(dest, flags); }

protected:

	KeyboardShortcutInfo(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_KEYBOARDSHORTCUTINFO
