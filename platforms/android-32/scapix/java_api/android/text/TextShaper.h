// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_TEXT_TEXTSHAPER_FWD
#define SCAPIX_JAVA_API_ANDROID_TEXT_TEXTSHAPER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::text { class TextShaper; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::text::TextShaper>
{
	static constexpr fixed_string class_name = "android/text/TextShaper";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEXT_TEXTSHAPER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_TEXT_TEXTSHAPER)
#define SCAPIX_JAVA_API_ANDROID_TEXT_TEXTSHAPER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/text/TextDirectionHeuristic.h>
#include <scapix/java_api/android/text/TextPaint.h>
#include <scapix/java_api/android/text/TextShaper_GlyphsConsumer.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::text::TextShaper : public jni::object_base<"android/text/TextShaper",
	java::lang::Object>
{
public:

	using GlyphsConsumer = TextShaper_GlyphsConsumer;

	static void shapeText(jni::ref<java::lang::CharSequence> text, jint start, jint count, jni::ref<android::text::TextDirectionHeuristic> dir, jni::ref<android::text::TextPaint> paint, jni::ref<android::text::TextShaper_GlyphsConsumer> consumer) { return call_static_method<"shapeText", void>(text, start, count, dir, paint, consumer); }

protected:

	TextShaper(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEXT_TEXTSHAPER
