// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/app/Service.h>

#ifndef SCAPIX_JAVA_API_ANDROID_LOCATION_SETTINGINJECTORSERVICE_FWD
#define SCAPIX_JAVA_API_ANDROID_LOCATION_SETTINGINJECTORSERVICE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::location { class SettingInjectorService; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::location::SettingInjectorService>
{
	static constexpr fixed_string class_name = "android/location/SettingInjectorService";
	using base_classes = std::tuple<scapix::java_api::android::app::Service>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_LOCATION_SETTINGINJECTORSERVICE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_LOCATION_SETTINGINJECTORSERVICE)
#define SCAPIX_JAVA_API_ANDROID_LOCATION_SETTINGINJECTORSERVICE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/content/Intent.h>
#include <scapix/java_api/android/os/IBinder.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::location::SettingInjectorService : public jni::object_base<"android/location/SettingInjectorService",
	android::app::Service>
{
public:

	static jni::ref<java::lang::String> ACTION_INJECTED_SETTING_CHANGED() { return get_static_field<"ACTION_INJECTED_SETTING_CHANGED", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ACTION_SERVICE_INTENT() { return get_static_field<"ACTION_SERVICE_INTENT", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ATTRIBUTES_NAME() { return get_static_field<"ATTRIBUTES_NAME", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> META_DATA_NAME() { return get_static_field<"META_DATA_NAME", jni::ref<java::lang::String>>(); }

	static jni::ref<android::location::SettingInjectorService> new_object(jni::ref<java::lang::String> name) { return base_::new_object(name); }
	jni::ref<android::os::IBinder> onBind(jni::ref<android::content::Intent> intent) { return call_method<"onBind", jni::ref<android::os::IBinder>>(intent); }
	void onStart(jni::ref<android::content::Intent> intent, jint startId) { return call_method<"onStart", void>(intent, startId); }
	jint onStartCommand(jni::ref<android::content::Intent> intent, jint flags, jint startId) { return call_method<"onStartCommand", jint>(intent, flags, startId); }
	static void refreshSettings(jni::ref<android::content::Context> context) { return call_static_method<"refreshSettings", void>(context); }

protected:

	SettingInjectorService(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_LOCATION_SETTINGINJECTORSERVICE
