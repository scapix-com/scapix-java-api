// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/content/ContextWrapper.h>

#ifndef SCAPIX_JAVA_API_ANDROID_CONTENT_MUTABLECONTEXTWRAPPER_FWD
#define SCAPIX_JAVA_API_ANDROID_CONTENT_MUTABLECONTEXTWRAPPER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::content { class MutableContextWrapper; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::content::MutableContextWrapper>
{
	static constexpr fixed_string class_name = "android/content/MutableContextWrapper";
	using base_classes = std::tuple<scapix::java_api::android::content::ContextWrapper>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_CONTENT_MUTABLECONTEXTWRAPPER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_CONTENT_MUTABLECONTEXTWRAPPER)
#define SCAPIX_JAVA_API_ANDROID_CONTENT_MUTABLECONTEXTWRAPPER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/Context.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::content::MutableContextWrapper : public jni::object_base<"android/content/MutableContextWrapper",
	android::content::ContextWrapper>
{
public:

	static jni::ref<android::content::MutableContextWrapper> new_object(jni::ref<android::content::Context> base) { return base_::new_object(base); }
	void setBaseContext(jni::ref<android::content::Context> base) { return call_method<"setBaseContext", void>(base); }

protected:

	MutableContextWrapper(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_CONTENT_MUTABLECONTEXTWRAPPER
