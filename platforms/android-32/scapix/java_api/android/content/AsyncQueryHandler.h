// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/os/Handler.h>

#ifndef SCAPIX_JAVA_API_ANDROID_CONTENT_ASYNCQUERYHANDLER_FWD
#define SCAPIX_JAVA_API_ANDROID_CONTENT_ASYNCQUERYHANDLER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::content { class AsyncQueryHandler; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::content::AsyncQueryHandler>
{
	static constexpr fixed_string class_name = "android/content/AsyncQueryHandler";
	using base_classes = std::tuple<scapix::java_api::android::os::Handler>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_CONTENT_ASYNCQUERYHANDLER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_CONTENT_ASYNCQUERYHANDLER)
#define SCAPIX_JAVA_API_ANDROID_CONTENT_ASYNCQUERYHANDLER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/ContentResolver.h>
#include <scapix/java_api/android/content/ContentValues.h>
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/android/os/Message.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::content::AsyncQueryHandler : public jni::object_base<"android/content/AsyncQueryHandler",
	android::os::Handler>
{
public:

	static jni::ref<android::content::AsyncQueryHandler> new_object(jni::ref<android::content::ContentResolver> cr) { return base_::new_object(cr); }
	void startQuery(jint token, jni::ref<java::lang::Object> cookie, jni::ref<android::net::Uri> uri, jni::ref<jni::array<java::lang::String>> projection, jni::ref<java::lang::String> selection, jni::ref<jni::array<java::lang::String>> selectionArgs, jni::ref<java::lang::String> orderBy) { return call_method<"startQuery", void>(token, cookie, uri, projection, selection, selectionArgs, orderBy); }
	void cancelOperation(jint token) { return call_method<"cancelOperation", void>(token); }
	void startInsert(jint token, jni::ref<java::lang::Object> cookie, jni::ref<android::net::Uri> uri, jni::ref<android::content::ContentValues> initialValues) { return call_method<"startInsert", void>(token, cookie, uri, initialValues); }
	void startUpdate(jint token, jni::ref<java::lang::Object> cookie, jni::ref<android::net::Uri> uri, jni::ref<android::content::ContentValues> values, jni::ref<java::lang::String> selection, jni::ref<jni::array<java::lang::String>> selectionArgs) { return call_method<"startUpdate", void>(token, cookie, uri, values, selection, selectionArgs); }
	void startDelete(jint token, jni::ref<java::lang::Object> cookie, jni::ref<android::net::Uri> uri, jni::ref<java::lang::String> selection, jni::ref<jni::array<java::lang::String>> selectionArgs) { return call_method<"startDelete", void>(token, cookie, uri, selection, selectionArgs); }
	void handleMessage(jni::ref<android::os::Message> msg) { return call_method<"handleMessage", void>(msg); }

protected:

	AsyncQueryHandler(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_CONTENT_ASYNCQUERYHANDLER
