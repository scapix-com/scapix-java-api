// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/view/ViewGroup.h>

#ifndef SCAPIX_JAVA_API_ANDROID_WIDGET_RELATIVELAYOUT_FWD
#define SCAPIX_JAVA_API_ANDROID_WIDGET_RELATIVELAYOUT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::widget { class RelativeLayout; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::widget::RelativeLayout>
{
	static constexpr fixed_string class_name = "android/widget/RelativeLayout";
	using base_classes = std::tuple<scapix::java_api::android::view::ViewGroup>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_WIDGET_RELATIVELAYOUT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_WIDGET_RELATIVELAYOUT)
#define SCAPIX_JAVA_API_ANDROID_WIDGET_RELATIVELAYOUT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/widget/RelativeLayout_LayoutParams.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::widget::RelativeLayout : public jni::object_base<"android/widget/RelativeLayout",
	android::view::ViewGroup>
{
public:

	using LayoutParams = RelativeLayout_LayoutParams;

	static jint ABOVE() { return get_static_field<"ABOVE", jint>(); }
	static jint ALIGN_BASELINE() { return get_static_field<"ALIGN_BASELINE", jint>(); }
	static jint ALIGN_BOTTOM() { return get_static_field<"ALIGN_BOTTOM", jint>(); }
	static jint ALIGN_END() { return get_static_field<"ALIGN_END", jint>(); }
	static jint ALIGN_LEFT() { return get_static_field<"ALIGN_LEFT", jint>(); }
	static jint ALIGN_PARENT_BOTTOM() { return get_static_field<"ALIGN_PARENT_BOTTOM", jint>(); }
	static jint ALIGN_PARENT_END() { return get_static_field<"ALIGN_PARENT_END", jint>(); }
	static jint ALIGN_PARENT_LEFT() { return get_static_field<"ALIGN_PARENT_LEFT", jint>(); }
	static jint ALIGN_PARENT_RIGHT() { return get_static_field<"ALIGN_PARENT_RIGHT", jint>(); }
	static jint ALIGN_PARENT_START() { return get_static_field<"ALIGN_PARENT_START", jint>(); }
	static jint ALIGN_PARENT_TOP() { return get_static_field<"ALIGN_PARENT_TOP", jint>(); }
	static jint ALIGN_RIGHT() { return get_static_field<"ALIGN_RIGHT", jint>(); }
	static jint ALIGN_START() { return get_static_field<"ALIGN_START", jint>(); }
	static jint ALIGN_TOP() { return get_static_field<"ALIGN_TOP", jint>(); }
	static jint BELOW() { return get_static_field<"BELOW", jint>(); }
	static jint CENTER_HORIZONTAL() { return get_static_field<"CENTER_HORIZONTAL", jint>(); }
	static jint CENTER_IN_PARENT() { return get_static_field<"CENTER_IN_PARENT", jint>(); }
	static jint CENTER_VERTICAL() { return get_static_field<"CENTER_VERTICAL", jint>(); }
	static jint END_OF() { return get_static_field<"END_OF", jint>(); }
	static jint LEFT_OF() { return get_static_field<"LEFT_OF", jint>(); }
	static jint RIGHT_OF() { return get_static_field<"RIGHT_OF", jint>(); }
	static jint START_OF() { return get_static_field<"START_OF", jint>(); }
	static jint TRUE() { return get_static_field<"TRUE", jint>(); }

	static jni::ref<android::widget::RelativeLayout> new_object(jni::ref<android::content::Context> context) { return base_::new_object(context); }
	static jni::ref<android::widget::RelativeLayout> new_object(jni::ref<android::content::Context> context, jni::ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
	static jni::ref<android::widget::RelativeLayout> new_object(jni::ref<android::content::Context> context, jni::ref<android::util::AttributeSet> attrs, jint defStyleAttr) { return base_::new_object(context, attrs, defStyleAttr); }
	static jni::ref<android::widget::RelativeLayout> new_object(jni::ref<android::content::Context> context, jni::ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes) { return base_::new_object(context, attrs, defStyleAttr, defStyleRes); }
	jboolean shouldDelayChildPressedState() { return call_method<"shouldDelayChildPressedState", jboolean>(); }
	void setIgnoreGravity(jint viewId) { return call_method<"setIgnoreGravity", void>(viewId); }
	jint getIgnoreGravity() { return call_method<"getIgnoreGravity", jint>(); }
	jint getGravity() { return call_method<"getGravity", jint>(); }
	void setGravity(jint gravity) { return call_method<"setGravity", void>(gravity); }
	void setHorizontalGravity(jint horizontalGravity) { return call_method<"setHorizontalGravity", void>(horizontalGravity); }
	void setVerticalGravity(jint verticalGravity) { return call_method<"setVerticalGravity", void>(verticalGravity); }
	jint getBaseline() { return call_method<"getBaseline", jint>(); }
	void requestLayout() { return call_method<"requestLayout", void>(); }
	jni::ref<android::widget::RelativeLayout_LayoutParams> generateLayoutParams(jni::ref<android::util::AttributeSet> attrs) { return call_method<"generateLayoutParams", jni::ref<android::widget::RelativeLayout_LayoutParams>>(attrs); }
	jni::ref<java::lang::CharSequence> getAccessibilityClassName() { return call_method<"getAccessibilityClassName", jni::ref<java::lang::CharSequence>>(); }

protected:

	RelativeLayout(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_WIDGET_RELATIVELAYOUT
