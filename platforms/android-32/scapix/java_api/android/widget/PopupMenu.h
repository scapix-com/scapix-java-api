// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_WIDGET_POPUPMENU_FWD
#define SCAPIX_JAVA_API_ANDROID_WIDGET_POPUPMENU_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::widget { class PopupMenu; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::widget::PopupMenu>
{
	static constexpr fixed_string class_name = "android/widget/PopupMenu";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_WIDGET_POPUPMENU_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_WIDGET_POPUPMENU)
#define SCAPIX_JAVA_API_ANDROID_WIDGET_POPUPMENU

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/view/Menu.h>
#include <scapix/java_api/android/view/MenuInflater.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/android/view/View_OnTouchListener.h>
#include <scapix/java_api/android/widget/PopupMenu_OnDismissListener.h>
#include <scapix/java_api/android/widget/PopupMenu_OnMenuItemClickListener.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::widget::PopupMenu : public jni::object_base<"android/widget/PopupMenu",
	java::lang::Object>
{
public:

	using OnMenuItemClickListener = PopupMenu_OnMenuItemClickListener;
	using OnDismissListener = PopupMenu_OnDismissListener;

	static jni::ref<android::widget::PopupMenu> new_object(jni::ref<android::content::Context> context, jni::ref<android::view::View> anchor) { return base_::new_object(context, anchor); }
	static jni::ref<android::widget::PopupMenu> new_object(jni::ref<android::content::Context> context, jni::ref<android::view::View> anchor, jint gravity) { return base_::new_object(context, anchor, gravity); }
	static jni::ref<android::widget::PopupMenu> new_object(jni::ref<android::content::Context> context, jni::ref<android::view::View> anchor, jint gravity, jint popupStyleAttr, jint popupStyleRes) { return base_::new_object(context, anchor, gravity, popupStyleAttr, popupStyleRes); }
	void setGravity(jint gravity) { return call_method<"setGravity", void>(gravity); }
	jint getGravity() { return call_method<"getGravity", jint>(); }
	jni::ref<android::view::View_OnTouchListener> getDragToOpenListener() { return call_method<"getDragToOpenListener", jni::ref<android::view::View_OnTouchListener>>(); }
	jni::ref<android::view::Menu> getMenu() { return call_method<"getMenu", jni::ref<android::view::Menu>>(); }
	jni::ref<android::view::MenuInflater> getMenuInflater() { return call_method<"getMenuInflater", jni::ref<android::view::MenuInflater>>(); }
	void inflate(jint menuRes) { return call_method<"inflate", void>(menuRes); }
	void show() { return call_method<"show", void>(); }
	void dismiss() { return call_method<"dismiss", void>(); }
	void setOnMenuItemClickListener(jni::ref<android::widget::PopupMenu_OnMenuItemClickListener> listener) { return call_method<"setOnMenuItemClickListener", void>(listener); }
	void setOnDismissListener(jni::ref<android::widget::PopupMenu_OnDismissListener> listener) { return call_method<"setOnDismissListener", void>(listener); }
	void setForceShowIcon(jboolean forceShowIcon) { return call_method<"setForceShowIcon", void>(forceShowIcon); }

protected:

	PopupMenu(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_WIDGET_POPUPMENU
