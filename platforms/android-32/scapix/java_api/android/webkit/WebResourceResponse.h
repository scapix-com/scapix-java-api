// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_WEBKIT_WEBRESOURCERESPONSE_FWD
#define SCAPIX_JAVA_API_ANDROID_WEBKIT_WEBRESOURCERESPONSE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::webkit { class WebResourceResponse; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::webkit::WebResourceResponse>
{
	static constexpr fixed_string class_name = "android/webkit/WebResourceResponse";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_WEBKIT_WEBRESOURCERESPONSE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_WEBKIT_WEBRESOURCERESPONSE)
#define SCAPIX_JAVA_API_ANDROID_WEBKIT_WEBRESOURCERESPONSE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Map.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::webkit::WebResourceResponse : public jni::object_base<"android/webkit/WebResourceResponse",
	java::lang::Object>
{
public:

	static jni::ref<android::webkit::WebResourceResponse> new_object(jni::ref<java::lang::String> mimeType, jni::ref<java::lang::String> encoding, jni::ref<java::io::InputStream> data) { return base_::new_object(mimeType, encoding, data); }
	static jni::ref<android::webkit::WebResourceResponse> new_object(jni::ref<java::lang::String> mimeType, jni::ref<java::lang::String> encoding, jint statusCode, jni::ref<java::lang::String> reasonPhrase, jni::ref<java::util::Map> responseHeaders, jni::ref<java::io::InputStream> data) { return base_::new_object(mimeType, encoding, statusCode, reasonPhrase, responseHeaders, data); }
	void setMimeType(jni::ref<java::lang::String> mimeType) { return call_method<"setMimeType", void>(mimeType); }
	jni::ref<java::lang::String> getMimeType() { return call_method<"getMimeType", jni::ref<java::lang::String>>(); }
	void setEncoding(jni::ref<java::lang::String> encoding) { return call_method<"setEncoding", void>(encoding); }
	jni::ref<java::lang::String> getEncoding() { return call_method<"getEncoding", jni::ref<java::lang::String>>(); }
	void setStatusCodeAndReasonPhrase(jint statusCode, jni::ref<java::lang::String> reasonPhrase) { return call_method<"setStatusCodeAndReasonPhrase", void>(statusCode, reasonPhrase); }
	jint getStatusCode() { return call_method<"getStatusCode", jint>(); }
	jni::ref<java::lang::String> getReasonPhrase() { return call_method<"getReasonPhrase", jni::ref<java::lang::String>>(); }
	void setResponseHeaders(jni::ref<java::util::Map> headers) { return call_method<"setResponseHeaders", void>(headers); }
	jni::ref<java::util::Map> getResponseHeaders() { return call_method<"getResponseHeaders", jni::ref<java::util::Map>>(); }
	void setData(jni::ref<java::io::InputStream> data) { return call_method<"setData", void>(data); }
	jni::ref<java::io::InputStream> getData() { return call_method<"getData", jni::ref<java::io::InputStream>>(); }

protected:

	WebResourceResponse(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_WEBKIT_WEBRESOURCERESPONSE
