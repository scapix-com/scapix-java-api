// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_UTIL_EVENTLOG_FWD
#define SCAPIX_JAVA_API_ANDROID_UTIL_EVENTLOG_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::util { class EventLog; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::util::EventLog>
{
	static constexpr fixed_string class_name = "android/util/EventLog";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_UTIL_EVENTLOG_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_UTIL_EVENTLOG)
#define SCAPIX_JAVA_API_ANDROID_UTIL_EVENTLOG

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Collection.h>
#include <scapix/java_api/android/util/EventLog_Event.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::util::EventLog : public jni::object_base<"android/util/EventLog",
	java::lang::Object>
{
public:

	using Event = EventLog_Event;

	static jint writeEvent(jint p1, jint p2) { return call_static_method<"writeEvent", jint>(p1, p2); }
	static jint writeEvent(jint p1, jlong p2) { return call_static_method<"writeEvent", jint>(p1, p2); }
	static jint writeEvent(jint p1, jfloat p2) { return call_static_method<"writeEvent", jint>(p1, p2); }
	static jint writeEvent(jint p1, jni::ref<java::lang::String> p2) { return call_static_method<"writeEvent", jint>(p1, p2); }
	static jint writeEvent(jint p1, jni::ref<jni::array<java::lang::Object>> p2) { return call_static_method<"writeEvent", jint>(p1, p2); }
	static void readEvents(jni::ref<jni::array<jint>> p1, jni::ref<java::util::Collection> p2) { return call_static_method<"readEvents", void>(p1, p2); }
	static jni::ref<java::lang::String> getTagName(jint tag) { return call_static_method<"getTagName", jni::ref<java::lang::String>>(tag); }
	static jint getTagCode(jni::ref<java::lang::String> name) { return call_static_method<"getTagCode", jint>(name); }

protected:

	EventLog(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_UTIL_EVENTLOG
