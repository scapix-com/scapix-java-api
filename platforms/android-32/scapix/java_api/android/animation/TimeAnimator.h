// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/animation/ValueAnimator.h>

#ifndef SCAPIX_JAVA_API_ANDROID_ANIMATION_TIMEANIMATOR_FWD
#define SCAPIX_JAVA_API_ANDROID_ANIMATION_TIMEANIMATOR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::animation { class TimeAnimator; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::animation::TimeAnimator>
{
	static constexpr fixed_string class_name = "android/animation/TimeAnimator";
	using base_classes = std::tuple<scapix::java_api::android::animation::ValueAnimator>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ANIMATION_TIMEANIMATOR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_ANIMATION_TIMEANIMATOR)
#define SCAPIX_JAVA_API_ANDROID_ANIMATION_TIMEANIMATOR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/animation/TimeAnimator_TimeListener.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::animation::TimeAnimator : public jni::object_base<"android/animation/TimeAnimator",
	android::animation::ValueAnimator>
{
public:

	using TimeListener = TimeAnimator_TimeListener;

	static jni::ref<android::animation::TimeAnimator> new_object() { return base_::new_object(); }
	void start() { return call_method<"start", void>(); }
	void setCurrentPlayTime(jlong playTime) { return call_method<"setCurrentPlayTime", void>(playTime); }
	void setTimeListener(jni::ref<android::animation::TimeAnimator_TimeListener> listener) { return call_method<"setTimeListener", void>(listener); }

protected:

	TimeAnimator(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ANIMATION_TIMEANIMATOR
