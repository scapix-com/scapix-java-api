// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_OS_FILEUTILS_FWD
#define SCAPIX_JAVA_API_ANDROID_OS_FILEUTILS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::os { class FileUtils; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::os::FileUtils>
{
	static constexpr fixed_string class_name = "android/os/FileUtils";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_OS_FILEUTILS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_OS_FILEUTILS)
#define SCAPIX_JAVA_API_ANDROID_OS_FILEUTILS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/os/CancellationSignal.h>
#include <scapix/java_api/android/os/FileUtils_ProgressListener.h>
#include <scapix/java_api/java/io/FileDescriptor.h>
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/io/OutputStream.h>
#include <scapix/java_api/java/lang/AutoCloseable.h>
#include <scapix/java_api/java/util/concurrent/Executor.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::os::FileUtils : public jni::object_base<"android/os/FileUtils",
	java::lang::Object>
{
public:

	using ProgressListener = FileUtils_ProgressListener;

	static jlong copy(jni::ref<java::io::InputStream> in, jni::ref<java::io::OutputStream> out) { return call_static_method<"copy", jlong>(in, out); }
	static jlong copy(jni::ref<java::io::InputStream> in, jni::ref<java::io::OutputStream> out, jni::ref<android::os::CancellationSignal> signal, jni::ref<java::util::concurrent::Executor> executor, jni::ref<android::os::FileUtils_ProgressListener> listener) { return call_static_method<"copy", jlong>(in, out, signal, executor, listener); }
	static jlong copy(jni::ref<java::io::FileDescriptor> in, jni::ref<java::io::FileDescriptor> out) { return call_static_method<"copy", jlong>(in, out); }
	static jlong copy(jni::ref<java::io::FileDescriptor> in, jni::ref<java::io::FileDescriptor> out, jni::ref<android::os::CancellationSignal> signal, jni::ref<java::util::concurrent::Executor> executor, jni::ref<android::os::FileUtils_ProgressListener> listener) { return call_static_method<"copy", jlong>(in, out, signal, executor, listener); }
	static void closeQuietly(jni::ref<java::lang::AutoCloseable> closeable) { return call_static_method<"closeQuietly", void>(closeable); }
	static void closeQuietly(jni::ref<java::io::FileDescriptor> fd) { return call_static_method<"closeQuietly", void>(fd); }

protected:

	FileUtils(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_OS_FILEUTILS
