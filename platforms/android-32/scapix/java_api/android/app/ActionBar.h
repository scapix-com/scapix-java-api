// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_APP_ACTIONBAR_FWD
#define SCAPIX_JAVA_API_ANDROID_APP_ACTIONBAR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::app { class ActionBar; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::app::ActionBar>
{
	static constexpr fixed_string class_name = "android/app/ActionBar";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_ACTIONBAR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_APP_ACTIONBAR)
#define SCAPIX_JAVA_API_ANDROID_APP_ACTIONBAR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/app/ActionBar_LayoutParams.h>
#include <scapix/java_api/android/app/ActionBar_OnMenuVisibilityListener.h>
#include <scapix/java_api/android/app/ActionBar_OnNavigationListener.h>
#include <scapix/java_api/android/app/ActionBar_Tab.h>
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/graphics/drawable/Drawable.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/android/widget/SpinnerAdapter.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/android/app/ActionBar_TabListener.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::app::ActionBar : public jni::object_base<"android/app/ActionBar",
	java::lang::Object>
{
public:

	using TabListener = ActionBar_TabListener;
	using Tab = ActionBar_Tab;
	using OnNavigationListener = ActionBar_OnNavigationListener;
	using OnMenuVisibilityListener = ActionBar_OnMenuVisibilityListener;
	using LayoutParams = ActionBar_LayoutParams;

	static jint DISPLAY_HOME_AS_UP() { return get_static_field<"DISPLAY_HOME_AS_UP", jint>(); }
	static jint DISPLAY_SHOW_CUSTOM() { return get_static_field<"DISPLAY_SHOW_CUSTOM", jint>(); }
	static jint DISPLAY_SHOW_HOME() { return get_static_field<"DISPLAY_SHOW_HOME", jint>(); }
	static jint DISPLAY_SHOW_TITLE() { return get_static_field<"DISPLAY_SHOW_TITLE", jint>(); }
	static jint DISPLAY_USE_LOGO() { return get_static_field<"DISPLAY_USE_LOGO", jint>(); }
	static jint NAVIGATION_MODE_LIST() { return get_static_field<"NAVIGATION_MODE_LIST", jint>(); }
	static jint NAVIGATION_MODE_STANDARD() { return get_static_field<"NAVIGATION_MODE_STANDARD", jint>(); }
	static jint NAVIGATION_MODE_TABS() { return get_static_field<"NAVIGATION_MODE_TABS", jint>(); }

	static jni::ref<android::app::ActionBar> new_object() { return base_::new_object(); }
	void setCustomView(jni::ref<android::view::View> p1) { return call_method<"setCustomView", void>(p1); }
	void setCustomView(jni::ref<android::view::View> p1, jni::ref<android::app::ActionBar_LayoutParams> p2) { return call_method<"setCustomView", void>(p1, p2); }
	void setCustomView(jint p1) { return call_method<"setCustomView", void>(p1); }
	void setIcon(jint p1) { return call_method<"setIcon", void>(p1); }
	void setIcon(jni::ref<android::graphics::drawable::Drawable> p1) { return call_method<"setIcon", void>(p1); }
	void setLogo(jint p1) { return call_method<"setLogo", void>(p1); }
	void setLogo(jni::ref<android::graphics::drawable::Drawable> p1) { return call_method<"setLogo", void>(p1); }
	void setListNavigationCallbacks(jni::ref<android::widget::SpinnerAdapter> p1, jni::ref<android::app::ActionBar_OnNavigationListener> p2) { return call_method<"setListNavigationCallbacks", void>(p1, p2); }
	void setSelectedNavigationItem(jint p1) { return call_method<"setSelectedNavigationItem", void>(p1); }
	jint getSelectedNavigationIndex() { return call_method<"getSelectedNavigationIndex", jint>(); }
	jint getNavigationItemCount() { return call_method<"getNavigationItemCount", jint>(); }
	void setTitle(jni::ref<java::lang::CharSequence> p1) { return call_method<"setTitle", void>(p1); }
	void setTitle(jint p1) { return call_method<"setTitle", void>(p1); }
	void setSubtitle(jni::ref<java::lang::CharSequence> p1) { return call_method<"setSubtitle", void>(p1); }
	void setSubtitle(jint p1) { return call_method<"setSubtitle", void>(p1); }
	void setDisplayOptions(jint p1) { return call_method<"setDisplayOptions", void>(p1); }
	void setDisplayOptions(jint p1, jint p2) { return call_method<"setDisplayOptions", void>(p1, p2); }
	void setDisplayUseLogoEnabled(jboolean p1) { return call_method<"setDisplayUseLogoEnabled", void>(p1); }
	void setDisplayShowHomeEnabled(jboolean p1) { return call_method<"setDisplayShowHomeEnabled", void>(p1); }
	void setDisplayHomeAsUpEnabled(jboolean p1) { return call_method<"setDisplayHomeAsUpEnabled", void>(p1); }
	void setDisplayShowTitleEnabled(jboolean p1) { return call_method<"setDisplayShowTitleEnabled", void>(p1); }
	void setDisplayShowCustomEnabled(jboolean p1) { return call_method<"setDisplayShowCustomEnabled", void>(p1); }
	void setBackgroundDrawable(jni::ref<android::graphics::drawable::Drawable> p1) { return call_method<"setBackgroundDrawable", void>(p1); }
	void setStackedBackgroundDrawable(jni::ref<android::graphics::drawable::Drawable> d) { return call_method<"setStackedBackgroundDrawable", void>(d); }
	void setSplitBackgroundDrawable(jni::ref<android::graphics::drawable::Drawable> d) { return call_method<"setSplitBackgroundDrawable", void>(d); }
	jni::ref<android::view::View> getCustomView() { return call_method<"getCustomView", jni::ref<android::view::View>>(); }
	jni::ref<java::lang::CharSequence> getTitle() { return call_method<"getTitle", jni::ref<java::lang::CharSequence>>(); }
	jni::ref<java::lang::CharSequence> getSubtitle() { return call_method<"getSubtitle", jni::ref<java::lang::CharSequence>>(); }
	jint getNavigationMode() { return call_method<"getNavigationMode", jint>(); }
	void setNavigationMode(jint p1) { return call_method<"setNavigationMode", void>(p1); }
	jint getDisplayOptions() { return call_method<"getDisplayOptions", jint>(); }
	jni::ref<android::app::ActionBar_Tab> newTab() { return call_method<"newTab", jni::ref<android::app::ActionBar_Tab>>(); }
	void addTab(jni::ref<android::app::ActionBar_Tab> p1) { return call_method<"addTab", void>(p1); }
	void addTab(jni::ref<android::app::ActionBar_Tab> p1, jboolean p2) { return call_method<"addTab", void>(p1, p2); }
	void addTab(jni::ref<android::app::ActionBar_Tab> p1, jint p2) { return call_method<"addTab", void>(p1, p2); }
	void addTab(jni::ref<android::app::ActionBar_Tab> p1, jint p2, jboolean p3) { return call_method<"addTab", void>(p1, p2, p3); }
	void removeTab(jni::ref<android::app::ActionBar_Tab> p1) { return call_method<"removeTab", void>(p1); }
	void removeTabAt(jint p1) { return call_method<"removeTabAt", void>(p1); }
	void removeAllTabs() { return call_method<"removeAllTabs", void>(); }
	void selectTab(jni::ref<android::app::ActionBar_Tab> p1) { return call_method<"selectTab", void>(p1); }
	jni::ref<android::app::ActionBar_Tab> getSelectedTab() { return call_method<"getSelectedTab", jni::ref<android::app::ActionBar_Tab>>(); }
	jni::ref<android::app::ActionBar_Tab> getTabAt(jint p1) { return call_method<"getTabAt", jni::ref<android::app::ActionBar_Tab>>(p1); }
	jint getTabCount() { return call_method<"getTabCount", jint>(); }
	jint getHeight() { return call_method<"getHeight", jint>(); }
	void show() { return call_method<"show", void>(); }
	void hide() { return call_method<"hide", void>(); }
	jboolean isShowing() { return call_method<"isShowing", jboolean>(); }
	void addOnMenuVisibilityListener(jni::ref<android::app::ActionBar_OnMenuVisibilityListener> p1) { return call_method<"addOnMenuVisibilityListener", void>(p1); }
	void removeOnMenuVisibilityListener(jni::ref<android::app::ActionBar_OnMenuVisibilityListener> p1) { return call_method<"removeOnMenuVisibilityListener", void>(p1); }
	void setHomeButtonEnabled(jboolean enabled) { return call_method<"setHomeButtonEnabled", void>(enabled); }
	jni::ref<android::content::Context> getThemedContext() { return call_method<"getThemedContext", jni::ref<android::content::Context>>(); }
	void setHomeAsUpIndicator(jni::ref<android::graphics::drawable::Drawable> indicator) { return call_method<"setHomeAsUpIndicator", void>(indicator); }
	void setHomeAsUpIndicator(jint resId) { return call_method<"setHomeAsUpIndicator", void>(resId); }
	void setHomeActionContentDescription(jni::ref<java::lang::CharSequence> description) { return call_method<"setHomeActionContentDescription", void>(description); }
	void setHomeActionContentDescription(jint resId) { return call_method<"setHomeActionContentDescription", void>(resId); }
	void setHideOnContentScrollEnabled(jboolean hideOnContentScroll) { return call_method<"setHideOnContentScrollEnabled", void>(hideOnContentScroll); }
	jboolean isHideOnContentScrollEnabled() { return call_method<"isHideOnContentScrollEnabled", jboolean>(); }
	jint getHideOffset() { return call_method<"getHideOffset", jint>(); }
	void setHideOffset(jint offset) { return call_method<"setHideOffset", void>(offset); }
	void setElevation(jfloat elevation) { return call_method<"setElevation", void>(elevation); }
	jfloat getElevation() { return call_method<"getElevation", jfloat>(); }

protected:

	ActionBar(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_ACTIONBAR
