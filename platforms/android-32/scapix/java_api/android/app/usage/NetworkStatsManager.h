// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_APP_USAGE_NETWORKSTATSMANAGER_FWD
#define SCAPIX_JAVA_API_ANDROID_APP_USAGE_NETWORKSTATSMANAGER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::app::usage { class NetworkStatsManager; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::app::usage::NetworkStatsManager>
{
	static constexpr fixed_string class_name = "android/app/usage/NetworkStatsManager";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_USAGE_NETWORKSTATSMANAGER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_APP_USAGE_NETWORKSTATSMANAGER)
#define SCAPIX_JAVA_API_ANDROID_APP_USAGE_NETWORKSTATSMANAGER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/app/usage/NetworkStats.h>
#include <scapix/java_api/android/app/usage/NetworkStats_Bucket.h>
#include <scapix/java_api/android/app/usage/NetworkStatsManager_UsageCallback.h>
#include <scapix/java_api/android/os/Handler.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::app::usage::NetworkStatsManager : public jni::object_base<"android/app/usage/NetworkStatsManager",
	java::lang::Object>
{
public:

	using UsageCallback = NetworkStatsManager_UsageCallback;

	jni::ref<android::app::usage::NetworkStats_Bucket> querySummaryForDevice(jint networkType, jni::ref<java::lang::String> subscriberId, jlong startTime, jlong p4) { return call_method<"querySummaryForDevice", jni::ref<android::app::usage::NetworkStats_Bucket>>(networkType, subscriberId, startTime, p4); }
	jni::ref<android::app::usage::NetworkStats_Bucket> querySummaryForUser(jint networkType, jni::ref<java::lang::String> subscriberId, jlong startTime, jlong p4) { return call_method<"querySummaryForUser", jni::ref<android::app::usage::NetworkStats_Bucket>>(networkType, subscriberId, startTime, p4); }
	jni::ref<android::app::usage::NetworkStats> querySummary(jint networkType, jni::ref<java::lang::String> subscriberId, jlong startTime, jlong p4) { return call_method<"querySummary", jni::ref<android::app::usage::NetworkStats>>(networkType, subscriberId, startTime, p4); }
	jni::ref<android::app::usage::NetworkStats> queryDetailsForUid(jint networkType, jni::ref<java::lang::String> subscriberId, jlong startTime, jlong p4, jint endTime) { return call_method<"queryDetailsForUid", jni::ref<android::app::usage::NetworkStats>>(networkType, subscriberId, startTime, p4, endTime); }
	jni::ref<android::app::usage::NetworkStats> queryDetailsForUidTag(jint networkType, jni::ref<java::lang::String> subscriberId, jlong startTime, jlong p4, jint endTime, jint p6) { return call_method<"queryDetailsForUidTag", jni::ref<android::app::usage::NetworkStats>>(networkType, subscriberId, startTime, p4, endTime, p6); }
	jni::ref<android::app::usage::NetworkStats> queryDetailsForUidTagState(jint networkType, jni::ref<java::lang::String> subscriberId, jlong startTime, jlong p4, jint endTime, jint p6, jint uid) { return call_method<"queryDetailsForUidTagState", jni::ref<android::app::usage::NetworkStats>>(networkType, subscriberId, startTime, p4, endTime, p6, uid); }
	jni::ref<android::app::usage::NetworkStats> queryDetails(jint networkType, jni::ref<java::lang::String> subscriberId, jlong startTime, jlong p4) { return call_method<"queryDetails", jni::ref<android::app::usage::NetworkStats>>(networkType, subscriberId, startTime, p4); }
	void registerUsageCallback(jint networkType, jni::ref<java::lang::String> subscriberId, jlong thresholdBytes, jni::ref<android::app::usage::NetworkStatsManager_UsageCallback> p4) { return call_method<"registerUsageCallback", void>(networkType, subscriberId, thresholdBytes, p4); }
	void registerUsageCallback(jint networkType, jni::ref<java::lang::String> subscriberId, jlong thresholdBytes, jni::ref<android::app::usage::NetworkStatsManager_UsageCallback> p4, jni::ref<android::os::Handler> callback) { return call_method<"registerUsageCallback", void>(networkType, subscriberId, thresholdBytes, p4, callback); }
	void unregisterUsageCallback(jni::ref<android::app::usage::NetworkStatsManager_UsageCallback> callback) { return call_method<"unregisterUsageCallback", void>(callback); }

protected:

	NetworkStatsManager(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_USAGE_NETWORKSTATSMANAGER
