// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_APP_APPSEARCH_SEARCHSPEC_FWD
#define SCAPIX_JAVA_API_ANDROID_APP_APPSEARCH_SEARCHSPEC_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::app::appsearch { class SearchSpec; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::app::appsearch::SearchSpec>
{
	static constexpr fixed_string class_name = "android/app/appsearch/SearchSpec";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_APPSEARCH_SEARCHSPEC_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_APP_APPSEARCH_SEARCHSPEC)
#define SCAPIX_JAVA_API_ANDROID_APP_APPSEARCH_SEARCHSPEC

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/java/util/Map.h>
#include <scapix/java_api/android/app/appsearch/SearchSpec_Builder.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::app::appsearch::SearchSpec : public jni::object_base<"android/app/appsearch/SearchSpec",
	java::lang::Object>
{
public:

	using Builder = SearchSpec_Builder;

	static jint GROUPING_TYPE_PER_NAMESPACE() { return get_static_field<"GROUPING_TYPE_PER_NAMESPACE", jint>(); }
	static jint GROUPING_TYPE_PER_PACKAGE() { return get_static_field<"GROUPING_TYPE_PER_PACKAGE", jint>(); }
	static jint ORDER_ASCENDING() { return get_static_field<"ORDER_ASCENDING", jint>(); }
	static jint ORDER_DESCENDING() { return get_static_field<"ORDER_DESCENDING", jint>(); }
	static jni::ref<java::lang::String> PROJECTION_SCHEMA_TYPE_WILDCARD() { return get_static_field<"PROJECTION_SCHEMA_TYPE_WILDCARD", jni::ref<java::lang::String>>(); }
	static jint RANKING_STRATEGY_CREATION_TIMESTAMP() { return get_static_field<"RANKING_STRATEGY_CREATION_TIMESTAMP", jint>(); }
	static jint RANKING_STRATEGY_DOCUMENT_SCORE() { return get_static_field<"RANKING_STRATEGY_DOCUMENT_SCORE", jint>(); }
	static jint RANKING_STRATEGY_NONE() { return get_static_field<"RANKING_STRATEGY_NONE", jint>(); }
	static jint RANKING_STRATEGY_RELEVANCE_SCORE() { return get_static_field<"RANKING_STRATEGY_RELEVANCE_SCORE", jint>(); }
	static jint RANKING_STRATEGY_SYSTEM_USAGE_COUNT() { return get_static_field<"RANKING_STRATEGY_SYSTEM_USAGE_COUNT", jint>(); }
	static jint RANKING_STRATEGY_SYSTEM_USAGE_LAST_USED_TIMESTAMP() { return get_static_field<"RANKING_STRATEGY_SYSTEM_USAGE_LAST_USED_TIMESTAMP", jint>(); }
	static jint RANKING_STRATEGY_USAGE_COUNT() { return get_static_field<"RANKING_STRATEGY_USAGE_COUNT", jint>(); }
	static jint RANKING_STRATEGY_USAGE_LAST_USED_TIMESTAMP() { return get_static_field<"RANKING_STRATEGY_USAGE_LAST_USED_TIMESTAMP", jint>(); }
	static jint TERM_MATCH_EXACT_ONLY() { return get_static_field<"TERM_MATCH_EXACT_ONLY", jint>(); }
	static jint TERM_MATCH_PREFIX() { return get_static_field<"TERM_MATCH_PREFIX", jint>(); }

	jint getTermMatch() { return call_method<"getTermMatch", jint>(); }
	jni::ref<java::util::List> getFilterSchemas() { return call_method<"getFilterSchemas", jni::ref<java::util::List>>(); }
	jni::ref<java::util::List> getFilterNamespaces() { return call_method<"getFilterNamespaces", jni::ref<java::util::List>>(); }
	jni::ref<java::util::List> getFilterPackageNames() { return call_method<"getFilterPackageNames", jni::ref<java::util::List>>(); }
	jint getResultCountPerPage() { return call_method<"getResultCountPerPage", jint>(); }
	jint getRankingStrategy() { return call_method<"getRankingStrategy", jint>(); }
	jint getOrder() { return call_method<"getOrder", jint>(); }
	jint getSnippetCount() { return call_method<"getSnippetCount", jint>(); }
	jint getSnippetCountPerProperty() { return call_method<"getSnippetCountPerProperty", jint>(); }
	jint getMaxSnippetSize() { return call_method<"getMaxSnippetSize", jint>(); }
	jni::ref<java::util::Map> getProjections() { return call_method<"getProjections", jni::ref<java::util::Map>>(); }
	jint getResultGroupingTypeFlags() { return call_method<"getResultGroupingTypeFlags", jint>(); }
	jint getResultGroupingLimit() { return call_method<"getResultGroupingLimit", jint>(); }

protected:

	SearchSpec(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_APPSEARCH_SEARCHSPEC
