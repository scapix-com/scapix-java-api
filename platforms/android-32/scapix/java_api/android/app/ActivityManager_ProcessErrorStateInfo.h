// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_APP_ACTIVITYMANAGER_PROCESSERRORSTATEINFO_FWD
#define SCAPIX_JAVA_API_ANDROID_APP_ACTIVITYMANAGER_PROCESSERRORSTATEINFO_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::app { class ActivityManager_ProcessErrorStateInfo; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::app::ActivityManager_ProcessErrorStateInfo>
{
	static constexpr fixed_string class_name = "android/app/ActivityManager$ProcessErrorStateInfo";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_ACTIVITYMANAGER_PROCESSERRORSTATEINFO_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_APP_ACTIVITYMANAGER_PROCESSERRORSTATEINFO)
#define SCAPIX_JAVA_API_ANDROID_APP_ACTIVITYMANAGER_PROCESSERRORSTATEINFO

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::app::ActivityManager_ProcessErrorStateInfo : public jni::object_base<"android/app/ActivityManager$ProcessErrorStateInfo",
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static jint CRASHED() { return get_static_field<"CRASHED", jint>(); }
	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }
	static jint NOT_RESPONDING() { return get_static_field<"NOT_RESPONDING", jint>(); }
	static jint NO_ERROR() { return get_static_field<"NO_ERROR", jint>(); }
	jint condition() { return get_field<"condition", jint>(); }
	void condition(jint v) { set_field<"condition", jint>(v); }
	jni::ref<jni::array<jbyte>> crashData() { return get_field<"crashData", jni::ref<jni::array<jbyte>>>(); }
	void crashData(jni::ref<jni::array<jbyte>> v) { set_field<"crashData", jni::ref<jni::array<jbyte>>>(v); }
	jni::ref<java::lang::String> longMsg() { return get_field<"longMsg", jni::ref<java::lang::String>>(); }
	void longMsg(jni::ref<java::lang::String> v) { set_field<"longMsg", jni::ref<java::lang::String>>(v); }
	jint pid() { return get_field<"pid", jint>(); }
	void pid(jint v) { set_field<"pid", jint>(v); }
	jni::ref<java::lang::String> processName() { return get_field<"processName", jni::ref<java::lang::String>>(); }
	void processName(jni::ref<java::lang::String> v) { set_field<"processName", jni::ref<java::lang::String>>(v); }
	jni::ref<java::lang::String> shortMsg() { return get_field<"shortMsg", jni::ref<java::lang::String>>(); }
	void shortMsg(jni::ref<java::lang::String> v) { set_field<"shortMsg", jni::ref<java::lang::String>>(v); }
	jni::ref<java::lang::String> stackTrace() { return get_field<"stackTrace", jni::ref<java::lang::String>>(); }
	void stackTrace(jni::ref<java::lang::String> v) { set_field<"stackTrace", jni::ref<java::lang::String>>(v); }
	jni::ref<java::lang::String> tag() { return get_field<"tag", jni::ref<java::lang::String>>(); }
	void tag(jni::ref<java::lang::String> v) { set_field<"tag", jni::ref<java::lang::String>>(v); }
	jint uid() { return get_field<"uid", jint>(); }
	void uid(jint v) { set_field<"uid", jint>(v); }

	static jni::ref<android::app::ActivityManager_ProcessErrorStateInfo> new_object() { return base_::new_object(); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	void writeToParcel(jni::ref<android::os::Parcel> dest, jint flags) { return call_method<"writeToParcel", void>(dest, flags); }
	void readFromParcel(jni::ref<android::os::Parcel> source) { return call_method<"readFromParcel", void>(source); }

protected:

	ActivityManager_ProcessErrorStateInfo(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_ACTIVITYMANAGER_PROCESSERRORSTATEINFO
