// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_R_INTERPOLATOR_FWD
#define SCAPIX_JAVA_API_ANDROID_R_INTERPOLATOR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android { class R_interpolator; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::R_interpolator>
{
	static constexpr fixed_string class_name = "android/R$interpolator";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_R_INTERPOLATOR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_R_INTERPOLATOR)
#define SCAPIX_JAVA_API_ANDROID_R_INTERPOLATOR

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::R_interpolator : public jni::object_base<"android/R$interpolator",
	java::lang::Object>
{
public:

	static jint accelerate_cubic() { return get_static_field<"accelerate_cubic", jint>(); }
	static jint accelerate_decelerate() { return get_static_field<"accelerate_decelerate", jint>(); }
	static jint accelerate_quad() { return get_static_field<"accelerate_quad", jint>(); }
	static jint accelerate_quint() { return get_static_field<"accelerate_quint", jint>(); }
	static jint anticipate() { return get_static_field<"anticipate", jint>(); }
	static jint anticipate_overshoot() { return get_static_field<"anticipate_overshoot", jint>(); }
	static jint bounce() { return get_static_field<"bounce", jint>(); }
	static jint cycle() { return get_static_field<"cycle", jint>(); }
	static jint decelerate_cubic() { return get_static_field<"decelerate_cubic", jint>(); }
	static jint decelerate_quad() { return get_static_field<"decelerate_quad", jint>(); }
	static jint decelerate_quint() { return get_static_field<"decelerate_quint", jint>(); }
	static jint fast_out_extra_slow_in() { return get_static_field<"fast_out_extra_slow_in", jint>(); }
	static jint fast_out_linear_in() { return get_static_field<"fast_out_linear_in", jint>(); }
	static jint fast_out_slow_in() { return get_static_field<"fast_out_slow_in", jint>(); }
	static jint linear() { return get_static_field<"linear", jint>(); }
	static jint linear_out_slow_in() { return get_static_field<"linear_out_slow_in", jint>(); }
	static jint overshoot() { return get_static_field<"overshoot", jint>(); }

	static jni::ref<android::R_interpolator> new_object() { return base_::new_object(); }

protected:

	R_interpolator(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_R_INTERPOLATOR
