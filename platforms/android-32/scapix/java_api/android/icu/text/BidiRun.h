// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_ICU_TEXT_BIDIRUN_FWD
#define SCAPIX_JAVA_API_ANDROID_ICU_TEXT_BIDIRUN_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::icu::text { class BidiRun; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::icu::text::BidiRun>
{
	static constexpr fixed_string class_name = "android/icu/text/BidiRun";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_TEXT_BIDIRUN_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_ICU_TEXT_BIDIRUN)
#define SCAPIX_JAVA_API_ANDROID_ICU_TEXT_BIDIRUN

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::icu::text::BidiRun : public jni::object_base<"android/icu/text/BidiRun",
	java::lang::Object>
{
public:

	jint getStart() { return call_method<"getStart", jint>(); }
	jint getLimit() { return call_method<"getLimit", jint>(); }
	jint getLength() { return call_method<"getLength", jint>(); }
	jbyte getEmbeddingLevel() { return call_method<"getEmbeddingLevel", jbyte>(); }
	jboolean isOddRun() { return call_method<"isOddRun", jboolean>(); }
	jboolean isEvenRun() { return call_method<"isEvenRun", jboolean>(); }
	jbyte getDirection() { return call_method<"getDirection", jbyte>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	BidiRun(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_TEXT_BIDIRUN
