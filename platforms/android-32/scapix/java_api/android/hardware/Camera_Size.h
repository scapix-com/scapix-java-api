// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA_SIZE_FWD
#define SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA_SIZE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::hardware { class Camera_Size; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::hardware::Camera_Size>
{
	static constexpr fixed_string class_name = "android/hardware/Camera$Size";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA_SIZE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA_SIZE)
#define SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA_SIZE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/hardware/Camera.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::hardware::Camera_Size : public jni::object_base<"android/hardware/Camera$Size",
	java::lang::Object>
{
public:

	jint height() { return get_field<"height", jint>(); }
	void height(jint v) { set_field<"height", jint>(v); }
	jint width() { return get_field<"width", jint>(); }
	void width(jint v) { set_field<"width", jint>(v); }

	static jni::ref<android::hardware::Camera_Size> new_object(jni::ref<android::hardware::Camera> this_0, jint w, jint h) { return base_::new_object(this_0, w, h); }
	jboolean equals(jni::ref<java::lang::Object> obj) { return call_method<"equals", jboolean>(obj); }
	jint hashCode() { return call_method<"hashCode", jint>(); }

protected:

	Camera_Size(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA_SIZE
