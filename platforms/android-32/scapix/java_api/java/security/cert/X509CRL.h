// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/security/cert/CRL.h>
#include <scapix/java_api/java/security/cert/X509Extension.h>

#ifndef SCAPIX_JAVA_API_JAVA_SECURITY_CERT_X509CRL_FWD
#define SCAPIX_JAVA_API_JAVA_SECURITY_CERT_X509CRL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::security::cert { class X509CRL; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::security::cert::X509CRL>
{
	static constexpr fixed_string class_name = "java/security/cert/X509CRL";
	using base_classes = std::tuple<scapix::java_api::java::security::cert::CRL, scapix::java_api::java::security::cert::X509Extension>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_SECURITY_CERT_X509CRL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_SECURITY_CERT_X509CRL)
#define SCAPIX_JAVA_API_JAVA_SECURITY_CERT_X509CRL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/math/BigInteger.h>
#include <scapix/java_api/java/security/Principal.h>
#include <scapix/java_api/java/security/Provider.h>
#include <scapix/java_api/java/security/PublicKey.h>
#include <scapix/java_api/java/security/cert/X509CRLEntry.h>
#include <scapix/java_api/java/security/cert/X509Certificate.h>
#include <scapix/java_api/java/util/Date.h>
#include <scapix/java_api/java/util/Set.h>
#include <scapix/java_api/javax/security/auth/x500/X500Principal.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::security::cert::X509CRL : public jni::object_base<"java/security/cert/X509CRL",
	java::security::cert::CRL,
	java::security::cert::X509Extension>
{
public:

	jboolean equals(jni::ref<java::lang::Object> other) { return call_method<"equals", jboolean>(other); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jni::ref<jni::array<jbyte>> getEncoded() { return call_method<"getEncoded", jni::ref<jni::array<jbyte>>>(); }
	void verify(jni::ref<java::security::PublicKey> p1) { return call_method<"verify", void>(p1); }
	void verify(jni::ref<java::security::PublicKey> p1, jni::ref<java::lang::String> p2) { return call_method<"verify", void>(p1, p2); }
	void verify(jni::ref<java::security::PublicKey> key, jni::ref<java::security::Provider> sigProvider) { return call_method<"verify", void>(key, sigProvider); }
	jint getVersion() { return call_method<"getVersion", jint>(); }
	jni::ref<java::security::Principal> getIssuerDN() { return call_method<"getIssuerDN", jni::ref<java::security::Principal>>(); }
	jni::ref<javax::security::auth::x500::X500Principal> getIssuerX500Principal() { return call_method<"getIssuerX500Principal", jni::ref<javax::security::auth::x500::X500Principal>>(); }
	jni::ref<java::util::Date> getThisUpdate() { return call_method<"getThisUpdate", jni::ref<java::util::Date>>(); }
	jni::ref<java::util::Date> getNextUpdate() { return call_method<"getNextUpdate", jni::ref<java::util::Date>>(); }
	jni::ref<java::security::cert::X509CRLEntry> getRevokedCertificate(jni::ref<java::math::BigInteger> p1) { return call_method<"getRevokedCertificate", jni::ref<java::security::cert::X509CRLEntry>>(p1); }
	jni::ref<java::security::cert::X509CRLEntry> getRevokedCertificate(jni::ref<java::security::cert::X509Certificate> certificate) { return call_method<"getRevokedCertificate", jni::ref<java::security::cert::X509CRLEntry>>(certificate); }
	jni::ref<java::util::Set> getRevokedCertificates() { return call_method<"getRevokedCertificates", jni::ref<java::util::Set>>(); }
	jni::ref<jni::array<jbyte>> getTBSCertList() { return call_method<"getTBSCertList", jni::ref<jni::array<jbyte>>>(); }
	jni::ref<jni::array<jbyte>> getSignature() { return call_method<"getSignature", jni::ref<jni::array<jbyte>>>(); }
	jni::ref<java::lang::String> getSigAlgName() { return call_method<"getSigAlgName", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getSigAlgOID() { return call_method<"getSigAlgOID", jni::ref<java::lang::String>>(); }
	jni::ref<jni::array<jbyte>> getSigAlgParams() { return call_method<"getSigAlgParams", jni::ref<jni::array<jbyte>>>(); }

protected:

	X509CRL(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_SECURITY_CERT_X509CRL
