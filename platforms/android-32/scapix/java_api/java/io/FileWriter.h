// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/io/OutputStreamWriter.h>

#ifndef SCAPIX_JAVA_API_JAVA_IO_FILEWRITER_FWD
#define SCAPIX_JAVA_API_JAVA_IO_FILEWRITER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::io { class FileWriter; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::io::FileWriter>
{
	static constexpr fixed_string class_name = "java/io/FileWriter";
	using base_classes = std::tuple<scapix::java_api::java::io::OutputStreamWriter>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_IO_FILEWRITER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_IO_FILEWRITER)
#define SCAPIX_JAVA_API_JAVA_IO_FILEWRITER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/File.h>
#include <scapix/java_api/java/io/FileDescriptor.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::io::FileWriter : public jni::object_base<"java/io/FileWriter",
	java::io::OutputStreamWriter>
{
public:

	static jni::ref<java::io::FileWriter> new_object(jni::ref<java::lang::String> fileName) { return base_::new_object(fileName); }
	static jni::ref<java::io::FileWriter> new_object(jni::ref<java::lang::String> fileName, jboolean append) { return base_::new_object(fileName, append); }
	static jni::ref<java::io::FileWriter> new_object(jni::ref<java::io::File> file) { return base_::new_object(file); }
	static jni::ref<java::io::FileWriter> new_object(jni::ref<java::io::File> file, jboolean append) { return base_::new_object(file, append); }
	static jni::ref<java::io::FileWriter> new_object(jni::ref<java::io::FileDescriptor> fd) { return base_::new_object(fd); }

protected:

	FileWriter(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_IO_FILEWRITER
