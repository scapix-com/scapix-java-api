// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/io/BufferedReader.h>

#ifndef SCAPIX_JAVA_API_JAVA_IO_LINENUMBERREADER_FWD
#define SCAPIX_JAVA_API_JAVA_IO_LINENUMBERREADER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::io { class LineNumberReader; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::io::LineNumberReader>
{
	static constexpr fixed_string class_name = "java/io/LineNumberReader";
	using base_classes = std::tuple<scapix::java_api::java::io::BufferedReader>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_IO_LINENUMBERREADER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_IO_LINENUMBERREADER)
#define SCAPIX_JAVA_API_JAVA_IO_LINENUMBERREADER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/Reader.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::io::LineNumberReader : public jni::object_base<"java/io/LineNumberReader",
	java::io::BufferedReader>
{
public:

	static jni::ref<java::io::LineNumberReader> new_object(jni::ref<java::io::Reader> in) { return base_::new_object(in); }
	static jni::ref<java::io::LineNumberReader> new_object(jni::ref<java::io::Reader> in, jint size) { return base_::new_object(in, size); }
	jint getLineNumber() { return call_method<"getLineNumber", jint>(); }
	void mark(jint readlimit) { return call_method<"mark", void>(readlimit); }
	jint read() { return call_method<"read", jint>(); }
	jint read(jni::ref<jni::array<jchar>> buffer, jint offset, jint count) { return call_method<"read", jint>(buffer, offset, count); }
	jni::ref<java::lang::String> readLine() { return call_method<"readLine", jni::ref<java::lang::String>>(); }
	void reset() { return call_method<"reset", void>(); }
	void setLineNumber(jint lineNumber) { return call_method<"setLineNumber", void>(lineNumber); }
	jlong skip(jlong charCount) { return call_method<"skip", jlong>(charCount); }

protected:

	LineNumberReader(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_IO_LINENUMBERREADER
