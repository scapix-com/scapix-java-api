// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/util/Calendar.h>

#ifndef SCAPIX_JAVA_API_JAVA_UTIL_GREGORIANCALENDAR_FWD
#define SCAPIX_JAVA_API_JAVA_UTIL_GREGORIANCALENDAR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::util { class GregorianCalendar; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::util::GregorianCalendar>
{
	static constexpr fixed_string class_name = "java/util/GregorianCalendar";
	using base_classes = std::tuple<scapix::java_api::java::util::Calendar>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_GREGORIANCALENDAR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_UTIL_GREGORIANCALENDAR)
#define SCAPIX_JAVA_API_JAVA_UTIL_GREGORIANCALENDAR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/util/Date.h>
#include <scapix/java_api/java/util/Locale.h>
#include <scapix/java_api/java/util/TimeZone.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::util::GregorianCalendar : public jni::object_base<"java/util/GregorianCalendar",
	java::util::Calendar>
{
public:

	static jint AD() { return get_static_field<"AD", jint>(); }
	static jint BC() { return get_static_field<"BC", jint>(); }

	static jni::ref<java::util::GregorianCalendar> new_object() { return base_::new_object(); }
	static jni::ref<java::util::GregorianCalendar> new_object(jint year, jint month, jint day) { return base_::new_object(year, month, day); }
	static jni::ref<java::util::GregorianCalendar> new_object(jint year, jint month, jint day, jint hour, jint minute) { return base_::new_object(year, month, day, hour, minute); }
	static jni::ref<java::util::GregorianCalendar> new_object(jint year, jint month, jint day, jint hour, jint minute, jint second) { return base_::new_object(year, month, day, hour, minute, second); }
	static jni::ref<java::util::GregorianCalendar> new_object(jni::ref<java::util::Locale> locale) { return base_::new_object(locale); }
	static jni::ref<java::util::GregorianCalendar> new_object(jni::ref<java::util::TimeZone> timezone) { return base_::new_object(timezone); }
	static jni::ref<java::util::GregorianCalendar> new_object(jni::ref<java::util::TimeZone> timezone, jni::ref<java::util::Locale> locale) { return base_::new_object(timezone, locale); }
	void add(jint field, jint value) { return call_method<"add", void>(field, value); }
	jboolean equals(jni::ref<java::lang::Object> object) { return call_method<"equals", jboolean>(object); }
	jint getActualMaximum(jint field) { return call_method<"getActualMaximum", jint>(field); }
	jint getActualMinimum(jint field) { return call_method<"getActualMinimum", jint>(field); }
	jint getGreatestMinimum(jint field) { return call_method<"getGreatestMinimum", jint>(field); }
	jni::ref<java::util::Date> getGregorianChange() { return call_method<"getGregorianChange", jni::ref<java::util::Date>>(); }
	jint getLeastMaximum(jint field) { return call_method<"getLeastMaximum", jint>(field); }
	jint getMaximum(jint field) { return call_method<"getMaximum", jint>(field); }
	jint getMinimum(jint field) { return call_method<"getMinimum", jint>(field); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jboolean isLeapYear(jint year) { return call_method<"isLeapYear", jboolean>(year); }
	void roll(jint field, jint value) { return call_method<"roll", void>(field, value); }
	void roll(jint field, jboolean increment) { return call_method<"roll", void>(field, increment); }
	void setGregorianChange(jni::ref<java::util::Date> date) { return call_method<"setGregorianChange", void>(date); }

protected:

	GregorianCalendar(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_GREGORIANCALENDAR
