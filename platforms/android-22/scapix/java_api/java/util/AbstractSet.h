// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/util/AbstractCollection.h>
#include <scapix/java_api/java/util/Set.h>

#ifndef SCAPIX_JAVA_API_JAVA_UTIL_ABSTRACTSET_FWD
#define SCAPIX_JAVA_API_JAVA_UTIL_ABSTRACTSET_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::util { class AbstractSet; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::util::AbstractSet>
{
	static constexpr fixed_string class_name = "java/util/AbstractSet";
	using base_classes = std::tuple<scapix::java_api::java::util::AbstractCollection, scapix::java_api::java::util::Set>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_ABSTRACTSET_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_UTIL_ABSTRACTSET)
#define SCAPIX_JAVA_API_JAVA_UTIL_ABSTRACTSET

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/util/Collection.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::util::AbstractSet : public jni::object_base<"java/util/AbstractSet",
	java::util::AbstractCollection,
	java::util::Set>
{
public:

	jboolean equals(jni::ref<java::lang::Object> object) { return call_method<"equals", jboolean>(object); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jboolean removeAll(jni::ref<java::util::Collection> collection) { return call_method<"removeAll", jboolean>(collection); }

protected:

	AbstractSet(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_ABSTRACTSET
