// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/dalvik/system/BaseDexClassLoader.h>

#ifndef SCAPIX_JAVA_API_DALVIK_SYSTEM_DEXCLASSLOADER_FWD
#define SCAPIX_JAVA_API_DALVIK_SYSTEM_DEXCLASSLOADER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::dalvik::system { class DexClassLoader; }

template<>
struct scapix::jni::object_traits<scapix::java_api::dalvik::system::DexClassLoader>
{
	static constexpr fixed_string class_name = "dalvik/system/DexClassLoader";
	using base_classes = std::tuple<scapix::java_api::dalvik::system::BaseDexClassLoader>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_DALVIK_SYSTEM_DEXCLASSLOADER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_DALVIK_SYSTEM_DEXCLASSLOADER)
#define SCAPIX_JAVA_API_DALVIK_SYSTEM_DEXCLASSLOADER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/ClassLoader.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class dalvik::system::DexClassLoader : public jni::object_base<"dalvik/system/DexClassLoader",
	dalvik::system::BaseDexClassLoader>
{
public:

	static jni::ref<dalvik::system::DexClassLoader> new_object(jni::ref<java::lang::String> dexPath, jni::ref<java::lang::String> optimizedDirectory, jni::ref<java::lang::String> libraryPath, jni::ref<java::lang::ClassLoader> parent) { return base_::new_object(dexPath, optimizedDirectory, libraryPath, parent); }

protected:

	DexClassLoader(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_DALVIK_SYSTEM_DEXCLASSLOADER
