// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/transition/Transition.h>

#ifndef SCAPIX_JAVA_API_ANDROID_TRANSITION_TRANSITIONSET_FWD
#define SCAPIX_JAVA_API_ANDROID_TRANSITION_TRANSITIONSET_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::transition { class TransitionSet; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::transition::TransitionSet>
{
	static constexpr fixed_string class_name = "android/transition/TransitionSet";
	using base_classes = std::tuple<scapix::java_api::android::transition::Transition>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TRANSITION_TRANSITIONSET_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_TRANSITION_TRANSITIONSET)
#define SCAPIX_JAVA_API_ANDROID_TRANSITION_TRANSITIONSET

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/animation/TimeInterpolator.h>
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/transition/PathMotion.h>
#include <scapix/java_api/android/transition/Transition_EpicenterCallback.h>
#include <scapix/java_api/android/transition/Transition_TransitionListener.h>
#include <scapix/java_api/android/transition/TransitionPropagation.h>
#include <scapix/java_api/android/transition/TransitionValues.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::transition::TransitionSet : public jni::object_base<"android/transition/TransitionSet",
	android::transition::Transition>
{
public:

	static jint ORDERING_SEQUENTIAL() { return get_static_field<"ORDERING_SEQUENTIAL", jint>(); }
	static jint ORDERING_TOGETHER() { return get_static_field<"ORDERING_TOGETHER", jint>(); }

	static jni::ref<android::transition::TransitionSet> new_object() { return base_::new_object(); }
	static jni::ref<android::transition::TransitionSet> new_object(jni::ref<android::content::Context> context, jni::ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
	jni::ref<android::transition::TransitionSet> setOrdering(jint ordering) { return call_method<"setOrdering", jni::ref<android::transition::TransitionSet>>(ordering); }
	jint getOrdering() { return call_method<"getOrdering", jint>(); }
	jni::ref<android::transition::TransitionSet> addTransition(jni::ref<android::transition::Transition> transition) { return call_method<"addTransition", jni::ref<android::transition::TransitionSet>>(transition); }
	jint getTransitionCount() { return call_method<"getTransitionCount", jint>(); }
	jni::ref<android::transition::Transition> getTransitionAt(jint index) { return call_method<"getTransitionAt", jni::ref<android::transition::Transition>>(index); }
	jni::ref<android::transition::TransitionSet> setDuration(jlong duration) { return call_method<"setDuration", jni::ref<android::transition::TransitionSet>>(duration); }
	jni::ref<android::transition::TransitionSet> setStartDelay(jlong startDelay) { return call_method<"setStartDelay", jni::ref<android::transition::TransitionSet>>(startDelay); }
	jni::ref<android::transition::TransitionSet> setInterpolator(jni::ref<android::animation::TimeInterpolator> interpolator) { return call_method<"setInterpolator", jni::ref<android::transition::TransitionSet>>(interpolator); }
	jni::ref<android::transition::TransitionSet> addTarget(jni::ref<android::view::View> target) { return call_method<"addTarget", jni::ref<android::transition::TransitionSet>>(target); }
	jni::ref<android::transition::TransitionSet> addTarget(jint targetId) { return call_method<"addTarget", jni::ref<android::transition::TransitionSet>>(targetId); }
	jni::ref<android::transition::TransitionSet> addTarget(jni::ref<java::lang::String> targetName) { return call_method<"addTarget", jni::ref<android::transition::TransitionSet>>(targetName); }
	jni::ref<android::transition::TransitionSet> addTarget(jni::ref<java::lang::Class> targetType) { return call_method<"addTarget", jni::ref<android::transition::TransitionSet>>(targetType); }
	jni::ref<android::transition::TransitionSet> addListener(jni::ref<android::transition::Transition_TransitionListener> listener) { return call_method<"addListener", jni::ref<android::transition::TransitionSet>>(listener); }
	jni::ref<android::transition::TransitionSet> removeTarget(jint targetId) { return call_method<"removeTarget", jni::ref<android::transition::TransitionSet>>(targetId); }
	jni::ref<android::transition::TransitionSet> removeTarget(jni::ref<android::view::View> target) { return call_method<"removeTarget", jni::ref<android::transition::TransitionSet>>(target); }
	jni::ref<android::transition::TransitionSet> removeTarget(jni::ref<java::lang::Class> target) { return call_method<"removeTarget", jni::ref<android::transition::TransitionSet>>(target); }
	jni::ref<android::transition::TransitionSet> removeTarget(jni::ref<java::lang::String> target) { return call_method<"removeTarget", jni::ref<android::transition::TransitionSet>>(target); }
	jni::ref<android::transition::Transition> excludeTarget(jni::ref<android::view::View> target, jboolean exclude) { return call_method<"excludeTarget", jni::ref<android::transition::Transition>>(target, exclude); }
	jni::ref<android::transition::Transition> excludeTarget(jni::ref<java::lang::String> targetName, jboolean exclude) { return call_method<"excludeTarget", jni::ref<android::transition::Transition>>(targetName, exclude); }
	jni::ref<android::transition::Transition> excludeTarget(jint targetId, jboolean exclude) { return call_method<"excludeTarget", jni::ref<android::transition::Transition>>(targetId, exclude); }
	jni::ref<android::transition::Transition> excludeTarget(jni::ref<java::lang::Class> type, jboolean exclude) { return call_method<"excludeTarget", jni::ref<android::transition::Transition>>(type, exclude); }
	jni::ref<android::transition::TransitionSet> removeListener(jni::ref<android::transition::Transition_TransitionListener> listener) { return call_method<"removeListener", jni::ref<android::transition::TransitionSet>>(listener); }
	void setPathMotion(jni::ref<android::transition::PathMotion> pathMotion) { return call_method<"setPathMotion", void>(pathMotion); }
	jni::ref<android::transition::TransitionSet> removeTransition(jni::ref<android::transition::Transition> transition) { return call_method<"removeTransition", jni::ref<android::transition::TransitionSet>>(transition); }
	void captureStartValues(jni::ref<android::transition::TransitionValues> transitionValues) { return call_method<"captureStartValues", void>(transitionValues); }
	void captureEndValues(jni::ref<android::transition::TransitionValues> transitionValues) { return call_method<"captureEndValues", void>(transitionValues); }
	void setPropagation(jni::ref<android::transition::TransitionPropagation> propagation) { return call_method<"setPropagation", void>(propagation); }
	void setEpicenterCallback(jni::ref<android::transition::Transition_EpicenterCallback> epicenterCallback) { return call_method<"setEpicenterCallback", void>(epicenterCallback); }
	jni::ref<android::transition::TransitionSet> clone() { return call_method<"clone", jni::ref<android::transition::TransitionSet>>(); }

protected:

	TransitionSet(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TRANSITION_TRANSITIONSET
