// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/view/InputEvent.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_VIEW_MOTIONEVENT_FWD
#define SCAPIX_JAVA_API_ANDROID_VIEW_MOTIONEVENT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::view { class MotionEvent; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::view::MotionEvent>
{
	static constexpr fixed_string class_name = "android/view/MotionEvent";
	using base_classes = std::tuple<scapix::java_api::android::view::InputEvent, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_MOTIONEVENT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_VIEW_MOTIONEVENT)
#define SCAPIX_JAVA_API_ANDROID_VIEW_MOTIONEVENT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/graphics/Matrix.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/android/view/MotionEvent_PointerCoords.h>
#include <scapix/java_api/android/view/MotionEvent_PointerProperties.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::view::MotionEvent : public jni::object_base<"android/view/MotionEvent",
	android::view::InputEvent,
	android::os::Parcelable>
{
public:

	using PointerProperties = MotionEvent_PointerProperties;
	using PointerCoords = MotionEvent_PointerCoords;

	static jint ACTION_CANCEL() { return get_static_field<"ACTION_CANCEL", jint>(); }
	static jint ACTION_DOWN() { return get_static_field<"ACTION_DOWN", jint>(); }
	static jint ACTION_HOVER_ENTER() { return get_static_field<"ACTION_HOVER_ENTER", jint>(); }
	static jint ACTION_HOVER_EXIT() { return get_static_field<"ACTION_HOVER_EXIT", jint>(); }
	static jint ACTION_HOVER_MOVE() { return get_static_field<"ACTION_HOVER_MOVE", jint>(); }
	static jint ACTION_MASK() { return get_static_field<"ACTION_MASK", jint>(); }
	static jint ACTION_MOVE() { return get_static_field<"ACTION_MOVE", jint>(); }
	static jint ACTION_OUTSIDE() { return get_static_field<"ACTION_OUTSIDE", jint>(); }
	static jint ACTION_POINTER_1_DOWN() { return get_static_field<"ACTION_POINTER_1_DOWN", jint>(); }
	static jint ACTION_POINTER_1_UP() { return get_static_field<"ACTION_POINTER_1_UP", jint>(); }
	static jint ACTION_POINTER_2_DOWN() { return get_static_field<"ACTION_POINTER_2_DOWN", jint>(); }
	static jint ACTION_POINTER_2_UP() { return get_static_field<"ACTION_POINTER_2_UP", jint>(); }
	static jint ACTION_POINTER_3_DOWN() { return get_static_field<"ACTION_POINTER_3_DOWN", jint>(); }
	static jint ACTION_POINTER_3_UP() { return get_static_field<"ACTION_POINTER_3_UP", jint>(); }
	static jint ACTION_POINTER_DOWN() { return get_static_field<"ACTION_POINTER_DOWN", jint>(); }
	static jint ACTION_POINTER_ID_MASK() { return get_static_field<"ACTION_POINTER_ID_MASK", jint>(); }
	static jint ACTION_POINTER_ID_SHIFT() { return get_static_field<"ACTION_POINTER_ID_SHIFT", jint>(); }
	static jint ACTION_POINTER_INDEX_MASK() { return get_static_field<"ACTION_POINTER_INDEX_MASK", jint>(); }
	static jint ACTION_POINTER_INDEX_SHIFT() { return get_static_field<"ACTION_POINTER_INDEX_SHIFT", jint>(); }
	static jint ACTION_POINTER_UP() { return get_static_field<"ACTION_POINTER_UP", jint>(); }
	static jint ACTION_SCROLL() { return get_static_field<"ACTION_SCROLL", jint>(); }
	static jint ACTION_UP() { return get_static_field<"ACTION_UP", jint>(); }
	static jint AXIS_BRAKE() { return get_static_field<"AXIS_BRAKE", jint>(); }
	static jint AXIS_DISTANCE() { return get_static_field<"AXIS_DISTANCE", jint>(); }
	static jint AXIS_GAS() { return get_static_field<"AXIS_GAS", jint>(); }
	static jint AXIS_GENERIC_1() { return get_static_field<"AXIS_GENERIC_1", jint>(); }
	static jint AXIS_GENERIC_10() { return get_static_field<"AXIS_GENERIC_10", jint>(); }
	static jint AXIS_GENERIC_11() { return get_static_field<"AXIS_GENERIC_11", jint>(); }
	static jint AXIS_GENERIC_12() { return get_static_field<"AXIS_GENERIC_12", jint>(); }
	static jint AXIS_GENERIC_13() { return get_static_field<"AXIS_GENERIC_13", jint>(); }
	static jint AXIS_GENERIC_14() { return get_static_field<"AXIS_GENERIC_14", jint>(); }
	static jint AXIS_GENERIC_15() { return get_static_field<"AXIS_GENERIC_15", jint>(); }
	static jint AXIS_GENERIC_16() { return get_static_field<"AXIS_GENERIC_16", jint>(); }
	static jint AXIS_GENERIC_2() { return get_static_field<"AXIS_GENERIC_2", jint>(); }
	static jint AXIS_GENERIC_3() { return get_static_field<"AXIS_GENERIC_3", jint>(); }
	static jint AXIS_GENERIC_4() { return get_static_field<"AXIS_GENERIC_4", jint>(); }
	static jint AXIS_GENERIC_5() { return get_static_field<"AXIS_GENERIC_5", jint>(); }
	static jint AXIS_GENERIC_6() { return get_static_field<"AXIS_GENERIC_6", jint>(); }
	static jint AXIS_GENERIC_7() { return get_static_field<"AXIS_GENERIC_7", jint>(); }
	static jint AXIS_GENERIC_8() { return get_static_field<"AXIS_GENERIC_8", jint>(); }
	static jint AXIS_GENERIC_9() { return get_static_field<"AXIS_GENERIC_9", jint>(); }
	static jint AXIS_HAT_X() { return get_static_field<"AXIS_HAT_X", jint>(); }
	static jint AXIS_HAT_Y() { return get_static_field<"AXIS_HAT_Y", jint>(); }
	static jint AXIS_HSCROLL() { return get_static_field<"AXIS_HSCROLL", jint>(); }
	static jint AXIS_LTRIGGER() { return get_static_field<"AXIS_LTRIGGER", jint>(); }
	static jint AXIS_ORIENTATION() { return get_static_field<"AXIS_ORIENTATION", jint>(); }
	static jint AXIS_PRESSURE() { return get_static_field<"AXIS_PRESSURE", jint>(); }
	static jint AXIS_RTRIGGER() { return get_static_field<"AXIS_RTRIGGER", jint>(); }
	static jint AXIS_RUDDER() { return get_static_field<"AXIS_RUDDER", jint>(); }
	static jint AXIS_RX() { return get_static_field<"AXIS_RX", jint>(); }
	static jint AXIS_RY() { return get_static_field<"AXIS_RY", jint>(); }
	static jint AXIS_RZ() { return get_static_field<"AXIS_RZ", jint>(); }
	static jint AXIS_SIZE() { return get_static_field<"AXIS_SIZE", jint>(); }
	static jint AXIS_THROTTLE() { return get_static_field<"AXIS_THROTTLE", jint>(); }
	static jint AXIS_TILT() { return get_static_field<"AXIS_TILT", jint>(); }
	static jint AXIS_TOOL_MAJOR() { return get_static_field<"AXIS_TOOL_MAJOR", jint>(); }
	static jint AXIS_TOOL_MINOR() { return get_static_field<"AXIS_TOOL_MINOR", jint>(); }
	static jint AXIS_TOUCH_MAJOR() { return get_static_field<"AXIS_TOUCH_MAJOR", jint>(); }
	static jint AXIS_TOUCH_MINOR() { return get_static_field<"AXIS_TOUCH_MINOR", jint>(); }
	static jint AXIS_VSCROLL() { return get_static_field<"AXIS_VSCROLL", jint>(); }
	static jint AXIS_WHEEL() { return get_static_field<"AXIS_WHEEL", jint>(); }
	static jint AXIS_X() { return get_static_field<"AXIS_X", jint>(); }
	static jint AXIS_Y() { return get_static_field<"AXIS_Y", jint>(); }
	static jint AXIS_Z() { return get_static_field<"AXIS_Z", jint>(); }
	static jint BUTTON_BACK() { return get_static_field<"BUTTON_BACK", jint>(); }
	static jint BUTTON_FORWARD() { return get_static_field<"BUTTON_FORWARD", jint>(); }
	static jint BUTTON_PRIMARY() { return get_static_field<"BUTTON_PRIMARY", jint>(); }
	static jint BUTTON_SECONDARY() { return get_static_field<"BUTTON_SECONDARY", jint>(); }
	static jint BUTTON_TERTIARY() { return get_static_field<"BUTTON_TERTIARY", jint>(); }
	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }
	static jint EDGE_BOTTOM() { return get_static_field<"EDGE_BOTTOM", jint>(); }
	static jint EDGE_LEFT() { return get_static_field<"EDGE_LEFT", jint>(); }
	static jint EDGE_RIGHT() { return get_static_field<"EDGE_RIGHT", jint>(); }
	static jint EDGE_TOP() { return get_static_field<"EDGE_TOP", jint>(); }
	static jint FLAG_WINDOW_IS_OBSCURED() { return get_static_field<"FLAG_WINDOW_IS_OBSCURED", jint>(); }
	static jint INVALID_POINTER_ID() { return get_static_field<"INVALID_POINTER_ID", jint>(); }
	static jint TOOL_TYPE_ERASER() { return get_static_field<"TOOL_TYPE_ERASER", jint>(); }
	static jint TOOL_TYPE_FINGER() { return get_static_field<"TOOL_TYPE_FINGER", jint>(); }
	static jint TOOL_TYPE_MOUSE() { return get_static_field<"TOOL_TYPE_MOUSE", jint>(); }
	static jint TOOL_TYPE_STYLUS() { return get_static_field<"TOOL_TYPE_STYLUS", jint>(); }
	static jint TOOL_TYPE_UNKNOWN() { return get_static_field<"TOOL_TYPE_UNKNOWN", jint>(); }

	static jni::ref<android::view::MotionEvent> obtain(jlong downTime, jlong p2, jint eventTime, jint p4, jni::ref<jni::array<android::view::MotionEvent_PointerProperties>> action, jni::ref<jni::array<android::view::MotionEvent_PointerCoords>> pointerCount, jint pointerProperties, jint pointerCoords, jfloat metaState, jfloat buttonState, jint xPrecision, jint yPrecision, jint deviceId, jint edgeFlags) { return call_static_method<"obtain", jni::ref<android::view::MotionEvent>>(downTime, p2, eventTime, p4, action, pointerCount, pointerProperties, pointerCoords, metaState, buttonState, xPrecision, yPrecision, deviceId, edgeFlags); }
	static jni::ref<android::view::MotionEvent> obtain(jlong downTime, jlong p2, jint eventTime, jint p4, jni::ref<jni::array<jint>> action, jni::ref<jni::array<android::view::MotionEvent_PointerCoords>> pointerCount, jint pointerIds, jfloat pointerCoords, jfloat metaState, jint xPrecision, jint yPrecision, jint deviceId, jint edgeFlags) { return call_static_method<"obtain", jni::ref<android::view::MotionEvent>>(downTime, p2, eventTime, p4, action, pointerCount, pointerIds, pointerCoords, metaState, xPrecision, yPrecision, deviceId, edgeFlags); }
	static jni::ref<android::view::MotionEvent> obtain(jlong downTime, jlong p2, jint eventTime, jfloat p4, jfloat action, jfloat x, jfloat y, jint pressure, jfloat size, jfloat metaState, jint xPrecision, jint yPrecision) { return call_static_method<"obtain", jni::ref<android::view::MotionEvent>>(downTime, p2, eventTime, p4, action, x, y, pressure, size, metaState, xPrecision, yPrecision); }
	static jni::ref<android::view::MotionEvent> obtain(jlong downTime, jlong p2, jint eventTime, jint p4, jfloat action, jfloat pointerCount, jfloat x, jfloat y, jint pressure, jfloat size, jfloat metaState, jint xPrecision, jint yPrecision) { return call_static_method<"obtain", jni::ref<android::view::MotionEvent>>(downTime, p2, eventTime, p4, action, pointerCount, x, y, pressure, size, metaState, xPrecision, yPrecision); }
	static jni::ref<android::view::MotionEvent> obtain(jlong downTime, jlong p2, jint eventTime, jfloat p4, jfloat action, jint x) { return call_static_method<"obtain", jni::ref<android::view::MotionEvent>>(downTime, p2, eventTime, p4, action, x); }
	static jni::ref<android::view::MotionEvent> obtain(jni::ref<android::view::MotionEvent> other) { return call_static_method<"obtain", jni::ref<android::view::MotionEvent>>(other); }
	static jni::ref<android::view::MotionEvent> obtainNoHistory(jni::ref<android::view::MotionEvent> other) { return call_static_method<"obtainNoHistory", jni::ref<android::view::MotionEvent>>(other); }
	void recycle() { return call_method<"recycle", void>(); }
	jint getDeviceId() { return call_method<"getDeviceId", jint>(); }
	jint getSource() { return call_method<"getSource", jint>(); }
	void setSource(jint source) { return call_method<"setSource", void>(source); }
	jint getAction() { return call_method<"getAction", jint>(); }
	jint getActionMasked() { return call_method<"getActionMasked", jint>(); }
	jint getActionIndex() { return call_method<"getActionIndex", jint>(); }
	jint getFlags() { return call_method<"getFlags", jint>(); }
	jlong getDownTime() { return call_method<"getDownTime", jlong>(); }
	jlong getEventTime() { return call_method<"getEventTime", jlong>(); }
	jfloat getX() { return call_method<"getX", jfloat>(); }
	jfloat getY() { return call_method<"getY", jfloat>(); }
	jfloat getPressure() { return call_method<"getPressure", jfloat>(); }
	jfloat getSize() { return call_method<"getSize", jfloat>(); }
	jfloat getTouchMajor() { return call_method<"getTouchMajor", jfloat>(); }
	jfloat getTouchMinor() { return call_method<"getTouchMinor", jfloat>(); }
	jfloat getToolMajor() { return call_method<"getToolMajor", jfloat>(); }
	jfloat getToolMinor() { return call_method<"getToolMinor", jfloat>(); }
	jfloat getOrientation() { return call_method<"getOrientation", jfloat>(); }
	jfloat getAxisValue(jint axis) { return call_method<"getAxisValue", jfloat>(axis); }
	jint getPointerCount() { return call_method<"getPointerCount", jint>(); }
	jint getPointerId(jint pointerIndex) { return call_method<"getPointerId", jint>(pointerIndex); }
	jint getToolType(jint pointerIndex) { return call_method<"getToolType", jint>(pointerIndex); }
	jint findPointerIndex(jint pointerId) { return call_method<"findPointerIndex", jint>(pointerId); }
	jfloat getX(jint pointerIndex) { return call_method<"getX", jfloat>(pointerIndex); }
	jfloat getY(jint pointerIndex) { return call_method<"getY", jfloat>(pointerIndex); }
	jfloat getPressure(jint pointerIndex) { return call_method<"getPressure", jfloat>(pointerIndex); }
	jfloat getSize(jint pointerIndex) { return call_method<"getSize", jfloat>(pointerIndex); }
	jfloat getTouchMajor(jint pointerIndex) { return call_method<"getTouchMajor", jfloat>(pointerIndex); }
	jfloat getTouchMinor(jint pointerIndex) { return call_method<"getTouchMinor", jfloat>(pointerIndex); }
	jfloat getToolMajor(jint pointerIndex) { return call_method<"getToolMajor", jfloat>(pointerIndex); }
	jfloat getToolMinor(jint pointerIndex) { return call_method<"getToolMinor", jfloat>(pointerIndex); }
	jfloat getOrientation(jint pointerIndex) { return call_method<"getOrientation", jfloat>(pointerIndex); }
	jfloat getAxisValue(jint axis, jint pointerIndex) { return call_method<"getAxisValue", jfloat>(axis, pointerIndex); }
	void getPointerCoords(jint pointerIndex, jni::ref<android::view::MotionEvent_PointerCoords> outPointerCoords) { return call_method<"getPointerCoords", void>(pointerIndex, outPointerCoords); }
	void getPointerProperties(jint pointerIndex, jni::ref<android::view::MotionEvent_PointerProperties> outPointerProperties) { return call_method<"getPointerProperties", void>(pointerIndex, outPointerProperties); }
	jint getMetaState() { return call_method<"getMetaState", jint>(); }
	jint getButtonState() { return call_method<"getButtonState", jint>(); }
	jfloat getRawX() { return call_method<"getRawX", jfloat>(); }
	jfloat getRawY() { return call_method<"getRawY", jfloat>(); }
	jfloat getXPrecision() { return call_method<"getXPrecision", jfloat>(); }
	jfloat getYPrecision() { return call_method<"getYPrecision", jfloat>(); }
	jint getHistorySize() { return call_method<"getHistorySize", jint>(); }
	jlong getHistoricalEventTime(jint pos) { return call_method<"getHistoricalEventTime", jlong>(pos); }
	jfloat getHistoricalX(jint pos) { return call_method<"getHistoricalX", jfloat>(pos); }
	jfloat getHistoricalY(jint pos) { return call_method<"getHistoricalY", jfloat>(pos); }
	jfloat getHistoricalPressure(jint pos) { return call_method<"getHistoricalPressure", jfloat>(pos); }
	jfloat getHistoricalSize(jint pos) { return call_method<"getHistoricalSize", jfloat>(pos); }
	jfloat getHistoricalTouchMajor(jint pos) { return call_method<"getHistoricalTouchMajor", jfloat>(pos); }
	jfloat getHistoricalTouchMinor(jint pos) { return call_method<"getHistoricalTouchMinor", jfloat>(pos); }
	jfloat getHistoricalToolMajor(jint pos) { return call_method<"getHistoricalToolMajor", jfloat>(pos); }
	jfloat getHistoricalToolMinor(jint pos) { return call_method<"getHistoricalToolMinor", jfloat>(pos); }
	jfloat getHistoricalOrientation(jint pos) { return call_method<"getHistoricalOrientation", jfloat>(pos); }
	jfloat getHistoricalAxisValue(jint axis, jint pos) { return call_method<"getHistoricalAxisValue", jfloat>(axis, pos); }
	jfloat getHistoricalX(jint pointerIndex, jint pos) { return call_method<"getHistoricalX", jfloat>(pointerIndex, pos); }
	jfloat getHistoricalY(jint pointerIndex, jint pos) { return call_method<"getHistoricalY", jfloat>(pointerIndex, pos); }
	jfloat getHistoricalPressure(jint pointerIndex, jint pos) { return call_method<"getHistoricalPressure", jfloat>(pointerIndex, pos); }
	jfloat getHistoricalSize(jint pointerIndex, jint pos) { return call_method<"getHistoricalSize", jfloat>(pointerIndex, pos); }
	jfloat getHistoricalTouchMajor(jint pointerIndex, jint pos) { return call_method<"getHistoricalTouchMajor", jfloat>(pointerIndex, pos); }
	jfloat getHistoricalTouchMinor(jint pointerIndex, jint pos) { return call_method<"getHistoricalTouchMinor", jfloat>(pointerIndex, pos); }
	jfloat getHistoricalToolMajor(jint pointerIndex, jint pos) { return call_method<"getHistoricalToolMajor", jfloat>(pointerIndex, pos); }
	jfloat getHistoricalToolMinor(jint pointerIndex, jint pos) { return call_method<"getHistoricalToolMinor", jfloat>(pointerIndex, pos); }
	jfloat getHistoricalOrientation(jint pointerIndex, jint pos) { return call_method<"getHistoricalOrientation", jfloat>(pointerIndex, pos); }
	jfloat getHistoricalAxisValue(jint axis, jint pointerIndex, jint pos) { return call_method<"getHistoricalAxisValue", jfloat>(axis, pointerIndex, pos); }
	void getHistoricalPointerCoords(jint pointerIndex, jint pos, jni::ref<android::view::MotionEvent_PointerCoords> outPointerCoords) { return call_method<"getHistoricalPointerCoords", void>(pointerIndex, pos, outPointerCoords); }
	jint getEdgeFlags() { return call_method<"getEdgeFlags", jint>(); }
	void setEdgeFlags(jint flags) { return call_method<"setEdgeFlags", void>(flags); }
	void setAction(jint action) { return call_method<"setAction", void>(action); }
	void offsetLocation(jfloat deltaX, jfloat deltaY) { return call_method<"offsetLocation", void>(deltaX, deltaY); }
	void setLocation(jfloat x, jfloat y) { return call_method<"setLocation", void>(x, y); }
	void transform(jni::ref<android::graphics::Matrix> matrix) { return call_method<"transform", void>(matrix); }
	void addBatch(jlong eventTime, jfloat p2, jfloat x, jfloat y, jfloat pressure, jint size) { return call_method<"addBatch", void>(eventTime, p2, x, y, pressure, size); }
	void addBatch(jlong eventTime, jni::ref<jni::array<android::view::MotionEvent_PointerCoords>> p2, jint pointerCoords) { return call_method<"addBatch", void>(eventTime, p2, pointerCoords); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> actionToString(jint action) { return call_static_method<"actionToString", jni::ref<java::lang::String>>(action); }
	static jni::ref<java::lang::String> axisToString(jint axis) { return call_static_method<"axisToString", jni::ref<java::lang::String>>(axis); }
	static jint axisFromString(jni::ref<java::lang::String> symbolicName) { return call_static_method<"axisFromString", jint>(symbolicName); }
	jboolean isButtonPressed(jint button) { return call_method<"isButtonPressed", jboolean>(button); }
	void writeToParcel(jni::ref<android::os::Parcel> out, jint flags) { return call_method<"writeToParcel", void>(out, flags); }

protected:

	MotionEvent(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_MOTIONEVENT
