// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_VIEW_ACCESSIBILITY_ACCESSIBILITYNODEPROVIDER_FWD
#define SCAPIX_JAVA_API_ANDROID_VIEW_ACCESSIBILITY_ACCESSIBILITYNODEPROVIDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::view::accessibility { class AccessibilityNodeProvider; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::view::accessibility::AccessibilityNodeProvider>
{
	static constexpr fixed_string class_name = "android/view/accessibility/AccessibilityNodeProvider";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_ACCESSIBILITY_ACCESSIBILITYNODEPROVIDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_VIEW_ACCESSIBILITY_ACCESSIBILITYNODEPROVIDER)
#define SCAPIX_JAVA_API_ANDROID_VIEW_ACCESSIBILITY_ACCESSIBILITYNODEPROVIDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/android/view/accessibility/AccessibilityNodeInfo.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::view::accessibility::AccessibilityNodeProvider : public jni::object_base<"android/view/accessibility/AccessibilityNodeProvider",
	java::lang::Object>
{
public:

	static jint HOST_VIEW_ID() { return get_static_field<"HOST_VIEW_ID", jint>(); }

	static jni::ref<android::view::accessibility::AccessibilityNodeProvider> new_object() { return base_::new_object(); }
	jni::ref<android::view::accessibility::AccessibilityNodeInfo> createAccessibilityNodeInfo(jint virtualViewId) { return call_method<"createAccessibilityNodeInfo", jni::ref<android::view::accessibility::AccessibilityNodeInfo>>(virtualViewId); }
	jboolean performAction(jint virtualViewId, jint action, jni::ref<android::os::Bundle> arguments) { return call_method<"performAction", jboolean>(virtualViewId, action, arguments); }
	jni::ref<java::util::List> findAccessibilityNodeInfosByText(jni::ref<java::lang::String> text, jint virtualViewId) { return call_method<"findAccessibilityNodeInfosByText", jni::ref<java::util::List>>(text, virtualViewId); }
	jni::ref<android::view::accessibility::AccessibilityNodeInfo> findFocus(jint focus) { return call_method<"findFocus", jni::ref<android::view::accessibility::AccessibilityNodeInfo>>(focus); }

protected:

	AccessibilityNodeProvider(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_ACCESSIBILITY_ACCESSIBILITYNODEPROVIDER
