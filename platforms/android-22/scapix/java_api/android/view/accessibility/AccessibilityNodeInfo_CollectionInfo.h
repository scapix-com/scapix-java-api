// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_VIEW_ACCESSIBILITY_ACCESSIBILITYNODEINFO_COLLECTIONINFO_FWD
#define SCAPIX_JAVA_API_ANDROID_VIEW_ACCESSIBILITY_ACCESSIBILITYNODEINFO_COLLECTIONINFO_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::view::accessibility { class AccessibilityNodeInfo_CollectionInfo; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::view::accessibility::AccessibilityNodeInfo_CollectionInfo>
{
	static constexpr fixed_string class_name = "android/view/accessibility/AccessibilityNodeInfo$CollectionInfo";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_ACCESSIBILITY_ACCESSIBILITYNODEINFO_COLLECTIONINFO_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_VIEW_ACCESSIBILITY_ACCESSIBILITYNODEINFO_COLLECTIONINFO)
#define SCAPIX_JAVA_API_ANDROID_VIEW_ACCESSIBILITY_ACCESSIBILITYNODEINFO_COLLECTIONINFO

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::view::accessibility::AccessibilityNodeInfo_CollectionInfo : public jni::object_base<"android/view/accessibility/AccessibilityNodeInfo$CollectionInfo",
	java::lang::Object>
{
public:

	static jint SELECTION_MODE_MULTIPLE() { return get_static_field<"SELECTION_MODE_MULTIPLE", jint>(); }
	static jint SELECTION_MODE_NONE() { return get_static_field<"SELECTION_MODE_NONE", jint>(); }
	static jint SELECTION_MODE_SINGLE() { return get_static_field<"SELECTION_MODE_SINGLE", jint>(); }

	static jni::ref<android::view::accessibility::AccessibilityNodeInfo_CollectionInfo> obtain(jint rowCount, jint columnCount, jboolean hierarchical) { return call_static_method<"obtain", jni::ref<android::view::accessibility::AccessibilityNodeInfo_CollectionInfo>>(rowCount, columnCount, hierarchical); }
	static jni::ref<android::view::accessibility::AccessibilityNodeInfo_CollectionInfo> obtain(jint rowCount, jint columnCount, jboolean hierarchical, jint selectionMode) { return call_static_method<"obtain", jni::ref<android::view::accessibility::AccessibilityNodeInfo_CollectionInfo>>(rowCount, columnCount, hierarchical, selectionMode); }
	jint getRowCount() { return call_method<"getRowCount", jint>(); }
	jint getColumnCount() { return call_method<"getColumnCount", jint>(); }
	jboolean isHierarchical() { return call_method<"isHierarchical", jboolean>(); }
	jint getSelectionMode() { return call_method<"getSelectionMode", jint>(); }

protected:

	AccessibilityNodeInfo_CollectionInfo(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_ACCESSIBILITY_ACCESSIBILITYNODEINFO_COLLECTIONINFO
