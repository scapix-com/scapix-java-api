// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_VIEW_TEXTSERVICE_SPELLCHECKERINFO_FWD
#define SCAPIX_JAVA_API_ANDROID_VIEW_TEXTSERVICE_SPELLCHECKERINFO_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::view::textservice { class SpellCheckerInfo; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::view::textservice::SpellCheckerInfo>
{
	static constexpr fixed_string class_name = "android/view/textservice/SpellCheckerInfo";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_TEXTSERVICE_SPELLCHECKERINFO_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_VIEW_TEXTSERVICE_SPELLCHECKERINFO)
#define SCAPIX_JAVA_API_ANDROID_VIEW_TEXTSERVICE_SPELLCHECKERINFO

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/ComponentName.h>
#include <scapix/java_api/android/content/pm/PackageManager.h>
#include <scapix/java_api/android/content/pm/ServiceInfo.h>
#include <scapix/java_api/android/graphics/drawable/Drawable.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/android/view/textservice/SpellCheckerSubtype.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::view::textservice::SpellCheckerInfo : public jni::object_base<"android/view/textservice/SpellCheckerInfo",
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }

	jni::ref<java::lang::String> getId() { return call_method<"getId", jni::ref<java::lang::String>>(); }
	jni::ref<android::content::ComponentName> getComponent() { return call_method<"getComponent", jni::ref<android::content::ComponentName>>(); }
	jni::ref<java::lang::String> getPackageName() { return call_method<"getPackageName", jni::ref<java::lang::String>>(); }
	void writeToParcel(jni::ref<android::os::Parcel> dest, jint flags) { return call_method<"writeToParcel", void>(dest, flags); }
	jni::ref<java::lang::CharSequence> loadLabel(jni::ref<android::content::pm::PackageManager> pm) { return call_method<"loadLabel", jni::ref<java::lang::CharSequence>>(pm); }
	jni::ref<android::graphics::drawable::Drawable> loadIcon(jni::ref<android::content::pm::PackageManager> pm) { return call_method<"loadIcon", jni::ref<android::graphics::drawable::Drawable>>(pm); }
	jni::ref<android::content::pm::ServiceInfo> getServiceInfo() { return call_method<"getServiceInfo", jni::ref<android::content::pm::ServiceInfo>>(); }
	jni::ref<java::lang::String> getSettingsActivity() { return call_method<"getSettingsActivity", jni::ref<java::lang::String>>(); }
	jint getSubtypeCount() { return call_method<"getSubtypeCount", jint>(); }
	jni::ref<android::view::textservice::SpellCheckerSubtype> getSubtypeAt(jint index) { return call_method<"getSubtypeAt", jni::ref<android::view::textservice::SpellCheckerSubtype>>(index); }
	jint describeContents() { return call_method<"describeContents", jint>(); }

protected:

	SpellCheckerInfo(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_TEXTSERVICE_SPELLCHECKERINFO
