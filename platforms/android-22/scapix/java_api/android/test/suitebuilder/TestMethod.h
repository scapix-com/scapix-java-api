// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_TEST_SUITEBUILDER_TESTMETHOD_FWD
#define SCAPIX_JAVA_API_ANDROID_TEST_SUITEBUILDER_TESTMETHOD_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::test::suitebuilder { class TestMethod; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::test::suitebuilder::TestMethod>
{
	static constexpr fixed_string class_name = "android/test/suitebuilder/TestMethod";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEST_SUITEBUILDER_TESTMETHOD_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_TEST_SUITEBUILDER_TESTMETHOD)
#define SCAPIX_JAVA_API_ANDROID_TEST_SUITEBUILDER_TESTMETHOD

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/annotation/Annotation.h>
#include <scapix/java_api/java/lang/reflect/Method.h>
#include <scapix/java_api/junit/framework/TestCase.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::test::suitebuilder::TestMethod : public jni::object_base<"android/test/suitebuilder/TestMethod",
	java::lang::Object>
{
public:

	static jni::ref<android::test::suitebuilder::TestMethod> new_object(jni::ref<java::lang::reflect::Method> method, jni::ref<java::lang::Class> enclosingClass) { return base_::new_object(method, enclosingClass); }
	static jni::ref<android::test::suitebuilder::TestMethod> new_object(jni::ref<java::lang::String> methodName, jni::ref<java::lang::Class> enclosingClass) { return base_::new_object(methodName, enclosingClass); }
	static jni::ref<android::test::suitebuilder::TestMethod> new_object(jni::ref<junit::framework::TestCase> testCase) { return base_::new_object(testCase); }
	jni::ref<java::lang::String> getName() { return call_method<"getName", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getEnclosingClassname() { return call_method<"getEnclosingClassname", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::annotation::Annotation> getAnnotation(jni::ref<java::lang::Class> annotationClass) { return call_method<"getAnnotation", jni::ref<java::lang::annotation::Annotation>>(annotationClass); }
	jni::ref<java::lang::Class> getEnclosingClass() { return call_method<"getEnclosingClass", jni::ref<java::lang::Class>>(); }
	jni::ref<junit::framework::TestCase> createTest() { return call_method<"createTest", jni::ref<junit::framework::TestCase>>(); }
	jboolean equals(jni::ref<java::lang::Object> o) { return call_method<"equals", jboolean>(o); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	TestMethod(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEST_SUITEBUILDER_TESTMETHOD
