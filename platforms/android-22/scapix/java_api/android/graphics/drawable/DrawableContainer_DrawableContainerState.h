// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/graphics/drawable/Drawable_ConstantState.h>

#ifndef SCAPIX_JAVA_API_ANDROID_GRAPHICS_DRAWABLE_DRAWABLECONTAINER_DRAWABLECONTAINERSTATE_FWD
#define SCAPIX_JAVA_API_ANDROID_GRAPHICS_DRAWABLE_DRAWABLECONTAINER_DRAWABLECONTAINERSTATE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::graphics::drawable { class DrawableContainer_DrawableContainerState; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::graphics::drawable::DrawableContainer_DrawableContainerState>
{
	static constexpr fixed_string class_name = "android/graphics/drawable/DrawableContainer$DrawableContainerState";
	using base_classes = std::tuple<scapix::java_api::android::graphics::drawable::Drawable_ConstantState>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_GRAPHICS_DRAWABLE_DRAWABLECONTAINER_DRAWABLECONTAINERSTATE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_GRAPHICS_DRAWABLE_DRAWABLECONTAINER_DRAWABLECONTAINERSTATE)
#define SCAPIX_JAVA_API_ANDROID_GRAPHICS_DRAWABLE_DRAWABLECONTAINER_DRAWABLECONTAINERSTATE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/graphics/Rect.h>
#include <scapix/java_api/android/graphics/drawable/Drawable.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::graphics::drawable::DrawableContainer_DrawableContainerState : public jni::object_base<"android/graphics/drawable/DrawableContainer$DrawableContainerState",
	android::graphics::drawable::Drawable_ConstantState>
{
public:

	jint getChangingConfigurations() { return call_method<"getChangingConfigurations", jint>(); }
	jint addChild(jni::ref<android::graphics::drawable::Drawable> dr) { return call_method<"addChild", jint>(dr); }
	jint getChildCount() { return call_method<"getChildCount", jint>(); }
	jni::ref<jni::array<android::graphics::drawable::Drawable>> getChildren() { return call_method<"getChildren", jni::ref<jni::array<android::graphics::drawable::Drawable>>>(); }
	jni::ref<android::graphics::drawable::Drawable> getChild(jint index) { return call_method<"getChild", jni::ref<android::graphics::drawable::Drawable>>(index); }
	jboolean canApplyTheme() { return call_method<"canApplyTheme", jboolean>(); }
	void setVariablePadding(jboolean variable) { return call_method<"setVariablePadding", void>(variable); }
	jni::ref<android::graphics::Rect> getConstantPadding() { return call_method<"getConstantPadding", jni::ref<android::graphics::Rect>>(); }
	void setConstantSize(jboolean constant) { return call_method<"setConstantSize", void>(constant); }
	jboolean isConstantSize() { return call_method<"isConstantSize", jboolean>(); }
	jint getConstantWidth() { return call_method<"getConstantWidth", jint>(); }
	jint getConstantHeight() { return call_method<"getConstantHeight", jint>(); }
	jint getConstantMinimumWidth() { return call_method<"getConstantMinimumWidth", jint>(); }
	jint getConstantMinimumHeight() { return call_method<"getConstantMinimumHeight", jint>(); }
	void setEnterFadeDuration(jint duration) { return call_method<"setEnterFadeDuration", void>(duration); }
	jint getEnterFadeDuration() { return call_method<"getEnterFadeDuration", jint>(); }
	void setExitFadeDuration(jint duration) { return call_method<"setExitFadeDuration", void>(duration); }
	jint getExitFadeDuration() { return call_method<"getExitFadeDuration", jint>(); }
	jint getOpacity() { return call_method<"getOpacity", jint>(); }
	jboolean isStateful() { return call_method<"isStateful", jboolean>(); }
	void growArray(jint oldSize, jint newSize) { return call_method<"growArray", void>(oldSize, newSize); }
	jboolean canConstantState() { return call_method<"canConstantState", jboolean>(); }

protected:

	DrawableContainer_DrawableContainerState(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_GRAPHICS_DRAWABLE_DRAWABLECONTAINER_DRAWABLECONTAINERSTATE
