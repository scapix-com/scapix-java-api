// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_CONTENT_INTENTSENDER_FWD
#define SCAPIX_JAVA_API_ANDROID_CONTENT_INTENTSENDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::content { class IntentSender; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::content::IntentSender>
{
	static constexpr fixed_string class_name = "android/content/IntentSender";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_CONTENT_INTENTSENDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_CONTENT_INTENTSENDER)
#define SCAPIX_JAVA_API_ANDROID_CONTENT_INTENTSENDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/content/Intent.h>
#include <scapix/java_api/android/content/IntentSender_OnFinished.h>
#include <scapix/java_api/android/os/Handler.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/android/os/UserHandle.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/android/content/IntentSender_SendIntentException.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::content::IntentSender : public jni::object_base<"android/content/IntentSender",
	java::lang::Object,
	android::os::Parcelable>
{
public:

	using OnFinished = IntentSender_OnFinished;
	using SendIntentException = IntentSender_SendIntentException;

	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }

	void sendIntent(jni::ref<android::content::Context> context, jint code, jni::ref<android::content::Intent> intent, jni::ref<android::content::IntentSender_OnFinished> onFinished, jni::ref<android::os::Handler> handler) { return call_method<"sendIntent", void>(context, code, intent, onFinished, handler); }
	void sendIntent(jni::ref<android::content::Context> context, jint code, jni::ref<android::content::Intent> intent, jni::ref<android::content::IntentSender_OnFinished> onFinished, jni::ref<android::os::Handler> handler, jni::ref<java::lang::String> requiredPermission) { return call_method<"sendIntent", void>(context, code, intent, onFinished, handler, requiredPermission); }
	jni::ref<java::lang::String> getTargetPackage() { return call_method<"getTargetPackage", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getCreatorPackage() { return call_method<"getCreatorPackage", jni::ref<java::lang::String>>(); }
	jint getCreatorUid() { return call_method<"getCreatorUid", jint>(); }
	jni::ref<android::os::UserHandle> getCreatorUserHandle() { return call_method<"getCreatorUserHandle", jni::ref<android::os::UserHandle>>(); }
	jboolean equals(jni::ref<java::lang::Object> otherObj) { return call_method<"equals", jboolean>(otherObj); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	void writeToParcel(jni::ref<android::os::Parcel> out, jint flags) { return call_method<"writeToParcel", void>(out, flags); }
	static void writeIntentSenderOrNullToParcel(jni::ref<android::content::IntentSender> sender, jni::ref<android::os::Parcel> out) { return call_static_method<"writeIntentSenderOrNullToParcel", void>(sender, out); }
	static jni::ref<android::content::IntentSender> readIntentSenderOrNullFromParcel(jni::ref<android::os::Parcel> in) { return call_static_method<"readIntentSenderOrNullFromParcel", jni::ref<android::content::IntentSender>>(in); }

protected:

	IntentSender(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_CONTENT_INTENTSENDER
