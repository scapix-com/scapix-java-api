// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_TELEPHONY_SMSMESSAGE_FWD
#define SCAPIX_JAVA_API_ANDROID_TELEPHONY_SMSMESSAGE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::telephony { class SmsMessage; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::telephony::SmsMessage>
{
	static constexpr fixed_string class_name = "android/telephony/SmsMessage";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TELEPHONY_SMSMESSAGE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_TELEPHONY_SMSMESSAGE)
#define SCAPIX_JAVA_API_ANDROID_TELEPHONY_SMSMESSAGE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/telephony/SmsMessage_MessageClass.h>
#include <scapix/java_api/android/telephony/SmsMessage_SubmitPdu.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::telephony::SmsMessage : public jni::object_base<"android/telephony/SmsMessage",
	java::lang::Object>
{
public:

	using SubmitPdu = SmsMessage_SubmitPdu;
	using MessageClass = SmsMessage_MessageClass;

	static jint ENCODING_16BIT() { return get_static_field<"ENCODING_16BIT", jint>(); }
	static jint ENCODING_7BIT() { return get_static_field<"ENCODING_7BIT", jint>(); }
	static jint ENCODING_8BIT() { return get_static_field<"ENCODING_8BIT", jint>(); }
	static jint ENCODING_UNKNOWN() { return get_static_field<"ENCODING_UNKNOWN", jint>(); }
	static jint MAX_USER_DATA_BYTES() { return get_static_field<"MAX_USER_DATA_BYTES", jint>(); }
	static jint MAX_USER_DATA_BYTES_WITH_HEADER() { return get_static_field<"MAX_USER_DATA_BYTES_WITH_HEADER", jint>(); }
	static jint MAX_USER_DATA_SEPTETS() { return get_static_field<"MAX_USER_DATA_SEPTETS", jint>(); }
	static jint MAX_USER_DATA_SEPTETS_WITH_HEADER() { return get_static_field<"MAX_USER_DATA_SEPTETS_WITH_HEADER", jint>(); }

	static jni::ref<android::telephony::SmsMessage> createFromPdu(jni::ref<jni::array<jbyte>> pdu) { return call_static_method<"createFromPdu", jni::ref<android::telephony::SmsMessage>>(pdu); }
	static jint getTPLayerLengthForPDU(jni::ref<java::lang::String> pdu) { return call_static_method<"getTPLayerLengthForPDU", jint>(pdu); }
	static jni::ref<jni::array<jint>> calculateLength(jni::ref<java::lang::CharSequence> msgBody, jboolean use7bitOnly) { return call_static_method<"calculateLength", jni::ref<jni::array<jint>>>(msgBody, use7bitOnly); }
	static jni::ref<jni::array<jint>> calculateLength(jni::ref<java::lang::String> messageBody, jboolean use7bitOnly) { return call_static_method<"calculateLength", jni::ref<jni::array<jint>>>(messageBody, use7bitOnly); }
	static jni::ref<android::telephony::SmsMessage_SubmitPdu> getSubmitPdu(jni::ref<java::lang::String> scAddress, jni::ref<java::lang::String> destinationAddress, jni::ref<java::lang::String> message, jboolean statusReportRequested) { return call_static_method<"getSubmitPdu", jni::ref<android::telephony::SmsMessage_SubmitPdu>>(scAddress, destinationAddress, message, statusReportRequested); }
	static jni::ref<android::telephony::SmsMessage_SubmitPdu> getSubmitPdu(jni::ref<java::lang::String> scAddress, jni::ref<java::lang::String> destinationAddress, jshort destinationPort, jni::ref<jni::array<jbyte>> data, jboolean statusReportRequested) { return call_static_method<"getSubmitPdu", jni::ref<android::telephony::SmsMessage_SubmitPdu>>(scAddress, destinationAddress, destinationPort, data, statusReportRequested); }
	jni::ref<java::lang::String> getServiceCenterAddress() { return call_method<"getServiceCenterAddress", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getOriginatingAddress() { return call_method<"getOriginatingAddress", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getDisplayOriginatingAddress() { return call_method<"getDisplayOriginatingAddress", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getMessageBody() { return call_method<"getMessageBody", jni::ref<java::lang::String>>(); }
	jni::ref<android::telephony::SmsMessage_MessageClass> getMessageClass() { return call_method<"getMessageClass", jni::ref<android::telephony::SmsMessage_MessageClass>>(); }
	jni::ref<java::lang::String> getDisplayMessageBody() { return call_method<"getDisplayMessageBody", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getPseudoSubject() { return call_method<"getPseudoSubject", jni::ref<java::lang::String>>(); }
	jlong getTimestampMillis() { return call_method<"getTimestampMillis", jlong>(); }
	jboolean isEmail() { return call_method<"isEmail", jboolean>(); }
	jni::ref<java::lang::String> getEmailBody() { return call_method<"getEmailBody", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getEmailFrom() { return call_method<"getEmailFrom", jni::ref<java::lang::String>>(); }
	jint getProtocolIdentifier() { return call_method<"getProtocolIdentifier", jint>(); }
	jboolean isReplace() { return call_method<"isReplace", jboolean>(); }
	jboolean isCphsMwiMessage() { return call_method<"isCphsMwiMessage", jboolean>(); }
	jboolean isMWIClearMessage() { return call_method<"isMWIClearMessage", jboolean>(); }
	jboolean isMWISetMessage() { return call_method<"isMWISetMessage", jboolean>(); }
	jboolean isMwiDontStore() { return call_method<"isMwiDontStore", jboolean>(); }
	jni::ref<jni::array<jbyte>> getUserData() { return call_method<"getUserData", jni::ref<jni::array<jbyte>>>(); }
	jni::ref<jni::array<jbyte>> getPdu() { return call_method<"getPdu", jni::ref<jni::array<jbyte>>>(); }
	jint getStatusOnSim() { return call_method<"getStatusOnSim", jint>(); }
	jint getStatusOnIcc() { return call_method<"getStatusOnIcc", jint>(); }
	jint getIndexOnSim() { return call_method<"getIndexOnSim", jint>(); }
	jint getIndexOnIcc() { return call_method<"getIndexOnIcc", jint>(); }
	jint getStatus() { return call_method<"getStatus", jint>(); }
	jboolean isStatusReportMessage() { return call_method<"isStatusReportMessage", jboolean>(); }
	jboolean isReplyPathPresent() { return call_method<"isReplyPathPresent", jboolean>(); }

protected:

	SmsMessage(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TELEPHONY_SMSMESSAGE
