// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_TEXT_CLIPBOARDMANAGER_FWD
#define SCAPIX_JAVA_API_ANDROID_TEXT_CLIPBOARDMANAGER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::text { class ClipboardManager; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::text::ClipboardManager>
{
	static constexpr fixed_string class_name = "android/text/ClipboardManager";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEXT_CLIPBOARDMANAGER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_TEXT_CLIPBOARDMANAGER)
#define SCAPIX_JAVA_API_ANDROID_TEXT_CLIPBOARDMANAGER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/CharSequence.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::text::ClipboardManager : public jni::object_base<"android/text/ClipboardManager",
	java::lang::Object>
{
public:

	static jni::ref<android::text::ClipboardManager> new_object() { return base_::new_object(); }
	jni::ref<java::lang::CharSequence> getText() { return call_method<"getText", jni::ref<java::lang::CharSequence>>(); }
	void setText(jni::ref<java::lang::CharSequence> p1) { return call_method<"setText", void>(p1); }
	jboolean hasText() { return call_method<"hasText", jboolean>(); }

protected:

	ClipboardManager(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEXT_CLIPBOARDMANAGER
