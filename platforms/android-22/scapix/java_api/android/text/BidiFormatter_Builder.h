// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_TEXT_BIDIFORMATTER_BUILDER_FWD
#define SCAPIX_JAVA_API_ANDROID_TEXT_BIDIFORMATTER_BUILDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::text { class BidiFormatter_Builder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::text::BidiFormatter_Builder>
{
	static constexpr fixed_string class_name = "android/text/BidiFormatter$Builder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEXT_BIDIFORMATTER_BUILDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_TEXT_BIDIFORMATTER_BUILDER)
#define SCAPIX_JAVA_API_ANDROID_TEXT_BIDIFORMATTER_BUILDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/text/BidiFormatter.h>
#include <scapix/java_api/android/text/TextDirectionHeuristic.h>
#include <scapix/java_api/java/util/Locale.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::text::BidiFormatter_Builder : public jni::object_base<"android/text/BidiFormatter$Builder",
	java::lang::Object>
{
public:

	static jni::ref<android::text::BidiFormatter_Builder> new_object() { return base_::new_object(); }
	static jni::ref<android::text::BidiFormatter_Builder> new_object(jboolean rtlContext) { return base_::new_object(rtlContext); }
	static jni::ref<android::text::BidiFormatter_Builder> new_object(jni::ref<java::util::Locale> locale) { return base_::new_object(locale); }
	jni::ref<android::text::BidiFormatter_Builder> stereoReset(jboolean stereoReset) { return call_method<"stereoReset", jni::ref<android::text::BidiFormatter_Builder>>(stereoReset); }
	jni::ref<android::text::BidiFormatter_Builder> setTextDirectionHeuristic(jni::ref<android::text::TextDirectionHeuristic> heuristic) { return call_method<"setTextDirectionHeuristic", jni::ref<android::text::BidiFormatter_Builder>>(heuristic); }
	jni::ref<android::text::BidiFormatter> build() { return call_method<"build", jni::ref<android::text::BidiFormatter>>(); }

protected:

	BidiFormatter_Builder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEXT_BIDIFORMATTER_BUILDER
