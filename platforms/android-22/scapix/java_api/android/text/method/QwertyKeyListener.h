// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/text/method/BaseKeyListener.h>

#ifndef SCAPIX_JAVA_API_ANDROID_TEXT_METHOD_QWERTYKEYLISTENER_FWD
#define SCAPIX_JAVA_API_ANDROID_TEXT_METHOD_QWERTYKEYLISTENER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::text::method { class QwertyKeyListener; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::text::method::QwertyKeyListener>
{
	static constexpr fixed_string class_name = "android/text/method/QwertyKeyListener";
	using base_classes = std::tuple<scapix::java_api::android::text::method::BaseKeyListener>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEXT_METHOD_QWERTYKEYLISTENER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_TEXT_METHOD_QWERTYKEYLISTENER)
#define SCAPIX_JAVA_API_ANDROID_TEXT_METHOD_QWERTYKEYLISTENER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/text/Editable.h>
#include <scapix/java_api/android/text/Spannable.h>
#include <scapix/java_api/android/text/method/TextKeyListener_Capitalize.h>
#include <scapix/java_api/android/view/KeyEvent.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::text::method::QwertyKeyListener : public jni::object_base<"android/text/method/QwertyKeyListener",
	android::text::method::BaseKeyListener>
{
public:

	static jni::ref<android::text::method::QwertyKeyListener> new_object(jni::ref<android::text::method::TextKeyListener_Capitalize> cap, jboolean autoText) { return base_::new_object(cap, autoText); }
	static jni::ref<android::text::method::QwertyKeyListener> getInstance(jboolean autoText, jni::ref<android::text::method::TextKeyListener_Capitalize> cap) { return call_static_method<"getInstance", jni::ref<android::text::method::QwertyKeyListener>>(autoText, cap); }
	static jni::ref<android::text::method::QwertyKeyListener> getInstanceForFullKeyboard() { return call_static_method<"getInstanceForFullKeyboard", jni::ref<android::text::method::QwertyKeyListener>>(); }
	jint getInputType() { return call_method<"getInputType", jint>(); }
	jboolean onKeyDown(jni::ref<android::view::View> view, jni::ref<android::text::Editable> content, jint keyCode, jni::ref<android::view::KeyEvent> event) { return call_method<"onKeyDown", jboolean>(view, content, keyCode, event); }
	static void markAsReplaced(jni::ref<android::text::Spannable> content, jint start, jint end, jni::ref<java::lang::String> original) { return call_static_method<"markAsReplaced", void>(content, start, end, original); }

protected:

	QwertyKeyListener(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEXT_METHOD_QWERTYKEYLISTENER
