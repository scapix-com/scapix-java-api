// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_APP_ACTIVITYMANAGER_RUNNINGTASKINFO_FWD
#define SCAPIX_JAVA_API_ANDROID_APP_ACTIVITYMANAGER_RUNNINGTASKINFO_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::app { class ActivityManager_RunningTaskInfo; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::app::ActivityManager_RunningTaskInfo>
{
	static constexpr fixed_string class_name = "android/app/ActivityManager$RunningTaskInfo";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_ACTIVITYMANAGER_RUNNINGTASKINFO_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_APP_ACTIVITYMANAGER_RUNNINGTASKINFO)
#define SCAPIX_JAVA_API_ANDROID_APP_ACTIVITYMANAGER_RUNNINGTASKINFO

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/ComponentName.h>
#include <scapix/java_api/android/graphics/Bitmap.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::app::ActivityManager_RunningTaskInfo : public jni::object_base<"android/app/ActivityManager$RunningTaskInfo",
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }
	jni::ref<android::content::ComponentName> baseActivity() { return get_field<"baseActivity", jni::ref<android::content::ComponentName>>(); }
	void baseActivity(jni::ref<android::content::ComponentName> v) { set_field<"baseActivity", jni::ref<android::content::ComponentName>>(v); }
	jni::ref<java::lang::CharSequence> description() { return get_field<"description", jni::ref<java::lang::CharSequence>>(); }
	void description(jni::ref<java::lang::CharSequence> v) { set_field<"description", jni::ref<java::lang::CharSequence>>(v); }
	jint id() { return get_field<"id", jint>(); }
	void id(jint v) { set_field<"id", jint>(v); }
	jint numActivities() { return get_field<"numActivities", jint>(); }
	void numActivities(jint v) { set_field<"numActivities", jint>(v); }
	jint numRunning() { return get_field<"numRunning", jint>(); }
	void numRunning(jint v) { set_field<"numRunning", jint>(v); }
	jni::ref<android::graphics::Bitmap> thumbnail() { return get_field<"thumbnail", jni::ref<android::graphics::Bitmap>>(); }
	void thumbnail(jni::ref<android::graphics::Bitmap> v) { set_field<"thumbnail", jni::ref<android::graphics::Bitmap>>(v); }
	jni::ref<android::content::ComponentName> topActivity() { return get_field<"topActivity", jni::ref<android::content::ComponentName>>(); }
	void topActivity(jni::ref<android::content::ComponentName> v) { set_field<"topActivity", jni::ref<android::content::ComponentName>>(v); }

	static jni::ref<android::app::ActivityManager_RunningTaskInfo> new_object() { return base_::new_object(); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	void writeToParcel(jni::ref<android::os::Parcel> dest, jint flags) { return call_method<"writeToParcel", void>(dest, flags); }
	void readFromParcel(jni::ref<android::os::Parcel> source) { return call_method<"readFromParcel", void>(source); }

protected:

	ActivityManager_RunningTaskInfo(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_ACTIVITYMANAGER_RUNNINGTASKINFO
