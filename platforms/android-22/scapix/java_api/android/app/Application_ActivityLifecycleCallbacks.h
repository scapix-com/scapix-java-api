// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_APP_APPLICATION_ACTIVITYLIFECYCLECALLBACKS_FWD
#define SCAPIX_JAVA_API_ANDROID_APP_APPLICATION_ACTIVITYLIFECYCLECALLBACKS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::app { class Application_ActivityLifecycleCallbacks; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::app::Application_ActivityLifecycleCallbacks>
{
	static constexpr fixed_string class_name = "android/app/Application$ActivityLifecycleCallbacks";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_APPLICATION_ACTIVITYLIFECYCLECALLBACKS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_APP_APPLICATION_ACTIVITYLIFECYCLECALLBACKS)
#define SCAPIX_JAVA_API_ANDROID_APP_APPLICATION_ACTIVITYLIFECYCLECALLBACKS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/app/Activity.h>
#include <scapix/java_api/android/os/Bundle.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::app::Application_ActivityLifecycleCallbacks : public jni::object_base<"android/app/Application$ActivityLifecycleCallbacks",
	java::lang::Object>
{
public:

	void onActivityCreated(jni::ref<android::app::Activity> p1, jni::ref<android::os::Bundle> p2) { return call_method<"onActivityCreated", void>(p1, p2); }
	void onActivityStarted(jni::ref<android::app::Activity> p1) { return call_method<"onActivityStarted", void>(p1); }
	void onActivityResumed(jni::ref<android::app::Activity> p1) { return call_method<"onActivityResumed", void>(p1); }
	void onActivityPaused(jni::ref<android::app::Activity> p1) { return call_method<"onActivityPaused", void>(p1); }
	void onActivityStopped(jni::ref<android::app::Activity> p1) { return call_method<"onActivityStopped", void>(p1); }
	void onActivitySaveInstanceState(jni::ref<android::app::Activity> p1, jni::ref<android::os::Bundle> p2) { return call_method<"onActivitySaveInstanceState", void>(p1, p2); }
	void onActivityDestroyed(jni::ref<android::app::Activity> p1) { return call_method<"onActivityDestroyed", void>(p1); }

protected:

	Application_ActivityLifecycleCallbacks(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_APPLICATION_ACTIVITYLIFECYCLECALLBACKS
