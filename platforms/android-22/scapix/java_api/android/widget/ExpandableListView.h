// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/widget/ListView.h>

#ifndef SCAPIX_JAVA_API_ANDROID_WIDGET_EXPANDABLELISTVIEW_FWD
#define SCAPIX_JAVA_API_ANDROID_WIDGET_EXPANDABLELISTVIEW_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::widget { class ExpandableListView; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::widget::ExpandableListView>
{
	static constexpr fixed_string class_name = "android/widget/ExpandableListView";
	using base_classes = std::tuple<scapix::java_api::android::widget::ListView>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_WIDGET_EXPANDABLELISTVIEW_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_WIDGET_EXPANDABLELISTVIEW)
#define SCAPIX_JAVA_API_ANDROID_WIDGET_EXPANDABLELISTVIEW

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/graphics/drawable/Drawable.h>
#include <scapix/java_api/android/os/Parcelable.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/android/view/accessibility/AccessibilityEvent.h>
#include <scapix/java_api/android/view/accessibility/AccessibilityNodeInfo.h>
#include <scapix/java_api/android/widget/AdapterView_OnItemClickListener.h>
#include <scapix/java_api/android/widget/ExpandableListAdapter.h>
#include <scapix/java_api/android/widget/ExpandableListView_OnChildClickListener.h>
#include <scapix/java_api/android/widget/ExpandableListView_OnGroupClickListener.h>
#include <scapix/java_api/android/widget/ExpandableListView_OnGroupCollapseListener.h>
#include <scapix/java_api/android/widget/ExpandableListView_OnGroupExpandListener.h>
#include <scapix/java_api/android/widget/ListAdapter.h>
#include <scapix/java_api/android/widget/ExpandableListView_ExpandableListContextMenuInfo.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::widget::ExpandableListView : public jni::object_base<"android/widget/ExpandableListView",
	android::widget::ListView>
{
public:

	using ExpandableListContextMenuInfo = ExpandableListView_ExpandableListContextMenuInfo;
	using OnChildClickListener = ExpandableListView_OnChildClickListener;
	using OnGroupClickListener = ExpandableListView_OnGroupClickListener;
	using OnGroupExpandListener = ExpandableListView_OnGroupExpandListener;
	using OnGroupCollapseListener = ExpandableListView_OnGroupCollapseListener;

	static jint CHILD_INDICATOR_INHERIT() { return get_static_field<"CHILD_INDICATOR_INHERIT", jint>(); }
	static jint PACKED_POSITION_TYPE_CHILD() { return get_static_field<"PACKED_POSITION_TYPE_CHILD", jint>(); }
	static jint PACKED_POSITION_TYPE_GROUP() { return get_static_field<"PACKED_POSITION_TYPE_GROUP", jint>(); }
	static jint PACKED_POSITION_TYPE_NULL() { return get_static_field<"PACKED_POSITION_TYPE_NULL", jint>(); }
	static jlong PACKED_POSITION_VALUE_NULL() { return get_static_field<"PACKED_POSITION_VALUE_NULL", jlong>(); }

	static jni::ref<android::widget::ExpandableListView> new_object(jni::ref<android::content::Context> context) { return base_::new_object(context); }
	static jni::ref<android::widget::ExpandableListView> new_object(jni::ref<android::content::Context> context, jni::ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
	static jni::ref<android::widget::ExpandableListView> new_object(jni::ref<android::content::Context> context, jni::ref<android::util::AttributeSet> attrs, jint defStyleAttr) { return base_::new_object(context, attrs, defStyleAttr); }
	static jni::ref<android::widget::ExpandableListView> new_object(jni::ref<android::content::Context> context, jni::ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes) { return base_::new_object(context, attrs, defStyleAttr, defStyleRes); }
	void onRtlPropertiesChanged(jint layoutDirection) { return call_method<"onRtlPropertiesChanged", void>(layoutDirection); }
	void setChildDivider(jni::ref<android::graphics::drawable::Drawable> childDivider) { return call_method<"setChildDivider", void>(childDivider); }
	void setAdapter(jni::ref<android::widget::ListAdapter> adapter) { return call_method<"setAdapter", void>(adapter); }
	jni::ref<android::widget::ListAdapter> getAdapter() { return call_method<"getAdapter", jni::ref<android::widget::ListAdapter>>(); }
	void setOnItemClickListener(jni::ref<android::widget::AdapterView_OnItemClickListener> l) { return call_method<"setOnItemClickListener", void>(l); }
	void setAdapter(jni::ref<android::widget::ExpandableListAdapter> adapter) { return call_method<"setAdapter", void>(adapter); }
	jni::ref<android::widget::ExpandableListAdapter> getExpandableListAdapter() { return call_method<"getExpandableListAdapter", jni::ref<android::widget::ExpandableListAdapter>>(); }
	jboolean performItemClick(jni::ref<android::view::View> v, jint position, jlong id) { return call_method<"performItemClick", jboolean>(v, position, id); }
	jboolean expandGroup(jint groupPos) { return call_method<"expandGroup", jboolean>(groupPos); }
	jboolean expandGroup(jint groupPos, jboolean animate) { return call_method<"expandGroup", jboolean>(groupPos, animate); }
	jboolean collapseGroup(jint groupPos) { return call_method<"collapseGroup", jboolean>(groupPos); }
	void setOnGroupCollapseListener(jni::ref<android::widget::ExpandableListView_OnGroupCollapseListener> onGroupCollapseListener) { return call_method<"setOnGroupCollapseListener", void>(onGroupCollapseListener); }
	void setOnGroupExpandListener(jni::ref<android::widget::ExpandableListView_OnGroupExpandListener> onGroupExpandListener) { return call_method<"setOnGroupExpandListener", void>(onGroupExpandListener); }
	void setOnGroupClickListener(jni::ref<android::widget::ExpandableListView_OnGroupClickListener> onGroupClickListener) { return call_method<"setOnGroupClickListener", void>(onGroupClickListener); }
	void setOnChildClickListener(jni::ref<android::widget::ExpandableListView_OnChildClickListener> onChildClickListener) { return call_method<"setOnChildClickListener", void>(onChildClickListener); }
	jlong getExpandableListPosition(jint flatListPosition) { return call_method<"getExpandableListPosition", jlong>(flatListPosition); }
	jint getFlatListPosition(jlong packedPosition) { return call_method<"getFlatListPosition", jint>(packedPosition); }
	jlong getSelectedPosition() { return call_method<"getSelectedPosition", jlong>(); }
	jlong getSelectedId() { return call_method<"getSelectedId", jlong>(); }
	void setSelectedGroup(jint groupPosition) { return call_method<"setSelectedGroup", void>(groupPosition); }
	jboolean setSelectedChild(jint groupPosition, jint childPosition, jboolean shouldExpandGroup) { return call_method<"setSelectedChild", jboolean>(groupPosition, childPosition, shouldExpandGroup); }
	jboolean isGroupExpanded(jint groupPosition) { return call_method<"isGroupExpanded", jboolean>(groupPosition); }
	static jint getPackedPositionType(jlong packedPosition) { return call_static_method<"getPackedPositionType", jint>(packedPosition); }
	static jint getPackedPositionGroup(jlong packedPosition) { return call_static_method<"getPackedPositionGroup", jint>(packedPosition); }
	static jint getPackedPositionChild(jlong packedPosition) { return call_static_method<"getPackedPositionChild", jint>(packedPosition); }
	static jlong getPackedPositionForChild(jint groupPosition, jint childPosition) { return call_static_method<"getPackedPositionForChild", jlong>(groupPosition, childPosition); }
	static jlong getPackedPositionForGroup(jint groupPosition) { return call_static_method<"getPackedPositionForGroup", jlong>(groupPosition); }
	void setChildIndicator(jni::ref<android::graphics::drawable::Drawable> childIndicator) { return call_method<"setChildIndicator", void>(childIndicator); }
	void setChildIndicatorBounds(jint left, jint right) { return call_method<"setChildIndicatorBounds", void>(left, right); }
	void setChildIndicatorBoundsRelative(jint start, jint end) { return call_method<"setChildIndicatorBoundsRelative", void>(start, end); }
	void setGroupIndicator(jni::ref<android::graphics::drawable::Drawable> groupIndicator) { return call_method<"setGroupIndicator", void>(groupIndicator); }
	void setIndicatorBounds(jint left, jint right) { return call_method<"setIndicatorBounds", void>(left, right); }
	void setIndicatorBoundsRelative(jint start, jint end) { return call_method<"setIndicatorBoundsRelative", void>(start, end); }
	jni::ref<android::os::Parcelable> onSaveInstanceState() { return call_method<"onSaveInstanceState", jni::ref<android::os::Parcelable>>(); }
	void onRestoreInstanceState(jni::ref<android::os::Parcelable> state) { return call_method<"onRestoreInstanceState", void>(state); }
	void onInitializeAccessibilityEvent(jni::ref<android::view::accessibility::AccessibilityEvent> event) { return call_method<"onInitializeAccessibilityEvent", void>(event); }
	void onInitializeAccessibilityNodeInfo(jni::ref<android::view::accessibility::AccessibilityNodeInfo> info) { return call_method<"onInitializeAccessibilityNodeInfo", void>(info); }

protected:

	ExpandableListView(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_WIDGET_EXPANDABLELISTVIEW
