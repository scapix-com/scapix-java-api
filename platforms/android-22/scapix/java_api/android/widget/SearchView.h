// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/widget/LinearLayout.h>
#include <scapix/java_api/android/view/CollapsibleActionView.h>

#ifndef SCAPIX_JAVA_API_ANDROID_WIDGET_SEARCHVIEW_FWD
#define SCAPIX_JAVA_API_ANDROID_WIDGET_SEARCHVIEW_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::widget { class SearchView; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::widget::SearchView>
{
	static constexpr fixed_string class_name = "android/widget/SearchView";
	using base_classes = std::tuple<scapix::java_api::android::widget::LinearLayout, scapix::java_api::android::view::CollapsibleActionView>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_WIDGET_SEARCHVIEW_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_WIDGET_SEARCHVIEW)
#define SCAPIX_JAVA_API_ANDROID_WIDGET_SEARCHVIEW

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/app/SearchableInfo.h>
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/view/KeyEvent.h>
#include <scapix/java_api/android/view/View_OnClickListener.h>
#include <scapix/java_api/android/view/View_OnFocusChangeListener.h>
#include <scapix/java_api/android/view/accessibility/AccessibilityEvent.h>
#include <scapix/java_api/android/view/accessibility/AccessibilityNodeInfo.h>
#include <scapix/java_api/android/widget/CursorAdapter.h>
#include <scapix/java_api/android/widget/SearchView_OnCloseListener.h>
#include <scapix/java_api/android/widget/SearchView_OnQueryTextListener.h>
#include <scapix/java_api/android/widget/SearchView_OnSuggestionListener.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::widget::SearchView : public jni::object_base<"android/widget/SearchView",
	android::widget::LinearLayout,
	android::view::CollapsibleActionView>
{
public:

	using OnSuggestionListener = SearchView_OnSuggestionListener;
	using OnCloseListener = SearchView_OnCloseListener;
	using OnQueryTextListener = SearchView_OnQueryTextListener;

	static jni::ref<android::widget::SearchView> new_object(jni::ref<android::content::Context> context) { return base_::new_object(context); }
	static jni::ref<android::widget::SearchView> new_object(jni::ref<android::content::Context> context, jni::ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
	static jni::ref<android::widget::SearchView> new_object(jni::ref<android::content::Context> context, jni::ref<android::util::AttributeSet> attrs, jint defStyleAttr) { return base_::new_object(context, attrs, defStyleAttr); }
	static jni::ref<android::widget::SearchView> new_object(jni::ref<android::content::Context> context, jni::ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes) { return base_::new_object(context, attrs, defStyleAttr, defStyleRes); }
	void setSearchableInfo(jni::ref<android::app::SearchableInfo> searchable) { return call_method<"setSearchableInfo", void>(searchable); }
	void setImeOptions(jint imeOptions) { return call_method<"setImeOptions", void>(imeOptions); }
	jint getImeOptions() { return call_method<"getImeOptions", jint>(); }
	void setInputType(jint inputType) { return call_method<"setInputType", void>(inputType); }
	jint getInputType() { return call_method<"getInputType", jint>(); }
	void setOnQueryTextListener(jni::ref<android::widget::SearchView_OnQueryTextListener> listener) { return call_method<"setOnQueryTextListener", void>(listener); }
	void setOnCloseListener(jni::ref<android::widget::SearchView_OnCloseListener> listener) { return call_method<"setOnCloseListener", void>(listener); }
	void setOnQueryTextFocusChangeListener(jni::ref<android::view::View_OnFocusChangeListener> listener) { return call_method<"setOnQueryTextFocusChangeListener", void>(listener); }
	void setOnSuggestionListener(jni::ref<android::widget::SearchView_OnSuggestionListener> listener) { return call_method<"setOnSuggestionListener", void>(listener); }
	void setOnSearchClickListener(jni::ref<android::view::View_OnClickListener> listener) { return call_method<"setOnSearchClickListener", void>(listener); }
	jni::ref<java::lang::CharSequence> getQuery() { return call_method<"getQuery", jni::ref<java::lang::CharSequence>>(); }
	void setQuery(jni::ref<java::lang::CharSequence> query, jboolean submit) { return call_method<"setQuery", void>(query, submit); }
	void setQueryHint(jni::ref<java::lang::CharSequence> hint) { return call_method<"setQueryHint", void>(hint); }
	jni::ref<java::lang::CharSequence> getQueryHint() { return call_method<"getQueryHint", jni::ref<java::lang::CharSequence>>(); }
	void setIconifiedByDefault(jboolean iconified) { return call_method<"setIconifiedByDefault", void>(iconified); }
	jboolean isIconfiedByDefault() { return call_method<"isIconfiedByDefault", jboolean>(); }
	void setIconified(jboolean iconify) { return call_method<"setIconified", void>(iconify); }
	jboolean isIconified() { return call_method<"isIconified", jboolean>(); }
	void setSubmitButtonEnabled(jboolean enabled) { return call_method<"setSubmitButtonEnabled", void>(enabled); }
	jboolean isSubmitButtonEnabled() { return call_method<"isSubmitButtonEnabled", jboolean>(); }
	void setQueryRefinementEnabled(jboolean enable) { return call_method<"setQueryRefinementEnabled", void>(enable); }
	jboolean isQueryRefinementEnabled() { return call_method<"isQueryRefinementEnabled", jboolean>(); }
	void setSuggestionsAdapter(jni::ref<android::widget::CursorAdapter> adapter) { return call_method<"setSuggestionsAdapter", void>(adapter); }
	jni::ref<android::widget::CursorAdapter> getSuggestionsAdapter() { return call_method<"getSuggestionsAdapter", jni::ref<android::widget::CursorAdapter>>(); }
	void setMaxWidth(jint maxpixels) { return call_method<"setMaxWidth", void>(maxpixels); }
	jint getMaxWidth() { return call_method<"getMaxWidth", jint>(); }
	jboolean onKeyDown(jint keyCode, jni::ref<android::view::KeyEvent> event) { return call_method<"onKeyDown", jboolean>(keyCode, event); }
	void onWindowFocusChanged(jboolean hasWindowFocus) { return call_method<"onWindowFocusChanged", void>(hasWindowFocus); }
	void onActionViewCollapsed() { return call_method<"onActionViewCollapsed", void>(); }
	void onActionViewExpanded() { return call_method<"onActionViewExpanded", void>(); }
	void onInitializeAccessibilityEvent(jni::ref<android::view::accessibility::AccessibilityEvent> event) { return call_method<"onInitializeAccessibilityEvent", void>(event); }
	void onInitializeAccessibilityNodeInfo(jni::ref<android::view::accessibility::AccessibilityNodeInfo> info) { return call_method<"onInitializeAccessibilityNodeInfo", void>(info); }

protected:

	SearchView(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_WIDGET_SEARCHVIEW
