// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/view/ViewGroup_MarginLayoutParams.h>

#ifndef SCAPIX_JAVA_API_ANDROID_WIDGET_GRIDLAYOUT_LAYOUTPARAMS_FWD
#define SCAPIX_JAVA_API_ANDROID_WIDGET_GRIDLAYOUT_LAYOUTPARAMS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::widget { class GridLayout_LayoutParams; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::widget::GridLayout_LayoutParams>
{
	static constexpr fixed_string class_name = "android/widget/GridLayout$LayoutParams";
	using base_classes = std::tuple<scapix::java_api::android::view::ViewGroup_MarginLayoutParams>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_WIDGET_GRIDLAYOUT_LAYOUTPARAMS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_WIDGET_GRIDLAYOUT_LAYOUTPARAMS)
#define SCAPIX_JAVA_API_ANDROID_WIDGET_GRIDLAYOUT_LAYOUTPARAMS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/view/ViewGroup_LayoutParams.h>
#include <scapix/java_api/android/widget/GridLayout_Spec.h>
#include <scapix/java_api/java/lang/Object.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::widget::GridLayout_LayoutParams : public jni::object_base<"android/widget/GridLayout$LayoutParams",
	android::view::ViewGroup_MarginLayoutParams>
{
public:

	jni::ref<android::widget::GridLayout_Spec> columnSpec() { return get_field<"columnSpec", jni::ref<android::widget::GridLayout_Spec>>(); }
	void columnSpec(jni::ref<android::widget::GridLayout_Spec> v) { set_field<"columnSpec", jni::ref<android::widget::GridLayout_Spec>>(v); }
	jni::ref<android::widget::GridLayout_Spec> rowSpec() { return get_field<"rowSpec", jni::ref<android::widget::GridLayout_Spec>>(); }
	void rowSpec(jni::ref<android::widget::GridLayout_Spec> v) { set_field<"rowSpec", jni::ref<android::widget::GridLayout_Spec>>(v); }

	static jni::ref<android::widget::GridLayout_LayoutParams> new_object(jni::ref<android::widget::GridLayout_Spec> rowSpec, jni::ref<android::widget::GridLayout_Spec> columnSpec) { return base_::new_object(rowSpec, columnSpec); }
	static jni::ref<android::widget::GridLayout_LayoutParams> new_object() { return base_::new_object(); }
	static jni::ref<android::widget::GridLayout_LayoutParams> new_object(jni::ref<android::view::ViewGroup_LayoutParams> params) { return base_::new_object(params); }
	static jni::ref<android::widget::GridLayout_LayoutParams> new_object(jni::ref<android::view::ViewGroup_MarginLayoutParams> params) { return base_::new_object(params); }
	static jni::ref<android::widget::GridLayout_LayoutParams> new_object(jni::ref<android::widget::GridLayout_LayoutParams> source) { return base_::new_object(source); }
	static jni::ref<android::widget::GridLayout_LayoutParams> new_object(jni::ref<android::content::Context> context, jni::ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
	void setGravity(jint gravity) { return call_method<"setGravity", void>(gravity); }
	jboolean equals(jni::ref<java::lang::Object> o) { return call_method<"equals", jboolean>(o); }
	jint hashCode() { return call_method<"hashCode", jint>(); }

protected:

	GridLayout_LayoutParams(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_WIDGET_GRIDLAYOUT_LAYOUTPARAMS
