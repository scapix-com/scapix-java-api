// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/widget/LinearLayout.h>

#ifndef SCAPIX_JAVA_API_ANDROID_WIDGET_ACTIONMENUVIEW_FWD
#define SCAPIX_JAVA_API_ANDROID_WIDGET_ACTIONMENUVIEW_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::widget { class ActionMenuView; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::widget::ActionMenuView>
{
	static constexpr fixed_string class_name = "android/widget/ActionMenuView";
	using base_classes = std::tuple<scapix::java_api::android::widget::LinearLayout>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_WIDGET_ACTIONMENUVIEW_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_WIDGET_ACTIONMENUVIEW)
#define SCAPIX_JAVA_API_ANDROID_WIDGET_ACTIONMENUVIEW

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/content/res/Configuration.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/view/Menu.h>
#include <scapix/java_api/android/view/accessibility/AccessibilityEvent.h>
#include <scapix/java_api/android/widget/ActionMenuView_LayoutParams.h>
#include <scapix/java_api/android/widget/ActionMenuView_OnMenuItemClickListener.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::widget::ActionMenuView : public jni::object_base<"android/widget/ActionMenuView",
	android::widget::LinearLayout>
{
public:

	using LayoutParams = ActionMenuView_LayoutParams;
	using OnMenuItemClickListener = ActionMenuView_OnMenuItemClickListener;

	static jni::ref<android::widget::ActionMenuView> new_object(jni::ref<android::content::Context> context) { return base_::new_object(context); }
	static jni::ref<android::widget::ActionMenuView> new_object(jni::ref<android::content::Context> context, jni::ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
	void setPopupTheme(jint resId) { return call_method<"setPopupTheme", void>(resId); }
	jint getPopupTheme() { return call_method<"getPopupTheme", jint>(); }
	void onConfigurationChanged(jni::ref<android::content::res::Configuration> newConfig) { return call_method<"onConfigurationChanged", void>(newConfig); }
	void setOnMenuItemClickListener(jni::ref<android::widget::ActionMenuView_OnMenuItemClickListener> listener) { return call_method<"setOnMenuItemClickListener", void>(listener); }
	void onDetachedFromWindow() { return call_method<"onDetachedFromWindow", void>(); }
	jni::ref<android::widget::ActionMenuView_LayoutParams> generateLayoutParams(jni::ref<android::util::AttributeSet> attrs) { return call_method<"generateLayoutParams", jni::ref<android::widget::ActionMenuView_LayoutParams>>(attrs); }
	jni::ref<android::view::Menu> getMenu() { return call_method<"getMenu", jni::ref<android::view::Menu>>(); }
	jboolean showOverflowMenu() { return call_method<"showOverflowMenu", jboolean>(); }
	jboolean hideOverflowMenu() { return call_method<"hideOverflowMenu", jboolean>(); }
	jboolean isOverflowMenuShowing() { return call_method<"isOverflowMenuShowing", jboolean>(); }
	void dismissPopupMenus() { return call_method<"dismissPopupMenus", void>(); }
	jboolean dispatchPopulateAccessibilityEvent(jni::ref<android::view::accessibility::AccessibilityEvent> event) { return call_method<"dispatchPopulateAccessibilityEvent", jboolean>(event); }

protected:

	ActionMenuView(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_WIDGET_ACTIONMENUVIEW
