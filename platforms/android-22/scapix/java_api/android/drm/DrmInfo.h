// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_DRM_DRMINFO_FWD
#define SCAPIX_JAVA_API_ANDROID_DRM_DRMINFO_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::drm { class DrmInfo; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::drm::DrmInfo>
{
	static constexpr fixed_string class_name = "android/drm/DrmInfo";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_DRM_DRMINFO_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_DRM_DRMINFO)
#define SCAPIX_JAVA_API_ANDROID_DRM_DRMINFO

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Iterator.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::drm::DrmInfo : public jni::object_base<"android/drm/DrmInfo",
	java::lang::Object>
{
public:

	static jni::ref<android::drm::DrmInfo> new_object(jint infoType, jni::ref<jni::array<jbyte>> data, jni::ref<java::lang::String> mimeType) { return base_::new_object(infoType, data, mimeType); }
	static jni::ref<android::drm::DrmInfo> new_object(jint infoType, jni::ref<java::lang::String> path, jni::ref<java::lang::String> mimeType) { return base_::new_object(infoType, path, mimeType); }
	void put(jni::ref<java::lang::String> key, jni::ref<java::lang::Object> value) { return call_method<"put", void>(key, value); }
	jni::ref<java::lang::Object> get(jni::ref<java::lang::String> key) { return call_method<"get", jni::ref<java::lang::Object>>(key); }
	jni::ref<java::util::Iterator> keyIterator() { return call_method<"keyIterator", jni::ref<java::util::Iterator>>(); }
	jni::ref<java::util::Iterator> iterator() { return call_method<"iterator", jni::ref<java::util::Iterator>>(); }
	jni::ref<jni::array<jbyte>> getData() { return call_method<"getData", jni::ref<jni::array<jbyte>>>(); }
	jni::ref<java::lang::String> getMimeType() { return call_method<"getMimeType", jni::ref<java::lang::String>>(); }
	jint getInfoType() { return call_method<"getInfoType", jint>(); }

protected:

	DrmInfo(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_DRM_DRMINFO
