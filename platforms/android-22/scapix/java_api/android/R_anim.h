// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_R_ANIM_FWD
#define SCAPIX_JAVA_API_ANDROID_R_ANIM_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android { class R_anim; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::R_anim>
{
	static constexpr fixed_string class_name = "android/R$anim";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_R_ANIM_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_R_ANIM)
#define SCAPIX_JAVA_API_ANDROID_R_ANIM

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::R_anim : public jni::object_base<"android/R$anim",
	java::lang::Object>
{
public:

	static jint accelerate_decelerate_interpolator() { return get_static_field<"accelerate_decelerate_interpolator", jint>(); }
	static jint accelerate_interpolator() { return get_static_field<"accelerate_interpolator", jint>(); }
	static jint anticipate_interpolator() { return get_static_field<"anticipate_interpolator", jint>(); }
	static jint anticipate_overshoot_interpolator() { return get_static_field<"anticipate_overshoot_interpolator", jint>(); }
	static jint bounce_interpolator() { return get_static_field<"bounce_interpolator", jint>(); }
	static jint cycle_interpolator() { return get_static_field<"cycle_interpolator", jint>(); }
	static jint decelerate_interpolator() { return get_static_field<"decelerate_interpolator", jint>(); }
	static jint fade_in() { return get_static_field<"fade_in", jint>(); }
	static jint fade_out() { return get_static_field<"fade_out", jint>(); }
	static jint linear_interpolator() { return get_static_field<"linear_interpolator", jint>(); }
	static jint overshoot_interpolator() { return get_static_field<"overshoot_interpolator", jint>(); }
	static jint slide_in_left() { return get_static_field<"slide_in_left", jint>(); }
	static jint slide_out_right() { return get_static_field<"slide_out_right", jint>(); }

	static jni::ref<android::R_anim> new_object() { return base_::new_object(); }

protected:

	R_anim(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_R_ANIM
