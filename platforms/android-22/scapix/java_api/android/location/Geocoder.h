// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_LOCATION_GEOCODER_FWD
#define SCAPIX_JAVA_API_ANDROID_LOCATION_GEOCODER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::location { class Geocoder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::location::Geocoder>
{
	static constexpr fixed_string class_name = "android/location/Geocoder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_LOCATION_GEOCODER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_LOCATION_GEOCODER)
#define SCAPIX_JAVA_API_ANDROID_LOCATION_GEOCODER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/java/util/Locale.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::location::Geocoder : public jni::object_base<"android/location/Geocoder",
	java::lang::Object>
{
public:

	static jni::ref<android::location::Geocoder> new_object(jni::ref<android::content::Context> context, jni::ref<java::util::Locale> locale) { return base_::new_object(context, locale); }
	static jni::ref<android::location::Geocoder> new_object(jni::ref<android::content::Context> context) { return base_::new_object(context); }
	static jboolean isPresent() { return call_static_method<"isPresent", jboolean>(); }
	jni::ref<java::util::List> getFromLocation(jdouble latitude, jdouble p2, jint longitude) { return call_method<"getFromLocation", jni::ref<java::util::List>>(latitude, p2, longitude); }
	jni::ref<java::util::List> getFromLocationName(jni::ref<java::lang::String> locationName, jint maxResults) { return call_method<"getFromLocationName", jni::ref<java::util::List>>(locationName, maxResults); }
	jni::ref<java::util::List> getFromLocationName(jni::ref<java::lang::String> locationName, jint maxResults, jdouble lowerLeftLatitude, jdouble p4, jdouble lowerLeftLongitude, jdouble p6) { return call_method<"getFromLocationName", jni::ref<java::util::List>>(locationName, maxResults, lowerLeftLatitude, p4, lowerLeftLongitude, p6); }

protected:

	Geocoder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_LOCATION_GEOCODER
