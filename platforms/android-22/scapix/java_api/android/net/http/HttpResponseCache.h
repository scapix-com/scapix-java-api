// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/net/ResponseCache.h>
#include <scapix/java_api/java/io/Closeable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_NET_HTTP_HTTPRESPONSECACHE_FWD
#define SCAPIX_JAVA_API_ANDROID_NET_HTTP_HTTPRESPONSECACHE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::net::http { class HttpResponseCache; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::net::http::HttpResponseCache>
{
	static constexpr fixed_string class_name = "android/net/http/HttpResponseCache";
	using base_classes = std::tuple<scapix::java_api::java::net::ResponseCache, scapix::java_api::java::io::Closeable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_HTTP_HTTPRESPONSECACHE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_NET_HTTP_HTTPRESPONSECACHE)
#define SCAPIX_JAVA_API_ANDROID_NET_HTTP_HTTPRESPONSECACHE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/File.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/net/CacheRequest.h>
#include <scapix/java_api/java/net/CacheResponse.h>
#include <scapix/java_api/java/net/URI.h>
#include <scapix/java_api/java/net/URLConnection.h>
#include <scapix/java_api/java/util/Map.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::net::http::HttpResponseCache : public jni::object_base<"android/net/http/HttpResponseCache",
	java::net::ResponseCache,
	java::io::Closeable>
{
public:

	static jni::ref<android::net::http::HttpResponseCache> getInstalled() { return call_static_method<"getInstalled", jni::ref<android::net::http::HttpResponseCache>>(); }
	static jni::ref<android::net::http::HttpResponseCache> install(jni::ref<java::io::File> directory, jlong maxSize) { return call_static_method<"install", jni::ref<android::net::http::HttpResponseCache>>(directory, maxSize); }
	jni::ref<java::net::CacheResponse> get(jni::ref<java::net::URI> uri, jni::ref<java::lang::String> requestMethod, jni::ref<java::util::Map> requestHeaders) { return call_method<"get", jni::ref<java::net::CacheResponse>>(uri, requestMethod, requestHeaders); }
	jni::ref<java::net::CacheRequest> put(jni::ref<java::net::URI> uri, jni::ref<java::net::URLConnection> urlConnection) { return call_method<"put", jni::ref<java::net::CacheRequest>>(uri, urlConnection); }
	jlong size() { return call_method<"size", jlong>(); }
	jlong maxSize() { return call_method<"maxSize", jlong>(); }
	void flush() { return call_method<"flush", void>(); }
	jint getNetworkCount() { return call_method<"getNetworkCount", jint>(); }
	jint getHitCount() { return call_method<"getHitCount", jint>(); }
	jint getRequestCount() { return call_method<"getRequestCount", jint>(); }
	void close() { return call_method<"close", void>(); }
	void delete_() { return call_method<"delete", void>(); }

protected:

	HttpResponseCache(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_HTTP_HTTPRESPONSECACHE
