// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_NET_NSD_NSDMANAGER_DISCOVERYLISTENER_FWD
#define SCAPIX_JAVA_API_ANDROID_NET_NSD_NSDMANAGER_DISCOVERYLISTENER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::net::nsd { class NsdManager_DiscoveryListener; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::net::nsd::NsdManager_DiscoveryListener>
{
	static constexpr fixed_string class_name = "android/net/nsd/NsdManager$DiscoveryListener";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_NSD_NSDMANAGER_DISCOVERYLISTENER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_NET_NSD_NSDMANAGER_DISCOVERYLISTENER)
#define SCAPIX_JAVA_API_ANDROID_NET_NSD_NSDMANAGER_DISCOVERYLISTENER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/net/nsd/NsdServiceInfo.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::net::nsd::NsdManager_DiscoveryListener : public jni::object_base<"android/net/nsd/NsdManager$DiscoveryListener",
	java::lang::Object>
{
public:

	void onStartDiscoveryFailed(jni::ref<java::lang::String> p1, jint p2) { return call_method<"onStartDiscoveryFailed", void>(p1, p2); }
	void onStopDiscoveryFailed(jni::ref<java::lang::String> p1, jint p2) { return call_method<"onStopDiscoveryFailed", void>(p1, p2); }
	void onDiscoveryStarted(jni::ref<java::lang::String> p1) { return call_method<"onDiscoveryStarted", void>(p1); }
	void onDiscoveryStopped(jni::ref<java::lang::String> p1) { return call_method<"onDiscoveryStopped", void>(p1); }
	void onServiceFound(jni::ref<android::net::nsd::NsdServiceInfo> p1) { return call_method<"onServiceFound", void>(p1); }
	void onServiceLost(jni::ref<android::net::nsd::NsdServiceInfo> p1) { return call_method<"onServiceLost", void>(p1); }

protected:

	NsdManager_DiscoveryListener(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_NSD_NSDMANAGER_DISCOVERYLISTENER
