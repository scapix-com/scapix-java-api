// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_SPEECH_TTS_VOICE_FWD
#define SCAPIX_JAVA_API_ANDROID_SPEECH_TTS_VOICE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::speech::tts { class Voice; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::speech::tts::Voice>
{
	static constexpr fixed_string class_name = "android/speech/tts/Voice";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_SPEECH_TTS_VOICE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_SPEECH_TTS_VOICE)
#define SCAPIX_JAVA_API_ANDROID_SPEECH_TTS_VOICE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Locale.h>
#include <scapix/java_api/java/util/Set.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::speech::tts::Voice : public jni::object_base<"android/speech/tts/Voice",
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }
	static jint LATENCY_HIGH() { return get_static_field<"LATENCY_HIGH", jint>(); }
	static jint LATENCY_LOW() { return get_static_field<"LATENCY_LOW", jint>(); }
	static jint LATENCY_NORMAL() { return get_static_field<"LATENCY_NORMAL", jint>(); }
	static jint LATENCY_VERY_HIGH() { return get_static_field<"LATENCY_VERY_HIGH", jint>(); }
	static jint LATENCY_VERY_LOW() { return get_static_field<"LATENCY_VERY_LOW", jint>(); }
	static jint QUALITY_HIGH() { return get_static_field<"QUALITY_HIGH", jint>(); }
	static jint QUALITY_LOW() { return get_static_field<"QUALITY_LOW", jint>(); }
	static jint QUALITY_NORMAL() { return get_static_field<"QUALITY_NORMAL", jint>(); }
	static jint QUALITY_VERY_HIGH() { return get_static_field<"QUALITY_VERY_HIGH", jint>(); }
	static jint QUALITY_VERY_LOW() { return get_static_field<"QUALITY_VERY_LOW", jint>(); }

	static jni::ref<android::speech::tts::Voice> new_object(jni::ref<java::lang::String> name, jni::ref<java::util::Locale> locale, jint quality, jint latency, jboolean requiresNetworkConnection, jni::ref<java::util::Set> features) { return base_::new_object(name, locale, quality, latency, requiresNetworkConnection, features); }
	void writeToParcel(jni::ref<android::os::Parcel> dest, jint flags) { return call_method<"writeToParcel", void>(dest, flags); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	jni::ref<java::util::Locale> getLocale() { return call_method<"getLocale", jni::ref<java::util::Locale>>(); }
	jint getQuality() { return call_method<"getQuality", jint>(); }
	jint getLatency() { return call_method<"getLatency", jint>(); }
	jboolean isNetworkConnectionRequired() { return call_method<"isNetworkConnectionRequired", jboolean>(); }
	jni::ref<java::lang::String> getName() { return call_method<"getName", jni::ref<java::lang::String>>(); }
	jni::ref<java::util::Set> getFeatures() { return call_method<"getFeatures", jni::ref<java::util::Set>>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jboolean equals(jni::ref<java::lang::Object> obj) { return call_method<"equals", jboolean>(obj); }

protected:

	Voice(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_SPEECH_TTS_VOICE
