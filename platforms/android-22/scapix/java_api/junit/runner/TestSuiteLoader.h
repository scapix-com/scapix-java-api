// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JUNIT_RUNNER_TESTSUITELOADER_FWD
#define SCAPIX_JAVA_API_JUNIT_RUNNER_TESTSUITELOADER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::junit::runner { class TestSuiteLoader; }

template<>
struct scapix::jni::object_traits<scapix::java_api::junit::runner::TestSuiteLoader>
{
	static constexpr fixed_string class_name = "junit/runner/TestSuiteLoader";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JUNIT_RUNNER_TESTSUITELOADER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JUNIT_RUNNER_TESTSUITELOADER)
#define SCAPIX_JAVA_API_JUNIT_RUNNER_TESTSUITELOADER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class junit::runner::TestSuiteLoader : public jni::object_base<"junit/runner/TestSuiteLoader",
	java::lang::Object>
{
public:

	jni::ref<java::lang::Class> load(jni::ref<java::lang::String> p1) { return call_method<"load", jni::ref<java::lang::Class>>(p1); }
	jni::ref<java::lang::Class> reload(jni::ref<java::lang::Class> p1) { return call_method<"reload", jni::ref<java::lang::Class>>(p1); }

protected:

	TestSuiteLoader(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JUNIT_RUNNER_TESTSUITELOADER
