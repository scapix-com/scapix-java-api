// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JUNIT_FRAMEWORK_TESTLISTENER_FWD
#define SCAPIX_JAVA_API_JUNIT_FRAMEWORK_TESTLISTENER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::junit::framework { class TestListener; }

template<>
struct scapix::jni::object_traits<scapix::java_api::junit::framework::TestListener>
{
	static constexpr fixed_string class_name = "junit/framework/TestListener";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JUNIT_FRAMEWORK_TESTLISTENER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JUNIT_FRAMEWORK_TESTLISTENER)
#define SCAPIX_JAVA_API_JUNIT_FRAMEWORK_TESTLISTENER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Throwable.h>
#include <scapix/java_api/junit/framework/AssertionFailedError.h>
#include <scapix/java_api/junit/framework/Test.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class junit::framework::TestListener : public jni::object_base<"junit/framework/TestListener",
	java::lang::Object>
{
public:

	void addError(jni::ref<junit::framework::Test> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"addError", void>(p1, p2); }
	void addFailure(jni::ref<junit::framework::Test> p1, jni::ref<junit::framework::AssertionFailedError> p2) { return call_method<"addFailure", void>(p1, p2); }
	void endTest(jni::ref<junit::framework::Test> p1) { return call_method<"endTest", void>(p1); }
	void startTest(jni::ref<junit::framework::Test> p1) { return call_method<"startTest", void>(p1); }

protected:

	TestListener(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JUNIT_FRAMEWORK_TESTLISTENER
