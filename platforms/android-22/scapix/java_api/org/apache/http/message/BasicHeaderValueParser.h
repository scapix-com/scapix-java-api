// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/org/apache/http/message/HeaderValueParser.h>

#ifndef SCAPIX_JAVA_API_ORG_APACHE_HTTP_MESSAGE_BASICHEADERVALUEPARSER_FWD
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_MESSAGE_BASICHEADERVALUEPARSER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::apache::http::message { class BasicHeaderValueParser; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::apache::http::message::BasicHeaderValueParser>
{
	static constexpr fixed_string class_name = "org/apache/http/message/BasicHeaderValueParser";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::org::apache::http::message::HeaderValueParser>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_MESSAGE_BASICHEADERVALUEPARSER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_APACHE_HTTP_MESSAGE_BASICHEADERVALUEPARSER)
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_MESSAGE_BASICHEADERVALUEPARSER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/apache/http/HeaderElement.h>
#include <scapix/java_api/org/apache/http/NameValuePair.h>
#include <scapix/java_api/org/apache/http/message/ParserCursor.h>
#include <scapix/java_api/org/apache/http/util/CharArrayBuffer.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::apache::http::message::BasicHeaderValueParser : public jni::object_base<"org/apache/http/message/BasicHeaderValueParser",
	java::lang::Object,
	org::apache::http::message::HeaderValueParser>
{
public:

	static jni::ref<org::apache::http::message::BasicHeaderValueParser> DEFAULT() { return get_static_field<"DEFAULT", jni::ref<org::apache::http::message::BasicHeaderValueParser>>(); }

	static jni::ref<org::apache::http::message::BasicHeaderValueParser> new_object() { return base_::new_object(); }
	static jni::ref<jni::array<org::apache::http::HeaderElement>> parseElements(jni::ref<java::lang::String> value, jni::ref<org::apache::http::message::HeaderValueParser> parser) { return call_static_method<"parseElements", jni::ref<jni::array<org::apache::http::HeaderElement>>>(value, parser); }
	jni::ref<jni::array<org::apache::http::HeaderElement>> parseElements(jni::ref<org::apache::http::util::CharArrayBuffer> buffer, jni::ref<org::apache::http::message::ParserCursor> cursor) { return call_method<"parseElements", jni::ref<jni::array<org::apache::http::HeaderElement>>>(buffer, cursor); }
	static jni::ref<org::apache::http::HeaderElement> parseHeaderElement(jni::ref<java::lang::String> value, jni::ref<org::apache::http::message::HeaderValueParser> parser) { return call_static_method<"parseHeaderElement", jni::ref<org::apache::http::HeaderElement>>(value, parser); }
	jni::ref<org::apache::http::HeaderElement> parseHeaderElement(jni::ref<org::apache::http::util::CharArrayBuffer> buffer, jni::ref<org::apache::http::message::ParserCursor> cursor) { return call_method<"parseHeaderElement", jni::ref<org::apache::http::HeaderElement>>(buffer, cursor); }
	static jni::ref<jni::array<org::apache::http::NameValuePair>> parseParameters(jni::ref<java::lang::String> value, jni::ref<org::apache::http::message::HeaderValueParser> parser) { return call_static_method<"parseParameters", jni::ref<jni::array<org::apache::http::NameValuePair>>>(value, parser); }
	jni::ref<jni::array<org::apache::http::NameValuePair>> parseParameters(jni::ref<org::apache::http::util::CharArrayBuffer> buffer, jni::ref<org::apache::http::message::ParserCursor> cursor) { return call_method<"parseParameters", jni::ref<jni::array<org::apache::http::NameValuePair>>>(buffer, cursor); }
	static jni::ref<org::apache::http::NameValuePair> parseNameValuePair(jni::ref<java::lang::String> value, jni::ref<org::apache::http::message::HeaderValueParser> parser) { return call_static_method<"parseNameValuePair", jni::ref<org::apache::http::NameValuePair>>(value, parser); }
	jni::ref<org::apache::http::NameValuePair> parseNameValuePair(jni::ref<org::apache::http::util::CharArrayBuffer> buffer, jni::ref<org::apache::http::message::ParserCursor> cursor) { return call_method<"parseNameValuePair", jni::ref<org::apache::http::NameValuePair>>(buffer, cursor); }
	jni::ref<org::apache::http::NameValuePair> parseNameValuePair(jni::ref<org::apache::http::util::CharArrayBuffer> buffer, jni::ref<org::apache::http::message::ParserCursor> cursor, jni::ref<jni::array<jchar>> delimiters) { return call_method<"parseNameValuePair", jni::ref<org::apache::http::NameValuePair>>(buffer, cursor, delimiters); }

protected:

	BasicHeaderValueParser(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_MESSAGE_BASICHEADERVALUEPARSER
