// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/org/apache/http/HeaderElement.h>
#include <scapix/java_api/java/lang/Cloneable.h>

#ifndef SCAPIX_JAVA_API_ORG_APACHE_HTTP_MESSAGE_BASICHEADERELEMENT_FWD
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_MESSAGE_BASICHEADERELEMENT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::apache::http::message { class BasicHeaderElement; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::apache::http::message::BasicHeaderElement>
{
	static constexpr fixed_string class_name = "org/apache/http/message/BasicHeaderElement";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::org::apache::http::HeaderElement, scapix::java_api::java::lang::Cloneable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_MESSAGE_BASICHEADERELEMENT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_APACHE_HTTP_MESSAGE_BASICHEADERELEMENT)
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_MESSAGE_BASICHEADERELEMENT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/apache/http/NameValuePair.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::apache::http::message::BasicHeaderElement : public jni::object_base<"org/apache/http/message/BasicHeaderElement",
	java::lang::Object,
	org::apache::http::HeaderElement,
	java::lang::Cloneable>
{
public:

	static jni::ref<org::apache::http::message::BasicHeaderElement> new_object(jni::ref<java::lang::String> name, jni::ref<java::lang::String> value, jni::ref<jni::array<org::apache::http::NameValuePair>> parameters) { return base_::new_object(name, value, parameters); }
	static jni::ref<org::apache::http::message::BasicHeaderElement> new_object(jni::ref<java::lang::String> name, jni::ref<java::lang::String> value) { return base_::new_object(name, value); }
	jni::ref<java::lang::String> getName() { return call_method<"getName", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getValue() { return call_method<"getValue", jni::ref<java::lang::String>>(); }
	jni::ref<jni::array<org::apache::http::NameValuePair>> getParameters() { return call_method<"getParameters", jni::ref<jni::array<org::apache::http::NameValuePair>>>(); }
	jint getParameterCount() { return call_method<"getParameterCount", jint>(); }
	jni::ref<org::apache::http::NameValuePair> getParameter(jint index) { return call_method<"getParameter", jni::ref<org::apache::http::NameValuePair>>(index); }
	jni::ref<org::apache::http::NameValuePair> getParameterByName(jni::ref<java::lang::String> name) { return call_method<"getParameterByName", jni::ref<org::apache::http::NameValuePair>>(name); }
	jboolean equals(jni::ref<java::lang::Object> object) { return call_method<"equals", jboolean>(object); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::Object> clone() { return call_method<"clone", jni::ref<java::lang::Object>>(); }

protected:

	BasicHeaderElement(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_MESSAGE_BASICHEADERELEMENT
