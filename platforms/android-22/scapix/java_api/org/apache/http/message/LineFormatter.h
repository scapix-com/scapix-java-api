// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ORG_APACHE_HTTP_MESSAGE_LINEFORMATTER_FWD
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_MESSAGE_LINEFORMATTER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::apache::http::message { class LineFormatter; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::apache::http::message::LineFormatter>
{
	static constexpr fixed_string class_name = "org/apache/http/message/LineFormatter";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_MESSAGE_LINEFORMATTER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_APACHE_HTTP_MESSAGE_LINEFORMATTER)
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_MESSAGE_LINEFORMATTER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/org/apache/http/Header.h>
#include <scapix/java_api/org/apache/http/ProtocolVersion.h>
#include <scapix/java_api/org/apache/http/RequestLine.h>
#include <scapix/java_api/org/apache/http/StatusLine.h>
#include <scapix/java_api/org/apache/http/util/CharArrayBuffer.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::apache::http::message::LineFormatter : public jni::object_base<"org/apache/http/message/LineFormatter",
	java::lang::Object>
{
public:

	jni::ref<org::apache::http::util::CharArrayBuffer> appendProtocolVersion(jni::ref<org::apache::http::util::CharArrayBuffer> p1, jni::ref<org::apache::http::ProtocolVersion> p2) { return call_method<"appendProtocolVersion", jni::ref<org::apache::http::util::CharArrayBuffer>>(p1, p2); }
	jni::ref<org::apache::http::util::CharArrayBuffer> formatRequestLine(jni::ref<org::apache::http::util::CharArrayBuffer> p1, jni::ref<org::apache::http::RequestLine> p2) { return call_method<"formatRequestLine", jni::ref<org::apache::http::util::CharArrayBuffer>>(p1, p2); }
	jni::ref<org::apache::http::util::CharArrayBuffer> formatStatusLine(jni::ref<org::apache::http::util::CharArrayBuffer> p1, jni::ref<org::apache::http::StatusLine> p2) { return call_method<"formatStatusLine", jni::ref<org::apache::http::util::CharArrayBuffer>>(p1, p2); }
	jni::ref<org::apache::http::util::CharArrayBuffer> formatHeader(jni::ref<org::apache::http::util::CharArrayBuffer> p1, jni::ref<org::apache::http::Header> p2) { return call_method<"formatHeader", jni::ref<org::apache::http::util::CharArrayBuffer>>(p1, p2); }

protected:

	LineFormatter(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_MESSAGE_LINEFORMATTER
