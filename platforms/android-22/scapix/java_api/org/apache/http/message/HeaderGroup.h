// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/Cloneable.h>

#ifndef SCAPIX_JAVA_API_ORG_APACHE_HTTP_MESSAGE_HEADERGROUP_FWD
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_MESSAGE_HEADERGROUP_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::apache::http::message { class HeaderGroup; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::apache::http::message::HeaderGroup>
{
	static constexpr fixed_string class_name = "org/apache/http/message/HeaderGroup";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::lang::Cloneable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_MESSAGE_HEADERGROUP_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_APACHE_HTTP_MESSAGE_HEADERGROUP)
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_MESSAGE_HEADERGROUP

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/apache/http/Header.h>
#include <scapix/java_api/org/apache/http/HeaderIterator.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::apache::http::message::HeaderGroup : public jni::object_base<"org/apache/http/message/HeaderGroup",
	java::lang::Object,
	java::lang::Cloneable>
{
public:

	static jni::ref<org::apache::http::message::HeaderGroup> new_object() { return base_::new_object(); }
	void clear() { return call_method<"clear", void>(); }
	void addHeader(jni::ref<org::apache::http::Header> header) { return call_method<"addHeader", void>(header); }
	void removeHeader(jni::ref<org::apache::http::Header> header) { return call_method<"removeHeader", void>(header); }
	void updateHeader(jni::ref<org::apache::http::Header> header) { return call_method<"updateHeader", void>(header); }
	void setHeaders(jni::ref<jni::array<org::apache::http::Header>> headers) { return call_method<"setHeaders", void>(headers); }
	jni::ref<org::apache::http::Header> getCondensedHeader(jni::ref<java::lang::String> name) { return call_method<"getCondensedHeader", jni::ref<org::apache::http::Header>>(name); }
	jni::ref<jni::array<org::apache::http::Header>> getHeaders(jni::ref<java::lang::String> name) { return call_method<"getHeaders", jni::ref<jni::array<org::apache::http::Header>>>(name); }
	jni::ref<org::apache::http::Header> getFirstHeader(jni::ref<java::lang::String> name) { return call_method<"getFirstHeader", jni::ref<org::apache::http::Header>>(name); }
	jni::ref<org::apache::http::Header> getLastHeader(jni::ref<java::lang::String> name) { return call_method<"getLastHeader", jni::ref<org::apache::http::Header>>(name); }
	jni::ref<jni::array<org::apache::http::Header>> getAllHeaders() { return call_method<"getAllHeaders", jni::ref<jni::array<org::apache::http::Header>>>(); }
	jboolean containsHeader(jni::ref<java::lang::String> name) { return call_method<"containsHeader", jboolean>(name); }
	jni::ref<org::apache::http::HeaderIterator> iterator() { return call_method<"iterator", jni::ref<org::apache::http::HeaderIterator>>(); }
	jni::ref<org::apache::http::HeaderIterator> iterator(jni::ref<java::lang::String> name) { return call_method<"iterator", jni::ref<org::apache::http::HeaderIterator>>(name); }
	jni::ref<org::apache::http::message::HeaderGroup> copy() { return call_method<"copy", jni::ref<org::apache::http::message::HeaderGroup>>(); }
	jni::ref<java::lang::Object> clone() { return call_method<"clone", jni::ref<java::lang::Object>>(); }

protected:

	HeaderGroup(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_MESSAGE_HEADERGROUP
