// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ORG_APACHE_HTTP_COOKIE_COOKIESPEC_FWD
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_COOKIE_COOKIESPEC_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::apache::http::cookie { class CookieSpec; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::apache::http::cookie::CookieSpec>
{
	static constexpr fixed_string class_name = "org/apache/http/cookie/CookieSpec";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_COOKIE_COOKIESPEC_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_APACHE_HTTP_COOKIE_COOKIESPEC)
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_COOKIE_COOKIESPEC

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/org/apache/http/Header.h>
#include <scapix/java_api/org/apache/http/cookie/Cookie.h>
#include <scapix/java_api/org/apache/http/cookie/CookieOrigin.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::apache::http::cookie::CookieSpec : public jni::object_base<"org/apache/http/cookie/CookieSpec",
	java::lang::Object>
{
public:

	jint getVersion() { return call_method<"getVersion", jint>(); }
	jni::ref<java::util::List> parse(jni::ref<org::apache::http::Header> p1, jni::ref<org::apache::http::cookie::CookieOrigin> p2) { return call_method<"parse", jni::ref<java::util::List>>(p1, p2); }
	void validate(jni::ref<org::apache::http::cookie::Cookie> p1, jni::ref<org::apache::http::cookie::CookieOrigin> p2) { return call_method<"validate", void>(p1, p2); }
	jboolean match(jni::ref<org::apache::http::cookie::Cookie> p1, jni::ref<org::apache::http::cookie::CookieOrigin> p2) { return call_method<"match", jboolean>(p1, p2); }
	jni::ref<java::util::List> formatCookies(jni::ref<java::util::List> p1) { return call_method<"formatCookies", jni::ref<java::util::List>>(p1); }
	jni::ref<org::apache::http::Header> getVersionHeader() { return call_method<"getVersionHeader", jni::ref<org::apache::http::Header>>(); }

protected:

	CookieSpec(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_COOKIE_COOKIESPEC
