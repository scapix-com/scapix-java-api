// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/org/apache/http/HttpMessage.h>

#ifndef SCAPIX_JAVA_API_ORG_APACHE_HTTP_HTTPRESPONSE_FWD
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_HTTPRESPONSE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::apache::http { class HttpResponse; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::apache::http::HttpResponse>
{
	static constexpr fixed_string class_name = "org/apache/http/HttpResponse";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::org::apache::http::HttpMessage>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_HTTPRESPONSE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_APACHE_HTTP_HTTPRESPONSE)
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_HTTPRESPONSE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Locale.h>
#include <scapix/java_api/org/apache/http/HttpEntity.h>
#include <scapix/java_api/org/apache/http/ProtocolVersion.h>
#include <scapix/java_api/org/apache/http/StatusLine.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::apache::http::HttpResponse : public jni::object_base<"org/apache/http/HttpResponse",
	java::lang::Object,
	org::apache::http::HttpMessage>
{
public:

	jni::ref<org::apache::http::StatusLine> getStatusLine() { return call_method<"getStatusLine", jni::ref<org::apache::http::StatusLine>>(); }
	void setStatusLine(jni::ref<org::apache::http::StatusLine> p1) { return call_method<"setStatusLine", void>(p1); }
	void setStatusLine(jni::ref<org::apache::http::ProtocolVersion> p1, jint p2) { return call_method<"setStatusLine", void>(p1, p2); }
	void setStatusLine(jni::ref<org::apache::http::ProtocolVersion> p1, jint p2, jni::ref<java::lang::String> p3) { return call_method<"setStatusLine", void>(p1, p2, p3); }
	void setStatusCode(jint p1) { return call_method<"setStatusCode", void>(p1); }
	void setReasonPhrase(jni::ref<java::lang::String> p1) { return call_method<"setReasonPhrase", void>(p1); }
	jni::ref<org::apache::http::HttpEntity> getEntity() { return call_method<"getEntity", jni::ref<org::apache::http::HttpEntity>>(); }
	void setEntity(jni::ref<org::apache::http::HttpEntity> p1) { return call_method<"setEntity", void>(p1); }
	jni::ref<java::util::Locale> getLocale() { return call_method<"getLocale", jni::ref<java::util::Locale>>(); }
	void setLocale(jni::ref<java::util::Locale> p1) { return call_method<"setLocale", void>(p1); }

protected:

	HttpResponse(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_HTTPRESPONSE
