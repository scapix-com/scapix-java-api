// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/org/apache/http/HttpConnectionMetrics.h>

#ifndef SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_HTTPCONNECTIONMETRICSIMPL_FWD
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_HTTPCONNECTIONMETRICSIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::apache::http::impl { class HttpConnectionMetricsImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::apache::http::impl::HttpConnectionMetricsImpl>
{
	static constexpr fixed_string class_name = "org/apache/http/impl/HttpConnectionMetricsImpl";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::org::apache::http::HttpConnectionMetrics>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_HTTPCONNECTIONMETRICSIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_HTTPCONNECTIONMETRICSIMPL)
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_HTTPCONNECTIONMETRICSIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/apache/http/io/HttpTransportMetrics.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::apache::http::impl::HttpConnectionMetricsImpl : public jni::object_base<"org/apache/http/impl/HttpConnectionMetricsImpl",
	java::lang::Object,
	org::apache::http::HttpConnectionMetrics>
{
public:

	static jni::ref<java::lang::String> RECEIVED_BYTES_COUNT() { return get_static_field<"RECEIVED_BYTES_COUNT", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> REQUEST_COUNT() { return get_static_field<"REQUEST_COUNT", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> RESPONSE_COUNT() { return get_static_field<"RESPONSE_COUNT", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> SENT_BYTES_COUNT() { return get_static_field<"SENT_BYTES_COUNT", jni::ref<java::lang::String>>(); }

	static jni::ref<org::apache::http::impl::HttpConnectionMetricsImpl> new_object(jni::ref<org::apache::http::io::HttpTransportMetrics> inTransportMetric, jni::ref<org::apache::http::io::HttpTransportMetrics> outTransportMetric) { return base_::new_object(inTransportMetric, outTransportMetric); }
	jlong getReceivedBytesCount() { return call_method<"getReceivedBytesCount", jlong>(); }
	jlong getSentBytesCount() { return call_method<"getSentBytesCount", jlong>(); }
	jlong getRequestCount() { return call_method<"getRequestCount", jlong>(); }
	void incrementRequestCount() { return call_method<"incrementRequestCount", void>(); }
	jlong getResponseCount() { return call_method<"getResponseCount", jlong>(); }
	void incrementResponseCount() { return call_method<"incrementResponseCount", void>(); }
	jni::ref<java::lang::Object> getMetric(jni::ref<java::lang::String> metricName) { return call_method<"getMetric", jni::ref<java::lang::Object>>(metricName); }
	void setMetric(jni::ref<java::lang::String> metricName, jni::ref<java::lang::Object> obj) { return call_method<"setMetric", void>(metricName, obj); }
	void reset() { return call_method<"reset", void>(); }

protected:

	HttpConnectionMetricsImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_HTTPCONNECTIONMETRICSIMPL
