// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/org/apache/http/impl/cookie/BasicClientCookie.h>
#include <scapix/java_api/org/apache/http/cookie/SetCookie2.h>

#ifndef SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_COOKIE_BASICCLIENTCOOKIE2_FWD
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_COOKIE_BASICCLIENTCOOKIE2_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::apache::http::impl::cookie { class BasicClientCookie2; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::apache::http::impl::cookie::BasicClientCookie2>
{
	static constexpr fixed_string class_name = "org/apache/http/impl/cookie/BasicClientCookie2";
	using base_classes = std::tuple<scapix::java_api::org::apache::http::impl::cookie::BasicClientCookie, scapix::java_api::org::apache::http::cookie::SetCookie2>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_COOKIE_BASICCLIENTCOOKIE2_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_COOKIE_BASICCLIENTCOOKIE2)
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_COOKIE_BASICCLIENTCOOKIE2

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Date.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::apache::http::impl::cookie::BasicClientCookie2 : public jni::object_base<"org/apache/http/impl/cookie/BasicClientCookie2",
	org::apache::http::impl::cookie::BasicClientCookie,
	org::apache::http::cookie::SetCookie2>
{
public:

	static jni::ref<org::apache::http::impl::cookie::BasicClientCookie2> new_object(jni::ref<java::lang::String> name, jni::ref<java::lang::String> value) { return base_::new_object(name, value); }
	jni::ref<jni::array<jint>> getPorts() { return call_method<"getPorts", jni::ref<jni::array<jint>>>(); }
	void setPorts(jni::ref<jni::array<jint>> ports) { return call_method<"setPorts", void>(ports); }
	jni::ref<java::lang::String> getCommentURL() { return call_method<"getCommentURL", jni::ref<java::lang::String>>(); }
	void setCommentURL(jni::ref<java::lang::String> commentURL) { return call_method<"setCommentURL", void>(commentURL); }
	void setDiscard(jboolean discard) { return call_method<"setDiscard", void>(discard); }
	jboolean isPersistent() { return call_method<"isPersistent", jboolean>(); }
	jboolean isExpired(jni::ref<java::util::Date> date) { return call_method<"isExpired", jboolean>(date); }
	jni::ref<java::lang::Object> clone() { return call_method<"clone", jni::ref<java::lang::Object>>(); }

protected:

	BasicClientCookie2(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_COOKIE_BASICCLIENTCOOKIE2
