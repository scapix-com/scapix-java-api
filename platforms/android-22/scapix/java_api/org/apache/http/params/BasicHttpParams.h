// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/org/apache/http/params/AbstractHttpParams.h>
#include <scapix/java_api/java/io/Serializable.h>
#include <scapix/java_api/java/lang/Cloneable.h>

#ifndef SCAPIX_JAVA_API_ORG_APACHE_HTTP_PARAMS_BASICHTTPPARAMS_FWD
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_PARAMS_BASICHTTPPARAMS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::apache::http::params { class BasicHttpParams; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::apache::http::params::BasicHttpParams>
{
	static constexpr fixed_string class_name = "org/apache/http/params/BasicHttpParams";
	using base_classes = std::tuple<scapix::java_api::org::apache::http::params::AbstractHttpParams, scapix::java_api::java::io::Serializable, scapix::java_api::java::lang::Cloneable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_PARAMS_BASICHTTPPARAMS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_APACHE_HTTP_PARAMS_BASICHTTPPARAMS)
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_PARAMS_BASICHTTPPARAMS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/apache/http/params/HttpParams.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::apache::http::params::BasicHttpParams : public jni::object_base<"org/apache/http/params/BasicHttpParams",
	org::apache::http::params::AbstractHttpParams,
	java::io::Serializable,
	java::lang::Cloneable>
{
public:

	static jni::ref<org::apache::http::params::BasicHttpParams> new_object() { return base_::new_object(); }
	jni::ref<java::lang::Object> getParameter(jni::ref<java::lang::String> name) { return call_method<"getParameter", jni::ref<java::lang::Object>>(name); }
	jni::ref<org::apache::http::params::HttpParams> setParameter(jni::ref<java::lang::String> name, jni::ref<java::lang::Object> value) { return call_method<"setParameter", jni::ref<org::apache::http::params::HttpParams>>(name, value); }
	jboolean removeParameter(jni::ref<java::lang::String> name) { return call_method<"removeParameter", jboolean>(name); }
	void setParameters(jni::ref<jni::array<java::lang::String>> names, jni::ref<java::lang::Object> value) { return call_method<"setParameters", void>(names, value); }
	jboolean isParameterSet(jni::ref<java::lang::String> name) { return call_method<"isParameterSet", jboolean>(name); }
	jboolean isParameterSetLocally(jni::ref<java::lang::String> name) { return call_method<"isParameterSetLocally", jboolean>(name); }
	void clear() { return call_method<"clear", void>(); }
	jni::ref<org::apache::http::params::HttpParams> copy() { return call_method<"copy", jni::ref<org::apache::http::params::HttpParams>>(); }
	jni::ref<java::lang::Object> clone() { return call_method<"clone", jni::ref<java::lang::Object>>(); }

protected:

	BasicHttpParams(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_PARAMS_BASICHTTPPARAMS
