// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/Cloneable.h>

#ifndef SCAPIX_JAVA_API_ORG_APACHE_HTTP_HTTPHOST_FWD
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_HTTPHOST_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::apache::http { class HttpHost; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::apache::http::HttpHost>
{
	static constexpr fixed_string class_name = "org/apache/http/HttpHost";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::lang::Cloneable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_HTTPHOST_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_APACHE_HTTP_HTTPHOST)
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_HTTPHOST

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::apache::http::HttpHost : public jni::object_base<"org/apache/http/HttpHost",
	java::lang::Object,
	java::lang::Cloneable>
{
public:

	static jni::ref<java::lang::String> DEFAULT_SCHEME_NAME() { return get_static_field<"DEFAULT_SCHEME_NAME", jni::ref<java::lang::String>>(); }

	static jni::ref<org::apache::http::HttpHost> new_object(jni::ref<java::lang::String> hostname, jint port, jni::ref<java::lang::String> scheme) { return base_::new_object(hostname, port, scheme); }
	static jni::ref<org::apache::http::HttpHost> new_object(jni::ref<java::lang::String> hostname, jint port) { return base_::new_object(hostname, port); }
	static jni::ref<org::apache::http::HttpHost> new_object(jni::ref<java::lang::String> hostname) { return base_::new_object(hostname); }
	static jni::ref<org::apache::http::HttpHost> new_object(jni::ref<org::apache::http::HttpHost> httphost) { return base_::new_object(httphost); }
	jni::ref<java::lang::String> getHostName() { return call_method<"getHostName", jni::ref<java::lang::String>>(); }
	jint getPort() { return call_method<"getPort", jint>(); }
	jni::ref<java::lang::String> getSchemeName() { return call_method<"getSchemeName", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> toURI() { return call_method<"toURI", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> toHostString() { return call_method<"toHostString", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jboolean equals(jni::ref<java::lang::Object> obj) { return call_method<"equals", jboolean>(obj); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jni::ref<java::lang::Object> clone() { return call_method<"clone", jni::ref<java::lang::Object>>(); }

protected:

	HttpHost(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_HTTPHOST
