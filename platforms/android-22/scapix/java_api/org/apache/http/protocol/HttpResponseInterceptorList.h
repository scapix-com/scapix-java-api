// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ORG_APACHE_HTTP_PROTOCOL_HTTPRESPONSEINTERCEPTORLIST_FWD
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_PROTOCOL_HTTPRESPONSEINTERCEPTORLIST_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::apache::http::protocol { class HttpResponseInterceptorList; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::apache::http::protocol::HttpResponseInterceptorList>
{
	static constexpr fixed_string class_name = "org/apache/http/protocol/HttpResponseInterceptorList";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_PROTOCOL_HTTPRESPONSEINTERCEPTORLIST_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_APACHE_HTTP_PROTOCOL_HTTPRESPONSEINTERCEPTORLIST)
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_PROTOCOL_HTTPRESPONSEINTERCEPTORLIST

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/org/apache/http/HttpResponseInterceptor.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::apache::http::protocol::HttpResponseInterceptorList : public jni::object_base<"org/apache/http/protocol/HttpResponseInterceptorList",
	java::lang::Object>
{
public:

	void addResponseInterceptor(jni::ref<org::apache::http::HttpResponseInterceptor> p1) { return call_method<"addResponseInterceptor", void>(p1); }
	void addResponseInterceptor(jni::ref<org::apache::http::HttpResponseInterceptor> p1, jint p2) { return call_method<"addResponseInterceptor", void>(p1, p2); }
	jint getResponseInterceptorCount() { return call_method<"getResponseInterceptorCount", jint>(); }
	jni::ref<org::apache::http::HttpResponseInterceptor> getResponseInterceptor(jint p1) { return call_method<"getResponseInterceptor", jni::ref<org::apache::http::HttpResponseInterceptor>>(p1); }
	void clearResponseInterceptors() { return call_method<"clearResponseInterceptors", void>(); }
	void removeResponseInterceptorByClass(jni::ref<java::lang::Class> p1) { return call_method<"removeResponseInterceptorByClass", void>(p1); }
	void setInterceptors(jni::ref<java::util::List> p1) { return call_method<"setInterceptors", void>(p1); }

protected:

	HttpResponseInterceptorList(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_PROTOCOL_HTTPRESPONSEINTERCEPTORLIST
