// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ORG_APACHE_HTTP_PROTOCOL_HTTPREQUESTINTERCEPTORLIST_FWD
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_PROTOCOL_HTTPREQUESTINTERCEPTORLIST_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::apache::http::protocol { class HttpRequestInterceptorList; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::apache::http::protocol::HttpRequestInterceptorList>
{
	static constexpr fixed_string class_name = "org/apache/http/protocol/HttpRequestInterceptorList";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_PROTOCOL_HTTPREQUESTINTERCEPTORLIST_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_APACHE_HTTP_PROTOCOL_HTTPREQUESTINTERCEPTORLIST)
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_PROTOCOL_HTTPREQUESTINTERCEPTORLIST

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/org/apache/http/HttpRequestInterceptor.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::apache::http::protocol::HttpRequestInterceptorList : public jni::object_base<"org/apache/http/protocol/HttpRequestInterceptorList",
	java::lang::Object>
{
public:

	void addRequestInterceptor(jni::ref<org::apache::http::HttpRequestInterceptor> p1) { return call_method<"addRequestInterceptor", void>(p1); }
	void addRequestInterceptor(jni::ref<org::apache::http::HttpRequestInterceptor> p1, jint p2) { return call_method<"addRequestInterceptor", void>(p1, p2); }
	jint getRequestInterceptorCount() { return call_method<"getRequestInterceptorCount", jint>(); }
	jni::ref<org::apache::http::HttpRequestInterceptor> getRequestInterceptor(jint p1) { return call_method<"getRequestInterceptor", jni::ref<org::apache::http::HttpRequestInterceptor>>(p1); }
	void clearRequestInterceptors() { return call_method<"clearRequestInterceptors", void>(); }
	void removeRequestInterceptorByClass(jni::ref<java::lang::Class> p1) { return call_method<"removeRequestInterceptorByClass", void>(p1); }
	void setInterceptors(jni::ref<java::util::List> p1) { return call_method<"setInterceptors", void>(p1); }

protected:

	HttpRequestInterceptorList(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_PROTOCOL_HTTPREQUESTINTERCEPTORLIST
