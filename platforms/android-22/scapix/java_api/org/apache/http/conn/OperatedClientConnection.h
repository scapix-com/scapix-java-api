// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/org/apache/http/HttpClientConnection.h>
#include <scapix/java_api/org/apache/http/HttpInetConnection.h>

#ifndef SCAPIX_JAVA_API_ORG_APACHE_HTTP_CONN_OPERATEDCLIENTCONNECTION_FWD
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_CONN_OPERATEDCLIENTCONNECTION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::apache::http::conn { class OperatedClientConnection; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::apache::http::conn::OperatedClientConnection>
{
	static constexpr fixed_string class_name = "org/apache/http/conn/OperatedClientConnection";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::org::apache::http::HttpClientConnection, scapix::java_api::org::apache::http::HttpInetConnection>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_CONN_OPERATEDCLIENTCONNECTION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_APACHE_HTTP_CONN_OPERATEDCLIENTCONNECTION)
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_CONN_OPERATEDCLIENTCONNECTION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/net/Socket.h>
#include <scapix/java_api/org/apache/http/HttpHost.h>
#include <scapix/java_api/org/apache/http/params/HttpParams.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::apache::http::conn::OperatedClientConnection : public jni::object_base<"org/apache/http/conn/OperatedClientConnection",
	java::lang::Object,
	org::apache::http::HttpClientConnection,
	org::apache::http::HttpInetConnection>
{
public:

	jni::ref<org::apache::http::HttpHost> getTargetHost() { return call_method<"getTargetHost", jni::ref<org::apache::http::HttpHost>>(); }
	jboolean isSecure() { return call_method<"isSecure", jboolean>(); }
	jni::ref<java::net::Socket> getSocket() { return call_method<"getSocket", jni::ref<java::net::Socket>>(); }
	void opening(jni::ref<java::net::Socket> p1, jni::ref<org::apache::http::HttpHost> p2) { return call_method<"opening", void>(p1, p2); }
	void openCompleted(jboolean p1, jni::ref<org::apache::http::params::HttpParams> p2) { return call_method<"openCompleted", void>(p1, p2); }
	void update(jni::ref<java::net::Socket> p1, jni::ref<org::apache::http::HttpHost> p2, jboolean p3, jni::ref<org::apache::http::params::HttpParams> p4) { return call_method<"update", void>(p1, p2, p3, p4); }

protected:

	OperatedClientConnection(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_CONN_OPERATEDCLIENTCONNECTION
