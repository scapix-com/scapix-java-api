// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/org/apache/http/entity/HttpEntityWrapper.h>
#include <scapix/java_api/org/apache/http/conn/ConnectionReleaseTrigger.h>
#include <scapix/java_api/org/apache/http/conn/EofSensorWatcher.h>

#ifndef SCAPIX_JAVA_API_ORG_APACHE_HTTP_CONN_BASICMANAGEDENTITY_FWD
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_CONN_BASICMANAGEDENTITY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::apache::http::conn { class BasicManagedEntity; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::apache::http::conn::BasicManagedEntity>
{
	static constexpr fixed_string class_name = "org/apache/http/conn/BasicManagedEntity";
	using base_classes = std::tuple<scapix::java_api::org::apache::http::entity::HttpEntityWrapper, scapix::java_api::org::apache::http::conn::ConnectionReleaseTrigger, scapix::java_api::org::apache::http::conn::EofSensorWatcher>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_CONN_BASICMANAGEDENTITY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_APACHE_HTTP_CONN_BASICMANAGEDENTITY)
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_CONN_BASICMANAGEDENTITY

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/io/OutputStream.h>
#include <scapix/java_api/org/apache/http/HttpEntity.h>
#include <scapix/java_api/org/apache/http/conn/ManagedClientConnection.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::apache::http::conn::BasicManagedEntity : public jni::object_base<"org/apache/http/conn/BasicManagedEntity",
	org::apache::http::entity::HttpEntityWrapper,
	org::apache::http::conn::ConnectionReleaseTrigger,
	org::apache::http::conn::EofSensorWatcher>
{
public:

	static jni::ref<org::apache::http::conn::BasicManagedEntity> new_object(jni::ref<org::apache::http::HttpEntity> entity, jni::ref<org::apache::http::conn::ManagedClientConnection> conn, jboolean reuse) { return base_::new_object(entity, conn, reuse); }
	jboolean isRepeatable() { return call_method<"isRepeatable", jboolean>(); }
	jni::ref<java::io::InputStream> getContent() { return call_method<"getContent", jni::ref<java::io::InputStream>>(); }
	void consumeContent() { return call_method<"consumeContent", void>(); }
	void writeTo(jni::ref<java::io::OutputStream> outstream) { return call_method<"writeTo", void>(outstream); }
	void releaseConnection() { return call_method<"releaseConnection", void>(); }
	void abortConnection() { return call_method<"abortConnection", void>(); }
	jboolean eofDetected(jni::ref<java::io::InputStream> wrapped) { return call_method<"eofDetected", jboolean>(wrapped); }
	jboolean streamClosed(jni::ref<java::io::InputStream> wrapped) { return call_method<"streamClosed", jboolean>(wrapped); }
	jboolean streamAbort(jni::ref<java::io::InputStream> wrapped) { return call_method<"streamAbort", jboolean>(wrapped); }

protected:

	BasicManagedEntity(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_CONN_BASICMANAGEDENTITY
