// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/org/apache/http/conn/EofSensorWatcher.h>

#ifndef SCAPIX_JAVA_API_ORG_APACHE_HTTP_CONN_BASICEOFSENSORWATCHER_FWD
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_CONN_BASICEOFSENSORWATCHER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::apache::http::conn { class BasicEofSensorWatcher; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::apache::http::conn::BasicEofSensorWatcher>
{
	static constexpr fixed_string class_name = "org/apache/http/conn/BasicEofSensorWatcher";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::org::apache::http::conn::EofSensorWatcher>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_CONN_BASICEOFSENSORWATCHER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_APACHE_HTTP_CONN_BASICEOFSENSORWATCHER)
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_CONN_BASICEOFSENSORWATCHER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/org/apache/http/conn/ManagedClientConnection.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::apache::http::conn::BasicEofSensorWatcher : public jni::object_base<"org/apache/http/conn/BasicEofSensorWatcher",
	java::lang::Object,
	org::apache::http::conn::EofSensorWatcher>
{
public:

	static jni::ref<org::apache::http::conn::BasicEofSensorWatcher> new_object(jni::ref<org::apache::http::conn::ManagedClientConnection> conn, jboolean reuse) { return base_::new_object(conn, reuse); }
	jboolean eofDetected(jni::ref<java::io::InputStream> wrapped) { return call_method<"eofDetected", jboolean>(wrapped); }
	jboolean streamClosed(jni::ref<java::io::InputStream> wrapped) { return call_method<"streamClosed", jboolean>(wrapped); }
	jboolean streamAbort(jni::ref<java::io::InputStream> wrapped) { return call_method<"streamAbort", jboolean>(wrapped); }

protected:

	BasicEofSensorWatcher(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_CONN_BASICEOFSENSORWATCHER
