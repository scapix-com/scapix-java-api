// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ORG_APACHE_HTTP_CONNECTIONREUSESTRATEGY_FWD
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_CONNECTIONREUSESTRATEGY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::apache::http { class ConnectionReuseStrategy; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::apache::http::ConnectionReuseStrategy>
{
	static constexpr fixed_string class_name = "org/apache/http/ConnectionReuseStrategy";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_CONNECTIONREUSESTRATEGY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_APACHE_HTTP_CONNECTIONREUSESTRATEGY)
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_CONNECTIONREUSESTRATEGY

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/org/apache/http/HttpResponse.h>
#include <scapix/java_api/org/apache/http/protocol/HttpContext.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::apache::http::ConnectionReuseStrategy : public jni::object_base<"org/apache/http/ConnectionReuseStrategy",
	java::lang::Object>
{
public:

	jboolean keepAlive(jni::ref<org::apache::http::HttpResponse> p1, jni::ref<org::apache::http::protocol::HttpContext> p2) { return call_method<"keepAlive", jboolean>(p1, p2); }

protected:

	ConnectionReuseStrategy(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_CONNECTIONREUSESTRATEGY
