// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ORG_APACHE_HTTP_HTTPSTATUS_FWD
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_HTTPSTATUS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::apache::http { class HttpStatus; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::apache::http::HttpStatus>
{
	static constexpr fixed_string class_name = "org/apache/http/HttpStatus";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_HTTPSTATUS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_APACHE_HTTP_HTTPSTATUS)
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_HTTPSTATUS

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::apache::http::HttpStatus : public jni::object_base<"org/apache/http/HttpStatus",
	java::lang::Object>
{
public:

	static jint SC_ACCEPTED() { return get_static_field<"SC_ACCEPTED", jint>(); }
	static jint SC_BAD_GATEWAY() { return get_static_field<"SC_BAD_GATEWAY", jint>(); }
	static jint SC_BAD_REQUEST() { return get_static_field<"SC_BAD_REQUEST", jint>(); }
	static jint SC_CONFLICT() { return get_static_field<"SC_CONFLICT", jint>(); }
	static jint SC_CONTINUE() { return get_static_field<"SC_CONTINUE", jint>(); }
	static jint SC_CREATED() { return get_static_field<"SC_CREATED", jint>(); }
	static jint SC_EXPECTATION_FAILED() { return get_static_field<"SC_EXPECTATION_FAILED", jint>(); }
	static jint SC_FAILED_DEPENDENCY() { return get_static_field<"SC_FAILED_DEPENDENCY", jint>(); }
	static jint SC_FORBIDDEN() { return get_static_field<"SC_FORBIDDEN", jint>(); }
	static jint SC_GATEWAY_TIMEOUT() { return get_static_field<"SC_GATEWAY_TIMEOUT", jint>(); }
	static jint SC_GONE() { return get_static_field<"SC_GONE", jint>(); }
	static jint SC_HTTP_VERSION_NOT_SUPPORTED() { return get_static_field<"SC_HTTP_VERSION_NOT_SUPPORTED", jint>(); }
	static jint SC_INSUFFICIENT_SPACE_ON_RESOURCE() { return get_static_field<"SC_INSUFFICIENT_SPACE_ON_RESOURCE", jint>(); }
	static jint SC_INSUFFICIENT_STORAGE() { return get_static_field<"SC_INSUFFICIENT_STORAGE", jint>(); }
	static jint SC_INTERNAL_SERVER_ERROR() { return get_static_field<"SC_INTERNAL_SERVER_ERROR", jint>(); }
	static jint SC_LENGTH_REQUIRED() { return get_static_field<"SC_LENGTH_REQUIRED", jint>(); }
	static jint SC_LOCKED() { return get_static_field<"SC_LOCKED", jint>(); }
	static jint SC_METHOD_FAILURE() { return get_static_field<"SC_METHOD_FAILURE", jint>(); }
	static jint SC_METHOD_NOT_ALLOWED() { return get_static_field<"SC_METHOD_NOT_ALLOWED", jint>(); }
	static jint SC_MOVED_PERMANENTLY() { return get_static_field<"SC_MOVED_PERMANENTLY", jint>(); }
	static jint SC_MOVED_TEMPORARILY() { return get_static_field<"SC_MOVED_TEMPORARILY", jint>(); }
	static jint SC_MULTIPLE_CHOICES() { return get_static_field<"SC_MULTIPLE_CHOICES", jint>(); }
	static jint SC_MULTI_STATUS() { return get_static_field<"SC_MULTI_STATUS", jint>(); }
	static jint SC_NON_AUTHORITATIVE_INFORMATION() { return get_static_field<"SC_NON_AUTHORITATIVE_INFORMATION", jint>(); }
	static jint SC_NOT_ACCEPTABLE() { return get_static_field<"SC_NOT_ACCEPTABLE", jint>(); }
	static jint SC_NOT_FOUND() { return get_static_field<"SC_NOT_FOUND", jint>(); }
	static jint SC_NOT_IMPLEMENTED() { return get_static_field<"SC_NOT_IMPLEMENTED", jint>(); }
	static jint SC_NOT_MODIFIED() { return get_static_field<"SC_NOT_MODIFIED", jint>(); }
	static jint SC_NO_CONTENT() { return get_static_field<"SC_NO_CONTENT", jint>(); }
	static jint SC_OK() { return get_static_field<"SC_OK", jint>(); }
	static jint SC_PARTIAL_CONTENT() { return get_static_field<"SC_PARTIAL_CONTENT", jint>(); }
	static jint SC_PAYMENT_REQUIRED() { return get_static_field<"SC_PAYMENT_REQUIRED", jint>(); }
	static jint SC_PRECONDITION_FAILED() { return get_static_field<"SC_PRECONDITION_FAILED", jint>(); }
	static jint SC_PROCESSING() { return get_static_field<"SC_PROCESSING", jint>(); }
	static jint SC_PROXY_AUTHENTICATION_REQUIRED() { return get_static_field<"SC_PROXY_AUTHENTICATION_REQUIRED", jint>(); }
	static jint SC_REQUESTED_RANGE_NOT_SATISFIABLE() { return get_static_field<"SC_REQUESTED_RANGE_NOT_SATISFIABLE", jint>(); }
	static jint SC_REQUEST_TIMEOUT() { return get_static_field<"SC_REQUEST_TIMEOUT", jint>(); }
	static jint SC_REQUEST_TOO_LONG() { return get_static_field<"SC_REQUEST_TOO_LONG", jint>(); }
	static jint SC_REQUEST_URI_TOO_LONG() { return get_static_field<"SC_REQUEST_URI_TOO_LONG", jint>(); }
	static jint SC_RESET_CONTENT() { return get_static_field<"SC_RESET_CONTENT", jint>(); }
	static jint SC_SEE_OTHER() { return get_static_field<"SC_SEE_OTHER", jint>(); }
	static jint SC_SERVICE_UNAVAILABLE() { return get_static_field<"SC_SERVICE_UNAVAILABLE", jint>(); }
	static jint SC_SWITCHING_PROTOCOLS() { return get_static_field<"SC_SWITCHING_PROTOCOLS", jint>(); }
	static jint SC_TEMPORARY_REDIRECT() { return get_static_field<"SC_TEMPORARY_REDIRECT", jint>(); }
	static jint SC_UNAUTHORIZED() { return get_static_field<"SC_UNAUTHORIZED", jint>(); }
	static jint SC_UNPROCESSABLE_ENTITY() { return get_static_field<"SC_UNPROCESSABLE_ENTITY", jint>(); }
	static jint SC_UNSUPPORTED_MEDIA_TYPE() { return get_static_field<"SC_UNSUPPORTED_MEDIA_TYPE", jint>(); }
	static jint SC_USE_PROXY() { return get_static_field<"SC_USE_PROXY", jint>(); }


protected:

	HttpStatus(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_HTTPSTATUS
