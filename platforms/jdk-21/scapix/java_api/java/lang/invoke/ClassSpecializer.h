// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_LANG_INVOKE_CLASSSPECIALIZER_FWD
#define SCAPIX_JAVA_API_JAVA_LANG_INVOKE_CLASSSPECIALIZER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::lang::invoke { class ClassSpecializer; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::lang::invoke::ClassSpecializer>
{
	static constexpr fixed_string class_name = "java/lang/invoke/ClassSpecializer";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_INVOKE_CLASSSPECIALIZER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_LANG_INVOKE_CLASSSPECIALIZER)
#define SCAPIX_JAVA_API_JAVA_LANG_INVOKE_CLASSSPECIALIZER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/invoke/ClassSpecializer_SpeciesData.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::lang::invoke::ClassSpecializer : public jni::object_base<"java/lang/invoke/ClassSpecializer",
	java::lang::Object>
{
public:

	jni::ref<java::lang::Class> topClass() { return call_method<"topClass", jni::ref<java::lang::Class>>(); }
	jni::ref<java::lang::Class> keyType() { return call_method<"keyType", jni::ref<java::lang::Class>>(); }
	jni::ref<java::lang::Class> metaType() { return call_method<"metaType", jni::ref<java::lang::Class>>(); }
	jni::ref<java::lang::invoke::ClassSpecializer_SpeciesData> findSpecies(jni::ref<java::lang::Object> key) { return call_method<"findSpecies", jni::ref<java::lang::invoke::ClassSpecializer_SpeciesData>>(key); }

protected:

	ClassSpecializer(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_INVOKE_CLASSSPECIALIZER
