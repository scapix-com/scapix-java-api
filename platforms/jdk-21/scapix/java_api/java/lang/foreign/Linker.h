// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_LANG_FOREIGN_LINKER_FWD
#define SCAPIX_JAVA_API_JAVA_LANG_FOREIGN_LINKER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::lang::foreign { class Linker; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::lang::foreign::Linker>
{
	static constexpr fixed_string class_name = "java/lang/foreign/Linker";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_FOREIGN_LINKER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_LANG_FOREIGN_LINKER)
#define SCAPIX_JAVA_API_JAVA_LANG_FOREIGN_LINKER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/foreign/Arena.h>
#include <scapix/java_api/java/lang/foreign/FunctionDescriptor.h>
#include <scapix/java_api/java/lang/foreign/Linker_Option.h>
#include <scapix/java_api/java/lang/foreign/MemorySegment.h>
#include <scapix/java_api/java/lang/foreign/SymbolLookup.h>
#include <scapix/java_api/java/lang/invoke/MethodHandle.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::lang::foreign::Linker : public jni::object_base<"java/lang/foreign/Linker",
	java::lang::Object>
{
public:

	using Option = Linker_Option;

	static jni::ref<java::lang::foreign::Linker> nativeLinker() { return call_static_method<"nativeLinker", jni::ref<java::lang::foreign::Linker>>(); }
	jni::ref<java::lang::invoke::MethodHandle> downcallHandle(jni::ref<java::lang::foreign::MemorySegment> p1, jni::ref<java::lang::foreign::FunctionDescriptor> p2, jni::ref<jni::array<java::lang::foreign::Linker_Option>> p3) { return call_method<"downcallHandle", jni::ref<java::lang::invoke::MethodHandle>>(p1, p2, p3); }
	jni::ref<java::lang::invoke::MethodHandle> downcallHandle(jni::ref<java::lang::foreign::FunctionDescriptor> p1, jni::ref<jni::array<java::lang::foreign::Linker_Option>> p2) { return call_method<"downcallHandle", jni::ref<java::lang::invoke::MethodHandle>>(p1, p2); }
	jni::ref<java::lang::foreign::MemorySegment> upcallStub(jni::ref<java::lang::invoke::MethodHandle> p1, jni::ref<java::lang::foreign::FunctionDescriptor> p2, jni::ref<java::lang::foreign::Arena> p3, jni::ref<jni::array<java::lang::foreign::Linker_Option>> p4) { return call_method<"upcallStub", jni::ref<java::lang::foreign::MemorySegment>>(p1, p2, p3, p4); }
	jni::ref<java::lang::foreign::SymbolLookup> defaultLookup() { return call_method<"defaultLookup", jni::ref<java::lang::foreign::SymbolLookup>>(); }

protected:

	Linker(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_FOREIGN_LINKER
