// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/ref/ReferenceQueue.h>

#ifndef SCAPIX_JAVA_API_JAVA_LANG_REF_NATIVEREFERENCEQUEUE_FWD
#define SCAPIX_JAVA_API_JAVA_LANG_REF_NATIVEREFERENCEQUEUE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::lang::ref { class NativeReferenceQueue; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::lang::ref::NativeReferenceQueue>
{
	static constexpr fixed_string class_name = "java/lang/ref/NativeReferenceQueue";
	using base_classes = std::tuple<scapix::java_api::java::lang::ref::ReferenceQueue>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_REF_NATIVEREFERENCEQUEUE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_LANG_REF_NATIVEREFERENCEQUEUE)
#define SCAPIX_JAVA_API_JAVA_LANG_REF_NATIVEREFERENCEQUEUE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/ref/Reference.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::lang::ref::NativeReferenceQueue : public jni::object_base<"java/lang/ref/NativeReferenceQueue",
	java::lang::ref::ReferenceQueue>
{
public:

	static jni::ref<java::lang::ref::NativeReferenceQueue> new_object() { return base_::new_object(); }
	jni::ref<java::lang::ref::Reference> poll() { return call_method<"poll", jni::ref<java::lang::ref::Reference>>(); }
	jni::ref<java::lang::ref::Reference> remove(jlong timeout) { return call_method<"remove", jni::ref<java::lang::ref::Reference>>(timeout); }
	jni::ref<java::lang::ref::Reference> remove() { return call_method<"remove", jni::ref<java::lang::ref::Reference>>(); }

protected:

	NativeReferenceQueue(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_REF_NATIVEREFERENCEQUEUE
