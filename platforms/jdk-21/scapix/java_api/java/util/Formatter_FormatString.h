// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_UTIL_FORMATTER_FORMATSTRING_FWD
#define SCAPIX_JAVA_API_JAVA_UTIL_FORMATTER_FORMATSTRING_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::util { class Formatter_FormatString; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::util::Formatter_FormatString>
{
	static constexpr fixed_string class_name = "java/util/Formatter$FormatString";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_FORMATTER_FORMATSTRING_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_UTIL_FORMATTER_FORMATSTRING)
#define SCAPIX_JAVA_API_JAVA_UTIL_FORMATTER_FORMATSTRING

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Formatter.h>
#include <scapix/java_api/java/util/Locale.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::util::Formatter_FormatString : public jni::object_base<"java/util/Formatter$FormatString",
	java::lang::Object>
{
public:

	jint index() { return call_method<"index", jint>(); }
	void print(jni::ref<java::util::Formatter> p1, jni::ref<java::lang::Object> p2, jni::ref<java::util::Locale> p3) { return call_method<"print", void>(p1, p2, p3); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	Formatter_FormatString(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_FORMATTER_FORMATSTRING
