// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_UTIL_SPI_RESOURCEBUNDLECONTROLPROVIDER_FWD
#define SCAPIX_JAVA_API_JAVA_UTIL_SPI_RESOURCEBUNDLECONTROLPROVIDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::util::spi { class ResourceBundleControlProvider; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::util::spi::ResourceBundleControlProvider>
{
	static constexpr fixed_string class_name = "java/util/spi/ResourceBundleControlProvider";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_SPI_RESOURCEBUNDLECONTROLPROVIDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_UTIL_SPI_RESOURCEBUNDLECONTROLPROVIDER)
#define SCAPIX_JAVA_API_JAVA_UTIL_SPI_RESOURCEBUNDLECONTROLPROVIDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/ResourceBundle_Control.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::util::spi::ResourceBundleControlProvider : public jni::object_base<"java/util/spi/ResourceBundleControlProvider",
	java::lang::Object>
{
public:

	jni::ref<java::util::ResourceBundle_Control> getControl(jni::ref<java::lang::String> p1) { return call_method<"getControl", jni::ref<java::util::ResourceBundle_Control>>(p1); }

protected:

	ResourceBundleControlProvider(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_SPI_RESOURCEBUNDLECONTROLPROVIDER
