// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/util/Digits.h>

#ifndef SCAPIX_JAVA_API_JAVA_UTIL_HEXDIGITS_FWD
#define SCAPIX_JAVA_API_JAVA_UTIL_HEXDIGITS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::util { class HexDigits; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::util::HexDigits>
{
	static constexpr fixed_string class_name = "java/util/HexDigits";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::util::Digits>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_HEXDIGITS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_UTIL_HEXDIGITS)
#define SCAPIX_JAVA_API_JAVA_UTIL_HEXDIGITS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/invoke/MethodHandle.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::util::HexDigits : public jni::object_base<"java/util/HexDigits",
	java::lang::Object,
	java::util::Digits>
{
public:

	jint digits(jlong value, jni::ref<jni::array<jbyte>> p2, jint buffer, jni::ref<java::lang::invoke::MethodHandle> index) { return call_method<"digits", jint>(value, p2, buffer, index); }
	jint size(jlong value) { return call_method<"size", jint>(value); }

protected:

	HexDigits(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_HEXDIGITS
