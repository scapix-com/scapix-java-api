// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/Cloneable.h>

#ifndef SCAPIX_JAVA_API_JAVA_UTIL_JAR_MANIFEST_FWD
#define SCAPIX_JAVA_API_JAVA_UTIL_JAR_MANIFEST_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::util::jar { class Manifest; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::util::jar::Manifest>
{
	static constexpr fixed_string class_name = "java/util/jar/Manifest";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::lang::Cloneable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_JAR_MANIFEST_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_UTIL_JAR_MANIFEST)
#define SCAPIX_JAVA_API_JAVA_UTIL_JAR_MANIFEST

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/io/OutputStream.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Map.h>
#include <scapix/java_api/java/util/jar/Attributes.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::util::jar::Manifest : public jni::object_base<"java/util/jar/Manifest",
	java::lang::Object,
	java::lang::Cloneable>
{
public:

	static jni::ref<java::util::jar::Manifest> new_object() { return base_::new_object(); }
	static jni::ref<java::util::jar::Manifest> new_object(jni::ref<java::io::InputStream> is) { return base_::new_object(is); }
	static jni::ref<java::util::jar::Manifest> new_object(jni::ref<java::util::jar::Manifest> man) { return base_::new_object(man); }
	jni::ref<java::util::jar::Attributes> getMainAttributes() { return call_method<"getMainAttributes", jni::ref<java::util::jar::Attributes>>(); }
	jni::ref<java::util::Map> getEntries() { return call_method<"getEntries", jni::ref<java::util::Map>>(); }
	jni::ref<java::util::jar::Attributes> getAttributes(jni::ref<java::lang::String> name) { return call_method<"getAttributes", jni::ref<java::util::jar::Attributes>>(name); }
	void clear() { return call_method<"clear", void>(); }
	void write(jni::ref<java::io::OutputStream> out) { return call_method<"write", void>(out); }
	void read(jni::ref<java::io::InputStream> is) { return call_method<"read", void>(is); }
	jboolean equals(jni::ref<java::lang::Object> o) { return call_method<"equals", jboolean>(o); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jni::ref<java::lang::Object> clone() { return call_method<"clone", jni::ref<java::lang::Object>>(); }

protected:

	Manifest(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_JAR_MANIFEST
