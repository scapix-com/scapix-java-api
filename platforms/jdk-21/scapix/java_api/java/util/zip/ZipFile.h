// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/util/zip/ZipConstants.h>
#include <scapix/java_api/java/io/Closeable.h>

#ifndef SCAPIX_JAVA_API_JAVA_UTIL_ZIP_ZIPFILE_FWD
#define SCAPIX_JAVA_API_JAVA_UTIL_ZIP_ZIPFILE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::util::zip { class ZipFile; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::util::zip::ZipFile>
{
	static constexpr fixed_string class_name = "java/util/zip/ZipFile";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::util::zip::ZipConstants, scapix::java_api::java::io::Closeable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_ZIP_ZIPFILE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_UTIL_ZIP_ZIPFILE)
#define SCAPIX_JAVA_API_JAVA_UTIL_ZIP_ZIPFILE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/File.h>
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/nio/charset/Charset.h>
#include <scapix/java_api/java/util/Enumeration.h>
#include <scapix/java_api/java/util/stream/Stream.h>
#include <scapix/java_api/java/util/zip/ZipEntry.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::util::zip::ZipFile : public jni::object_base<"java/util/zip/ZipFile",
	java::lang::Object,
	java::util::zip::ZipConstants,
	java::io::Closeable>
{
public:

	static jint OPEN_READ() { return get_static_field<"OPEN_READ", jint>(); }
	static jint OPEN_DELETE() { return get_static_field<"OPEN_DELETE", jint>(); }

	static jni::ref<java::util::zip::ZipFile> new_object(jni::ref<java::lang::String> name) { return base_::new_object(name); }
	static jni::ref<java::util::zip::ZipFile> new_object(jni::ref<java::io::File> file, jint mode) { return base_::new_object(file, mode); }
	static jni::ref<java::util::zip::ZipFile> new_object(jni::ref<java::io::File> file) { return base_::new_object(file); }
	static jni::ref<java::util::zip::ZipFile> new_object(jni::ref<java::io::File> file, jint mode, jni::ref<java::nio::charset::Charset> charset) { return base_::new_object(file, mode, charset); }
	static jni::ref<java::util::zip::ZipFile> new_object(jni::ref<java::lang::String> name, jni::ref<java::nio::charset::Charset> charset) { return base_::new_object(name, charset); }
	static jni::ref<java::util::zip::ZipFile> new_object(jni::ref<java::io::File> file, jni::ref<java::nio::charset::Charset> charset) { return base_::new_object(file, charset); }
	jni::ref<java::lang::String> getComment() { return call_method<"getComment", jni::ref<java::lang::String>>(); }
	jni::ref<java::util::zip::ZipEntry> getEntry(jni::ref<java::lang::String> name) { return call_method<"getEntry", jni::ref<java::util::zip::ZipEntry>>(name); }
	jni::ref<java::io::InputStream> getInputStream(jni::ref<java::util::zip::ZipEntry> entry) { return call_method<"getInputStream", jni::ref<java::io::InputStream>>(entry); }
	jni::ref<java::lang::String> getName() { return call_method<"getName", jni::ref<java::lang::String>>(); }
	jni::ref<java::util::Enumeration> entries() { return call_method<"entries", jni::ref<java::util::Enumeration>>(); }
	jni::ref<java::util::stream::Stream> stream() { return call_method<"stream", jni::ref<java::util::stream::Stream>>(); }
	jint size() { return call_method<"size", jint>(); }
	void close() { return call_method<"close", void>(); }

protected:

	ZipFile(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_ZIP_ZIPFILE
