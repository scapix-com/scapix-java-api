// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_UTIL_REGEX_CHARPREDICATES_FWD
#define SCAPIX_JAVA_API_JAVA_UTIL_REGEX_CHARPREDICATES_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::util::regex { class CharPredicates; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::util::regex::CharPredicates>
{
	static constexpr fixed_string class_name = "java/util/regex/CharPredicates";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_REGEX_CHARPREDICATES_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_UTIL_REGEX_CHARPREDICATES)
#define SCAPIX_JAVA_API_JAVA_UTIL_REGEX_CHARPREDICATES

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/regex/Pattern_CharPredicate.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::util::regex::CharPredicates : public jni::object_base<"java/util/regex/CharPredicates",
	java::lang::Object>
{
public:

	static jni::ref<java::util::regex::Pattern_CharPredicate> forUnicodeProperty(jni::ref<java::lang::String> propName, jboolean caseIns) { return call_static_method<"forUnicodeProperty", jni::ref<java::util::regex::Pattern_CharPredicate>>(propName, caseIns); }
	static jni::ref<java::util::regex::Pattern_CharPredicate> forPOSIXName(jni::ref<java::lang::String> propName, jboolean caseIns) { return call_static_method<"forPOSIXName", jni::ref<java::util::regex::Pattern_CharPredicate>>(propName, caseIns); }

protected:

	CharPredicates(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_REGEX_CHARPREDICATES
