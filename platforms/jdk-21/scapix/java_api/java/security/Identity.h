// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/security/Principal.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_API_JAVA_SECURITY_IDENTITY_FWD
#define SCAPIX_JAVA_API_JAVA_SECURITY_IDENTITY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::security { class Identity; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::security::Identity>
{
	static constexpr fixed_string class_name = "java/security/Identity";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::security::Principal, scapix::java_api::java::io::Serializable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_SECURITY_IDENTITY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_SECURITY_IDENTITY)
#define SCAPIX_JAVA_API_JAVA_SECURITY_IDENTITY

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/security/Certificate.h>
#include <scapix/java_api/java/security/IdentityScope.h>
#include <scapix/java_api/java/security/PublicKey.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::security::Identity : public jni::object_base<"java/security/Identity",
	java::lang::Object,
	java::security::Principal,
	java::io::Serializable>
{
public:

	static jni::ref<java::security::Identity> new_object(jni::ref<java::lang::String> name, jni::ref<java::security::IdentityScope> scope) { return base_::new_object(name, scope); }
	static jni::ref<java::security::Identity> new_object(jni::ref<java::lang::String> name) { return base_::new_object(name); }
	jni::ref<java::lang::String> getName() { return call_method<"getName", jni::ref<java::lang::String>>(); }
	jni::ref<java::security::IdentityScope> getScope() { return call_method<"getScope", jni::ref<java::security::IdentityScope>>(); }
	jni::ref<java::security::PublicKey> getPublicKey() { return call_method<"getPublicKey", jni::ref<java::security::PublicKey>>(); }
	void setPublicKey(jni::ref<java::security::PublicKey> key) { return call_method<"setPublicKey", void>(key); }
	void setInfo(jni::ref<java::lang::String> info) { return call_method<"setInfo", void>(info); }
	jni::ref<java::lang::String> getInfo() { return call_method<"getInfo", jni::ref<java::lang::String>>(); }
	void addCertificate(jni::ref<java::security::Certificate> certificate) { return call_method<"addCertificate", void>(certificate); }
	void removeCertificate(jni::ref<java::security::Certificate> certificate) { return call_method<"removeCertificate", void>(certificate); }
	jni::ref<jni::array<java::security::Certificate>> certificates() { return call_method<"certificates", jni::ref<jni::array<java::security::Certificate>>>(); }
	jboolean equals(jni::ref<java::lang::Object> identity) { return call_method<"equals", jboolean>(identity); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> toString(jboolean detailed) { return call_method<"toString", jni::ref<java::lang::String>>(detailed); }
	jint hashCode() { return call_method<"hashCode", jint>(); }

protected:

	Identity(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_SECURITY_IDENTITY
