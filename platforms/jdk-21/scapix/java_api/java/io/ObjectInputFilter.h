// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_IO_OBJECTINPUTFILTER_FWD
#define SCAPIX_JAVA_API_JAVA_IO_OBJECTINPUTFILTER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::io { class ObjectInputFilter; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::io::ObjectInputFilter>
{
	static constexpr fixed_string class_name = "java/io/ObjectInputFilter";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_IO_OBJECTINPUTFILTER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_IO_OBJECTINPUTFILTER)
#define SCAPIX_JAVA_API_JAVA_IO_OBJECTINPUTFILTER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/ObjectInputFilter_FilterInfo.h>
#include <scapix/java_api/java/io/ObjectInputFilter_Status.h>
#include <scapix/java_api/java/util/function/Predicate.h>
#include <scapix/java_api/java/io/ObjectInputFilter_Config.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::io::ObjectInputFilter : public jni::object_base<"java/io/ObjectInputFilter",
	java::lang::Object>
{
public:

	using Config = ObjectInputFilter_Config;
	using Status = ObjectInputFilter_Status;
	using FilterInfo = ObjectInputFilter_FilterInfo;

	jni::ref<java::io::ObjectInputFilter_Status> checkInput(jni::ref<java::io::ObjectInputFilter_FilterInfo> p1) { return call_method<"checkInput", jni::ref<java::io::ObjectInputFilter_Status>>(p1); }
	static jni::ref<java::io::ObjectInputFilter> allowFilter(jni::ref<java::util::function::Predicate> predicate, jni::ref<java::io::ObjectInputFilter_Status> otherStatus) { return call_static_method<"allowFilter", jni::ref<java::io::ObjectInputFilter>>(predicate, otherStatus); }
	static jni::ref<java::io::ObjectInputFilter> rejectFilter(jni::ref<java::util::function::Predicate> predicate, jni::ref<java::io::ObjectInputFilter_Status> otherStatus) { return call_static_method<"rejectFilter", jni::ref<java::io::ObjectInputFilter>>(predicate, otherStatus); }
	static jni::ref<java::io::ObjectInputFilter> merge(jni::ref<java::io::ObjectInputFilter> filter, jni::ref<java::io::ObjectInputFilter> anotherFilter) { return call_static_method<"merge", jni::ref<java::io::ObjectInputFilter>>(filter, anotherFilter); }
	static jni::ref<java::io::ObjectInputFilter> rejectUndecidedClass(jni::ref<java::io::ObjectInputFilter> filter) { return call_static_method<"rejectUndecidedClass", jni::ref<java::io::ObjectInputFilter>>(filter); }

protected:

	ObjectInputFilter(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_IO_OBJECTINPUTFILTER
