// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/nio/channels/spi/AbstractInterruptibleChannel.h>
#include <scapix/java_api/java/nio/channels/ReadableByteChannel.h>

#ifndef SCAPIX_JAVA_API_JAVA_NIO_CHANNELS_CHANNELS_READABLEBYTECHANNELIMPL_FWD
#define SCAPIX_JAVA_API_JAVA_NIO_CHANNELS_CHANNELS_READABLEBYTECHANNELIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::nio::channels { class Channels_ReadableByteChannelImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::nio::channels::Channels_ReadableByteChannelImpl>
{
	static constexpr fixed_string class_name = "java/nio/channels/Channels$ReadableByteChannelImpl";
	using base_classes = std::tuple<scapix::java_api::java::nio::channels::spi::AbstractInterruptibleChannel, scapix::java_api::java::nio::channels::ReadableByteChannel>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_NIO_CHANNELS_CHANNELS_READABLEBYTECHANNELIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_NIO_CHANNELS_CHANNELS_READABLEBYTECHANNELIMPL)
#define SCAPIX_JAVA_API_JAVA_NIO_CHANNELS_CHANNELS_READABLEBYTECHANNELIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/nio/ByteBuffer.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::nio::channels::Channels_ReadableByteChannelImpl : public jni::object_base<"java/nio/channels/Channels$ReadableByteChannelImpl",
	java::nio::channels::spi::AbstractInterruptibleChannel,
	java::nio::channels::ReadableByteChannel>
{
public:

	jint read(jni::ref<java::nio::ByteBuffer> dst) { return call_method<"read", jint>(dst); }

protected:

	Channels_ReadableByteChannelImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_NIO_CHANNELS_CHANNELS_READABLEBYTECHANNELIMPL
