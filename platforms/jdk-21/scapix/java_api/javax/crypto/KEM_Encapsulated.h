// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_CRYPTO_KEM_ENCAPSULATED_FWD
#define SCAPIX_JAVA_API_JAVAX_CRYPTO_KEM_ENCAPSULATED_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::crypto { class KEM_Encapsulated; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::crypto::KEM_Encapsulated>
{
	static constexpr fixed_string class_name = "javax/crypto/KEM$Encapsulated";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_CRYPTO_KEM_ENCAPSULATED_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_CRYPTO_KEM_ENCAPSULATED)
#define SCAPIX_JAVA_API_JAVAX_CRYPTO_KEM_ENCAPSULATED

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/javax/crypto/SecretKey.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::crypto::KEM_Encapsulated : public jni::object_base<"javax/crypto/KEM$Encapsulated",
	java::lang::Object>
{
public:

	static jni::ref<javax::crypto::KEM_Encapsulated> new_object(jni::ref<javax::crypto::SecretKey> key, jni::ref<jni::array<jbyte>> encapsulation, jni::ref<jni::array<jbyte>> params) { return base_::new_object(key, encapsulation, params); }
	jni::ref<javax::crypto::SecretKey> key() { return call_method<"key", jni::ref<javax::crypto::SecretKey>>(); }
	jni::ref<jni::array<jbyte>> encapsulation() { return call_method<"encapsulation", jni::ref<jni::array<jbyte>>>(); }
	jni::ref<jni::array<jbyte>> params() { return call_method<"params", jni::ref<jni::array<jbyte>>>(); }

protected:

	KEM_Encapsulated(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_CRYPTO_KEM_ENCAPSULATED
