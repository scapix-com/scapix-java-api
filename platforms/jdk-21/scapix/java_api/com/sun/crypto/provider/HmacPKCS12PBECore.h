// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/crypto/provider/HmacCore.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CRYPTO_PROVIDER_HMACPKCS12PBECORE_FWD
#define SCAPIX_JAVA_API_COM_SUN_CRYPTO_PROVIDER_HMACPKCS12PBECORE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::crypto::provider { class HmacPKCS12PBECore; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::crypto::provider::HmacPKCS12PBECore>
{
	static constexpr fixed_string class_name = "com/sun/crypto/provider/HmacPKCS12PBECore";
	using base_classes = std::tuple<scapix::java_api::com::sun::crypto::provider::HmacCore>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CRYPTO_PROVIDER_HMACPKCS12PBECORE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CRYPTO_PROVIDER_HMACPKCS12PBECORE)
#define SCAPIX_JAVA_API_COM_SUN_CRYPTO_PROVIDER_HMACPKCS12PBECORE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/com/sun/crypto/provider/HmacPKCS12PBECore_HmacPKCS12PBE_SHA512_256.h>
#include <scapix/java_api/com/sun/crypto/provider/HmacPKCS12PBECore_HmacPKCS12PBE_SHA512_224.h>
#include <scapix/java_api/com/sun/crypto/provider/HmacPKCS12PBECore_HmacPKCS12PBE_SHA512.h>
#include <scapix/java_api/com/sun/crypto/provider/HmacPKCS12PBECore_HmacPKCS12PBE_SHA384.h>
#include <scapix/java_api/com/sun/crypto/provider/HmacPKCS12PBECore_HmacPKCS12PBE_SHA256.h>
#include <scapix/java_api/com/sun/crypto/provider/HmacPKCS12PBECore_HmacPKCS12PBE_SHA224.h>
#include <scapix/java_api/com/sun/crypto/provider/HmacPKCS12PBECore_HmacPKCS12PBE_SHA1.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class com::sun::crypto::provider::HmacPKCS12PBECore : public jni::object_base<"com/sun/crypto/provider/HmacPKCS12PBECore",
	com::sun::crypto::provider::HmacCore>
{
public:

	using HmacPKCS12PBE_SHA512_256 = HmacPKCS12PBECore_HmacPKCS12PBE_SHA512_256;
	using HmacPKCS12PBE_SHA512_224 = HmacPKCS12PBECore_HmacPKCS12PBE_SHA512_224;
	using HmacPKCS12PBE_SHA512 = HmacPKCS12PBECore_HmacPKCS12PBE_SHA512;
	using HmacPKCS12PBE_SHA384 = HmacPKCS12PBECore_HmacPKCS12PBE_SHA384;
	using HmacPKCS12PBE_SHA256 = HmacPKCS12PBECore_HmacPKCS12PBE_SHA256;
	using HmacPKCS12PBE_SHA224 = HmacPKCS12PBECore_HmacPKCS12PBE_SHA224;
	using HmacPKCS12PBE_SHA1 = HmacPKCS12PBECore_HmacPKCS12PBE_SHA1;

	static jni::ref<com::sun::crypto::provider::HmacPKCS12PBECore> new_object(jni::ref<java::lang::String> algorithm, jint bl) { return base_::new_object(algorithm, bl); }

protected:

	HmacPKCS12PBECore(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CRYPTO_PROVIDER_HMACPKCS12PBECORE
