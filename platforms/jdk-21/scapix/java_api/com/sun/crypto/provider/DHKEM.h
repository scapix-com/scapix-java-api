// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/javax/crypto/KEMSpi.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CRYPTO_PROVIDER_DHKEM_FWD
#define SCAPIX_JAVA_API_COM_SUN_CRYPTO_PROVIDER_DHKEM_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::crypto::provider { class DHKEM; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::crypto::provider::DHKEM>
{
	static constexpr fixed_string class_name = "com/sun/crypto/provider/DHKEM";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::javax::crypto::KEMSpi>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CRYPTO_PROVIDER_DHKEM_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CRYPTO_PROVIDER_DHKEM)
#define SCAPIX_JAVA_API_COM_SUN_CRYPTO_PROVIDER_DHKEM

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/security/PrivateKey.h>
#include <scapix/java_api/java/security/PublicKey.h>
#include <scapix/java_api/java/security/SecureRandom.h>
#include <scapix/java_api/java/security/spec/AlgorithmParameterSpec.h>
#include <scapix/java_api/javax/crypto/KEMSpi_DecapsulatorSpi.h>
#include <scapix/java_api/javax/crypto/KEMSpi_EncapsulatorSpi.h>
#include <scapix/java_api/com/sun/crypto/provider/DHKEM_RFC9180DeriveKeyPairSR.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::crypto::provider::DHKEM : public jni::object_base<"com/sun/crypto/provider/DHKEM",
	java::lang::Object,
	javax::crypto::KEMSpi>
{
public:

	using RFC9180DeriveKeyPairSR = DHKEM_RFC9180DeriveKeyPairSR;

	static jni::ref<com::sun::crypto::provider::DHKEM> new_object() { return base_::new_object(); }
	jni::ref<javax::crypto::KEMSpi_EncapsulatorSpi> engineNewEncapsulator(jni::ref<java::security::PublicKey> pk, jni::ref<java::security::spec::AlgorithmParameterSpec> spec, jni::ref<java::security::SecureRandom> secureRandom) { return call_method<"engineNewEncapsulator", jni::ref<javax::crypto::KEMSpi_EncapsulatorSpi>>(pk, spec, secureRandom); }
	jni::ref<javax::crypto::KEMSpi_DecapsulatorSpi> engineNewDecapsulator(jni::ref<java::security::PrivateKey> sk, jni::ref<java::security::spec::AlgorithmParameterSpec> spec) { return call_method<"engineNewDecapsulator", jni::ref<javax::crypto::KEMSpi_DecapsulatorSpi>>(sk, spec); }

protected:

	DHKEM(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CRYPTO_PROVIDER_DHKEM
