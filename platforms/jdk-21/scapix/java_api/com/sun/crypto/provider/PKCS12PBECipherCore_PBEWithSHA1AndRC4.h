// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/crypto/provider/ARCFOURCipher.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CRYPTO_PROVIDER_PKCS12PBECIPHERCORE_PBEWITHSHA1ANDRC4_FWD
#define SCAPIX_JAVA_API_COM_SUN_CRYPTO_PROVIDER_PKCS12PBECIPHERCORE_PBEWITHSHA1ANDRC4_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::crypto::provider { class PKCS12PBECipherCore_PBEWithSHA1AndRC4; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::crypto::provider::PKCS12PBECipherCore_PBEWithSHA1AndRC4>
{
	static constexpr fixed_string class_name = "com/sun/crypto/provider/PKCS12PBECipherCore$PBEWithSHA1AndRC4";
	using base_classes = std::tuple<scapix::java_api::com::sun::crypto::provider::ARCFOURCipher>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CRYPTO_PROVIDER_PKCS12PBECIPHERCORE_PBEWITHSHA1ANDRC4_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CRYPTO_PROVIDER_PKCS12PBECIPHERCORE_PBEWITHSHA1ANDRC4)
#define SCAPIX_JAVA_API_COM_SUN_CRYPTO_PROVIDER_PKCS12PBECIPHERCORE_PBEWITHSHA1ANDRC4

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class com::sun::crypto::provider::PKCS12PBECipherCore_PBEWithSHA1AndRC4 : public jni::object_base<"com/sun/crypto/provider/PKCS12PBECipherCore$PBEWithSHA1AndRC4",
	com::sun::crypto::provider::ARCFOURCipher>
{
public:

	static jni::ref<com::sun::crypto::provider::PKCS12PBECipherCore_PBEWithSHA1AndRC4> new_object(jint keysize) { return base_::new_object(keysize); }

protected:

	PKCS12PBECipherCore_PBEWithSHA1AndRC4(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CRYPTO_PROVIDER_PKCS12PBECIPHERCORE_PBEWITHSHA1ANDRC4
