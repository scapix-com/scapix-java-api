// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_SECURITY_NTLM_NTLM_FWD
#define SCAPIX_JAVA_API_COM_SUN_SECURITY_NTLM_NTLM_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::security::ntlm { class NTLM; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::security::ntlm::NTLM>
{
	static constexpr fixed_string class_name = "com/sun/security/ntlm/NTLM";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_SECURITY_NTLM_NTLM_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_SECURITY_NTLM_NTLM)
#define SCAPIX_JAVA_API_COM_SUN_SECURITY_NTLM_NTLM

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class com::sun::security::ntlm::NTLM : public jni::object_base<"com/sun/security/ntlm/NTLM",
	java::lang::Object>
{
public:

	void debug(jni::ref<java::lang::String> format, jni::ref<jni::array<java::lang::Object>> args) { return call_method<"debug", void>(format, args); }
	void debug(jni::ref<jni::array<jbyte>> bytes) { return call_method<"debug", void>(bytes); }

protected:

	NTLM(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_SECURITY_NTLM_NTLM
