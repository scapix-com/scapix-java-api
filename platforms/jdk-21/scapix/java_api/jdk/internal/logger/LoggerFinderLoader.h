// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_LOGGER_LOGGERFINDERLOADER_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_LOGGER_LOGGERFINDERLOADER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::logger { class LoggerFinderLoader; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::logger::LoggerFinderLoader>
{
	static constexpr fixed_string class_name = "jdk/internal/logger/LoggerFinderLoader";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_LOGGER_LOGGERFINDERLOADER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_LOGGER_LOGGERFINDERLOADER)
#define SCAPIX_JAVA_API_JDK_INTERNAL_LOGGER_LOGGERFINDERLOADER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/RuntimePermission.h>
#include <scapix/java_api/java/lang/System_LoggerFinder.h>
#include <scapix/java_api/jdk/internal/logger/LoggerFinderLoader_TemporaryLoggerFinder.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::logger::LoggerFinderLoader : public jni::object_base<"jdk/internal/logger/LoggerFinderLoader",
	java::lang::Object>
{
public:

	using TemporaryLoggerFinder = LoggerFinderLoader_TemporaryLoggerFinder;

	static jni::ref<java::lang::RuntimePermission> LOGGERFINDER_PERMISSION() { return get_static_field<"LOGGERFINDER_PERMISSION", jni::ref<java::lang::RuntimePermission>>(); }

	static jni::ref<java::lang::System_LoggerFinder> getLoggerFinder() { return call_static_method<"getLoggerFinder", jni::ref<java::lang::System_LoggerFinder>>(); }

protected:

	LoggerFinderLoader(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_LOGGER_LOGGERFINDERLOADER
