// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_MATH_DOUBLETODECIMAL_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_MATH_DOUBLETODECIMAL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::math { class DoubleToDecimal; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::math::DoubleToDecimal>
{
	static constexpr fixed_string class_name = "jdk/internal/math/DoubleToDecimal";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_MATH_DOUBLETODECIMAL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_MATH_DOUBLETODECIMAL)
#define SCAPIX_JAVA_API_JDK_INTERNAL_MATH_DOUBLETODECIMAL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Appendable.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/jdk/internal/math/FormattedFPDecimal.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::math::DoubleToDecimal : public jni::object_base<"jdk/internal/math/DoubleToDecimal",
	java::lang::Object>
{
public:

	static jint MAX_CHARS() { return get_static_field<"MAX_CHARS", jint>(); }

	static jni::ref<java::lang::String> toString(jdouble v) { return call_static_method<"toString", jni::ref<java::lang::String>>(v); }
	static void split(jdouble v, jni::ref<jdk::internal::math::FormattedFPDecimal> p2) { return call_static_method<"split", void>(v, p2); }
	static jni::ref<java::lang::Appendable> appendTo(jdouble v, jni::ref<java::lang::Appendable> p2) { return call_static_method<"appendTo", jni::ref<java::lang::Appendable>>(v, p2); }

protected:

	DoubleToDecimal(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_MATH_DOUBLETODECIMAL
