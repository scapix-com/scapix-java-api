// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_ICU_IMPL_NORMALIZERIMPL_HANGUL_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_ICU_IMPL_NORMALIZERIMPL_HANGUL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::icu::impl { class NormalizerImpl_Hangul; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::icu::impl::NormalizerImpl_Hangul>
{
	static constexpr fixed_string class_name = "jdk/internal/icu/impl/NormalizerImpl$Hangul";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_ICU_IMPL_NORMALIZERIMPL_HANGUL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_ICU_IMPL_NORMALIZERIMPL_HANGUL)
#define SCAPIX_JAVA_API_JDK_INTERNAL_ICU_IMPL_NORMALIZERIMPL_HANGUL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Appendable.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::icu::impl::NormalizerImpl_Hangul : public jni::object_base<"jdk/internal/icu/impl/NormalizerImpl$Hangul",
	java::lang::Object>
{
public:

	static jint JAMO_L_BASE() { return get_static_field<"JAMO_L_BASE", jint>(); }
	static jint JAMO_V_BASE() { return get_static_field<"JAMO_V_BASE", jint>(); }
	static jint JAMO_T_BASE() { return get_static_field<"JAMO_T_BASE", jint>(); }
	static jint HANGUL_BASE() { return get_static_field<"HANGUL_BASE", jint>(); }
	static jint HANGUL_END() { return get_static_field<"HANGUL_END", jint>(); }
	static jint JAMO_L_COUNT() { return get_static_field<"JAMO_L_COUNT", jint>(); }
	static jint JAMO_V_COUNT() { return get_static_field<"JAMO_V_COUNT", jint>(); }
	static jint JAMO_T_COUNT() { return get_static_field<"JAMO_T_COUNT", jint>(); }
	static jint HANGUL_COUNT() { return get_static_field<"HANGUL_COUNT", jint>(); }
	static jint HANGUL_LIMIT() { return get_static_field<"HANGUL_LIMIT", jint>(); }

	static jni::ref<jdk::internal::icu::impl::NormalizerImpl_Hangul> new_object() { return base_::new_object(); }
	static jboolean isHangul(jint c) { return call_static_method<"isHangul", jboolean>(c); }
	static jboolean isHangulLV(jint c) { return call_static_method<"isHangulLV", jboolean>(c); }
	static jint decompose(jint c, jni::ref<java::lang::Appendable> buffer) { return call_static_method<"decompose", jint>(c, buffer); }

protected:

	NormalizerImpl_Hangul(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_ICU_IMPL_NORMALIZERIMPL_HANGUL
