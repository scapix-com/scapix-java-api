// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/jdk/internal/icu/impl/Norm2AllModes_Normalizer2WithImpl.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_ICU_IMPL_NORM2ALLMODES_COMPOSENORMALIZER2_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_ICU_IMPL_NORM2ALLMODES_COMPOSENORMALIZER2_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::icu::impl { class Norm2AllModes_ComposeNormalizer2; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::icu::impl::Norm2AllModes_ComposeNormalizer2>
{
	static constexpr fixed_string class_name = "jdk/internal/icu/impl/Norm2AllModes$ComposeNormalizer2";
	using base_classes = std::tuple<scapix::java_api::jdk::internal::icu::impl::Norm2AllModes_Normalizer2WithImpl>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_ICU_IMPL_NORM2ALLMODES_COMPOSENORMALIZER2_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_ICU_IMPL_NORM2ALLMODES_COMPOSENORMALIZER2)
#define SCAPIX_JAVA_API_JDK_INTERNAL_ICU_IMPL_NORM2ALLMODES_COMPOSENORMALIZER2

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/jdk/internal/icu/impl/NormalizerImpl.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::icu::impl::Norm2AllModes_ComposeNormalizer2 : public jni::object_base<"jdk/internal/icu/impl/Norm2AllModes$ComposeNormalizer2",
	jdk::internal::icu::impl::Norm2AllModes_Normalizer2WithImpl>
{
public:

	static jni::ref<jdk::internal::icu::impl::Norm2AllModes_ComposeNormalizer2> new_object(jni::ref<jdk::internal::icu::impl::NormalizerImpl> ni, jboolean fcc) { return base_::new_object(ni, fcc); }
	jboolean isNormalized(jni::ref<java::lang::CharSequence> s) { return call_method<"isNormalized", jboolean>(s); }
	jint spanQuickCheckYes(jni::ref<java::lang::CharSequence> s) { return call_method<"spanQuickCheckYes", jint>(s); }
	jboolean hasBoundaryBefore(jint c) { return call_method<"hasBoundaryBefore", jboolean>(c); }

protected:

	Norm2AllModes_ComposeNormalizer2(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_ICU_IMPL_NORM2ALLMODES_COMPOSENORMALIZER2
