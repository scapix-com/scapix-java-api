// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_UTIL_XML_IMPL_INPUT_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_UTIL_XML_IMPL_INPUT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::util::xml::impl { class Input; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::util::xml::impl::Input>
{
	static constexpr fixed_string class_name = "jdk/internal/util/xml/impl/Input";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_UTIL_XML_IMPL_INPUT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_UTIL_XML_IMPL_INPUT)
#define SCAPIX_JAVA_API_JDK_INTERNAL_UTIL_XML_IMPL_INPUT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/Reader.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::util::xml::impl::Input : public jni::object_base<"jdk/internal/util/xml/impl/Input",
	java::lang::Object>
{
public:

	jni::ref<java::lang::String> pubid() { return get_field<"pubid", jni::ref<java::lang::String>>(); }
	void pubid(jni::ref<java::lang::String> v) { set_field<"pubid", jni::ref<java::lang::String>>(v); }
	jni::ref<java::lang::String> sysid() { return get_field<"sysid", jni::ref<java::lang::String>>(); }
	void sysid(jni::ref<java::lang::String> v) { set_field<"sysid", jni::ref<java::lang::String>>(v); }
	jni::ref<java::lang::String> xmlenc() { return get_field<"xmlenc", jni::ref<java::lang::String>>(); }
	void xmlenc(jni::ref<java::lang::String> v) { set_field<"xmlenc", jni::ref<java::lang::String>>(v); }
	jchar xmlver() { return get_field<"xmlver", jchar>(); }
	void xmlver(jchar v) { set_field<"xmlver", jchar>(v); }
	jni::ref<java::io::Reader> src() { return get_field<"src", jni::ref<java::io::Reader>>(); }
	void src(jni::ref<java::io::Reader> v) { set_field<"src", jni::ref<java::io::Reader>>(v); }
	jni::ref<jni::array<jchar>> chars() { return get_field<"chars", jni::ref<jni::array<jchar>>>(); }
	void chars(jni::ref<jni::array<jchar>> v) { set_field<"chars", jni::ref<jni::array<jchar>>>(v); }
	jint chLen() { return get_field<"chLen", jint>(); }
	void chLen(jint v) { set_field<"chLen", jint>(v); }
	jint chIdx() { return get_field<"chIdx", jint>(); }
	void chIdx(jint v) { set_field<"chIdx", jint>(v); }
	jni::ref<jdk::internal::util::xml::impl::Input> next() { return get_field<"next", jni::ref<jdk::internal::util::xml::impl::Input>>(); }
	void next(jni::ref<jdk::internal::util::xml::impl::Input> v) { set_field<"next", jni::ref<jdk::internal::util::xml::impl::Input>>(v); }

	static jni::ref<jdk::internal::util::xml::impl::Input> new_object(jint buffsize) { return base_::new_object(buffsize); }
	static jni::ref<jdk::internal::util::xml::impl::Input> new_object(jni::ref<jni::array<jchar>> buff) { return base_::new_object(buff); }
	static jni::ref<jdk::internal::util::xml::impl::Input> new_object() { return base_::new_object(); }

protected:

	Input(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_UTIL_XML_IMPL_INPUT
