// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_ACCESS_JAVAIOFILEDESCRIPTORACCESS_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_ACCESS_JAVAIOFILEDESCRIPTORACCESS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::access { class JavaIOFileDescriptorAccess; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::access::JavaIOFileDescriptorAccess>
{
	static constexpr fixed_string class_name = "jdk/internal/access/JavaIOFileDescriptorAccess";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_ACCESS_JAVAIOFILEDESCRIPTORACCESS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_ACCESS_JAVAIOFILEDESCRIPTORACCESS)
#define SCAPIX_JAVA_API_JDK_INTERNAL_ACCESS_JAVAIOFILEDESCRIPTORACCESS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/FileDescriptor.h>
#include <scapix/java_api/jdk/internal/ref/PhantomCleanable.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::access::JavaIOFileDescriptorAccess : public jni::object_base<"jdk/internal/access/JavaIOFileDescriptorAccess",
	java::lang::Object>
{
public:

	void set(jni::ref<java::io::FileDescriptor> p1, jint p2) { return call_method<"set", void>(p1, p2); }
	jint get(jni::ref<java::io::FileDescriptor> p1) { return call_method<"get", jint>(p1); }
	void setAppend(jni::ref<java::io::FileDescriptor> p1, jboolean p2) { return call_method<"setAppend", void>(p1, p2); }
	jboolean getAppend(jni::ref<java::io::FileDescriptor> p1) { return call_method<"getAppend", jboolean>(p1); }
	void close(jni::ref<java::io::FileDescriptor> p1) { return call_method<"close", void>(p1); }
	void registerCleanup(jni::ref<java::io::FileDescriptor> p1) { return call_method<"registerCleanup", void>(p1); }
	void registerCleanup(jni::ref<java::io::FileDescriptor> p1, jni::ref<jdk::internal::ref::PhantomCleanable> p2) { return call_method<"registerCleanup", void>(p1, p2); }
	void unregisterCleanup(jni::ref<java::io::FileDescriptor> p1) { return call_method<"unregisterCleanup", void>(p1); }
	void setHandle(jni::ref<java::io::FileDescriptor> p1, jlong p2) { return call_method<"setHandle", void>(p1, p2); }
	jlong getHandle(jni::ref<java::io::FileDescriptor> p1) { return call_method<"getHandle", jlong>(p1); }

protected:

	JavaIOFileDescriptorAccess(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_ACCESS_JAVAIOFILEDESCRIPTORACCESS
