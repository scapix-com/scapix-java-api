// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/jdk/internal/vm/StackableScope.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_VM_THREADCONTAINER_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_VM_THREADCONTAINER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::vm { class ThreadContainer; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::vm::ThreadContainer>
{
	static constexpr fixed_string class_name = "jdk/internal/vm/ThreadContainer";
	using base_classes = std::tuple<scapix::java_api::jdk::internal::vm::StackableScope>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_VM_THREADCONTAINER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_VM_THREADCONTAINER)
#define SCAPIX_JAVA_API_JDK_INTERNAL_VM_THREADCONTAINER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/Thread.h>
#include <scapix/java_api/java/util/stream/Stream.h>
#include <scapix/java_api/jdk/internal/vm/ScopedValueContainer_BindingsSnapshot.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::vm::ThreadContainer : public jni::object_base<"jdk/internal/vm/ThreadContainer",
	jdk::internal::vm::StackableScope>
{
public:

	jni::ref<java::lang::String> name() { return call_method<"name", jni::ref<java::lang::String>>(); }
	jni::ref<jdk::internal::vm::ThreadContainer> parent() { return call_method<"parent", jni::ref<jdk::internal::vm::ThreadContainer>>(); }
	jni::ref<java::util::stream::Stream> children() { return call_method<"children", jni::ref<java::util::stream::Stream>>(); }
	jlong threadCount() { return call_method<"threadCount", jlong>(); }
	jni::ref<java::util::stream::Stream> threads() { return call_method<"threads", jni::ref<java::util::stream::Stream>>(); }
	void onStart(jni::ref<java::lang::Thread> thread) { return call_method<"onStart", void>(thread); }
	void onExit(jni::ref<java::lang::Thread> thread) { return call_method<"onExit", void>(thread); }
	jni::ref<jdk::internal::vm::ScopedValueContainer_BindingsSnapshot> scopedValueBindings() { return call_method<"scopedValueBindings", jni::ref<jdk::internal::vm::ScopedValueContainer_BindingsSnapshot>>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	ThreadContainer(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_VM_THREADCONTAINER
