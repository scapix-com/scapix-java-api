// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_VM_THREADCONTAINERS_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_VM_THREADCONTAINERS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::vm { class ThreadContainers; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::vm::ThreadContainers>
{
	static constexpr fixed_string class_name = "jdk/internal/vm/ThreadContainers";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_VM_THREADCONTAINERS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_VM_THREADCONTAINERS)
#define SCAPIX_JAVA_API_JDK_INTERNAL_VM_THREADCONTAINERS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Thread.h>
#include <scapix/java_api/jdk/internal/vm/ThreadContainer.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::vm::ThreadContainers : public jni::object_base<"jdk/internal/vm/ThreadContainers",
	java::lang::Object>
{
public:

	static jboolean trackAllThreads() { return call_static_method<"trackAllThreads", jboolean>(); }
	static jni::ref<java::lang::Object> registerContainer(jni::ref<jdk::internal::vm::ThreadContainer> container) { return call_static_method<"registerContainer", jni::ref<java::lang::Object>>(container); }
	static void deregisterContainer(jni::ref<java::lang::Object> key) { return call_static_method<"deregisterContainer", void>(key); }
	static jni::ref<jdk::internal::vm::ThreadContainer> root() { return call_static_method<"root", jni::ref<jdk::internal::vm::ThreadContainer>>(); }
	static jni::ref<jdk::internal::vm::ThreadContainer> container(jni::ref<java::lang::Thread> thread) { return call_static_method<"container", jni::ref<jdk::internal::vm::ThreadContainer>>(thread); }

protected:

	ThreadContainers(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_VM_THREADCONTAINERS
