// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/jdk/internal/classfile/PseudoInstruction.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_INSTRUCTION_CHARACTERRANGE_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_INSTRUCTION_CHARACTERRANGE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::classfile::instruction { class CharacterRange; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::classfile::instruction::CharacterRange>
{
	static constexpr fixed_string class_name = "jdk/internal/classfile/instruction/CharacterRange";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::jdk::internal::classfile::PseudoInstruction>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_INSTRUCTION_CHARACTERRANGE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_INSTRUCTION_CHARACTERRANGE)
#define SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_INSTRUCTION_CHARACTERRANGE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/jdk/internal/classfile/Label.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::classfile::instruction::CharacterRange : public jni::object_base<"jdk/internal/classfile/instruction/CharacterRange",
	java::lang::Object,
	jdk::internal::classfile::PseudoInstruction>
{
public:

	jni::ref<jdk::internal::classfile::Label> startScope() { return call_method<"startScope", jni::ref<jdk::internal::classfile::Label>>(); }
	jni::ref<jdk::internal::classfile::Label> endScope() { return call_method<"endScope", jni::ref<jdk::internal::classfile::Label>>(); }
	jint characterRangeStart() { return call_method<"characterRangeStart", jint>(); }
	jint characterRangeEnd() { return call_method<"characterRangeEnd", jint>(); }
	jint flags() { return call_method<"flags", jint>(); }
	static jni::ref<jdk::internal::classfile::instruction::CharacterRange> of(jni::ref<jdk::internal::classfile::Label> startScope, jni::ref<jdk::internal::classfile::Label> endScope, jint characterRangeStart, jint characterRangeEnd, jint flags) { return call_static_method<"of", jni::ref<jdk::internal::classfile::instruction::CharacterRange>>(startScope, endScope, characterRangeStart, characterRangeEnd, flags); }

protected:

	CharacterRange(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_INSTRUCTION_CHARACTERRANGE
