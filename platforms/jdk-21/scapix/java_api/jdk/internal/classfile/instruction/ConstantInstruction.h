// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/jdk/internal/classfile/Instruction.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_INSTRUCTION_CONSTANTINSTRUCTION_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_INSTRUCTION_CONSTANTINSTRUCTION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::classfile::instruction { class ConstantInstruction; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::classfile::instruction::ConstantInstruction>
{
	static constexpr fixed_string class_name = "jdk/internal/classfile/instruction/ConstantInstruction";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::jdk::internal::classfile::Instruction>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_INSTRUCTION_CONSTANTINSTRUCTION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_INSTRUCTION_CONSTANTINSTRUCTION)
#define SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_INSTRUCTION_CONSTANTINSTRUCTION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/constant/ConstantDesc.h>
#include <scapix/java_api/jdk/internal/classfile/Opcode.h>
#include <scapix/java_api/jdk/internal/classfile/TypeKind.h>
#include <scapix/java_api/jdk/internal/classfile/constantpool/LoadableConstantEntry.h>
#include <scapix/java_api/jdk/internal/classfile/instruction/ConstantInstruction_ArgumentConstantInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/instruction/ConstantInstruction_IntrinsicConstantInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/instruction/ConstantInstruction_LoadConstantInstruction.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::classfile::instruction::ConstantInstruction : public jni::object_base<"jdk/internal/classfile/instruction/ConstantInstruction",
	java::lang::Object,
	jdk::internal::classfile::Instruction>
{
public:

	using LoadConstantInstruction = ConstantInstruction_LoadConstantInstruction;
	using ArgumentConstantInstruction = ConstantInstruction_ArgumentConstantInstruction;
	using IntrinsicConstantInstruction = ConstantInstruction_IntrinsicConstantInstruction;

	jni::ref<java::lang::constant::ConstantDesc> constantValue() { return call_method<"constantValue", jni::ref<java::lang::constant::ConstantDesc>>(); }
	jni::ref<jdk::internal::classfile::TypeKind> typeKind() { return call_method<"typeKind", jni::ref<jdk::internal::classfile::TypeKind>>(); }
	static jni::ref<jdk::internal::classfile::instruction::ConstantInstruction_IntrinsicConstantInstruction> ofIntrinsic(jni::ref<jdk::internal::classfile::Opcode> op) { return call_static_method<"ofIntrinsic", jni::ref<jdk::internal::classfile::instruction::ConstantInstruction_IntrinsicConstantInstruction>>(op); }
	static jni::ref<jdk::internal::classfile::instruction::ConstantInstruction_ArgumentConstantInstruction> ofArgument(jni::ref<jdk::internal::classfile::Opcode> op, jint value) { return call_static_method<"ofArgument", jni::ref<jdk::internal::classfile::instruction::ConstantInstruction_ArgumentConstantInstruction>>(op, value); }
	static jni::ref<jdk::internal::classfile::instruction::ConstantInstruction_LoadConstantInstruction> ofLoad(jni::ref<jdk::internal::classfile::Opcode> op, jni::ref<jdk::internal::classfile::constantpool::LoadableConstantEntry> constant) { return call_static_method<"ofLoad", jni::ref<jdk::internal::classfile::instruction::ConstantInstruction_LoadConstantInstruction>>(op, constant); }

protected:

	ConstantInstruction(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_INSTRUCTION_CONSTANTINSTRUCTION
