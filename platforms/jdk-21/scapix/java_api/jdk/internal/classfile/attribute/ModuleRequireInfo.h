// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_ATTRIBUTE_MODULEREQUIREINFO_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_ATTRIBUTE_MODULEREQUIREINFO_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::classfile::attribute { class ModuleRequireInfo; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::classfile::attribute::ModuleRequireInfo>
{
	static constexpr fixed_string class_name = "jdk/internal/classfile/attribute/ModuleRequireInfo";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_ATTRIBUTE_MODULEREQUIREINFO_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_ATTRIBUTE_MODULEREQUIREINFO)
#define SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_ATTRIBUTE_MODULEREQUIREINFO

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/constant/ModuleDesc.h>
#include <scapix/java_api/java/lang/reflect/AccessFlag.h>
#include <scapix/java_api/java/util/Collection.h>
#include <scapix/java_api/java/util/Optional.h>
#include <scapix/java_api/java/util/Set.h>
#include <scapix/java_api/jdk/internal/classfile/constantpool/ModuleEntry.h>
#include <scapix/java_api/jdk/internal/classfile/constantpool/Utf8Entry.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::classfile::attribute::ModuleRequireInfo : public jni::object_base<"jdk/internal/classfile/attribute/ModuleRequireInfo",
	java::lang::Object>
{
public:

	jni::ref<jdk::internal::classfile::constantpool::ModuleEntry> requires_() { return call_method<"requires", jni::ref<jdk::internal::classfile::constantpool::ModuleEntry>>(); }
	jint requiresFlagsMask() { return call_method<"requiresFlagsMask", jint>(); }
	jni::ref<java::util::Set> requiresFlags() { return call_method<"requiresFlags", jni::ref<java::util::Set>>(); }
	jni::ref<java::util::Optional> requiresVersion() { return call_method<"requiresVersion", jni::ref<java::util::Optional>>(); }
	jboolean has(jni::ref<java::lang::reflect::AccessFlag> flag) { return call_method<"has", jboolean>(flag); }
	static jni::ref<jdk::internal::classfile::attribute::ModuleRequireInfo> of(jni::ref<jdk::internal::classfile::constantpool::ModuleEntry> requires_, jint requiresFlags, jni::ref<jdk::internal::classfile::constantpool::Utf8Entry> requiresVersion) { return call_static_method<"of", jni::ref<jdk::internal::classfile::attribute::ModuleRequireInfo>>(requires_, requiresFlags, requiresVersion); }
	static jni::ref<jdk::internal::classfile::attribute::ModuleRequireInfo> of(jni::ref<jdk::internal::classfile::constantpool::ModuleEntry> requires_, jni::ref<java::util::Collection> requiresFlags, jni::ref<jdk::internal::classfile::constantpool::Utf8Entry> requiresVersion) { return call_static_method<"of", jni::ref<jdk::internal::classfile::attribute::ModuleRequireInfo>>(requires_, requiresFlags, requiresVersion); }
	static jni::ref<jdk::internal::classfile::attribute::ModuleRequireInfo> of(jni::ref<java::lang::constant::ModuleDesc> requires_, jint requiresFlags, jni::ref<java::lang::String> requiresVersion) { return call_static_method<"of", jni::ref<jdk::internal::classfile::attribute::ModuleRequireInfo>>(requires_, requiresFlags, requiresVersion); }
	static jni::ref<jdk::internal::classfile::attribute::ModuleRequireInfo> of(jni::ref<java::lang::constant::ModuleDesc> requires_, jni::ref<java::util::Collection> requiresFlags, jni::ref<java::lang::String> requiresVersion) { return call_static_method<"of", jni::ref<jdk::internal::classfile::attribute::ModuleRequireInfo>>(requires_, requiresFlags, requiresVersion); }

protected:

	ModuleRequireInfo(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_ATTRIBUTE_MODULEREQUIREINFO
