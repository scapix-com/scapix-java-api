// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/jdk/internal/classfile/impl/AbstractElement.h>
#include <scapix/java_api/jdk/internal/classfile/instruction/CharacterRange.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_BOUNDCHARACTERRANGE_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_BOUNDCHARACTERRANGE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::classfile::impl { class BoundCharacterRange; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::classfile::impl::BoundCharacterRange>
{
	static constexpr fixed_string class_name = "jdk/internal/classfile/impl/BoundCharacterRange";
	using base_classes = std::tuple<scapix::java_api::jdk::internal::classfile::impl::AbstractElement, scapix::java_api::jdk::internal::classfile::instruction::CharacterRange>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_BOUNDCHARACTERRANGE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_BOUNDCHARACTERRANGE)
#define SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_BOUNDCHARACTERRANGE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/jdk/internal/classfile/Label.h>
#include <scapix/java_api/jdk/internal/classfile/impl/CodeImpl.h>
#include <scapix/java_api/jdk/internal/classfile/impl/DirectCodeBuilder.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::classfile::impl::BoundCharacterRange : public jni::object_base<"jdk/internal/classfile/impl/BoundCharacterRange",
	jdk::internal::classfile::impl::AbstractElement,
	jdk::internal::classfile::instruction::CharacterRange>
{
public:

	static jni::ref<jdk::internal::classfile::impl::BoundCharacterRange> new_object(jni::ref<jdk::internal::classfile::impl::CodeImpl> code, jint offset) { return base_::new_object(code, offset); }
	jint characterRangeStart() { return call_method<"characterRangeStart", jint>(); }
	jint characterRangeEnd() { return call_method<"characterRangeEnd", jint>(); }
	jint flags() { return call_method<"flags", jint>(); }
	jni::ref<jdk::internal::classfile::Label> startScope() { return call_method<"startScope", jni::ref<jdk::internal::classfile::Label>>(); }
	jni::ref<jdk::internal::classfile::Label> endScope() { return call_method<"endScope", jni::ref<jdk::internal::classfile::Label>>(); }
	void writeTo(jni::ref<jdk::internal::classfile::impl::DirectCodeBuilder> builder) { return call_method<"writeTo", void>(builder); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	BoundCharacterRange(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_BOUNDCHARACTERRANGE
