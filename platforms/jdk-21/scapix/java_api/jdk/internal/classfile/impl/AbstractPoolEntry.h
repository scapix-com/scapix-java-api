// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_ABSTRACTPOOLENTRY_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_ABSTRACTPOOLENTRY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::classfile::impl { class AbstractPoolEntry; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::classfile::impl::AbstractPoolEntry>
{
	static constexpr fixed_string class_name = "jdk/internal/classfile/impl/AbstractPoolEntry";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_ABSTRACTPOOLENTRY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_ABSTRACTPOOLENTRY)
#define SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_ABSTRACTPOOLENTRY

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/jdk/internal/classfile/constantpool/ConstantPool.h>
#include <scapix/java_api/jdk/internal/classfile/constantpool/ConstantPoolBuilder.h>
#include <scapix/java_api/jdk/internal/classfile/constantpool/PoolEntry.h>
#include <scapix/java_api/jdk/internal/classfile/constantpool/Utf8Entry.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractPoolEntry_Utf8EntryImpl.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractPoolEntry_DoubleEntryImpl.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractPoolEntry_LongEntryImpl.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractPoolEntry_FloatEntryImpl.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractPoolEntry_IntegerEntryImpl.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractPoolEntry_StringEntryImpl.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractPoolEntry_MethodTypeEntryImpl.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractPoolEntry_MethodHandleEntryImpl.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractPoolEntry_ConstantDynamicEntryImpl.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractPoolEntry_InvokeDynamicEntryImpl.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractPoolEntry_AbstractDynamicConstantPoolEntry.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractPoolEntry_InterfaceMethodRefEntryImpl.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractPoolEntry_MethodRefEntryImpl.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractPoolEntry_FieldRefEntryImpl.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractPoolEntry_AbstractMemberRefEntry.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractPoolEntry_NameAndTypeEntryImpl.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractPoolEntry_ModuleEntryImpl.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractPoolEntry_PackageEntryImpl.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractPoolEntry_ClassEntryImpl.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::classfile::impl::AbstractPoolEntry : public jni::object_base<"jdk/internal/classfile/impl/AbstractPoolEntry",
	java::lang::Object>
{
public:

	using Utf8EntryImpl = AbstractPoolEntry_Utf8EntryImpl;
	using DoubleEntryImpl = AbstractPoolEntry_DoubleEntryImpl;
	using LongEntryImpl = AbstractPoolEntry_LongEntryImpl;
	using FloatEntryImpl = AbstractPoolEntry_FloatEntryImpl;
	using IntegerEntryImpl = AbstractPoolEntry_IntegerEntryImpl;
	using StringEntryImpl = AbstractPoolEntry_StringEntryImpl;
	using MethodTypeEntryImpl = AbstractPoolEntry_MethodTypeEntryImpl;
	using MethodHandleEntryImpl = AbstractPoolEntry_MethodHandleEntryImpl;
	using ConstantDynamicEntryImpl = AbstractPoolEntry_ConstantDynamicEntryImpl;
	using InvokeDynamicEntryImpl = AbstractPoolEntry_InvokeDynamicEntryImpl;
	using AbstractDynamicConstantPoolEntry = AbstractPoolEntry_AbstractDynamicConstantPoolEntry;
	using InterfaceMethodRefEntryImpl = AbstractPoolEntry_InterfaceMethodRefEntryImpl;
	using MethodRefEntryImpl = AbstractPoolEntry_MethodRefEntryImpl;
	using FieldRefEntryImpl = AbstractPoolEntry_FieldRefEntryImpl;
	using AbstractMemberRefEntry = AbstractPoolEntry_AbstractMemberRefEntry;
	using NameAndTypeEntryImpl = AbstractPoolEntry_NameAndTypeEntryImpl;
	using ModuleEntryImpl = AbstractPoolEntry_ModuleEntryImpl;
	using PackageEntryImpl = AbstractPoolEntry_PackageEntryImpl;
	using ClassEntryImpl = AbstractPoolEntry_ClassEntryImpl;

	jbyte tag_() { return get_field<"tag", jbyte>(); }

	static jint hash1(jint tag, jint x1) { return call_static_method<"hash1", jint>(tag, x1); }
	static jint hash2(jint tag, jint x1, jint x2) { return call_static_method<"hash2", jint>(tag, x1, x2); }
	static jint hashString(jint stringHash) { return call_static_method<"hashString", jint>(stringHash); }
	static jint phiMix(jint x) { return call_static_method<"phiMix", jint>(x); }
	static jni::ref<jdk::internal::classfile::constantpool::Utf8Entry> rawUtf8EntryFromStandardAttributeName(jni::ref<java::lang::String> name) { return call_static_method<"rawUtf8EntryFromStandardAttributeName", jni::ref<jdk::internal::classfile::constantpool::Utf8Entry>>(name); }
	static jni::ref<jdk::internal::classfile::constantpool::PoolEntry> maybeClone(jni::ref<jdk::internal::classfile::constantpool::ConstantPoolBuilder> cp, jni::ref<jdk::internal::classfile::constantpool::PoolEntry> entry) { return call_static_method<"maybeClone", jni::ref<jdk::internal::classfile::constantpool::PoolEntry>>(cp, entry); }
	jni::ref<jdk::internal::classfile::constantpool::ConstantPool> constantPool() { return call_method<"constantPool", jni::ref<jdk::internal::classfile::constantpool::ConstantPool>>(); }
	jint index() { return call_method<"index", jint>(); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jbyte tag() { return call_method<"tag", jbyte>(); }
	jint width() { return call_method<"width", jint>(); }

protected:

	AbstractPoolEntry(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_ABSTRACTPOOLENTRY
