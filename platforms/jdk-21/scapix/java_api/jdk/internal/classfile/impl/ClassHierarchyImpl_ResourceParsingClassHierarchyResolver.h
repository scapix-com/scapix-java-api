// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/jdk/internal/classfile/ClassHierarchyResolver.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_CLASSHIERARCHYIMPL_RESOURCEPARSINGCLASSHIERARCHYRESOLVER_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_CLASSHIERARCHYIMPL_RESOURCEPARSINGCLASSHIERARCHYRESOLVER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::classfile::impl { class ClassHierarchyImpl_ResourceParsingClassHierarchyResolver; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::classfile::impl::ClassHierarchyImpl_ResourceParsingClassHierarchyResolver>
{
	static constexpr fixed_string class_name = "jdk/internal/classfile/impl/ClassHierarchyImpl$ResourceParsingClassHierarchyResolver";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::jdk::internal::classfile::ClassHierarchyResolver>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_CLASSHIERARCHYIMPL_RESOURCEPARSINGCLASSHIERARCHYRESOLVER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_CLASSHIERARCHYIMPL_RESOURCEPARSINGCLASSHIERARCHYRESOLVER)
#define SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_CLASSHIERARCHYIMPL_RESOURCEPARSINGCLASSHIERARCHYRESOLVER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/constant/ClassDesc.h>
#include <scapix/java_api/java/util/function/Function.h>
#include <scapix/java_api/jdk/internal/classfile/ClassHierarchyResolver_ClassHierarchyInfo.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::classfile::impl::ClassHierarchyImpl_ResourceParsingClassHierarchyResolver : public jni::object_base<"jdk/internal/classfile/impl/ClassHierarchyImpl$ResourceParsingClassHierarchyResolver",
	java::lang::Object,
	jdk::internal::classfile::ClassHierarchyResolver>
{
public:

	static jni::ref<java::util::function::Function> SYSTEM_STREAM_PROVIDER() { return get_static_field<"SYSTEM_STREAM_PROVIDER", jni::ref<java::util::function::Function>>(); }

	static jni::ref<jdk::internal::classfile::impl::ClassHierarchyImpl_ResourceParsingClassHierarchyResolver> new_object(jni::ref<java::util::function::Function> classStreamProvider) { return base_::new_object(classStreamProvider); }
	jni::ref<jdk::internal::classfile::ClassHierarchyResolver_ClassHierarchyInfo> getClassInfo(jni::ref<java::lang::constant::ClassDesc> classDesc) { return call_method<"getClassInfo", jni::ref<jdk::internal::classfile::ClassHierarchyResolver_ClassHierarchyInfo>>(classDesc); }

protected:

	ClassHierarchyImpl_ResourceParsingClassHierarchyResolver(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_CLASSHIERARCHYIMPL_RESOURCEPARSINGCLASSHIERARCHYRESOLVER
