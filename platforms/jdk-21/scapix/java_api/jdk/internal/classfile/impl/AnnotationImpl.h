// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/jdk/internal/classfile/Annotation.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_ANNOTATIONIMPL_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_ANNOTATIONIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::classfile::impl { class AnnotationImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::classfile::impl::AnnotationImpl>
{
	static constexpr fixed_string class_name = "jdk/internal/classfile/impl/AnnotationImpl";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::jdk::internal::classfile::Annotation>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_ANNOTATIONIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_ANNOTATIONIMPL)
#define SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_ANNOTATIONIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/jdk/internal/classfile/BufWriter.h>
#include <scapix/java_api/jdk/internal/classfile/constantpool/Utf8Entry.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AnnotationImpl_OfClassImpl.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AnnotationImpl_OfAnnotationImpl.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AnnotationImpl_OfEnumImpl.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AnnotationImpl_OfArrayImpl.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AnnotationImpl_OfBooleanImpl.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AnnotationImpl_OfByteImpl.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AnnotationImpl_OfCharacterImpl.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AnnotationImpl_OfShortImpl.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AnnotationImpl_OfIntegerImpl.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AnnotationImpl_OfLongImpl.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AnnotationImpl_OfFloatImpl.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AnnotationImpl_OfDoubleImpl.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AnnotationImpl_OfStringImpl.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AnnotationImpl_OfConstantImpl.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AnnotationImpl_AnnotationElementImpl.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::classfile::impl::AnnotationImpl : public jni::object_base<"jdk/internal/classfile/impl/AnnotationImpl",
	java::lang::Object,
	jdk::internal::classfile::Annotation>
{
public:

	using OfClassImpl = AnnotationImpl_OfClassImpl;
	using OfAnnotationImpl = AnnotationImpl_OfAnnotationImpl;
	using OfEnumImpl = AnnotationImpl_OfEnumImpl;
	using OfArrayImpl = AnnotationImpl_OfArrayImpl;
	using OfBooleanImpl = AnnotationImpl_OfBooleanImpl;
	using OfByteImpl = AnnotationImpl_OfByteImpl;
	using OfCharacterImpl = AnnotationImpl_OfCharacterImpl;
	using OfShortImpl = AnnotationImpl_OfShortImpl;
	using OfIntegerImpl = AnnotationImpl_OfIntegerImpl;
	using OfLongImpl = AnnotationImpl_OfLongImpl;
	using OfFloatImpl = AnnotationImpl_OfFloatImpl;
	using OfDoubleImpl = AnnotationImpl_OfDoubleImpl;
	using OfStringImpl = AnnotationImpl_OfStringImpl;
	using OfConstantImpl = AnnotationImpl_OfConstantImpl;
	using AnnotationElementImpl = AnnotationImpl_AnnotationElementImpl;

	static jni::ref<jdk::internal::classfile::impl::AnnotationImpl> new_object(jni::ref<jdk::internal::classfile::constantpool::Utf8Entry> className, jni::ref<java::util::List> elems) { return base_::new_object(className, elems); }
	jni::ref<jdk::internal::classfile::constantpool::Utf8Entry> className() { return call_method<"className", jni::ref<jdk::internal::classfile::constantpool::Utf8Entry>>(); }
	jni::ref<java::util::List> elements() { return call_method<"elements", jni::ref<java::util::List>>(); }
	void writeTo(jni::ref<jdk::internal::classfile::BufWriter> buf) { return call_method<"writeTo", void>(buf); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	AnnotationImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_ANNOTATIONIMPL
