// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_CLASSPRINTERIMPL_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_CLASSPRINTERIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::classfile::impl { class ClassPrinterImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::classfile::impl::ClassPrinterImpl>
{
	static constexpr fixed_string class_name = "jdk/internal/classfile/impl/ClassPrinterImpl";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_CLASSPRINTERIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_CLASSPRINTERIMPL)
#define SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_CLASSPRINTERIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/util/function/Consumer.h>
#include <scapix/java_api/jdk/internal/classfile/CompoundElement.h>
#include <scapix/java_api/jdk/internal/classfile/MethodModel.h>
#include <scapix/java_api/jdk/internal/classfile/components/ClassPrinter_MapNode.h>
#include <scapix/java_api/jdk/internal/classfile/components/ClassPrinter_Node.h>
#include <scapix/java_api/jdk/internal/classfile/components/ClassPrinter_Verbosity.h>
#include <scapix/java_api/jdk/internal/classfile/impl/ClassPrinterImpl_LeafNodeImpl.h>
#include <scapix/java_api/jdk/internal/classfile/impl/ClassPrinterImpl_ListNodeImpl.h>
#include <scapix/java_api/jdk/internal/classfile/impl/ClassPrinterImpl_Style.h>
#include <scapix/java_api/jdk/internal/classfile/impl/ClassPrinterImpl_MapNodeImpl.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::classfile::impl::ClassPrinterImpl : public jni::object_base<"jdk/internal/classfile/impl/ClassPrinterImpl",
	java::lang::Object>
{
public:

	using LeafNodeImpl = ClassPrinterImpl_LeafNodeImpl;
	using ListNodeImpl = ClassPrinterImpl_ListNodeImpl;
	using Style = ClassPrinterImpl_Style;
	using MapNodeImpl = ClassPrinterImpl_MapNodeImpl;

	static jni::ref<jdk::internal::classfile::impl::ClassPrinterImpl> new_object() { return base_::new_object(); }
	static void toYaml(jni::ref<jdk::internal::classfile::components::ClassPrinter_Node> node, jni::ref<java::util::function::Consumer> out) { return call_static_method<"toYaml", void>(node, out); }
	static void toJson(jni::ref<jdk::internal::classfile::components::ClassPrinter_Node> node, jni::ref<java::util::function::Consumer> out) { return call_static_method<"toJson", void>(node, out); }
	static void toXml(jni::ref<jdk::internal::classfile::components::ClassPrinter_Node> node, jni::ref<java::util::function::Consumer> out) { return call_static_method<"toXml", void>(node, out); }
	static jni::ref<jdk::internal::classfile::components::ClassPrinter_MapNode> modelToTree(jni::ref<jdk::internal::classfile::CompoundElement> model, jni::ref<jdk::internal::classfile::components::ClassPrinter_Verbosity> verbosity) { return call_static_method<"modelToTree", jni::ref<jdk::internal::classfile::components::ClassPrinter_MapNode>>(model, verbosity); }
	static jni::ref<jdk::internal::classfile::components::ClassPrinter_MapNode> methodToTree(jni::ref<jdk::internal::classfile::MethodModel> m, jni::ref<jdk::internal::classfile::components::ClassPrinter_Verbosity> verbosity) { return call_static_method<"methodToTree", jni::ref<jdk::internal::classfile::components::ClassPrinter_MapNode>>(m, verbosity); }

protected:

	ClassPrinterImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_CLASSPRINTERIMPL
