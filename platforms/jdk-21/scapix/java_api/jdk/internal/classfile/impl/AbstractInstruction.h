// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/jdk/internal/classfile/impl/AbstractElement.h>
#include <scapix/java_api/jdk/internal/classfile/Instruction.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_ABSTRACTINSTRUCTION_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_ABSTRACTINSTRUCTION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::classfile::impl { class AbstractInstruction; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::classfile::impl::AbstractInstruction>
{
	static constexpr fixed_string class_name = "jdk/internal/classfile/impl/AbstractInstruction";
	using base_classes = std::tuple<scapix::java_api::jdk::internal::classfile::impl::AbstractElement, scapix::java_api::jdk::internal::classfile::Instruction>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_ABSTRACTINSTRUCTION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_ABSTRACTINSTRUCTION)
#define SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_ABSTRACTINSTRUCTION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/jdk/internal/classfile/Opcode.h>
#include <scapix/java_api/jdk/internal/classfile/impl/DirectCodeBuilder.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_UnboundRetInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_UnboundJsrInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_UnboundNopInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_UnboundMonitorInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_UnboundLoadConstantInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_UnboundArgumentConstantInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_UnboundIntrinsicConstantInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_UnboundOperatorInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_UnboundConvertInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_UnboundStackInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_UnboundTypeCheckInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_UnboundArrayStoreInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_UnboundArrayLoadInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_UnboundNewMultidimensionalArrayInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_UnboundNewReferenceArrayInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_UnboundNewPrimitiveArrayInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_UnboundNewObjectInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_UnboundInvokeDynamicInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_UnboundInvokeInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_UnboundFieldInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_UnboundThrowInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_UnboundReturnInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_UnboundTableSwitchInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_UnboundLookupSwitchInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_UnboundBranchInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_UnboundIncrementInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_UnboundStoreInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_UnboundLoadInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_UnboundInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_BoundRetInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_BoundJsrInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_BoundLoadConstantInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_BoundArgumentConstantInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_BoundTypeCheckInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_BoundNewMultidimensionalArrayInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_BoundNewReferenceArrayInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_BoundNewPrimitiveArrayInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_BoundNewObjectInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_BoundInvokeDynamicInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_BoundInvokeInterfaceInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_BoundInvokeInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_BoundFieldInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_BoundTableSwitchInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_BoundLookupSwitchInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_SwitchCaseImpl.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_BoundBranchInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_BoundIncrementInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_BoundStoreInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_BoundLoadInstruction.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractInstruction_BoundInstruction.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::classfile::impl::AbstractInstruction : public jni::object_base<"jdk/internal/classfile/impl/AbstractInstruction",
	jdk::internal::classfile::impl::AbstractElement,
	jdk::internal::classfile::Instruction>
{
public:

	using UnboundRetInstruction = AbstractInstruction_UnboundRetInstruction;
	using UnboundJsrInstruction = AbstractInstruction_UnboundJsrInstruction;
	using UnboundNopInstruction = AbstractInstruction_UnboundNopInstruction;
	using UnboundMonitorInstruction = AbstractInstruction_UnboundMonitorInstruction;
	using UnboundLoadConstantInstruction = AbstractInstruction_UnboundLoadConstantInstruction;
	using UnboundArgumentConstantInstruction = AbstractInstruction_UnboundArgumentConstantInstruction;
	using UnboundIntrinsicConstantInstruction = AbstractInstruction_UnboundIntrinsicConstantInstruction;
	using UnboundOperatorInstruction = AbstractInstruction_UnboundOperatorInstruction;
	using UnboundConvertInstruction = AbstractInstruction_UnboundConvertInstruction;
	using UnboundStackInstruction = AbstractInstruction_UnboundStackInstruction;
	using UnboundTypeCheckInstruction = AbstractInstruction_UnboundTypeCheckInstruction;
	using UnboundArrayStoreInstruction = AbstractInstruction_UnboundArrayStoreInstruction;
	using UnboundArrayLoadInstruction = AbstractInstruction_UnboundArrayLoadInstruction;
	using UnboundNewMultidimensionalArrayInstruction = AbstractInstruction_UnboundNewMultidimensionalArrayInstruction;
	using UnboundNewReferenceArrayInstruction = AbstractInstruction_UnboundNewReferenceArrayInstruction;
	using UnboundNewPrimitiveArrayInstruction = AbstractInstruction_UnboundNewPrimitiveArrayInstruction;
	using UnboundNewObjectInstruction = AbstractInstruction_UnboundNewObjectInstruction;
	using UnboundInvokeDynamicInstruction = AbstractInstruction_UnboundInvokeDynamicInstruction;
	using UnboundInvokeInstruction = AbstractInstruction_UnboundInvokeInstruction;
	using UnboundFieldInstruction = AbstractInstruction_UnboundFieldInstruction;
	using UnboundThrowInstruction = AbstractInstruction_UnboundThrowInstruction;
	using UnboundReturnInstruction = AbstractInstruction_UnboundReturnInstruction;
	using UnboundTableSwitchInstruction = AbstractInstruction_UnboundTableSwitchInstruction;
	using UnboundLookupSwitchInstruction = AbstractInstruction_UnboundLookupSwitchInstruction;
	using UnboundBranchInstruction = AbstractInstruction_UnboundBranchInstruction;
	using UnboundIncrementInstruction = AbstractInstruction_UnboundIncrementInstruction;
	using UnboundStoreInstruction = AbstractInstruction_UnboundStoreInstruction;
	using UnboundLoadInstruction = AbstractInstruction_UnboundLoadInstruction;
	using UnboundInstruction = AbstractInstruction_UnboundInstruction;
	using BoundRetInstruction = AbstractInstruction_BoundRetInstruction;
	using BoundJsrInstruction = AbstractInstruction_BoundJsrInstruction;
	using BoundLoadConstantInstruction = AbstractInstruction_BoundLoadConstantInstruction;
	using BoundArgumentConstantInstruction = AbstractInstruction_BoundArgumentConstantInstruction;
	using BoundTypeCheckInstruction = AbstractInstruction_BoundTypeCheckInstruction;
	using BoundNewMultidimensionalArrayInstruction = AbstractInstruction_BoundNewMultidimensionalArrayInstruction;
	using BoundNewReferenceArrayInstruction = AbstractInstruction_BoundNewReferenceArrayInstruction;
	using BoundNewPrimitiveArrayInstruction = AbstractInstruction_BoundNewPrimitiveArrayInstruction;
	using BoundNewObjectInstruction = AbstractInstruction_BoundNewObjectInstruction;
	using BoundInvokeDynamicInstruction = AbstractInstruction_BoundInvokeDynamicInstruction;
	using BoundInvokeInterfaceInstruction = AbstractInstruction_BoundInvokeInterfaceInstruction;
	using BoundInvokeInstruction = AbstractInstruction_BoundInvokeInstruction;
	using BoundFieldInstruction = AbstractInstruction_BoundFieldInstruction;
	using BoundTableSwitchInstruction = AbstractInstruction_BoundTableSwitchInstruction;
	using BoundLookupSwitchInstruction = AbstractInstruction_BoundLookupSwitchInstruction;
	using SwitchCaseImpl = AbstractInstruction_SwitchCaseImpl;
	using BoundBranchInstruction = AbstractInstruction_BoundBranchInstruction;
	using BoundIncrementInstruction = AbstractInstruction_BoundIncrementInstruction;
	using BoundStoreInstruction = AbstractInstruction_BoundStoreInstruction;
	using BoundLoadInstruction = AbstractInstruction_BoundLoadInstruction;
	using BoundInstruction = AbstractInstruction_BoundInstruction;

	jni::ref<jdk::internal::classfile::Opcode> opcode() { return call_method<"opcode", jni::ref<jdk::internal::classfile::Opcode>>(); }
	jint sizeInBytes() { return call_method<"sizeInBytes", jint>(); }
	static jni::ref<jdk::internal::classfile::impl::AbstractInstruction> new_object(jni::ref<jdk::internal::classfile::Opcode> op, jint size) { return base_::new_object(op, size); }
	void writeTo(jni::ref<jdk::internal::classfile::impl::DirectCodeBuilder> p1) { return call_method<"writeTo", void>(p1); }

protected:

	AbstractInstruction(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_ABSTRACTINSTRUCTION
