// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/jdk/internal/classfile/ClassTransform.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_COMPONENTS_CLASSREMAPPER_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_COMPONENTS_CLASSREMAPPER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::classfile::components { class ClassRemapper; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::classfile::components::ClassRemapper>
{
	static constexpr fixed_string class_name = "jdk/internal/classfile/components/ClassRemapper";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::jdk::internal::classfile::ClassTransform>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_COMPONENTS_CLASSREMAPPER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_COMPONENTS_CLASSREMAPPER)
#define SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_COMPONENTS_CLASSREMAPPER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/constant/ClassDesc.h>
#include <scapix/java_api/java/util/Map.h>
#include <scapix/java_api/java/util/function/Function.h>
#include <scapix/java_api/jdk/internal/classfile/ClassModel.h>
#include <scapix/java_api/jdk/internal/classfile/CodeTransform.h>
#include <scapix/java_api/jdk/internal/classfile/FieldTransform.h>
#include <scapix/java_api/jdk/internal/classfile/MethodTransform.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::classfile::components::ClassRemapper : public jni::object_base<"jdk/internal/classfile/components/ClassRemapper",
	java::lang::Object,
	jdk::internal::classfile::ClassTransform>
{
public:

	static jni::ref<jdk::internal::classfile::components::ClassRemapper> of(jni::ref<java::util::Map> classMap) { return call_static_method<"of", jni::ref<jdk::internal::classfile::components::ClassRemapper>>(classMap); }
	static jni::ref<jdk::internal::classfile::components::ClassRemapper> of(jni::ref<java::util::function::Function> mapFunction) { return call_static_method<"of", jni::ref<jdk::internal::classfile::components::ClassRemapper>>(mapFunction); }
	jni::ref<java::lang::constant::ClassDesc> map(jni::ref<java::lang::constant::ClassDesc> p1) { return call_method<"map", jni::ref<java::lang::constant::ClassDesc>>(p1); }
	jni::ref<jdk::internal::classfile::FieldTransform> asFieldTransform() { return call_method<"asFieldTransform", jni::ref<jdk::internal::classfile::FieldTransform>>(); }
	jni::ref<jdk::internal::classfile::MethodTransform> asMethodTransform() { return call_method<"asMethodTransform", jni::ref<jdk::internal::classfile::MethodTransform>>(); }
	jni::ref<jdk::internal::classfile::CodeTransform> asCodeTransform() { return call_method<"asCodeTransform", jni::ref<jdk::internal::classfile::CodeTransform>>(); }
	jni::ref<jni::array<jbyte>> remapClass(jni::ref<jdk::internal::classfile::ClassModel> clm) { return call_method<"remapClass", jni::ref<jni::array<jbyte>>>(clm); }

protected:

	ClassRemapper(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_COMPONENTS_CLASSREMAPPER
