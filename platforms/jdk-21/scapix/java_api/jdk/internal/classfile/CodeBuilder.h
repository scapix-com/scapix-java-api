// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/jdk/internal/classfile/ClassfileBuilder.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_CODEBUILDER_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_CODEBUILDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::classfile { class CodeBuilder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::classfile::CodeBuilder>
{
	static constexpr fixed_string class_name = "jdk/internal/classfile/CodeBuilder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::jdk::internal::classfile::ClassfileBuilder>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_CODEBUILDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_CODEBUILDER)
#define SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_CODEBUILDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/constant/ClassDesc.h>
#include <scapix/java_api/java/lang/constant/ConstantDesc.h>
#include <scapix/java_api/java/lang/constant/DynamicCallSiteDesc.h>
#include <scapix/java_api/java/lang/constant/MethodTypeDesc.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/java/util/Optional.h>
#include <scapix/java_api/java/util/function/Consumer.h>
#include <scapix/java_api/jdk/internal/classfile/CodeTransform.h>
#include <scapix/java_api/jdk/internal/classfile/Label.h>
#include <scapix/java_api/jdk/internal/classfile/Opcode.h>
#include <scapix/java_api/jdk/internal/classfile/Signature.h>
#include <scapix/java_api/jdk/internal/classfile/TypeKind.h>
#include <scapix/java_api/jdk/internal/classfile/constantpool/ClassEntry.h>
#include <scapix/java_api/jdk/internal/classfile/constantpool/FieldRefEntry.h>
#include <scapix/java_api/jdk/internal/classfile/constantpool/InterfaceMethodRefEntry.h>
#include <scapix/java_api/jdk/internal/classfile/constantpool/InvokeDynamicEntry.h>
#include <scapix/java_api/jdk/internal/classfile/constantpool/LoadableConstantEntry.h>
#include <scapix/java_api/jdk/internal/classfile/constantpool/MemberRefEntry.h>
#include <scapix/java_api/jdk/internal/classfile/constantpool/MethodRefEntry.h>
#include <scapix/java_api/jdk/internal/classfile/constantpool/Utf8Entry.h>
#include <scapix/java_api/jdk/internal/classfile/CodeBuilder_CatchBuilder.h>
#include <scapix/java_api/jdk/internal/classfile/CodeBuilder_BlockCodeBuilder.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::classfile::CodeBuilder : public jni::object_base<"jdk/internal/classfile/CodeBuilder",
	java::lang::Object,
	jdk::internal::classfile::ClassfileBuilder>
{
public:

	using CatchBuilder = CodeBuilder_CatchBuilder;
	using BlockCodeBuilder = CodeBuilder_BlockCodeBuilder;

	jni::ref<java::util::Optional> original() { return call_method<"original", jni::ref<java::util::Optional>>(); }
	jni::ref<jdk::internal::classfile::Label> newLabel() { return call_method<"newLabel", jni::ref<jdk::internal::classfile::Label>>(); }
	jni::ref<jdk::internal::classfile::Label> startLabel() { return call_method<"startLabel", jni::ref<jdk::internal::classfile::Label>>(); }
	jni::ref<jdk::internal::classfile::Label> endLabel() { return call_method<"endLabel", jni::ref<jdk::internal::classfile::Label>>(); }
	jint receiverSlot() { return call_method<"receiverSlot", jint>(); }
	jint parameterSlot(jint p1) { return call_method<"parameterSlot", jint>(p1); }
	jint allocateLocal(jni::ref<jdk::internal::classfile::TypeKind> p1) { return call_method<"allocateLocal", jint>(p1); }
	jni::ref<jdk::internal::classfile::CodeBuilder> transforming(jni::ref<jdk::internal::classfile::CodeTransform> transform, jni::ref<java::util::function::Consumer> handler) { return call_method<"transforming", jni::ref<jdk::internal::classfile::CodeBuilder>>(transform, handler); }
	jni::ref<jdk::internal::classfile::CodeBuilder> block(jni::ref<java::util::function::Consumer> handler) { return call_method<"block", jni::ref<jdk::internal::classfile::CodeBuilder>>(handler); }
	jni::ref<jdk::internal::classfile::CodeBuilder> ifThen(jni::ref<java::util::function::Consumer> thenHandler) { return call_method<"ifThen", jni::ref<jdk::internal::classfile::CodeBuilder>>(thenHandler); }
	jni::ref<jdk::internal::classfile::CodeBuilder> ifThen(jni::ref<jdk::internal::classfile::Opcode> opcode, jni::ref<java::util::function::Consumer> thenHandler) { return call_method<"ifThen", jni::ref<jdk::internal::classfile::CodeBuilder>>(opcode, thenHandler); }
	jni::ref<jdk::internal::classfile::CodeBuilder> ifThenElse(jni::ref<java::util::function::Consumer> thenHandler, jni::ref<java::util::function::Consumer> elseHandler) { return call_method<"ifThenElse", jni::ref<jdk::internal::classfile::CodeBuilder>>(thenHandler, elseHandler); }
	jni::ref<jdk::internal::classfile::CodeBuilder> ifThenElse(jni::ref<jdk::internal::classfile::Opcode> opcode, jni::ref<java::util::function::Consumer> thenHandler, jni::ref<java::util::function::Consumer> elseHandler) { return call_method<"ifThenElse", jni::ref<jdk::internal::classfile::CodeBuilder>>(opcode, thenHandler, elseHandler); }
	jni::ref<jdk::internal::classfile::CodeBuilder> trying(jni::ref<java::util::function::Consumer> tryHandler, jni::ref<java::util::function::Consumer> catchesHandler) { return call_method<"trying", jni::ref<jdk::internal::classfile::CodeBuilder>>(tryHandler, catchesHandler); }
	jni::ref<jdk::internal::classfile::CodeBuilder> loadInstruction(jni::ref<jdk::internal::classfile::TypeKind> tk, jint slot) { return call_method<"loadInstruction", jni::ref<jdk::internal::classfile::CodeBuilder>>(tk, slot); }
	jni::ref<jdk::internal::classfile::CodeBuilder> storeInstruction(jni::ref<jdk::internal::classfile::TypeKind> tk, jint slot) { return call_method<"storeInstruction", jni::ref<jdk::internal::classfile::CodeBuilder>>(tk, slot); }
	jni::ref<jdk::internal::classfile::CodeBuilder> incrementInstruction(jint slot, jint val) { return call_method<"incrementInstruction", jni::ref<jdk::internal::classfile::CodeBuilder>>(slot, val); }
	jni::ref<jdk::internal::classfile::CodeBuilder> branchInstruction(jni::ref<jdk::internal::classfile::Opcode> op, jni::ref<jdk::internal::classfile::Label> target) { return call_method<"branchInstruction", jni::ref<jdk::internal::classfile::CodeBuilder>>(op, target); }
	jni::ref<jdk::internal::classfile::CodeBuilder> lookupSwitchInstruction(jni::ref<jdk::internal::classfile::Label> defaultTarget, jni::ref<java::util::List> cases) { return call_method<"lookupSwitchInstruction", jni::ref<jdk::internal::classfile::CodeBuilder>>(defaultTarget, cases); }
	jni::ref<jdk::internal::classfile::CodeBuilder> tableSwitchInstruction(jint lowValue, jint highValue, jni::ref<jdk::internal::classfile::Label> defaultTarget, jni::ref<java::util::List> cases) { return call_method<"tableSwitchInstruction", jni::ref<jdk::internal::classfile::CodeBuilder>>(lowValue, highValue, defaultTarget, cases); }
	jni::ref<jdk::internal::classfile::CodeBuilder> returnInstruction(jni::ref<jdk::internal::classfile::TypeKind> tk) { return call_method<"returnInstruction", jni::ref<jdk::internal::classfile::CodeBuilder>>(tk); }
	jni::ref<jdk::internal::classfile::CodeBuilder> throwInstruction() { return call_method<"throwInstruction", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> fieldInstruction(jni::ref<jdk::internal::classfile::Opcode> opcode, jni::ref<jdk::internal::classfile::constantpool::FieldRefEntry> ref) { return call_method<"fieldInstruction", jni::ref<jdk::internal::classfile::CodeBuilder>>(opcode, ref); }
	jni::ref<jdk::internal::classfile::CodeBuilder> fieldInstruction(jni::ref<jdk::internal::classfile::Opcode> opcode, jni::ref<java::lang::constant::ClassDesc> owner, jni::ref<java::lang::String> name, jni::ref<java::lang::constant::ClassDesc> type) { return call_method<"fieldInstruction", jni::ref<jdk::internal::classfile::CodeBuilder>>(opcode, owner, name, type); }
	jni::ref<jdk::internal::classfile::CodeBuilder> invokeInstruction(jni::ref<jdk::internal::classfile::Opcode> opcode, jni::ref<jdk::internal::classfile::constantpool::MemberRefEntry> ref) { return call_method<"invokeInstruction", jni::ref<jdk::internal::classfile::CodeBuilder>>(opcode, ref); }
	jni::ref<jdk::internal::classfile::CodeBuilder> invokeInstruction(jni::ref<jdk::internal::classfile::Opcode> opcode, jni::ref<java::lang::constant::ClassDesc> owner, jni::ref<java::lang::String> name, jni::ref<java::lang::constant::MethodTypeDesc> desc, jboolean isInterface) { return call_method<"invokeInstruction", jni::ref<jdk::internal::classfile::CodeBuilder>>(opcode, owner, name, desc, isInterface); }
	jni::ref<jdk::internal::classfile::CodeBuilder> invokeDynamicInstruction(jni::ref<jdk::internal::classfile::constantpool::InvokeDynamicEntry> ref) { return call_method<"invokeDynamicInstruction", jni::ref<jdk::internal::classfile::CodeBuilder>>(ref); }
	jni::ref<jdk::internal::classfile::CodeBuilder> invokeDynamicInstruction(jni::ref<java::lang::constant::DynamicCallSiteDesc> desc) { return call_method<"invokeDynamicInstruction", jni::ref<jdk::internal::classfile::CodeBuilder>>(desc); }
	jni::ref<jdk::internal::classfile::CodeBuilder> newObjectInstruction(jni::ref<jdk::internal::classfile::constantpool::ClassEntry> type) { return call_method<"newObjectInstruction", jni::ref<jdk::internal::classfile::CodeBuilder>>(type); }
	jni::ref<jdk::internal::classfile::CodeBuilder> newObjectInstruction(jni::ref<java::lang::constant::ClassDesc> type) { return call_method<"newObjectInstruction", jni::ref<jdk::internal::classfile::CodeBuilder>>(type); }
	jni::ref<jdk::internal::classfile::CodeBuilder> newPrimitiveArrayInstruction(jni::ref<jdk::internal::classfile::TypeKind> typeKind) { return call_method<"newPrimitiveArrayInstruction", jni::ref<jdk::internal::classfile::CodeBuilder>>(typeKind); }
	jni::ref<jdk::internal::classfile::CodeBuilder> newReferenceArrayInstruction(jni::ref<jdk::internal::classfile::constantpool::ClassEntry> type) { return call_method<"newReferenceArrayInstruction", jni::ref<jdk::internal::classfile::CodeBuilder>>(type); }
	jni::ref<jdk::internal::classfile::CodeBuilder> newReferenceArrayInstruction(jni::ref<java::lang::constant::ClassDesc> type) { return call_method<"newReferenceArrayInstruction", jni::ref<jdk::internal::classfile::CodeBuilder>>(type); }
	jni::ref<jdk::internal::classfile::CodeBuilder> newMultidimensionalArrayInstruction(jint dimensions, jni::ref<jdk::internal::classfile::constantpool::ClassEntry> type) { return call_method<"newMultidimensionalArrayInstruction", jni::ref<jdk::internal::classfile::CodeBuilder>>(dimensions, type); }
	jni::ref<jdk::internal::classfile::CodeBuilder> newMultidimensionalArrayInstruction(jint dimensions, jni::ref<java::lang::constant::ClassDesc> type) { return call_method<"newMultidimensionalArrayInstruction", jni::ref<jdk::internal::classfile::CodeBuilder>>(dimensions, type); }
	jni::ref<jdk::internal::classfile::CodeBuilder> arrayLoadInstruction(jni::ref<jdk::internal::classfile::TypeKind> tk) { return call_method<"arrayLoadInstruction", jni::ref<jdk::internal::classfile::CodeBuilder>>(tk); }
	jni::ref<jdk::internal::classfile::CodeBuilder> arrayStoreInstruction(jni::ref<jdk::internal::classfile::TypeKind> tk) { return call_method<"arrayStoreInstruction", jni::ref<jdk::internal::classfile::CodeBuilder>>(tk); }
	jni::ref<jdk::internal::classfile::CodeBuilder> typeCheckInstruction(jni::ref<jdk::internal::classfile::Opcode> opcode, jni::ref<jdk::internal::classfile::constantpool::ClassEntry> type) { return call_method<"typeCheckInstruction", jni::ref<jdk::internal::classfile::CodeBuilder>>(opcode, type); }
	jni::ref<jdk::internal::classfile::CodeBuilder> typeCheckInstruction(jni::ref<jdk::internal::classfile::Opcode> opcode, jni::ref<java::lang::constant::ClassDesc> type) { return call_method<"typeCheckInstruction", jni::ref<jdk::internal::classfile::CodeBuilder>>(opcode, type); }
	jni::ref<jdk::internal::classfile::CodeBuilder> convertInstruction(jni::ref<jdk::internal::classfile::TypeKind> fromType, jni::ref<jdk::internal::classfile::TypeKind> toType) { return call_method<"convertInstruction", jni::ref<jdk::internal::classfile::CodeBuilder>>(fromType, toType); }
	jni::ref<jdk::internal::classfile::CodeBuilder> stackInstruction(jni::ref<jdk::internal::classfile::Opcode> opcode) { return call_method<"stackInstruction", jni::ref<jdk::internal::classfile::CodeBuilder>>(opcode); }
	jni::ref<jdk::internal::classfile::CodeBuilder> operatorInstruction(jni::ref<jdk::internal::classfile::Opcode> opcode) { return call_method<"operatorInstruction", jni::ref<jdk::internal::classfile::CodeBuilder>>(opcode); }
	jni::ref<jdk::internal::classfile::CodeBuilder> constantInstruction(jni::ref<jdk::internal::classfile::Opcode> opcode, jni::ref<java::lang::constant::ConstantDesc> value) { return call_method<"constantInstruction", jni::ref<jdk::internal::classfile::CodeBuilder>>(opcode, value); }
	jni::ref<jdk::internal::classfile::CodeBuilder> constantInstruction(jni::ref<java::lang::constant::ConstantDesc> value) { return call_method<"constantInstruction", jni::ref<jdk::internal::classfile::CodeBuilder>>(value); }
	jni::ref<jdk::internal::classfile::CodeBuilder> monitorInstruction(jni::ref<jdk::internal::classfile::Opcode> opcode) { return call_method<"monitorInstruction", jni::ref<jdk::internal::classfile::CodeBuilder>>(opcode); }
	jni::ref<jdk::internal::classfile::CodeBuilder> nopInstruction() { return call_method<"nopInstruction", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> nop() { return call_method<"nop", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::Label> newBoundLabel() { return call_method<"newBoundLabel", jni::ref<jdk::internal::classfile::Label>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> labelBinding(jni::ref<jdk::internal::classfile::Label> label) { return call_method<"labelBinding", jni::ref<jdk::internal::classfile::CodeBuilder>>(label); }
	jni::ref<jdk::internal::classfile::CodeBuilder> lineNumber(jint line) { return call_method<"lineNumber", jni::ref<jdk::internal::classfile::CodeBuilder>>(line); }
	jni::ref<jdk::internal::classfile::CodeBuilder> exceptionCatch(jni::ref<jdk::internal::classfile::Label> start, jni::ref<jdk::internal::classfile::Label> end, jni::ref<jdk::internal::classfile::Label> handler, jni::ref<jdk::internal::classfile::constantpool::ClassEntry> catchType) { return call_method<"exceptionCatch", jni::ref<jdk::internal::classfile::CodeBuilder>>(start, end, handler, catchType); }
	jni::ref<jdk::internal::classfile::CodeBuilder> exceptionCatch(jni::ref<jdk::internal::classfile::Label> start, jni::ref<jdk::internal::classfile::Label> end, jni::ref<jdk::internal::classfile::Label> handler, jni::ref<java::util::Optional> catchType) { return call_method<"exceptionCatch", jni::ref<jdk::internal::classfile::CodeBuilder>>(start, end, handler, catchType); }
	jni::ref<jdk::internal::classfile::CodeBuilder> exceptionCatch(jni::ref<jdk::internal::classfile::Label> start, jni::ref<jdk::internal::classfile::Label> end, jni::ref<jdk::internal::classfile::Label> handler, jni::ref<java::lang::constant::ClassDesc> catchType) { return call_method<"exceptionCatch", jni::ref<jdk::internal::classfile::CodeBuilder>>(start, end, handler, catchType); }
	jni::ref<jdk::internal::classfile::CodeBuilder> exceptionCatchAll(jni::ref<jdk::internal::classfile::Label> start, jni::ref<jdk::internal::classfile::Label> end, jni::ref<jdk::internal::classfile::Label> handler) { return call_method<"exceptionCatchAll", jni::ref<jdk::internal::classfile::CodeBuilder>>(start, end, handler); }
	jni::ref<jdk::internal::classfile::CodeBuilder> characterRange(jni::ref<jdk::internal::classfile::Label> startScope, jni::ref<jdk::internal::classfile::Label> endScope, jint characterRangeStart, jint characterRangeEnd, jint flags) { return call_method<"characterRange", jni::ref<jdk::internal::classfile::CodeBuilder>>(startScope, endScope, characterRangeStart, characterRangeEnd, flags); }
	jni::ref<jdk::internal::classfile::CodeBuilder> localVariable(jint slot, jni::ref<jdk::internal::classfile::constantpool::Utf8Entry> nameEntry, jni::ref<jdk::internal::classfile::constantpool::Utf8Entry> descriptorEntry, jni::ref<jdk::internal::classfile::Label> startScope, jni::ref<jdk::internal::classfile::Label> endScope) { return call_method<"localVariable", jni::ref<jdk::internal::classfile::CodeBuilder>>(slot, nameEntry, descriptorEntry, startScope, endScope); }
	jni::ref<jdk::internal::classfile::CodeBuilder> localVariable(jint slot, jni::ref<java::lang::String> name, jni::ref<java::lang::constant::ClassDesc> descriptor, jni::ref<jdk::internal::classfile::Label> startScope, jni::ref<jdk::internal::classfile::Label> endScope) { return call_method<"localVariable", jni::ref<jdk::internal::classfile::CodeBuilder>>(slot, name, descriptor, startScope, endScope); }
	jni::ref<jdk::internal::classfile::CodeBuilder> localVariableType(jint slot, jni::ref<jdk::internal::classfile::constantpool::Utf8Entry> nameEntry, jni::ref<jdk::internal::classfile::constantpool::Utf8Entry> signatureEntry, jni::ref<jdk::internal::classfile::Label> startScope, jni::ref<jdk::internal::classfile::Label> endScope) { return call_method<"localVariableType", jni::ref<jdk::internal::classfile::CodeBuilder>>(slot, nameEntry, signatureEntry, startScope, endScope); }
	jni::ref<jdk::internal::classfile::CodeBuilder> localVariableType(jint slot, jni::ref<java::lang::String> name, jni::ref<jdk::internal::classfile::Signature> signature, jni::ref<jdk::internal::classfile::Label> startScope, jni::ref<jdk::internal::classfile::Label> endScope) { return call_method<"localVariableType", jni::ref<jdk::internal::classfile::CodeBuilder>>(slot, name, signature, startScope, endScope); }
	jni::ref<jdk::internal::classfile::CodeBuilder> aconst_null() { return call_method<"aconst_null", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> aaload() { return call_method<"aaload", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> aastore() { return call_method<"aastore", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> aload(jint slot) { return call_method<"aload", jni::ref<jdk::internal::classfile::CodeBuilder>>(slot); }
	jni::ref<jdk::internal::classfile::CodeBuilder> anewarray(jni::ref<jdk::internal::classfile::constantpool::ClassEntry> classEntry) { return call_method<"anewarray", jni::ref<jdk::internal::classfile::CodeBuilder>>(classEntry); }
	jni::ref<jdk::internal::classfile::CodeBuilder> anewarray(jni::ref<java::lang::constant::ClassDesc> className) { return call_method<"anewarray", jni::ref<jdk::internal::classfile::CodeBuilder>>(className); }
	jni::ref<jdk::internal::classfile::CodeBuilder> areturn() { return call_method<"areturn", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> arraylength() { return call_method<"arraylength", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> astore(jint slot) { return call_method<"astore", jni::ref<jdk::internal::classfile::CodeBuilder>>(slot); }
	jni::ref<jdk::internal::classfile::CodeBuilder> athrow() { return call_method<"athrow", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> baload() { return call_method<"baload", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> bastore() { return call_method<"bastore", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> bipush(jint b) { return call_method<"bipush", jni::ref<jdk::internal::classfile::CodeBuilder>>(b); }
	jni::ref<jdk::internal::classfile::CodeBuilder> caload() { return call_method<"caload", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> castore() { return call_method<"castore", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> checkcast(jni::ref<jdk::internal::classfile::constantpool::ClassEntry> type) { return call_method<"checkcast", jni::ref<jdk::internal::classfile::CodeBuilder>>(type); }
	jni::ref<jdk::internal::classfile::CodeBuilder> checkcast(jni::ref<java::lang::constant::ClassDesc> type) { return call_method<"checkcast", jni::ref<jdk::internal::classfile::CodeBuilder>>(type); }
	jni::ref<jdk::internal::classfile::CodeBuilder> d2f() { return call_method<"d2f", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> d2i() { return call_method<"d2i", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> d2l() { return call_method<"d2l", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> dadd() { return call_method<"dadd", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> daload() { return call_method<"daload", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> dastore() { return call_method<"dastore", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> dcmpg() { return call_method<"dcmpg", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> dcmpl() { return call_method<"dcmpl", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> dconst_0() { return call_method<"dconst_0", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> dconst_1() { return call_method<"dconst_1", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> ddiv() { return call_method<"ddiv", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> dload(jint slot) { return call_method<"dload", jni::ref<jdk::internal::classfile::CodeBuilder>>(slot); }
	jni::ref<jdk::internal::classfile::CodeBuilder> dmul() { return call_method<"dmul", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> dneg() { return call_method<"dneg", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> drem() { return call_method<"drem", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> dreturn() { return call_method<"dreturn", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> dstore(jint slot) { return call_method<"dstore", jni::ref<jdk::internal::classfile::CodeBuilder>>(slot); }
	jni::ref<jdk::internal::classfile::CodeBuilder> dsub() { return call_method<"dsub", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> dup() { return call_method<"dup", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> dup2() { return call_method<"dup2", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> dup2_x1() { return call_method<"dup2_x1", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> dup2_x2() { return call_method<"dup2_x2", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> dup_x1() { return call_method<"dup_x1", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> dup_x2() { return call_method<"dup_x2", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> f2d() { return call_method<"f2d", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> f2i() { return call_method<"f2i", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> f2l() { return call_method<"f2l", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> fadd() { return call_method<"fadd", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> faload() { return call_method<"faload", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> fastore() { return call_method<"fastore", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> fcmpg() { return call_method<"fcmpg", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> fcmpl() { return call_method<"fcmpl", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> fconst_0() { return call_method<"fconst_0", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> fconst_1() { return call_method<"fconst_1", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> fconst_2() { return call_method<"fconst_2", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> fdiv() { return call_method<"fdiv", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> fload(jint slot) { return call_method<"fload", jni::ref<jdk::internal::classfile::CodeBuilder>>(slot); }
	jni::ref<jdk::internal::classfile::CodeBuilder> fmul() { return call_method<"fmul", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> fneg() { return call_method<"fneg", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> frem() { return call_method<"frem", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> freturn() { return call_method<"freturn", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> fstore(jint slot) { return call_method<"fstore", jni::ref<jdk::internal::classfile::CodeBuilder>>(slot); }
	jni::ref<jdk::internal::classfile::CodeBuilder> fsub() { return call_method<"fsub", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> getfield(jni::ref<jdk::internal::classfile::constantpool::FieldRefEntry> ref) { return call_method<"getfield", jni::ref<jdk::internal::classfile::CodeBuilder>>(ref); }
	jni::ref<jdk::internal::classfile::CodeBuilder> getfield(jni::ref<java::lang::constant::ClassDesc> owner, jni::ref<java::lang::String> name, jni::ref<java::lang::constant::ClassDesc> type) { return call_method<"getfield", jni::ref<jdk::internal::classfile::CodeBuilder>>(owner, name, type); }
	jni::ref<jdk::internal::classfile::CodeBuilder> getstatic(jni::ref<jdk::internal::classfile::constantpool::FieldRefEntry> ref) { return call_method<"getstatic", jni::ref<jdk::internal::classfile::CodeBuilder>>(ref); }
	jni::ref<jdk::internal::classfile::CodeBuilder> getstatic(jni::ref<java::lang::constant::ClassDesc> owner, jni::ref<java::lang::String> name, jni::ref<java::lang::constant::ClassDesc> type) { return call_method<"getstatic", jni::ref<jdk::internal::classfile::CodeBuilder>>(owner, name, type); }
	jni::ref<jdk::internal::classfile::CodeBuilder> goto_(jni::ref<jdk::internal::classfile::Label> target) { return call_method<"goto_", jni::ref<jdk::internal::classfile::CodeBuilder>>(target); }
	jni::ref<jdk::internal::classfile::CodeBuilder> goto_w(jni::ref<jdk::internal::classfile::Label> target) { return call_method<"goto_w", jni::ref<jdk::internal::classfile::CodeBuilder>>(target); }
	jni::ref<jdk::internal::classfile::CodeBuilder> i2b() { return call_method<"i2b", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> i2c() { return call_method<"i2c", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> i2d() { return call_method<"i2d", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> i2f() { return call_method<"i2f", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> i2l() { return call_method<"i2l", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> i2s() { return call_method<"i2s", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> iadd() { return call_method<"iadd", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> iaload() { return call_method<"iaload", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> iand() { return call_method<"iand", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> iastore() { return call_method<"iastore", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> iconst_0() { return call_method<"iconst_0", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> iconst_1() { return call_method<"iconst_1", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> iconst_2() { return call_method<"iconst_2", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> iconst_3() { return call_method<"iconst_3", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> iconst_4() { return call_method<"iconst_4", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> iconst_5() { return call_method<"iconst_5", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> iconst_m1() { return call_method<"iconst_m1", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> idiv() { return call_method<"idiv", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> if_acmpeq(jni::ref<jdk::internal::classfile::Label> target) { return call_method<"if_acmpeq", jni::ref<jdk::internal::classfile::CodeBuilder>>(target); }
	jni::ref<jdk::internal::classfile::CodeBuilder> if_acmpne(jni::ref<jdk::internal::classfile::Label> target) { return call_method<"if_acmpne", jni::ref<jdk::internal::classfile::CodeBuilder>>(target); }
	jni::ref<jdk::internal::classfile::CodeBuilder> if_icmpeq(jni::ref<jdk::internal::classfile::Label> target) { return call_method<"if_icmpeq", jni::ref<jdk::internal::classfile::CodeBuilder>>(target); }
	jni::ref<jdk::internal::classfile::CodeBuilder> if_icmpge(jni::ref<jdk::internal::classfile::Label> target) { return call_method<"if_icmpge", jni::ref<jdk::internal::classfile::CodeBuilder>>(target); }
	jni::ref<jdk::internal::classfile::CodeBuilder> if_icmpgt(jni::ref<jdk::internal::classfile::Label> target) { return call_method<"if_icmpgt", jni::ref<jdk::internal::classfile::CodeBuilder>>(target); }
	jni::ref<jdk::internal::classfile::CodeBuilder> if_icmple(jni::ref<jdk::internal::classfile::Label> target) { return call_method<"if_icmple", jni::ref<jdk::internal::classfile::CodeBuilder>>(target); }
	jni::ref<jdk::internal::classfile::CodeBuilder> if_icmplt(jni::ref<jdk::internal::classfile::Label> target) { return call_method<"if_icmplt", jni::ref<jdk::internal::classfile::CodeBuilder>>(target); }
	jni::ref<jdk::internal::classfile::CodeBuilder> if_icmpne(jni::ref<jdk::internal::classfile::Label> target) { return call_method<"if_icmpne", jni::ref<jdk::internal::classfile::CodeBuilder>>(target); }
	jni::ref<jdk::internal::classfile::CodeBuilder> if_nonnull(jni::ref<jdk::internal::classfile::Label> target) { return call_method<"if_nonnull", jni::ref<jdk::internal::classfile::CodeBuilder>>(target); }
	jni::ref<jdk::internal::classfile::CodeBuilder> if_null(jni::ref<jdk::internal::classfile::Label> target) { return call_method<"if_null", jni::ref<jdk::internal::classfile::CodeBuilder>>(target); }
	jni::ref<jdk::internal::classfile::CodeBuilder> ifeq(jni::ref<jdk::internal::classfile::Label> target) { return call_method<"ifeq", jni::ref<jdk::internal::classfile::CodeBuilder>>(target); }
	jni::ref<jdk::internal::classfile::CodeBuilder> ifge(jni::ref<jdk::internal::classfile::Label> target) { return call_method<"ifge", jni::ref<jdk::internal::classfile::CodeBuilder>>(target); }
	jni::ref<jdk::internal::classfile::CodeBuilder> ifgt(jni::ref<jdk::internal::classfile::Label> target) { return call_method<"ifgt", jni::ref<jdk::internal::classfile::CodeBuilder>>(target); }
	jni::ref<jdk::internal::classfile::CodeBuilder> ifle(jni::ref<jdk::internal::classfile::Label> target) { return call_method<"ifle", jni::ref<jdk::internal::classfile::CodeBuilder>>(target); }
	jni::ref<jdk::internal::classfile::CodeBuilder> iflt(jni::ref<jdk::internal::classfile::Label> target) { return call_method<"iflt", jni::ref<jdk::internal::classfile::CodeBuilder>>(target); }
	jni::ref<jdk::internal::classfile::CodeBuilder> ifne(jni::ref<jdk::internal::classfile::Label> target) { return call_method<"ifne", jni::ref<jdk::internal::classfile::CodeBuilder>>(target); }
	jni::ref<jdk::internal::classfile::CodeBuilder> iinc(jint slot, jint val) { return call_method<"iinc", jni::ref<jdk::internal::classfile::CodeBuilder>>(slot, val); }
	jni::ref<jdk::internal::classfile::CodeBuilder> iload(jint slot) { return call_method<"iload", jni::ref<jdk::internal::classfile::CodeBuilder>>(slot); }
	jni::ref<jdk::internal::classfile::CodeBuilder> imul() { return call_method<"imul", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> ineg() { return call_method<"ineg", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> instanceof_(jni::ref<jdk::internal::classfile::constantpool::ClassEntry> target) { return call_method<"instanceof_", jni::ref<jdk::internal::classfile::CodeBuilder>>(target); }
	jni::ref<jdk::internal::classfile::CodeBuilder> instanceof_(jni::ref<java::lang::constant::ClassDesc> target) { return call_method<"instanceof_", jni::ref<jdk::internal::classfile::CodeBuilder>>(target); }
	jni::ref<jdk::internal::classfile::CodeBuilder> invokedynamic(jni::ref<jdk::internal::classfile::constantpool::InvokeDynamicEntry> ref) { return call_method<"invokedynamic", jni::ref<jdk::internal::classfile::CodeBuilder>>(ref); }
	jni::ref<jdk::internal::classfile::CodeBuilder> invokedynamic(jni::ref<java::lang::constant::DynamicCallSiteDesc> ref) { return call_method<"invokedynamic", jni::ref<jdk::internal::classfile::CodeBuilder>>(ref); }
	jni::ref<jdk::internal::classfile::CodeBuilder> invokeinterface(jni::ref<jdk::internal::classfile::constantpool::InterfaceMethodRefEntry> ref) { return call_method<"invokeinterface", jni::ref<jdk::internal::classfile::CodeBuilder>>(ref); }
	jni::ref<jdk::internal::classfile::CodeBuilder> invokeinterface(jni::ref<java::lang::constant::ClassDesc> owner, jni::ref<java::lang::String> name, jni::ref<java::lang::constant::MethodTypeDesc> type) { return call_method<"invokeinterface", jni::ref<jdk::internal::classfile::CodeBuilder>>(owner, name, type); }
	jni::ref<jdk::internal::classfile::CodeBuilder> invokespecial(jni::ref<jdk::internal::classfile::constantpool::InterfaceMethodRefEntry> ref) { return call_method<"invokespecial", jni::ref<jdk::internal::classfile::CodeBuilder>>(ref); }
	jni::ref<jdk::internal::classfile::CodeBuilder> invokespecial(jni::ref<jdk::internal::classfile::constantpool::MethodRefEntry> ref) { return call_method<"invokespecial", jni::ref<jdk::internal::classfile::CodeBuilder>>(ref); }
	jni::ref<jdk::internal::classfile::CodeBuilder> invokespecial(jni::ref<java::lang::constant::ClassDesc> owner, jni::ref<java::lang::String> name, jni::ref<java::lang::constant::MethodTypeDesc> type) { return call_method<"invokespecial", jni::ref<jdk::internal::classfile::CodeBuilder>>(owner, name, type); }
	jni::ref<jdk::internal::classfile::CodeBuilder> invokespecial(jni::ref<java::lang::constant::ClassDesc> owner, jni::ref<java::lang::String> name, jni::ref<java::lang::constant::MethodTypeDesc> type, jboolean isInterface) { return call_method<"invokespecial", jni::ref<jdk::internal::classfile::CodeBuilder>>(owner, name, type, isInterface); }
	jni::ref<jdk::internal::classfile::CodeBuilder> invokestatic(jni::ref<jdk::internal::classfile::constantpool::InterfaceMethodRefEntry> ref) { return call_method<"invokestatic", jni::ref<jdk::internal::classfile::CodeBuilder>>(ref); }
	jni::ref<jdk::internal::classfile::CodeBuilder> invokestatic(jni::ref<jdk::internal::classfile::constantpool::MethodRefEntry> ref) { return call_method<"invokestatic", jni::ref<jdk::internal::classfile::CodeBuilder>>(ref); }
	jni::ref<jdk::internal::classfile::CodeBuilder> invokestatic(jni::ref<java::lang::constant::ClassDesc> owner, jni::ref<java::lang::String> name, jni::ref<java::lang::constant::MethodTypeDesc> type) { return call_method<"invokestatic", jni::ref<jdk::internal::classfile::CodeBuilder>>(owner, name, type); }
	jni::ref<jdk::internal::classfile::CodeBuilder> invokestatic(jni::ref<java::lang::constant::ClassDesc> owner, jni::ref<java::lang::String> name, jni::ref<java::lang::constant::MethodTypeDesc> type, jboolean isInterface) { return call_method<"invokestatic", jni::ref<jdk::internal::classfile::CodeBuilder>>(owner, name, type, isInterface); }
	jni::ref<jdk::internal::classfile::CodeBuilder> invokevirtual(jni::ref<jdk::internal::classfile::constantpool::MethodRefEntry> ref) { return call_method<"invokevirtual", jni::ref<jdk::internal::classfile::CodeBuilder>>(ref); }
	jni::ref<jdk::internal::classfile::CodeBuilder> invokevirtual(jni::ref<java::lang::constant::ClassDesc> owner, jni::ref<java::lang::String> name, jni::ref<java::lang::constant::MethodTypeDesc> type) { return call_method<"invokevirtual", jni::ref<jdk::internal::classfile::CodeBuilder>>(owner, name, type); }
	jni::ref<jdk::internal::classfile::CodeBuilder> ior() { return call_method<"ior", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> irem() { return call_method<"irem", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> ireturn() { return call_method<"ireturn", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> ishl() { return call_method<"ishl", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> ishr() { return call_method<"ishr", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> istore(jint slot) { return call_method<"istore", jni::ref<jdk::internal::classfile::CodeBuilder>>(slot); }
	jni::ref<jdk::internal::classfile::CodeBuilder> isub() { return call_method<"isub", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> iushr() { return call_method<"iushr", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> ixor() { return call_method<"ixor", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> lookupswitch(jni::ref<jdk::internal::classfile::Label> defaultTarget, jni::ref<java::util::List> cases) { return call_method<"lookupswitch", jni::ref<jdk::internal::classfile::CodeBuilder>>(defaultTarget, cases); }
	jni::ref<jdk::internal::classfile::CodeBuilder> l2d() { return call_method<"l2d", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> l2f() { return call_method<"l2f", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> l2i() { return call_method<"l2i", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> ladd() { return call_method<"ladd", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> laload() { return call_method<"laload", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> land() { return call_method<"land", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> lastore() { return call_method<"lastore", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> lcmp() { return call_method<"lcmp", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> lconst_0() { return call_method<"lconst_0", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> lconst_1() { return call_method<"lconst_1", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> ldc(jni::ref<jdk::internal::classfile::constantpool::LoadableConstantEntry> entry) { return call_method<"ldc", jni::ref<jdk::internal::classfile::CodeBuilder>>(entry); }
	jni::ref<jdk::internal::classfile::CodeBuilder> ldiv() { return call_method<"ldiv", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> lload(jint slot) { return call_method<"lload", jni::ref<jdk::internal::classfile::CodeBuilder>>(slot); }
	jni::ref<jdk::internal::classfile::CodeBuilder> lmul() { return call_method<"lmul", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> lneg() { return call_method<"lneg", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> lor() { return call_method<"lor", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> lrem() { return call_method<"lrem", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> lreturn() { return call_method<"lreturn", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> lshl() { return call_method<"lshl", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> lshr() { return call_method<"lshr", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> lstore(jint slot) { return call_method<"lstore", jni::ref<jdk::internal::classfile::CodeBuilder>>(slot); }
	jni::ref<jdk::internal::classfile::CodeBuilder> lsub() { return call_method<"lsub", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> lushr() { return call_method<"lushr", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> lxor() { return call_method<"lxor", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> monitorenter() { return call_method<"monitorenter", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> monitorexit() { return call_method<"monitorexit", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> multianewarray(jni::ref<jdk::internal::classfile::constantpool::ClassEntry> array, jint dims) { return call_method<"multianewarray", jni::ref<jdk::internal::classfile::CodeBuilder>>(array, dims); }
	jni::ref<jdk::internal::classfile::CodeBuilder> multianewarray(jni::ref<java::lang::constant::ClassDesc> array, jint dims) { return call_method<"multianewarray", jni::ref<jdk::internal::classfile::CodeBuilder>>(array, dims); }
	jni::ref<jdk::internal::classfile::CodeBuilder> new_(jni::ref<jdk::internal::classfile::constantpool::ClassEntry> clazz) { return call_method<"new_", jni::ref<jdk::internal::classfile::CodeBuilder>>(clazz); }
	jni::ref<jdk::internal::classfile::CodeBuilder> new_(jni::ref<java::lang::constant::ClassDesc> clazz) { return call_method<"new_", jni::ref<jdk::internal::classfile::CodeBuilder>>(clazz); }
	jni::ref<jdk::internal::classfile::CodeBuilder> newarray(jni::ref<jdk::internal::classfile::TypeKind> typeKind) { return call_method<"newarray", jni::ref<jdk::internal::classfile::CodeBuilder>>(typeKind); }
	jni::ref<jdk::internal::classfile::CodeBuilder> pop() { return call_method<"pop", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> pop2() { return call_method<"pop2", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> putfield(jni::ref<jdk::internal::classfile::constantpool::FieldRefEntry> ref) { return call_method<"putfield", jni::ref<jdk::internal::classfile::CodeBuilder>>(ref); }
	jni::ref<jdk::internal::classfile::CodeBuilder> putfield(jni::ref<java::lang::constant::ClassDesc> owner, jni::ref<java::lang::String> name, jni::ref<java::lang::constant::ClassDesc> type) { return call_method<"putfield", jni::ref<jdk::internal::classfile::CodeBuilder>>(owner, name, type); }
	jni::ref<jdk::internal::classfile::CodeBuilder> putstatic(jni::ref<jdk::internal::classfile::constantpool::FieldRefEntry> ref) { return call_method<"putstatic", jni::ref<jdk::internal::classfile::CodeBuilder>>(ref); }
	jni::ref<jdk::internal::classfile::CodeBuilder> putstatic(jni::ref<java::lang::constant::ClassDesc> owner, jni::ref<java::lang::String> name, jni::ref<java::lang::constant::ClassDesc> type) { return call_method<"putstatic", jni::ref<jdk::internal::classfile::CodeBuilder>>(owner, name, type); }
	jni::ref<jdk::internal::classfile::CodeBuilder> return_() { return call_method<"return_", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> saload() { return call_method<"saload", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> sastore() { return call_method<"sastore", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> sipush(jint s) { return call_method<"sipush", jni::ref<jdk::internal::classfile::CodeBuilder>>(s); }
	jni::ref<jdk::internal::classfile::CodeBuilder> swap() { return call_method<"swap", jni::ref<jdk::internal::classfile::CodeBuilder>>(); }
	jni::ref<jdk::internal::classfile::CodeBuilder> tableswitch(jint low, jint high, jni::ref<jdk::internal::classfile::Label> defaultTarget, jni::ref<java::util::List> cases) { return call_method<"tableswitch", jni::ref<jdk::internal::classfile::CodeBuilder>>(low, high, defaultTarget, cases); }
	jni::ref<jdk::internal::classfile::CodeBuilder> tableswitch(jni::ref<jdk::internal::classfile::Label> defaultTarget, jni::ref<java::util::List> cases) { return call_method<"tableswitch", jni::ref<jdk::internal::classfile::CodeBuilder>>(defaultTarget, cases); }

protected:

	CodeBuilder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_CODEBUILDER
