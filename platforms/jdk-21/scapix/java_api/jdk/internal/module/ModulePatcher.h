// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_MODULE_MODULEPATCHER_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_MODULE_MODULEPATCHER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::module { class ModulePatcher; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::module::ModulePatcher>
{
	static constexpr fixed_string class_name = "jdk/internal/module/ModulePatcher";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_MODULE_MODULEPATCHER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_MODULE_MODULEPATCHER)
#define SCAPIX_JAVA_API_JDK_INTERNAL_MODULE_MODULEPATCHER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/module/ModuleReference.h>
#include <scapix/java_api/java/util/Map.h>
#include <scapix/java_api/jdk/internal/module/ModulePatcher_PatchedModuleReader.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::module::ModulePatcher : public jni::object_base<"jdk/internal/module/ModulePatcher",
	java::lang::Object>
{
public:

	using PatchedModuleReader = ModulePatcher_PatchedModuleReader;

	static jni::ref<jdk::internal::module::ModulePatcher> new_object(jni::ref<java::util::Map> input) { return base_::new_object(input); }
	jni::ref<java::lang::module::ModuleReference> patchIfNeeded(jni::ref<java::lang::module::ModuleReference> mref) { return call_method<"patchIfNeeded", jni::ref<java::lang::module::ModuleReference>>(mref); }
	jboolean hasPatches() { return call_method<"hasPatches", jboolean>(); }

protected:

	ModulePatcher(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_MODULE_MODULEPATCHER
