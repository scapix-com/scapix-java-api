// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/util/function/Supplier.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_LOADER_ABSTRACTCLASSLOADERVALUE_MEMOIZER_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_LOADER_ABSTRACTCLASSLOADERVALUE_MEMOIZER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::loader { class AbstractClassLoaderValue_Memoizer; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::loader::AbstractClassLoaderValue_Memoizer>
{
	static constexpr fixed_string class_name = "jdk/internal/loader/AbstractClassLoaderValue$Memoizer";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::util::function::Supplier>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_LOADER_ABSTRACTCLASSLOADERVALUE_MEMOIZER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_LOADER_ABSTRACTCLASSLOADERVALUE_MEMOIZER)
#define SCAPIX_JAVA_API_JDK_INTERNAL_LOADER_ABSTRACTCLASSLOADERVALUE_MEMOIZER

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class jdk::internal::loader::AbstractClassLoaderValue_Memoizer : public jni::object_base<"jdk/internal/loader/AbstractClassLoaderValue$Memoizer",
	java::lang::Object,
	java::util::function::Supplier>
{
public:

	jni::ref<java::lang::Object> get() { return call_method<"get", jni::ref<java::lang::Object>>(); }

protected:

	AbstractClassLoaderValue_Memoizer(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_LOADER_ABSTRACTCLASSLOADERVALUE_MEMOIZER
