// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Exception.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_ORG_OBJECTWEB_ASM_TREE_ANALYSIS_ANALYZEREXCEPTION_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_ORG_OBJECTWEB_ASM_TREE_ANALYSIS_ANALYZEREXCEPTION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::org::objectweb::asm_::tree::analysis { class AnalyzerException; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::org::objectweb::asm_::tree::analysis::AnalyzerException>
{
	static constexpr fixed_string class_name = "jdk/internal/org/objectweb/asm/tree/analysis/AnalyzerException";
	using base_classes = std::tuple<scapix::java_api::java::lang::Exception>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_ORG_OBJECTWEB_ASM_TREE_ANALYSIS_ANALYZEREXCEPTION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_ORG_OBJECTWEB_ASM_TREE_ANALYSIS_ANALYZEREXCEPTION)
#define SCAPIX_JAVA_API_JDK_INTERNAL_ORG_OBJECTWEB_ASM_TREE_ANALYSIS_ANALYZEREXCEPTION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/Throwable.h>
#include <scapix/java_api/jdk/internal/org/objectweb/asm/tree/AbstractInsnNode.h>
#include <scapix/java_api/jdk/internal/org/objectweb/asm/tree/analysis/Value.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::org::objectweb::asm_::tree::analysis::AnalyzerException : public jni::object_base<"jdk/internal/org/objectweb/asm/tree/analysis/AnalyzerException",
	java::lang::Exception>
{
public:

	jni::ref<jdk::internal::org::objectweb::asm_::tree::AbstractInsnNode> node() { return get_field<"node", jni::ref<jdk::internal::org::objectweb::asm_::tree::AbstractInsnNode>>(); }

	static jni::ref<jdk::internal::org::objectweb::asm_::tree::analysis::AnalyzerException> new_object(jni::ref<jdk::internal::org::objectweb::asm_::tree::AbstractInsnNode> insn, jni::ref<java::lang::String> message) { return base_::new_object(insn, message); }
	static jni::ref<jdk::internal::org::objectweb::asm_::tree::analysis::AnalyzerException> new_object(jni::ref<jdk::internal::org::objectweb::asm_::tree::AbstractInsnNode> insn, jni::ref<java::lang::String> message, jni::ref<java::lang::Throwable> cause) { return base_::new_object(insn, message, cause); }
	static jni::ref<jdk::internal::org::objectweb::asm_::tree::analysis::AnalyzerException> new_object(jni::ref<jdk::internal::org::objectweb::asm_::tree::AbstractInsnNode> insn, jni::ref<java::lang::String> message, jni::ref<java::lang::Object> expected, jni::ref<jdk::internal::org::objectweb::asm_::tree::analysis::Value> actual) { return base_::new_object(insn, message, expected, actual); }

protected:

	AnalyzerException(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_ORG_OBJECTWEB_ASM_TREE_ANALYSIS_ANALYZEREXCEPTION
