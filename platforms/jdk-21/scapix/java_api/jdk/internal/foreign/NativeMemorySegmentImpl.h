// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/jdk/internal/foreign/AbstractMemorySegmentImpl.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_NATIVEMEMORYSEGMENTIMPL_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_NATIVEMEMORYSEGMENTIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::foreign { class NativeMemorySegmentImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::foreign::NativeMemorySegmentImpl>
{
	static constexpr fixed_string class_name = "jdk/internal/foreign/NativeMemorySegmentImpl";
	using base_classes = std::tuple<scapix::java_api::jdk::internal::foreign::AbstractMemorySegmentImpl>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_NATIVEMEMORYSEGMENTIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_NATIVEMEMORYSEGMENTIMPL)
#define SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_NATIVEMEMORYSEGMENTIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/Runnable.h>
#include <scapix/java_api/java/lang/foreign/MemorySegment.h>
#include <scapix/java_api/java/util/Optional.h>
#include <scapix/java_api/jdk/internal/foreign/MemorySessionImpl.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::foreign::NativeMemorySegmentImpl : public jni::object_base<"jdk/internal/foreign/NativeMemorySegmentImpl",
	jdk::internal::foreign::AbstractMemorySegmentImpl>
{
public:

	static jni::ref<jdk::internal::foreign::NativeMemorySegmentImpl> new_object() { return base_::new_object(); }
	jlong address() { return call_method<"address", jlong>(); }
	jni::ref<java::util::Optional> heapBase() { return call_method<"heapBase", jni::ref<java::util::Optional>>(); }
	jboolean isNative() { return call_method<"isNative", jboolean>(); }
	jlong unsafeGetOffset() { return call_method<"unsafeGetOffset", jlong>(); }
	jni::ref<java::lang::Object> unsafeGetBase() { return call_method<"unsafeGetBase", jni::ref<java::lang::Object>>(); }
	jlong maxAlignMask() { return call_method<"maxAlignMask", jlong>(); }
	static jni::ref<java::lang::foreign::MemorySegment> makeNativeSegment(jlong byteSize, jlong p2, jni::ref<jdk::internal::foreign::MemorySessionImpl> byteAlignment) { return call_static_method<"makeNativeSegment", jni::ref<java::lang::foreign::MemorySegment>>(byteSize, p2, byteAlignment); }
	static jni::ref<java::lang::foreign::MemorySegment> makeNativeSegmentUnchecked(jlong min, jlong p2, jni::ref<jdk::internal::foreign::MemorySessionImpl> byteSize, jni::ref<java::lang::Runnable> p4) { return call_static_method<"makeNativeSegmentUnchecked", jni::ref<java::lang::foreign::MemorySegment>>(min, p2, byteSize, p4); }
	static jni::ref<java::lang::foreign::MemorySegment> makeNativeSegmentUnchecked(jlong min, jlong p2, jni::ref<jdk::internal::foreign::MemorySessionImpl> byteSize) { return call_static_method<"makeNativeSegmentUnchecked", jni::ref<java::lang::foreign::MemorySegment>>(min, p2, byteSize); }
	static jni::ref<java::lang::foreign::MemorySegment> makeNativeSegmentUnchecked(jlong min, jlong p2) { return call_static_method<"makeNativeSegmentUnchecked", jni::ref<java::lang::foreign::MemorySegment>>(min, p2); }

protected:

	NativeMemorySegmentImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_NATIVEMEMORYSEGMENTIMPL
