// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_LAYOUTPATH_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_LAYOUTPATH_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::foreign { class LayoutPath; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::foreign::LayoutPath>
{
	static constexpr fixed_string class_name = "jdk/internal/foreign/LayoutPath";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_LAYOUTPATH_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_LAYOUTPATH)
#define SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_LAYOUTPATH

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/foreign/MemoryLayout.h>
#include <scapix/java_api/java/lang/invoke/MethodHandle.h>
#include <scapix/java_api/java/lang/invoke/VarHandle.h>
#include <scapix/java_api/jdk/internal/foreign/LayoutPath_PathElementImpl.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::foreign::LayoutPath : public jni::object_base<"jdk/internal/foreign/LayoutPath",
	java::lang::Object>
{
public:

	using PathElementImpl = LayoutPath_PathElementImpl;

	jni::ref<jdk::internal::foreign::LayoutPath> sequenceElement() { return call_method<"sequenceElement", jni::ref<jdk::internal::foreign::LayoutPath>>(); }
	jni::ref<jdk::internal::foreign::LayoutPath> sequenceElement(jlong start, jlong p2) { return call_method<"sequenceElement", jni::ref<jdk::internal::foreign::LayoutPath>>(start, p2); }
	jni::ref<jdk::internal::foreign::LayoutPath> sequenceElement(jlong index) { return call_method<"sequenceElement", jni::ref<jdk::internal::foreign::LayoutPath>>(index); }
	jni::ref<jdk::internal::foreign::LayoutPath> groupElement(jni::ref<java::lang::String> name) { return call_method<"groupElement", jni::ref<jdk::internal::foreign::LayoutPath>>(name); }
	jni::ref<jdk::internal::foreign::LayoutPath> groupElement(jlong index) { return call_method<"groupElement", jni::ref<jdk::internal::foreign::LayoutPath>>(index); }
	jni::ref<jdk::internal::foreign::LayoutPath> derefElement() { return call_method<"derefElement", jni::ref<jdk::internal::foreign::LayoutPath>>(); }
	jlong offset() { return call_method<"offset", jlong>(); }
	jni::ref<java::lang::invoke::VarHandle> dereferenceHandle() { return call_method<"dereferenceHandle", jni::ref<java::lang::invoke::VarHandle>>(); }
	jni::ref<java::lang::invoke::VarHandle> dereferenceHandle(jboolean adapt) { return call_method<"dereferenceHandle", jni::ref<java::lang::invoke::VarHandle>>(adapt); }
	jni::ref<java::lang::invoke::MethodHandle> offsetHandle() { return call_method<"offsetHandle", jni::ref<java::lang::invoke::MethodHandle>>(); }
	jni::ref<java::lang::invoke::MethodHandle> sliceHandle() { return call_method<"sliceHandle", jni::ref<java::lang::invoke::MethodHandle>>(); }
	jni::ref<java::lang::foreign::MemoryLayout> layout() { return call_method<"layout", jni::ref<java::lang::foreign::MemoryLayout>>(); }
	static jni::ref<jdk::internal::foreign::LayoutPath> rootPath(jni::ref<java::lang::foreign::MemoryLayout> layout) { return call_static_method<"rootPath", jni::ref<jdk::internal::foreign::LayoutPath>>(layout); }

protected:

	LayoutPath(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_LAYOUTPATH
