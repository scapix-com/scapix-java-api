// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_LAYOUT_ABSTRACTLAYOUT_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_LAYOUT_ABSTRACTLAYOUT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::foreign::layout { class AbstractLayout; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::foreign::layout::AbstractLayout>
{
	static constexpr fixed_string class_name = "jdk/internal/foreign/layout/AbstractLayout";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_LAYOUT_ABSTRACTLAYOUT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_LAYOUT_ABSTRACTLAYOUT)
#define SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_LAYOUT_ABSTRACTLAYOUT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Optional.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::foreign::layout::AbstractLayout : public jni::object_base<"jdk/internal/foreign/layout/AbstractLayout",
	java::lang::Object>
{
public:

	jni::ref<jdk::internal::foreign::layout::AbstractLayout> withName(jni::ref<java::lang::String> name) { return call_method<"withName", jni::ref<jdk::internal::foreign::layout::AbstractLayout>>(name); }
	jni::ref<jdk::internal::foreign::layout::AbstractLayout> withoutName() { return call_method<"withoutName", jni::ref<jdk::internal::foreign::layout::AbstractLayout>>(); }
	jni::ref<java::util::Optional> name() { return call_method<"name", jni::ref<java::util::Optional>>(); }
	jni::ref<jdk::internal::foreign::layout::AbstractLayout> withByteAlignment(jlong byteAlignment) { return call_method<"withByteAlignment", jni::ref<jdk::internal::foreign::layout::AbstractLayout>>(byteAlignment); }
	jlong byteAlignment() { return call_method<"byteAlignment", jlong>(); }
	jlong byteSize() { return call_method<"byteSize", jlong>(); }
	jboolean hasNaturalAlignment() { return call_method<"hasNaturalAlignment", jboolean>(); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jboolean equals(jni::ref<java::lang::Object> other) { return call_method<"equals", jboolean>(other); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	AbstractLayout(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_LAYOUT_ABSTRACTLAYOUT
