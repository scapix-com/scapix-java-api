// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/jdk/internal/foreign/layout/AbstractLayout.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_LAYOUT_VALUELAYOUTS_ABSTRACTVALUELAYOUT_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_LAYOUT_VALUELAYOUTS_ABSTRACTVALUELAYOUT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::foreign::layout { class ValueLayouts_AbstractValueLayout; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::foreign::layout::ValueLayouts_AbstractValueLayout>
{
	static constexpr fixed_string class_name = "jdk/internal/foreign/layout/ValueLayouts$AbstractValueLayout";
	using base_classes = std::tuple<scapix::java_api::jdk::internal::foreign::layout::AbstractLayout>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_LAYOUT_VALUELAYOUTS_ABSTRACTVALUELAYOUT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_LAYOUT_VALUELAYOUTS_ABSTRACTVALUELAYOUT)
#define SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_LAYOUT_VALUELAYOUTS_ABSTRACTVALUELAYOUT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/invoke/VarHandle.h>
#include <scapix/java_api/java/nio/ByteOrder.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class jdk::internal::foreign::layout::ValueLayouts_AbstractValueLayout : public jni::object_base<"jdk/internal/foreign/layout/ValueLayouts$AbstractValueLayout",
	jdk::internal::foreign::layout::AbstractLayout>
{
public:

	jni::ref<java::nio::ByteOrder> order() { return call_method<"order", jni::ref<java::nio::ByteOrder>>(); }
	jni::ref<jdk::internal::foreign::layout::ValueLayouts_AbstractValueLayout> withOrder(jni::ref<java::nio::ByteOrder> order) { return call_method<"withOrder", jni::ref<jdk::internal::foreign::layout::ValueLayouts_AbstractValueLayout>>(order); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jboolean equals(jni::ref<java::lang::Object> other) { return call_method<"equals", jboolean>(other); }
	jni::ref<java::lang::invoke::VarHandle> arrayElementVarHandle(jni::ref<jni::array<jint>> shape) { return call_method<"arrayElementVarHandle", jni::ref<java::lang::invoke::VarHandle>>(shape); }
	jni::ref<java::lang::Class> carrier() { return call_method<"carrier", jni::ref<java::lang::Class>>(); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jni::ref<java::lang::invoke::VarHandle> accessHandle() { return call_method<"accessHandle", jni::ref<java::lang::invoke::VarHandle>>(); }

protected:

	ValueLayouts_AbstractValueLayout(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_LAYOUT_VALUELAYOUTS_ABSTRACTVALUELAYOUT
