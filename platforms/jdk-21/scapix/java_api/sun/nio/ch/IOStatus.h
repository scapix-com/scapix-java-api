// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_NIO_CH_IOSTATUS_FWD
#define SCAPIX_JAVA_API_SUN_NIO_CH_IOSTATUS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::nio::ch { class IOStatus; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::nio::ch::IOStatus>
{
	static constexpr fixed_string class_name = "sun/nio/ch/IOStatus";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NIO_CH_IOSTATUS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_NIO_CH_IOSTATUS)
#define SCAPIX_JAVA_API_SUN_NIO_CH_IOSTATUS

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::nio::ch::IOStatus : public jni::object_base<"sun/nio/ch/IOStatus",
	java::lang::Object>
{
public:

	static jint EOF() { return get_static_field<"EOF", jint>(); }
	static jint UNAVAILABLE() { return get_static_field<"UNAVAILABLE", jint>(); }
	static jint INTERRUPTED() { return get_static_field<"INTERRUPTED", jint>(); }
	static jint UNSUPPORTED() { return get_static_field<"UNSUPPORTED", jint>(); }
	static jint THROWN() { return get_static_field<"THROWN", jint>(); }
	static jint UNSUPPORTED_CASE() { return get_static_field<"UNSUPPORTED_CASE", jint>(); }

	static jint normalize(jint n) { return call_static_method<"normalize", jint>(n); }
	static jboolean check(jint n) { return call_static_method<"check", jboolean>(n); }
	static jlong normalize(jlong n) { return call_static_method<"normalize", jlong>(n); }
	static jboolean check(jlong n) { return call_static_method<"check", jboolean>(n); }
	static jboolean checkAll(jlong n) { return call_static_method<"checkAll", jboolean>(n); }

protected:

	IOStatus(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NIO_CH_IOSTATUS
