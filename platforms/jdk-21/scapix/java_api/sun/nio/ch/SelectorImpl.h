// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/nio/channels/spi/AbstractSelector.h>

#ifndef SCAPIX_JAVA_API_SUN_NIO_CH_SELECTORIMPL_FWD
#define SCAPIX_JAVA_API_SUN_NIO_CH_SELECTORIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::nio::ch { class SelectorImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::nio::ch::SelectorImpl>
{
	static constexpr fixed_string class_name = "sun/nio/ch/SelectorImpl";
	using base_classes = std::tuple<scapix::java_api::java::nio::channels::spi::AbstractSelector>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NIO_CH_SELECTORIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_NIO_CH_SELECTORIMPL)
#define SCAPIX_JAVA_API_SUN_NIO_CH_SELECTORIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/util/Set.h>
#include <scapix/java_api/java/util/function/Consumer.h>
#include <scapix/java_api/sun/nio/ch/SelectionKeyImpl.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::nio::ch::SelectorImpl : public jni::object_base<"sun/nio/ch/SelectorImpl",
	java::nio::channels::spi::AbstractSelector>
{
public:

	jni::ref<java::util::Set> keys() { return call_method<"keys", jni::ref<java::util::Set>>(); }
	jni::ref<java::util::Set> selectedKeys() { return call_method<"selectedKeys", jni::ref<java::util::Set>>(); }
	jint select(jlong timeout) { return call_method<"select", jint>(timeout); }
	jint select() { return call_method<"select", jint>(); }
	jint selectNow() { return call_method<"selectNow", jint>(); }
	jint select(jni::ref<java::util::function::Consumer> action, jlong timeout) { return call_method<"select", jint>(action, timeout); }
	jint select(jni::ref<java::util::function::Consumer> action) { return call_method<"select", jint>(action); }
	jint selectNow(jni::ref<java::util::function::Consumer> action) { return call_method<"selectNow", jint>(action); }
	void implCloseSelector() { return call_method<"implCloseSelector", void>(); }
	void cancel(jni::ref<sun::nio::ch::SelectionKeyImpl> ski) { return call_method<"cancel", void>(ski); }

protected:

	SelectorImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NIO_CH_SELECTORIMPL
