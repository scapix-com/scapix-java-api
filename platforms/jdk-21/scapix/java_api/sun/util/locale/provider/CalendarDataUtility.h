// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_UTIL_LOCALE_PROVIDER_CALENDARDATAUTILITY_FWD
#define SCAPIX_JAVA_API_SUN_UTIL_LOCALE_PROVIDER_CALENDARDATAUTILITY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::util::locale::provider { class CalendarDataUtility; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::util::locale::provider::CalendarDataUtility>
{
	static constexpr fixed_string class_name = "sun/util/locale/provider/CalendarDataUtility";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_UTIL_LOCALE_PROVIDER_CALENDARDATAUTILITY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_UTIL_LOCALE_PROVIDER_CALENDARDATAUTILITY)
#define SCAPIX_JAVA_API_SUN_UTIL_LOCALE_PROVIDER_CALENDARDATAUTILITY

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Locale.h>
#include <scapix/java_api/java/util/Map.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::util::locale::provider::CalendarDataUtility : public jni::object_base<"sun/util/locale/provider/CalendarDataUtility",
	java::lang::Object>
{
public:

	static jni::ref<java::lang::String> FIRST_DAY_OF_WEEK() { return get_static_field<"FIRST_DAY_OF_WEEK", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MINIMAL_DAYS_IN_FIRST_WEEK() { return get_static_field<"MINIMAL_DAYS_IN_FIRST_WEEK", jni::ref<java::lang::String>>(); }

	static jint retrieveFirstDayOfWeek(jni::ref<java::util::Locale> locale) { return call_static_method<"retrieveFirstDayOfWeek", jint>(locale); }
	static jint retrieveMinimalDaysInFirstWeek(jni::ref<java::util::Locale> locale) { return call_static_method<"retrieveMinimalDaysInFirstWeek", jint>(locale); }
	static jni::ref<java::lang::String> retrieveFieldValueName(jni::ref<java::lang::String> id, jint field, jint value, jint style, jni::ref<java::util::Locale> locale) { return call_static_method<"retrieveFieldValueName", jni::ref<java::lang::String>>(id, field, value, style, locale); }
	static jni::ref<java::lang::String> retrieveJavaTimeFieldValueName(jni::ref<java::lang::String> id, jint field, jint value, jint style, jni::ref<java::util::Locale> locale) { return call_static_method<"retrieveJavaTimeFieldValueName", jni::ref<java::lang::String>>(id, field, value, style, locale); }
	static jni::ref<java::util::Map> retrieveFieldValueNames(jni::ref<java::lang::String> id, jint field, jint style, jni::ref<java::util::Locale> locale) { return call_static_method<"retrieveFieldValueNames", jni::ref<java::util::Map>>(id, field, style, locale); }
	static jni::ref<java::util::Map> retrieveJavaTimeFieldValueNames(jni::ref<java::lang::String> id, jint field, jint style, jni::ref<java::util::Locale> locale) { return call_static_method<"retrieveJavaTimeFieldValueNames", jni::ref<java::util::Map>>(id, field, style, locale); }
	static jni::ref<java::util::Locale> findRegionOverride(jni::ref<java::util::Locale> l) { return call_static_method<"findRegionOverride", jni::ref<java::util::Locale>>(l); }

protected:

	CalendarDataUtility(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_UTIL_LOCALE_PROVIDER_CALENDARDATAUTILITY
