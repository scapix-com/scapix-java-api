// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_RSA_RSACORE_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_RSA_RSACORE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::rsa { class RSACore; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::rsa::RSACore>
{
	static constexpr fixed_string class_name = "sun/security/rsa/RSACore";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_RSA_RSACORE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_RSA_RSACORE)
#define SCAPIX_JAVA_API_SUN_SECURITY_RSA_RSACORE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/math/BigInteger.h>
#include <scapix/java_api/java/security/interfaces/RSAKey.h>
#include <scapix/java_api/java/security/interfaces/RSAPrivateKey.h>
#include <scapix/java_api/java/security/interfaces/RSAPublicKey.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::security::rsa::RSACore : public jni::object_base<"sun/security/rsa/RSACore",
	java::lang::Object>
{
public:

	static jint getByteLength(jni::ref<java::math::BigInteger> b) { return call_static_method<"getByteLength", jint>(b); }
	static jint getByteLength(jni::ref<java::security::interfaces::RSAKey> key) { return call_static_method<"getByteLength", jint>(key); }
	static jni::ref<jni::array<jbyte>> convert(jni::ref<jni::array<jbyte>> b, jint ofs, jint len) { return call_static_method<"convert", jni::ref<jni::array<jbyte>>>(b, ofs, len); }
	static jni::ref<jni::array<jbyte>> rsa(jni::ref<jni::array<jbyte>> msg, jni::ref<java::security::interfaces::RSAPublicKey> key) { return call_static_method<"rsa", jni::ref<jni::array<jbyte>>>(msg, key); }
	static jni::ref<jni::array<jbyte>> rsa(jni::ref<jni::array<jbyte>> msg, jni::ref<java::security::interfaces::RSAPrivateKey> key) { return call_static_method<"rsa", jni::ref<jni::array<jbyte>>>(msg, key); }
	static jni::ref<jni::array<jbyte>> rsa(jni::ref<jni::array<jbyte>> msg, jni::ref<java::security::interfaces::RSAPrivateKey> key, jboolean verify) { return call_static_method<"rsa", jni::ref<jni::array<jbyte>>>(msg, key, verify); }

protected:

	RSACore(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_RSA_RSACORE
