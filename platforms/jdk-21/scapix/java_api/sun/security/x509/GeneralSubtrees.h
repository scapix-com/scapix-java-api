// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/Cloneable.h>
#include <scapix/java_api/sun/security/util/DerEncoder.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_X509_GENERALSUBTREES_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_X509_GENERALSUBTREES_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::x509 { class GeneralSubtrees; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::x509::GeneralSubtrees>
{
	static constexpr fixed_string class_name = "sun/security/x509/GeneralSubtrees";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::lang::Cloneable, scapix::java_api::sun::security::util::DerEncoder>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_X509_GENERALSUBTREES_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_X509_GENERALSUBTREES)
#define SCAPIX_JAVA_API_SUN_SECURITY_X509_GENERALSUBTREES

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Iterator.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/sun/security/util/DerOutputStream.h>
#include <scapix/java_api/sun/security/util/DerValue.h>
#include <scapix/java_api/sun/security/x509/GeneralSubtree.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::security::x509::GeneralSubtrees : public jni::object_base<"sun/security/x509/GeneralSubtrees",
	java::lang::Object,
	java::lang::Cloneable,
	sun::security::util::DerEncoder>
{
public:

	static jni::ref<sun::security::x509::GeneralSubtrees> new_object() { return base_::new_object(); }
	static jni::ref<sun::security::x509::GeneralSubtrees> new_object(jni::ref<sun::security::util::DerValue> val) { return base_::new_object(val); }
	jni::ref<sun::security::x509::GeneralSubtree> get(jint index) { return call_method<"get", jni::ref<sun::security::x509::GeneralSubtree>>(index); }
	void remove(jint index) { return call_method<"remove", void>(index); }
	void add(jni::ref<sun::security::x509::GeneralSubtree> tree) { return call_method<"add", void>(tree); }
	jboolean contains(jni::ref<sun::security::x509::GeneralSubtree> tree) { return call_method<"contains", jboolean>(tree); }
	jint size() { return call_method<"size", jint>(); }
	jni::ref<java::util::Iterator> iterator() { return call_method<"iterator", jni::ref<java::util::Iterator>>(); }
	jni::ref<java::util::List> trees() { return call_method<"trees", jni::ref<java::util::List>>(); }
	jni::ref<java::lang::Object> clone() { return call_method<"clone", jni::ref<java::lang::Object>>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	void encode(jni::ref<sun::security::util::DerOutputStream> out) { return call_method<"encode", void>(out); }
	jboolean equals(jni::ref<java::lang::Object> obj) { return call_method<"equals", jboolean>(obj); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jni::ref<sun::security::x509::GeneralSubtrees> intersect(jni::ref<sun::security::x509::GeneralSubtrees> other) { return call_method<"intersect", jni::ref<sun::security::x509::GeneralSubtrees>>(other); }
	void union_(jni::ref<sun::security::x509::GeneralSubtrees> other) { return call_method<"union", void>(other); }
	void reduce(jni::ref<sun::security::x509::GeneralSubtrees> excluded) { return call_method<"reduce", void>(excluded); }

protected:

	GeneralSubtrees(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_X509_GENERALSUBTREES
