// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/sun/security/util/DerEncoder.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_X509_AVA_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_X509_AVA_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::x509 { class AVA; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::x509::AVA>
{
	static constexpr fixed_string class_name = "sun/security/x509/AVA";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::sun::security::util::DerEncoder>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_X509_AVA_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_X509_AVA)
#define SCAPIX_JAVA_API_SUN_SECURITY_X509_AVA

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Map.h>
#include <scapix/java_api/sun/security/util/DerOutputStream.h>
#include <scapix/java_api/sun/security/util/DerValue.h>
#include <scapix/java_api/sun/security/util/ObjectIdentifier.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::security::x509::AVA : public jni::object_base<"sun/security/x509/AVA",
	java::lang::Object,
	sun::security::util::DerEncoder>
{
public:

	static jni::ref<sun::security::x509::AVA> new_object(jni::ref<sun::security::util::ObjectIdentifier> type, jni::ref<sun::security::util::DerValue> val) { return base_::new_object(type, val); }
	jni::ref<sun::security::util::ObjectIdentifier> getObjectIdentifier() { return call_method<"getObjectIdentifier", jni::ref<sun::security::util::ObjectIdentifier>>(); }
	jni::ref<sun::security::util::DerValue> getDerValue() { return call_method<"getDerValue", jni::ref<sun::security::util::DerValue>>(); }
	jni::ref<java::lang::String> getValueString() { return call_method<"getValueString", jni::ref<java::lang::String>>(); }
	jboolean equals(jni::ref<java::lang::Object> obj) { return call_method<"equals", jboolean>(obj); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	void encode(jni::ref<sun::security::util::DerOutputStream> out) { return call_method<"encode", void>(out); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> toRFC1779String() { return call_method<"toRFC1779String", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> toRFC1779String(jni::ref<java::util::Map> oidMap) { return call_method<"toRFC1779String", jni::ref<java::lang::String>>(oidMap); }
	jni::ref<java::lang::String> toRFC2253String() { return call_method<"toRFC2253String", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> toRFC2253String(jni::ref<java::util::Map> oidMap) { return call_method<"toRFC2253String", jni::ref<java::lang::String>>(oidMap); }
	jni::ref<java::lang::String> toRFC2253CanonicalString() { return call_method<"toRFC2253CanonicalString", jni::ref<java::lang::String>>(); }

protected:

	AVA(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_X509_AVA
