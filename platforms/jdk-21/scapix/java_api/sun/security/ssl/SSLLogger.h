// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_SSL_SSLLOGGER_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_SSL_SSLLOGGER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::ssl { class SSLLogger; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::ssl::SSLLogger>
{
	static constexpr fixed_string class_name = "sun/security/ssl/SSLLogger";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_SSL_SSLLOGGER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_SSL_SSLLOGGER)
#define SCAPIX_JAVA_API_SUN_SECURITY_SSL_SSLLOGGER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::security::ssl::SSLLogger : public jni::object_base<"sun/security/ssl/SSLLogger",
	java::lang::Object>
{
public:

	static jboolean isOn() { return get_static_field<"isOn", jboolean>(); }

	static jni::ref<sun::security::ssl::SSLLogger> new_object() { return base_::new_object(); }
	static jboolean isOn(jni::ref<java::lang::String> checkPoints) { return call_static_method<"isOn", jboolean>(checkPoints); }
	static void severe(jni::ref<java::lang::String> msg, jni::ref<jni::array<java::lang::Object>> params) { return call_static_method<"severe", void>(msg, params); }
	static void warning(jni::ref<java::lang::String> msg, jni::ref<jni::array<java::lang::Object>> params) { return call_static_method<"warning", void>(msg, params); }
	static void info(jni::ref<java::lang::String> msg, jni::ref<jni::array<java::lang::Object>> params) { return call_static_method<"info", void>(msg, params); }
	static void fine(jni::ref<java::lang::String> msg, jni::ref<jni::array<java::lang::Object>> params) { return call_static_method<"fine", void>(msg, params); }
	static void finer(jni::ref<java::lang::String> msg, jni::ref<jni::array<java::lang::Object>> params) { return call_static_method<"finer", void>(msg, params); }
	static void finest(jni::ref<java::lang::String> msg, jni::ref<jni::array<java::lang::Object>> params) { return call_static_method<"finest", void>(msg, params); }
	static jboolean logWarning(jni::ref<java::lang::String> option, jni::ref<java::lang::String> s) { return call_static_method<"logWarning", jboolean>(option, s); }

protected:

	SSLLogger(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_SSL_SSLLOGGER
