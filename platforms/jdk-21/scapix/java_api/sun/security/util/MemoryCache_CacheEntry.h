// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_UTIL_MEMORYCACHE_CACHEENTRY_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_UTIL_MEMORYCACHE_CACHEENTRY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::util { class MemoryCache_CacheEntry; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::util::MemoryCache_CacheEntry>
{
	static constexpr fixed_string class_name = "sun/security/util/MemoryCache$CacheEntry";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_UTIL_MEMORYCACHE_CACHEENTRY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_UTIL_MEMORYCACHE_CACHEENTRY)
#define SCAPIX_JAVA_API_SUN_SECURITY_UTIL_MEMORYCACHE_CACHEENTRY

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::security::util::MemoryCache_CacheEntry : public jni::object_base<"sun/security/util/MemoryCache$CacheEntry",
	java::lang::Object>
{
public:

	jboolean isValid(jlong p1) { return call_method<"isValid", jboolean>(p1); }
	void invalidate() { return call_method<"invalidate", void>(); }
	jni::ref<java::lang::Object> getKey() { return call_method<"getKey", jni::ref<java::lang::Object>>(); }
	jni::ref<java::lang::Object> getValue() { return call_method<"getValue", jni::ref<java::lang::Object>>(); }
	jlong getExpirationTime() { return call_method<"getExpirationTime", jlong>(); }

protected:

	MemoryCache_CacheEntry(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_UTIL_MEMORYCACHE_CACHEENTRY
