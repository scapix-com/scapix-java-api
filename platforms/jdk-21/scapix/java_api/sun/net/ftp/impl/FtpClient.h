// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/sun/net/ftp/FtpClient.h>

#ifndef SCAPIX_JAVA_API_SUN_NET_FTP_IMPL_FTPCLIENT_FWD
#define SCAPIX_JAVA_API_SUN_NET_FTP_IMPL_FTPCLIENT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::net::ftp::impl { class FtpClient; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::net::ftp::impl::FtpClient>
{
	static constexpr fixed_string class_name = "sun/net/ftp/impl/FtpClient";
	using base_classes = std::tuple<scapix::java_api::sun::net::ftp::FtpClient>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NET_FTP_IMPL_FTPCLIENT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_NET_FTP_IMPL_FTPCLIENT)
#define SCAPIX_JAVA_API_SUN_NET_FTP_IMPL_FTPCLIENT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/io/OutputStream.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/net/Proxy.h>
#include <scapix/java_api/java/net/SocketAddress.h>
#include <scapix/java_api/java/util/Date.h>
#include <scapix/java_api/java/util/Iterator.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/sun/net/ftp/FtpClient_TransferType.h>
#include <scapix/java_api/sun/net/ftp/FtpDirParser.h>
#include <scapix/java_api/sun/net/ftp/FtpReplyCode.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::net::ftp::impl::FtpClient : public jni::object_base<"sun/net/ftp/impl/FtpClient",
	sun::net::ftp::FtpClient>
{
public:

	static jni::ref<sun::net::ftp::FtpClient> create() { return call_static_method<"create", jni::ref<sun::net::ftp::FtpClient>>(); }
	jni::ref<sun::net::ftp::FtpClient> enablePassiveMode(jboolean passive) { return call_method<"enablePassiveMode", jni::ref<sun::net::ftp::FtpClient>>(passive); }
	jboolean isPassiveModeEnabled() { return call_method<"isPassiveModeEnabled", jboolean>(); }
	jni::ref<sun::net::ftp::FtpClient> setConnectTimeout(jint timeout) { return call_method<"setConnectTimeout", jni::ref<sun::net::ftp::FtpClient>>(timeout); }
	jint getConnectTimeout() { return call_method<"getConnectTimeout", jint>(); }
	jni::ref<sun::net::ftp::FtpClient> setReadTimeout(jint timeout) { return call_method<"setReadTimeout", jni::ref<sun::net::ftp::FtpClient>>(timeout); }
	jint getReadTimeout() { return call_method<"getReadTimeout", jint>(); }
	jni::ref<sun::net::ftp::FtpClient> setProxy(jni::ref<java::net::Proxy> p) { return call_method<"setProxy", jni::ref<sun::net::ftp::FtpClient>>(p); }
	jni::ref<java::net::Proxy> getProxy() { return call_method<"getProxy", jni::ref<java::net::Proxy>>(); }
	jboolean isConnected() { return call_method<"isConnected", jboolean>(); }
	jni::ref<java::net::SocketAddress> getServerAddress() { return call_method<"getServerAddress", jni::ref<java::net::SocketAddress>>(); }
	jni::ref<sun::net::ftp::FtpClient> connect(jni::ref<java::net::SocketAddress> dest) { return call_method<"connect", jni::ref<sun::net::ftp::FtpClient>>(dest); }
	jni::ref<sun::net::ftp::FtpClient> connect(jni::ref<java::net::SocketAddress> dest, jint timeout) { return call_method<"connect", jni::ref<sun::net::ftp::FtpClient>>(dest, timeout); }
	jni::ref<sun::net::ftp::FtpClient> login(jni::ref<java::lang::String> user, jni::ref<jni::array<jchar>> password) { return call_method<"login", jni::ref<sun::net::ftp::FtpClient>>(user, password); }
	jni::ref<sun::net::ftp::FtpClient> login(jni::ref<java::lang::String> user, jni::ref<jni::array<jchar>> password, jni::ref<java::lang::String> account) { return call_method<"login", jni::ref<sun::net::ftp::FtpClient>>(user, password, account); }
	void close() { return call_method<"close", void>(); }
	jboolean isLoggedIn() { return call_method<"isLoggedIn", jboolean>(); }
	jni::ref<sun::net::ftp::FtpClient> changeDirectory(jni::ref<java::lang::String> remoteDirectory) { return call_method<"changeDirectory", jni::ref<sun::net::ftp::FtpClient>>(remoteDirectory); }
	jni::ref<sun::net::ftp::FtpClient> changeToParentDirectory() { return call_method<"changeToParentDirectory", jni::ref<sun::net::ftp::FtpClient>>(); }
	jni::ref<java::lang::String> getWorkingDirectory() { return call_method<"getWorkingDirectory", jni::ref<java::lang::String>>(); }
	jni::ref<sun::net::ftp::FtpClient> setRestartOffset(jlong offset) { return call_method<"setRestartOffset", jni::ref<sun::net::ftp::FtpClient>>(offset); }
	jni::ref<sun::net::ftp::FtpClient> getFile(jni::ref<java::lang::String> name, jni::ref<java::io::OutputStream> local) { return call_method<"getFile", jni::ref<sun::net::ftp::FtpClient>>(name, local); }
	jni::ref<java::io::InputStream> getFileStream(jni::ref<java::lang::String> name) { return call_method<"getFileStream", jni::ref<java::io::InputStream>>(name); }
	jni::ref<java::io::OutputStream> putFileStream(jni::ref<java::lang::String> name, jboolean unique) { return call_method<"putFileStream", jni::ref<java::io::OutputStream>>(name, unique); }
	jni::ref<sun::net::ftp::FtpClient> putFile(jni::ref<java::lang::String> name, jni::ref<java::io::InputStream> local, jboolean unique) { return call_method<"putFile", jni::ref<sun::net::ftp::FtpClient>>(name, local, unique); }
	jni::ref<sun::net::ftp::FtpClient> appendFile(jni::ref<java::lang::String> name, jni::ref<java::io::InputStream> local) { return call_method<"appendFile", jni::ref<sun::net::ftp::FtpClient>>(name, local); }
	jni::ref<sun::net::ftp::FtpClient> rename(jni::ref<java::lang::String> from, jni::ref<java::lang::String> to) { return call_method<"rename", jni::ref<sun::net::ftp::FtpClient>>(from, to); }
	jni::ref<sun::net::ftp::FtpClient> deleteFile(jni::ref<java::lang::String> name) { return call_method<"deleteFile", jni::ref<sun::net::ftp::FtpClient>>(name); }
	jni::ref<sun::net::ftp::FtpClient> makeDirectory(jni::ref<java::lang::String> name) { return call_method<"makeDirectory", jni::ref<sun::net::ftp::FtpClient>>(name); }
	jni::ref<sun::net::ftp::FtpClient> removeDirectory(jni::ref<java::lang::String> name) { return call_method<"removeDirectory", jni::ref<sun::net::ftp::FtpClient>>(name); }
	jni::ref<sun::net::ftp::FtpClient> noop() { return call_method<"noop", jni::ref<sun::net::ftp::FtpClient>>(); }
	jni::ref<java::lang::String> getStatus(jni::ref<java::lang::String> name) { return call_method<"getStatus", jni::ref<java::lang::String>>(name); }
	jni::ref<java::util::List> getFeatures() { return call_method<"getFeatures", jni::ref<java::util::List>>(); }
	jni::ref<sun::net::ftp::FtpClient> abort() { return call_method<"abort", jni::ref<sun::net::ftp::FtpClient>>(); }
	jni::ref<sun::net::ftp::FtpClient> completePending() { return call_method<"completePending", jni::ref<sun::net::ftp::FtpClient>>(); }
	jni::ref<sun::net::ftp::FtpClient> reInit() { return call_method<"reInit", jni::ref<sun::net::ftp::FtpClient>>(); }
	jni::ref<sun::net::ftp::FtpClient> setType(jni::ref<sun::net::ftp::FtpClient_TransferType> type) { return call_method<"setType", jni::ref<sun::net::ftp::FtpClient>>(type); }
	jni::ref<java::io::InputStream> list(jni::ref<java::lang::String> path) { return call_method<"list", jni::ref<java::io::InputStream>>(path); }
	jni::ref<java::io::InputStream> nameList(jni::ref<java::lang::String> path) { return call_method<"nameList", jni::ref<java::io::InputStream>>(path); }
	jlong getSize(jni::ref<java::lang::String> path) { return call_method<"getSize", jlong>(path); }
	jni::ref<java::util::Date> getLastModified(jni::ref<java::lang::String> path) { return call_method<"getLastModified", jni::ref<java::util::Date>>(path); }
	jni::ref<sun::net::ftp::FtpClient> setDirParser(jni::ref<sun::net::ftp::FtpDirParser> p) { return call_method<"setDirParser", jni::ref<sun::net::ftp::FtpClient>>(p); }
	jni::ref<java::util::Iterator> listFiles(jni::ref<java::lang::String> path) { return call_method<"listFiles", jni::ref<java::util::Iterator>>(path); }
	jni::ref<sun::net::ftp::FtpClient> useKerberos() { return call_method<"useKerberos", jni::ref<sun::net::ftp::FtpClient>>(); }
	jni::ref<java::lang::String> getWelcomeMsg() { return call_method<"getWelcomeMsg", jni::ref<java::lang::String>>(); }
	jni::ref<sun::net::ftp::FtpReplyCode> getLastReplyCode() { return call_method<"getLastReplyCode", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	jni::ref<java::lang::String> getLastResponseString() { return call_method<"getLastResponseString", jni::ref<java::lang::String>>(); }
	jlong getLastTransferSize() { return call_method<"getLastTransferSize", jlong>(); }
	jni::ref<java::lang::String> getLastFileName() { return call_method<"getLastFileName", jni::ref<java::lang::String>>(); }
	jni::ref<sun::net::ftp::FtpClient> startSecureSession() { return call_method<"startSecureSession", jni::ref<sun::net::ftp::FtpClient>>(); }
	jni::ref<sun::net::ftp::FtpClient> endSecureSession() { return call_method<"endSecureSession", jni::ref<sun::net::ftp::FtpClient>>(); }
	jni::ref<sun::net::ftp::FtpClient> allocate(jlong size) { return call_method<"allocate", jni::ref<sun::net::ftp::FtpClient>>(size); }
	jni::ref<sun::net::ftp::FtpClient> structureMount(jni::ref<java::lang::String> struct_) { return call_method<"structureMount", jni::ref<sun::net::ftp::FtpClient>>(struct_); }
	jni::ref<java::lang::String> getSystem() { return call_method<"getSystem", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getHelp(jni::ref<java::lang::String> cmd) { return call_method<"getHelp", jni::ref<java::lang::String>>(cmd); }
	jni::ref<sun::net::ftp::FtpClient> siteCmd(jni::ref<java::lang::String> cmd) { return call_method<"siteCmd", jni::ref<sun::net::ftp::FtpClient>>(cmd); }

protected:

	FtpClient(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NET_FTP_IMPL_FTPCLIENT
