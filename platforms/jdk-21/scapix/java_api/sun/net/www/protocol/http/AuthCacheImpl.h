// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/sun/net/www/protocol/http/AuthCache.h>

#ifndef SCAPIX_JAVA_API_SUN_NET_WWW_PROTOCOL_HTTP_AUTHCACHEIMPL_FWD
#define SCAPIX_JAVA_API_SUN_NET_WWW_PROTOCOL_HTTP_AUTHCACHEIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::net::www::protocol::http { class AuthCacheImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::net::www::protocol::http::AuthCacheImpl>
{
	static constexpr fixed_string class_name = "sun/net/www/protocol/http/AuthCacheImpl";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::sun::net::www::protocol::http::AuthCache>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NET_WWW_PROTOCOL_HTTP_AUTHCACHEIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_NET_WWW_PROTOCOL_HTTP_AUTHCACHEIMPL)
#define SCAPIX_JAVA_API_SUN_NET_WWW_PROTOCOL_HTTP_AUTHCACHEIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/net/Authenticator.h>
#include <scapix/java_api/java/util/HashMap.h>
#include <scapix/java_api/sun/net/www/protocol/http/AuthCacheValue.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::net::www::protocol::http::AuthCacheImpl : public jni::object_base<"sun/net/www/protocol/http/AuthCacheImpl",
	java::lang::Object,
	sun::net::www::protocol::http::AuthCache>
{
public:

	static jni::ref<sun::net::www::protocol::http::AuthCacheImpl> new_object() { return base_::new_object(); }
	void setMap(jni::ref<java::util::HashMap> map) { return call_method<"setMap", void>(map); }
	void put(jni::ref<java::lang::String> pkey, jni::ref<sun::net::www::protocol::http::AuthCacheValue> value) { return call_method<"put", void>(pkey, value); }
	jni::ref<sun::net::www::protocol::http::AuthCacheValue> get(jni::ref<java::lang::String> pkey, jni::ref<java::lang::String> skey) { return call_method<"get", jni::ref<sun::net::www::protocol::http::AuthCacheValue>>(pkey, skey); }
	void remove(jni::ref<java::lang::String> pkey, jni::ref<sun::net::www::protocol::http::AuthCacheValue> entry) { return call_method<"remove", void>(pkey, entry); }
	static jni::ref<sun::net::www::protocol::http::AuthCacheImpl> getDefault() { return call_static_method<"getDefault", jni::ref<sun::net::www::protocol::http::AuthCacheImpl>>(); }
	static jni::ref<sun::net::www::protocol::http::AuthCacheImpl> getAuthCacheFor(jni::ref<java::net::Authenticator> auth) { return call_static_method<"getAuthCacheFor", jni::ref<sun::net::www::protocol::http::AuthCacheImpl>>(auth); }

protected:

	AuthCacheImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NET_WWW_PROTOCOL_HTTP_AUTHCACHEIMPL
