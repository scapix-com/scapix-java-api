// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/sun/reflect/generics/tree/TypeTree.h>

#ifndef SCAPIX_JAVA_API_SUN_REFLECT_GENERICS_TREE_FORMALTYPEPARAMETER_FWD
#define SCAPIX_JAVA_API_SUN_REFLECT_GENERICS_TREE_FORMALTYPEPARAMETER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::reflect::generics::tree { class FormalTypeParameter; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::reflect::generics::tree::FormalTypeParameter>
{
	static constexpr fixed_string class_name = "sun/reflect/generics/tree/FormalTypeParameter";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::sun::reflect::generics::tree::TypeTree>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_REFLECT_GENERICS_TREE_FORMALTYPEPARAMETER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_REFLECT_GENERICS_TREE_FORMALTYPEPARAMETER)
#define SCAPIX_JAVA_API_SUN_REFLECT_GENERICS_TREE_FORMALTYPEPARAMETER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/sun/reflect/generics/tree/FieldTypeSignature.h>
#include <scapix/java_api/sun/reflect/generics/visitor/TypeTreeVisitor.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::reflect::generics::tree::FormalTypeParameter : public jni::object_base<"sun/reflect/generics/tree/FormalTypeParameter",
	java::lang::Object,
	sun::reflect::generics::tree::TypeTree>
{
public:

	static jni::ref<sun::reflect::generics::tree::FormalTypeParameter> make(jni::ref<java::lang::String> n, jni::ref<jni::array<sun::reflect::generics::tree::FieldTypeSignature>> bs) { return call_static_method<"make", jni::ref<sun::reflect::generics::tree::FormalTypeParameter>>(n, bs); }
	jni::ref<jni::array<sun::reflect::generics::tree::FieldTypeSignature>> getBounds() { return call_method<"getBounds", jni::ref<jni::array<sun::reflect::generics::tree::FieldTypeSignature>>>(); }
	jni::ref<java::lang::String> getName() { return call_method<"getName", jni::ref<java::lang::String>>(); }
	void accept(jni::ref<sun::reflect::generics::visitor::TypeTreeVisitor> v) { return call_method<"accept", void>(v); }

protected:

	FormalTypeParameter(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_REFLECT_GENERICS_TREE_FORMALTYPEPARAMETER
