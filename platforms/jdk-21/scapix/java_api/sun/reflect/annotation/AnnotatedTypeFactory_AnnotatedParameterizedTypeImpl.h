// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/sun/reflect/annotation/AnnotatedTypeFactory_AnnotatedTypeBaseImpl.h>
#include <scapix/java_api/java/lang/reflect/AnnotatedParameterizedType.h>

#ifndef SCAPIX_JAVA_API_SUN_REFLECT_ANNOTATION_ANNOTATEDTYPEFACTORY_ANNOTATEDPARAMETERIZEDTYPEIMPL_FWD
#define SCAPIX_JAVA_API_SUN_REFLECT_ANNOTATION_ANNOTATEDTYPEFACTORY_ANNOTATEDPARAMETERIZEDTYPEIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::reflect::annotation { class AnnotatedTypeFactory_AnnotatedParameterizedTypeImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::reflect::annotation::AnnotatedTypeFactory_AnnotatedParameterizedTypeImpl>
{
	static constexpr fixed_string class_name = "sun/reflect/annotation/AnnotatedTypeFactory$AnnotatedParameterizedTypeImpl";
	using base_classes = std::tuple<scapix::java_api::sun::reflect::annotation::AnnotatedTypeFactory_AnnotatedTypeBaseImpl, scapix::java_api::java::lang::reflect::AnnotatedParameterizedType>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_REFLECT_ANNOTATION_ANNOTATEDTYPEFACTORY_ANNOTATEDPARAMETERIZEDTYPEIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_REFLECT_ANNOTATION_ANNOTATEDTYPEFACTORY_ANNOTATEDPARAMETERIZEDTYPEIMPL)
#define SCAPIX_JAVA_API_SUN_REFLECT_ANNOTATION_ANNOTATEDTYPEFACTORY_ANNOTATEDPARAMETERIZEDTYPEIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/reflect/AnnotatedType.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::reflect::annotation::AnnotatedTypeFactory_AnnotatedParameterizedTypeImpl : public jni::object_base<"sun/reflect/annotation/AnnotatedTypeFactory$AnnotatedParameterizedTypeImpl",
	sun::reflect::annotation::AnnotatedTypeFactory_AnnotatedTypeBaseImpl,
	java::lang::reflect::AnnotatedParameterizedType>
{
public:

	jni::ref<jni::array<java::lang::reflect::AnnotatedType>> getAnnotatedActualTypeArguments() { return call_method<"getAnnotatedActualTypeArguments", jni::ref<jni::array<java::lang::reflect::AnnotatedType>>>(); }
	jni::ref<java::lang::reflect::AnnotatedType> getAnnotatedOwnerType() { return call_method<"getAnnotatedOwnerType", jni::ref<java::lang::reflect::AnnotatedType>>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jboolean equals(jni::ref<java::lang::Object> o) { return call_method<"equals", jboolean>(o); }
	jint hashCode() { return call_method<"hashCode", jint>(); }

protected:

	AnnotatedTypeFactory_AnnotatedParameterizedTypeImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_REFLECT_ANNOTATION_ANNOTATEDTYPEFACTORY_ANNOTATEDPARAMETERIZEDTYPEIMPL
