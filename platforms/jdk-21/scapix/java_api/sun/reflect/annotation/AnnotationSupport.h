// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_REFLECT_ANNOTATION_ANNOTATIONSUPPORT_FWD
#define SCAPIX_JAVA_API_SUN_REFLECT_ANNOTATION_ANNOTATIONSUPPORT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::reflect::annotation { class AnnotationSupport; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::reflect::annotation::AnnotationSupport>
{
	static constexpr fixed_string class_name = "sun/reflect/annotation/AnnotationSupport";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_REFLECT_ANNOTATION_ANNOTATIONSUPPORT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_REFLECT_ANNOTATION_ANNOTATIONSUPPORT)
#define SCAPIX_JAVA_API_SUN_REFLECT_ANNOTATION_ANNOTATIONSUPPORT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/annotation/Annotation.h>
#include <scapix/java_api/java/util/Map.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::reflect::annotation::AnnotationSupport : public jni::object_base<"sun/reflect/annotation/AnnotationSupport",
	java::lang::Object>
{
public:

	static jni::ref<sun::reflect::annotation::AnnotationSupport> new_object() { return base_::new_object(); }
	static jni::ref<jni::array<java::lang::annotation::Annotation>> getDirectlyAndIndirectlyPresent(jni::ref<java::util::Map> annotations, jni::ref<java::lang::Class> annoClass) { return call_static_method<"getDirectlyAndIndirectlyPresent", jni::ref<jni::array<java::lang::annotation::Annotation>>>(annotations, annoClass); }
	static jni::ref<jni::array<java::lang::annotation::Annotation>> getAssociatedAnnotations(jni::ref<java::util::Map> declaredAnnotations, jni::ref<java::lang::Class> decl, jni::ref<java::lang::Class> annoClass) { return call_static_method<"getAssociatedAnnotations", jni::ref<jni::array<java::lang::annotation::Annotation>>>(declaredAnnotations, decl, annoClass); }
	static jni::ref<java::util::Map> memberValues(jni::ref<java::lang::annotation::Annotation> a) { return call_static_method<"memberValues", jni::ref<java::util::Map>>(a); }

protected:

	AnnotationSupport(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_REFLECT_ANNOTATION_ANNOTATIONSUPPORT
