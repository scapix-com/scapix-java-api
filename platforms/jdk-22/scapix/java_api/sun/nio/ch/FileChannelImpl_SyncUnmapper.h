// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/sun/nio/ch/FileChannelImpl_Unmapper.h>

#ifndef SCAPIX_JAVA_API_SUN_NIO_CH_FILECHANNELIMPL_SYNCUNMAPPER_FWD
#define SCAPIX_JAVA_API_SUN_NIO_CH_FILECHANNELIMPL_SYNCUNMAPPER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::nio::ch { class FileChannelImpl_SyncUnmapper; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::nio::ch::FileChannelImpl_SyncUnmapper>
{
	static constexpr fixed_string class_name = "sun/nio/ch/FileChannelImpl$SyncUnmapper";
	using base_classes = std::tuple<scapix::java_api::sun::nio::ch::FileChannelImpl_Unmapper>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NIO_CH_FILECHANNELIMPL_SYNCUNMAPPER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_NIO_CH_FILECHANNELIMPL_SYNCUNMAPPER)
#define SCAPIX_JAVA_API_SUN_NIO_CH_FILECHANNELIMPL_SYNCUNMAPPER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/FileDescriptor.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::nio::ch::FileChannelImpl_SyncUnmapper : public jni::object_base<"sun/nio/ch/FileChannelImpl$SyncUnmapper",
	sun::nio::ch::FileChannelImpl_Unmapper>
{
public:

	static jni::ref<sun::nio::ch::FileChannelImpl_SyncUnmapper> new_object(jlong address, jlong p2, jlong size, jni::ref<java::io::FileDescriptor> p4, jint cap) { return base_::new_object(address, p2, size, p4, cap); }
	jboolean isSync() { return call_method<"isSync", jboolean>(); }

protected:

	FileChannelImpl_SyncUnmapper(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NIO_CH_FILECHANNELIMPL_SYNCUNMAPPER
