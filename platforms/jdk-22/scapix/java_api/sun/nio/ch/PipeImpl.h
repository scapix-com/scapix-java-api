// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/nio/channels/Pipe.h>

#ifndef SCAPIX_JAVA_API_SUN_NIO_CH_PIPEIMPL_FWD
#define SCAPIX_JAVA_API_SUN_NIO_CH_PIPEIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::nio::ch { class PipeImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::nio::ch::PipeImpl>
{
	static constexpr fixed_string class_name = "sun/nio/ch/PipeImpl";
	using base_classes = std::tuple<scapix::java_api::java::nio::channels::Pipe>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NIO_CH_PIPEIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_NIO_CH_PIPEIMPL)
#define SCAPIX_JAVA_API_SUN_NIO_CH_PIPEIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/sun/nio/ch/SinkChannelImpl.h>
#include <scapix/java_api/sun/nio/ch/SourceChannelImpl.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::nio::ch::PipeImpl : public jni::object_base<"sun/nio/ch/PipeImpl",
	java::nio::channels::Pipe>
{
public:

	jni::ref<sun::nio::ch::SourceChannelImpl> source() { return call_method<"source", jni::ref<sun::nio::ch::SourceChannelImpl>>(); }
	jni::ref<sun::nio::ch::SinkChannelImpl> sink() { return call_method<"sink", jni::ref<sun::nio::ch::SinkChannelImpl>>(); }

protected:

	PipeImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NIO_CH_PIPEIMPL
