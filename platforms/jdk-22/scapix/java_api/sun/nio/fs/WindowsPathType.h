// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Enum.h>

#ifndef SCAPIX_JAVA_API_SUN_NIO_FS_WINDOWSPATHTYPE_FWD
#define SCAPIX_JAVA_API_SUN_NIO_FS_WINDOWSPATHTYPE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::nio::fs { class WindowsPathType; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::nio::fs::WindowsPathType>
{
	static constexpr fixed_string class_name = "sun/nio/fs/WindowsPathType";
	using base_classes = std::tuple<scapix::java_api::java::lang::Enum>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NIO_FS_WINDOWSPATHTYPE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_NIO_FS_WINDOWSPATHTYPE)
#define SCAPIX_JAVA_API_SUN_NIO_FS_WINDOWSPATHTYPE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::nio::fs::WindowsPathType : public jni::object_base<"sun/nio/fs/WindowsPathType",
	java::lang::Enum>
{
public:

	static jni::ref<sun::nio::fs::WindowsPathType> ABSOLUTE() { return get_static_field<"ABSOLUTE", jni::ref<sun::nio::fs::WindowsPathType>>(); }
	static jni::ref<sun::nio::fs::WindowsPathType> UNC() { return get_static_field<"UNC", jni::ref<sun::nio::fs::WindowsPathType>>(); }
	static jni::ref<sun::nio::fs::WindowsPathType> RELATIVE() { return get_static_field<"RELATIVE", jni::ref<sun::nio::fs::WindowsPathType>>(); }
	static jni::ref<sun::nio::fs::WindowsPathType> DIRECTORY_RELATIVE() { return get_static_field<"DIRECTORY_RELATIVE", jni::ref<sun::nio::fs::WindowsPathType>>(); }
	static jni::ref<sun::nio::fs::WindowsPathType> DRIVE_RELATIVE() { return get_static_field<"DRIVE_RELATIVE", jni::ref<sun::nio::fs::WindowsPathType>>(); }

	static jni::ref<jni::array<sun::nio::fs::WindowsPathType>> values() { return call_static_method<"values", jni::ref<jni::array<sun::nio::fs::WindowsPathType>>>(); }
	static jni::ref<sun::nio::fs::WindowsPathType> valueOf(jni::ref<java::lang::String> name) { return call_static_method<"valueOf", jni::ref<sun::nio::fs::WindowsPathType>>(name); }

protected:

	WindowsPathType(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NIO_FS_WINDOWSPATHTYPE
