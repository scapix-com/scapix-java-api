// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/sun/nio/cs/DoubleByte_Decoder.h>

#ifndef SCAPIX_JAVA_API_SUN_NIO_CS_HKSCS_DECODER_FWD
#define SCAPIX_JAVA_API_SUN_NIO_CS_HKSCS_DECODER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::nio::cs { class HKSCS_Decoder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::nio::cs::HKSCS_Decoder>
{
	static constexpr fixed_string class_name = "sun/nio/cs/HKSCS$Decoder";
	using base_classes = std::tuple<scapix::java_api::sun::nio::cs::DoubleByte_Decoder>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NIO_CS_HKSCS_DECODER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_NIO_CS_HKSCS_DECODER)
#define SCAPIX_JAVA_API_SUN_NIO_CS_HKSCS_DECODER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/nio/ByteBuffer.h>
#include <scapix/java_api/java/nio/CharBuffer.h>
#include <scapix/java_api/java/nio/charset/CoderResult.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::nio::cs::HKSCS_Decoder : public jni::object_base<"sun/nio/cs/HKSCS$Decoder",
	sun::nio::cs::DoubleByte_Decoder>
{
public:

	jchar decodeSingle(jint b) { return call_method<"decodeSingle", jchar>(b); }
	jchar decodeBig5(jint b1, jint b2) { return call_method<"decodeBig5", jchar>(b1, b2); }
	jchar decodeDouble(jint b1, jint b2) { return call_method<"decodeDouble", jchar>(b1, b2); }
	jchar decodeDoubleEx(jint b1, jint b2) { return call_method<"decodeDoubleEx", jchar>(b1, b2); }
	jint decode(jni::ref<jni::array<jbyte>> src, jint sp, jint len, jni::ref<jni::array<jchar>> dst) { return call_method<"decode", jint>(src, sp, len, dst); }
	jni::ref<java::nio::charset::CoderResult> decodeLoop(jni::ref<java::nio::ByteBuffer> src, jni::ref<java::nio::CharBuffer> dst) { return call_method<"decodeLoop", jni::ref<java::nio::charset::CoderResult>>(src, dst); }
	static void initb2c(jni::ref<jni::array<jni::array<jchar>>> b2c, jni::ref<jni::array<java::lang::String>> b2cStr) { return call_static_method<"initb2c", void>(b2c, b2cStr); }

protected:

	HKSCS_Decoder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NIO_CS_HKSCS_DECODER
