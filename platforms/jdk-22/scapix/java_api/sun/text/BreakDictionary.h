// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_TEXT_BREAKDICTIONARY_FWD
#define SCAPIX_JAVA_API_SUN_TEXT_BREAKDICTIONARY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::text { class BreakDictionary; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::text::BreakDictionary>
{
	static constexpr fixed_string class_name = "sun/text/BreakDictionary";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_TEXT_BREAKDICTIONARY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_TEXT_BREAKDICTIONARY)
#define SCAPIX_JAVA_API_SUN_TEXT_BREAKDICTIONARY

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::text::BreakDictionary : public jni::object_base<"sun/text/BreakDictionary",
	java::lang::Object>
{
public:

	jshort getNextStateFromCharacter(jint row, jint ch) { return call_method<"getNextStateFromCharacter", jshort>(row, ch); }
	jshort getNextState(jint row, jint col) { return call_method<"getNextState", jshort>(row, col); }

protected:

	BreakDictionary(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_TEXT_BREAKDICTIONARY
