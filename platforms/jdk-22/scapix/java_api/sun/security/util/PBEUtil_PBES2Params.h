// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_UTIL_PBEUTIL_PBES2PARAMS_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_UTIL_PBEUTIL_PBES2PARAMS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::util { class PBEUtil_PBES2Params; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::util::PBEUtil_PBES2Params>
{
	static constexpr fixed_string class_name = "sun/security/util/PBEUtil$PBES2Params";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_UTIL_PBEUTIL_PBES2PARAMS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_UTIL_PBEUTIL_PBES2PARAMS)
#define SCAPIX_JAVA_API_SUN_SECURITY_UTIL_PBEUTIL_PBES2PARAMS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/security/AlgorithmParameters.h>
#include <scapix/java_api/java/security/Key.h>
#include <scapix/java_api/java/security/Provider.h>
#include <scapix/java_api/java/security/SecureRandom.h>
#include <scapix/java_api/java/security/spec/AlgorithmParameterSpec.h>
#include <scapix/java_api/javax/crypto/spec/IvParameterSpec.h>
#include <scapix/java_api/javax/crypto/spec/PBEKeySpec.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::security::util::PBEUtil_PBES2Params : public jni::object_base<"sun/security/util/PBEUtil$PBES2Params",
	java::lang::Object>
{
public:

	static jni::ref<sun::security::util::PBEUtil_PBES2Params> new_object() { return base_::new_object(); }
	void initialize(jint blkSize, jint opmode, jint iCount, jni::ref<jni::array<jbyte>> salt, jni::ref<java::security::spec::AlgorithmParameterSpec> ivSpec, jni::ref<java::security::SecureRandom> random) { return call_method<"initialize", void>(blkSize, opmode, iCount, salt, ivSpec, random); }
	jni::ref<javax::crypto::spec::IvParameterSpec> getIvSpec() { return call_method<"getIvSpec", jni::ref<javax::crypto::spec::IvParameterSpec>>(); }
	jni::ref<java::security::AlgorithmParameters> getAlgorithmParameters(jint blkSize, jni::ref<java::lang::String> pbeAlgo, jni::ref<java::security::Provider> algParamsProv, jni::ref<java::security::SecureRandom> random) { return call_method<"getAlgorithmParameters", jni::ref<java::security::AlgorithmParameters>>(blkSize, pbeAlgo, algParamsProv, random); }
	jni::ref<javax::crypto::spec::PBEKeySpec> getPBEKeySpec(jint blkSize, jint keyLength, jint opmode, jni::ref<java::security::Key> key, jni::ref<java::security::spec::AlgorithmParameterSpec> params, jni::ref<java::security::SecureRandom> random) { return call_method<"getPBEKeySpec", jni::ref<javax::crypto::spec::PBEKeySpec>>(blkSize, keyLength, opmode, key, params, random); }
	static jni::ref<java::security::spec::AlgorithmParameterSpec> getParameterSpec(jni::ref<java::security::AlgorithmParameters> params) { return call_static_method<"getParameterSpec", jni::ref<java::security::spec::AlgorithmParameterSpec>>(params); }

protected:

	PBEUtil_PBES2Params(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_UTIL_PBEUTIL_PBES2PARAMS
