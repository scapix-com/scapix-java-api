// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/sun/security/util/math/IntegerModuloP_MultiplicativeInverser.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_UTIL_MATH_INTEGERMODULOP_MULTIPLICATIVEINVERSER_SECP256R1FIELD_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_UTIL_MATH_INTEGERMODULOP_MULTIPLICATIVEINVERSER_SECP256R1FIELD_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::util::math { class IntegerModuloP_MultiplicativeInverser_Secp256R1Field; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::util::math::IntegerModuloP_MultiplicativeInverser_Secp256R1Field>
{
	static constexpr fixed_string class_name = "sun/security/util/math/IntegerModuloP$MultiplicativeInverser$Secp256R1Field";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::sun::security::util::math::IntegerModuloP_MultiplicativeInverser>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_UTIL_MATH_INTEGERMODULOP_MULTIPLICATIVEINVERSER_SECP256R1FIELD_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_UTIL_MATH_INTEGERMODULOP_MULTIPLICATIVEINVERSER_SECP256R1FIELD)
#define SCAPIX_JAVA_API_SUN_SECURITY_UTIL_MATH_INTEGERMODULOP_MULTIPLICATIVEINVERSER_SECP256R1FIELD

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/sun/security/util/math/ImmutableIntegerModuloP.h>
#include <scapix/java_api/sun/security/util/math/IntegerModuloP.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::security::util::math::IntegerModuloP_MultiplicativeInverser_Secp256R1Field : public jni::object_base<"sun/security/util/math/IntegerModuloP$MultiplicativeInverser$Secp256R1Field",
	java::lang::Object,
	sun::security::util::math::IntegerModuloP_MultiplicativeInverser>
{
public:

	static jni::ref<sun::security::util::math::IntegerModuloP_MultiplicativeInverser_Secp256R1Field> new_object() { return base_::new_object(); }
	jni::ref<sun::security::util::math::ImmutableIntegerModuloP> inverse(jni::ref<sun::security::util::math::IntegerModuloP> imp) { return call_method<"inverse", jni::ref<sun::security::util::math::ImmutableIntegerModuloP>>(imp); }

protected:

	IntegerModuloP_MultiplicativeInverser_Secp256R1Field(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_UTIL_MATH_INTEGERMODULOP_MULTIPLICATIVEINVERSER_SECP256R1FIELD
