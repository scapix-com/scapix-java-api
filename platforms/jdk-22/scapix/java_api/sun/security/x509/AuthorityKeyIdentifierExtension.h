// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/sun/security/x509/Extension.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_X509_AUTHORITYKEYIDENTIFIEREXTENSION_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_X509_AUTHORITYKEYIDENTIFIEREXTENSION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::x509 { class AuthorityKeyIdentifierExtension; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::x509::AuthorityKeyIdentifierExtension>
{
	static constexpr fixed_string class_name = "sun/security/x509/AuthorityKeyIdentifierExtension";
	using base_classes = std::tuple<scapix::java_api::sun::security::x509::Extension>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_X509_AUTHORITYKEYIDENTIFIEREXTENSION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_X509_AUTHORITYKEYIDENTIFIEREXTENSION)
#define SCAPIX_JAVA_API_SUN_SECURITY_X509_AUTHORITYKEYIDENTIFIEREXTENSION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Boolean.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/sun/security/util/DerOutputStream.h>
#include <scapix/java_api/sun/security/x509/GeneralNames.h>
#include <scapix/java_api/sun/security/x509/KeyIdentifier.h>
#include <scapix/java_api/sun/security/x509/SerialNumber.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::security::x509::AuthorityKeyIdentifierExtension : public jni::object_base<"sun/security/x509/AuthorityKeyIdentifierExtension",
	sun::security::x509::Extension>
{
public:

	static jni::ref<java::lang::String> NAME() { return get_static_field<"NAME", jni::ref<java::lang::String>>(); }

	static jni::ref<sun::security::x509::AuthorityKeyIdentifierExtension> new_object(jni::ref<sun::security::x509::KeyIdentifier> kid, jni::ref<sun::security::x509::GeneralNames> names, jni::ref<sun::security::x509::SerialNumber> sn) { return base_::new_object(kid, names, sn); }
	static jni::ref<sun::security::x509::AuthorityKeyIdentifierExtension> new_object(jni::ref<java::lang::Boolean> critical, jni::ref<java::lang::Object> value) { return base_::new_object(critical, value); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	void encode(jni::ref<sun::security::util::DerOutputStream> out) { return call_method<"encode", void>(out); }
	jni::ref<sun::security::x509::KeyIdentifier> getKeyIdentifier() { return call_method<"getKeyIdentifier", jni::ref<sun::security::x509::KeyIdentifier>>(); }
	jni::ref<sun::security::x509::GeneralNames> getAuthName() { return call_method<"getAuthName", jni::ref<sun::security::x509::GeneralNames>>(); }
	jni::ref<sun::security::x509::SerialNumber> getSerialNumber() { return call_method<"getSerialNumber", jni::ref<sun::security::x509::SerialNumber>>(); }
	jni::ref<java::lang::String> getName() { return call_method<"getName", jni::ref<java::lang::String>>(); }
	jni::ref<jni::array<jbyte>> getEncodedKeyIdentifier() { return call_method<"getEncodedKeyIdentifier", jni::ref<jni::array<jbyte>>>(); }

protected:

	AuthorityKeyIdentifierExtension(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_X509_AUTHORITYKEYIDENTIFIEREXTENSION
