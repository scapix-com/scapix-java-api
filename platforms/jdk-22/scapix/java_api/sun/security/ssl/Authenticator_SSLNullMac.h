// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/sun/security/ssl/Authenticator_SSLNullAuthenticator.h>
#include <scapix/java_api/sun/security/ssl/Authenticator_MAC.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_SSL_AUTHENTICATOR_SSLNULLMAC_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_SSL_AUTHENTICATOR_SSLNULLMAC_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::ssl { class Authenticator_SSLNullMac; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::ssl::Authenticator_SSLNullMac>
{
	static constexpr fixed_string class_name = "sun/security/ssl/Authenticator$SSLNullMac";
	using base_classes = std::tuple<scapix::java_api::sun::security::ssl::Authenticator_SSLNullAuthenticator, scapix::java_api::sun::security::ssl::Authenticator_MAC>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_SSL_AUTHENTICATOR_SSLNULLMAC_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_SSL_AUTHENTICATOR_SSLNULLMAC)
#define SCAPIX_JAVA_API_SUN_SECURITY_SSL_AUTHENTICATOR_SSLNULLMAC

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/nio/ByteBuffer.h>
#include <scapix/java_api/sun/security/ssl/CipherSuite_MacAlg.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::security::ssl::Authenticator_SSLNullMac : public jni::object_base<"sun/security/ssl/Authenticator$SSLNullMac",
	sun::security::ssl::Authenticator_SSLNullAuthenticator,
	sun::security::ssl::Authenticator_MAC>
{
public:

	static jni::ref<sun::security::ssl::Authenticator_SSLNullMac> new_object() { return base_::new_object(); }
	jni::ref<sun::security::ssl::CipherSuite_MacAlg> macAlg() { return call_method<"macAlg", jni::ref<sun::security::ssl::CipherSuite_MacAlg>>(); }
	jni::ref<jni::array<jbyte>> compute(jbyte type, jni::ref<java::nio::ByteBuffer> bb, jni::ref<jni::array<jbyte>> sequence, jboolean isSimulated) { return call_method<"compute", jni::ref<jni::array<jbyte>>>(type, bb, sequence, isSimulated); }

protected:

	Authenticator_SSLNullMac(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_SSL_AUTHENTICATOR_SSLNULLMAC
