// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Enum.h>
#include <scapix/java_api/sun/security/ssl/SSLConsumer.h>
#include <scapix/java_api/sun/security/ssl/HandshakeProducer.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_SSL_SSLHANDSHAKE_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_SSL_SSLHANDSHAKE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::ssl { class SSLHandshake; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::ssl::SSLHandshake>
{
	static constexpr fixed_string class_name = "sun/security/ssl/SSLHandshake";
	using base_classes = std::tuple<scapix::java_api::java::lang::Enum, scapix::java_api::sun::security::ssl::SSLConsumer, scapix::java_api::sun::security::ssl::HandshakeProducer>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_SSL_SSLHANDSHAKE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_SSL_SSLHANDSHAKE)
#define SCAPIX_JAVA_API_SUN_SECURITY_SSL_SSLHANDSHAKE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/nio/ByteBuffer.h>
#include <scapix/java_api/sun/security/ssl/ConnectionContext.h>
#include <scapix/java_api/sun/security/ssl/SSLHandshake_HandshakeMessage.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::security::ssl::SSLHandshake : public jni::object_base<"sun/security/ssl/SSLHandshake",
	java::lang::Enum,
	sun::security::ssl::SSLConsumer,
	sun::security::ssl::HandshakeProducer>
{
public:

	static jni::ref<sun::security::ssl::SSLHandshake> HELLO_REQUEST() { return get_static_field<"HELLO_REQUEST", jni::ref<sun::security::ssl::SSLHandshake>>(); }
	static jni::ref<sun::security::ssl::SSLHandshake> CLIENT_HELLO() { return get_static_field<"CLIENT_HELLO", jni::ref<sun::security::ssl::SSLHandshake>>(); }
	static jni::ref<sun::security::ssl::SSLHandshake> SERVER_HELLO() { return get_static_field<"SERVER_HELLO", jni::ref<sun::security::ssl::SSLHandshake>>(); }
	static jni::ref<sun::security::ssl::SSLHandshake> HELLO_RETRY_REQUEST() { return get_static_field<"HELLO_RETRY_REQUEST", jni::ref<sun::security::ssl::SSLHandshake>>(); }
	static jni::ref<sun::security::ssl::SSLHandshake> HELLO_VERIFY_REQUEST() { return get_static_field<"HELLO_VERIFY_REQUEST", jni::ref<sun::security::ssl::SSLHandshake>>(); }
	static jni::ref<sun::security::ssl::SSLHandshake> NEW_SESSION_TICKET() { return get_static_field<"NEW_SESSION_TICKET", jni::ref<sun::security::ssl::SSLHandshake>>(); }
	static jni::ref<sun::security::ssl::SSLHandshake> END_OF_EARLY_DATA() { return get_static_field<"END_OF_EARLY_DATA", jni::ref<sun::security::ssl::SSLHandshake>>(); }
	static jni::ref<sun::security::ssl::SSLHandshake> ENCRYPTED_EXTENSIONS() { return get_static_field<"ENCRYPTED_EXTENSIONS", jni::ref<sun::security::ssl::SSLHandshake>>(); }
	static jni::ref<sun::security::ssl::SSLHandshake> CERTIFICATE() { return get_static_field<"CERTIFICATE", jni::ref<sun::security::ssl::SSLHandshake>>(); }
	static jni::ref<sun::security::ssl::SSLHandshake> SERVER_KEY_EXCHANGE() { return get_static_field<"SERVER_KEY_EXCHANGE", jni::ref<sun::security::ssl::SSLHandshake>>(); }
	static jni::ref<sun::security::ssl::SSLHandshake> CERTIFICATE_REQUEST() { return get_static_field<"CERTIFICATE_REQUEST", jni::ref<sun::security::ssl::SSLHandshake>>(); }
	static jni::ref<sun::security::ssl::SSLHandshake> SERVER_HELLO_DONE() { return get_static_field<"SERVER_HELLO_DONE", jni::ref<sun::security::ssl::SSLHandshake>>(); }
	static jni::ref<sun::security::ssl::SSLHandshake> CERTIFICATE_VERIFY() { return get_static_field<"CERTIFICATE_VERIFY", jni::ref<sun::security::ssl::SSLHandshake>>(); }
	static jni::ref<sun::security::ssl::SSLHandshake> CLIENT_KEY_EXCHANGE() { return get_static_field<"CLIENT_KEY_EXCHANGE", jni::ref<sun::security::ssl::SSLHandshake>>(); }
	static jni::ref<sun::security::ssl::SSLHandshake> FINISHED() { return get_static_field<"FINISHED", jni::ref<sun::security::ssl::SSLHandshake>>(); }
	static jni::ref<sun::security::ssl::SSLHandshake> CERTIFICATE_URL() { return get_static_field<"CERTIFICATE_URL", jni::ref<sun::security::ssl::SSLHandshake>>(); }
	static jni::ref<sun::security::ssl::SSLHandshake> CERTIFICATE_STATUS() { return get_static_field<"CERTIFICATE_STATUS", jni::ref<sun::security::ssl::SSLHandshake>>(); }
	static jni::ref<sun::security::ssl::SSLHandshake> SUPPLEMENTAL_DATA() { return get_static_field<"SUPPLEMENTAL_DATA", jni::ref<sun::security::ssl::SSLHandshake>>(); }
	static jni::ref<sun::security::ssl::SSLHandshake> KEY_UPDATE() { return get_static_field<"KEY_UPDATE", jni::ref<sun::security::ssl::SSLHandshake>>(); }
	static jni::ref<sun::security::ssl::SSLHandshake> MESSAGE_HASH() { return get_static_field<"MESSAGE_HASH", jni::ref<sun::security::ssl::SSLHandshake>>(); }
	static jni::ref<sun::security::ssl::SSLHandshake> NOT_APPLICABLE() { return get_static_field<"NOT_APPLICABLE", jni::ref<sun::security::ssl::SSLHandshake>>(); }

	static jni::ref<jni::array<sun::security::ssl::SSLHandshake>> values() { return call_static_method<"values", jni::ref<jni::array<sun::security::ssl::SSLHandshake>>>(); }
	static jni::ref<sun::security::ssl::SSLHandshake> valueOf(jni::ref<java::lang::String> name) { return call_static_method<"valueOf", jni::ref<sun::security::ssl::SSLHandshake>>(name); }
	void consume(jni::ref<sun::security::ssl::ConnectionContext> context, jni::ref<java::nio::ByteBuffer> message) { return call_method<"consume", void>(context, message); }
	jni::ref<jni::array<jbyte>> produce(jni::ref<sun::security::ssl::ConnectionContext> context, jni::ref<sun::security::ssl::SSLHandshake_HandshakeMessage> message) { return call_method<"produce", jni::ref<jni::array<jbyte>>>(context, message); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	SSLHandshake(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_SSL_SSLHANDSHAKE
