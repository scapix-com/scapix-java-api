// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_TIMESTAMP_TSRESPONSE_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_TIMESTAMP_TSRESPONSE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::timestamp { class TSResponse; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::timestamp::TSResponse>
{
	static constexpr fixed_string class_name = "sun/security/timestamp/TSResponse";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_TIMESTAMP_TSRESPONSE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_TIMESTAMP_TSRESPONSE)
#define SCAPIX_JAVA_API_SUN_SECURITY_TIMESTAMP_TSRESPONSE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/sun/security/pkcs/PKCS7.h>
#include <scapix/java_api/sun/security/timestamp/TimestampToken.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::security::timestamp::TSResponse : public jni::object_base<"sun/security/timestamp/TSResponse",
	java::lang::Object>
{
public:

	static jint GRANTED() { return get_static_field<"GRANTED", jint>(); }
	static jint GRANTED_WITH_MODS() { return get_static_field<"GRANTED_WITH_MODS", jint>(); }
	static jint REJECTION() { return get_static_field<"REJECTION", jint>(); }
	static jint WAITING() { return get_static_field<"WAITING", jint>(); }
	static jint REVOCATION_WARNING() { return get_static_field<"REVOCATION_WARNING", jint>(); }
	static jint REVOCATION_NOTIFICATION() { return get_static_field<"REVOCATION_NOTIFICATION", jint>(); }
	static jint BAD_ALG() { return get_static_field<"BAD_ALG", jint>(); }
	static jint BAD_REQUEST() { return get_static_field<"BAD_REQUEST", jint>(); }
	static jint BAD_DATA_FORMAT() { return get_static_field<"BAD_DATA_FORMAT", jint>(); }
	static jint TIME_NOT_AVAILABLE() { return get_static_field<"TIME_NOT_AVAILABLE", jint>(); }
	static jint UNACCEPTED_POLICY() { return get_static_field<"UNACCEPTED_POLICY", jint>(); }
	static jint UNACCEPTED_EXTENSION() { return get_static_field<"UNACCEPTED_EXTENSION", jint>(); }
	static jint ADD_INFO_NOT_AVAILABLE() { return get_static_field<"ADD_INFO_NOT_AVAILABLE", jint>(); }
	static jint SYSTEM_FAILURE() { return get_static_field<"SYSTEM_FAILURE", jint>(); }

	jint getStatusCode() { return call_method<"getStatusCode", jint>(); }
	jni::ref<jni::array<java::lang::String>> getStatusMessages() { return call_method<"getStatusMessages", jni::ref<jni::array<java::lang::String>>>(); }
	jni::ref<jni::array<jboolean>> getFailureInfo() { return call_method<"getFailureInfo", jni::ref<jni::array<jboolean>>>(); }
	jni::ref<java::lang::String> getStatusCodeAsText() { return call_method<"getStatusCodeAsText", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getFailureCodeAsText() { return call_method<"getFailureCodeAsText", jni::ref<java::lang::String>>(); }
	jni::ref<sun::security::pkcs::PKCS7> getToken() { return call_method<"getToken", jni::ref<sun::security::pkcs::PKCS7>>(); }
	jni::ref<sun::security::timestamp::TimestampToken> getTimestampToken() { return call_method<"getTimestampToken", jni::ref<sun::security::timestamp::TimestampToken>>(); }
	jni::ref<jni::array<jbyte>> getEncodedToken() { return call_method<"getEncodedToken", jni::ref<jni::array<jbyte>>>(); }

protected:

	TSResponse(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_TIMESTAMP_TSRESPONSE
