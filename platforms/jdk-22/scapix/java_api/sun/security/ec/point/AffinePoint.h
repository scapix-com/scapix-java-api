// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_EC_POINT_AFFINEPOINT_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_EC_POINT_AFFINEPOINT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::ec::point { class AffinePoint; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::ec::point::AffinePoint>
{
	static constexpr fixed_string class_name = "sun/security/ec/point/AffinePoint";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_EC_POINT_AFFINEPOINT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_EC_POINT_AFFINEPOINT)
#define SCAPIX_JAVA_API_SUN_SECURITY_EC_POINT_AFFINEPOINT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/security/spec/ECPoint.h>
#include <scapix/java_api/sun/security/util/math/ImmutableIntegerModuloP.h>
#include <scapix/java_api/sun/security/util/math/IntegerFieldModuloP.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::security::ec::point::AffinePoint : public jni::object_base<"sun/security/ec/point/AffinePoint",
	java::lang::Object>
{
public:

	static jni::ref<sun::security::ec::point::AffinePoint> new_object(jni::ref<sun::security::util::math::ImmutableIntegerModuloP> x, jni::ref<sun::security::util::math::ImmutableIntegerModuloP> y) { return base_::new_object(x, y); }
	static jni::ref<sun::security::ec::point::AffinePoint> fromECPoint(jni::ref<java::security::spec::ECPoint> ecPoint, jni::ref<sun::security::util::math::IntegerFieldModuloP> field) { return call_static_method<"fromECPoint", jni::ref<sun::security::ec::point::AffinePoint>>(ecPoint, field); }
	jni::ref<java::security::spec::ECPoint> toECPoint() { return call_method<"toECPoint", jni::ref<java::security::spec::ECPoint>>(); }
	jni::ref<sun::security::util::math::ImmutableIntegerModuloP> getX() { return call_method<"getX", jni::ref<sun::security::util::math::ImmutableIntegerModuloP>>(); }
	jni::ref<sun::security::util::math::ImmutableIntegerModuloP> getY() { return call_method<"getY", jni::ref<sun::security::util::math::ImmutableIntegerModuloP>>(); }
	jboolean equals(jni::ref<java::lang::Object> obj) { return call_method<"equals", jboolean>(obj); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	AffinePoint(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_EC_POINT_AFFINEPOINT
