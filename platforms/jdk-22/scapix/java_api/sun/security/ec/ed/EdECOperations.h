// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_EC_ED_EDECOPERATIONS_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_EC_ED_EDECOPERATIONS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::ec::ed { class EdECOperations; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::ec::ed::EdECOperations>
{
	static constexpr fixed_string class_name = "sun/security/ec/ed/EdECOperations";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_EC_ED_EDECOPERATIONS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_EC_ED_EDECOPERATIONS)
#define SCAPIX_JAVA_API_SUN_SECURITY_EC_ED_EDECOPERATIONS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/util/function/Function.h>
#include <scapix/java_api/sun/security/ec/point/AffinePoint.h>
#include <scapix/java_api/sun/security/ec/point/ImmutablePoint.h>
#include <scapix/java_api/sun/security/ec/point/MutablePoint.h>
#include <scapix/java_api/sun/security/ec/point/Point.h>
#include <scapix/java_api/sun/security/util/math/IntegerModuloP.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::security::ec::ed::EdECOperations : public jni::object_base<"sun/security/ec/ed/EdECOperations",
	java::lang::Object>
{
public:

	static jni::ref<sun::security::ec::ed::EdECOperations> new_object() { return base_::new_object(); }
	jni::ref<sun::security::ec::point::Point> basePointMultiply(jni::ref<jni::array<jbyte>> p1) { return call_method<"basePointMultiply", jni::ref<sun::security::ec::point::Point>>(p1); }
	jni::ref<sun::security::ec::point::AffinePoint> decodeAffinePoint(jni::ref<java::util::function::Function> p1, jint p2, jni::ref<sun::security::util::math::IntegerModuloP> p3) { return call_method<"decodeAffinePoint", jni::ref<sun::security::ec::point::AffinePoint>>(p1, p2, p3); }
	jni::ref<sun::security::ec::point::ImmutablePoint> of(jni::ref<sun::security::ec::point::AffinePoint> p1) { return call_method<"of", jni::ref<sun::security::ec::point::ImmutablePoint>>(p1); }
	jni::ref<sun::security::ec::point::MutablePoint> setSum(jni::ref<sun::security::ec::point::MutablePoint> p1, jni::ref<sun::security::ec::point::MutablePoint> p2) { return call_method<"setSum", jni::ref<sun::security::ec::point::MutablePoint>>(p1, p2); }
	jni::ref<sun::security::ec::point::MutablePoint> setProduct(jni::ref<sun::security::ec::point::MutablePoint> p1, jni::ref<jni::array<jbyte>> s) { return call_method<"setProduct", jni::ref<sun::security::ec::point::MutablePoint>>(p1, s); }

protected:

	EdECOperations(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_EC_ED_EDECOPERATIONS
