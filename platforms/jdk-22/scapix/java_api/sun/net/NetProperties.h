// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_NET_NETPROPERTIES_FWD
#define SCAPIX_JAVA_API_SUN_NET_NETPROPERTIES_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::net { class NetProperties; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::net::NetProperties>
{
	static constexpr fixed_string class_name = "sun/net/NetProperties";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NET_NETPROPERTIES_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_NET_NETPROPERTIES)
#define SCAPIX_JAVA_API_SUN_NET_NETPROPERTIES

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Boolean.h>
#include <scapix/java_api/java/lang/Integer.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::net::NetProperties : public jni::object_base<"sun/net/NetProperties",
	java::lang::Object>
{
public:

	static jni::ref<java::lang::String> get(jni::ref<java::lang::String> key) { return call_static_method<"get", jni::ref<java::lang::String>>(key); }
	static jni::ref<java::lang::Integer> getInteger(jni::ref<java::lang::String> key, jint defval) { return call_static_method<"getInteger", jni::ref<java::lang::Integer>>(key, defval); }
	static jni::ref<java::lang::Boolean> getBoolean(jni::ref<java::lang::String> key) { return call_static_method<"getBoolean", jni::ref<java::lang::Boolean>>(key); }

protected:

	NetProperties(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NET_NETPROPERTIES
