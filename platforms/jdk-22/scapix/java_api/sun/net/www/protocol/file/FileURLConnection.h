// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/sun/net/www/URLConnection.h>

#ifndef SCAPIX_JAVA_API_SUN_NET_WWW_PROTOCOL_FILE_FILEURLCONNECTION_FWD
#define SCAPIX_JAVA_API_SUN_NET_WWW_PROTOCOL_FILE_FILEURLCONNECTION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::net::www::protocol::file { class FileURLConnection; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::net::www::protocol::file::FileURLConnection>
{
	static constexpr fixed_string class_name = "sun/net/www/protocol/file/FileURLConnection";
	using base_classes = std::tuple<scapix::java_api::sun::net::www::URLConnection>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NET_WWW_PROTOCOL_FILE_FILEURLCONNECTION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_NET_WWW_PROTOCOL_FILE_FILEURLCONNECTION)
#define SCAPIX_JAVA_API_SUN_NET_WWW_PROTOCOL_FILE_FILEURLCONNECTION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/security/Permission.h>
#include <scapix/java_api/java/util/Map.h>
#include <scapix/java_api/sun/net/www/MessageHeader.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::net::www::protocol::file::FileURLConnection : public jni::object_base<"sun/net/www/protocol/file/FileURLConnection",
	sun::net::www::URLConnection>
{
public:

	void connect() { return call_method<"connect", void>(); }
	void closeInputStream() { return call_method<"closeInputStream", void>(); }
	jni::ref<java::util::Map> getHeaderFields() { return call_method<"getHeaderFields", jni::ref<java::util::Map>>(); }
	jni::ref<java::lang::String> getHeaderField(jni::ref<java::lang::String> name) { return call_method<"getHeaderField", jni::ref<java::lang::String>>(name); }
	jni::ref<java::lang::String> getHeaderField(jint n) { return call_method<"getHeaderField", jni::ref<java::lang::String>>(n); }
	jint getContentLength() { return call_method<"getContentLength", jint>(); }
	jlong getContentLengthLong() { return call_method<"getContentLengthLong", jlong>(); }
	jni::ref<java::lang::String> getHeaderFieldKey(jint n) { return call_method<"getHeaderFieldKey", jni::ref<java::lang::String>>(n); }
	jni::ref<sun::net::www::MessageHeader> getProperties() { return call_method<"getProperties", jni::ref<sun::net::www::MessageHeader>>(); }
	jlong getLastModified() { return call_method<"getLastModified", jlong>(); }
	jni::ref<java::io::InputStream> getInputStream() { return call_method<"getInputStream", jni::ref<java::io::InputStream>>(); }
	jni::ref<java::security::Permission> getPermission() { return call_method<"getPermission", jni::ref<java::security::Permission>>(); }

protected:

	FileURLConnection(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NET_WWW_PROTOCOL_FILE_FILEURLCONNECTION
