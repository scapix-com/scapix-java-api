// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/io/PrintStream.h>

#ifndef SCAPIX_JAVA_API_SUN_NET_SMTP_SMTPPRINTSTREAM_FWD
#define SCAPIX_JAVA_API_SUN_NET_SMTP_SMTPPRINTSTREAM_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::net::smtp { class SmtpPrintStream; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::net::smtp::SmtpPrintStream>
{
	static constexpr fixed_string class_name = "sun/net/smtp/SmtpPrintStream";
	using base_classes = std::tuple<scapix::java_api::java::io::PrintStream>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NET_SMTP_SMTPPRINTSTREAM_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_NET_SMTP_SMTPPRINTSTREAM)
#define SCAPIX_JAVA_API_SUN_NET_SMTP_SMTPPRINTSTREAM

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::net::smtp::SmtpPrintStream : public jni::object_base<"sun/net/smtp/SmtpPrintStream",
	java::io::PrintStream>
{
public:

	void close() { return call_method<"close", void>(); }
	void write(jint b) { return call_method<"write", void>(b); }
	void write(jni::ref<jni::array<jbyte>> b, jint off, jint len) { return call_method<"write", void>(b, off, len); }
	void print(jni::ref<java::lang::String> s) { return call_method<"print", void>(s); }

protected:

	SmtpPrintStream(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NET_SMTP_SMTPPRINTSTREAM
