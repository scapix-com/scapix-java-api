// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Enum.h>

#ifndef SCAPIX_JAVA_API_SUN_UTIL_LOGGING_PLATFORMLOGGER_LEVEL_FWD
#define SCAPIX_JAVA_API_SUN_UTIL_LOGGING_PLATFORMLOGGER_LEVEL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::util::logging { class PlatformLogger_Level; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::util::logging::PlatformLogger_Level>
{
	static constexpr fixed_string class_name = "sun/util/logging/PlatformLogger$Level";
	using base_classes = std::tuple<scapix::java_api::java::lang::Enum>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_UTIL_LOGGING_PLATFORMLOGGER_LEVEL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_UTIL_LOGGING_PLATFORMLOGGER_LEVEL)
#define SCAPIX_JAVA_API_SUN_UTIL_LOGGING_PLATFORMLOGGER_LEVEL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/System_Logger_Level.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::util::logging::PlatformLogger_Level : public jni::object_base<"sun/util/logging/PlatformLogger$Level",
	java::lang::Enum>
{
public:

	static jni::ref<sun::util::logging::PlatformLogger_Level> ALL() { return get_static_field<"ALL", jni::ref<sun::util::logging::PlatformLogger_Level>>(); }
	static jni::ref<sun::util::logging::PlatformLogger_Level> FINEST() { return get_static_field<"FINEST", jni::ref<sun::util::logging::PlatformLogger_Level>>(); }
	static jni::ref<sun::util::logging::PlatformLogger_Level> FINER() { return get_static_field<"FINER", jni::ref<sun::util::logging::PlatformLogger_Level>>(); }
	static jni::ref<sun::util::logging::PlatformLogger_Level> FINE() { return get_static_field<"FINE", jni::ref<sun::util::logging::PlatformLogger_Level>>(); }
	static jni::ref<sun::util::logging::PlatformLogger_Level> CONFIG() { return get_static_field<"CONFIG", jni::ref<sun::util::logging::PlatformLogger_Level>>(); }
	static jni::ref<sun::util::logging::PlatformLogger_Level> INFO() { return get_static_field<"INFO", jni::ref<sun::util::logging::PlatformLogger_Level>>(); }
	static jni::ref<sun::util::logging::PlatformLogger_Level> WARNING() { return get_static_field<"WARNING", jni::ref<sun::util::logging::PlatformLogger_Level>>(); }
	static jni::ref<sun::util::logging::PlatformLogger_Level> SEVERE() { return get_static_field<"SEVERE", jni::ref<sun::util::logging::PlatformLogger_Level>>(); }
	static jni::ref<sun::util::logging::PlatformLogger_Level> OFF() { return get_static_field<"OFF", jni::ref<sun::util::logging::PlatformLogger_Level>>(); }

	static jni::ref<jni::array<sun::util::logging::PlatformLogger_Level>> values() { return call_static_method<"values", jni::ref<jni::array<sun::util::logging::PlatformLogger_Level>>>(); }
	static jni::ref<sun::util::logging::PlatformLogger_Level> valueOf(jni::ref<java::lang::String> name) { return call_static_method<"valueOf", jni::ref<sun::util::logging::PlatformLogger_Level>>(name); }
	jni::ref<java::lang::System_Logger_Level> systemLevel() { return call_method<"systemLevel", jni::ref<java::lang::System_Logger_Level>>(); }
	jint intValue() { return call_method<"intValue", jint>(); }
	static jni::ref<sun::util::logging::PlatformLogger_Level> valueOf(jint level) { return call_static_method<"valueOf", jni::ref<sun::util::logging::PlatformLogger_Level>>(level); }

protected:

	PlatformLogger_Level(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_UTIL_LOGGING_PLATFORMLOGGER_LEVEL
