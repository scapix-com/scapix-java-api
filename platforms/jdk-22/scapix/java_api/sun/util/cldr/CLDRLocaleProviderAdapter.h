// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/sun/util/locale/provider/JRELocaleProviderAdapter.h>

#ifndef SCAPIX_JAVA_API_SUN_UTIL_CLDR_CLDRLOCALEPROVIDERADAPTER_FWD
#define SCAPIX_JAVA_API_SUN_UTIL_CLDR_CLDRLOCALEPROVIDERADAPTER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::util::cldr { class CLDRLocaleProviderAdapter; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::util::cldr::CLDRLocaleProviderAdapter>
{
	static constexpr fixed_string class_name = "sun/util/cldr/CLDRLocaleProviderAdapter";
	using base_classes = std::tuple<scapix::java_api::sun::util::locale::provider::JRELocaleProviderAdapter>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_UTIL_CLDR_CLDRLOCALEPROVIDERADAPTER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_UTIL_CLDR_CLDRLOCALEPROVIDERADAPTER)
#define SCAPIX_JAVA_API_SUN_UTIL_CLDR_CLDRLOCALEPROVIDERADAPTER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/text/spi/BreakIteratorProvider.h>
#include <scapix/java_api/java/text/spi/CollatorProvider.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/java/util/Locale.h>
#include <scapix/java_api/java/util/Optional.h>
#include <scapix/java_api/java/util/Set.h>
#include <scapix/java_api/java/util/spi/CalendarDataProvider.h>
#include <scapix/java_api/java/util/spi/CalendarNameProvider.h>
#include <scapix/java_api/java/util/spi/TimeZoneNameProvider.h>
#include <scapix/java_api/sun/util/locale/provider/LocaleProviderAdapter_Type.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::util::cldr::CLDRLocaleProviderAdapter : public jni::object_base<"sun/util/cldr/CLDRLocaleProviderAdapter",
	sun::util::locale::provider::JRELocaleProviderAdapter>
{
public:

	static jni::ref<sun::util::cldr::CLDRLocaleProviderAdapter> new_object() { return base_::new_object(); }
	jni::ref<sun::util::locale::provider::LocaleProviderAdapter_Type> getAdapterType() { return call_method<"getAdapterType", jni::ref<sun::util::locale::provider::LocaleProviderAdapter_Type>>(); }
	jni::ref<java::text::spi::BreakIteratorProvider> getBreakIteratorProvider() { return call_method<"getBreakIteratorProvider", jni::ref<java::text::spi::BreakIteratorProvider>>(); }
	jni::ref<java::util::spi::CalendarDataProvider> getCalendarDataProvider() { return call_method<"getCalendarDataProvider", jni::ref<java::util::spi::CalendarDataProvider>>(); }
	jni::ref<java::util::spi::CalendarNameProvider> getCalendarNameProvider() { return call_method<"getCalendarNameProvider", jni::ref<java::util::spi::CalendarNameProvider>>(); }
	jni::ref<java::text::spi::CollatorProvider> getCollatorProvider() { return call_method<"getCollatorProvider", jni::ref<java::text::spi::CollatorProvider>>(); }
	jni::ref<java::util::spi::TimeZoneNameProvider> getTimeZoneNameProvider() { return call_method<"getTimeZoneNameProvider", jni::ref<java::util::spi::TimeZoneNameProvider>>(); }
	jni::ref<jni::array<java::util::Locale>> getAvailableLocales() { return call_method<"getAvailableLocales", jni::ref<jni::array<java::util::Locale>>>(); }
	jni::ref<java::util::List> getCandidateLocales(jni::ref<java::lang::String> baseName, jni::ref<java::util::Locale> locale) { return call_method<"getCandidateLocales", jni::ref<java::util::List>>(baseName, locale); }
	jboolean isSupportedProviderLocale(jni::ref<java::util::Locale> locale, jni::ref<java::util::Set> langtags) { return call_method<"isSupportedProviderLocale", jboolean>(locale, langtags); }
	jni::ref<java::util::Optional> canonicalTZID(jni::ref<java::lang::String> id) { return call_method<"canonicalTZID", jni::ref<java::util::Optional>>(id); }

protected:

	CLDRLocaleProviderAdapter(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_UTIL_CLDR_CLDRLOCALEPROVIDERADAPTER
