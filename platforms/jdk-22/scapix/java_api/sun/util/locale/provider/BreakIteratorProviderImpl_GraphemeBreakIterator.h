// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/text/BreakIterator.h>

#ifndef SCAPIX_JAVA_API_SUN_UTIL_LOCALE_PROVIDER_BREAKITERATORPROVIDERIMPL_GRAPHEMEBREAKITERATOR_FWD
#define SCAPIX_JAVA_API_SUN_UTIL_LOCALE_PROVIDER_BREAKITERATORPROVIDERIMPL_GRAPHEMEBREAKITERATOR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::util::locale::provider { class BreakIteratorProviderImpl_GraphemeBreakIterator; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::util::locale::provider::BreakIteratorProviderImpl_GraphemeBreakIterator>
{
	static constexpr fixed_string class_name = "sun/util/locale/provider/BreakIteratorProviderImpl$GraphemeBreakIterator";
	using base_classes = std::tuple<scapix::java_api::java::text::BreakIterator>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_UTIL_LOCALE_PROVIDER_BREAKITERATORPROVIDERIMPL_GRAPHEMEBREAKITERATOR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_UTIL_LOCALE_PROVIDER_BREAKITERATORPROVIDERIMPL_GRAPHEMEBREAKITERATOR)
#define SCAPIX_JAVA_API_SUN_UTIL_LOCALE_PROVIDER_BREAKITERATORPROVIDERIMPL_GRAPHEMEBREAKITERATOR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/text/CharacterIterator.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::util::locale::provider::BreakIteratorProviderImpl_GraphemeBreakIterator : public jni::object_base<"sun/util/locale/provider/BreakIteratorProviderImpl$GraphemeBreakIterator",
	java::text::BreakIterator>
{
public:

	jint first() { return call_method<"first", jint>(); }
	jint last() { return call_method<"last", jint>(); }
	jint next(jint n) { return call_method<"next", jint>(n); }
	jint next() { return call_method<"next", jint>(); }
	jint previous() { return call_method<"previous", jint>(); }
	jint following(jint offset) { return call_method<"following", jint>(offset); }
	jint current() { return call_method<"current", jint>(); }
	jni::ref<java::text::CharacterIterator> getText() { return call_method<"getText", jni::ref<java::text::CharacterIterator>>(); }
	void setText(jni::ref<java::text::CharacterIterator> newText) { return call_method<"setText", void>(newText); }
	jboolean isBoundary(jint offset) { return call_method<"isBoundary", jboolean>(offset); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jboolean equals(jni::ref<java::lang::Object> o) { return call_method<"equals", jboolean>(o); }

protected:

	BreakIteratorProviderImpl_GraphemeBreakIterator(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_UTIL_LOCALE_PROVIDER_BREAKITERATORPROVIDERIMPL_GRAPHEMEBREAKITERATOR
