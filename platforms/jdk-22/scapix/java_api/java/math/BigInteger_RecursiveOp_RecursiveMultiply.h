// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/math/BigInteger_RecursiveOp.h>

#ifndef SCAPIX_JAVA_API_JAVA_MATH_BIGINTEGER_RECURSIVEOP_RECURSIVEMULTIPLY_FWD
#define SCAPIX_JAVA_API_JAVA_MATH_BIGINTEGER_RECURSIVEOP_RECURSIVEMULTIPLY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::math { class BigInteger_RecursiveOp_RecursiveMultiply; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::math::BigInteger_RecursiveOp_RecursiveMultiply>
{
	static constexpr fixed_string class_name = "java/math/BigInteger$RecursiveOp$RecursiveMultiply";
	using base_classes = std::tuple<scapix::java_api::java::math::BigInteger_RecursiveOp>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_MATH_BIGINTEGER_RECURSIVEOP_RECURSIVEMULTIPLY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_MATH_BIGINTEGER_RECURSIVEOP_RECURSIVEMULTIPLY)
#define SCAPIX_JAVA_API_JAVA_MATH_BIGINTEGER_RECURSIVEOP_RECURSIVEMULTIPLY

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/math/BigInteger.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::math::BigInteger_RecursiveOp_RecursiveMultiply : public jni::object_base<"java/math/BigInteger$RecursiveOp$RecursiveMultiply",
	java::math::BigInteger_RecursiveOp>
{
public:

	static jni::ref<java::math::BigInteger_RecursiveOp_RecursiveMultiply> new_object(jni::ref<java::math::BigInteger> a, jni::ref<java::math::BigInteger> b, jboolean parallel, jint depth) { return base_::new_object(a, b, parallel, depth); }
	jni::ref<java::math::BigInteger> compute() { return call_method<"compute", jni::ref<java::math::BigInteger>>(); }

protected:

	BigInteger_RecursiveOp_RecursiveMultiply(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_MATH_BIGINTEGER_RECURSIVEOP_RECURSIVEMULTIPLY
