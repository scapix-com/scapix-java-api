// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_TEXT_RBCOLLATIONTABLES_FWD
#define SCAPIX_JAVA_API_JAVA_TEXT_RBCOLLATIONTABLES_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::text { class RBCollationTables; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::text::RBCollationTables>
{
	static constexpr fixed_string class_name = "java/text/RBCollationTables";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_TEXT_RBCOLLATIONTABLES_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_TEXT_RBCOLLATIONTABLES)
#define SCAPIX_JAVA_API_JAVA_TEXT_RBCOLLATIONTABLES

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::text::RBCollationTables : public jni::object_base<"java/text/RBCollationTables",
	java::lang::Object>
{
public:

	static jni::ref<java::text::RBCollationTables> new_object(jni::ref<java::lang::String> rules, jint decmp) { return base_::new_object(rules, decmp); }
	jni::ref<java::lang::String> getRules() { return call_method<"getRules", jni::ref<java::lang::String>>(); }
	jboolean isFrenchSec() { return call_method<"isFrenchSec", jboolean>(); }
	jboolean isSEAsianSwapping() { return call_method<"isSEAsianSwapping", jboolean>(); }

protected:

	RBCollationTables(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_TEXT_RBCOLLATIONTABLES
