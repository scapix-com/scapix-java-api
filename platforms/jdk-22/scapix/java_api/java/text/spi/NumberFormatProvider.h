// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/util/spi/LocaleServiceProvider.h>

#ifndef SCAPIX_JAVA_API_JAVA_TEXT_SPI_NUMBERFORMATPROVIDER_FWD
#define SCAPIX_JAVA_API_JAVA_TEXT_SPI_NUMBERFORMATPROVIDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::text::spi { class NumberFormatProvider; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::text::spi::NumberFormatProvider>
{
	static constexpr fixed_string class_name = "java/text/spi/NumberFormatProvider";
	using base_classes = std::tuple<scapix::java_api::java::util::spi::LocaleServiceProvider>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_TEXT_SPI_NUMBERFORMATPROVIDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_TEXT_SPI_NUMBERFORMATPROVIDER)
#define SCAPIX_JAVA_API_JAVA_TEXT_SPI_NUMBERFORMATPROVIDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/text/NumberFormat.h>
#include <scapix/java_api/java/text/NumberFormat_Style.h>
#include <scapix/java_api/java/util/Locale.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::text::spi::NumberFormatProvider : public jni::object_base<"java/text/spi/NumberFormatProvider",
	java::util::spi::LocaleServiceProvider>
{
public:

	jni::ref<java::text::NumberFormat> getCurrencyInstance(jni::ref<java::util::Locale> p1) { return call_method<"getCurrencyInstance", jni::ref<java::text::NumberFormat>>(p1); }
	jni::ref<java::text::NumberFormat> getIntegerInstance(jni::ref<java::util::Locale> p1) { return call_method<"getIntegerInstance", jni::ref<java::text::NumberFormat>>(p1); }
	jni::ref<java::text::NumberFormat> getNumberInstance(jni::ref<java::util::Locale> p1) { return call_method<"getNumberInstance", jni::ref<java::text::NumberFormat>>(p1); }
	jni::ref<java::text::NumberFormat> getPercentInstance(jni::ref<java::util::Locale> p1) { return call_method<"getPercentInstance", jni::ref<java::text::NumberFormat>>(p1); }
	jni::ref<java::text::NumberFormat> getCompactNumberInstance(jni::ref<java::util::Locale> locale, jni::ref<java::text::NumberFormat_Style> formatStyle) { return call_method<"getCompactNumberInstance", jni::ref<java::text::NumberFormat>>(locale, formatStyle); }

protected:

	NumberFormatProvider(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_TEXT_SPI_NUMBERFORMATPROVIDER
