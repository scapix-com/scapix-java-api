// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/io/Reader.h>

#ifndef SCAPIX_JAVA_API_JAVA_IO_PROXYINGCONSOLE_WRAPPINGREADER_FWD
#define SCAPIX_JAVA_API_JAVA_IO_PROXYINGCONSOLE_WRAPPINGREADER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::io { class ProxyingConsole_WrappingReader; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::io::ProxyingConsole_WrappingReader>
{
	static constexpr fixed_string class_name = "java/io/ProxyingConsole$WrappingReader";
	using base_classes = std::tuple<scapix::java_api::java::io::Reader>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_IO_PROXYINGCONSOLE_WRAPPINGREADER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_IO_PROXYINGCONSOLE_WRAPPINGREADER)
#define SCAPIX_JAVA_API_JAVA_IO_PROXYINGCONSOLE_WRAPPINGREADER

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::io::ProxyingConsole_WrappingReader : public jni::object_base<"java/io/ProxyingConsole$WrappingReader",
	java::io::Reader>
{
public:

	jint read(jni::ref<jni::array<jchar>> cbuf, jint off, jint len) { return call_method<"read", jint>(cbuf, off, len); }
	void close() { return call_method<"close", void>(); }

protected:

	ProxyingConsole_WrappingReader(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_IO_PROXYINGCONSOLE_WRAPPINGREADER
