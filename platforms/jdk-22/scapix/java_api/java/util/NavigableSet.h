// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/util/SortedSet.h>

#ifndef SCAPIX_JAVA_API_JAVA_UTIL_NAVIGABLESET_FWD
#define SCAPIX_JAVA_API_JAVA_UTIL_NAVIGABLESET_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::util { class NavigableSet; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::util::NavigableSet>
{
	static constexpr fixed_string class_name = "java/util/NavigableSet";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::util::SortedSet>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_NAVIGABLESET_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_UTIL_NAVIGABLESET)
#define SCAPIX_JAVA_API_JAVA_UTIL_NAVIGABLESET

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/util/Iterator.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::util::NavigableSet : public jni::object_base<"java/util/NavigableSet",
	java::lang::Object,
	java::util::SortedSet>
{
public:

	jni::ref<java::lang::Object> lower(jni::ref<java::lang::Object> p1) { return call_method<"lower", jni::ref<java::lang::Object>>(p1); }
	jni::ref<java::lang::Object> floor(jni::ref<java::lang::Object> p1) { return call_method<"floor", jni::ref<java::lang::Object>>(p1); }
	jni::ref<java::lang::Object> ceiling(jni::ref<java::lang::Object> p1) { return call_method<"ceiling", jni::ref<java::lang::Object>>(p1); }
	jni::ref<java::lang::Object> higher(jni::ref<java::lang::Object> p1) { return call_method<"higher", jni::ref<java::lang::Object>>(p1); }
	jni::ref<java::lang::Object> pollFirst() { return call_method<"pollFirst", jni::ref<java::lang::Object>>(); }
	jni::ref<java::lang::Object> pollLast() { return call_method<"pollLast", jni::ref<java::lang::Object>>(); }
	jni::ref<java::util::Iterator> iterator() { return call_method<"iterator", jni::ref<java::util::Iterator>>(); }
	jni::ref<java::util::NavigableSet> descendingSet() { return call_method<"descendingSet", jni::ref<java::util::NavigableSet>>(); }
	jni::ref<java::util::Iterator> descendingIterator() { return call_method<"descendingIterator", jni::ref<java::util::Iterator>>(); }
	jni::ref<java::util::NavigableSet> subSet(jni::ref<java::lang::Object> p1, jboolean p2, jni::ref<java::lang::Object> p3, jboolean p4) { return call_method<"subSet", jni::ref<java::util::NavigableSet>>(p1, p2, p3, p4); }
	jni::ref<java::util::NavigableSet> headSet(jni::ref<java::lang::Object> p1, jboolean p2) { return call_method<"headSet", jni::ref<java::util::NavigableSet>>(p1, p2); }
	jni::ref<java::util::NavigableSet> tailSet(jni::ref<java::lang::Object> p1, jboolean p2) { return call_method<"tailSet", jni::ref<java::util::NavigableSet>>(p1, p2); }
	jni::ref<java::util::SortedSet> subSet(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2) { return call_method<"subSet", jni::ref<java::util::SortedSet>>(p1, p2); }
	jni::ref<java::util::SortedSet> headSet(jni::ref<java::lang::Object> p1) { return call_method<"headSet", jni::ref<java::util::SortedSet>>(p1); }
	jni::ref<java::util::SortedSet> tailSet(jni::ref<java::lang::Object> p1) { return call_method<"tailSet", jni::ref<java::util::SortedSet>>(p1); }
	jni::ref<java::lang::Object> removeFirst() { return call_method<"removeFirst", jni::ref<java::lang::Object>>(); }
	jni::ref<java::lang::Object> removeLast() { return call_method<"removeLast", jni::ref<java::lang::Object>>(); }
	jni::ref<java::util::NavigableSet> reversed() { return call_method<"reversed", jni::ref<java::util::NavigableSet>>(); }

protected:

	NavigableSet(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_NAVIGABLESET
