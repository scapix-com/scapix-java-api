// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/util/stream/Node_OfDouble.h>

#ifndef SCAPIX_JAVA_API_JAVA_UTIL_STREAM_NODES_DOUBLEARRAYNODE_FWD
#define SCAPIX_JAVA_API_JAVA_UTIL_STREAM_NODES_DOUBLEARRAYNODE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::util::stream { class Nodes_DoubleArrayNode; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::util::stream::Nodes_DoubleArrayNode>
{
	static constexpr fixed_string class_name = "java/util/stream/Nodes$DoubleArrayNode";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::util::stream::Node_OfDouble>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_STREAM_NODES_DOUBLEARRAYNODE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_UTIL_STREAM_NODES_DOUBLEARRAYNODE)
#define SCAPIX_JAVA_API_JAVA_UTIL_STREAM_NODES_DOUBLEARRAYNODE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Spliterator_OfDouble.h>
#include <scapix/java_api/java/util/function/DoubleConsumer.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::util::stream::Nodes_DoubleArrayNode : public jni::object_base<"java/util/stream/Nodes$DoubleArrayNode",
	java::lang::Object,
	java::util::stream::Node_OfDouble>
{
public:

	jni::ref<java::util::Spliterator_OfDouble> spliterator() { return call_method<"spliterator", jni::ref<java::util::Spliterator_OfDouble>>(); }
	jni::ref<jni::array<jdouble>> asPrimitiveArray() { return call_method<"asPrimitiveArray", jni::ref<jni::array<jdouble>>>(); }
	void copyInto(jni::ref<jni::array<jdouble>> dest, jint destOffset) { return call_method<"copyInto", void>(dest, destOffset); }
	jlong count() { return call_method<"count", jlong>(); }
	void forEach(jni::ref<java::util::function::DoubleConsumer> consumer) { return call_method<"forEach", void>(consumer); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	Nodes_DoubleArrayNode(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_STREAM_NODES_DOUBLEARRAYNODE
