// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Enum.h>
#include <scapix/java_api/java/util/function/Supplier.h>
#include <scapix/java_api/java/util/function/BinaryOperator.h>
#include <scapix/java_api/java/util/function/BiConsumer.h>

#ifndef SCAPIX_JAVA_API_JAVA_UTIL_STREAM_GATHERERS_VALUE_FWD
#define SCAPIX_JAVA_API_JAVA_UTIL_STREAM_GATHERERS_VALUE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::util::stream { class Gatherers_Value; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::util::stream::Gatherers_Value>
{
	static constexpr fixed_string class_name = "java/util/stream/Gatherers$Value";
	using base_classes = std::tuple<scapix::java_api::java::lang::Enum, scapix::java_api::java::util::function::Supplier, scapix::java_api::java::util::function::BinaryOperator, scapix::java_api::java::util::function::BiConsumer>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_STREAM_GATHERERS_VALUE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_UTIL_STREAM_GATHERERS_VALUE)
#define SCAPIX_JAVA_API_JAVA_UTIL_STREAM_GATHERERS_VALUE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::util::stream::Gatherers_Value : public jni::object_base<"java/util/stream/Gatherers$Value",
	java::lang::Enum,
	java::util::function::Supplier,
	java::util::function::BinaryOperator,
	java::util::function::BiConsumer>
{
public:

	static jni::ref<java::util::stream::Gatherers_Value> DEFAULT() { return get_static_field<"DEFAULT", jni::ref<java::util::stream::Gatherers_Value>>(); }

	static jni::ref<jni::array<java::util::stream::Gatherers_Value>> values() { return call_static_method<"values", jni::ref<jni::array<java::util::stream::Gatherers_Value>>>(); }
	static jni::ref<java::util::stream::Gatherers_Value> valueOf(jni::ref<java::lang::String> name) { return call_static_method<"valueOf", jni::ref<java::util::stream::Gatherers_Value>>(name); }
	void accept(jni::ref<java::lang::Object> state, jni::ref<java::lang::Object> downstream) { return call_method<"accept", void>(state, downstream); }
	jni::ref<java::lang::Object> apply(jni::ref<java::lang::Object> left, jni::ref<java::lang::Object> right) { return call_method<"apply", jni::ref<java::lang::Object>>(left, right); }
	jni::ref<java::lang::Object> get() { return call_method<"get", jni::ref<java::lang::Object>>(); }

protected:

	Gatherers_Value(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_STREAM_GATHERERS_VALUE
