// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Record.h>
#include <scapix/java_api/java/util/stream/Collector.h>

#ifndef SCAPIX_JAVA_API_JAVA_UTIL_STREAM_COLLECTORS_COLLECTORIMPL_FWD
#define SCAPIX_JAVA_API_JAVA_UTIL_STREAM_COLLECTORS_COLLECTORIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::util::stream { class Collectors_CollectorImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::util::stream::Collectors_CollectorImpl>
{
	static constexpr fixed_string class_name = "java/util/stream/Collectors$CollectorImpl";
	using base_classes = std::tuple<scapix::java_api::java::lang::Record, scapix::java_api::java::util::stream::Collector>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_STREAM_COLLECTORS_COLLECTORIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_UTIL_STREAM_COLLECTORS_COLLECTORIMPL)
#define SCAPIX_JAVA_API_JAVA_UTIL_STREAM_COLLECTORS_COLLECTORIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Set.h>
#include <scapix/java_api/java/util/function/BiConsumer.h>
#include <scapix/java_api/java/util/function/BinaryOperator.h>
#include <scapix/java_api/java/util/function/Function.h>
#include <scapix/java_api/java/util/function/Supplier.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::util::stream::Collectors_CollectorImpl : public jni::object_base<"java/util/stream/Collectors$CollectorImpl",
	java::lang::Record,
	java::util::stream::Collector>
{
public:

	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jboolean equals(jni::ref<java::lang::Object> o) { return call_method<"equals", jboolean>(o); }
	jni::ref<java::util::function::Supplier> supplier() { return call_method<"supplier", jni::ref<java::util::function::Supplier>>(); }
	jni::ref<java::util::function::BiConsumer> accumulator() { return call_method<"accumulator", jni::ref<java::util::function::BiConsumer>>(); }
	jni::ref<java::util::function::BinaryOperator> combiner() { return call_method<"combiner", jni::ref<java::util::function::BinaryOperator>>(); }
	jni::ref<java::util::function::Function> finisher() { return call_method<"finisher", jni::ref<java::util::function::Function>>(); }
	jni::ref<java::util::Set> characteristics() { return call_method<"characteristics", jni::ref<java::util::Set>>(); }

protected:

	Collectors_CollectorImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_STREAM_COLLECTORS_COLLECTORIMPL
