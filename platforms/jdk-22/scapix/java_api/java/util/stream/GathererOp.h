// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/util/stream/ReferencePipeline.h>

#ifndef SCAPIX_JAVA_API_JAVA_UTIL_STREAM_GATHEREROP_FWD
#define SCAPIX_JAVA_API_JAVA_UTIL_STREAM_GATHEREROP_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::util::stream { class GathererOp; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::util::stream::GathererOp>
{
	static constexpr fixed_string class_name = "java/util/stream/GathererOp";
	using base_classes = std::tuple<scapix::java_api::java::util::stream::ReferencePipeline>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_STREAM_GATHEREROP_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_UTIL_STREAM_GATHEREROP)
#define SCAPIX_JAVA_API_JAVA_UTIL_STREAM_GATHEREROP

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/util/function/BiConsumer.h>
#include <scapix/java_api/java/util/function/Supplier.h>
#include <scapix/java_api/java/util/stream/Collector.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::util::stream::GathererOp : public jni::object_base<"java/util/stream/GathererOp",
	java::util::stream::ReferencePipeline>
{
public:

	jni::ref<java::lang::Object> collect(jni::ref<java::util::stream::Collector> c) { return call_method<"collect", jni::ref<java::lang::Object>>(c); }
	jni::ref<java::lang::Object> collect(jni::ref<java::util::function::Supplier> supplier, jni::ref<java::util::function::BiConsumer> accumulator, jni::ref<java::util::function::BiConsumer> combiner) { return call_method<"collect", jni::ref<java::lang::Object>>(supplier, accumulator, combiner); }

protected:

	GathererOp(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_STREAM_GATHEREROP
