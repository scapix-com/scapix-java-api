// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/util/AbstractCollection.h>

#ifndef SCAPIX_JAVA_API_JAVA_UTIL_IMMUTABLECOLLECTIONS_ABSTRACTIMMUTABLECOLLECTION_FWD
#define SCAPIX_JAVA_API_JAVA_UTIL_IMMUTABLECOLLECTIONS_ABSTRACTIMMUTABLECOLLECTION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::util { class ImmutableCollections_AbstractImmutableCollection; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::util::ImmutableCollections_AbstractImmutableCollection>
{
	static constexpr fixed_string class_name = "java/util/ImmutableCollections$AbstractImmutableCollection";
	using base_classes = std::tuple<scapix::java_api::java::util::AbstractCollection>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_IMMUTABLECOLLECTIONS_ABSTRACTIMMUTABLECOLLECTION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_UTIL_IMMUTABLECOLLECTIONS_ABSTRACTIMMUTABLECOLLECTION)
#define SCAPIX_JAVA_API_JAVA_UTIL_IMMUTABLECOLLECTIONS_ABSTRACTIMMUTABLECOLLECTION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/util/Collection.h>
#include <scapix/java_api/java/util/function/Predicate.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::util::ImmutableCollections_AbstractImmutableCollection : public jni::object_base<"java/util/ImmutableCollections$AbstractImmutableCollection",
	java::util::AbstractCollection>
{
public:

	jboolean add(jni::ref<java::lang::Object> e) { return call_method<"add", jboolean>(e); }
	jboolean addAll(jni::ref<java::util::Collection> c) { return call_method<"addAll", jboolean>(c); }
	void clear() { return call_method<"clear", void>(); }
	jboolean remove(jni::ref<java::lang::Object> o) { return call_method<"remove", jboolean>(o); }
	jboolean removeAll(jni::ref<java::util::Collection> c) { return call_method<"removeAll", jboolean>(c); }
	jboolean removeIf(jni::ref<java::util::function::Predicate> filter) { return call_method<"removeIf", jboolean>(filter); }
	jboolean retainAll(jni::ref<java::util::Collection> c) { return call_method<"retainAll", jboolean>(c); }

protected:

	ImmutableCollections_AbstractImmutableCollection(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_IMMUTABLECOLLECTIONS_ABSTRACTIMMUTABLECOLLECTION
