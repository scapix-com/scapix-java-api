// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/util/function/Supplier.h>

#ifndef SCAPIX_JAVA_API_JAVA_UTIL_CONCURRENT_STRUCTUREDTASKSCOPE_SUBTASK_FWD
#define SCAPIX_JAVA_API_JAVA_UTIL_CONCURRENT_STRUCTUREDTASKSCOPE_SUBTASK_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::util::concurrent { class StructuredTaskScope_Subtask; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::util::concurrent::StructuredTaskScope_Subtask>
{
	static constexpr fixed_string class_name = "java/util/concurrent/StructuredTaskScope$Subtask";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::util::function::Supplier>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_CONCURRENT_STRUCTUREDTASKSCOPE_SUBTASK_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_UTIL_CONCURRENT_STRUCTUREDTASKSCOPE_SUBTASK)
#define SCAPIX_JAVA_API_JAVA_UTIL_CONCURRENT_STRUCTUREDTASKSCOPE_SUBTASK

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Throwable.h>
#include <scapix/java_api/java/util/concurrent/Callable.h>
#include <scapix/java_api/java/util/concurrent/StructuredTaskScope_Subtask_State.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::util::concurrent::StructuredTaskScope_Subtask : public jni::object_base<"java/util/concurrent/StructuredTaskScope$Subtask",
	java::lang::Object,
	java::util::function::Supplier>
{
public:

	using State = StructuredTaskScope_Subtask_State;

	jni::ref<java::util::concurrent::Callable> task() { return call_method<"task", jni::ref<java::util::concurrent::Callable>>(); }
	jni::ref<java::util::concurrent::StructuredTaskScope_Subtask_State> state() { return call_method<"state", jni::ref<java::util::concurrent::StructuredTaskScope_Subtask_State>>(); }
	jni::ref<java::lang::Object> get() { return call_method<"get", jni::ref<java::lang::Object>>(); }
	jni::ref<java::lang::Throwable> exception() { return call_method<"exception", jni::ref<java::lang::Throwable>>(); }

protected:

	StructuredTaskScope_Subtask(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_CONCURRENT_STRUCTUREDTASKSCOPE_SUBTASK
