// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/util/ServiceLoader_Provider.h>

#ifndef SCAPIX_JAVA_API_JAVA_UTIL_SERVICELOADER_PROVIDERIMPL_FWD
#define SCAPIX_JAVA_API_JAVA_UTIL_SERVICELOADER_PROVIDERIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::util { class ServiceLoader_ProviderImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::util::ServiceLoader_ProviderImpl>
{
	static constexpr fixed_string class_name = "java/util/ServiceLoader$ProviderImpl";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::util::ServiceLoader_Provider>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_SERVICELOADER_PROVIDERIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_UTIL_SERVICELOADER_PROVIDERIMPL)
#define SCAPIX_JAVA_API_JAVA_UTIL_SERVICELOADER_PROVIDERIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Class.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::util::ServiceLoader_ProviderImpl : public jni::object_base<"java/util/ServiceLoader$ProviderImpl",
	java::lang::Object,
	java::util::ServiceLoader_Provider>
{
public:

	jni::ref<java::lang::Class> type() { return call_method<"type", jni::ref<java::lang::Class>>(); }
	jni::ref<java::lang::Object> get() { return call_method<"get", jni::ref<java::lang::Object>>(); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jboolean equals(jni::ref<java::lang::Object> ob) { return call_method<"equals", jboolean>(ob); }

protected:

	ServiceLoader_ProviderImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_SERVICELOADER_PROVIDERIMPL
