// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_SECURITY_ACCESSCONTROLCONTEXT_FWD
#define SCAPIX_JAVA_API_JAVA_SECURITY_ACCESSCONTROLCONTEXT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::security { class AccessControlContext; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::security::AccessControlContext>
{
	static constexpr fixed_string class_name = "java/security/AccessControlContext";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_SECURITY_ACCESSCONTROLCONTEXT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_SECURITY_ACCESSCONTROLCONTEXT)
#define SCAPIX_JAVA_API_JAVA_SECURITY_ACCESSCONTROLCONTEXT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/security/DomainCombiner.h>
#include <scapix/java_api/java/security/Permission.h>
#include <scapix/java_api/java/security/ProtectionDomain.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::security::AccessControlContext : public jni::object_base<"java/security/AccessControlContext",
	java::lang::Object>
{
public:

	static jni::ref<java::security::AccessControlContext> new_object(jni::ref<jni::array<java::security::ProtectionDomain>> context) { return base_::new_object(context); }
	static jni::ref<java::security::AccessControlContext> new_object(jni::ref<java::security::AccessControlContext> acc, jni::ref<java::security::DomainCombiner> combiner) { return base_::new_object(acc, combiner); }
	jni::ref<java::security::DomainCombiner> getDomainCombiner() { return call_method<"getDomainCombiner", jni::ref<java::security::DomainCombiner>>(); }
	void checkPermission(jni::ref<java::security::Permission> perm) { return call_method<"checkPermission", void>(perm); }
	jboolean equals(jni::ref<java::lang::Object> obj) { return call_method<"equals", jboolean>(obj); }
	jint hashCode() { return call_method<"hashCode", jint>(); }

protected:

	AccessControlContext(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_SECURITY_ACCESSCONTROLCONTEXT
