// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_LANG_PROCESSBUILDER_REDIRECT_FWD
#define SCAPIX_JAVA_API_JAVA_LANG_PROCESSBUILDER_REDIRECT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::lang { class ProcessBuilder_Redirect; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::lang::ProcessBuilder_Redirect>
{
	static constexpr fixed_string class_name = "java/lang/ProcessBuilder$Redirect";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_PROCESSBUILDER_REDIRECT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_LANG_PROCESSBUILDER_REDIRECT)
#define SCAPIX_JAVA_API_JAVA_LANG_PROCESSBUILDER_REDIRECT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/File.h>
#include <scapix/java_api/java/lang/ProcessBuilder_Redirect_Type.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::lang::ProcessBuilder_Redirect : public jni::object_base<"java/lang/ProcessBuilder$Redirect",
	java::lang::Object>
{
public:

	using Type = ProcessBuilder_Redirect_Type;

	static jni::ref<java::lang::ProcessBuilder_Redirect> PIPE() { return get_static_field<"PIPE", jni::ref<java::lang::ProcessBuilder_Redirect>>(); }
	static jni::ref<java::lang::ProcessBuilder_Redirect> INHERIT() { return get_static_field<"INHERIT", jni::ref<java::lang::ProcessBuilder_Redirect>>(); }
	static jni::ref<java::lang::ProcessBuilder_Redirect> DISCARD() { return get_static_field<"DISCARD", jni::ref<java::lang::ProcessBuilder_Redirect>>(); }

	jni::ref<java::lang::ProcessBuilder_Redirect_Type> type() { return call_method<"type", jni::ref<java::lang::ProcessBuilder_Redirect_Type>>(); }
	jni::ref<java::io::File> file() { return call_method<"file", jni::ref<java::io::File>>(); }
	static jni::ref<java::lang::ProcessBuilder_Redirect> from(jni::ref<java::io::File> file) { return call_static_method<"from", jni::ref<java::lang::ProcessBuilder_Redirect>>(file); }
	static jni::ref<java::lang::ProcessBuilder_Redirect> to(jni::ref<java::io::File> file) { return call_static_method<"to", jni::ref<java::lang::ProcessBuilder_Redirect>>(file); }
	static jni::ref<java::lang::ProcessBuilder_Redirect> appendTo(jni::ref<java::io::File> file) { return call_static_method<"appendTo", jni::ref<java::lang::ProcessBuilder_Redirect>>(file); }
	jboolean equals(jni::ref<java::lang::Object> obj) { return call_method<"equals", jboolean>(obj); }
	jint hashCode() { return call_method<"hashCode", jint>(); }

protected:

	ProcessBuilder_Redirect(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_PROCESSBUILDER_REDIRECT
