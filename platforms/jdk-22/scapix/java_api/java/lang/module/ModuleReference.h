// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_LANG_MODULE_MODULEREFERENCE_FWD
#define SCAPIX_JAVA_API_JAVA_LANG_MODULE_MODULEREFERENCE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::lang::module { class ModuleReference; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::lang::module::ModuleReference>
{
	static constexpr fixed_string class_name = "java/lang/module/ModuleReference";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_MODULE_MODULEREFERENCE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_LANG_MODULE_MODULEREFERENCE)
#define SCAPIX_JAVA_API_JAVA_LANG_MODULE_MODULEREFERENCE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/module/ModuleDescriptor.h>
#include <scapix/java_api/java/lang/module/ModuleReader.h>
#include <scapix/java_api/java/util/Optional.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::lang::module::ModuleReference : public jni::object_base<"java/lang/module/ModuleReference",
	java::lang::Object>
{
public:

	jni::ref<java::lang::module::ModuleDescriptor> descriptor() { return call_method<"descriptor", jni::ref<java::lang::module::ModuleDescriptor>>(); }
	jni::ref<java::util::Optional> location() { return call_method<"location", jni::ref<java::util::Optional>>(); }
	jni::ref<java::lang::module::ModuleReader> open() { return call_method<"open", jni::ref<java::lang::module::ModuleReader>>(); }

protected:

	ModuleReference(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_MODULE_MODULEREFERENCE
