// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/classfile/WritableElement.h>
#include <scapix/java_api/java/lang/classfile/CompoundElement.h>
#include <scapix/java_api/java/lang/classfile/AttributedElement.h>
#include <scapix/java_api/java/lang/classfile/ClassElement.h>

#ifndef SCAPIX_JAVA_API_JAVA_LANG_CLASSFILE_METHODMODEL_FWD
#define SCAPIX_JAVA_API_JAVA_LANG_CLASSFILE_METHODMODEL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::lang::classfile { class MethodModel; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::lang::classfile::MethodModel>
{
	static constexpr fixed_string class_name = "java/lang/classfile/MethodModel";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::lang::classfile::WritableElement, scapix::java_api::java::lang::classfile::CompoundElement, scapix::java_api::java::lang::classfile::AttributedElement, scapix::java_api::java::lang::classfile::ClassElement>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_CLASSFILE_METHODMODEL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_LANG_CLASSFILE_METHODMODEL)
#define SCAPIX_JAVA_API_JAVA_LANG_CLASSFILE_METHODMODEL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/classfile/AccessFlags.h>
#include <scapix/java_api/java/lang/classfile/constantpool/Utf8Entry.h>
#include <scapix/java_api/java/lang/constant/MethodTypeDesc.h>
#include <scapix/java_api/java/util/Optional.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::lang::classfile::MethodModel : public jni::object_base<"java/lang/classfile/MethodModel",
	java::lang::Object,
	java::lang::classfile::WritableElement,
	java::lang::classfile::CompoundElement,
	java::lang::classfile::AttributedElement,
	java::lang::classfile::ClassElement>
{
public:

	jni::ref<java::lang::classfile::AccessFlags> flags() { return call_method<"flags", jni::ref<java::lang::classfile::AccessFlags>>(); }
	jni::ref<java::util::Optional> parent() { return call_method<"parent", jni::ref<java::util::Optional>>(); }
	jni::ref<java::lang::classfile::constantpool::Utf8Entry> methodName() { return call_method<"methodName", jni::ref<java::lang::classfile::constantpool::Utf8Entry>>(); }
	jni::ref<java::lang::classfile::constantpool::Utf8Entry> methodType() { return call_method<"methodType", jni::ref<java::lang::classfile::constantpool::Utf8Entry>>(); }
	jni::ref<java::lang::constant::MethodTypeDesc> methodTypeSymbol() { return call_method<"methodTypeSymbol", jni::ref<java::lang::constant::MethodTypeDesc>>(); }
	jni::ref<java::util::Optional> code() { return call_method<"code", jni::ref<java::util::Optional>>(); }

protected:

	MethodModel(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_CLASSFILE_METHODMODEL
