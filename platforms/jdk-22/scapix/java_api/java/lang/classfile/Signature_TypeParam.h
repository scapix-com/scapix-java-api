// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_LANG_CLASSFILE_SIGNATURE_TYPEPARAM_FWD
#define SCAPIX_JAVA_API_JAVA_LANG_CLASSFILE_SIGNATURE_TYPEPARAM_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::lang::classfile { class Signature_TypeParam; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::lang::classfile::Signature_TypeParam>
{
	static constexpr fixed_string class_name = "java/lang/classfile/Signature$TypeParam";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_CLASSFILE_SIGNATURE_TYPEPARAM_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_LANG_CLASSFILE_SIGNATURE_TYPEPARAM)
#define SCAPIX_JAVA_API_JAVA_LANG_CLASSFILE_SIGNATURE_TYPEPARAM

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/classfile/Signature_RefTypeSig.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/java/util/Optional.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::lang::classfile::Signature_TypeParam : public jni::object_base<"java/lang/classfile/Signature$TypeParam",
	java::lang::Object>
{
public:

	jni::ref<java::lang::String> identifier() { return call_method<"identifier", jni::ref<java::lang::String>>(); }
	jni::ref<java::util::Optional> classBound() { return call_method<"classBound", jni::ref<java::util::Optional>>(); }
	jni::ref<java::util::List> interfaceBounds() { return call_method<"interfaceBounds", jni::ref<java::util::List>>(); }
	static jni::ref<java::lang::classfile::Signature_TypeParam> of(jni::ref<java::lang::String> identifier, jni::ref<java::lang::classfile::Signature_RefTypeSig> classBound, jni::ref<jni::array<java::lang::classfile::Signature_RefTypeSig>> interfaceBounds) { return call_static_method<"of", jni::ref<java::lang::classfile::Signature_TypeParam>>(identifier, classBound, interfaceBounds); }
	static jni::ref<java::lang::classfile::Signature_TypeParam> of(jni::ref<java::lang::String> identifier, jni::ref<java::util::Optional> classBound, jni::ref<jni::array<java::lang::classfile::Signature_RefTypeSig>> interfaceBounds) { return call_static_method<"of", jni::ref<java::lang::classfile::Signature_TypeParam>>(identifier, classBound, interfaceBounds); }

protected:

	Signature_TypeParam(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_CLASSFILE_SIGNATURE_TYPEPARAM
