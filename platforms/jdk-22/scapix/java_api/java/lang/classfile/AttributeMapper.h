// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_LANG_CLASSFILE_ATTRIBUTEMAPPER_FWD
#define SCAPIX_JAVA_API_JAVA_LANG_CLASSFILE_ATTRIBUTEMAPPER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::lang::classfile { class AttributeMapper; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::lang::classfile::AttributeMapper>
{
	static constexpr fixed_string class_name = "java/lang/classfile/AttributeMapper";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_CLASSFILE_ATTRIBUTEMAPPER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_LANG_CLASSFILE_ATTRIBUTEMAPPER)
#define SCAPIX_JAVA_API_JAVA_LANG_CLASSFILE_ATTRIBUTEMAPPER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/classfile/AttributeMapper_AttributeStability.h>
#include <scapix/java_api/java/lang/classfile/AttributedElement.h>
#include <scapix/java_api/java/lang/classfile/BufWriter.h>
#include <scapix/java_api/java/lang/classfile/ClassReader.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::lang::classfile::AttributeMapper : public jni::object_base<"java/lang/classfile/AttributeMapper",
	java::lang::Object>
{
public:

	using AttributeStability = AttributeMapper_AttributeStability;

	jni::ref<java::lang::String> name() { return call_method<"name", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::Object> readAttribute(jni::ref<java::lang::classfile::AttributedElement> p1, jni::ref<java::lang::classfile::ClassReader> p2, jint p3) { return call_method<"readAttribute", jni::ref<java::lang::Object>>(p1, p2, p3); }
	void writeAttribute(jni::ref<java::lang::classfile::BufWriter> p1, jni::ref<java::lang::Object> p2) { return call_method<"writeAttribute", void>(p1, p2); }
	jboolean allowMultiple() { return call_method<"allowMultiple", jboolean>(); }
	jni::ref<java::lang::classfile::AttributeMapper_AttributeStability> stability() { return call_method<"stability", jni::ref<java::lang::classfile::AttributeMapper_AttributeStability>>(); }

protected:

	AttributeMapper(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_CLASSFILE_ATTRIBUTEMAPPER
