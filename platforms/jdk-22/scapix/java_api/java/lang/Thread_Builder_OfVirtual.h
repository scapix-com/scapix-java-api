// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/Thread_Builder.h>

#ifndef SCAPIX_JAVA_API_JAVA_LANG_THREAD_BUILDER_OFVIRTUAL_FWD
#define SCAPIX_JAVA_API_JAVA_LANG_THREAD_BUILDER_OFVIRTUAL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::lang { class Thread_Builder_OfVirtual; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::lang::Thread_Builder_OfVirtual>
{
	static constexpr fixed_string class_name = "java/lang/Thread$Builder$OfVirtual";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::lang::Thread_Builder>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_THREAD_BUILDER_OFVIRTUAL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_LANG_THREAD_BUILDER_OFVIRTUAL)
#define SCAPIX_JAVA_API_JAVA_LANG_THREAD_BUILDER_OFVIRTUAL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/Thread_UncaughtExceptionHandler.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::lang::Thread_Builder_OfVirtual : public jni::object_base<"java/lang/Thread$Builder$OfVirtual",
	java::lang::Object,
	java::lang::Thread_Builder>
{
public:

	jni::ref<java::lang::Thread_Builder_OfVirtual> name(jni::ref<java::lang::String> p1) { return call_method<"name", jni::ref<java::lang::Thread_Builder_OfVirtual>>(p1); }
	jni::ref<java::lang::Thread_Builder_OfVirtual> name(jni::ref<java::lang::String> p1, jlong p2) { return call_method<"name", jni::ref<java::lang::Thread_Builder_OfVirtual>>(p1, p2); }
	jni::ref<java::lang::Thread_Builder_OfVirtual> inheritInheritableThreadLocals(jboolean p1) { return call_method<"inheritInheritableThreadLocals", jni::ref<java::lang::Thread_Builder_OfVirtual>>(p1); }
	jni::ref<java::lang::Thread_Builder_OfVirtual> uncaughtExceptionHandler(jni::ref<java::lang::Thread_UncaughtExceptionHandler> p1) { return call_method<"uncaughtExceptionHandler", jni::ref<java::lang::Thread_Builder_OfVirtual>>(p1); }

protected:

	Thread_Builder_OfVirtual(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_THREAD_BUILDER_OFVIRTUAL
