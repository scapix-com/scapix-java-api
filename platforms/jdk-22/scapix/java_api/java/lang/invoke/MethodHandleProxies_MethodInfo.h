// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Record.h>

#ifndef SCAPIX_JAVA_API_JAVA_LANG_INVOKE_METHODHANDLEPROXIES_METHODINFO_FWD
#define SCAPIX_JAVA_API_JAVA_LANG_INVOKE_METHODHANDLEPROXIES_METHODINFO_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::lang::invoke { class MethodHandleProxies_MethodInfo; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::lang::invoke::MethodHandleProxies_MethodInfo>
{
	static constexpr fixed_string class_name = "java/lang/invoke/MethodHandleProxies$MethodInfo";
	using base_classes = std::tuple<scapix::java_api::java::lang::Record>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_INVOKE_METHODHANDLEPROXIES_METHODINFO_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_LANG_INVOKE_METHODHANDLEPROXIES_METHODINFO)
#define SCAPIX_JAVA_API_JAVA_LANG_INVOKE_METHODHANDLEPROXIES_METHODINFO

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/constant/MethodTypeDesc.h>
#include <scapix/java_api/java/util/List.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::lang::invoke::MethodHandleProxies_MethodInfo : public jni::object_base<"java/lang/invoke/MethodHandleProxies$MethodInfo",
	java::lang::Record>
{
public:

	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jboolean equals(jni::ref<java::lang::Object> o) { return call_method<"equals", jboolean>(o); }
	jni::ref<java::lang::constant::MethodTypeDesc> desc() { return call_method<"desc", jni::ref<java::lang::constant::MethodTypeDesc>>(); }
	jni::ref<java::util::List> thrown() { return call_method<"thrown", jni::ref<java::util::List>>(); }
	jni::ref<java::lang::String> fieldName() { return call_method<"fieldName", jni::ref<java::lang::String>>(); }

protected:

	MethodHandleProxies_MethodInfo(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_INVOKE_METHODHANDLEPROXIES_METHODINFO
