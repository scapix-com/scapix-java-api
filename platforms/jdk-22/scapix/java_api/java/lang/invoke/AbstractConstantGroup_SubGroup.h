// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/invoke/AbstractConstantGroup.h>

#ifndef SCAPIX_JAVA_API_JAVA_LANG_INVOKE_ABSTRACTCONSTANTGROUP_SUBGROUP_FWD
#define SCAPIX_JAVA_API_JAVA_LANG_INVOKE_ABSTRACTCONSTANTGROUP_SUBGROUP_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::lang::invoke { class AbstractConstantGroup_SubGroup; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::lang::invoke::AbstractConstantGroup_SubGroup>
{
	static constexpr fixed_string class_name = "java/lang/invoke/AbstractConstantGroup$SubGroup";
	using base_classes = std::tuple<scapix::java_api::java::lang::invoke::AbstractConstantGroup>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_INVOKE_ABSTRACTCONSTANTGROUP_SUBGROUP_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_LANG_INVOKE_ABSTRACTCONSTANTGROUP_SUBGROUP)
#define SCAPIX_JAVA_API_JAVA_LANG_INVOKE_ABSTRACTCONSTANTGROUP_SUBGROUP

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/invoke/ConstantGroup.h>
#include <scapix/java_api/java/util/List.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::lang::invoke::AbstractConstantGroup_SubGroup : public jni::object_base<"java/lang/invoke/AbstractConstantGroup$SubGroup",
	java::lang::invoke::AbstractConstantGroup>
{
public:

	jni::ref<java::lang::Object> get(jint index) { return call_method<"get", jni::ref<java::lang::Object>>(index); }
	jni::ref<java::lang::Object> get(jint index, jni::ref<java::lang::Object> ifNotPresent) { return call_method<"get", jni::ref<java::lang::Object>>(index, ifNotPresent); }
	jboolean isPresent(jint index) { return call_method<"isPresent", jboolean>(index); }
	jni::ref<java::lang::invoke::ConstantGroup> subGroup(jint start, jint end) { return call_method<"subGroup", jni::ref<java::lang::invoke::ConstantGroup>>(start, end); }
	jni::ref<java::util::List> asList() { return call_method<"asList", jni::ref<java::util::List>>(); }
	jni::ref<java::util::List> asList(jni::ref<java::lang::Object> ifNotPresent) { return call_method<"asList", jni::ref<java::util::List>>(ifNotPresent); }
	jint copyConstants(jint start, jint end, jni::ref<jni::array<java::lang::Object>> buf, jint pos) { return call_method<"copyConstants", jint>(start, end, buf, pos); }
	jint copyConstants(jint start, jint end, jni::ref<jni::array<java::lang::Object>> buf, jint pos, jni::ref<java::lang::Object> ifNotPresent) { return call_method<"copyConstants", jint>(start, end, buf, pos, ifNotPresent); }

protected:

	AbstractConstantGroup_SubGroup(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_INVOKE_ABSTRACTCONSTANTGROUP_SUBGROUP
