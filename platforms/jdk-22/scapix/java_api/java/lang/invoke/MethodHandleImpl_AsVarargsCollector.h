// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/invoke/DelegatingMethodHandle.h>

#ifndef SCAPIX_JAVA_API_JAVA_LANG_INVOKE_METHODHANDLEIMPL_ASVARARGSCOLLECTOR_FWD
#define SCAPIX_JAVA_API_JAVA_LANG_INVOKE_METHODHANDLEIMPL_ASVARARGSCOLLECTOR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::lang::invoke { class MethodHandleImpl_AsVarargsCollector; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::lang::invoke::MethodHandleImpl_AsVarargsCollector>
{
	static constexpr fixed_string class_name = "java/lang/invoke/MethodHandleImpl$AsVarargsCollector";
	using base_classes = std::tuple<scapix::java_api::java::lang::invoke::DelegatingMethodHandle>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_INVOKE_METHODHANDLEIMPL_ASVARARGSCOLLECTOR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_LANG_INVOKE_METHODHANDLEIMPL_ASVARARGSCOLLECTOR)
#define SCAPIX_JAVA_API_JAVA_LANG_INVOKE_METHODHANDLEIMPL_ASVARARGSCOLLECTOR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/invoke/MethodHandle.h>
#include <scapix/java_api/java/lang/invoke/MethodType.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::lang::invoke::MethodHandleImpl_AsVarargsCollector : public jni::object_base<"java/lang/invoke/MethodHandleImpl$AsVarargsCollector",
	java::lang::invoke::DelegatingMethodHandle>
{
public:

	jboolean isVarargsCollector() { return call_method<"isVarargsCollector", jboolean>(); }
	jni::ref<java::lang::invoke::MethodHandle> asFixedArity() { return call_method<"asFixedArity", jni::ref<java::lang::invoke::MethodHandle>>(); }
	jni::ref<java::lang::invoke::MethodHandle> withVarargs(jboolean makeVarargs) { return call_method<"withVarargs", jni::ref<java::lang::invoke::MethodHandle>>(makeVarargs); }
	jni::ref<java::lang::invoke::MethodHandle> asTypeUncached(jni::ref<java::lang::invoke::MethodType> newType) { return call_method<"asTypeUncached", jni::ref<java::lang::invoke::MethodHandle>>(newType); }
	jni::ref<java::lang::Object> invokeWithArguments(jni::ref<jni::array<java::lang::Object>> arguments) { return call_method<"invokeWithArguments", jni::ref<java::lang::Object>>(arguments); }

protected:

	MethodHandleImpl_AsVarargsCollector(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_INVOKE_METHODHANDLEIMPL_ASVARARGSCOLLECTOR
