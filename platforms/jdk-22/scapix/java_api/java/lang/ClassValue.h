// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_LANG_CLASSVALUE_FWD
#define SCAPIX_JAVA_API_JAVA_LANG_CLASSVALUE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::lang { class ClassValue; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::lang::ClassValue>
{
	static constexpr fixed_string class_name = "java/lang/ClassValue";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_CLASSVALUE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_LANG_CLASSVALUE)
#define SCAPIX_JAVA_API_JAVA_LANG_CLASSVALUE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Class.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::lang::ClassValue : public jni::object_base<"java/lang/ClassValue",
	java::lang::Object>
{
public:

	jni::ref<java::lang::Object> get(jni::ref<java::lang::Class> type) { return call_method<"get", jni::ref<java::lang::Object>>(type); }
	void remove(jni::ref<java::lang::Class> type) { return call_method<"remove", void>(type); }

protected:

	ClassValue(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_CLASSVALUE
