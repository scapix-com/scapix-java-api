// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_EVENT_THROWABLETRACER_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_EVENT_THROWABLETRACER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::event { class ThrowableTracer; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::event::ThrowableTracer>
{
	static constexpr fixed_string class_name = "jdk/internal/event/ThrowableTracer";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_EVENT_THROWABLETRACER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_EVENT_THROWABLETRACER)
#define SCAPIX_JAVA_API_JDK_INTERNAL_EVENT_THROWABLETRACER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::event::ThrowableTracer : public jni::object_base<"jdk/internal/event/ThrowableTracer",
	java::lang::Object>
{
public:

	static jni::ref<jdk::internal::event::ThrowableTracer> new_object() { return base_::new_object(); }
	static void enable() { return call_static_method<"enable", void>(); }
	static void traceError(jni::ref<java::lang::Class> clazz, jni::ref<java::lang::String> message) { return call_static_method<"traceError", void>(clazz, message); }
	static void traceThrowable(jni::ref<java::lang::Class> clazz, jni::ref<java::lang::String> message) { return call_static_method<"traceThrowable", void>(clazz, message); }
	static void emitStatistics() { return call_static_method<"emitStatistics", void>(); }

protected:

	ThrowableTracer(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_EVENT_THROWABLETRACER
