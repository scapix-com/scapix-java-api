// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/jdk/internal/event/Event.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_EVENT_ERRORTHROWNEVENT_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_EVENT_ERRORTHROWNEVENT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::event { class ErrorThrownEvent; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::event::ErrorThrownEvent>
{
	static constexpr fixed_string class_name = "jdk/internal/event/ErrorThrownEvent";
	using base_classes = std::tuple<scapix::java_api::jdk::internal::event::Event>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_EVENT_ERRORTHROWNEVENT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_EVENT_ERRORTHROWNEVENT)
#define SCAPIX_JAVA_API_JDK_INTERNAL_EVENT_ERRORTHROWNEVENT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::event::ErrorThrownEvent : public jni::object_base<"jdk/internal/event/ErrorThrownEvent",
	jdk::internal::event::Event>
{
public:

	jni::ref<java::lang::String> message() { return get_field<"message", jni::ref<java::lang::String>>(); }
	void message(jni::ref<java::lang::String> v) { set_field<"message", jni::ref<java::lang::String>>(v); }
	jni::ref<java::lang::Class> thrownClass() { return get_field<"thrownClass", jni::ref<java::lang::Class>>(); }
	void thrownClass(jni::ref<java::lang::Class> v) { set_field<"thrownClass", jni::ref<java::lang::Class>>(v); }

	static jni::ref<jdk::internal::event::ErrorThrownEvent> new_object() { return base_::new_object(); }
	static void commit(jlong start, jni::ref<java::lang::String> p2, jni::ref<java::lang::Class> message) { return call_static_method<"commit", void>(start, p2, message); }
	static jboolean enabled() { return call_static_method<"enabled", jboolean>(); }
	static jlong timestamp() { return call_static_method<"timestamp", jlong>(); }

protected:

	ErrorThrownEvent(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_EVENT_ERRORTHROWNEVENT
