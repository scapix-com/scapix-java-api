// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_MODULE_MODULEHASHES_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_MODULE_MODULEHASHES_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::module { class ModuleHashes; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::module::ModuleHashes>
{
	static constexpr fixed_string class_name = "jdk/internal/module/ModuleHashes";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_MODULE_MODULEHASHES_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_MODULE_MODULEHASHES)
#define SCAPIX_JAVA_API_JDK_INTERNAL_MODULE_MODULEHASHES

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Map.h>
#include <scapix/java_api/java/util/Set.h>
#include <scapix/java_api/jdk/internal/module/ModuleHashes_Builder.h>
#include <scapix/java_api/jdk/internal/module/ModuleHashes_HashSupplier.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::module::ModuleHashes : public jni::object_base<"jdk/internal/module/ModuleHashes",
	java::lang::Object>
{
public:

	using Builder = ModuleHashes_Builder;
	using HashSupplier = ModuleHashes_HashSupplier;

	jni::ref<java::lang::String> algorithm() { return call_method<"algorithm", jni::ref<java::lang::String>>(); }
	jni::ref<java::util::Set> names() { return call_method<"names", jni::ref<java::util::Set>>(); }
	jni::ref<jni::array<jbyte>> hashFor(jni::ref<java::lang::String> mn) { return call_method<"hashFor", jni::ref<jni::array<jbyte>>>(mn); }
	jni::ref<java::util::Map> hashes() { return call_method<"hashes", jni::ref<java::util::Map>>(); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jboolean equals(jni::ref<java::lang::Object> obj) { return call_method<"equals", jboolean>(obj); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	ModuleHashes(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_MODULE_MODULEHASHES
