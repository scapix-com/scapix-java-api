// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_LOADER_NATIVELIBRARIES_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_LOADER_NATIVELIBRARIES_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::loader { class NativeLibraries; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::loader::NativeLibraries>
{
	static constexpr fixed_string class_name = "jdk/internal/loader/NativeLibraries";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_LOADER_NATIVELIBRARIES_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_LOADER_NATIVELIBRARIES)
#define SCAPIX_JAVA_API_JDK_INTERNAL_LOADER_NATIVELIBRARIES

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/File.h>
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/ClassLoader.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/jdk/internal/loader/NativeLibrary.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::loader::NativeLibraries : public jni::object_base<"jdk/internal/loader/NativeLibraries",
	java::lang::Object>
{
public:

	static jni::ref<jdk::internal::loader::NativeLibraries> newInstance(jni::ref<java::lang::ClassLoader> loader) { return call_static_method<"newInstance", jni::ref<jdk::internal::loader::NativeLibraries>>(loader); }
	jlong find(jni::ref<java::lang::String> name) { return call_method<"find", jlong>(name); }
	jni::ref<jdk::internal::loader::NativeLibrary> loadLibrary(jni::ref<java::lang::Class> fromClass, jni::ref<java::io::File> file) { return call_method<"loadLibrary", jni::ref<jdk::internal::loader::NativeLibrary>>(fromClass, file); }
	jni::ref<jdk::internal::loader::NativeLibrary> loadLibrary(jni::ref<java::lang::String> name) { return call_method<"loadLibrary", jni::ref<jdk::internal::loader::NativeLibrary>>(name); }
	jni::ref<jdk::internal::loader::NativeLibrary> loadLibrary(jni::ref<java::lang::Class> fromClass, jni::ref<java::lang::String> name) { return call_method<"loadLibrary", jni::ref<jdk::internal::loader::NativeLibrary>>(fromClass, name); }

protected:

	NativeLibraries(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_LOADER_NATIVELIBRARIES
