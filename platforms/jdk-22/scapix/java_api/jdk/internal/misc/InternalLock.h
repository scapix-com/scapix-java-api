// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_MISC_INTERNALLOCK_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_MISC_INTERNALLOCK_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::misc { class InternalLock; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::misc::InternalLock>
{
	static constexpr fixed_string class_name = "jdk/internal/misc/InternalLock";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_MISC_INTERNALLOCK_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_MISC_INTERNALLOCK)
#define SCAPIX_JAVA_API_JDK_INTERNAL_MISC_INTERNALLOCK

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::misc::InternalLock : public jni::object_base<"jdk/internal/misc/InternalLock",
	java::lang::Object>
{
public:

	static jni::ref<jdk::internal::misc::InternalLock> newLockOrNull() { return call_static_method<"newLockOrNull", jni::ref<jdk::internal::misc::InternalLock>>(); }
	static jni::ref<java::lang::Object> newLockOr(jni::ref<java::lang::Object> obj) { return call_static_method<"newLockOr", jni::ref<java::lang::Object>>(obj); }
	jboolean tryLock() { return call_method<"tryLock", jboolean>(); }
	void lock() { return call_method<"lock", void>(); }
	void unlock() { return call_method<"unlock", void>(); }
	jboolean isHeldByCurrentThread() { return call_method<"isHeldByCurrentThread", jboolean>(); }

protected:

	InternalLock(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_MISC_INTERNALLOCK
