// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_MISC_THREADTRACKER_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_MISC_THREADTRACKER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::misc { class ThreadTracker; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::misc::ThreadTracker>
{
	static constexpr fixed_string class_name = "jdk/internal/misc/ThreadTracker";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_MISC_THREADTRACKER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_MISC_THREADTRACKER)
#define SCAPIX_JAVA_API_JDK_INTERNAL_MISC_THREADTRACKER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Thread.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::misc::ThreadTracker : public jni::object_base<"jdk/internal/misc/ThreadTracker",
	java::lang::Object>
{
public:

	static jni::ref<jdk::internal::misc::ThreadTracker> new_object() { return base_::new_object(); }
	jni::ref<java::lang::Object> tryBegin() { return call_method<"tryBegin", jni::ref<java::lang::Object>>(); }
	jni::ref<java::lang::Object> begin() { return call_method<"begin", jni::ref<java::lang::Object>>(); }
	void end(jni::ref<java::lang::Object> key) { return call_method<"end", void>(key); }
	jboolean contains(jni::ref<java::lang::Thread> thread) { return call_method<"contains", jboolean>(thread); }

protected:

	ThreadTracker(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_MISC_THREADTRACKER
