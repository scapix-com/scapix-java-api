// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_VM_THREADDUMPER_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_VM_THREADDUMPER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::vm { class ThreadDumper; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::vm::ThreadDumper>
{
	static constexpr fixed_string class_name = "jdk/internal/vm/ThreadDumper";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_VM_THREADDUMPER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_VM_THREADDUMPER)
#define SCAPIX_JAVA_API_JDK_INTERNAL_VM_THREADDUMPER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/OutputStream.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::vm::ThreadDumper : public jni::object_base<"jdk/internal/vm/ThreadDumper",
	java::lang::Object>
{
public:

	static jni::ref<jni::array<jbyte>> dumpThreads(jni::ref<java::lang::String> file, jboolean okayToOverwrite) { return call_static_method<"dumpThreads", jni::ref<jni::array<jbyte>>>(file, okayToOverwrite); }
	static jni::ref<jni::array<jbyte>> dumpThreadsToJson(jni::ref<java::lang::String> file, jboolean okayToOverwrite) { return call_static_method<"dumpThreadsToJson", jni::ref<jni::array<jbyte>>>(file, okayToOverwrite); }
	static void dumpThreads(jni::ref<java::io::OutputStream> out) { return call_static_method<"dumpThreads", void>(out); }
	static void dumpThreadsToJson(jni::ref<java::io::OutputStream> out) { return call_static_method<"dumpThreadsToJson", void>(out); }

protected:

	ThreadDumper(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_VM_THREADDUMPER
