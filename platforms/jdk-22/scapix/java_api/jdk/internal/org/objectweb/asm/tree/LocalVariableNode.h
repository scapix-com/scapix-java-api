// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_ORG_OBJECTWEB_ASM_TREE_LOCALVARIABLENODE_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_ORG_OBJECTWEB_ASM_TREE_LOCALVARIABLENODE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::org::objectweb::asm_::tree { class LocalVariableNode; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::org::objectweb::asm_::tree::LocalVariableNode>
{
	static constexpr fixed_string class_name = "jdk/internal/org/objectweb/asm/tree/LocalVariableNode";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_ORG_OBJECTWEB_ASM_TREE_LOCALVARIABLENODE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_ORG_OBJECTWEB_ASM_TREE_LOCALVARIABLENODE)
#define SCAPIX_JAVA_API_JDK_INTERNAL_ORG_OBJECTWEB_ASM_TREE_LOCALVARIABLENODE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/jdk/internal/org/objectweb/asm/MethodVisitor.h>
#include <scapix/java_api/jdk/internal/org/objectweb/asm/tree/LabelNode.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::org::objectweb::asm_::tree::LocalVariableNode : public jni::object_base<"jdk/internal/org/objectweb/asm/tree/LocalVariableNode",
	java::lang::Object>
{
public:

	jni::ref<java::lang::String> name() { return get_field<"name", jni::ref<java::lang::String>>(); }
	void name(jni::ref<java::lang::String> v) { set_field<"name", jni::ref<java::lang::String>>(v); }
	jni::ref<java::lang::String> desc() { return get_field<"desc", jni::ref<java::lang::String>>(); }
	void desc(jni::ref<java::lang::String> v) { set_field<"desc", jni::ref<java::lang::String>>(v); }
	jni::ref<java::lang::String> signature() { return get_field<"signature", jni::ref<java::lang::String>>(); }
	void signature(jni::ref<java::lang::String> v) { set_field<"signature", jni::ref<java::lang::String>>(v); }
	jni::ref<jdk::internal::org::objectweb::asm_::tree::LabelNode> start() { return get_field<"start", jni::ref<jdk::internal::org::objectweb::asm_::tree::LabelNode>>(); }
	void start(jni::ref<jdk::internal::org::objectweb::asm_::tree::LabelNode> v) { set_field<"start", jni::ref<jdk::internal::org::objectweb::asm_::tree::LabelNode>>(v); }
	jni::ref<jdk::internal::org::objectweb::asm_::tree::LabelNode> end() { return get_field<"end", jni::ref<jdk::internal::org::objectweb::asm_::tree::LabelNode>>(); }
	void end(jni::ref<jdk::internal::org::objectweb::asm_::tree::LabelNode> v) { set_field<"end", jni::ref<jdk::internal::org::objectweb::asm_::tree::LabelNode>>(v); }
	jint index() { return get_field<"index", jint>(); }
	void index(jint v) { set_field<"index", jint>(v); }

	static jni::ref<jdk::internal::org::objectweb::asm_::tree::LocalVariableNode> new_object(jni::ref<java::lang::String> name, jni::ref<java::lang::String> descriptor, jni::ref<java::lang::String> signature, jni::ref<jdk::internal::org::objectweb::asm_::tree::LabelNode> start, jni::ref<jdk::internal::org::objectweb::asm_::tree::LabelNode> end, jint index) { return base_::new_object(name, descriptor, signature, start, end, index); }
	void accept(jni::ref<jdk::internal::org::objectweb::asm_::MethodVisitor> methodVisitor) { return call_method<"accept", void>(methodVisitor); }

protected:

	LocalVariableNode(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_ORG_OBJECTWEB_ASM_TREE_LOCALVARIABLENODE
