// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_ORG_XML_SAX_XMLREADER_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_ORG_XML_SAX_XMLREADER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::org::xml::sax { class XMLReader; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::org::xml::sax::XMLReader>
{
	static constexpr fixed_string class_name = "jdk/internal/org/xml/sax/XMLReader";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_ORG_XML_SAX_XMLREADER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_ORG_XML_SAX_XMLREADER)
#define SCAPIX_JAVA_API_JDK_INTERNAL_ORG_XML_SAX_XMLREADER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/jdk/internal/org/xml/sax/ContentHandler.h>
#include <scapix/java_api/jdk/internal/org/xml/sax/DTDHandler.h>
#include <scapix/java_api/jdk/internal/org/xml/sax/EntityResolver.h>
#include <scapix/java_api/jdk/internal/org/xml/sax/ErrorHandler.h>
#include <scapix/java_api/jdk/internal/org/xml/sax/InputSource.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::org::xml::sax::XMLReader : public jni::object_base<"jdk/internal/org/xml/sax/XMLReader",
	java::lang::Object>
{
public:

	jboolean getFeature(jni::ref<java::lang::String> p1) { return call_method<"getFeature", jboolean>(p1); }
	void setFeature(jni::ref<java::lang::String> p1, jboolean p2) { return call_method<"setFeature", void>(p1, p2); }
	jni::ref<java::lang::Object> getProperty(jni::ref<java::lang::String> p1) { return call_method<"getProperty", jni::ref<java::lang::Object>>(p1); }
	void setProperty(jni::ref<java::lang::String> p1, jni::ref<java::lang::Object> p2) { return call_method<"setProperty", void>(p1, p2); }
	void setEntityResolver(jni::ref<jdk::internal::org::xml::sax::EntityResolver> p1) { return call_method<"setEntityResolver", void>(p1); }
	jni::ref<jdk::internal::org::xml::sax::EntityResolver> getEntityResolver() { return call_method<"getEntityResolver", jni::ref<jdk::internal::org::xml::sax::EntityResolver>>(); }
	void setDTDHandler(jni::ref<jdk::internal::org::xml::sax::DTDHandler> p1) { return call_method<"setDTDHandler", void>(p1); }
	jni::ref<jdk::internal::org::xml::sax::DTDHandler> getDTDHandler() { return call_method<"getDTDHandler", jni::ref<jdk::internal::org::xml::sax::DTDHandler>>(); }
	void setContentHandler(jni::ref<jdk::internal::org::xml::sax::ContentHandler> p1) { return call_method<"setContentHandler", void>(p1); }
	jni::ref<jdk::internal::org::xml::sax::ContentHandler> getContentHandler() { return call_method<"getContentHandler", jni::ref<jdk::internal::org::xml::sax::ContentHandler>>(); }
	void setErrorHandler(jni::ref<jdk::internal::org::xml::sax::ErrorHandler> p1) { return call_method<"setErrorHandler", void>(p1); }
	jni::ref<jdk::internal::org::xml::sax::ErrorHandler> getErrorHandler() { return call_method<"getErrorHandler", jni::ref<jdk::internal::org::xml::sax::ErrorHandler>>(); }
	void parse(jni::ref<jdk::internal::org::xml::sax::InputSource> p1) { return call_method<"parse", void>(p1); }
	void parse(jni::ref<java::lang::String> p1) { return call_method<"parse", void>(p1); }

protected:

	XMLReader(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_ORG_XML_SAX_XMLREADER
