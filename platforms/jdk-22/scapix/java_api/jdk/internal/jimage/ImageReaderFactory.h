// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_JIMAGE_IMAGEREADERFACTORY_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_JIMAGE_IMAGEREADERFACTORY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::jimage { class ImageReaderFactory; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::jimage::ImageReaderFactory>
{
	static constexpr fixed_string class_name = "jdk/internal/jimage/ImageReaderFactory";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_JIMAGE_IMAGEREADERFACTORY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_JIMAGE_IMAGEREADERFACTORY)
#define SCAPIX_JAVA_API_JDK_INTERNAL_JIMAGE_IMAGEREADERFACTORY

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/nio/file/Path.h>
#include <scapix/java_api/jdk/internal/jimage/ImageReader.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::jimage::ImageReaderFactory : public jni::object_base<"jdk/internal/jimage/ImageReaderFactory",
	java::lang::Object>
{
public:

	static jni::ref<jdk::internal::jimage::ImageReader> get(jni::ref<java::nio::file::Path> jimage) { return call_static_method<"get", jni::ref<jdk::internal::jimage::ImageReader>>(jimage); }
	static jni::ref<jdk::internal::jimage::ImageReader> getImageReader() { return call_static_method<"getImageReader", jni::ref<jdk::internal::jimage::ImageReader>>(); }

protected:

	ImageReaderFactory(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_JIMAGE_IMAGEREADERFACTORY
