// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Record.h>
#include <scapix/java_api/java/util/function/IntPredicate.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_UTIL_IMMUTABLEBITSETPREDICATE_SMALLIMMUTABLEBITSETPREDICATE_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_UTIL_IMMUTABLEBITSETPREDICATE_SMALLIMMUTABLEBITSETPREDICATE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::util { class ImmutableBitSetPredicate_SmallImmutableBitSetPredicate; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::util::ImmutableBitSetPredicate_SmallImmutableBitSetPredicate>
{
	static constexpr fixed_string class_name = "jdk/internal/util/ImmutableBitSetPredicate$SmallImmutableBitSetPredicate";
	using base_classes = std::tuple<scapix::java_api::java::lang::Record, scapix::java_api::java::util::function::IntPredicate>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_UTIL_IMMUTABLEBITSETPREDICATE_SMALLIMMUTABLEBITSETPREDICATE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_UTIL_IMMUTABLEBITSETPREDICATE_SMALLIMMUTABLEBITSETPREDICATE)
#define SCAPIX_JAVA_API_JDK_INTERNAL_UTIL_IMMUTABLEBITSETPREDICATE_SMALLIMMUTABLEBITSETPREDICATE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::util::ImmutableBitSetPredicate_SmallImmutableBitSetPredicate : public jni::object_base<"jdk/internal/util/ImmutableBitSetPredicate$SmallImmutableBitSetPredicate",
	java::lang::Record,
	java::util::function::IntPredicate>
{
public:

	static jni::ref<jdk::internal::util::ImmutableBitSetPredicate_SmallImmutableBitSetPredicate> new_object(jlong first, jlong p2) { return base_::new_object(first, p2); }
	jboolean test(jint bitIndex) { return call_method<"test", jboolean>(bitIndex); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jboolean equals(jni::ref<java::lang::Object> o) { return call_method<"equals", jboolean>(o); }
	jlong first() { return call_method<"first", jlong>(); }
	jlong second() { return call_method<"second", jlong>(); }

protected:

	ImmutableBitSetPredicate_SmallImmutableBitSetPredicate(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_UTIL_IMMUTABLEBITSETPREDICATE_SMALLIMMUTABLEBITSETPREDICATE
