// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Enum.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_UTIL_OPERATINGSYSTEM_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_UTIL_OPERATINGSYSTEM_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::util { class OperatingSystem; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::util::OperatingSystem>
{
	static constexpr fixed_string class_name = "jdk/internal/util/OperatingSystem";
	using base_classes = std::tuple<scapix::java_api::java::lang::Enum>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_UTIL_OPERATINGSYSTEM_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_UTIL_OPERATINGSYSTEM)
#define SCAPIX_JAVA_API_JDK_INTERNAL_UTIL_OPERATINGSYSTEM

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::util::OperatingSystem : public jni::object_base<"jdk/internal/util/OperatingSystem",
	java::lang::Enum>
{
public:

	static jni::ref<jdk::internal::util::OperatingSystem> LINUX() { return get_static_field<"LINUX", jni::ref<jdk::internal::util::OperatingSystem>>(); }
	static jni::ref<jdk::internal::util::OperatingSystem> MACOS() { return get_static_field<"MACOS", jni::ref<jdk::internal::util::OperatingSystem>>(); }
	static jni::ref<jdk::internal::util::OperatingSystem> WINDOWS() { return get_static_field<"WINDOWS", jni::ref<jdk::internal::util::OperatingSystem>>(); }
	static jni::ref<jdk::internal::util::OperatingSystem> AIX() { return get_static_field<"AIX", jni::ref<jdk::internal::util::OperatingSystem>>(); }

	static jni::ref<jni::array<jdk::internal::util::OperatingSystem>> values() { return call_static_method<"values", jni::ref<jni::array<jdk::internal::util::OperatingSystem>>>(); }
	static jni::ref<jdk::internal::util::OperatingSystem> valueOf(jni::ref<java::lang::String> name) { return call_static_method<"valueOf", jni::ref<jdk::internal::util::OperatingSystem>>(name); }
	static jboolean isLinux() { return call_static_method<"isLinux", jboolean>(); }
	static jboolean isMacOS() { return call_static_method<"isMacOS", jboolean>(); }
	static jboolean isWindows() { return call_static_method<"isWindows", jboolean>(); }
	static jboolean isAix() { return call_static_method<"isAix", jboolean>(); }
	static jni::ref<jdk::internal::util::OperatingSystem> current() { return call_static_method<"current", jni::ref<jdk::internal::util::OperatingSystem>>(); }

protected:

	OperatingSystem(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_UTIL_OPERATINGSYSTEM
