// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/jdk/internal/util/xml/impl/Parser.h>
#include <scapix/java_api/jdk/internal/org/xml/sax/XMLReader.h>
#include <scapix/java_api/jdk/internal/org/xml/sax/Locator.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_UTIL_XML_IMPL_PARSERSAX_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_UTIL_XML_IMPL_PARSERSAX_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::util::xml::impl { class ParserSAX; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::util::xml::impl::ParserSAX>
{
	static constexpr fixed_string class_name = "jdk/internal/util/xml/impl/ParserSAX";
	using base_classes = std::tuple<scapix::java_api::jdk::internal::util::xml::impl::Parser, scapix::java_api::jdk::internal::org::xml::sax::XMLReader, scapix::java_api::jdk::internal::org::xml::sax::Locator>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_UTIL_XML_IMPL_PARSERSAX_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_UTIL_XML_IMPL_PARSERSAX)
#define SCAPIX_JAVA_API_JDK_INTERNAL_UTIL_XML_IMPL_PARSERSAX

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/jdk/internal/org/xml/sax/ContentHandler.h>
#include <scapix/java_api/jdk/internal/org/xml/sax/DTDHandler.h>
#include <scapix/java_api/jdk/internal/org/xml/sax/EntityResolver.h>
#include <scapix/java_api/jdk/internal/org/xml/sax/ErrorHandler.h>
#include <scapix/java_api/jdk/internal/org/xml/sax/InputSource.h>
#include <scapix/java_api/jdk/internal/org/xml/sax/helpers/DefaultHandler.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class jdk::internal::util::xml::impl::ParserSAX : public jni::object_base<"jdk/internal/util/xml/impl/ParserSAX",
	jdk::internal::util::xml::impl::Parser,
	jdk::internal::org::xml::sax::XMLReader,
	jdk::internal::org::xml::sax::Locator>
{
public:

	static jni::ref<java::lang::String> FEATURE_NS() { return get_static_field<"FEATURE_NS", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> FEATURE_PREF() { return get_static_field<"FEATURE_PREF", jni::ref<java::lang::String>>(); }

	static jni::ref<jdk::internal::util::xml::impl::ParserSAX> new_object() { return base_::new_object(); }
	jni::ref<jdk::internal::org::xml::sax::ContentHandler> getContentHandler() { return call_method<"getContentHandler", jni::ref<jdk::internal::org::xml::sax::ContentHandler>>(); }
	void setContentHandler(jni::ref<jdk::internal::org::xml::sax::ContentHandler> handler) { return call_method<"setContentHandler", void>(handler); }
	jni::ref<jdk::internal::org::xml::sax::DTDHandler> getDTDHandler() { return call_method<"getDTDHandler", jni::ref<jdk::internal::org::xml::sax::DTDHandler>>(); }
	void setDTDHandler(jni::ref<jdk::internal::org::xml::sax::DTDHandler> handler) { return call_method<"setDTDHandler", void>(handler); }
	jni::ref<jdk::internal::org::xml::sax::ErrorHandler> getErrorHandler() { return call_method<"getErrorHandler", jni::ref<jdk::internal::org::xml::sax::ErrorHandler>>(); }
	void setErrorHandler(jni::ref<jdk::internal::org::xml::sax::ErrorHandler> handler) { return call_method<"setErrorHandler", void>(handler); }
	jni::ref<jdk::internal::org::xml::sax::EntityResolver> getEntityResolver() { return call_method<"getEntityResolver", jni::ref<jdk::internal::org::xml::sax::EntityResolver>>(); }
	void setEntityResolver(jni::ref<jdk::internal::org::xml::sax::EntityResolver> resolver) { return call_method<"setEntityResolver", void>(resolver); }
	jni::ref<java::lang::String> getPublicId() { return call_method<"getPublicId", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getSystemId() { return call_method<"getSystemId", jni::ref<java::lang::String>>(); }
	jint getLineNumber() { return call_method<"getLineNumber", jint>(); }
	jint getColumnNumber() { return call_method<"getColumnNumber", jint>(); }
	void parse(jni::ref<java::lang::String> systemId) { return call_method<"parse", void>(systemId); }
	void parse(jni::ref<jdk::internal::org::xml::sax::InputSource> is) { return call_method<"parse", void>(is); }
	void parse(jni::ref<java::io::InputStream> src, jni::ref<jdk::internal::org::xml::sax::helpers::DefaultHandler> handler) { return call_method<"parse", void>(src, handler); }
	void parse(jni::ref<jdk::internal::org::xml::sax::InputSource> is, jni::ref<jdk::internal::org::xml::sax::helpers::DefaultHandler> handler) { return call_method<"parse", void>(is, handler); }
	void startInternalSub() { return call_method<"startInternalSub", void>(); }
	jboolean getFeature(jni::ref<java::lang::String> name) { return call_method<"getFeature", jboolean>(name); }
	void setFeature(jni::ref<java::lang::String> name, jboolean value) { return call_method<"setFeature", void>(name, value); }
	jni::ref<java::lang::Object> getProperty(jni::ref<java::lang::String> name) { return call_method<"getProperty", jni::ref<java::lang::Object>>(name); }
	void setProperty(jni::ref<java::lang::String> name, jni::ref<java::lang::Object> value) { return call_method<"setProperty", void>(name, value); }

protected:

	ParserSAX(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_UTIL_XML_IMPL_PARSERSAX
