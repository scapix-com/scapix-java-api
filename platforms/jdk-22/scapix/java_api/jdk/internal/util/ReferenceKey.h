// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_UTIL_REFERENCEKEY_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_UTIL_REFERENCEKEY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::util { class ReferenceKey; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::util::ReferenceKey>
{
	static constexpr fixed_string class_name = "jdk/internal/util/ReferenceKey";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_UTIL_REFERENCEKEY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_UTIL_REFERENCEKEY)
#define SCAPIX_JAVA_API_JDK_INTERNAL_UTIL_REFERENCEKEY

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::util::ReferenceKey : public jni::object_base<"jdk/internal/util/ReferenceKey",
	java::lang::Object>
{
public:

	jni::ref<java::lang::Object> get() { return call_method<"get", jni::ref<java::lang::Object>>(); }
	void unused() { return call_method<"unused", void>(); }

protected:

	ReferenceKey(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_UTIL_REFERENCEKEY
