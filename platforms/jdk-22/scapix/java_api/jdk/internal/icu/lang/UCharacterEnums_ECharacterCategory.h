// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_ICU_LANG_UCHARACTERENUMS_ECHARACTERCATEGORY_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_ICU_LANG_UCHARACTERENUMS_ECHARACTERCATEGORY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::icu::lang { class UCharacterEnums_ECharacterCategory; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::icu::lang::UCharacterEnums_ECharacterCategory>
{
	static constexpr fixed_string class_name = "jdk/internal/icu/lang/UCharacterEnums$ECharacterCategory";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_ICU_LANG_UCHARACTERENUMS_ECHARACTERCATEGORY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_ICU_LANG_UCHARACTERENUMS_ECHARACTERCATEGORY)
#define SCAPIX_JAVA_API_JDK_INTERNAL_ICU_LANG_UCHARACTERENUMS_ECHARACTERCATEGORY

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::icu::lang::UCharacterEnums_ECharacterCategory : public jni::object_base<"jdk/internal/icu/lang/UCharacterEnums$ECharacterCategory",
	java::lang::Object>
{
public:

	static jint UNASSIGNED() { return get_static_field<"UNASSIGNED", jint>(); }
	static jint GENERAL_OTHER_TYPES() { return get_static_field<"GENERAL_OTHER_TYPES", jint>(); }
	static jint UPPERCASE_LETTER() { return get_static_field<"UPPERCASE_LETTER", jint>(); }
	static jint LOWERCASE_LETTER() { return get_static_field<"LOWERCASE_LETTER", jint>(); }
	static jint TITLECASE_LETTER() { return get_static_field<"TITLECASE_LETTER", jint>(); }
	static jint MODIFIER_LETTER() { return get_static_field<"MODIFIER_LETTER", jint>(); }
	static jint OTHER_LETTER() { return get_static_field<"OTHER_LETTER", jint>(); }
	static jint NON_SPACING_MARK() { return get_static_field<"NON_SPACING_MARK", jint>(); }
	static jint ENCLOSING_MARK() { return get_static_field<"ENCLOSING_MARK", jint>(); }
	static jint COMBINING_SPACING_MARK() { return get_static_field<"COMBINING_SPACING_MARK", jint>(); }
	static jint DECIMAL_DIGIT_NUMBER() { return get_static_field<"DECIMAL_DIGIT_NUMBER", jint>(); }
	static jint LETTER_NUMBER() { return get_static_field<"LETTER_NUMBER", jint>(); }
	static jint OTHER_NUMBER() { return get_static_field<"OTHER_NUMBER", jint>(); }
	static jint SPACE_SEPARATOR() { return get_static_field<"SPACE_SEPARATOR", jint>(); }
	static jint LINE_SEPARATOR() { return get_static_field<"LINE_SEPARATOR", jint>(); }
	static jint PARAGRAPH_SEPARATOR() { return get_static_field<"PARAGRAPH_SEPARATOR", jint>(); }
	static jint CONTROL() { return get_static_field<"CONTROL", jint>(); }
	static jint FORMAT() { return get_static_field<"FORMAT", jint>(); }
	static jint PRIVATE_USE() { return get_static_field<"PRIVATE_USE", jint>(); }
	static jint SURROGATE() { return get_static_field<"SURROGATE", jint>(); }
	static jint DASH_PUNCTUATION() { return get_static_field<"DASH_PUNCTUATION", jint>(); }
	static jint START_PUNCTUATION() { return get_static_field<"START_PUNCTUATION", jint>(); }
	static jint END_PUNCTUATION() { return get_static_field<"END_PUNCTUATION", jint>(); }
	static jint CONNECTOR_PUNCTUATION() { return get_static_field<"CONNECTOR_PUNCTUATION", jint>(); }
	static jint OTHER_PUNCTUATION() { return get_static_field<"OTHER_PUNCTUATION", jint>(); }
	static jint MATH_SYMBOL() { return get_static_field<"MATH_SYMBOL", jint>(); }
	static jint CURRENCY_SYMBOL() { return get_static_field<"CURRENCY_SYMBOL", jint>(); }
	static jint MODIFIER_SYMBOL() { return get_static_field<"MODIFIER_SYMBOL", jint>(); }
	static jint OTHER_SYMBOL() { return get_static_field<"OTHER_SYMBOL", jint>(); }
	static jint INITIAL_PUNCTUATION() { return get_static_field<"INITIAL_PUNCTUATION", jint>(); }
	static jint INITIAL_QUOTE_PUNCTUATION() { return get_static_field<"INITIAL_QUOTE_PUNCTUATION", jint>(); }
	static jint FINAL_PUNCTUATION() { return get_static_field<"FINAL_PUNCTUATION", jint>(); }
	static jint FINAL_QUOTE_PUNCTUATION() { return get_static_field<"FINAL_QUOTE_PUNCTUATION", jint>(); }
	static jint CHAR_CATEGORY_COUNT() { return get_static_field<"CHAR_CATEGORY_COUNT", jint>(); }


protected:

	UCharacterEnums_ECharacterCategory(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_ICU_LANG_UCHARACTERENUMS_ECHARACTERCATEGORY
