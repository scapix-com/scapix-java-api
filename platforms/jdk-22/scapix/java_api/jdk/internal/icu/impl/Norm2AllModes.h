// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_ICU_IMPL_NORM2ALLMODES_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_ICU_IMPL_NORM2ALLMODES_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::icu::impl { class Norm2AllModes; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::icu::impl::Norm2AllModes>
{
	static constexpr fixed_string class_name = "jdk/internal/icu/impl/Norm2AllModes";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_ICU_IMPL_NORM2ALLMODES_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_ICU_IMPL_NORM2ALLMODES)
#define SCAPIX_JAVA_API_JDK_INTERNAL_ICU_IMPL_NORM2ALLMODES

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/jdk/internal/icu/impl/Norm2AllModes_ComposeNormalizer2.h>
#include <scapix/java_api/jdk/internal/icu/impl/Norm2AllModes_DecomposeNormalizer2.h>
#include <scapix/java_api/jdk/internal/icu/impl/Norm2AllModes_NoopNormalizer2.h>
#include <scapix/java_api/jdk/internal/icu/impl/NormalizerImpl.h>
#include <scapix/java_api/jdk/internal/icu/impl/Norm2AllModes_Normalizer2WithImpl.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::icu::impl::Norm2AllModes : public jni::object_base<"jdk/internal/icu/impl/Norm2AllModes",
	java::lang::Object>
{
public:

	using ComposeNormalizer2 = Norm2AllModes_ComposeNormalizer2;
	using DecomposeNormalizer2 = Norm2AllModes_DecomposeNormalizer2;
	using NoopNormalizer2 = Norm2AllModes_NoopNormalizer2;
	using Normalizer2WithImpl = Norm2AllModes_Normalizer2WithImpl;

	jni::ref<jdk::internal::icu::impl::NormalizerImpl> impl() { return get_field<"impl", jni::ref<jdk::internal::icu::impl::NormalizerImpl>>(); }
	jni::ref<jdk::internal::icu::impl::Norm2AllModes_ComposeNormalizer2> comp() { return get_field<"comp", jni::ref<jdk::internal::icu::impl::Norm2AllModes_ComposeNormalizer2>>(); }
	jni::ref<jdk::internal::icu::impl::Norm2AllModes_DecomposeNormalizer2> decomp() { return get_field<"decomp", jni::ref<jdk::internal::icu::impl::Norm2AllModes_DecomposeNormalizer2>>(); }
	static jni::ref<jdk::internal::icu::impl::Norm2AllModes_NoopNormalizer2> NOOP_NORMALIZER2() { return get_static_field<"NOOP_NORMALIZER2", jni::ref<jdk::internal::icu::impl::Norm2AllModes_NoopNormalizer2>>(); }

	static jni::ref<jdk::internal::icu::impl::Norm2AllModes> getNFCInstance() { return call_static_method<"getNFCInstance", jni::ref<jdk::internal::icu::impl::Norm2AllModes>>(); }
	static jni::ref<jdk::internal::icu::impl::Norm2AllModes> getNFKCInstance() { return call_static_method<"getNFKCInstance", jni::ref<jdk::internal::icu::impl::Norm2AllModes>>(); }

protected:

	Norm2AllModes(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_ICU_IMPL_NORM2ALLMODES
