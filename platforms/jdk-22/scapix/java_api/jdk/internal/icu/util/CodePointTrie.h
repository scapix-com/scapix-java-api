// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/jdk/internal/icu/util/CodePointMap.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_ICU_UTIL_CODEPOINTTRIE_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_ICU_UTIL_CODEPOINTTRIE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::icu::util { class CodePointTrie; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::icu::util::CodePointTrie>
{
	static constexpr fixed_string class_name = "jdk/internal/icu/util/CodePointTrie";
	using base_classes = std::tuple<scapix::java_api::jdk::internal::icu::util::CodePointMap>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_ICU_UTIL_CODEPOINTTRIE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_ICU_UTIL_CODEPOINTTRIE)
#define SCAPIX_JAVA_API_JDK_INTERNAL_ICU_UTIL_CODEPOINTTRIE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/OutputStream.h>
#include <scapix/java_api/java/nio/ByteBuffer.h>
#include <scapix/java_api/jdk/internal/icu/util/CodePointMap_Range.h>
#include <scapix/java_api/jdk/internal/icu/util/CodePointMap_ValueFilter.h>
#include <scapix/java_api/jdk/internal/icu/util/CodePointTrie_Type.h>
#include <scapix/java_api/jdk/internal/icu/util/CodePointTrie_ValueWidth.h>
#include <scapix/java_api/jdk/internal/icu/util/CodePointTrie_Fast16.h>
#include <scapix/java_api/jdk/internal/icu/util/CodePointTrie_Small16.h>
#include <scapix/java_api/jdk/internal/icu/util/CodePointTrie_Fast32.h>
#include <scapix/java_api/jdk/internal/icu/util/CodePointTrie_Small32.h>
#include <scapix/java_api/jdk/internal/icu/util/CodePointTrie_Fast8.h>
#include <scapix/java_api/jdk/internal/icu/util/CodePointTrie_Small8.h>
#include <scapix/java_api/jdk/internal/icu/util/CodePointTrie_Small.h>
#include <scapix/java_api/jdk/internal/icu/util/CodePointTrie_Fast.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::icu::util::CodePointTrie : public jni::object_base<"jdk/internal/icu/util/CodePointTrie",
	jdk::internal::icu::util::CodePointMap>
{
public:

	using Type = CodePointTrie_Type;
	using ValueWidth = CodePointTrie_ValueWidth;
	using Fast16 = CodePointTrie_Fast16;
	using Small16 = CodePointTrie_Small16;
	using Fast32 = CodePointTrie_Fast32;
	using Small32 = CodePointTrie_Small32;
	using Fast8 = CodePointTrie_Fast8;
	using Small8 = CodePointTrie_Small8;
	using Small = CodePointTrie_Small;
	using Fast = CodePointTrie_Fast;

	static jni::ref<jdk::internal::icu::util::CodePointTrie> fromBinary(jni::ref<jdk::internal::icu::util::CodePointTrie_Type> type, jni::ref<jdk::internal::icu::util::CodePointTrie_ValueWidth> valueWidth, jni::ref<java::nio::ByteBuffer> bytes) { return call_static_method<"fromBinary", jni::ref<jdk::internal::icu::util::CodePointTrie>>(type, valueWidth, bytes); }
	jni::ref<jdk::internal::icu::util::CodePointTrie_Type> getType() { return call_method<"getType", jni::ref<jdk::internal::icu::util::CodePointTrie_Type>>(); }
	jni::ref<jdk::internal::icu::util::CodePointTrie_ValueWidth> getValueWidth() { return call_method<"getValueWidth", jni::ref<jdk::internal::icu::util::CodePointTrie_ValueWidth>>(); }
	jint get(jint c) { return call_method<"get", jint>(c); }
	jint asciiGet(jint c) { return call_method<"asciiGet", jint>(c); }
	jboolean getRange(jint start, jni::ref<jdk::internal::icu::util::CodePointMap_ValueFilter> filter, jni::ref<jdk::internal::icu::util::CodePointMap_Range> range) { return call_method<"getRange", jboolean>(start, filter, range); }
	jint toBinary(jni::ref<java::io::OutputStream> os) { return call_method<"toBinary", jint>(os); }

protected:

	CodePointTrie(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_ICU_UTIL_CODEPOINTTRIE
