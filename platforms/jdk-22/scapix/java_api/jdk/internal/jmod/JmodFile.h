// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/AutoCloseable.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_JMOD_JMODFILE_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_JMOD_JMODFILE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::jmod { class JmodFile; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::jmod::JmodFile>
{
	static constexpr fixed_string class_name = "jdk/internal/jmod/JmodFile";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::lang::AutoCloseable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_JMOD_JMODFILE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_JMOD_JMODFILE)
#define SCAPIX_JAVA_API_JDK_INTERNAL_JMOD_JMODFILE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/io/OutputStream.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/nio/file/Path.h>
#include <scapix/java_api/java/util/stream/Stream.h>
#include <scapix/java_api/jdk/internal/jmod/JmodFile_Entry.h>
#include <scapix/java_api/jdk/internal/jmod/JmodFile_Section.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::jmod::JmodFile : public jni::object_base<"jdk/internal/jmod/JmodFile",
	java::lang::Object,
	java::lang::AutoCloseable>
{
public:

	using Section = JmodFile_Section;
	using Entry = JmodFile_Entry;

	static void checkMagic(jni::ref<java::nio::file::Path> file) { return call_static_method<"checkMagic", void>(file); }
	static jni::ref<jdk::internal::jmod::JmodFile> new_object(jni::ref<java::nio::file::Path> file) { return base_::new_object(file); }
	static void writeMagicNumber(jni::ref<java::io::OutputStream> os) { return call_static_method<"writeMagicNumber", void>(os); }
	jni::ref<jdk::internal::jmod::JmodFile_Entry> getEntry(jni::ref<jdk::internal::jmod::JmodFile_Section> section, jni::ref<java::lang::String> name) { return call_method<"getEntry", jni::ref<jdk::internal::jmod::JmodFile_Entry>>(section, name); }
	jni::ref<java::io::InputStream> getInputStream(jni::ref<jdk::internal::jmod::JmodFile_Section> section, jni::ref<java::lang::String> name) { return call_method<"getInputStream", jni::ref<java::io::InputStream>>(section, name); }
	jni::ref<java::io::InputStream> getInputStream(jni::ref<jdk::internal::jmod::JmodFile_Entry> entry) { return call_method<"getInputStream", jni::ref<java::io::InputStream>>(entry); }
	jni::ref<java::util::stream::Stream> stream() { return call_method<"stream", jni::ref<java::util::stream::Stream>>(); }
	void close() { return call_method<"close", void>(); }

protected:

	JmodFile(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_JMOD_JMODFILE
