// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Record.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_UTILS_BASEANDSCALE_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_UTILS_BASEANDSCALE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::foreign { class Utils_BaseAndScale; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::foreign::Utils_BaseAndScale>
{
	static constexpr fixed_string class_name = "jdk/internal/foreign/Utils$BaseAndScale";
	using base_classes = std::tuple<scapix::java_api::java::lang::Record>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_UTILS_BASEANDSCALE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_UTILS_BASEANDSCALE)
#define SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_UTILS_BASEANDSCALE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::foreign::Utils_BaseAndScale : public jni::object_base<"jdk/internal/foreign/Utils$BaseAndScale",
	java::lang::Record>
{
public:

	static jni::ref<jdk::internal::foreign::Utils_BaseAndScale> BYTE() { return get_static_field<"BYTE", jni::ref<jdk::internal::foreign::Utils_BaseAndScale>>(); }
	static jni::ref<jdk::internal::foreign::Utils_BaseAndScale> CHAR() { return get_static_field<"CHAR", jni::ref<jdk::internal::foreign::Utils_BaseAndScale>>(); }
	static jni::ref<jdk::internal::foreign::Utils_BaseAndScale> SHORT() { return get_static_field<"SHORT", jni::ref<jdk::internal::foreign::Utils_BaseAndScale>>(); }
	static jni::ref<jdk::internal::foreign::Utils_BaseAndScale> INT() { return get_static_field<"INT", jni::ref<jdk::internal::foreign::Utils_BaseAndScale>>(); }
	static jni::ref<jdk::internal::foreign::Utils_BaseAndScale> FLOAT() { return get_static_field<"FLOAT", jni::ref<jdk::internal::foreign::Utils_BaseAndScale>>(); }
	static jni::ref<jdk::internal::foreign::Utils_BaseAndScale> LONG() { return get_static_field<"LONG", jni::ref<jdk::internal::foreign::Utils_BaseAndScale>>(); }
	static jni::ref<jdk::internal::foreign::Utils_BaseAndScale> DOUBLE() { return get_static_field<"DOUBLE", jni::ref<jdk::internal::foreign::Utils_BaseAndScale>>(); }

	static jni::ref<jdk::internal::foreign::Utils_BaseAndScale> new_object(jint base, jlong scale) { return base_::new_object(base, scale); }
	static jni::ref<jdk::internal::foreign::Utils_BaseAndScale> of(jni::ref<java::lang::Object> array) { return call_static_method<"of", jni::ref<jdk::internal::foreign::Utils_BaseAndScale>>(array); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jboolean equals(jni::ref<java::lang::Object> o) { return call_method<"equals", jboolean>(o); }
	jint base() { return call_method<"base", jint>(); }
	jlong scale() { return call_method<"scale", jlong>(); }

protected:

	Utils_BaseAndScale(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_UTILS_BASEANDSCALE
