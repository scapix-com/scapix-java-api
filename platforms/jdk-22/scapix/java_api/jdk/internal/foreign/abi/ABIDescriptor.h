// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_ABI_ABIDESCRIPTOR_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_ABI_ABIDESCRIPTOR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::foreign::abi { class ABIDescriptor; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::foreign::abi::ABIDescriptor>
{
	static constexpr fixed_string class_name = "jdk/internal/foreign/abi/ABIDescriptor";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_ABI_ABIDESCRIPTOR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_ABI_ABIDESCRIPTOR)
#define SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_ABI_ABIDESCRIPTOR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/jdk/internal/foreign/abi/Architecture.h>
#include <scapix/java_api/jdk/internal/foreign/abi/VMStorage.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::foreign::abi::ABIDescriptor : public jni::object_base<"jdk/internal/foreign/abi/ABIDescriptor",
	java::lang::Object>
{
public:

	jni::ref<jni::array<jni::array<jdk::internal::foreign::abi::VMStorage>>> inputStorage() { return get_field<"inputStorage", jni::ref<jni::array<jni::array<jdk::internal::foreign::abi::VMStorage>>>>(); }
	jni::ref<jni::array<jni::array<jdk::internal::foreign::abi::VMStorage>>> outputStorage() { return get_field<"outputStorage", jni::ref<jni::array<jni::array<jdk::internal::foreign::abi::VMStorage>>>>(); }

	static jni::ref<jdk::internal::foreign::abi::ABIDescriptor> new_object(jni::ref<jdk::internal::foreign::abi::Architecture> arch, jni::ref<jni::array<jni::array<jdk::internal::foreign::abi::VMStorage>>> inputStorage, jni::ref<jni::array<jni::array<jdk::internal::foreign::abi::VMStorage>>> outputStorage, jni::ref<jni::array<jni::array<jdk::internal::foreign::abi::VMStorage>>> volatileStorage, jint stackAlignment, jint shadowSpace, jni::ref<jdk::internal::foreign::abi::VMStorage> scratch1, jni::ref<jdk::internal::foreign::abi::VMStorage> scratch2, jni::ref<jdk::internal::foreign::abi::VMStorage> targetAddrStorage, jni::ref<jdk::internal::foreign::abi::VMStorage> retBufAddrStorage, jni::ref<jdk::internal::foreign::abi::VMStorage> capturedStateStorage) { return base_::new_object(arch, inputStorage, outputStorage, volatileStorage, stackAlignment, shadowSpace, scratch1, scratch2, targetAddrStorage, retBufAddrStorage, capturedStateStorage); }
	jni::ref<jdk::internal::foreign::abi::VMStorage> targetAddrStorage() { return call_method<"targetAddrStorage", jni::ref<jdk::internal::foreign::abi::VMStorage>>(); }
	jni::ref<jdk::internal::foreign::abi::VMStorage> retBufAddrStorage() { return call_method<"retBufAddrStorage", jni::ref<jdk::internal::foreign::abi::VMStorage>>(); }
	jni::ref<jdk::internal::foreign::abi::VMStorage> capturedStateStorage() { return call_method<"capturedStateStorage", jni::ref<jdk::internal::foreign::abi::VMStorage>>(); }

protected:

	ABIDescriptor(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_ABI_ABIDESCRIPTOR
