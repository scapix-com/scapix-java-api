// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Enum.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_ABI_CAPTURABLESTATE_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_ABI_CAPTURABLESTATE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::foreign::abi { class CapturableState; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::foreign::abi::CapturableState>
{
	static constexpr fixed_string class_name = "jdk/internal/foreign/abi/CapturableState";
	using base_classes = std::tuple<scapix::java_api::java::lang::Enum>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_ABI_CAPTURABLESTATE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_ABI_CAPTURABLESTATE)
#define SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_ABI_CAPTURABLESTATE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/foreign/StructLayout.h>
#include <scapix/java_api/java/lang/foreign/ValueLayout.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::foreign::abi::CapturableState : public jni::object_base<"jdk/internal/foreign/abi/CapturableState",
	java::lang::Enum>
{
public:

	static jni::ref<jdk::internal::foreign::abi::CapturableState> GET_LAST_ERROR() { return get_static_field<"GET_LAST_ERROR", jni::ref<jdk::internal::foreign::abi::CapturableState>>(); }
	static jni::ref<jdk::internal::foreign::abi::CapturableState> WSA_GET_LAST_ERROR() { return get_static_field<"WSA_GET_LAST_ERROR", jni::ref<jdk::internal::foreign::abi::CapturableState>>(); }
	static jni::ref<jdk::internal::foreign::abi::CapturableState> ERRNO() { return get_static_field<"ERRNO", jni::ref<jdk::internal::foreign::abi::CapturableState>>(); }
	static jni::ref<java::lang::foreign::StructLayout> LAYOUT() { return get_static_field<"LAYOUT", jni::ref<java::lang::foreign::StructLayout>>(); }

	static jni::ref<jni::array<jdk::internal::foreign::abi::CapturableState>> values() { return call_static_method<"values", jni::ref<jni::array<jdk::internal::foreign::abi::CapturableState>>>(); }
	static jni::ref<jdk::internal::foreign::abi::CapturableState> valueOf(jni::ref<java::lang::String> name) { return call_static_method<"valueOf", jni::ref<jdk::internal::foreign::abi::CapturableState>>(name); }
	static jni::ref<jdk::internal::foreign::abi::CapturableState> forName(jni::ref<java::lang::String> name) { return call_static_method<"forName", jni::ref<jdk::internal::foreign::abi::CapturableState>>(name); }
	jni::ref<java::lang::String> stateName() { return call_method<"stateName", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::foreign::ValueLayout> layout() { return call_method<"layout", jni::ref<java::lang::foreign::ValueLayout>>(); }
	jint mask() { return call_method<"mask", jint>(); }
	jboolean isSupported() { return call_method<"isSupported", jboolean>(); }

protected:

	CapturableState(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_ABI_CAPTURABLESTATE
