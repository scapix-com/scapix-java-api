// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_ABI_SOFTREFERENCECACHE_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_ABI_SOFTREFERENCECACHE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::foreign::abi { class SoftReferenceCache; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::foreign::abi::SoftReferenceCache>
{
	static constexpr fixed_string class_name = "jdk/internal/foreign/abi/SoftReferenceCache";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_ABI_SOFTREFERENCECACHE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_ABI_SOFTREFERENCECACHE)
#define SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_ABI_SOFTREFERENCECACHE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/util/function/Function.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class jdk::internal::foreign::abi::SoftReferenceCache : public jni::object_base<"jdk/internal/foreign/abi/SoftReferenceCache",
	java::lang::Object>
{
public:

	jni::ref<java::lang::Object> get(jni::ref<java::lang::Object> key, jni::ref<java::util::function::Function> valueFactory) { return call_method<"get", jni::ref<java::lang::Object>>(key, valueFactory); }

protected:

	SoftReferenceCache(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_ABI_SOFTREFERENCECACHE
