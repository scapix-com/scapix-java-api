// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_STRINGSUPPORT_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_STRINGSUPPORT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::foreign { class StringSupport; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::foreign::StringSupport>
{
	static constexpr fixed_string class_name = "jdk/internal/foreign/StringSupport";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_STRINGSUPPORT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_STRINGSUPPORT)
#define SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_STRINGSUPPORT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/foreign/MemorySegment.h>
#include <scapix/java_api/java/nio/charset/Charset.h>
#include <scapix/java_api/jdk/internal/foreign/StringSupport_CharsetKind.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::foreign::StringSupport : public jni::object_base<"jdk/internal/foreign/StringSupport",
	java::lang::Object>
{
public:

	using CharsetKind = StringSupport_CharsetKind;

	static jni::ref<java::lang::String> read(jni::ref<java::lang::foreign::MemorySegment> segment, jlong offset, jni::ref<java::nio::charset::Charset> p3) { return call_static_method<"read", jni::ref<java::lang::String>>(segment, offset, p3); }
	static void write(jni::ref<java::lang::foreign::MemorySegment> segment, jlong offset, jni::ref<java::nio::charset::Charset> p3, jni::ref<java::lang::String> charset) { return call_static_method<"write", void>(segment, offset, p3, charset); }
	static jint chunkedStrlenByte(jni::ref<java::lang::foreign::MemorySegment> segment, jlong start) { return call_static_method<"chunkedStrlenByte", jint>(segment, start); }
	static jint chunkedStrlenShort(jni::ref<java::lang::foreign::MemorySegment> segment, jlong start) { return call_static_method<"chunkedStrlenShort", jint>(segment, start); }
	static jint strlenInt(jni::ref<java::lang::foreign::MemorySegment> segment, jlong start) { return call_static_method<"strlenInt", jint>(segment, start); }
	static jboolean bytesCompatible(jni::ref<java::lang::String> string, jni::ref<java::nio::charset::Charset> charset) { return call_static_method<"bytesCompatible", jboolean>(string, charset); }
	static jint copyBytes(jni::ref<java::lang::String> string, jni::ref<java::lang::foreign::MemorySegment> segment, jni::ref<java::nio::charset::Charset> charset, jlong offset) { return call_static_method<"copyBytes", jint>(string, segment, charset, offset); }
	static void copyToSegmentRaw(jni::ref<java::lang::String> string, jni::ref<java::lang::foreign::MemorySegment> segment, jlong offset) { return call_static_method<"copyToSegmentRaw", void>(string, segment, offset); }

protected:

	StringSupport(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_FOREIGN_STRINGSUPPORT
