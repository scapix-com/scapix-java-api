// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_RAWBYTECODEHELPER_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_RAWBYTECODEHELPER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::classfile::impl { class RawBytecodeHelper; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::classfile::impl::RawBytecodeHelper>
{
	static constexpr fixed_string class_name = "jdk/internal/classfile/impl/RawBytecodeHelper";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_RAWBYTECODEHELPER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_RAWBYTECODEHELPER)
#define SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_RAWBYTECODEHELPER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/nio/ByteBuffer.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::classfile::impl::RawBytecodeHelper : public jni::object_base<"jdk/internal/classfile/impl/RawBytecodeHelper",
	java::lang::Object>
{
public:

	static jint ILLEGAL() { return get_static_field<"ILLEGAL", jint>(); }
	jint bci() { return get_field<"bci", jint>(); }
	void bci(jint v) { set_field<"bci", jint>(v); }
	jint nextBci() { return get_field<"nextBci", jint>(); }
	void nextBci(jint v) { set_field<"nextBci", jint>(v); }
	jint endBci() { return get_field<"endBci", jint>(); }
	void endBci(jint v) { set_field<"endBci", jint>(v); }
	jint rawCode() { return get_field<"rawCode", jint>(); }
	void rawCode(jint v) { set_field<"rawCode", jint>(v); }
	jboolean isWide() { return get_field<"isWide", jboolean>(); }
	void isWide(jboolean v) { set_field<"isWide", jboolean>(v); }

	static jboolean isStoreIntoLocal(jint code) { return call_static_method<"isStoreIntoLocal", jboolean>(code); }
	static jint align(jint n) { return call_static_method<"align", jint>(n); }
	static jni::ref<jdk::internal::classfile::impl::RawBytecodeHelper> new_object(jni::ref<java::nio::ByteBuffer> bytecode) { return base_::new_object(bytecode); }
	jboolean isLastBytecode() { return call_method<"isLastBytecode", jboolean>(); }
	jint getShort(jint bci) { return call_method<"getShort", jint>(bci); }
	jint dest() { return call_method<"dest", jint>(); }
	jint getInt(jint bci) { return call_method<"getInt", jint>(bci); }
	jint destW() { return call_method<"destW", jint>(); }
	jint getIndexU1() { return call_method<"getIndexU1", jint>(); }
	jint getU1(jint bci) { return call_method<"getU1", jint>(bci); }
	jint rawNext(jint jumpTo) { return call_method<"rawNext", jint>(jumpTo); }
	jint rawNext() { return call_method<"rawNext", jint>(); }
	jint getIndex() { return call_method<"getIndex", jint>(); }
	jint getIndexU2() { return call_method<"getIndexU2", jint>(); }
	jint getIndexU2Raw(jint bci) { return call_method<"getIndexU2Raw", jint>(bci); }

protected:

	RawBytecodeHelper(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_RAWBYTECODEHELPER
