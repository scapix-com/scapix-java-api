// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_SIGNATURESIMPL_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_SIGNATURESIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::classfile::impl { class SignaturesImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::classfile::impl::SignaturesImpl>
{
	static constexpr fixed_string class_name = "jdk/internal/classfile/impl/SignaturesImpl";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_SIGNATURESIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_SIGNATURESIMPL)
#define SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_SIGNATURESIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/classfile/ClassSignature.h>
#include <scapix/java_api/java/lang/classfile/MethodSignature.h>
#include <scapix/java_api/java/lang/classfile/Signature.h>
#include <scapix/java_api/jdk/internal/classfile/impl/SignaturesImpl_ClassSignatureImpl.h>
#include <scapix/java_api/jdk/internal/classfile/impl/SignaturesImpl_MethodSignatureImpl.h>
#include <scapix/java_api/jdk/internal/classfile/impl/SignaturesImpl_TypeParamImpl.h>
#include <scapix/java_api/jdk/internal/classfile/impl/SignaturesImpl_ClassTypeSigImpl.h>
#include <scapix/java_api/jdk/internal/classfile/impl/SignaturesImpl_TypeArgImpl.h>
#include <scapix/java_api/jdk/internal/classfile/impl/SignaturesImpl_ArrayTypeSigImpl.h>
#include <scapix/java_api/jdk/internal/classfile/impl/SignaturesImpl_TypeVarSigImpl.h>
#include <scapix/java_api/jdk/internal/classfile/impl/SignaturesImpl_BaseTypeSigImpl.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::classfile::impl::SignaturesImpl : public jni::object_base<"jdk/internal/classfile/impl/SignaturesImpl",
	java::lang::Object>
{
public:

	using ClassSignatureImpl = SignaturesImpl_ClassSignatureImpl;
	using MethodSignatureImpl = SignaturesImpl_MethodSignatureImpl;
	using TypeParamImpl = SignaturesImpl_TypeParamImpl;
	using ClassTypeSigImpl = SignaturesImpl_ClassTypeSigImpl;
	using TypeArgImpl = SignaturesImpl_TypeArgImpl;
	using ArrayTypeSigImpl = SignaturesImpl_ArrayTypeSigImpl;
	using TypeVarSigImpl = SignaturesImpl_TypeVarSigImpl;
	using BaseTypeSigImpl = SignaturesImpl_BaseTypeSigImpl;

	static jni::ref<jdk::internal::classfile::impl::SignaturesImpl> new_object() { return base_::new_object(); }
	jni::ref<java::lang::classfile::ClassSignature> parseClassSignature(jni::ref<java::lang::String> signature) { return call_method<"parseClassSignature", jni::ref<java::lang::classfile::ClassSignature>>(signature); }
	jni::ref<java::lang::classfile::MethodSignature> parseMethodSignature(jni::ref<java::lang::String> signature) { return call_method<"parseMethodSignature", jni::ref<java::lang::classfile::MethodSignature>>(signature); }
	jni::ref<java::lang::classfile::Signature> parseSignature(jni::ref<java::lang::String> signature) { return call_method<"parseSignature", jni::ref<java::lang::classfile::Signature>>(signature); }

protected:

	SignaturesImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_SIGNATURESIMPL
