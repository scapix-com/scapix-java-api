// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/jdk/internal/classfile/impl/AbstractPoolEntry.h>
#include <scapix/java_api/java/lang/classfile/constantpool/MethodHandleEntry.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_ABSTRACTPOOLENTRY_METHODHANDLEENTRYIMPL_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_ABSTRACTPOOLENTRY_METHODHANDLEENTRYIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::classfile::impl { class AbstractPoolEntry_MethodHandleEntryImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::classfile::impl::AbstractPoolEntry_MethodHandleEntryImpl>
{
	static constexpr fixed_string class_name = "jdk/internal/classfile/impl/AbstractPoolEntry$MethodHandleEntryImpl";
	using base_classes = std::tuple<scapix::java_api::jdk::internal::classfile::impl::AbstractPoolEntry, scapix::java_api::java::lang::classfile::constantpool::MethodHandleEntry>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_ABSTRACTPOOLENTRY_METHODHANDLEENTRYIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_ABSTRACTPOOLENTRY_METHODHANDLEENTRYIMPL)
#define SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_ABSTRACTPOOLENTRY_METHODHANDLEENTRYIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/classfile/BufWriter.h>
#include <scapix/java_api/java/lang/classfile/constantpool/ConstantPoolBuilder.h>
#include <scapix/java_api/java/lang/constant/DirectMethodHandleDesc.h>
#include <scapix/java_api/jdk/internal/classfile/impl/AbstractPoolEntry_AbstractMemberRefEntry.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::classfile::impl::AbstractPoolEntry_MethodHandleEntryImpl : public jni::object_base<"jdk/internal/classfile/impl/AbstractPoolEntry$MethodHandleEntryImpl",
	jdk::internal::classfile::impl::AbstractPoolEntry,
	java::lang::classfile::constantpool::MethodHandleEntry>
{
public:

	jint kind() { return call_method<"kind", jint>(); }
	jni::ref<jdk::internal::classfile::impl::AbstractPoolEntry_AbstractMemberRefEntry> reference() { return call_method<"reference", jni::ref<jdk::internal::classfile::impl::AbstractPoolEntry_AbstractMemberRefEntry>>(); }
	jni::ref<java::lang::constant::DirectMethodHandleDesc> asSymbol() { return call_method<"asSymbol", jni::ref<java::lang::constant::DirectMethodHandleDesc>>(); }
	void writeTo(jni::ref<java::lang::classfile::BufWriter> pool) { return call_method<"writeTo", void>(pool); }
	jni::ref<java::lang::classfile::constantpool::MethodHandleEntry> clone(jni::ref<java::lang::classfile::constantpool::ConstantPoolBuilder> cp) { return call_method<"clone", jni::ref<java::lang::classfile::constantpool::MethodHandleEntry>>(cp); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jboolean equals(jni::ref<java::lang::Object> o) { return call_method<"equals", jboolean>(o); }

protected:

	AbstractPoolEntry_MethodHandleEntryImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_ABSTRACTPOOLENTRY_METHODHANDLEENTRYIMPL
