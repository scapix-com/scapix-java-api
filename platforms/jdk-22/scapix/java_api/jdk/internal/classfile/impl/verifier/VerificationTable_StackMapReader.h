// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_VERIFIER_VERIFICATIONTABLE_STACKMAPREADER_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_VERIFIER_VERIFICATIONTABLE_STACKMAPREADER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::classfile::impl::verifier { class VerificationTable_StackMapReader; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::classfile::impl::verifier::VerificationTable_StackMapReader>
{
	static constexpr fixed_string class_name = "jdk/internal/classfile/impl/verifier/VerificationTable$StackMapReader";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_VERIFIER_VERIFICATIONTABLE_STACKMAPREADER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_VERIFIER_VERIFICATIONTABLE_STACKMAPREADER)
#define SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_VERIFIER_VERIFICATIONTABLE_STACKMAPREADER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/jdk/internal/classfile/impl/verifier/VerificationFrame.h>
#include <scapix/java_api/jdk/internal/classfile/impl/verifier/VerificationWrapper_ConstantPoolWrapper.h>
#include <scapix/java_api/jdk/internal/classfile/impl/verifier/VerifierImpl.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class jdk::internal::classfile::impl::verifier::VerificationTable_StackMapReader : public jni::object_base<"jdk/internal/classfile/impl/verifier/VerificationTable$StackMapReader",
	java::lang::Object>
{
public:

	jint get_frame_count() { return call_method<"get_frame_count", jint>(); }
	void check_end() { return call_method<"check_end", void>(); }
	static jni::ref<jdk::internal::classfile::impl::verifier::VerificationTable_StackMapReader> new_object(jni::ref<jni::array<jbyte>> stackmapData, jni::ref<jni::array<jbyte>> code_data, jint code_len, jni::ref<jdk::internal::classfile::impl::verifier::VerificationWrapper_ConstantPoolWrapper> cp, jni::ref<jdk::internal::classfile::impl::verifier::VerifierImpl> context) { return base_::new_object(stackmapData, code_data, code_len, cp, context); }
	jni::ref<jdk::internal::classfile::impl::verifier::VerificationFrame> next(jni::ref<jdk::internal::classfile::impl::verifier::VerificationFrame> pre_frame, jboolean first, jint max_locals, jint max_stack) { return call_method<"next", jni::ref<jdk::internal::classfile::impl::verifier::VerificationFrame>>(pre_frame, first, max_locals, max_stack); }

protected:

	VerificationTable_StackMapReader(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_VERIFIER_VERIFICATIONTABLE_STACKMAPREADER
