// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_CODEIMPL_EXCEPTIONHANDLERACTION_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_CODEIMPL_EXCEPTIONHANDLERACTION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::classfile::impl { class CodeImpl_ExceptionHandlerAction; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::classfile::impl::CodeImpl_ExceptionHandlerAction>
{
	static constexpr fixed_string class_name = "jdk/internal/classfile/impl/CodeImpl$ExceptionHandlerAction";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_CODEIMPL_EXCEPTIONHANDLERACTION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_CODEIMPL_EXCEPTIONHANDLERACTION)
#define SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_CODEIMPL_EXCEPTIONHANDLERACTION

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::classfile::impl::CodeImpl_ExceptionHandlerAction : public jni::object_base<"jdk/internal/classfile/impl/CodeImpl$ExceptionHandlerAction",
	java::lang::Object>
{
public:

	void accept(jint p1, jint p2, jint p3, jint p4) { return call_method<"accept", void>(p1, p2, p3, p4); }

protected:

	CodeImpl_ExceptionHandlerAction(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_CODEIMPL_EXCEPTIONHANDLERACTION
