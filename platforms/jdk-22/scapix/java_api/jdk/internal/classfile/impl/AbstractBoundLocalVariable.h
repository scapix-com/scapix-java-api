// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/jdk/internal/classfile/impl/AbstractElement.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_ABSTRACTBOUNDLOCALVARIABLE_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_ABSTRACTBOUNDLOCALVARIABLE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::classfile::impl { class AbstractBoundLocalVariable; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::classfile::impl::AbstractBoundLocalVariable>
{
	static constexpr fixed_string class_name = "jdk/internal/classfile/impl/AbstractBoundLocalVariable";
	using base_classes = std::tuple<scapix::java_api::jdk::internal::classfile::impl::AbstractElement>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_ABSTRACTBOUNDLOCALVARIABLE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_ABSTRACTBOUNDLOCALVARIABLE)
#define SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_ABSTRACTBOUNDLOCALVARIABLE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/classfile/BufWriter.h>
#include <scapix/java_api/java/lang/classfile/Label.h>
#include <scapix/java_api/java/lang/classfile/constantpool/Utf8Entry.h>
#include <scapix/java_api/jdk/internal/classfile/impl/CodeImpl.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::classfile::impl::AbstractBoundLocalVariable : public jni::object_base<"jdk/internal/classfile/impl/AbstractBoundLocalVariable",
	jdk::internal::classfile::impl::AbstractElement>
{
public:

	static jni::ref<jdk::internal::classfile::impl::AbstractBoundLocalVariable> new_object(jni::ref<jdk::internal::classfile::impl::CodeImpl> code, jint offset) { return base_::new_object(code, offset); }
	jni::ref<java::lang::classfile::constantpool::Utf8Entry> name() { return call_method<"name", jni::ref<java::lang::classfile::constantpool::Utf8Entry>>(); }
	jni::ref<java::lang::classfile::Label> startScope() { return call_method<"startScope", jni::ref<java::lang::classfile::Label>>(); }
	jni::ref<java::lang::classfile::Label> endScope() { return call_method<"endScope", jni::ref<java::lang::classfile::Label>>(); }
	jint startPc() { return call_method<"startPc", jint>(); }
	jint length() { return call_method<"length", jint>(); }
	jint slot() { return call_method<"slot", jint>(); }
	jboolean writeTo(jni::ref<java::lang::classfile::BufWriter> b) { return call_method<"writeTo", jboolean>(b); }

protected:

	AbstractBoundLocalVariable(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_ABSTRACTBOUNDLOCALVARIABLE
