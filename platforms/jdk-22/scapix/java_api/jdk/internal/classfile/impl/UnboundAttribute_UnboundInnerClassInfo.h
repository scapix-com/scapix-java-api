// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Record.h>
#include <scapix/java_api/java/lang/classfile/attribute/InnerClassInfo.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_UNBOUNDATTRIBUTE_UNBOUNDINNERCLASSINFO_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_UNBOUNDATTRIBUTE_UNBOUNDINNERCLASSINFO_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::classfile::impl { class UnboundAttribute_UnboundInnerClassInfo; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::classfile::impl::UnboundAttribute_UnboundInnerClassInfo>
{
	static constexpr fixed_string class_name = "jdk/internal/classfile/impl/UnboundAttribute$UnboundInnerClassInfo";
	using base_classes = std::tuple<scapix::java_api::java::lang::Record, scapix::java_api::java::lang::classfile::attribute::InnerClassInfo>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_UNBOUNDATTRIBUTE_UNBOUNDINNERCLASSINFO_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_UNBOUNDATTRIBUTE_UNBOUNDINNERCLASSINFO)
#define SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_UNBOUNDATTRIBUTE_UNBOUNDINNERCLASSINFO

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/classfile/constantpool/ClassEntry.h>
#include <scapix/java_api/java/util/Optional.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::classfile::impl::UnboundAttribute_UnboundInnerClassInfo : public jni::object_base<"jdk/internal/classfile/impl/UnboundAttribute$UnboundInnerClassInfo",
	java::lang::Record,
	java::lang::classfile::attribute::InnerClassInfo>
{
public:

	static jni::ref<jdk::internal::classfile::impl::UnboundAttribute_UnboundInnerClassInfo> new_object(jni::ref<java::lang::classfile::constantpool::ClassEntry> innerClass, jni::ref<java::util::Optional> outerClass, jni::ref<java::util::Optional> innerName, jint flagsMask) { return base_::new_object(innerClass, outerClass, innerName, flagsMask); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jboolean equals(jni::ref<java::lang::Object> o) { return call_method<"equals", jboolean>(o); }
	jni::ref<java::lang::classfile::constantpool::ClassEntry> innerClass() { return call_method<"innerClass", jni::ref<java::lang::classfile::constantpool::ClassEntry>>(); }
	jni::ref<java::util::Optional> outerClass() { return call_method<"outerClass", jni::ref<java::util::Optional>>(); }
	jni::ref<java::util::Optional> innerName() { return call_method<"innerName", jni::ref<java::util::Optional>>(); }
	jint flagsMask() { return call_method<"flagsMask", jint>(); }

protected:

	UnboundAttribute_UnboundInnerClassInfo(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_UNBOUNDATTRIBUTE_UNBOUNDINNERCLASSINFO
