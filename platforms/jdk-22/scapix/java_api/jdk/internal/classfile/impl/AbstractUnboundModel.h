// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/jdk/internal/classfile/impl/AbstractElement.h>
#include <scapix/java_api/java/lang/classfile/CompoundElement.h>
#include <scapix/java_api/java/lang/classfile/AttributedElement.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_ABSTRACTUNBOUNDMODEL_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_ABSTRACTUNBOUNDMODEL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::classfile::impl { class AbstractUnboundModel; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::classfile::impl::AbstractUnboundModel>
{
	static constexpr fixed_string class_name = "jdk/internal/classfile/impl/AbstractUnboundModel";
	using base_classes = std::tuple<scapix::java_api::jdk::internal::classfile::impl::AbstractElement, scapix::java_api::java::lang::classfile::CompoundElement, scapix::java_api::java::lang::classfile::AttributedElement>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_ABSTRACTUNBOUNDMODEL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_ABSTRACTUNBOUNDMODEL)
#define SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_ABSTRACTUNBOUNDMODEL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/java/util/function/Consumer.h>
#include <scapix/java_api/java/util/stream/Stream.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::classfile::impl::AbstractUnboundModel : public jni::object_base<"jdk/internal/classfile/impl/AbstractUnboundModel",
	jdk::internal::classfile::impl::AbstractElement,
	java::lang::classfile::CompoundElement,
	java::lang::classfile::AttributedElement>
{
public:

	static jni::ref<jdk::internal::classfile::impl::AbstractUnboundModel> new_object(jni::ref<java::util::List> elements) { return base_::new_object(elements); }
	void forEachElement(jni::ref<java::util::function::Consumer> consumer) { return call_method<"forEachElement", void>(consumer); }
	jni::ref<java::util::stream::Stream> elementStream() { return call_method<"elementStream", jni::ref<java::util::stream::Stream>>(); }
	jni::ref<java::util::List> elementList() { return call_method<"elementList", jni::ref<java::util::List>>(); }
	jni::ref<java::util::List> attributes() { return call_method<"attributes", jni::ref<java::util::List>>(); }

protected:

	AbstractUnboundModel(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_ABSTRACTUNBOUNDMODEL
