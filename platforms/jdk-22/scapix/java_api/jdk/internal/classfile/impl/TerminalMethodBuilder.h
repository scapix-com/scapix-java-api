// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/classfile/MethodBuilder.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_TERMINALMETHODBUILDER_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_TERMINALMETHODBUILDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::classfile::impl { class TerminalMethodBuilder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::classfile::impl::TerminalMethodBuilder>
{
	static constexpr fixed_string class_name = "jdk/internal/classfile/impl/TerminalMethodBuilder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::lang::classfile::MethodBuilder>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_TERMINALMETHODBUILDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_TERMINALMETHODBUILDER)
#define SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_TERMINALMETHODBUILDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/classfile/CodeModel.h>
#include <scapix/java_api/jdk/internal/classfile/impl/BufferedCodeBuilder.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::classfile::impl::TerminalMethodBuilder : public jni::object_base<"jdk/internal/classfile/impl/TerminalMethodBuilder",
	java::lang::Object,
	java::lang::classfile::MethodBuilder>
{
public:

	jni::ref<jdk::internal::classfile::impl::BufferedCodeBuilder> bufferedCodeBuilder(jni::ref<java::lang::classfile::CodeModel> p1) { return call_method<"bufferedCodeBuilder", jni::ref<jdk::internal::classfile::impl::BufferedCodeBuilder>>(p1); }

protected:

	TerminalMethodBuilder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_CLASSFILE_IMPL_TERMINALMETHODBUILDER
