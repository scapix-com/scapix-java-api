// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/jdk/internal/logger/AbstractLoggerWrapper.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_LOGGER_LOGGERWRAPPER_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_LOGGER_LOGGERWRAPPER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::logger { class LoggerWrapper; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::logger::LoggerWrapper>
{
	static constexpr fixed_string class_name = "jdk/internal/logger/LoggerWrapper";
	using base_classes = std::tuple<scapix::java_api::jdk::internal::logger::AbstractLoggerWrapper>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_LOGGER_LOGGERWRAPPER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_LOGGER_LOGGERWRAPPER)
#define SCAPIX_JAVA_API_JDK_INTERNAL_LOGGER_LOGGERWRAPPER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/System_Logger.h>
#include <scapix/java_api/sun/util/logging/PlatformLogger_Bridge.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::logger::LoggerWrapper : public jni::object_base<"jdk/internal/logger/LoggerWrapper",
	jdk::internal::logger::AbstractLoggerWrapper>
{
public:

	static jni::ref<jdk::internal::logger::LoggerWrapper> new_object(jni::ref<java::lang::System_Logger> wrapped) { return base_::new_object(wrapped); }
	jni::ref<java::lang::System_Logger> wrapped() { return call_method<"wrapped", jni::ref<java::lang::System_Logger>>(); }
	jni::ref<sun::util::logging::PlatformLogger_Bridge> platformProxy() { return call_method<"platformProxy", jni::ref<sun::util::logging::PlatformLogger_Bridge>>(); }

protected:

	LoggerWrapper(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_LOGGER_LOGGERWRAPPER
