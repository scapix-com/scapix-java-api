// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_CRYPTO_KEMSPI_FWD
#define SCAPIX_JAVA_API_JAVAX_CRYPTO_KEMSPI_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::crypto { class KEMSpi; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::crypto::KEMSpi>
{
	static constexpr fixed_string class_name = "javax/crypto/KEMSpi";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_CRYPTO_KEMSPI_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_CRYPTO_KEMSPI)
#define SCAPIX_JAVA_API_JAVAX_CRYPTO_KEMSPI

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/security/PrivateKey.h>
#include <scapix/java_api/java/security/PublicKey.h>
#include <scapix/java_api/java/security/SecureRandom.h>
#include <scapix/java_api/java/security/spec/AlgorithmParameterSpec.h>
#include <scapix/java_api/javax/crypto/KEMSpi_DecapsulatorSpi.h>
#include <scapix/java_api/javax/crypto/KEMSpi_EncapsulatorSpi.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::crypto::KEMSpi : public jni::object_base<"javax/crypto/KEMSpi",
	java::lang::Object>
{
public:

	using DecapsulatorSpi = KEMSpi_DecapsulatorSpi;
	using EncapsulatorSpi = KEMSpi_EncapsulatorSpi;

	jni::ref<javax::crypto::KEMSpi_EncapsulatorSpi> engineNewEncapsulator(jni::ref<java::security::PublicKey> p1, jni::ref<java::security::spec::AlgorithmParameterSpec> p2, jni::ref<java::security::SecureRandom> p3) { return call_method<"engineNewEncapsulator", jni::ref<javax::crypto::KEMSpi_EncapsulatorSpi>>(p1, p2, p3); }
	jni::ref<javax::crypto::KEMSpi_DecapsulatorSpi> engineNewDecapsulator(jni::ref<java::security::PrivateKey> p1, jni::ref<java::security::spec::AlgorithmParameterSpec> p2) { return call_method<"engineNewDecapsulator", jni::ref<javax::crypto::KEMSpi_DecapsulatorSpi>>(p1, p2); }

protected:

	KEMSpi(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_CRYPTO_KEMSPI
