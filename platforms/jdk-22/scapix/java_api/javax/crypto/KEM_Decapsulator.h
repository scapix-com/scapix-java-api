// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_CRYPTO_KEM_DECAPSULATOR_FWD
#define SCAPIX_JAVA_API_JAVAX_CRYPTO_KEM_DECAPSULATOR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::crypto { class KEM_Decapsulator; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::crypto::KEM_Decapsulator>
{
	static constexpr fixed_string class_name = "javax/crypto/KEM$Decapsulator";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_CRYPTO_KEM_DECAPSULATOR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_CRYPTO_KEM_DECAPSULATOR)
#define SCAPIX_JAVA_API_JAVAX_CRYPTO_KEM_DECAPSULATOR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/crypto/SecretKey.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::crypto::KEM_Decapsulator : public jni::object_base<"javax/crypto/KEM$Decapsulator",
	java::lang::Object>
{
public:

	jni::ref<java::lang::String> providerName() { return call_method<"providerName", jni::ref<java::lang::String>>(); }
	jni::ref<javax::crypto::SecretKey> decapsulate(jni::ref<jni::array<jbyte>> encapsulation) { return call_method<"decapsulate", jni::ref<javax::crypto::SecretKey>>(encapsulation); }
	jni::ref<javax::crypto::SecretKey> decapsulate(jni::ref<jni::array<jbyte>> encapsulation, jint from, jint to, jni::ref<java::lang::String> algorithm) { return call_method<"decapsulate", jni::ref<javax::crypto::SecretKey>>(encapsulation, from, to, algorithm); }
	jint secretSize() { return call_method<"secretSize", jint>(); }
	jint encapsulationSize() { return call_method<"encapsulationSize", jint>(); }

protected:

	KEM_Decapsulator(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_CRYPTO_KEM_DECAPSULATOR
