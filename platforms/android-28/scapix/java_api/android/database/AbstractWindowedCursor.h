// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/database/AbstractCursor.h>

#ifndef SCAPIX_JAVA_API_ANDROID_DATABASE_ABSTRACTWINDOWEDCURSOR_FWD
#define SCAPIX_JAVA_API_ANDROID_DATABASE_ABSTRACTWINDOWEDCURSOR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::database { class AbstractWindowedCursor; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::database::AbstractWindowedCursor>
{
	static constexpr fixed_string class_name = "android/database/AbstractWindowedCursor";
	using base_classes = std::tuple<scapix::java_api::android::database::AbstractCursor>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_DATABASE_ABSTRACTWINDOWEDCURSOR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_DATABASE_ABSTRACTWINDOWEDCURSOR)
#define SCAPIX_JAVA_API_ANDROID_DATABASE_ABSTRACTWINDOWEDCURSOR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/database/CharArrayBuffer.h>
#include <scapix/java_api/android/database/CursorWindow.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::database::AbstractWindowedCursor : public jni::object_base<"android/database/AbstractWindowedCursor",
	android::database::AbstractCursor>
{
public:

	static jni::ref<android::database::AbstractWindowedCursor> new_object() { return base_::new_object(); }
	jni::ref<jni::array<jbyte>> getBlob(jint columnIndex) { return call_method<"getBlob", jni::ref<jni::array<jbyte>>>(columnIndex); }
	jni::ref<java::lang::String> getString(jint columnIndex) { return call_method<"getString", jni::ref<java::lang::String>>(columnIndex); }
	void copyStringToBuffer(jint columnIndex, jni::ref<android::database::CharArrayBuffer> buffer) { return call_method<"copyStringToBuffer", void>(columnIndex, buffer); }
	jshort getShort(jint columnIndex) { return call_method<"getShort", jshort>(columnIndex); }
	jint getInt(jint columnIndex) { return call_method<"getInt", jint>(columnIndex); }
	jlong getLong(jint columnIndex) { return call_method<"getLong", jlong>(columnIndex); }
	jfloat getFloat(jint columnIndex) { return call_method<"getFloat", jfloat>(columnIndex); }
	jdouble getDouble(jint columnIndex) { return call_method<"getDouble", jdouble>(columnIndex); }
	jboolean isNull(jint columnIndex) { return call_method<"isNull", jboolean>(columnIndex); }
	jboolean isBlob(jint columnIndex) { return call_method<"isBlob", jboolean>(columnIndex); }
	jboolean isString(jint columnIndex) { return call_method<"isString", jboolean>(columnIndex); }
	jboolean isLong(jint columnIndex) { return call_method<"isLong", jboolean>(columnIndex); }
	jboolean isFloat(jint columnIndex) { return call_method<"isFloat", jboolean>(columnIndex); }
	jint getType(jint columnIndex) { return call_method<"getType", jint>(columnIndex); }
	jni::ref<android::database::CursorWindow> getWindow() { return call_method<"getWindow", jni::ref<android::database::CursorWindow>>(); }
	void setWindow(jni::ref<android::database::CursorWindow> window) { return call_method<"setWindow", void>(window); }
	jboolean hasWindow() { return call_method<"hasWindow", jboolean>(); }

protected:

	AbstractWindowedCursor(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_DATABASE_ABSTRACTWINDOWEDCURSOR
