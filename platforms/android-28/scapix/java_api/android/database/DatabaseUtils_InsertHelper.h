// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_DATABASE_DATABASEUTILS_INSERTHELPER_FWD
#define SCAPIX_JAVA_API_ANDROID_DATABASE_DATABASEUTILS_INSERTHELPER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::database { class DatabaseUtils_InsertHelper; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::database::DatabaseUtils_InsertHelper>
{
	static constexpr fixed_string class_name = "android/database/DatabaseUtils$InsertHelper";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_DATABASE_DATABASEUTILS_INSERTHELPER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_DATABASE_DATABASEUTILS_INSERTHELPER)
#define SCAPIX_JAVA_API_ANDROID_DATABASE_DATABASEUTILS_INSERTHELPER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/ContentValues.h>
#include <scapix/java_api/android/database/sqlite/SQLiteDatabase.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::database::DatabaseUtils_InsertHelper : public jni::object_base<"android/database/DatabaseUtils$InsertHelper",
	java::lang::Object>
{
public:

	static jni::ref<android::database::DatabaseUtils_InsertHelper> new_object(jni::ref<android::database::sqlite::SQLiteDatabase> db, jni::ref<java::lang::String> tableName) { return base_::new_object(db, tableName); }
	jint getColumnIndex(jni::ref<java::lang::String> key) { return call_method<"getColumnIndex", jint>(key); }
	void bind(jint index, jdouble value) { return call_method<"bind", void>(index, value); }
	void bind(jint index, jfloat value) { return call_method<"bind", void>(index, value); }
	void bind(jint index, jlong value) { return call_method<"bind", void>(index, value); }
	void bind(jint index, jint value) { return call_method<"bind", void>(index, value); }
	void bind(jint index, jboolean value) { return call_method<"bind", void>(index, value); }
	void bindNull(jint index) { return call_method<"bindNull", void>(index); }
	void bind(jint index, jni::ref<jni::array<jbyte>> value) { return call_method<"bind", void>(index, value); }
	void bind(jint index, jni::ref<java::lang::String> value) { return call_method<"bind", void>(index, value); }
	jlong insert(jni::ref<android::content::ContentValues> values) { return call_method<"insert", jlong>(values); }
	jlong execute() { return call_method<"execute", jlong>(); }
	void prepareForInsert() { return call_method<"prepareForInsert", void>(); }
	void prepareForReplace() { return call_method<"prepareForReplace", void>(); }
	jlong replace(jni::ref<android::content::ContentValues> values) { return call_method<"replace", jlong>(values); }
	void close() { return call_method<"close", void>(); }

protected:

	DatabaseUtils_InsertHelper(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_DATABASE_DATABASEUTILS_INSERTHELPER
