// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/Cloneable.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_ICU_TEXT_DECIMALFORMATSYMBOLS_FWD
#define SCAPIX_JAVA_API_ANDROID_ICU_TEXT_DECIMALFORMATSYMBOLS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::icu::text { class DecimalFormatSymbols; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::icu::text::DecimalFormatSymbols>
{
	static constexpr fixed_string class_name = "android/icu/text/DecimalFormatSymbols";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::lang::Cloneable, scapix::java_api::java::io::Serializable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_TEXT_DECIMALFORMATSYMBOLS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_ICU_TEXT_DECIMALFORMATSYMBOLS)
#define SCAPIX_JAVA_API_ANDROID_ICU_TEXT_DECIMALFORMATSYMBOLS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/icu/util/Currency.h>
#include <scapix/java_api/android/icu/util/ULocale.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Locale.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::icu::text::DecimalFormatSymbols : public jni::object_base<"android/icu/text/DecimalFormatSymbols",
	java::lang::Object,
	java::lang::Cloneable,
	java::io::Serializable>
{
public:

	static jint CURRENCY_SPC_CURRENCY_MATCH() { return get_static_field<"CURRENCY_SPC_CURRENCY_MATCH", jint>(); }
	static jint CURRENCY_SPC_INSERT() { return get_static_field<"CURRENCY_SPC_INSERT", jint>(); }
	static jint CURRENCY_SPC_SURROUNDING_MATCH() { return get_static_field<"CURRENCY_SPC_SURROUNDING_MATCH", jint>(); }

	static jni::ref<android::icu::text::DecimalFormatSymbols> new_object() { return base_::new_object(); }
	static jni::ref<android::icu::text::DecimalFormatSymbols> new_object(jni::ref<java::util::Locale> locale) { return base_::new_object(locale); }
	static jni::ref<android::icu::text::DecimalFormatSymbols> new_object(jni::ref<android::icu::util::ULocale> locale) { return base_::new_object(locale); }
	static jni::ref<android::icu::text::DecimalFormatSymbols> getInstance() { return call_static_method<"getInstance", jni::ref<android::icu::text::DecimalFormatSymbols>>(); }
	static jni::ref<android::icu::text::DecimalFormatSymbols> getInstance(jni::ref<java::util::Locale> locale) { return call_static_method<"getInstance", jni::ref<android::icu::text::DecimalFormatSymbols>>(locale); }
	static jni::ref<android::icu::text::DecimalFormatSymbols> getInstance(jni::ref<android::icu::util::ULocale> locale) { return call_static_method<"getInstance", jni::ref<android::icu::text::DecimalFormatSymbols>>(locale); }
	static jni::ref<jni::array<java::util::Locale>> getAvailableLocales() { return call_static_method<"getAvailableLocales", jni::ref<jni::array<java::util::Locale>>>(); }
	jchar getZeroDigit() { return call_method<"getZeroDigit", jchar>(); }
	jni::ref<jni::array<jchar>> getDigits() { return call_method<"getDigits", jni::ref<jni::array<jchar>>>(); }
	void setZeroDigit(jchar zeroDigit) { return call_method<"setZeroDigit", void>(zeroDigit); }
	jni::ref<jni::array<java::lang::String>> getDigitStrings() { return call_method<"getDigitStrings", jni::ref<jni::array<java::lang::String>>>(); }
	void setDigitStrings(jni::ref<jni::array<java::lang::String>> digitStrings) { return call_method<"setDigitStrings", void>(digitStrings); }
	jchar getSignificantDigit() { return call_method<"getSignificantDigit", jchar>(); }
	void setSignificantDigit(jchar sigDigit) { return call_method<"setSignificantDigit", void>(sigDigit); }
	jchar getGroupingSeparator() { return call_method<"getGroupingSeparator", jchar>(); }
	void setGroupingSeparator(jchar groupingSeparator) { return call_method<"setGroupingSeparator", void>(groupingSeparator); }
	jni::ref<java::lang::String> getGroupingSeparatorString() { return call_method<"getGroupingSeparatorString", jni::ref<java::lang::String>>(); }
	void setGroupingSeparatorString(jni::ref<java::lang::String> groupingSeparatorString) { return call_method<"setGroupingSeparatorString", void>(groupingSeparatorString); }
	jchar getDecimalSeparator() { return call_method<"getDecimalSeparator", jchar>(); }
	void setDecimalSeparator(jchar decimalSeparator) { return call_method<"setDecimalSeparator", void>(decimalSeparator); }
	jni::ref<java::lang::String> getDecimalSeparatorString() { return call_method<"getDecimalSeparatorString", jni::ref<java::lang::String>>(); }
	void setDecimalSeparatorString(jni::ref<java::lang::String> decimalSeparatorString) { return call_method<"setDecimalSeparatorString", void>(decimalSeparatorString); }
	jchar getPerMill() { return call_method<"getPerMill", jchar>(); }
	void setPerMill(jchar perMill) { return call_method<"setPerMill", void>(perMill); }
	jni::ref<java::lang::String> getPerMillString() { return call_method<"getPerMillString", jni::ref<java::lang::String>>(); }
	void setPerMillString(jni::ref<java::lang::String> perMillString) { return call_method<"setPerMillString", void>(perMillString); }
	jchar getPercent() { return call_method<"getPercent", jchar>(); }
	void setPercent(jchar percent) { return call_method<"setPercent", void>(percent); }
	jni::ref<java::lang::String> getPercentString() { return call_method<"getPercentString", jni::ref<java::lang::String>>(); }
	void setPercentString(jni::ref<java::lang::String> percentString) { return call_method<"setPercentString", void>(percentString); }
	jchar getDigit() { return call_method<"getDigit", jchar>(); }
	void setDigit(jchar digit) { return call_method<"setDigit", void>(digit); }
	jchar getPatternSeparator() { return call_method<"getPatternSeparator", jchar>(); }
	void setPatternSeparator(jchar patternSeparator) { return call_method<"setPatternSeparator", void>(patternSeparator); }
	jni::ref<java::lang::String> getInfinity() { return call_method<"getInfinity", jni::ref<java::lang::String>>(); }
	void setInfinity(jni::ref<java::lang::String> infinity) { return call_method<"setInfinity", void>(infinity); }
	jni::ref<java::lang::String> getNaN() { return call_method<"getNaN", jni::ref<java::lang::String>>(); }
	void setNaN(jni::ref<java::lang::String> NaN) { return call_method<"setNaN", void>(NaN); }
	jchar getMinusSign() { return call_method<"getMinusSign", jchar>(); }
	void setMinusSign(jchar minusSign) { return call_method<"setMinusSign", void>(minusSign); }
	jni::ref<java::lang::String> getMinusSignString() { return call_method<"getMinusSignString", jni::ref<java::lang::String>>(); }
	void setMinusSignString(jni::ref<java::lang::String> minusSignString) { return call_method<"setMinusSignString", void>(minusSignString); }
	jchar getPlusSign() { return call_method<"getPlusSign", jchar>(); }
	void setPlusSign(jchar plus) { return call_method<"setPlusSign", void>(plus); }
	jni::ref<java::lang::String> getPlusSignString() { return call_method<"getPlusSignString", jni::ref<java::lang::String>>(); }
	void setPlusSignString(jni::ref<java::lang::String> plusSignString) { return call_method<"setPlusSignString", void>(plusSignString); }
	jni::ref<java::lang::String> getCurrencySymbol() { return call_method<"getCurrencySymbol", jni::ref<java::lang::String>>(); }
	void setCurrencySymbol(jni::ref<java::lang::String> currency) { return call_method<"setCurrencySymbol", void>(currency); }
	jni::ref<java::lang::String> getInternationalCurrencySymbol() { return call_method<"getInternationalCurrencySymbol", jni::ref<java::lang::String>>(); }
	void setInternationalCurrencySymbol(jni::ref<java::lang::String> currency) { return call_method<"setInternationalCurrencySymbol", void>(currency); }
	jni::ref<android::icu::util::Currency> getCurrency() { return call_method<"getCurrency", jni::ref<android::icu::util::Currency>>(); }
	void setCurrency(jni::ref<android::icu::util::Currency> currency) { return call_method<"setCurrency", void>(currency); }
	jchar getMonetaryDecimalSeparator() { return call_method<"getMonetaryDecimalSeparator", jchar>(); }
	void setMonetaryDecimalSeparator(jchar sep) { return call_method<"setMonetaryDecimalSeparator", void>(sep); }
	jni::ref<java::lang::String> getMonetaryDecimalSeparatorString() { return call_method<"getMonetaryDecimalSeparatorString", jni::ref<java::lang::String>>(); }
	void setMonetaryDecimalSeparatorString(jni::ref<java::lang::String> sep) { return call_method<"setMonetaryDecimalSeparatorString", void>(sep); }
	jchar getMonetaryGroupingSeparator() { return call_method<"getMonetaryGroupingSeparator", jchar>(); }
	void setMonetaryGroupingSeparator(jchar sep) { return call_method<"setMonetaryGroupingSeparator", void>(sep); }
	jni::ref<java::lang::String> getMonetaryGroupingSeparatorString() { return call_method<"getMonetaryGroupingSeparatorString", jni::ref<java::lang::String>>(); }
	void setMonetaryGroupingSeparatorString(jni::ref<java::lang::String> sep) { return call_method<"setMonetaryGroupingSeparatorString", void>(sep); }
	jni::ref<java::lang::String> getExponentMultiplicationSign() { return call_method<"getExponentMultiplicationSign", jni::ref<java::lang::String>>(); }
	void setExponentMultiplicationSign(jni::ref<java::lang::String> exponentMultiplicationSign) { return call_method<"setExponentMultiplicationSign", void>(exponentMultiplicationSign); }
	jni::ref<java::lang::String> getExponentSeparator() { return call_method<"getExponentSeparator", jni::ref<java::lang::String>>(); }
	void setExponentSeparator(jni::ref<java::lang::String> exp) { return call_method<"setExponentSeparator", void>(exp); }
	jchar getPadEscape() { return call_method<"getPadEscape", jchar>(); }
	void setPadEscape(jchar c) { return call_method<"setPadEscape", void>(c); }
	jni::ref<java::lang::String> getPatternForCurrencySpacing(jint itemType, jboolean beforeCurrency) { return call_method<"getPatternForCurrencySpacing", jni::ref<java::lang::String>>(itemType, beforeCurrency); }
	void setPatternForCurrencySpacing(jint itemType, jboolean beforeCurrency, jni::ref<java::lang::String> pattern) { return call_method<"setPatternForCurrencySpacing", void>(itemType, beforeCurrency, pattern); }
	jni::ref<java::util::Locale> getLocale() { return call_method<"getLocale", jni::ref<java::util::Locale>>(); }
	jni::ref<android::icu::util::ULocale> getULocale() { return call_method<"getULocale", jni::ref<android::icu::util::ULocale>>(); }
	jni::ref<java::lang::Object> clone() { return call_method<"clone", jni::ref<java::lang::Object>>(); }
	jboolean equals(jni::ref<java::lang::Object> obj) { return call_method<"equals", jboolean>(obj); }
	jint hashCode() { return call_method<"hashCode", jint>(); }

protected:

	DecimalFormatSymbols(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_TEXT_DECIMALFORMATSYMBOLS
