// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_HARDWARE_CONSUMERIRMANAGER_FWD
#define SCAPIX_JAVA_API_ANDROID_HARDWARE_CONSUMERIRMANAGER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::hardware { class ConsumerIrManager; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::hardware::ConsumerIrManager>
{
	static constexpr fixed_string class_name = "android/hardware/ConsumerIrManager";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_HARDWARE_CONSUMERIRMANAGER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_HARDWARE_CONSUMERIRMANAGER)
#define SCAPIX_JAVA_API_ANDROID_HARDWARE_CONSUMERIRMANAGER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/hardware/ConsumerIrManager_CarrierFrequencyRange.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::hardware::ConsumerIrManager : public jni::object_base<"android/hardware/ConsumerIrManager",
	java::lang::Object>
{
public:

	using CarrierFrequencyRange = ConsumerIrManager_CarrierFrequencyRange;

	jboolean hasIrEmitter() { return call_method<"hasIrEmitter", jboolean>(); }
	void transmit(jint carrierFrequency, jni::ref<jni::array<jint>> pattern) { return call_method<"transmit", void>(carrierFrequency, pattern); }
	jni::ref<jni::array<android::hardware::ConsumerIrManager_CarrierFrequencyRange>> getCarrierFrequencies() { return call_method<"getCarrierFrequencies", jni::ref<jni::array<android::hardware::ConsumerIrManager_CarrierFrequencyRange>>>(); }

protected:

	ConsumerIrManager(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_HARDWARE_CONSUMERIRMANAGER
