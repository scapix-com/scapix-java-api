// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_BLUETOOTH_BLUETOOTHMANAGER_FWD
#define SCAPIX_JAVA_API_ANDROID_BLUETOOTH_BLUETOOTHMANAGER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::bluetooth { class BluetoothManager; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::bluetooth::BluetoothManager>
{
	static constexpr fixed_string class_name = "android/bluetooth/BluetoothManager";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_BLUETOOTH_BLUETOOTHMANAGER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_BLUETOOTH_BLUETOOTHMANAGER)
#define SCAPIX_JAVA_API_ANDROID_BLUETOOTH_BLUETOOTHMANAGER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/bluetooth/BluetoothAdapter.h>
#include <scapix/java_api/android/bluetooth/BluetoothDevice.h>
#include <scapix/java_api/android/bluetooth/BluetoothGattServer.h>
#include <scapix/java_api/android/bluetooth/BluetoothGattServerCallback.h>
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/java/util/List.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::bluetooth::BluetoothManager : public jni::object_base<"android/bluetooth/BluetoothManager",
	java::lang::Object>
{
public:

	jni::ref<android::bluetooth::BluetoothAdapter> getAdapter() { return call_method<"getAdapter", jni::ref<android::bluetooth::BluetoothAdapter>>(); }
	jint getConnectionState(jni::ref<android::bluetooth::BluetoothDevice> device, jint profile) { return call_method<"getConnectionState", jint>(device, profile); }
	jni::ref<java::util::List> getConnectedDevices(jint profile) { return call_method<"getConnectedDevices", jni::ref<java::util::List>>(profile); }
	jni::ref<java::util::List> getDevicesMatchingConnectionStates(jint profile, jni::ref<jni::array<jint>> states) { return call_method<"getDevicesMatchingConnectionStates", jni::ref<java::util::List>>(profile, states); }
	jni::ref<android::bluetooth::BluetoothGattServer> openGattServer(jni::ref<android::content::Context> context, jni::ref<android::bluetooth::BluetoothGattServerCallback> callback) { return call_method<"openGattServer", jni::ref<android::bluetooth::BluetoothGattServer>>(context, callback); }

protected:

	BluetoothManager(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_BLUETOOTH_BLUETOOTHMANAGER
