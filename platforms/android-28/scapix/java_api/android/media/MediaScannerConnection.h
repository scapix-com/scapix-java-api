// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/content/ServiceConnection.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIASCANNERCONNECTION_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIASCANNERCONNECTION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media { class MediaScannerConnection; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::MediaScannerConnection>
{
	static constexpr fixed_string class_name = "android/media/MediaScannerConnection";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::content::ServiceConnection>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIASCANNERCONNECTION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIASCANNERCONNECTION)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIASCANNERCONNECTION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/ComponentName.h>
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/media/MediaScannerConnection_MediaScannerConnectionClient.h>
#include <scapix/java_api/android/media/MediaScannerConnection_OnScanCompletedListener.h>
#include <scapix/java_api/android/os/IBinder.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::MediaScannerConnection : public jni::object_base<"android/media/MediaScannerConnection",
	java::lang::Object,
	android::content::ServiceConnection>
{
public:

	using OnScanCompletedListener = MediaScannerConnection_OnScanCompletedListener;
	using MediaScannerConnectionClient = MediaScannerConnection_MediaScannerConnectionClient;

	static jni::ref<android::media::MediaScannerConnection> new_object(jni::ref<android::content::Context> context, jni::ref<android::media::MediaScannerConnection_MediaScannerConnectionClient> client) { return base_::new_object(context, client); }
	void connect() { return call_method<"connect", void>(); }
	void disconnect() { return call_method<"disconnect", void>(); }
	jboolean isConnected() { return call_method<"isConnected", jboolean>(); }
	void scanFile(jni::ref<java::lang::String> path, jni::ref<java::lang::String> mimeType) { return call_method<"scanFile", void>(path, mimeType); }
	static void scanFile(jni::ref<android::content::Context> context, jni::ref<jni::array<java::lang::String>> paths, jni::ref<jni::array<java::lang::String>> mimeTypes, jni::ref<android::media::MediaScannerConnection_OnScanCompletedListener> callback) { return call_static_method<"scanFile", void>(context, paths, mimeTypes, callback); }
	void onServiceConnected(jni::ref<android::content::ComponentName> className, jni::ref<android::os::IBinder> service) { return call_method<"onServiceConnected", void>(className, service); }
	void onServiceDisconnected(jni::ref<android::content::ComponentName> className) { return call_method<"onServiceDisconnected", void>(className); }

protected:

	MediaScannerConnection(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIASCANNERCONNECTION
