// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_SYNCPARAMS_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_SYNCPARAMS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media { class SyncParams; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::SyncParams>
{
	static constexpr fixed_string class_name = "android/media/SyncParams";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_SYNCPARAMS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_SYNCPARAMS)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_SYNCPARAMS

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::SyncParams : public jni::object_base<"android/media/SyncParams",
	java::lang::Object>
{
public:

	static jint AUDIO_ADJUST_MODE_DEFAULT() { return get_static_field<"AUDIO_ADJUST_MODE_DEFAULT", jint>(); }
	static jint AUDIO_ADJUST_MODE_RESAMPLE() { return get_static_field<"AUDIO_ADJUST_MODE_RESAMPLE", jint>(); }
	static jint AUDIO_ADJUST_MODE_STRETCH() { return get_static_field<"AUDIO_ADJUST_MODE_STRETCH", jint>(); }
	static jint SYNC_SOURCE_AUDIO() { return get_static_field<"SYNC_SOURCE_AUDIO", jint>(); }
	static jint SYNC_SOURCE_DEFAULT() { return get_static_field<"SYNC_SOURCE_DEFAULT", jint>(); }
	static jint SYNC_SOURCE_SYSTEM_CLOCK() { return get_static_field<"SYNC_SOURCE_SYSTEM_CLOCK", jint>(); }
	static jint SYNC_SOURCE_VSYNC() { return get_static_field<"SYNC_SOURCE_VSYNC", jint>(); }

	static jni::ref<android::media::SyncParams> new_object() { return base_::new_object(); }
	jni::ref<android::media::SyncParams> allowDefaults() { return call_method<"allowDefaults", jni::ref<android::media::SyncParams>>(); }
	jni::ref<android::media::SyncParams> setAudioAdjustMode(jint audioAdjustMode) { return call_method<"setAudioAdjustMode", jni::ref<android::media::SyncParams>>(audioAdjustMode); }
	jint getAudioAdjustMode() { return call_method<"getAudioAdjustMode", jint>(); }
	jni::ref<android::media::SyncParams> setSyncSource(jint syncSource) { return call_method<"setSyncSource", jni::ref<android::media::SyncParams>>(syncSource); }
	jint getSyncSource() { return call_method<"getSyncSource", jint>(); }
	jni::ref<android::media::SyncParams> setTolerance(jfloat tolerance) { return call_method<"setTolerance", jni::ref<android::media::SyncParams>>(tolerance); }
	jfloat getTolerance() { return call_method<"getTolerance", jfloat>(); }
	jni::ref<android::media::SyncParams> setFrameRate(jfloat frameRate) { return call_method<"setFrameRate", jni::ref<android::media::SyncParams>>(frameRate); }
	jfloat getFrameRate() { return call_method<"getFrameRate", jfloat>(); }

protected:

	SyncParams(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_SYNCPARAMS
