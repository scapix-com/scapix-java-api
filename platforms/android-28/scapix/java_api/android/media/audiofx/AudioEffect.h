// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOFX_AUDIOEFFECT_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOFX_AUDIOEFFECT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media::audiofx { class AudioEffect; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::audiofx::AudioEffect>
{
	static constexpr fixed_string class_name = "android/media/audiofx/AudioEffect";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOFX_AUDIOEFFECT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOFX_AUDIOEFFECT)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOFX_AUDIOEFFECT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/media/audiofx/AudioEffect_Descriptor.h>
#include <scapix/java_api/android/media/audiofx/AudioEffect_OnControlStatusChangeListener.h>
#include <scapix/java_api/android/media/audiofx/AudioEffect_OnEnableStatusChangeListener.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/UUID.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::audiofx::AudioEffect : public jni::object_base<"android/media/audiofx/AudioEffect",
	java::lang::Object>
{
public:

	using OnEnableStatusChangeListener = AudioEffect_OnEnableStatusChangeListener;
	using OnControlStatusChangeListener = AudioEffect_OnControlStatusChangeListener;
	using Descriptor = AudioEffect_Descriptor;

	static jni::ref<java::lang::String> ACTION_CLOSE_AUDIO_EFFECT_CONTROL_SESSION() { return get_static_field<"ACTION_CLOSE_AUDIO_EFFECT_CONTROL_SESSION", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ACTION_DISPLAY_AUDIO_EFFECT_CONTROL_PANEL() { return get_static_field<"ACTION_DISPLAY_AUDIO_EFFECT_CONTROL_PANEL", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ACTION_OPEN_AUDIO_EFFECT_CONTROL_SESSION() { return get_static_field<"ACTION_OPEN_AUDIO_EFFECT_CONTROL_SESSION", jni::ref<java::lang::String>>(); }
	static jint ALREADY_EXISTS() { return get_static_field<"ALREADY_EXISTS", jint>(); }
	static jint CONTENT_TYPE_GAME() { return get_static_field<"CONTENT_TYPE_GAME", jint>(); }
	static jint CONTENT_TYPE_MOVIE() { return get_static_field<"CONTENT_TYPE_MOVIE", jint>(); }
	static jint CONTENT_TYPE_MUSIC() { return get_static_field<"CONTENT_TYPE_MUSIC", jint>(); }
	static jint CONTENT_TYPE_VOICE() { return get_static_field<"CONTENT_TYPE_VOICE", jint>(); }
	static jni::ref<java::lang::String> EFFECT_AUXILIARY() { return get_static_field<"EFFECT_AUXILIARY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> EFFECT_INSERT() { return get_static_field<"EFFECT_INSERT", jni::ref<java::lang::String>>(); }
	static jni::ref<java::util::UUID> EFFECT_TYPE_AEC() { return get_static_field<"EFFECT_TYPE_AEC", jni::ref<java::util::UUID>>(); }
	static jni::ref<java::util::UUID> EFFECT_TYPE_AGC() { return get_static_field<"EFFECT_TYPE_AGC", jni::ref<java::util::UUID>>(); }
	static jni::ref<java::util::UUID> EFFECT_TYPE_BASS_BOOST() { return get_static_field<"EFFECT_TYPE_BASS_BOOST", jni::ref<java::util::UUID>>(); }
	static jni::ref<java::util::UUID> EFFECT_TYPE_DYNAMICS_PROCESSING() { return get_static_field<"EFFECT_TYPE_DYNAMICS_PROCESSING", jni::ref<java::util::UUID>>(); }
	static jni::ref<java::util::UUID> EFFECT_TYPE_ENV_REVERB() { return get_static_field<"EFFECT_TYPE_ENV_REVERB", jni::ref<java::util::UUID>>(); }
	static jni::ref<java::util::UUID> EFFECT_TYPE_EQUALIZER() { return get_static_field<"EFFECT_TYPE_EQUALIZER", jni::ref<java::util::UUID>>(); }
	static jni::ref<java::util::UUID> EFFECT_TYPE_LOUDNESS_ENHANCER() { return get_static_field<"EFFECT_TYPE_LOUDNESS_ENHANCER", jni::ref<java::util::UUID>>(); }
	static jni::ref<java::util::UUID> EFFECT_TYPE_NS() { return get_static_field<"EFFECT_TYPE_NS", jni::ref<java::util::UUID>>(); }
	static jni::ref<java::util::UUID> EFFECT_TYPE_PRESET_REVERB() { return get_static_field<"EFFECT_TYPE_PRESET_REVERB", jni::ref<java::util::UUID>>(); }
	static jni::ref<java::util::UUID> EFFECT_TYPE_VIRTUALIZER() { return get_static_field<"EFFECT_TYPE_VIRTUALIZER", jni::ref<java::util::UUID>>(); }
	static jint ERROR() { return get_static_field<"ERROR", jint>(); }
	static jint ERROR_BAD_VALUE() { return get_static_field<"ERROR_BAD_VALUE", jint>(); }
	static jint ERROR_DEAD_OBJECT() { return get_static_field<"ERROR_DEAD_OBJECT", jint>(); }
	static jint ERROR_INVALID_OPERATION() { return get_static_field<"ERROR_INVALID_OPERATION", jint>(); }
	static jint ERROR_NO_INIT() { return get_static_field<"ERROR_NO_INIT", jint>(); }
	static jint ERROR_NO_MEMORY() { return get_static_field<"ERROR_NO_MEMORY", jint>(); }
	static jni::ref<java::lang::String> EXTRA_AUDIO_SESSION() { return get_static_field<"EXTRA_AUDIO_SESSION", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> EXTRA_CONTENT_TYPE() { return get_static_field<"EXTRA_CONTENT_TYPE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> EXTRA_PACKAGE_NAME() { return get_static_field<"EXTRA_PACKAGE_NAME", jni::ref<java::lang::String>>(); }
	static jint SUCCESS() { return get_static_field<"SUCCESS", jint>(); }

	void release() { return call_method<"release", void>(); }
	jni::ref<android::media::audiofx::AudioEffect_Descriptor> getDescriptor() { return call_method<"getDescriptor", jni::ref<android::media::audiofx::AudioEffect_Descriptor>>(); }
	static jni::ref<jni::array<android::media::audiofx::AudioEffect_Descriptor>> queryEffects() { return call_static_method<"queryEffects", jni::ref<jni::array<android::media::audiofx::AudioEffect_Descriptor>>>(); }
	jint setEnabled(jboolean enabled) { return call_method<"setEnabled", jint>(enabled); }
	jint getId() { return call_method<"getId", jint>(); }
	jboolean getEnabled() { return call_method<"getEnabled", jboolean>(); }
	jboolean hasControl() { return call_method<"hasControl", jboolean>(); }
	void setEnableStatusListener(jni::ref<android::media::audiofx::AudioEffect_OnEnableStatusChangeListener> listener) { return call_method<"setEnableStatusListener", void>(listener); }
	void setControlStatusListener(jni::ref<android::media::audiofx::AudioEffect_OnControlStatusChangeListener> listener) { return call_method<"setControlStatusListener", void>(listener); }

protected:

	AudioEffect(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOFX_AUDIOEFFECT
