// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/media/audiofx/DynamicsProcessing_BandBase.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOFX_DYNAMICSPROCESSING_MBCBAND_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOFX_DYNAMICSPROCESSING_MBCBAND_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media::audiofx { class DynamicsProcessing_MbcBand; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::audiofx::DynamicsProcessing_MbcBand>
{
	static constexpr fixed_string class_name = "android/media/audiofx/DynamicsProcessing$MbcBand";
	using base_classes = std::tuple<scapix::java_api::android::media::audiofx::DynamicsProcessing_BandBase>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOFX_DYNAMICSPROCESSING_MBCBAND_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOFX_DYNAMICSPROCESSING_MBCBAND)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOFX_DYNAMICSPROCESSING_MBCBAND

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::audiofx::DynamicsProcessing_MbcBand : public jni::object_base<"android/media/audiofx/DynamicsProcessing$MbcBand",
	android::media::audiofx::DynamicsProcessing_BandBase>
{
public:

	static jni::ref<android::media::audiofx::DynamicsProcessing_MbcBand> new_object(jboolean enabled, jfloat cutoffFrequency, jfloat attackTime, jfloat releaseTime, jfloat ratio, jfloat threshold, jfloat kneeWidth, jfloat noiseGateThreshold, jfloat expanderRatio, jfloat preGain, jfloat postGain) { return base_::new_object(enabled, cutoffFrequency, attackTime, releaseTime, ratio, threshold, kneeWidth, noiseGateThreshold, expanderRatio, preGain, postGain); }
	static jni::ref<android::media::audiofx::DynamicsProcessing_MbcBand> new_object(jni::ref<android::media::audiofx::DynamicsProcessing_MbcBand> cfg) { return base_::new_object(cfg); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jfloat getAttackTime() { return call_method<"getAttackTime", jfloat>(); }
	void setAttackTime(jfloat attackTime) { return call_method<"setAttackTime", void>(attackTime); }
	jfloat getReleaseTime() { return call_method<"getReleaseTime", jfloat>(); }
	void setReleaseTime(jfloat releaseTime) { return call_method<"setReleaseTime", void>(releaseTime); }
	jfloat getRatio() { return call_method<"getRatio", jfloat>(); }
	void setRatio(jfloat ratio) { return call_method<"setRatio", void>(ratio); }
	jfloat getThreshold() { return call_method<"getThreshold", jfloat>(); }
	void setThreshold(jfloat threshold) { return call_method<"setThreshold", void>(threshold); }
	jfloat getKneeWidth() { return call_method<"getKneeWidth", jfloat>(); }
	void setKneeWidth(jfloat kneeWidth) { return call_method<"setKneeWidth", void>(kneeWidth); }
	jfloat getNoiseGateThreshold() { return call_method<"getNoiseGateThreshold", jfloat>(); }
	void setNoiseGateThreshold(jfloat noiseGateThreshold) { return call_method<"setNoiseGateThreshold", void>(noiseGateThreshold); }
	jfloat getExpanderRatio() { return call_method<"getExpanderRatio", jfloat>(); }
	void setExpanderRatio(jfloat expanderRatio) { return call_method<"setExpanderRatio", void>(expanderRatio); }
	jfloat getPreGain() { return call_method<"getPreGain", jfloat>(); }
	void setPreGain(jfloat preGain) { return call_method<"setPreGain", void>(preGain); }
	jfloat getPostGain() { return call_method<"getPostGain", jfloat>(); }
	void setPostGain(jfloat postGain) { return call_method<"setPostGain", void>(postGain); }

protected:

	DynamicsProcessing_MbcBand(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOFX_DYNAMICSPROCESSING_MBCBAND
