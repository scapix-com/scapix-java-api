// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_SESSION_MEDIASESSIONMANAGER_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_SESSION_MEDIASESSIONMANAGER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media::session { class MediaSessionManager; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::session::MediaSessionManager>
{
	static constexpr fixed_string class_name = "android/media/session/MediaSessionManager";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_SESSION_MEDIASESSIONMANAGER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_SESSION_MEDIASESSIONMANAGER)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_SESSION_MEDIASESSIONMANAGER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/ComponentName.h>
#include <scapix/java_api/android/media/session/MediaSessionManager_OnActiveSessionsChangedListener.h>
#include <scapix/java_api/android/media/session/MediaSessionManager_RemoteUserInfo.h>
#include <scapix/java_api/android/os/Handler.h>
#include <scapix/java_api/java/util/List.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::session::MediaSessionManager : public jni::object_base<"android/media/session/MediaSessionManager",
	java::lang::Object>
{
public:

	using RemoteUserInfo = MediaSessionManager_RemoteUserInfo;
	using OnActiveSessionsChangedListener = MediaSessionManager_OnActiveSessionsChangedListener;

	jni::ref<java::util::List> getActiveSessions(jni::ref<android::content::ComponentName> notificationListener) { return call_method<"getActiveSessions", jni::ref<java::util::List>>(notificationListener); }
	void addOnActiveSessionsChangedListener(jni::ref<android::media::session::MediaSessionManager_OnActiveSessionsChangedListener> sessionListener, jni::ref<android::content::ComponentName> notificationListener) { return call_method<"addOnActiveSessionsChangedListener", void>(sessionListener, notificationListener); }
	void addOnActiveSessionsChangedListener(jni::ref<android::media::session::MediaSessionManager_OnActiveSessionsChangedListener> sessionListener, jni::ref<android::content::ComponentName> notificationListener, jni::ref<android::os::Handler> handler) { return call_method<"addOnActiveSessionsChangedListener", void>(sessionListener, notificationListener, handler); }
	void removeOnActiveSessionsChangedListener(jni::ref<android::media::session::MediaSessionManager_OnActiveSessionsChangedListener> listener) { return call_method<"removeOnActiveSessionsChangedListener", void>(listener); }
	jboolean isTrustedForMediaControl(jni::ref<android::media::session::MediaSessionManager_RemoteUserInfo> userInfo) { return call_method<"isTrustedForMediaControl", jboolean>(userInfo); }

protected:

	MediaSessionManager(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_SESSION_MEDIASESSIONMANAGER
