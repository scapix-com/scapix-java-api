// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOATTRIBUTES_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOATTRIBUTES_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media { class AudioAttributes; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::AudioAttributes>
{
	static constexpr fixed_string class_name = "android/media/AudioAttributes";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOATTRIBUTES_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOATTRIBUTES)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOATTRIBUTES

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/android/media/AudioAttributes_Builder.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::AudioAttributes : public jni::object_base<"android/media/AudioAttributes",
	java::lang::Object,
	android::os::Parcelable>
{
public:

	using Builder = AudioAttributes_Builder;

	static jint CONTENT_TYPE_MOVIE() { return get_static_field<"CONTENT_TYPE_MOVIE", jint>(); }
	static jint CONTENT_TYPE_MUSIC() { return get_static_field<"CONTENT_TYPE_MUSIC", jint>(); }
	static jint CONTENT_TYPE_SONIFICATION() { return get_static_field<"CONTENT_TYPE_SONIFICATION", jint>(); }
	static jint CONTENT_TYPE_SPEECH() { return get_static_field<"CONTENT_TYPE_SPEECH", jint>(); }
	static jint CONTENT_TYPE_UNKNOWN() { return get_static_field<"CONTENT_TYPE_UNKNOWN", jint>(); }
	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }
	static jint FLAG_AUDIBILITY_ENFORCED() { return get_static_field<"FLAG_AUDIBILITY_ENFORCED", jint>(); }
	static jint FLAG_HW_AV_SYNC() { return get_static_field<"FLAG_HW_AV_SYNC", jint>(); }
	static jint FLAG_LOW_LATENCY() { return get_static_field<"FLAG_LOW_LATENCY", jint>(); }
	static jint USAGE_ALARM() { return get_static_field<"USAGE_ALARM", jint>(); }
	static jint USAGE_ASSISTANCE_ACCESSIBILITY() { return get_static_field<"USAGE_ASSISTANCE_ACCESSIBILITY", jint>(); }
	static jint USAGE_ASSISTANCE_NAVIGATION_GUIDANCE() { return get_static_field<"USAGE_ASSISTANCE_NAVIGATION_GUIDANCE", jint>(); }
	static jint USAGE_ASSISTANCE_SONIFICATION() { return get_static_field<"USAGE_ASSISTANCE_SONIFICATION", jint>(); }
	static jint USAGE_ASSISTANT() { return get_static_field<"USAGE_ASSISTANT", jint>(); }
	static jint USAGE_GAME() { return get_static_field<"USAGE_GAME", jint>(); }
	static jint USAGE_MEDIA() { return get_static_field<"USAGE_MEDIA", jint>(); }
	static jint USAGE_NOTIFICATION() { return get_static_field<"USAGE_NOTIFICATION", jint>(); }
	static jint USAGE_NOTIFICATION_COMMUNICATION_DELAYED() { return get_static_field<"USAGE_NOTIFICATION_COMMUNICATION_DELAYED", jint>(); }
	static jint USAGE_NOTIFICATION_COMMUNICATION_INSTANT() { return get_static_field<"USAGE_NOTIFICATION_COMMUNICATION_INSTANT", jint>(); }
	static jint USAGE_NOTIFICATION_COMMUNICATION_REQUEST() { return get_static_field<"USAGE_NOTIFICATION_COMMUNICATION_REQUEST", jint>(); }
	static jint USAGE_NOTIFICATION_EVENT() { return get_static_field<"USAGE_NOTIFICATION_EVENT", jint>(); }
	static jint USAGE_NOTIFICATION_RINGTONE() { return get_static_field<"USAGE_NOTIFICATION_RINGTONE", jint>(); }
	static jint USAGE_UNKNOWN() { return get_static_field<"USAGE_UNKNOWN", jint>(); }
	static jint USAGE_VOICE_COMMUNICATION() { return get_static_field<"USAGE_VOICE_COMMUNICATION", jint>(); }
	static jint USAGE_VOICE_COMMUNICATION_SIGNALLING() { return get_static_field<"USAGE_VOICE_COMMUNICATION_SIGNALLING", jint>(); }

	jint getContentType() { return call_method<"getContentType", jint>(); }
	jint getUsage() { return call_method<"getUsage", jint>(); }
	jint getFlags() { return call_method<"getFlags", jint>(); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	void writeToParcel(jni::ref<android::os::Parcel> dest, jint flags) { return call_method<"writeToParcel", void>(dest, flags); }
	jboolean equals(jni::ref<java::lang::Object> o) { return call_method<"equals", jboolean>(o); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jint getVolumeControlStream() { return call_method<"getVolumeControlStream", jint>(); }

protected:

	AudioAttributes(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOATTRIBUTES
