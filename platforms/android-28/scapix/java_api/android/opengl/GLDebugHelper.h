// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_OPENGL_GLDEBUGHELPER_FWD
#define SCAPIX_JAVA_API_ANDROID_OPENGL_GLDEBUGHELPER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::opengl { class GLDebugHelper; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::opengl::GLDebugHelper>
{
	static constexpr fixed_string class_name = "android/opengl/GLDebugHelper";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_OPENGL_GLDEBUGHELPER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_OPENGL_GLDEBUGHELPER)
#define SCAPIX_JAVA_API_ANDROID_OPENGL_GLDEBUGHELPER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/Writer.h>
#include <scapix/java_api/javax/microedition/khronos/egl/EGL.h>
#include <scapix/java_api/javax/microedition/khronos/opengles/GL.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::opengl::GLDebugHelper : public jni::object_base<"android/opengl/GLDebugHelper",
	java::lang::Object>
{
public:

	static jint CONFIG_CHECK_GL_ERROR() { return get_static_field<"CONFIG_CHECK_GL_ERROR", jint>(); }
	static jint CONFIG_CHECK_THREAD() { return get_static_field<"CONFIG_CHECK_THREAD", jint>(); }
	static jint CONFIG_LOG_ARGUMENT_NAMES() { return get_static_field<"CONFIG_LOG_ARGUMENT_NAMES", jint>(); }
	static jint ERROR_WRONG_THREAD() { return get_static_field<"ERROR_WRONG_THREAD", jint>(); }

	static jni::ref<android::opengl::GLDebugHelper> new_object() { return base_::new_object(); }
	static jni::ref<javax::microedition::khronos::opengles::GL> wrap(jni::ref<javax::microedition::khronos::opengles::GL> gl, jint configFlags, jni::ref<java::io::Writer> log) { return call_static_method<"wrap", jni::ref<javax::microedition::khronos::opengles::GL>>(gl, configFlags, log); }
	static jni::ref<javax::microedition::khronos::egl::EGL> wrap(jni::ref<javax::microedition::khronos::egl::EGL> egl, jint configFlags, jni::ref<java::io::Writer> log) { return call_static_method<"wrap", jni::ref<javax::microedition::khronos::egl::EGL>>(egl, configFlags, log); }

protected:

	GLDebugHelper(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_OPENGL_GLDEBUGHELPER
