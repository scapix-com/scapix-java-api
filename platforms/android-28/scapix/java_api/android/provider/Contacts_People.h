// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/provider/BaseColumns.h>
#include <scapix/java_api/android/provider/Contacts_PeopleColumns.h>
#include <scapix/java_api/android/provider/Contacts_PhonesColumns.h>
#include <scapix/java_api/android/provider/Contacts_PresenceColumns.h>

#ifndef SCAPIX_JAVA_API_ANDROID_PROVIDER_CONTACTS_PEOPLE_FWD
#define SCAPIX_JAVA_API_ANDROID_PROVIDER_CONTACTS_PEOPLE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::provider { class Contacts_People; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::provider::Contacts_People>
{
	static constexpr fixed_string class_name = "android/provider/Contacts$People";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::provider::BaseColumns, scapix::java_api::android::provider::Contacts_PeopleColumns, scapix::java_api::android::provider::Contacts_PhonesColumns, scapix::java_api::android::provider::Contacts_PresenceColumns>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_PROVIDER_CONTACTS_PEOPLE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_PROVIDER_CONTACTS_PEOPLE)
#define SCAPIX_JAVA_API_ANDROID_PROVIDER_CONTACTS_PEOPLE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/ContentResolver.h>
#include <scapix/java_api/android/content/ContentValues.h>
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/database/Cursor.h>
#include <scapix/java_api/android/graphics/Bitmap.h>
#include <scapix/java_api/android/graphics/BitmapFactory_Options.h>
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/android/provider/Contacts_People_Phones.h>
#include <scapix/java_api/android/provider/Contacts_People_Extensions.h>
#include <scapix/java_api/android/provider/Contacts_People_ContactMethods.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::provider::Contacts_People : public jni::object_base<"android/provider/Contacts$People",
	java::lang::Object,
	android::provider::BaseColumns,
	android::provider::Contacts_PeopleColumns,
	android::provider::Contacts_PhonesColumns,
	android::provider::Contacts_PresenceColumns>
{
public:

	using Phones = Contacts_People_Phones;
	using Extensions = Contacts_People_Extensions;
	using ContactMethods = Contacts_People_ContactMethods;

	static jni::ref<android::net::Uri> CONTENT_FILTER_URI() { return get_static_field<"CONTENT_FILTER_URI", jni::ref<android::net::Uri>>(); }
	static jni::ref<java::lang::String> CONTENT_ITEM_TYPE() { return get_static_field<"CONTENT_ITEM_TYPE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> CONTENT_TYPE() { return get_static_field<"CONTENT_TYPE", jni::ref<java::lang::String>>(); }
	static jni::ref<android::net::Uri> CONTENT_URI() { return get_static_field<"CONTENT_URI", jni::ref<android::net::Uri>>(); }
	static jni::ref<java::lang::String> DEFAULT_SORT_ORDER() { return get_static_field<"DEFAULT_SORT_ORDER", jni::ref<java::lang::String>>(); }
	static jni::ref<android::net::Uri> DELETED_CONTENT_URI() { return get_static_field<"DELETED_CONTENT_URI", jni::ref<android::net::Uri>>(); }
	static jni::ref<java::lang::String> PRIMARY_EMAIL_ID() { return get_static_field<"PRIMARY_EMAIL_ID", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> PRIMARY_ORGANIZATION_ID() { return get_static_field<"PRIMARY_ORGANIZATION_ID", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> PRIMARY_PHONE_ID() { return get_static_field<"PRIMARY_PHONE_ID", jni::ref<java::lang::String>>(); }

	static void markAsContacted(jni::ref<android::content::ContentResolver> resolver, jlong personId) { return call_static_method<"markAsContacted", void>(resolver, personId); }
	static jni::ref<android::net::Uri> addToMyContactsGroup(jni::ref<android::content::ContentResolver> resolver, jlong personId) { return call_static_method<"addToMyContactsGroup", jni::ref<android::net::Uri>>(resolver, personId); }
	static jni::ref<android::net::Uri> addToGroup(jni::ref<android::content::ContentResolver> resolver, jlong personId, jni::ref<java::lang::String> p3) { return call_static_method<"addToGroup", jni::ref<android::net::Uri>>(resolver, personId, p3); }
	static jni::ref<android::net::Uri> addToGroup(jni::ref<android::content::ContentResolver> resolver, jlong personId, jlong p3) { return call_static_method<"addToGroup", jni::ref<android::net::Uri>>(resolver, personId, p3); }
	static jni::ref<android::net::Uri> createPersonInMyContactsGroup(jni::ref<android::content::ContentResolver> resolver, jni::ref<android::content::ContentValues> values) { return call_static_method<"createPersonInMyContactsGroup", jni::ref<android::net::Uri>>(resolver, values); }
	static jni::ref<android::database::Cursor> queryGroups(jni::ref<android::content::ContentResolver> resolver, jlong person) { return call_static_method<"queryGroups", jni::ref<android::database::Cursor>>(resolver, person); }
	static void setPhotoData(jni::ref<android::content::ContentResolver> cr, jni::ref<android::net::Uri> person, jni::ref<jni::array<jbyte>> data) { return call_static_method<"setPhotoData", void>(cr, person, data); }
	static jni::ref<java::io::InputStream> openContactPhotoInputStream(jni::ref<android::content::ContentResolver> cr, jni::ref<android::net::Uri> person) { return call_static_method<"openContactPhotoInputStream", jni::ref<java::io::InputStream>>(cr, person); }
	static jni::ref<android::graphics::Bitmap> loadContactPhoto(jni::ref<android::content::Context> context, jni::ref<android::net::Uri> person, jint placeholderImageResource, jni::ref<android::graphics::BitmapFactory_Options> options) { return call_static_method<"loadContactPhoto", jni::ref<android::graphics::Bitmap>>(context, person, placeholderImageResource, options); }

protected:

	Contacts_People(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_PROVIDER_CONTACTS_PEOPLE
