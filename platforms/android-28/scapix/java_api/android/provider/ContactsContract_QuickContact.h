// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_PROVIDER_CONTACTSCONTRACT_QUICKCONTACT_FWD
#define SCAPIX_JAVA_API_ANDROID_PROVIDER_CONTACTSCONTRACT_QUICKCONTACT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::provider { class ContactsContract_QuickContact; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::provider::ContactsContract_QuickContact>
{
	static constexpr fixed_string class_name = "android/provider/ContactsContract$QuickContact";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_PROVIDER_CONTACTSCONTRACT_QUICKCONTACT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_PROVIDER_CONTACTSCONTRACT_QUICKCONTACT)
#define SCAPIX_JAVA_API_ANDROID_PROVIDER_CONTACTSCONTRACT_QUICKCONTACT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/graphics/Rect.h>
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::provider::ContactsContract_QuickContact : public jni::object_base<"android/provider/ContactsContract$QuickContact",
	java::lang::Object>
{
public:

	static jni::ref<java::lang::String> ACTION_QUICK_CONTACT() { return get_static_field<"ACTION_QUICK_CONTACT", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> EXTRA_EXCLUDE_MIMES() { return get_static_field<"EXTRA_EXCLUDE_MIMES", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> EXTRA_MODE() { return get_static_field<"EXTRA_MODE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> EXTRA_PRIORITIZED_MIMETYPE() { return get_static_field<"EXTRA_PRIORITIZED_MIMETYPE", jni::ref<java::lang::String>>(); }
	static jint MODE_LARGE() { return get_static_field<"MODE_LARGE", jint>(); }
	static jint MODE_MEDIUM() { return get_static_field<"MODE_MEDIUM", jint>(); }
	static jint MODE_SMALL() { return get_static_field<"MODE_SMALL", jint>(); }

	static jni::ref<android::provider::ContactsContract_QuickContact> new_object() { return base_::new_object(); }
	static void showQuickContact(jni::ref<android::content::Context> context, jni::ref<android::view::View> target, jni::ref<android::net::Uri> lookupUri, jint mode, jni::ref<jni::array<java::lang::String>> excludeMimes) { return call_static_method<"showQuickContact", void>(context, target, lookupUri, mode, excludeMimes); }
	static void showQuickContact(jni::ref<android::content::Context> context, jni::ref<android::graphics::Rect> target, jni::ref<android::net::Uri> lookupUri, jint mode, jni::ref<jni::array<java::lang::String>> excludeMimes) { return call_static_method<"showQuickContact", void>(context, target, lookupUri, mode, excludeMimes); }
	static void showQuickContact(jni::ref<android::content::Context> context, jni::ref<android::view::View> target, jni::ref<android::net::Uri> lookupUri, jni::ref<jni::array<java::lang::String>> excludeMimes, jni::ref<java::lang::String> prioritizedMimeType) { return call_static_method<"showQuickContact", void>(context, target, lookupUri, excludeMimes, prioritizedMimeType); }
	static void showQuickContact(jni::ref<android::content::Context> context, jni::ref<android::graphics::Rect> target, jni::ref<android::net::Uri> lookupUri, jni::ref<jni::array<java::lang::String>> excludeMimes, jni::ref<java::lang::String> prioritizedMimeType) { return call_static_method<"showQuickContact", void>(context, target, lookupUri, excludeMimes, prioritizedMimeType); }

protected:

	ContactsContract_QuickContact(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_PROVIDER_CONTACTSCONTRACT_QUICKCONTACT
