// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_VIEW_AUTOFILL_AUTOFILLMANAGER_FWD
#define SCAPIX_JAVA_API_ANDROID_VIEW_AUTOFILL_AUTOFILLMANAGER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::view::autofill { class AutofillManager; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::view::autofill::AutofillManager>
{
	static constexpr fixed_string class_name = "android/view/autofill/AutofillManager";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_AUTOFILL_AUTOFILLMANAGER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_VIEW_AUTOFILL_AUTOFILLMANAGER)
#define SCAPIX_JAVA_API_ANDROID_VIEW_AUTOFILL_AUTOFILLMANAGER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/ComponentName.h>
#include <scapix/java_api/android/graphics/Rect.h>
#include <scapix/java_api/android/service/autofill/UserData.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/android/view/autofill/AutofillId.h>
#include <scapix/java_api/android/view/autofill/AutofillManager_AutofillCallback.h>
#include <scapix/java_api/android/view/autofill/AutofillValue.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::view::autofill::AutofillManager : public jni::object_base<"android/view/autofill/AutofillManager",
	java::lang::Object>
{
public:

	using AutofillCallback = AutofillManager_AutofillCallback;

	static jni::ref<java::lang::String> EXTRA_ASSIST_STRUCTURE() { return get_static_field<"EXTRA_ASSIST_STRUCTURE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> EXTRA_AUTHENTICATION_RESULT() { return get_static_field<"EXTRA_AUTHENTICATION_RESULT", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> EXTRA_CLIENT_STATE() { return get_static_field<"EXTRA_CLIENT_STATE", jni::ref<java::lang::String>>(); }

	jboolean isEnabled() { return call_method<"isEnabled", jboolean>(); }
	void requestAutofill(jni::ref<android::view::View> view) { return call_method<"requestAutofill", void>(view); }
	void requestAutofill(jni::ref<android::view::View> view, jint virtualId, jni::ref<android::graphics::Rect> absBounds) { return call_method<"requestAutofill", void>(view, virtualId, absBounds); }
	void notifyViewEntered(jni::ref<android::view::View> view) { return call_method<"notifyViewEntered", void>(view); }
	void notifyViewExited(jni::ref<android::view::View> view) { return call_method<"notifyViewExited", void>(view); }
	void notifyViewVisibilityChanged(jni::ref<android::view::View> view, jboolean isVisible) { return call_method<"notifyViewVisibilityChanged", void>(view, isVisible); }
	void notifyViewVisibilityChanged(jni::ref<android::view::View> view, jint virtualId, jboolean isVisible) { return call_method<"notifyViewVisibilityChanged", void>(view, virtualId, isVisible); }
	void notifyViewEntered(jni::ref<android::view::View> view, jint virtualId, jni::ref<android::graphics::Rect> absBounds) { return call_method<"notifyViewEntered", void>(view, virtualId, absBounds); }
	void notifyViewExited(jni::ref<android::view::View> view, jint virtualId) { return call_method<"notifyViewExited", void>(view, virtualId); }
	void notifyValueChanged(jni::ref<android::view::View> view) { return call_method<"notifyValueChanged", void>(view); }
	void notifyValueChanged(jni::ref<android::view::View> view, jint virtualId, jni::ref<android::view::autofill::AutofillValue> value) { return call_method<"notifyValueChanged", void>(view, virtualId, value); }
	void notifyViewClicked(jni::ref<android::view::View> view) { return call_method<"notifyViewClicked", void>(view); }
	void notifyViewClicked(jni::ref<android::view::View> view, jint virtualId) { return call_method<"notifyViewClicked", void>(view, virtualId); }
	void commit() { return call_method<"commit", void>(); }
	void cancel() { return call_method<"cancel", void>(); }
	void disableAutofillServices() { return call_method<"disableAutofillServices", void>(); }
	jboolean hasEnabledAutofillServices() { return call_method<"hasEnabledAutofillServices", jboolean>(); }
	jni::ref<android::content::ComponentName> getAutofillServiceComponentName() { return call_method<"getAutofillServiceComponentName", jni::ref<android::content::ComponentName>>(); }
	jni::ref<java::lang::String> getUserDataId() { return call_method<"getUserDataId", jni::ref<java::lang::String>>(); }
	jni::ref<android::service::autofill::UserData> getUserData() { return call_method<"getUserData", jni::ref<android::service::autofill::UserData>>(); }
	void setUserData(jni::ref<android::service::autofill::UserData> userData) { return call_method<"setUserData", void>(userData); }
	jboolean isFieldClassificationEnabled() { return call_method<"isFieldClassificationEnabled", jboolean>(); }
	jni::ref<java::lang::String> getDefaultFieldClassificationAlgorithm() { return call_method<"getDefaultFieldClassificationAlgorithm", jni::ref<java::lang::String>>(); }
	jni::ref<java::util::List> getAvailableFieldClassificationAlgorithms() { return call_method<"getAvailableFieldClassificationAlgorithms", jni::ref<java::util::List>>(); }
	jboolean isAutofillSupported() { return call_method<"isAutofillSupported", jboolean>(); }
	jni::ref<android::view::autofill::AutofillId> getNextAutofillId() { return call_method<"getNextAutofillId", jni::ref<android::view::autofill::AutofillId>>(); }
	void registerCallback(jni::ref<android::view::autofill::AutofillManager_AutofillCallback> callback) { return call_method<"registerCallback", void>(callback); }
	void unregisterCallback(jni::ref<android::view::autofill::AutofillManager_AutofillCallback> callback) { return call_method<"unregisterCallback", void>(callback); }

protected:

	AutofillManager(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_AUTOFILL_AUTOFILLMANAGER
