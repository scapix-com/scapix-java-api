// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_VIEW_WINDOWINSETS_FWD
#define SCAPIX_JAVA_API_ANDROID_VIEW_WINDOWINSETS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::view { class WindowInsets; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::view::WindowInsets>
{
	static constexpr fixed_string class_name = "android/view/WindowInsets";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_WINDOWINSETS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_VIEW_WINDOWINSETS)
#define SCAPIX_JAVA_API_ANDROID_VIEW_WINDOWINSETS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/graphics/Rect.h>
#include <scapix/java_api/android/view/DisplayCutout.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::view::WindowInsets : public jni::object_base<"android/view/WindowInsets",
	java::lang::Object>
{
public:

	static jni::ref<android::view::WindowInsets> new_object(jni::ref<android::view::WindowInsets> src) { return base_::new_object(src); }
	jint getSystemWindowInsetLeft() { return call_method<"getSystemWindowInsetLeft", jint>(); }
	jint getSystemWindowInsetTop() { return call_method<"getSystemWindowInsetTop", jint>(); }
	jint getSystemWindowInsetRight() { return call_method<"getSystemWindowInsetRight", jint>(); }
	jint getSystemWindowInsetBottom() { return call_method<"getSystemWindowInsetBottom", jint>(); }
	jboolean hasSystemWindowInsets() { return call_method<"hasSystemWindowInsets", jboolean>(); }
	jboolean hasInsets() { return call_method<"hasInsets", jboolean>(); }
	jni::ref<android::view::DisplayCutout> getDisplayCutout() { return call_method<"getDisplayCutout", jni::ref<android::view::DisplayCutout>>(); }
	jni::ref<android::view::WindowInsets> consumeDisplayCutout() { return call_method<"consumeDisplayCutout", jni::ref<android::view::WindowInsets>>(); }
	jboolean isConsumed() { return call_method<"isConsumed", jboolean>(); }
	jboolean isRound() { return call_method<"isRound", jboolean>(); }
	jni::ref<android::view::WindowInsets> consumeSystemWindowInsets() { return call_method<"consumeSystemWindowInsets", jni::ref<android::view::WindowInsets>>(); }
	jni::ref<android::view::WindowInsets> replaceSystemWindowInsets(jint left, jint top, jint right, jint bottom) { return call_method<"replaceSystemWindowInsets", jni::ref<android::view::WindowInsets>>(left, top, right, bottom); }
	jni::ref<android::view::WindowInsets> replaceSystemWindowInsets(jni::ref<android::graphics::Rect> systemWindowInsets) { return call_method<"replaceSystemWindowInsets", jni::ref<android::view::WindowInsets>>(systemWindowInsets); }
	jint getStableInsetTop() { return call_method<"getStableInsetTop", jint>(); }
	jint getStableInsetLeft() { return call_method<"getStableInsetLeft", jint>(); }
	jint getStableInsetRight() { return call_method<"getStableInsetRight", jint>(); }
	jint getStableInsetBottom() { return call_method<"getStableInsetBottom", jint>(); }
	jboolean hasStableInsets() { return call_method<"hasStableInsets", jboolean>(); }
	jni::ref<android::view::WindowInsets> consumeStableInsets() { return call_method<"consumeStableInsets", jni::ref<android::view::WindowInsets>>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jboolean equals(jni::ref<java::lang::Object> o) { return call_method<"equals", jboolean>(o); }
	jint hashCode() { return call_method<"hashCode", jint>(); }

protected:

	WindowInsets(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_WINDOWINSETS
