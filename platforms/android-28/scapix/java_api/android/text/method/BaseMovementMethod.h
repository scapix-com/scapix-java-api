// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/text/method/MovementMethod.h>

#ifndef SCAPIX_JAVA_API_ANDROID_TEXT_METHOD_BASEMOVEMENTMETHOD_FWD
#define SCAPIX_JAVA_API_ANDROID_TEXT_METHOD_BASEMOVEMENTMETHOD_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::text::method { class BaseMovementMethod; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::text::method::BaseMovementMethod>
{
	static constexpr fixed_string class_name = "android/text/method/BaseMovementMethod";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::text::method::MovementMethod>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEXT_METHOD_BASEMOVEMENTMETHOD_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_TEXT_METHOD_BASEMOVEMENTMETHOD)
#define SCAPIX_JAVA_API_ANDROID_TEXT_METHOD_BASEMOVEMENTMETHOD

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/text/Spannable.h>
#include <scapix/java_api/android/view/KeyEvent.h>
#include <scapix/java_api/android/view/MotionEvent.h>
#include <scapix/java_api/android/widget/TextView.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::text::method::BaseMovementMethod : public jni::object_base<"android/text/method/BaseMovementMethod",
	java::lang::Object,
	android::text::method::MovementMethod>
{
public:

	static jni::ref<android::text::method::BaseMovementMethod> new_object() { return base_::new_object(); }
	jboolean canSelectArbitrarily() { return call_method<"canSelectArbitrarily", jboolean>(); }
	void initialize(jni::ref<android::widget::TextView> widget, jni::ref<android::text::Spannable> text) { return call_method<"initialize", void>(widget, text); }
	jboolean onKeyDown(jni::ref<android::widget::TextView> widget, jni::ref<android::text::Spannable> text, jint keyCode, jni::ref<android::view::KeyEvent> event) { return call_method<"onKeyDown", jboolean>(widget, text, keyCode, event); }
	jboolean onKeyOther(jni::ref<android::widget::TextView> widget, jni::ref<android::text::Spannable> text, jni::ref<android::view::KeyEvent> event) { return call_method<"onKeyOther", jboolean>(widget, text, event); }
	jboolean onKeyUp(jni::ref<android::widget::TextView> widget, jni::ref<android::text::Spannable> text, jint keyCode, jni::ref<android::view::KeyEvent> event) { return call_method<"onKeyUp", jboolean>(widget, text, keyCode, event); }
	void onTakeFocus(jni::ref<android::widget::TextView> widget, jni::ref<android::text::Spannable> text, jint direction) { return call_method<"onTakeFocus", void>(widget, text, direction); }
	jboolean onTouchEvent(jni::ref<android::widget::TextView> widget, jni::ref<android::text::Spannable> text, jni::ref<android::view::MotionEvent> event) { return call_method<"onTouchEvent", jboolean>(widget, text, event); }
	jboolean onTrackballEvent(jni::ref<android::widget::TextView> widget, jni::ref<android::text::Spannable> text, jni::ref<android::view::MotionEvent> event) { return call_method<"onTrackballEvent", jboolean>(widget, text, event); }
	jboolean onGenericMotionEvent(jni::ref<android::widget::TextView> widget, jni::ref<android::text::Spannable> text, jni::ref<android::view::MotionEvent> event) { return call_method<"onGenericMotionEvent", jboolean>(widget, text, event); }

protected:

	BaseMovementMethod(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEXT_METHOD_BASEMOVEMENTMETHOD
