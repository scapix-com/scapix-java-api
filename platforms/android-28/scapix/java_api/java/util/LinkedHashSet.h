// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/util/HashSet.h>
#include <scapix/java_api/java/util/Set.h>
#include <scapix/java_api/java/lang/Cloneable.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_API_JAVA_UTIL_LINKEDHASHSET_FWD
#define SCAPIX_JAVA_API_JAVA_UTIL_LINKEDHASHSET_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::util { class LinkedHashSet; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::util::LinkedHashSet>
{
	static constexpr fixed_string class_name = "java/util/LinkedHashSet";
	using base_classes = std::tuple<scapix::java_api::java::util::HashSet, scapix::java_api::java::util::Set, scapix::java_api::java::lang::Cloneable, scapix::java_api::java::io::Serializable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_LINKEDHASHSET_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_UTIL_LINKEDHASHSET)
#define SCAPIX_JAVA_API_JAVA_UTIL_LINKEDHASHSET

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/util/Collection.h>
#include <scapix/java_api/java/util/Spliterator.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::util::LinkedHashSet : public jni::object_base<"java/util/LinkedHashSet",
	java::util::HashSet,
	java::util::Set,
	java::lang::Cloneable,
	java::io::Serializable>
{
public:

	static jni::ref<java::util::LinkedHashSet> new_object(jint initialCapacity, jfloat loadFactor) { return base_::new_object(initialCapacity, loadFactor); }
	static jni::ref<java::util::LinkedHashSet> new_object(jint initialCapacity) { return base_::new_object(initialCapacity); }
	static jni::ref<java::util::LinkedHashSet> new_object() { return base_::new_object(); }
	static jni::ref<java::util::LinkedHashSet> new_object(jni::ref<java::util::Collection> c) { return base_::new_object(c); }
	jni::ref<java::util::Spliterator> spliterator() { return call_method<"spliterator", jni::ref<java::util::Spliterator>>(); }

protected:

	LinkedHashSet(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_LINKEDHASHSET
