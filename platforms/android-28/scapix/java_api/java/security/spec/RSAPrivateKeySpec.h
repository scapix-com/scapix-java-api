// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/security/spec/KeySpec.h>

#ifndef SCAPIX_JAVA_API_JAVA_SECURITY_SPEC_RSAPRIVATEKEYSPEC_FWD
#define SCAPIX_JAVA_API_JAVA_SECURITY_SPEC_RSAPRIVATEKEYSPEC_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::security::spec { class RSAPrivateKeySpec; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::security::spec::RSAPrivateKeySpec>
{
	static constexpr fixed_string class_name = "java/security/spec/RSAPrivateKeySpec";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::security::spec::KeySpec>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_SECURITY_SPEC_RSAPRIVATEKEYSPEC_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_SECURITY_SPEC_RSAPRIVATEKEYSPEC)
#define SCAPIX_JAVA_API_JAVA_SECURITY_SPEC_RSAPRIVATEKEYSPEC

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/math/BigInteger.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::security::spec::RSAPrivateKeySpec : public jni::object_base<"java/security/spec/RSAPrivateKeySpec",
	java::lang::Object,
	java::security::spec::KeySpec>
{
public:

	static jni::ref<java::security::spec::RSAPrivateKeySpec> new_object(jni::ref<java::math::BigInteger> modulus, jni::ref<java::math::BigInteger> privateExponent) { return base_::new_object(modulus, privateExponent); }
	jni::ref<java::math::BigInteger> getModulus() { return call_method<"getModulus", jni::ref<java::math::BigInteger>>(); }
	jni::ref<java::math::BigInteger> getPrivateExponent() { return call_method<"getPrivateExponent", jni::ref<java::math::BigInteger>>(); }

protected:

	RSAPrivateKeySpec(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_SECURITY_SPEC_RSAPRIVATEKEYSPEC
