// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_SECURITY_DOMAINCOMBINER_FWD
#define SCAPIX_JAVA_API_JAVA_SECURITY_DOMAINCOMBINER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::security { class DomainCombiner; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::security::DomainCombiner>
{
	static constexpr fixed_string class_name = "java/security/DomainCombiner";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_SECURITY_DOMAINCOMBINER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_SECURITY_DOMAINCOMBINER)
#define SCAPIX_JAVA_API_JAVA_SECURITY_DOMAINCOMBINER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/security/ProtectionDomain.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::security::DomainCombiner : public jni::object_base<"java/security/DomainCombiner",
	java::lang::Object>
{
public:

	jni::ref<jni::array<java::security::ProtectionDomain>> combine(jni::ref<jni::array<java::security::ProtectionDomain>> p1, jni::ref<jni::array<java::security::ProtectionDomain>> p2) { return call_method<"combine", jni::ref<jni::array<java::security::ProtectionDomain>>>(p1, p2); }

protected:

	DomainCombiner(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_SECURITY_DOMAINCOMBINER
