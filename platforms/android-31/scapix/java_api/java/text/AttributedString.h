// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_TEXT_ATTRIBUTEDSTRING_FWD
#define SCAPIX_JAVA_API_JAVA_TEXT_ATTRIBUTEDSTRING_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::text { class AttributedString; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::text::AttributedString>
{
	static constexpr fixed_string class_name = "java/text/AttributedString";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_TEXT_ATTRIBUTEDSTRING_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_TEXT_ATTRIBUTEDSTRING)
#define SCAPIX_JAVA_API_JAVA_TEXT_ATTRIBUTEDSTRING

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/text/AttributedCharacterIterator.h>
#include <scapix/java_api/java/text/AttributedCharacterIterator_Attribute.h>
#include <scapix/java_api/java/util/Map.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::text::AttributedString : public jni::object_base<"java/text/AttributedString",
	java::lang::Object>
{
public:

	static jni::ref<java::text::AttributedString> new_object(jni::ref<java::lang::String> text) { return base_::new_object(text); }
	static jni::ref<java::text::AttributedString> new_object(jni::ref<java::lang::String> text, jni::ref<java::util::Map> attributes) { return base_::new_object(text, attributes); }
	static jni::ref<java::text::AttributedString> new_object(jni::ref<java::text::AttributedCharacterIterator> text) { return base_::new_object(text); }
	static jni::ref<java::text::AttributedString> new_object(jni::ref<java::text::AttributedCharacterIterator> text, jint beginIndex, jint endIndex) { return base_::new_object(text, beginIndex, endIndex); }
	static jni::ref<java::text::AttributedString> new_object(jni::ref<java::text::AttributedCharacterIterator> text, jint beginIndex, jint endIndex, jni::ref<jni::array<java::text::AttributedCharacterIterator_Attribute>> attributes) { return base_::new_object(text, beginIndex, endIndex, attributes); }
	void addAttribute(jni::ref<java::text::AttributedCharacterIterator_Attribute> attribute, jni::ref<java::lang::Object> value) { return call_method<"addAttribute", void>(attribute, value); }
	void addAttribute(jni::ref<java::text::AttributedCharacterIterator_Attribute> attribute, jni::ref<java::lang::Object> value, jint beginIndex, jint endIndex) { return call_method<"addAttribute", void>(attribute, value, beginIndex, endIndex); }
	void addAttributes(jni::ref<java::util::Map> attributes, jint beginIndex, jint endIndex) { return call_method<"addAttributes", void>(attributes, beginIndex, endIndex); }
	jni::ref<java::text::AttributedCharacterIterator> getIterator() { return call_method<"getIterator", jni::ref<java::text::AttributedCharacterIterator>>(); }
	jni::ref<java::text::AttributedCharacterIterator> getIterator(jni::ref<jni::array<java::text::AttributedCharacterIterator_Attribute>> attributes) { return call_method<"getIterator", jni::ref<java::text::AttributedCharacterIterator>>(attributes); }
	jni::ref<java::text::AttributedCharacterIterator> getIterator(jni::ref<jni::array<java::text::AttributedCharacterIterator_Attribute>> attributes, jint beginIndex, jint endIndex) { return call_method<"getIterator", jni::ref<java::text::AttributedCharacterIterator>>(attributes, beginIndex, endIndex); }

protected:

	AttributedString(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_TEXT_ATTRIBUTEDSTRING
