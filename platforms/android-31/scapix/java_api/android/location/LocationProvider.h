// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_LOCATION_LOCATIONPROVIDER_FWD
#define SCAPIX_JAVA_API_ANDROID_LOCATION_LOCATIONPROVIDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::location { class LocationProvider; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::location::LocationProvider>
{
	static constexpr fixed_string class_name = "android/location/LocationProvider";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_LOCATION_LOCATIONPROVIDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_LOCATION_LOCATIONPROVIDER)
#define SCAPIX_JAVA_API_ANDROID_LOCATION_LOCATIONPROVIDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/location/Criteria.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::location::LocationProvider : public jni::object_base<"android/location/LocationProvider",
	java::lang::Object>
{
public:

	static jint AVAILABLE() { return get_static_field<"AVAILABLE", jint>(); }
	static jint OUT_OF_SERVICE() { return get_static_field<"OUT_OF_SERVICE", jint>(); }
	static jint TEMPORARILY_UNAVAILABLE() { return get_static_field<"TEMPORARILY_UNAVAILABLE", jint>(); }

	jni::ref<java::lang::String> getName() { return call_method<"getName", jni::ref<java::lang::String>>(); }
	jboolean meetsCriteria(jni::ref<android::location::Criteria> criteria) { return call_method<"meetsCriteria", jboolean>(criteria); }
	jboolean requiresNetwork() { return call_method<"requiresNetwork", jboolean>(); }
	jboolean requiresSatellite() { return call_method<"requiresSatellite", jboolean>(); }
	jboolean requiresCell() { return call_method<"requiresCell", jboolean>(); }
	jboolean hasMonetaryCost() { return call_method<"hasMonetaryCost", jboolean>(); }
	jboolean supportsAltitude() { return call_method<"supportsAltitude", jboolean>(); }
	jboolean supportsSpeed() { return call_method<"supportsSpeed", jboolean>(); }
	jboolean supportsBearing() { return call_method<"supportsBearing", jboolean>(); }
	jint getPowerRequirement() { return call_method<"getPowerRequirement", jint>(); }
	jint getAccuracy() { return call_method<"getAccuracy", jint>(); }

protected:

	LocationProvider(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_LOCATION_LOCATIONPROVIDER
