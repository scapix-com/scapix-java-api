// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_LOCATION_LOCATIONREQUEST_BUILDER_FWD
#define SCAPIX_JAVA_API_ANDROID_LOCATION_LOCATIONREQUEST_BUILDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::location { class LocationRequest_Builder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::location::LocationRequest_Builder>
{
	static constexpr fixed_string class_name = "android/location/LocationRequest$Builder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_LOCATION_LOCATIONREQUEST_BUILDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_LOCATION_LOCATIONREQUEST_BUILDER)
#define SCAPIX_JAVA_API_ANDROID_LOCATION_LOCATIONREQUEST_BUILDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/location/LocationRequest.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::location::LocationRequest_Builder : public jni::object_base<"android/location/LocationRequest$Builder",
	java::lang::Object>
{
public:

	static jni::ref<android::location::LocationRequest_Builder> new_object(jlong intervalMillis) { return base_::new_object(intervalMillis); }
	static jni::ref<android::location::LocationRequest_Builder> new_object(jni::ref<android::location::LocationRequest> locationRequest) { return base_::new_object(locationRequest); }
	jni::ref<android::location::LocationRequest_Builder> setIntervalMillis(jlong intervalMillis) { return call_method<"setIntervalMillis", jni::ref<android::location::LocationRequest_Builder>>(intervalMillis); }
	jni::ref<android::location::LocationRequest_Builder> setQuality(jint quality) { return call_method<"setQuality", jni::ref<android::location::LocationRequest_Builder>>(quality); }
	jni::ref<android::location::LocationRequest_Builder> setDurationMillis(jlong durationMillis) { return call_method<"setDurationMillis", jni::ref<android::location::LocationRequest_Builder>>(durationMillis); }
	jni::ref<android::location::LocationRequest_Builder> setMaxUpdates(jint maxUpdates) { return call_method<"setMaxUpdates", jni::ref<android::location::LocationRequest_Builder>>(maxUpdates); }
	jni::ref<android::location::LocationRequest_Builder> setMinUpdateIntervalMillis(jlong minUpdateIntervalMillis) { return call_method<"setMinUpdateIntervalMillis", jni::ref<android::location::LocationRequest_Builder>>(minUpdateIntervalMillis); }
	jni::ref<android::location::LocationRequest_Builder> clearMinUpdateIntervalMillis() { return call_method<"clearMinUpdateIntervalMillis", jni::ref<android::location::LocationRequest_Builder>>(); }
	jni::ref<android::location::LocationRequest_Builder> setMinUpdateDistanceMeters(jfloat minUpdateDistanceMeters) { return call_method<"setMinUpdateDistanceMeters", jni::ref<android::location::LocationRequest_Builder>>(minUpdateDistanceMeters); }
	jni::ref<android::location::LocationRequest_Builder> setMaxUpdateDelayMillis(jlong maxUpdateDelayMillis) { return call_method<"setMaxUpdateDelayMillis", jni::ref<android::location::LocationRequest_Builder>>(maxUpdateDelayMillis); }
	jni::ref<android::location::LocationRequest> build() { return call_method<"build", jni::ref<android::location::LocationRequest>>(); }

protected:

	LocationRequest_Builder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_LOCATION_LOCATIONREQUEST_BUILDER
