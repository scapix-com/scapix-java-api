// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_LOCATION_ADDRESS_FWD
#define SCAPIX_JAVA_API_ANDROID_LOCATION_ADDRESS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::location { class Address; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::location::Address>
{
	static constexpr fixed_string class_name = "android/location/Address";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_LOCATION_ADDRESS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_LOCATION_ADDRESS)
#define SCAPIX_JAVA_API_ANDROID_LOCATION_ADDRESS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Locale.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::location::Address : public jni::object_base<"android/location/Address",
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }

	static jni::ref<android::location::Address> new_object(jni::ref<java::util::Locale> locale) { return base_::new_object(locale); }
	jni::ref<java::util::Locale> getLocale() { return call_method<"getLocale", jni::ref<java::util::Locale>>(); }
	jint getMaxAddressLineIndex() { return call_method<"getMaxAddressLineIndex", jint>(); }
	jni::ref<java::lang::String> getAddressLine(jint index) { return call_method<"getAddressLine", jni::ref<java::lang::String>>(index); }
	void setAddressLine(jint index, jni::ref<java::lang::String> line) { return call_method<"setAddressLine", void>(index, line); }
	jni::ref<java::lang::String> getFeatureName() { return call_method<"getFeatureName", jni::ref<java::lang::String>>(); }
	void setFeatureName(jni::ref<java::lang::String> featureName) { return call_method<"setFeatureName", void>(featureName); }
	jni::ref<java::lang::String> getAdminArea() { return call_method<"getAdminArea", jni::ref<java::lang::String>>(); }
	void setAdminArea(jni::ref<java::lang::String> adminArea) { return call_method<"setAdminArea", void>(adminArea); }
	jni::ref<java::lang::String> getSubAdminArea() { return call_method<"getSubAdminArea", jni::ref<java::lang::String>>(); }
	void setSubAdminArea(jni::ref<java::lang::String> subAdminArea) { return call_method<"setSubAdminArea", void>(subAdminArea); }
	jni::ref<java::lang::String> getLocality() { return call_method<"getLocality", jni::ref<java::lang::String>>(); }
	void setLocality(jni::ref<java::lang::String> locality) { return call_method<"setLocality", void>(locality); }
	jni::ref<java::lang::String> getSubLocality() { return call_method<"getSubLocality", jni::ref<java::lang::String>>(); }
	void setSubLocality(jni::ref<java::lang::String> sublocality) { return call_method<"setSubLocality", void>(sublocality); }
	jni::ref<java::lang::String> getThoroughfare() { return call_method<"getThoroughfare", jni::ref<java::lang::String>>(); }
	void setThoroughfare(jni::ref<java::lang::String> thoroughfare) { return call_method<"setThoroughfare", void>(thoroughfare); }
	jni::ref<java::lang::String> getSubThoroughfare() { return call_method<"getSubThoroughfare", jni::ref<java::lang::String>>(); }
	void setSubThoroughfare(jni::ref<java::lang::String> subthoroughfare) { return call_method<"setSubThoroughfare", void>(subthoroughfare); }
	jni::ref<java::lang::String> getPremises() { return call_method<"getPremises", jni::ref<java::lang::String>>(); }
	void setPremises(jni::ref<java::lang::String> premises) { return call_method<"setPremises", void>(premises); }
	jni::ref<java::lang::String> getPostalCode() { return call_method<"getPostalCode", jni::ref<java::lang::String>>(); }
	void setPostalCode(jni::ref<java::lang::String> postalCode) { return call_method<"setPostalCode", void>(postalCode); }
	jni::ref<java::lang::String> getCountryCode() { return call_method<"getCountryCode", jni::ref<java::lang::String>>(); }
	void setCountryCode(jni::ref<java::lang::String> countryCode) { return call_method<"setCountryCode", void>(countryCode); }
	jni::ref<java::lang::String> getCountryName() { return call_method<"getCountryName", jni::ref<java::lang::String>>(); }
	void setCountryName(jni::ref<java::lang::String> countryName) { return call_method<"setCountryName", void>(countryName); }
	jboolean hasLatitude() { return call_method<"hasLatitude", jboolean>(); }
	jdouble getLatitude() { return call_method<"getLatitude", jdouble>(); }
	void setLatitude(jdouble latitude) { return call_method<"setLatitude", void>(latitude); }
	void clearLatitude() { return call_method<"clearLatitude", void>(); }
	jboolean hasLongitude() { return call_method<"hasLongitude", jboolean>(); }
	jdouble getLongitude() { return call_method<"getLongitude", jdouble>(); }
	void setLongitude(jdouble longitude) { return call_method<"setLongitude", void>(longitude); }
	void clearLongitude() { return call_method<"clearLongitude", void>(); }
	jni::ref<java::lang::String> getPhone() { return call_method<"getPhone", jni::ref<java::lang::String>>(); }
	void setPhone(jni::ref<java::lang::String> phone) { return call_method<"setPhone", void>(phone); }
	jni::ref<java::lang::String> getUrl() { return call_method<"getUrl", jni::ref<java::lang::String>>(); }
	void setUrl(jni::ref<java::lang::String> Url) { return call_method<"setUrl", void>(Url); }
	jni::ref<android::os::Bundle> getExtras() { return call_method<"getExtras", jni::ref<android::os::Bundle>>(); }
	void setExtras(jni::ref<android::os::Bundle> extras) { return call_method<"setExtras", void>(extras); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	void writeToParcel(jni::ref<android::os::Parcel> parcel, jint flags) { return call_method<"writeToParcel", void>(parcel, flags); }

protected:

	Address(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_LOCATION_ADDRESS
