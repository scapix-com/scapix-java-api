// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_TELEPHONY_PHONESTATELISTENER_FWD
#define SCAPIX_JAVA_API_ANDROID_TELEPHONY_PHONESTATELISTENER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::telephony { class PhoneStateListener; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::telephony::PhoneStateListener>
{
	static constexpr fixed_string class_name = "android/telephony/PhoneStateListener";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TELEPHONY_PHONESTATELISTENER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_TELEPHONY_PHONESTATELISTENER)
#define SCAPIX_JAVA_API_ANDROID_TELEPHONY_PHONESTATELISTENER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/telephony/BarringInfo.h>
#include <scapix/java_api/android/telephony/CellIdentity.h>
#include <scapix/java_api/android/telephony/CellLocation.h>
#include <scapix/java_api/android/telephony/PreciseDataConnectionState.h>
#include <scapix/java_api/android/telephony/ServiceState.h>
#include <scapix/java_api/android/telephony/SignalStrength.h>
#include <scapix/java_api/android/telephony/TelephonyDisplayInfo.h>
#include <scapix/java_api/android/telephony/ims/ImsReasonInfo.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/java/util/Map.h>
#include <scapix/java_api/java/util/concurrent/Executor.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::telephony::PhoneStateListener : public jni::object_base<"android/telephony/PhoneStateListener",
	java::lang::Object>
{
public:

	static jint LISTEN_ACTIVE_DATA_SUBSCRIPTION_ID_CHANGE() { return get_static_field<"LISTEN_ACTIVE_DATA_SUBSCRIPTION_ID_CHANGE", jint>(); }
	static jint LISTEN_BARRING_INFO() { return get_static_field<"LISTEN_BARRING_INFO", jint>(); }
	static jint LISTEN_CALL_DISCONNECT_CAUSES() { return get_static_field<"LISTEN_CALL_DISCONNECT_CAUSES", jint>(); }
	static jint LISTEN_CALL_FORWARDING_INDICATOR() { return get_static_field<"LISTEN_CALL_FORWARDING_INDICATOR", jint>(); }
	static jint LISTEN_CALL_STATE() { return get_static_field<"LISTEN_CALL_STATE", jint>(); }
	static jint LISTEN_CELL_INFO() { return get_static_field<"LISTEN_CELL_INFO", jint>(); }
	static jint LISTEN_CELL_LOCATION() { return get_static_field<"LISTEN_CELL_LOCATION", jint>(); }
	static jint LISTEN_DATA_ACTIVITY() { return get_static_field<"LISTEN_DATA_ACTIVITY", jint>(); }
	static jint LISTEN_DATA_CONNECTION_STATE() { return get_static_field<"LISTEN_DATA_CONNECTION_STATE", jint>(); }
	static jint LISTEN_DISPLAY_INFO_CHANGED() { return get_static_field<"LISTEN_DISPLAY_INFO_CHANGED", jint>(); }
	static jint LISTEN_EMERGENCY_NUMBER_LIST() { return get_static_field<"LISTEN_EMERGENCY_NUMBER_LIST", jint>(); }
	static jint LISTEN_IMS_CALL_DISCONNECT_CAUSES() { return get_static_field<"LISTEN_IMS_CALL_DISCONNECT_CAUSES", jint>(); }
	static jint LISTEN_MESSAGE_WAITING_INDICATOR() { return get_static_field<"LISTEN_MESSAGE_WAITING_INDICATOR", jint>(); }
	static jint LISTEN_NONE() { return get_static_field<"LISTEN_NONE", jint>(); }
	static jint LISTEN_PRECISE_DATA_CONNECTION_STATE() { return get_static_field<"LISTEN_PRECISE_DATA_CONNECTION_STATE", jint>(); }
	static jint LISTEN_REGISTRATION_FAILURE() { return get_static_field<"LISTEN_REGISTRATION_FAILURE", jint>(); }
	static jint LISTEN_SERVICE_STATE() { return get_static_field<"LISTEN_SERVICE_STATE", jint>(); }
	static jint LISTEN_SIGNAL_STRENGTH() { return get_static_field<"LISTEN_SIGNAL_STRENGTH", jint>(); }
	static jint LISTEN_SIGNAL_STRENGTHS() { return get_static_field<"LISTEN_SIGNAL_STRENGTHS", jint>(); }
	static jint LISTEN_USER_MOBILE_DATA_STATE() { return get_static_field<"LISTEN_USER_MOBILE_DATA_STATE", jint>(); }

	static jni::ref<android::telephony::PhoneStateListener> new_object() { return base_::new_object(); }
	static jni::ref<android::telephony::PhoneStateListener> new_object(jni::ref<java::util::concurrent::Executor> executor) { return base_::new_object(executor); }
	void onServiceStateChanged(jni::ref<android::telephony::ServiceState> serviceState) { return call_method<"onServiceStateChanged", void>(serviceState); }
	void onSignalStrengthChanged(jint asu) { return call_method<"onSignalStrengthChanged", void>(asu); }
	void onMessageWaitingIndicatorChanged(jboolean mwi) { return call_method<"onMessageWaitingIndicatorChanged", void>(mwi); }
	void onCallForwardingIndicatorChanged(jboolean cfi) { return call_method<"onCallForwardingIndicatorChanged", void>(cfi); }
	void onCellLocationChanged(jni::ref<android::telephony::CellLocation> location) { return call_method<"onCellLocationChanged", void>(location); }
	void onCallStateChanged(jint state, jni::ref<java::lang::String> phoneNumber) { return call_method<"onCallStateChanged", void>(state, phoneNumber); }
	void onDataConnectionStateChanged(jint state) { return call_method<"onDataConnectionStateChanged", void>(state); }
	void onDataConnectionStateChanged(jint state, jint networkType) { return call_method<"onDataConnectionStateChanged", void>(state, networkType); }
	void onDataActivity(jint direction) { return call_method<"onDataActivity", void>(direction); }
	void onSignalStrengthsChanged(jni::ref<android::telephony::SignalStrength> signalStrength) { return call_method<"onSignalStrengthsChanged", void>(signalStrength); }
	void onCellInfoChanged(jni::ref<java::util::List> cellInfo) { return call_method<"onCellInfoChanged", void>(cellInfo); }
	void onCallDisconnectCauseChanged(jint disconnectCause, jint preciseDisconnectCause) { return call_method<"onCallDisconnectCauseChanged", void>(disconnectCause, preciseDisconnectCause); }
	void onImsCallDisconnectCauseChanged(jni::ref<android::telephony::ims::ImsReasonInfo> imsReasonInfo) { return call_method<"onImsCallDisconnectCauseChanged", void>(imsReasonInfo); }
	void onPreciseDataConnectionStateChanged(jni::ref<android::telephony::PreciseDataConnectionState> dataConnectionState) { return call_method<"onPreciseDataConnectionStateChanged", void>(dataConnectionState); }
	void onUserMobileDataStateChanged(jboolean enabled) { return call_method<"onUserMobileDataStateChanged", void>(enabled); }
	void onDisplayInfoChanged(jni::ref<android::telephony::TelephonyDisplayInfo> telephonyDisplayInfo) { return call_method<"onDisplayInfoChanged", void>(telephonyDisplayInfo); }
	void onEmergencyNumberListChanged(jni::ref<java::util::Map> emergencyNumberList) { return call_method<"onEmergencyNumberListChanged", void>(emergencyNumberList); }
	void onActiveDataSubscriptionIdChanged(jint subId) { return call_method<"onActiveDataSubscriptionIdChanged", void>(subId); }
	void onRegistrationFailed(jni::ref<android::telephony::CellIdentity> cellIdentity, jni::ref<java::lang::String> chosenPlmn, jint domain, jint causeCode, jint additionalCauseCode) { return call_method<"onRegistrationFailed", void>(cellIdentity, chosenPlmn, domain, causeCode, additionalCauseCode); }
	void onBarringInfoChanged(jni::ref<android::telephony::BarringInfo> barringInfo) { return call_method<"onBarringInfoChanged", void>(barringInfo); }

protected:

	PhoneStateListener(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TELEPHONY_PHONESTATELISTENER
