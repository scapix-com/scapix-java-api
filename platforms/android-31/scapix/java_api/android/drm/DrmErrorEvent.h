// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/drm/DrmEvent.h>

#ifndef SCAPIX_JAVA_API_ANDROID_DRM_DRMERROREVENT_FWD
#define SCAPIX_JAVA_API_ANDROID_DRM_DRMERROREVENT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::drm { class DrmErrorEvent; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::drm::DrmErrorEvent>
{
	static constexpr fixed_string class_name = "android/drm/DrmErrorEvent";
	using base_classes = std::tuple<scapix::java_api::android::drm::DrmEvent>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_DRM_DRMERROREVENT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_DRM_DRMERROREVENT)
#define SCAPIX_JAVA_API_ANDROID_DRM_DRMERROREVENT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/HashMap.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::drm::DrmErrorEvent : public jni::object_base<"android/drm/DrmErrorEvent",
	android::drm::DrmEvent>
{
public:

	static jint TYPE_ACQUIRE_DRM_INFO_FAILED() { return get_static_field<"TYPE_ACQUIRE_DRM_INFO_FAILED", jint>(); }
	static jint TYPE_NOT_SUPPORTED() { return get_static_field<"TYPE_NOT_SUPPORTED", jint>(); }
	static jint TYPE_NO_INTERNET_CONNECTION() { return get_static_field<"TYPE_NO_INTERNET_CONNECTION", jint>(); }
	static jint TYPE_OUT_OF_MEMORY() { return get_static_field<"TYPE_OUT_OF_MEMORY", jint>(); }
	static jint TYPE_PROCESS_DRM_INFO_FAILED() { return get_static_field<"TYPE_PROCESS_DRM_INFO_FAILED", jint>(); }
	static jint TYPE_REMOVE_ALL_RIGHTS_FAILED() { return get_static_field<"TYPE_REMOVE_ALL_RIGHTS_FAILED", jint>(); }
	static jint TYPE_RIGHTS_NOT_INSTALLED() { return get_static_field<"TYPE_RIGHTS_NOT_INSTALLED", jint>(); }
	static jint TYPE_RIGHTS_RENEWAL_NOT_ALLOWED() { return get_static_field<"TYPE_RIGHTS_RENEWAL_NOT_ALLOWED", jint>(); }

	static jni::ref<android::drm::DrmErrorEvent> new_object(jint uniqueId, jint type, jni::ref<java::lang::String> message) { return base_::new_object(uniqueId, type, message); }
	static jni::ref<android::drm::DrmErrorEvent> new_object(jint uniqueId, jint type, jni::ref<java::lang::String> message, jni::ref<java::util::HashMap> attributes) { return base_::new_object(uniqueId, type, message, attributes); }

protected:

	DrmErrorEvent(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_DRM_DRMERROREVENT
