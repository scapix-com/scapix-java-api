// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA2_PARAMS_EXTENSIONSESSIONCONFIGURATION_FWD
#define SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA2_PARAMS_EXTENSIONSESSIONCONFIGURATION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::hardware::camera2::params { class ExtensionSessionConfiguration; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::hardware::camera2::params::ExtensionSessionConfiguration>
{
	static constexpr fixed_string class_name = "android/hardware/camera2/params/ExtensionSessionConfiguration";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA2_PARAMS_EXTENSIONSESSIONCONFIGURATION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA2_PARAMS_EXTENSIONSESSIONCONFIGURATION)
#define SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA2_PARAMS_EXTENSIONSESSIONCONFIGURATION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/hardware/camera2/CameraExtensionSession_StateCallback.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/java/util/concurrent/Executor.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::hardware::camera2::params::ExtensionSessionConfiguration : public jni::object_base<"android/hardware/camera2/params/ExtensionSessionConfiguration",
	java::lang::Object>
{
public:

	static jni::ref<android::hardware::camera2::params::ExtensionSessionConfiguration> new_object(jint extension, jni::ref<java::util::List> outputs, jni::ref<java::util::concurrent::Executor> executor, jni::ref<android::hardware::camera2::CameraExtensionSession_StateCallback> listener) { return base_::new_object(extension, outputs, executor, listener); }
	jint getExtension() { return call_method<"getExtension", jint>(); }
	jni::ref<java::util::List> getOutputConfigurations() { return call_method<"getOutputConfigurations", jni::ref<java::util::List>>(); }
	jni::ref<android::hardware::camera2::CameraExtensionSession_StateCallback> getStateCallback() { return call_method<"getStateCallback", jni::ref<android::hardware::camera2::CameraExtensionSession_StateCallback>>(); }
	jni::ref<java::util::concurrent::Executor> getExecutor() { return call_method<"getExecutor", jni::ref<java::util::concurrent::Executor>>(); }

protected:

	ExtensionSessionConfiguration(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA2_PARAMS_EXTENSIONSESSIONCONFIGURATION
