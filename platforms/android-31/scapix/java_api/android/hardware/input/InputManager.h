// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_HARDWARE_INPUT_INPUTMANAGER_FWD
#define SCAPIX_JAVA_API_ANDROID_HARDWARE_INPUT_INPUTMANAGER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::hardware::input { class InputManager; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::hardware::input::InputManager>
{
	static constexpr fixed_string class_name = "android/hardware/input/InputManager";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_HARDWARE_INPUT_INPUTMANAGER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_HARDWARE_INPUT_INPUTMANAGER)
#define SCAPIX_JAVA_API_ANDROID_HARDWARE_INPUT_INPUTMANAGER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/hardware/input/InputManager_InputDeviceListener.h>
#include <scapix/java_api/android/os/Handler.h>
#include <scapix/java_api/android/view/InputDevice.h>
#include <scapix/java_api/android/view/InputEvent.h>
#include <scapix/java_api/android/view/VerifiedInputEvent.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::hardware::input::InputManager : public jni::object_base<"android/hardware/input/InputManager",
	java::lang::Object>
{
public:

	using InputDeviceListener = InputManager_InputDeviceListener;

	static jni::ref<java::lang::String> ACTION_QUERY_KEYBOARD_LAYOUTS() { return get_static_field<"ACTION_QUERY_KEYBOARD_LAYOUTS", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> META_DATA_KEYBOARD_LAYOUTS() { return get_static_field<"META_DATA_KEYBOARD_LAYOUTS", jni::ref<java::lang::String>>(); }

	jni::ref<android::view::InputDevice> getInputDevice(jint id) { return call_method<"getInputDevice", jni::ref<android::view::InputDevice>>(id); }
	jni::ref<jni::array<jint>> getInputDeviceIds() { return call_method<"getInputDeviceIds", jni::ref<jni::array<jint>>>(); }
	void registerInputDeviceListener(jni::ref<android::hardware::input::InputManager_InputDeviceListener> listener, jni::ref<android::os::Handler> handler) { return call_method<"registerInputDeviceListener", void>(listener, handler); }
	void unregisterInputDeviceListener(jni::ref<android::hardware::input::InputManager_InputDeviceListener> listener) { return call_method<"unregisterInputDeviceListener", void>(listener); }
	jfloat getMaximumObscuringOpacityForTouch() { return call_method<"getMaximumObscuringOpacityForTouch", jfloat>(); }
	jni::ref<android::view::VerifiedInputEvent> verifyInputEvent(jni::ref<android::view::InputEvent> event) { return call_method<"verifyInputEvent", jni::ref<android::view::VerifiedInputEvent>>(event); }

protected:

	InputManager(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_HARDWARE_INPUT_INPUTMANAGER
