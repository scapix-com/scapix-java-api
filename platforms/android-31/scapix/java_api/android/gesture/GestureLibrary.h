// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_GESTURE_GESTURELIBRARY_FWD
#define SCAPIX_JAVA_API_ANDROID_GESTURE_GESTURELIBRARY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::gesture { class GestureLibrary; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::gesture::GestureLibrary>
{
	static constexpr fixed_string class_name = "android/gesture/GestureLibrary";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_GESTURE_GESTURELIBRARY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_GESTURE_GESTURELIBRARY)
#define SCAPIX_JAVA_API_ANDROID_GESTURE_GESTURELIBRARY

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/gesture/Gesture.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/ArrayList.h>
#include <scapix/java_api/java/util/Set.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::gesture::GestureLibrary : public jni::object_base<"android/gesture/GestureLibrary",
	java::lang::Object>
{
public:

	jboolean save() { return call_method<"save", jboolean>(); }
	jboolean load() { return call_method<"load", jboolean>(); }
	jboolean isReadOnly() { return call_method<"isReadOnly", jboolean>(); }
	void setOrientationStyle(jint style) { return call_method<"setOrientationStyle", void>(style); }
	jint getOrientationStyle() { return call_method<"getOrientationStyle", jint>(); }
	void setSequenceType(jint type) { return call_method<"setSequenceType", void>(type); }
	jint getSequenceType() { return call_method<"getSequenceType", jint>(); }
	jni::ref<java::util::Set> getGestureEntries() { return call_method<"getGestureEntries", jni::ref<java::util::Set>>(); }
	jni::ref<java::util::ArrayList> recognize(jni::ref<android::gesture::Gesture> gesture) { return call_method<"recognize", jni::ref<java::util::ArrayList>>(gesture); }
	void addGesture(jni::ref<java::lang::String> entryName, jni::ref<android::gesture::Gesture> gesture) { return call_method<"addGesture", void>(entryName, gesture); }
	void removeGesture(jni::ref<java::lang::String> entryName, jni::ref<android::gesture::Gesture> gesture) { return call_method<"removeGesture", void>(entryName, gesture); }
	void removeEntry(jni::ref<java::lang::String> entryName) { return call_method<"removeEntry", void>(entryName); }
	jni::ref<java::util::ArrayList> getGestures(jni::ref<java::lang::String> entryName) { return call_method<"getGestures", jni::ref<java::util::ArrayList>>(entryName); }

protected:

	GestureLibrary(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_GESTURE_GESTURELIBRARY
