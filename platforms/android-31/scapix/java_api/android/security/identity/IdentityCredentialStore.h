// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_SECURITY_IDENTITY_IDENTITYCREDENTIALSTORE_FWD
#define SCAPIX_JAVA_API_ANDROID_SECURITY_IDENTITY_IDENTITYCREDENTIALSTORE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::security::identity { class IdentityCredentialStore; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::security::identity::IdentityCredentialStore>
{
	static constexpr fixed_string class_name = "android/security/identity/IdentityCredentialStore";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_SECURITY_IDENTITY_IDENTITYCREDENTIALSTORE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_SECURITY_IDENTITY_IDENTITYCREDENTIALSTORE)
#define SCAPIX_JAVA_API_ANDROID_SECURITY_IDENTITY_IDENTITYCREDENTIALSTORE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/security/identity/IdentityCredential.h>
#include <scapix/java_api/android/security/identity/WritableIdentityCredential.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::security::identity::IdentityCredentialStore : public jni::object_base<"android/security/identity/IdentityCredentialStore",
	java::lang::Object>
{
public:

	static jint CIPHERSUITE_ECDHE_HKDF_ECDSA_WITH_AES_256_GCM_SHA256() { return get_static_field<"CIPHERSUITE_ECDHE_HKDF_ECDSA_WITH_AES_256_GCM_SHA256", jint>(); }

	static jni::ref<android::security::identity::IdentityCredentialStore> getInstance(jni::ref<android::content::Context> context) { return call_static_method<"getInstance", jni::ref<android::security::identity::IdentityCredentialStore>>(context); }
	static jni::ref<android::security::identity::IdentityCredentialStore> getDirectAccessInstance(jni::ref<android::content::Context> context) { return call_static_method<"getDirectAccessInstance", jni::ref<android::security::identity::IdentityCredentialStore>>(context); }
	jni::ref<jni::array<java::lang::String>> getSupportedDocTypes() { return call_method<"getSupportedDocTypes", jni::ref<jni::array<java::lang::String>>>(); }
	jni::ref<android::security::identity::WritableIdentityCredential> createCredential(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return call_method<"createCredential", jni::ref<android::security::identity::WritableIdentityCredential>>(p1, p2); }
	jni::ref<android::security::identity::IdentityCredential> getCredentialByName(jni::ref<java::lang::String> p1, jint p2) { return call_method<"getCredentialByName", jni::ref<android::security::identity::IdentityCredential>>(p1, p2); }
	jni::ref<jni::array<jbyte>> deleteCredentialByName(jni::ref<java::lang::String> p1) { return call_method<"deleteCredentialByName", jni::ref<jni::array<jbyte>>>(p1); }

protected:

	IdentityCredentialStore(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_SECURITY_IDENTITY_IDENTITYCREDENTIALSTORE
