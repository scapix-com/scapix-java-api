// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_APP_SLICE_SLICEMETRICS_FWD
#define SCAPIX_JAVA_API_ANDROID_APP_SLICE_SLICEMETRICS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::app::slice { class SliceMetrics; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::app::slice::SliceMetrics>
{
	static constexpr fixed_string class_name = "android/app/slice/SliceMetrics";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_SLICE_SLICEMETRICS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_APP_SLICE_SLICEMETRICS)
#define SCAPIX_JAVA_API_ANDROID_APP_SLICE_SLICEMETRICS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/net/Uri.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::app::slice::SliceMetrics : public jni::object_base<"android/app/slice/SliceMetrics",
	java::lang::Object>
{
public:

	static jni::ref<android::app::slice::SliceMetrics> new_object(jni::ref<android::content::Context> context, jni::ref<android::net::Uri> uri) { return base_::new_object(context, uri); }
	void logVisible() { return call_method<"logVisible", void>(); }
	void logHidden() { return call_method<"logHidden", void>(); }
	void logTouch(jint actionType, jni::ref<android::net::Uri> subSlice) { return call_method<"logTouch", void>(actionType, subSlice); }

protected:

	SliceMetrics(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_SLICE_SLICEMETRICS
