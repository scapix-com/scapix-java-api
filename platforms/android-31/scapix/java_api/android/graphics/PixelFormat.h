// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_GRAPHICS_PIXELFORMAT_FWD
#define SCAPIX_JAVA_API_ANDROID_GRAPHICS_PIXELFORMAT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::graphics { class PixelFormat; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::graphics::PixelFormat>
{
	static constexpr fixed_string class_name = "android/graphics/PixelFormat";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_GRAPHICS_PIXELFORMAT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_GRAPHICS_PIXELFORMAT)
#define SCAPIX_JAVA_API_ANDROID_GRAPHICS_PIXELFORMAT

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::graphics::PixelFormat : public jni::object_base<"android/graphics/PixelFormat",
	java::lang::Object>
{
public:

	static jint A_8() { return get_static_field<"A_8", jint>(); }
	static jint JPEG() { return get_static_field<"JPEG", jint>(); }
	static jint LA_88() { return get_static_field<"LA_88", jint>(); }
	static jint L_8() { return get_static_field<"L_8", jint>(); }
	static jint OPAQUE() { return get_static_field<"OPAQUE", jint>(); }
	static jint RGBA_1010102() { return get_static_field<"RGBA_1010102", jint>(); }
	static jint RGBA_4444() { return get_static_field<"RGBA_4444", jint>(); }
	static jint RGBA_5551() { return get_static_field<"RGBA_5551", jint>(); }
	static jint RGBA_8888() { return get_static_field<"RGBA_8888", jint>(); }
	static jint RGBA_F16() { return get_static_field<"RGBA_F16", jint>(); }
	static jint RGBX_8888() { return get_static_field<"RGBX_8888", jint>(); }
	static jint RGB_332() { return get_static_field<"RGB_332", jint>(); }
	static jint RGB_565() { return get_static_field<"RGB_565", jint>(); }
	static jint RGB_888() { return get_static_field<"RGB_888", jint>(); }
	static jint TRANSLUCENT() { return get_static_field<"TRANSLUCENT", jint>(); }
	static jint TRANSPARENT() { return get_static_field<"TRANSPARENT", jint>(); }
	static jint UNKNOWN() { return get_static_field<"UNKNOWN", jint>(); }
	static jint YCbCr_420_SP() { return get_static_field<"YCbCr_420_SP", jint>(); }
	static jint YCbCr_422_I() { return get_static_field<"YCbCr_422_I", jint>(); }
	static jint YCbCr_422_SP() { return get_static_field<"YCbCr_422_SP", jint>(); }
	jint bitsPerPixel() { return get_field<"bitsPerPixel", jint>(); }
	void bitsPerPixel(jint v) { set_field<"bitsPerPixel", jint>(v); }
	jint bytesPerPixel() { return get_field<"bytesPerPixel", jint>(); }
	void bytesPerPixel(jint v) { set_field<"bytesPerPixel", jint>(v); }

	static jni::ref<android::graphics::PixelFormat> new_object() { return base_::new_object(); }
	static void getPixelFormatInfo(jint format, jni::ref<android::graphics::PixelFormat> info) { return call_static_method<"getPixelFormatInfo", void>(format, info); }
	static jboolean formatHasAlpha(jint format) { return call_static_method<"formatHasAlpha", jboolean>(format); }

protected:

	PixelFormat(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_GRAPHICS_PIXELFORMAT
