// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_GRAPHICS_RENDEREFFECT_FWD
#define SCAPIX_JAVA_API_ANDROID_GRAPHICS_RENDEREFFECT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::graphics { class RenderEffect; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::graphics::RenderEffect>
{
	static constexpr fixed_string class_name = "android/graphics/RenderEffect";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_GRAPHICS_RENDEREFFECT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_GRAPHICS_RENDEREFFECT)
#define SCAPIX_JAVA_API_ANDROID_GRAPHICS_RENDEREFFECT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/graphics/Bitmap.h>
#include <scapix/java_api/android/graphics/BlendMode.h>
#include <scapix/java_api/android/graphics/ColorFilter.h>
#include <scapix/java_api/android/graphics/Rect.h>
#include <scapix/java_api/android/graphics/Shader.h>
#include <scapix/java_api/android/graphics/Shader_TileMode.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::graphics::RenderEffect : public jni::object_base<"android/graphics/RenderEffect",
	java::lang::Object>
{
public:

	static jni::ref<android::graphics::RenderEffect> createOffsetEffect(jfloat offsetX, jfloat offsetY) { return call_static_method<"createOffsetEffect", jni::ref<android::graphics::RenderEffect>>(offsetX, offsetY); }
	static jni::ref<android::graphics::RenderEffect> createOffsetEffect(jfloat offsetX, jfloat offsetY, jni::ref<android::graphics::RenderEffect> input) { return call_static_method<"createOffsetEffect", jni::ref<android::graphics::RenderEffect>>(offsetX, offsetY, input); }
	static jni::ref<android::graphics::RenderEffect> createBlurEffect(jfloat radiusX, jfloat radiusY, jni::ref<android::graphics::RenderEffect> inputEffect, jni::ref<android::graphics::Shader_TileMode> edgeTreatment) { return call_static_method<"createBlurEffect", jni::ref<android::graphics::RenderEffect>>(radiusX, radiusY, inputEffect, edgeTreatment); }
	static jni::ref<android::graphics::RenderEffect> createBlurEffect(jfloat radiusX, jfloat radiusY, jni::ref<android::graphics::Shader_TileMode> edgeTreatment) { return call_static_method<"createBlurEffect", jni::ref<android::graphics::RenderEffect>>(radiusX, radiusY, edgeTreatment); }
	static jni::ref<android::graphics::RenderEffect> createBitmapEffect(jni::ref<android::graphics::Bitmap> bitmap) { return call_static_method<"createBitmapEffect", jni::ref<android::graphics::RenderEffect>>(bitmap); }
	static jni::ref<android::graphics::RenderEffect> createBitmapEffect(jni::ref<android::graphics::Bitmap> bitmap, jni::ref<android::graphics::Rect> src, jni::ref<android::graphics::Rect> dst) { return call_static_method<"createBitmapEffect", jni::ref<android::graphics::RenderEffect>>(bitmap, src, dst); }
	static jni::ref<android::graphics::RenderEffect> createColorFilterEffect(jni::ref<android::graphics::ColorFilter> colorFilter, jni::ref<android::graphics::RenderEffect> renderEffect) { return call_static_method<"createColorFilterEffect", jni::ref<android::graphics::RenderEffect>>(colorFilter, renderEffect); }
	static jni::ref<android::graphics::RenderEffect> createColorFilterEffect(jni::ref<android::graphics::ColorFilter> colorFilter) { return call_static_method<"createColorFilterEffect", jni::ref<android::graphics::RenderEffect>>(colorFilter); }
	static jni::ref<android::graphics::RenderEffect> createBlendModeEffect(jni::ref<android::graphics::RenderEffect> dst, jni::ref<android::graphics::RenderEffect> src, jni::ref<android::graphics::BlendMode> blendMode) { return call_static_method<"createBlendModeEffect", jni::ref<android::graphics::RenderEffect>>(dst, src, blendMode); }
	static jni::ref<android::graphics::RenderEffect> createChainEffect(jni::ref<android::graphics::RenderEffect> outer, jni::ref<android::graphics::RenderEffect> inner) { return call_static_method<"createChainEffect", jni::ref<android::graphics::RenderEffect>>(outer, inner); }
	static jni::ref<android::graphics::RenderEffect> createShaderEffect(jni::ref<android::graphics::Shader> shader) { return call_static_method<"createShaderEffect", jni::ref<android::graphics::RenderEffect>>(shader); }

protected:

	RenderEffect(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_GRAPHICS_RENDEREFFECT
