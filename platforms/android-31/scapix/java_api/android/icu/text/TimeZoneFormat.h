// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/icu/text/UFormat.h>
#include <scapix/java_api/android/icu/util/Freezable.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_ICU_TEXT_TIMEZONEFORMAT_FWD
#define SCAPIX_JAVA_API_ANDROID_ICU_TEXT_TIMEZONEFORMAT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::icu::text { class TimeZoneFormat; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::icu::text::TimeZoneFormat>
{
	static constexpr fixed_string class_name = "android/icu/text/TimeZoneFormat";
	using base_classes = std::tuple<scapix::java_api::android::icu::text::UFormat, scapix::java_api::android::icu::util::Freezable, scapix::java_api::java::io::Serializable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_TEXT_TIMEZONEFORMAT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_ICU_TEXT_TIMEZONEFORMAT)
#define SCAPIX_JAVA_API_ANDROID_ICU_TEXT_TIMEZONEFORMAT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/icu/text/TimeZoneFormat_GMTOffsetPatternType.h>
#include <scapix/java_api/android/icu/text/TimeZoneFormat_Style.h>
#include <scapix/java_api/android/icu/text/TimeZoneNames.h>
#include <scapix/java_api/android/icu/util/Output.h>
#include <scapix/java_api/android/icu/util/TimeZone.h>
#include <scapix/java_api/android/icu/util/ULocale.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/StringBuffer.h>
#include <scapix/java_api/java/text/AttributedCharacterIterator.h>
#include <scapix/java_api/java/text/FieldPosition.h>
#include <scapix/java_api/java/text/ParsePosition.h>
#include <scapix/java_api/java/util/EnumSet.h>
#include <scapix/java_api/java/util/Locale.h>
#include <scapix/java_api/android/icu/text/TimeZoneFormat_TimeType.h>
#include <scapix/java_api/android/icu/text/TimeZoneFormat_ParseOption.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::icu::text::TimeZoneFormat : public jni::object_base<"android/icu/text/TimeZoneFormat",
	android::icu::text::UFormat,
	android::icu::util::Freezable,
	java::io::Serializable>
{
public:

	using TimeType = TimeZoneFormat_TimeType;
	using Style = TimeZoneFormat_Style;
	using ParseOption = TimeZoneFormat_ParseOption;
	using GMTOffsetPatternType = TimeZoneFormat_GMTOffsetPatternType;

	static jni::ref<android::icu::text::TimeZoneFormat> getInstance(jni::ref<android::icu::util::ULocale> locale) { return call_static_method<"getInstance", jni::ref<android::icu::text::TimeZoneFormat>>(locale); }
	static jni::ref<android::icu::text::TimeZoneFormat> getInstance(jni::ref<java::util::Locale> locale) { return call_static_method<"getInstance", jni::ref<android::icu::text::TimeZoneFormat>>(locale); }
	jni::ref<android::icu::text::TimeZoneNames> getTimeZoneNames() { return call_method<"getTimeZoneNames", jni::ref<android::icu::text::TimeZoneNames>>(); }
	jni::ref<android::icu::text::TimeZoneFormat> setTimeZoneNames(jni::ref<android::icu::text::TimeZoneNames> tznames) { return call_method<"setTimeZoneNames", jni::ref<android::icu::text::TimeZoneFormat>>(tznames); }
	jni::ref<java::lang::String> getGMTPattern() { return call_method<"getGMTPattern", jni::ref<java::lang::String>>(); }
	jni::ref<android::icu::text::TimeZoneFormat> setGMTPattern(jni::ref<java::lang::String> pattern) { return call_method<"setGMTPattern", jni::ref<android::icu::text::TimeZoneFormat>>(pattern); }
	jni::ref<java::lang::String> getGMTOffsetPattern(jni::ref<android::icu::text::TimeZoneFormat_GMTOffsetPatternType> type) { return call_method<"getGMTOffsetPattern", jni::ref<java::lang::String>>(type); }
	jni::ref<android::icu::text::TimeZoneFormat> setGMTOffsetPattern(jni::ref<android::icu::text::TimeZoneFormat_GMTOffsetPatternType> type, jni::ref<java::lang::String> pattern) { return call_method<"setGMTOffsetPattern", jni::ref<android::icu::text::TimeZoneFormat>>(type, pattern); }
	jni::ref<java::lang::String> getGMTOffsetDigits() { return call_method<"getGMTOffsetDigits", jni::ref<java::lang::String>>(); }
	jni::ref<android::icu::text::TimeZoneFormat> setGMTOffsetDigits(jni::ref<java::lang::String> digits) { return call_method<"setGMTOffsetDigits", jni::ref<android::icu::text::TimeZoneFormat>>(digits); }
	jni::ref<java::lang::String> getGMTZeroFormat() { return call_method<"getGMTZeroFormat", jni::ref<java::lang::String>>(); }
	jni::ref<android::icu::text::TimeZoneFormat> setGMTZeroFormat(jni::ref<java::lang::String> gmtZeroFormat) { return call_method<"setGMTZeroFormat", jni::ref<android::icu::text::TimeZoneFormat>>(gmtZeroFormat); }
	jni::ref<android::icu::text::TimeZoneFormat> setDefaultParseOptions(jni::ref<java::util::EnumSet> options) { return call_method<"setDefaultParseOptions", jni::ref<android::icu::text::TimeZoneFormat>>(options); }
	jni::ref<java::util::EnumSet> getDefaultParseOptions() { return call_method<"getDefaultParseOptions", jni::ref<java::util::EnumSet>>(); }
	jni::ref<java::lang::String> formatOffsetISO8601Basic(jint offset, jboolean useUtcIndicator, jboolean isShort, jboolean ignoreSeconds) { return call_method<"formatOffsetISO8601Basic", jni::ref<java::lang::String>>(offset, useUtcIndicator, isShort, ignoreSeconds); }
	jni::ref<java::lang::String> formatOffsetISO8601Extended(jint offset, jboolean useUtcIndicator, jboolean isShort, jboolean ignoreSeconds) { return call_method<"formatOffsetISO8601Extended", jni::ref<java::lang::String>>(offset, useUtcIndicator, isShort, ignoreSeconds); }
	jni::ref<java::lang::String> formatOffsetLocalizedGMT(jint offset) { return call_method<"formatOffsetLocalizedGMT", jni::ref<java::lang::String>>(offset); }
	jni::ref<java::lang::String> formatOffsetShortLocalizedGMT(jint offset) { return call_method<"formatOffsetShortLocalizedGMT", jni::ref<java::lang::String>>(offset); }
	jni::ref<java::lang::String> format(jni::ref<android::icu::text::TimeZoneFormat_Style> style, jni::ref<android::icu::util::TimeZone> tz, jlong date) { return call_method<"format", jni::ref<java::lang::String>>(style, tz, date); }
	jni::ref<java::lang::String> format(jni::ref<android::icu::text::TimeZoneFormat_Style> style, jni::ref<android::icu::util::TimeZone> tz, jlong date, jni::ref<android::icu::util::Output> p4) { return call_method<"format", jni::ref<java::lang::String>>(style, tz, date, p4); }
	jint parseOffsetISO8601(jni::ref<java::lang::String> text, jni::ref<java::text::ParsePosition> pos) { return call_method<"parseOffsetISO8601", jint>(text, pos); }
	jint parseOffsetLocalizedGMT(jni::ref<java::lang::String> text, jni::ref<java::text::ParsePosition> pos) { return call_method<"parseOffsetLocalizedGMT", jint>(text, pos); }
	jint parseOffsetShortLocalizedGMT(jni::ref<java::lang::String> text, jni::ref<java::text::ParsePosition> pos) { return call_method<"parseOffsetShortLocalizedGMT", jint>(text, pos); }
	jni::ref<android::icu::util::TimeZone> parse(jni::ref<android::icu::text::TimeZoneFormat_Style> style, jni::ref<java::lang::String> text, jni::ref<java::text::ParsePosition> pos, jni::ref<java::util::EnumSet> options, jni::ref<android::icu::util::Output> timeType) { return call_method<"parse", jni::ref<android::icu::util::TimeZone>>(style, text, pos, options, timeType); }
	jni::ref<android::icu::util::TimeZone> parse(jni::ref<android::icu::text::TimeZoneFormat_Style> style, jni::ref<java::lang::String> text, jni::ref<java::text::ParsePosition> pos, jni::ref<android::icu::util::Output> timeType) { return call_method<"parse", jni::ref<android::icu::util::TimeZone>>(style, text, pos, timeType); }
	jni::ref<android::icu::util::TimeZone> parse(jni::ref<java::lang::String> text, jni::ref<java::text::ParsePosition> pos) { return call_method<"parse", jni::ref<android::icu::util::TimeZone>>(text, pos); }
	jni::ref<android::icu::util::TimeZone> parse(jni::ref<java::lang::String> text) { return call_method<"parse", jni::ref<android::icu::util::TimeZone>>(text); }
	jni::ref<java::lang::StringBuffer> format(jni::ref<java::lang::Object> obj, jni::ref<java::lang::StringBuffer> toAppendTo, jni::ref<java::text::FieldPosition> pos) { return call_method<"format", jni::ref<java::lang::StringBuffer>>(obj, toAppendTo, pos); }
	jni::ref<java::text::AttributedCharacterIterator> formatToCharacterIterator(jni::ref<java::lang::Object> obj) { return call_method<"formatToCharacterIterator", jni::ref<java::text::AttributedCharacterIterator>>(obj); }
	jni::ref<java::lang::Object> parseObject(jni::ref<java::lang::String> source, jni::ref<java::text::ParsePosition> pos) { return call_method<"parseObject", jni::ref<java::lang::Object>>(source, pos); }
	jboolean isFrozen() { return call_method<"isFrozen", jboolean>(); }
	jni::ref<android::icu::text::TimeZoneFormat> freeze() { return call_method<"freeze", jni::ref<android::icu::text::TimeZoneFormat>>(); }
	jni::ref<android::icu::text::TimeZoneFormat> cloneAsThawed() { return call_method<"cloneAsThawed", jni::ref<android::icu::text::TimeZoneFormat>>(); }

protected:

	TimeZoneFormat(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_TEXT_TIMEZONEFORMAT
