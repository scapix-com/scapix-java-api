// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/icu/text/FormattedValue.h>

#ifndef SCAPIX_JAVA_API_ANDROID_ICU_TEXT_DATEINTERVALFORMAT_FORMATTEDDATEINTERVAL_FWD
#define SCAPIX_JAVA_API_ANDROID_ICU_TEXT_DATEINTERVALFORMAT_FORMATTEDDATEINTERVAL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::icu::text { class DateIntervalFormat_FormattedDateInterval; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::icu::text::DateIntervalFormat_FormattedDateInterval>
{
	static constexpr fixed_string class_name = "android/icu/text/DateIntervalFormat$FormattedDateInterval";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::icu::text::FormattedValue>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_TEXT_DATEINTERVALFORMAT_FORMATTEDDATEINTERVAL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_ICU_TEXT_DATEINTERVALFORMAT_FORMATTEDDATEINTERVAL)
#define SCAPIX_JAVA_API_ANDROID_ICU_TEXT_DATEINTERVALFORMAT_FORMATTEDDATEINTERVAL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/icu/text/ConstrainedFieldPosition.h>
#include <scapix/java_api/java/lang/Appendable.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/text/AttributedCharacterIterator.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::icu::text::DateIntervalFormat_FormattedDateInterval : public jni::object_base<"android/icu/text/DateIntervalFormat$FormattedDateInterval",
	java::lang::Object,
	android::icu::text::FormattedValue>
{
public:

	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jint length() { return call_method<"length", jint>(); }
	jchar charAt(jint index) { return call_method<"charAt", jchar>(index); }
	jni::ref<java::lang::CharSequence> subSequence(jint start, jint end) { return call_method<"subSequence", jni::ref<java::lang::CharSequence>>(start, end); }
	jni::ref<java::lang::Appendable> appendTo(jni::ref<java::lang::Appendable> appendable) { return call_method<"appendTo", jni::ref<java::lang::Appendable>>(appendable); }
	jboolean nextPosition(jni::ref<android::icu::text::ConstrainedFieldPosition> cfpos) { return call_method<"nextPosition", jboolean>(cfpos); }
	jni::ref<java::text::AttributedCharacterIterator> toCharacterIterator() { return call_method<"toCharacterIterator", jni::ref<java::text::AttributedCharacterIterator>>(); }

protected:

	DateIntervalFormat_FormattedDateInterval(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_TEXT_DATEINTERVALFORMAT_FORMATTEDDATEINTERVAL
