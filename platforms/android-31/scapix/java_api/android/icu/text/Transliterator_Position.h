// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_ICU_TEXT_TRANSLITERATOR_POSITION_FWD
#define SCAPIX_JAVA_API_ANDROID_ICU_TEXT_TRANSLITERATOR_POSITION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::icu::text { class Transliterator_Position; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::icu::text::Transliterator_Position>
{
	static constexpr fixed_string class_name = "android/icu/text/Transliterator$Position";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_TEXT_TRANSLITERATOR_POSITION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_ICU_TEXT_TRANSLITERATOR_POSITION)
#define SCAPIX_JAVA_API_ANDROID_ICU_TEXT_TRANSLITERATOR_POSITION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::icu::text::Transliterator_Position : public jni::object_base<"android/icu/text/Transliterator$Position",
	java::lang::Object>
{
public:

	jint contextLimit() { return get_field<"contextLimit", jint>(); }
	void contextLimit(jint v) { set_field<"contextLimit", jint>(v); }
	jint contextStart() { return get_field<"contextStart", jint>(); }
	void contextStart(jint v) { set_field<"contextStart", jint>(v); }
	jint limit() { return get_field<"limit", jint>(); }
	void limit(jint v) { set_field<"limit", jint>(v); }
	jint start() { return get_field<"start", jint>(); }
	void start(jint v) { set_field<"start", jint>(v); }

	static jni::ref<android::icu::text::Transliterator_Position> new_object() { return base_::new_object(); }
	static jni::ref<android::icu::text::Transliterator_Position> new_object(jint contextStart, jint contextLimit, jint start) { return base_::new_object(contextStart, contextLimit, start); }
	static jni::ref<android::icu::text::Transliterator_Position> new_object(jint contextStart, jint contextLimit, jint start, jint limit) { return base_::new_object(contextStart, contextLimit, start, limit); }
	static jni::ref<android::icu::text::Transliterator_Position> new_object(jni::ref<android::icu::text::Transliterator_Position> pos) { return base_::new_object(pos); }
	void set(jni::ref<android::icu::text::Transliterator_Position> pos) { return call_method<"set", void>(pos); }
	jboolean equals(jni::ref<java::lang::Object> obj) { return call_method<"equals", jboolean>(obj); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	void validate(jint length) { return call_method<"validate", void>(length); }

protected:

	Transliterator_Position(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_TEXT_TRANSLITERATOR_POSITION
