// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/icu/number/Notation.h>

#ifndef SCAPIX_JAVA_API_ANDROID_ICU_NUMBER_SCIENTIFICNOTATION_FWD
#define SCAPIX_JAVA_API_ANDROID_ICU_NUMBER_SCIENTIFICNOTATION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::icu::number { class ScientificNotation; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::icu::number::ScientificNotation>
{
	static constexpr fixed_string class_name = "android/icu/number/ScientificNotation";
	using base_classes = std::tuple<scapix::java_api::android::icu::number::Notation>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_NUMBER_SCIENTIFICNOTATION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_ICU_NUMBER_SCIENTIFICNOTATION)
#define SCAPIX_JAVA_API_ANDROID_ICU_NUMBER_SCIENTIFICNOTATION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/icu/number/NumberFormatter_SignDisplay.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::icu::number::ScientificNotation : public jni::object_base<"android/icu/number/ScientificNotation",
	android::icu::number::Notation>
{
public:

	jni::ref<android::icu::number::ScientificNotation> withMinExponentDigits(jint minExponentDigits) { return call_method<"withMinExponentDigits", jni::ref<android::icu::number::ScientificNotation>>(minExponentDigits); }
	jni::ref<android::icu::number::ScientificNotation> withExponentSignDisplay(jni::ref<android::icu::number::NumberFormatter_SignDisplay> exponentSignDisplay) { return call_method<"withExponentSignDisplay", jni::ref<android::icu::number::ScientificNotation>>(exponentSignDisplay); }

protected:

	ScientificNotation(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_NUMBER_SCIENTIFICNOTATION
