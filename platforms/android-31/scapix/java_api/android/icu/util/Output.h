// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_ICU_UTIL_OUTPUT_FWD
#define SCAPIX_JAVA_API_ANDROID_ICU_UTIL_OUTPUT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::icu::util { class Output; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::icu::util::Output>
{
	static constexpr fixed_string class_name = "android/icu/util/Output";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_UTIL_OUTPUT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_ICU_UTIL_OUTPUT)
#define SCAPIX_JAVA_API_ANDROID_ICU_UTIL_OUTPUT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::icu::util::Output : public jni::object_base<"android/icu/util/Output",
	java::lang::Object>
{
public:

	jni::ref<java::lang::Object> value() { return get_field<"value", jni::ref<java::lang::Object>>(); }
	void value(jni::ref<java::lang::Object> v) { set_field<"value", jni::ref<java::lang::Object>>(v); }

	static jni::ref<android::icu::util::Output> new_object() { return base_::new_object(); }
	static jni::ref<android::icu::util::Output> new_object(jni::ref<java::lang::Object> value) { return base_::new_object(value); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	Output(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_UTIL_OUTPUT
