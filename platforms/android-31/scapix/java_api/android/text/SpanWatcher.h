// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/text/NoCopySpan.h>

#ifndef SCAPIX_JAVA_API_ANDROID_TEXT_SPANWATCHER_FWD
#define SCAPIX_JAVA_API_ANDROID_TEXT_SPANWATCHER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::text { class SpanWatcher; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::text::SpanWatcher>
{
	static constexpr fixed_string class_name = "android/text/SpanWatcher";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::text::NoCopySpan>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEXT_SPANWATCHER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_TEXT_SPANWATCHER)
#define SCAPIX_JAVA_API_ANDROID_TEXT_SPANWATCHER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/text/Spannable.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::text::SpanWatcher : public jni::object_base<"android/text/SpanWatcher",
	java::lang::Object,
	android::text::NoCopySpan>
{
public:

	void onSpanAdded(jni::ref<android::text::Spannable> p1, jni::ref<java::lang::Object> p2, jint p3, jint p4) { return call_method<"onSpanAdded", void>(p1, p2, p3, p4); }
	void onSpanRemoved(jni::ref<android::text::Spannable> p1, jni::ref<java::lang::Object> p2, jint p3, jint p4) { return call_method<"onSpanRemoved", void>(p1, p2, p3, p4); }
	void onSpanChanged(jni::ref<android::text::Spannable> p1, jni::ref<java::lang::Object> p2, jint p3, jint p4, jint p5, jint p6) { return call_method<"onSpanChanged", void>(p1, p2, p3, p4, p5, p6); }

protected:

	SpanWatcher(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEXT_SPANWATCHER
