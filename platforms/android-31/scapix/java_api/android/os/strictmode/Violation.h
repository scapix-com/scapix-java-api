// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Throwable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_OS_STRICTMODE_VIOLATION_FWD
#define SCAPIX_JAVA_API_ANDROID_OS_STRICTMODE_VIOLATION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::os::strictmode { class Violation; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::os::strictmode::Violation>
{
	static constexpr fixed_string class_name = "android/os/strictmode/Violation";
	using base_classes = std::tuple<scapix::java_api::java::lang::Throwable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_OS_STRICTMODE_VIOLATION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_OS_STRICTMODE_VIOLATION)
#define SCAPIX_JAVA_API_ANDROID_OS_STRICTMODE_VIOLATION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/StackTraceElement.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::os::strictmode::Violation : public jni::object_base<"android/os/strictmode/Violation",
	java::lang::Throwable>
{
public:

	jint hashCode() { return call_method<"hashCode", jint>(); }
	jni::ref<java::lang::Throwable> initCause(jni::ref<java::lang::Throwable> cause) { return call_method<"initCause", jni::ref<java::lang::Throwable>>(cause); }
	void setStackTrace(jni::ref<jni::array<java::lang::StackTraceElement>> stackTrace) { return call_method<"setStackTrace", void>(stackTrace); }
	jni::ref<java::lang::Throwable> fillInStackTrace() { return call_method<"fillInStackTrace", jni::ref<java::lang::Throwable>>(); }

protected:

	Violation(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_OS_STRICTMODE_VIOLATION
