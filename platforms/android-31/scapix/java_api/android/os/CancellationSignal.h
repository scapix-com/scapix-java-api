// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_OS_CANCELLATIONSIGNAL_FWD
#define SCAPIX_JAVA_API_ANDROID_OS_CANCELLATIONSIGNAL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::os { class CancellationSignal; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::os::CancellationSignal>
{
	static constexpr fixed_string class_name = "android/os/CancellationSignal";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_OS_CANCELLATIONSIGNAL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_OS_CANCELLATIONSIGNAL)
#define SCAPIX_JAVA_API_ANDROID_OS_CANCELLATIONSIGNAL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/os/CancellationSignal_OnCancelListener.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::os::CancellationSignal : public jni::object_base<"android/os/CancellationSignal",
	java::lang::Object>
{
public:

	using OnCancelListener = CancellationSignal_OnCancelListener;

	static jni::ref<android::os::CancellationSignal> new_object() { return base_::new_object(); }
	jboolean isCanceled() { return call_method<"isCanceled", jboolean>(); }
	void throwIfCanceled() { return call_method<"throwIfCanceled", void>(); }
	void cancel() { return call_method<"cancel", void>(); }
	void setOnCancelListener(jni::ref<android::os::CancellationSignal_OnCancelListener> listener) { return call_method<"setOnCancelListener", void>(listener); }

protected:

	CancellationSignal(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_OS_CANCELLATIONSIGNAL
