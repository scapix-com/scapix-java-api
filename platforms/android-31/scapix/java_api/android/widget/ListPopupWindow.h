// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_WIDGET_LISTPOPUPWINDOW_FWD
#define SCAPIX_JAVA_API_ANDROID_WIDGET_LISTPOPUPWINDOW_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::widget { class ListPopupWindow; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::widget::ListPopupWindow>
{
	static constexpr fixed_string class_name = "android/widget/ListPopupWindow";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_WIDGET_LISTPOPUPWINDOW_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_WIDGET_LISTPOPUPWINDOW)
#define SCAPIX_JAVA_API_ANDROID_WIDGET_LISTPOPUPWINDOW

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/graphics/Rect.h>
#include <scapix/java_api/android/graphics/drawable/Drawable.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/view/KeyEvent.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/android/view/View_OnTouchListener.h>
#include <scapix/java_api/android/widget/AdapterView_OnItemClickListener.h>
#include <scapix/java_api/android/widget/AdapterView_OnItemSelectedListener.h>
#include <scapix/java_api/android/widget/ListAdapter.h>
#include <scapix/java_api/android/widget/ListView.h>
#include <scapix/java_api/android/widget/PopupWindow_OnDismissListener.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::widget::ListPopupWindow : public jni::object_base<"android/widget/ListPopupWindow",
	java::lang::Object>
{
public:

	static jint INPUT_METHOD_FROM_FOCUSABLE() { return get_static_field<"INPUT_METHOD_FROM_FOCUSABLE", jint>(); }
	static jint INPUT_METHOD_NEEDED() { return get_static_field<"INPUT_METHOD_NEEDED", jint>(); }
	static jint INPUT_METHOD_NOT_NEEDED() { return get_static_field<"INPUT_METHOD_NOT_NEEDED", jint>(); }
	static jint MATCH_PARENT() { return get_static_field<"MATCH_PARENT", jint>(); }
	static jint POSITION_PROMPT_ABOVE() { return get_static_field<"POSITION_PROMPT_ABOVE", jint>(); }
	static jint POSITION_PROMPT_BELOW() { return get_static_field<"POSITION_PROMPT_BELOW", jint>(); }
	static jint WRAP_CONTENT() { return get_static_field<"WRAP_CONTENT", jint>(); }

	static jni::ref<android::widget::ListPopupWindow> new_object(jni::ref<android::content::Context> context) { return base_::new_object(context); }
	static jni::ref<android::widget::ListPopupWindow> new_object(jni::ref<android::content::Context> context, jni::ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
	static jni::ref<android::widget::ListPopupWindow> new_object(jni::ref<android::content::Context> context, jni::ref<android::util::AttributeSet> attrs, jint defStyleAttr) { return base_::new_object(context, attrs, defStyleAttr); }
	static jni::ref<android::widget::ListPopupWindow> new_object(jni::ref<android::content::Context> context, jni::ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes) { return base_::new_object(context, attrs, defStyleAttr, defStyleRes); }
	void setAdapter(jni::ref<android::widget::ListAdapter> adapter) { return call_method<"setAdapter", void>(adapter); }
	void setPromptPosition(jint position) { return call_method<"setPromptPosition", void>(position); }
	jint getPromptPosition() { return call_method<"getPromptPosition", jint>(); }
	void setModal(jboolean modal) { return call_method<"setModal", void>(modal); }
	jboolean isModal() { return call_method<"isModal", jboolean>(); }
	void setSoftInputMode(jint mode) { return call_method<"setSoftInputMode", void>(mode); }
	jint getSoftInputMode() { return call_method<"getSoftInputMode", jint>(); }
	void setListSelector(jni::ref<android::graphics::drawable::Drawable> selector) { return call_method<"setListSelector", void>(selector); }
	jni::ref<android::graphics::drawable::Drawable> getBackground() { return call_method<"getBackground", jni::ref<android::graphics::drawable::Drawable>>(); }
	void setBackgroundDrawable(jni::ref<android::graphics::drawable::Drawable> d) { return call_method<"setBackgroundDrawable", void>(d); }
	void setAnimationStyle(jint animationStyle) { return call_method<"setAnimationStyle", void>(animationStyle); }
	jint getAnimationStyle() { return call_method<"getAnimationStyle", jint>(); }
	jni::ref<android::view::View> getAnchorView() { return call_method<"getAnchorView", jni::ref<android::view::View>>(); }
	void setAnchorView(jni::ref<android::view::View> anchor) { return call_method<"setAnchorView", void>(anchor); }
	jint getHorizontalOffset() { return call_method<"getHorizontalOffset", jint>(); }
	void setHorizontalOffset(jint offset) { return call_method<"setHorizontalOffset", void>(offset); }
	jint getVerticalOffset() { return call_method<"getVerticalOffset", jint>(); }
	void setVerticalOffset(jint offset) { return call_method<"setVerticalOffset", void>(offset); }
	void setEpicenterBounds(jni::ref<android::graphics::Rect> bounds) { return call_method<"setEpicenterBounds", void>(bounds); }
	jni::ref<android::graphics::Rect> getEpicenterBounds() { return call_method<"getEpicenterBounds", jni::ref<android::graphics::Rect>>(); }
	void setDropDownGravity(jint gravity) { return call_method<"setDropDownGravity", void>(gravity); }
	jint getWidth() { return call_method<"getWidth", jint>(); }
	void setWidth(jint width) { return call_method<"setWidth", void>(width); }
	void setContentWidth(jint width) { return call_method<"setContentWidth", void>(width); }
	jint getHeight() { return call_method<"getHeight", jint>(); }
	void setHeight(jint height) { return call_method<"setHeight", void>(height); }
	void setWindowLayoutType(jint layoutType) { return call_method<"setWindowLayoutType", void>(layoutType); }
	void setOnItemClickListener(jni::ref<android::widget::AdapterView_OnItemClickListener> clickListener) { return call_method<"setOnItemClickListener", void>(clickListener); }
	void setOnItemSelectedListener(jni::ref<android::widget::AdapterView_OnItemSelectedListener> selectedListener) { return call_method<"setOnItemSelectedListener", void>(selectedListener); }
	void setPromptView(jni::ref<android::view::View> prompt) { return call_method<"setPromptView", void>(prompt); }
	void postShow() { return call_method<"postShow", void>(); }
	void show() { return call_method<"show", void>(); }
	void dismiss() { return call_method<"dismiss", void>(); }
	void setOnDismissListener(jni::ref<android::widget::PopupWindow_OnDismissListener> listener) { return call_method<"setOnDismissListener", void>(listener); }
	void setInputMethodMode(jint mode) { return call_method<"setInputMethodMode", void>(mode); }
	jint getInputMethodMode() { return call_method<"getInputMethodMode", jint>(); }
	void setSelection(jint position) { return call_method<"setSelection", void>(position); }
	void clearListSelection() { return call_method<"clearListSelection", void>(); }
	jboolean isShowing() { return call_method<"isShowing", jboolean>(); }
	jboolean isInputMethodNotNeeded() { return call_method<"isInputMethodNotNeeded", jboolean>(); }
	jboolean performItemClick(jint position) { return call_method<"performItemClick", jboolean>(position); }
	jni::ref<java::lang::Object> getSelectedItem() { return call_method<"getSelectedItem", jni::ref<java::lang::Object>>(); }
	jint getSelectedItemPosition() { return call_method<"getSelectedItemPosition", jint>(); }
	jlong getSelectedItemId() { return call_method<"getSelectedItemId", jlong>(); }
	jni::ref<android::view::View> getSelectedView() { return call_method<"getSelectedView", jni::ref<android::view::View>>(); }
	jni::ref<android::widget::ListView> getListView() { return call_method<"getListView", jni::ref<android::widget::ListView>>(); }
	jboolean onKeyDown(jint keyCode, jni::ref<android::view::KeyEvent> event) { return call_method<"onKeyDown", jboolean>(keyCode, event); }
	jboolean onKeyUp(jint keyCode, jni::ref<android::view::KeyEvent> event) { return call_method<"onKeyUp", jboolean>(keyCode, event); }
	jboolean onKeyPreIme(jint keyCode, jni::ref<android::view::KeyEvent> event) { return call_method<"onKeyPreIme", jboolean>(keyCode, event); }
	jni::ref<android::view::View_OnTouchListener> createDragToOpenListener(jni::ref<android::view::View> src) { return call_method<"createDragToOpenListener", jni::ref<android::view::View_OnTouchListener>>(src); }

protected:

	ListPopupWindow(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_WIDGET_LISTPOPUPWINDOW
