// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_PREFERENCE_PREFERENCEMANAGER_FWD
#define SCAPIX_JAVA_API_ANDROID_PREFERENCE_PREFERENCEMANAGER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::preference { class PreferenceManager; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::preference::PreferenceManager>
{
	static constexpr fixed_string class_name = "android/preference/PreferenceManager";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_PREFERENCE_PREFERENCEMANAGER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_PREFERENCE_PREFERENCEMANAGER)
#define SCAPIX_JAVA_API_ANDROID_PREFERENCE_PREFERENCEMANAGER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/content/SharedPreferences.h>
#include <scapix/java_api/android/preference/Preference.h>
#include <scapix/java_api/android/preference/PreferenceDataStore.h>
#include <scapix/java_api/android/preference/PreferenceScreen.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/android/preference/PreferenceManager_OnActivityStopListener.h>
#include <scapix/java_api/android/preference/PreferenceManager_OnActivityResultListener.h>
#include <scapix/java_api/android/preference/PreferenceManager_OnActivityDestroyListener.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::preference::PreferenceManager : public jni::object_base<"android/preference/PreferenceManager",
	java::lang::Object>
{
public:

	using OnActivityStopListener = PreferenceManager_OnActivityStopListener;
	using OnActivityResultListener = PreferenceManager_OnActivityResultListener;
	using OnActivityDestroyListener = PreferenceManager_OnActivityDestroyListener;

	static jni::ref<java::lang::String> KEY_HAS_SET_DEFAULT_VALUES() { return get_static_field<"KEY_HAS_SET_DEFAULT_VALUES", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> METADATA_KEY_PREFERENCES() { return get_static_field<"METADATA_KEY_PREFERENCES", jni::ref<java::lang::String>>(); }

	void setPreferenceDataStore(jni::ref<android::preference::PreferenceDataStore> dataStore) { return call_method<"setPreferenceDataStore", void>(dataStore); }
	jni::ref<android::preference::PreferenceDataStore> getPreferenceDataStore() { return call_method<"getPreferenceDataStore", jni::ref<android::preference::PreferenceDataStore>>(); }
	jni::ref<android::preference::PreferenceScreen> createPreferenceScreen(jni::ref<android::content::Context> context) { return call_method<"createPreferenceScreen", jni::ref<android::preference::PreferenceScreen>>(context); }
	jni::ref<java::lang::String> getSharedPreferencesName() { return call_method<"getSharedPreferencesName", jni::ref<java::lang::String>>(); }
	void setSharedPreferencesName(jni::ref<java::lang::String> sharedPreferencesName) { return call_method<"setSharedPreferencesName", void>(sharedPreferencesName); }
	jint getSharedPreferencesMode() { return call_method<"getSharedPreferencesMode", jint>(); }
	void setSharedPreferencesMode(jint sharedPreferencesMode) { return call_method<"setSharedPreferencesMode", void>(sharedPreferencesMode); }
	void setStorageDefault() { return call_method<"setStorageDefault", void>(); }
	void setStorageDeviceProtected() { return call_method<"setStorageDeviceProtected", void>(); }
	jboolean isStorageDefault() { return call_method<"isStorageDefault", jboolean>(); }
	jboolean isStorageDeviceProtected() { return call_method<"isStorageDeviceProtected", jboolean>(); }
	jni::ref<android::content::SharedPreferences> getSharedPreferences() { return call_method<"getSharedPreferences", jni::ref<android::content::SharedPreferences>>(); }
	static jni::ref<android::content::SharedPreferences> getDefaultSharedPreferences(jni::ref<android::content::Context> context) { return call_static_method<"getDefaultSharedPreferences", jni::ref<android::content::SharedPreferences>>(context); }
	static jni::ref<java::lang::String> getDefaultSharedPreferencesName(jni::ref<android::content::Context> context) { return call_static_method<"getDefaultSharedPreferencesName", jni::ref<java::lang::String>>(context); }
	jni::ref<android::preference::Preference> findPreference(jni::ref<java::lang::CharSequence> key) { return call_method<"findPreference", jni::ref<android::preference::Preference>>(key); }
	static void setDefaultValues(jni::ref<android::content::Context> context, jint resId, jboolean readAgain) { return call_static_method<"setDefaultValues", void>(context, resId, readAgain); }
	static void setDefaultValues(jni::ref<android::content::Context> context, jni::ref<java::lang::String> sharedPreferencesName, jint sharedPreferencesMode, jint resId, jboolean readAgain) { return call_static_method<"setDefaultValues", void>(context, sharedPreferencesName, sharedPreferencesMode, resId, readAgain); }

protected:

	PreferenceManager(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_PREFERENCE_PREFERENCEMANAGER
