// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIACODEC_BUFFERINFO_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIACODEC_BUFFERINFO_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media { class MediaCodec_BufferInfo; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::MediaCodec_BufferInfo>
{
	static constexpr fixed_string class_name = "android/media/MediaCodec$BufferInfo";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIACODEC_BUFFERINFO_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIACODEC_BUFFERINFO)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIACODEC_BUFFERINFO

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::MediaCodec_BufferInfo : public jni::object_base<"android/media/MediaCodec$BufferInfo",
	java::lang::Object>
{
public:

	jint flags() { return get_field<"flags", jint>(); }
	void flags(jint v) { set_field<"flags", jint>(v); }
	jint offset() { return get_field<"offset", jint>(); }
	void offset(jint v) { set_field<"offset", jint>(v); }
	jlong presentationTimeUs() { return get_field<"presentationTimeUs", jlong>(); }
	void presentationTimeUs(jlong v) { set_field<"presentationTimeUs", jlong>(v); }
	jint size() { return get_field<"size", jint>(); }
	void size(jint v) { set_field<"size", jint>(v); }

	static jni::ref<android::media::MediaCodec_BufferInfo> new_object() { return base_::new_object(); }
	void set(jint newOffset, jint newSize, jlong newTimeUs, jint p4) { return call_method<"set", void>(newOffset, newSize, newTimeUs, p4); }

protected:

	MediaCodec_BufferInfo(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIACODEC_BUFFERINFO
