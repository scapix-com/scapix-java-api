// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_DRMINITDATA_SCHEMEINITDATA_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_DRMINITDATA_SCHEMEINITDATA_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media { class DrmInitData_SchemeInitData; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::DrmInitData_SchemeInitData>
{
	static constexpr fixed_string class_name = "android/media/DrmInitData$SchemeInitData";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_DRMINITDATA_SCHEMEINITDATA_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_DRMINITDATA_SCHEMEINITDATA)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_DRMINITDATA_SCHEMEINITDATA

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/UUID.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::DrmInitData_SchemeInitData : public jni::object_base<"android/media/DrmInitData$SchemeInitData",
	java::lang::Object>
{
public:

	static jni::ref<java::util::UUID> UUID_NIL() { return get_static_field<"UUID_NIL", jni::ref<java::util::UUID>>(); }
	jni::ref<jni::array<jbyte>> data() { return get_field<"data", jni::ref<jni::array<jbyte>>>(); }
	jni::ref<java::lang::String> mimeType() { return get_field<"mimeType", jni::ref<java::lang::String>>(); }
	jni::ref<java::util::UUID> uuid() { return get_field<"uuid", jni::ref<java::util::UUID>>(); }

	static jni::ref<android::media::DrmInitData_SchemeInitData> new_object(jni::ref<java::util::UUID> uuid, jni::ref<java::lang::String> mimeType, jni::ref<jni::array<jbyte>> data) { return base_::new_object(uuid, mimeType, data); }
	jboolean equals(jni::ref<java::lang::Object> obj) { return call_method<"equals", jboolean>(obj); }
	jint hashCode() { return call_method<"hashCode", jint>(); }

protected:

	DrmInitData_SchemeInitData(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_DRMINITDATA_SCHEMEINITDATA
