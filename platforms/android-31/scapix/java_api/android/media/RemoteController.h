// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_REMOTECONTROLLER_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_REMOTECONTROLLER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media { class RemoteController; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::RemoteController>
{
	static constexpr fixed_string class_name = "android/media/RemoteController";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_REMOTECONTROLLER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_REMOTECONTROLLER)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_REMOTECONTROLLER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/media/RemoteController_MetadataEditor.h>
#include <scapix/java_api/android/media/RemoteController_OnClientUpdateListener.h>
#include <scapix/java_api/android/os/Looper.h>
#include <scapix/java_api/android/view/KeyEvent.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::RemoteController : public jni::object_base<"android/media/RemoteController",
	java::lang::Object>
{
public:

	using OnClientUpdateListener = RemoteController_OnClientUpdateListener;
	using MetadataEditor = RemoteController_MetadataEditor;

	static jint POSITION_SYNCHRONIZATION_CHECK() { return get_static_field<"POSITION_SYNCHRONIZATION_CHECK", jint>(); }
	static jint POSITION_SYNCHRONIZATION_NONE() { return get_static_field<"POSITION_SYNCHRONIZATION_NONE", jint>(); }

	static jni::ref<android::media::RemoteController> new_object(jni::ref<android::content::Context> context, jni::ref<android::media::RemoteController_OnClientUpdateListener> updateListener) { return base_::new_object(context, updateListener); }
	static jni::ref<android::media::RemoteController> new_object(jni::ref<android::content::Context> context, jni::ref<android::media::RemoteController_OnClientUpdateListener> updateListener, jni::ref<android::os::Looper> looper) { return base_::new_object(context, updateListener, looper); }
	jlong getEstimatedMediaPosition() { return call_method<"getEstimatedMediaPosition", jlong>(); }
	jboolean sendMediaKeyEvent(jni::ref<android::view::KeyEvent> keyEvent) { return call_method<"sendMediaKeyEvent", jboolean>(keyEvent); }
	jboolean seekTo(jlong timeMs) { return call_method<"seekTo", jboolean>(timeMs); }
	jboolean setArtworkConfiguration(jint width, jint height) { return call_method<"setArtworkConfiguration", jboolean>(width, height); }
	jboolean clearArtworkConfiguration() { return call_method<"clearArtworkConfiguration", jboolean>(); }
	jboolean setSynchronizationMode(jint sync) { return call_method<"setSynchronizationMode", jboolean>(sync); }
	jni::ref<android::media::RemoteController_MetadataEditor> editMetadata() { return call_method<"editMetadata", jni::ref<android::media::RemoteController_MetadataEditor>>(); }

protected:

	RemoteController(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_REMOTECONTROLLER
