// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIAROUTE2INFO_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIAROUTE2INFO_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media { class MediaRoute2Info; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::MediaRoute2Info>
{
	static constexpr fixed_string class_name = "android/media/MediaRoute2Info";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIAROUTE2INFO_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIAROUTE2INFO)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIAROUTE2INFO

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/android/media/MediaRoute2Info_Builder.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::MediaRoute2Info : public jni::object_base<"android/media/MediaRoute2Info",
	java::lang::Object,
	android::os::Parcelable>
{
public:

	using Builder = MediaRoute2Info_Builder;

	static jint CONNECTION_STATE_CONNECTED() { return get_static_field<"CONNECTION_STATE_CONNECTED", jint>(); }
	static jint CONNECTION_STATE_CONNECTING() { return get_static_field<"CONNECTION_STATE_CONNECTING", jint>(); }
	static jint CONNECTION_STATE_DISCONNECTED() { return get_static_field<"CONNECTION_STATE_DISCONNECTED", jint>(); }
	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }
	static jni::ref<java::lang::String> FEATURE_LIVE_AUDIO() { return get_static_field<"FEATURE_LIVE_AUDIO", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> FEATURE_LIVE_VIDEO() { return get_static_field<"FEATURE_LIVE_VIDEO", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> FEATURE_REMOTE_AUDIO_PLAYBACK() { return get_static_field<"FEATURE_REMOTE_AUDIO_PLAYBACK", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> FEATURE_REMOTE_PLAYBACK() { return get_static_field<"FEATURE_REMOTE_PLAYBACK", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> FEATURE_REMOTE_VIDEO_PLAYBACK() { return get_static_field<"FEATURE_REMOTE_VIDEO_PLAYBACK", jni::ref<java::lang::String>>(); }
	static jint PLAYBACK_VOLUME_FIXED() { return get_static_field<"PLAYBACK_VOLUME_FIXED", jint>(); }
	static jint PLAYBACK_VOLUME_VARIABLE() { return get_static_field<"PLAYBACK_VOLUME_VARIABLE", jint>(); }

	jni::ref<java::lang::String> getId() { return call_method<"getId", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::CharSequence> getName() { return call_method<"getName", jni::ref<java::lang::CharSequence>>(); }
	jni::ref<java::util::List> getFeatures() { return call_method<"getFeatures", jni::ref<java::util::List>>(); }
	jboolean isSystemRoute() { return call_method<"isSystemRoute", jboolean>(); }
	jni::ref<android::net::Uri> getIconUri() { return call_method<"getIconUri", jni::ref<android::net::Uri>>(); }
	jni::ref<java::lang::CharSequence> getDescription() { return call_method<"getDescription", jni::ref<java::lang::CharSequence>>(); }
	jint getConnectionState() { return call_method<"getConnectionState", jint>(); }
	jni::ref<java::lang::String> getClientPackageName() { return call_method<"getClientPackageName", jni::ref<java::lang::String>>(); }
	jint getVolumeHandling() { return call_method<"getVolumeHandling", jint>(); }
	jint getVolumeMax() { return call_method<"getVolumeMax", jint>(); }
	jint getVolume() { return call_method<"getVolume", jint>(); }
	jni::ref<android::os::Bundle> getExtras() { return call_method<"getExtras", jni::ref<android::os::Bundle>>(); }
	jboolean equals(jni::ref<java::lang::Object> obj) { return call_method<"equals", jboolean>(obj); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	void writeToParcel(jni::ref<android::os::Parcel> dest, jint flags) { return call_method<"writeToParcel", void>(dest, flags); }

protected:

	MediaRoute2Info(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIAROUTE2INFO
