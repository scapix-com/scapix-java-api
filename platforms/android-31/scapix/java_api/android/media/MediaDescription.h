// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIADESCRIPTION_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIADESCRIPTION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media { class MediaDescription; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::MediaDescription>
{
	static constexpr fixed_string class_name = "android/media/MediaDescription";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIADESCRIPTION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIADESCRIPTION)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIADESCRIPTION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/graphics/Bitmap.h>
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/android/media/MediaDescription_Builder.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::MediaDescription : public jni::object_base<"android/media/MediaDescription",
	java::lang::Object,
	android::os::Parcelable>
{
public:

	using Builder = MediaDescription_Builder;

	static jlong BT_FOLDER_TYPE_ALBUMS() { return get_static_field<"BT_FOLDER_TYPE_ALBUMS", jlong>(); }
	static jlong BT_FOLDER_TYPE_ARTISTS() { return get_static_field<"BT_FOLDER_TYPE_ARTISTS", jlong>(); }
	static jlong BT_FOLDER_TYPE_GENRES() { return get_static_field<"BT_FOLDER_TYPE_GENRES", jlong>(); }
	static jlong BT_FOLDER_TYPE_MIXED() { return get_static_field<"BT_FOLDER_TYPE_MIXED", jlong>(); }
	static jlong BT_FOLDER_TYPE_PLAYLISTS() { return get_static_field<"BT_FOLDER_TYPE_PLAYLISTS", jlong>(); }
	static jlong BT_FOLDER_TYPE_TITLES() { return get_static_field<"BT_FOLDER_TYPE_TITLES", jlong>(); }
	static jlong BT_FOLDER_TYPE_YEARS() { return get_static_field<"BT_FOLDER_TYPE_YEARS", jlong>(); }
	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }
	static jni::ref<java::lang::String> EXTRA_BT_FOLDER_TYPE() { return get_static_field<"EXTRA_BT_FOLDER_TYPE", jni::ref<java::lang::String>>(); }

	jni::ref<java::lang::String> getMediaId() { return call_method<"getMediaId", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::CharSequence> getTitle() { return call_method<"getTitle", jni::ref<java::lang::CharSequence>>(); }
	jni::ref<java::lang::CharSequence> getSubtitle() { return call_method<"getSubtitle", jni::ref<java::lang::CharSequence>>(); }
	jni::ref<java::lang::CharSequence> getDescription() { return call_method<"getDescription", jni::ref<java::lang::CharSequence>>(); }
	jni::ref<android::graphics::Bitmap> getIconBitmap() { return call_method<"getIconBitmap", jni::ref<android::graphics::Bitmap>>(); }
	jni::ref<android::net::Uri> getIconUri() { return call_method<"getIconUri", jni::ref<android::net::Uri>>(); }
	jni::ref<android::os::Bundle> getExtras() { return call_method<"getExtras", jni::ref<android::os::Bundle>>(); }
	jni::ref<android::net::Uri> getMediaUri() { return call_method<"getMediaUri", jni::ref<android::net::Uri>>(); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	void writeToParcel(jni::ref<android::os::Parcel> dest, jint flags) { return call_method<"writeToParcel", void>(dest, flags); }
	jboolean equals(jni::ref<java::lang::Object> o) { return call_method<"equals", jboolean>(o); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	MediaDescription(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIADESCRIPTION
