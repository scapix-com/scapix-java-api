// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIAROUTER2_ROUTINGCONTROLLER_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIAROUTER2_ROUTINGCONTROLLER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media { class MediaRouter2_RoutingController; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::MediaRouter2_RoutingController>
{
	static constexpr fixed_string class_name = "android/media/MediaRouter2$RoutingController";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIAROUTER2_ROUTINGCONTROLLER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIAROUTER2_ROUTINGCONTROLLER)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIAROUTER2_ROUTINGCONTROLLER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/media/MediaRoute2Info.h>
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::MediaRouter2_RoutingController : public jni::object_base<"android/media/MediaRouter2$RoutingController",
	java::lang::Object>
{
public:

	jni::ref<java::lang::String> getId() { return call_method<"getId", jni::ref<java::lang::String>>(); }
	jni::ref<android::os::Bundle> getControlHints() { return call_method<"getControlHints", jni::ref<android::os::Bundle>>(); }
	jni::ref<java::util::List> getSelectedRoutes() { return call_method<"getSelectedRoutes", jni::ref<java::util::List>>(); }
	jni::ref<java::util::List> getSelectableRoutes() { return call_method<"getSelectableRoutes", jni::ref<java::util::List>>(); }
	jni::ref<java::util::List> getDeselectableRoutes() { return call_method<"getDeselectableRoutes", jni::ref<java::util::List>>(); }
	jint getVolumeHandling() { return call_method<"getVolumeHandling", jint>(); }
	jint getVolumeMax() { return call_method<"getVolumeMax", jint>(); }
	jint getVolume() { return call_method<"getVolume", jint>(); }
	jboolean isReleased() { return call_method<"isReleased", jboolean>(); }
	void selectRoute(jni::ref<android::media::MediaRoute2Info> route) { return call_method<"selectRoute", void>(route); }
	void deselectRoute(jni::ref<android::media::MediaRoute2Info> route) { return call_method<"deselectRoute", void>(route); }
	void setVolume(jint volume) { return call_method<"setVolume", void>(volume); }
	void release() { return call_method<"release", void>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	MediaRouter2_RoutingController(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIAROUTER2_ROUTINGCONTROLLER
