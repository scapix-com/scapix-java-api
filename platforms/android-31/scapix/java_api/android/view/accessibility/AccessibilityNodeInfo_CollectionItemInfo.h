// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_VIEW_ACCESSIBILITY_ACCESSIBILITYNODEINFO_COLLECTIONITEMINFO_FWD
#define SCAPIX_JAVA_API_ANDROID_VIEW_ACCESSIBILITY_ACCESSIBILITYNODEINFO_COLLECTIONITEMINFO_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::view::accessibility { class AccessibilityNodeInfo_CollectionItemInfo; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::view::accessibility::AccessibilityNodeInfo_CollectionItemInfo>
{
	static constexpr fixed_string class_name = "android/view/accessibility/AccessibilityNodeInfo$CollectionItemInfo";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_ACCESSIBILITY_ACCESSIBILITYNODEINFO_COLLECTIONITEMINFO_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_VIEW_ACCESSIBILITY_ACCESSIBILITYNODEINFO_COLLECTIONITEMINFO)
#define SCAPIX_JAVA_API_ANDROID_VIEW_ACCESSIBILITY_ACCESSIBILITYNODEINFO_COLLECTIONITEMINFO

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::view::accessibility::AccessibilityNodeInfo_CollectionItemInfo : public jni::object_base<"android/view/accessibility/AccessibilityNodeInfo$CollectionItemInfo",
	java::lang::Object>
{
public:

	static jni::ref<android::view::accessibility::AccessibilityNodeInfo_CollectionItemInfo> new_object(jint rowIndex, jint rowSpan, jint columnIndex, jint columnSpan, jboolean heading) { return base_::new_object(rowIndex, rowSpan, columnIndex, columnSpan, heading); }
	static jni::ref<android::view::accessibility::AccessibilityNodeInfo_CollectionItemInfo> new_object(jint rowIndex, jint rowSpan, jint columnIndex, jint columnSpan, jboolean heading, jboolean selected) { return base_::new_object(rowIndex, rowSpan, columnIndex, columnSpan, heading, selected); }
	static jni::ref<android::view::accessibility::AccessibilityNodeInfo_CollectionItemInfo> obtain(jint rowIndex, jint rowSpan, jint columnIndex, jint columnSpan, jboolean heading) { return call_static_method<"obtain", jni::ref<android::view::accessibility::AccessibilityNodeInfo_CollectionItemInfo>>(rowIndex, rowSpan, columnIndex, columnSpan, heading); }
	static jni::ref<android::view::accessibility::AccessibilityNodeInfo_CollectionItemInfo> obtain(jint rowIndex, jint rowSpan, jint columnIndex, jint columnSpan, jboolean heading, jboolean selected) { return call_static_method<"obtain", jni::ref<android::view::accessibility::AccessibilityNodeInfo_CollectionItemInfo>>(rowIndex, rowSpan, columnIndex, columnSpan, heading, selected); }
	jint getColumnIndex() { return call_method<"getColumnIndex", jint>(); }
	jint getRowIndex() { return call_method<"getRowIndex", jint>(); }
	jint getColumnSpan() { return call_method<"getColumnSpan", jint>(); }
	jint getRowSpan() { return call_method<"getRowSpan", jint>(); }
	jboolean isHeading() { return call_method<"isHeading", jboolean>(); }
	jboolean isSelected() { return call_method<"isSelected", jboolean>(); }

protected:

	AccessibilityNodeInfo_CollectionItemInfo(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_ACCESSIBILITY_ACCESSIBILITYNODEINFO_COLLECTIONITEMINFO
