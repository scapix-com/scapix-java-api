// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/view/accessibility/AccessibilityRecord.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_VIEW_ACCESSIBILITY_ACCESSIBILITYEVENT_FWD
#define SCAPIX_JAVA_API_ANDROID_VIEW_ACCESSIBILITY_ACCESSIBILITYEVENT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::view::accessibility { class AccessibilityEvent; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::view::accessibility::AccessibilityEvent>
{
	static constexpr fixed_string class_name = "android/view/accessibility/AccessibilityEvent";
	using base_classes = std::tuple<scapix::java_api::android::view::accessibility::AccessibilityRecord, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_ACCESSIBILITY_ACCESSIBILITYEVENT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_VIEW_ACCESSIBILITY_ACCESSIBILITYEVENT)
#define SCAPIX_JAVA_API_ANDROID_VIEW_ACCESSIBILITY_ACCESSIBILITYEVENT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::view::accessibility::AccessibilityEvent : public jni::object_base<"android/view/accessibility/AccessibilityEvent",
	android::view::accessibility::AccessibilityRecord,
	android::os::Parcelable>
{
public:

	static jint CONTENT_CHANGE_TYPE_CONTENT_DESCRIPTION() { return get_static_field<"CONTENT_CHANGE_TYPE_CONTENT_DESCRIPTION", jint>(); }
	static jint CONTENT_CHANGE_TYPE_PANE_APPEARED() { return get_static_field<"CONTENT_CHANGE_TYPE_PANE_APPEARED", jint>(); }
	static jint CONTENT_CHANGE_TYPE_PANE_DISAPPEARED() { return get_static_field<"CONTENT_CHANGE_TYPE_PANE_DISAPPEARED", jint>(); }
	static jint CONTENT_CHANGE_TYPE_PANE_TITLE() { return get_static_field<"CONTENT_CHANGE_TYPE_PANE_TITLE", jint>(); }
	static jint CONTENT_CHANGE_TYPE_STATE_DESCRIPTION() { return get_static_field<"CONTENT_CHANGE_TYPE_STATE_DESCRIPTION", jint>(); }
	static jint CONTENT_CHANGE_TYPE_SUBTREE() { return get_static_field<"CONTENT_CHANGE_TYPE_SUBTREE", jint>(); }
	static jint CONTENT_CHANGE_TYPE_TEXT() { return get_static_field<"CONTENT_CHANGE_TYPE_TEXT", jint>(); }
	static jint CONTENT_CHANGE_TYPE_UNDEFINED() { return get_static_field<"CONTENT_CHANGE_TYPE_UNDEFINED", jint>(); }
	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }
	static jint INVALID_POSITION() { return get_static_field<"INVALID_POSITION", jint>(); }
	static jint MAX_TEXT_LENGTH() { return get_static_field<"MAX_TEXT_LENGTH", jint>(); }
	static jint TYPES_ALL_MASK() { return get_static_field<"TYPES_ALL_MASK", jint>(); }
	static jint TYPE_ANNOUNCEMENT() { return get_static_field<"TYPE_ANNOUNCEMENT", jint>(); }
	static jint TYPE_ASSIST_READING_CONTEXT() { return get_static_field<"TYPE_ASSIST_READING_CONTEXT", jint>(); }
	static jint TYPE_GESTURE_DETECTION_END() { return get_static_field<"TYPE_GESTURE_DETECTION_END", jint>(); }
	static jint TYPE_GESTURE_DETECTION_START() { return get_static_field<"TYPE_GESTURE_DETECTION_START", jint>(); }
	static jint TYPE_NOTIFICATION_STATE_CHANGED() { return get_static_field<"TYPE_NOTIFICATION_STATE_CHANGED", jint>(); }
	static jint TYPE_TOUCH_EXPLORATION_GESTURE_END() { return get_static_field<"TYPE_TOUCH_EXPLORATION_GESTURE_END", jint>(); }
	static jint TYPE_TOUCH_EXPLORATION_GESTURE_START() { return get_static_field<"TYPE_TOUCH_EXPLORATION_GESTURE_START", jint>(); }
	static jint TYPE_TOUCH_INTERACTION_END() { return get_static_field<"TYPE_TOUCH_INTERACTION_END", jint>(); }
	static jint TYPE_TOUCH_INTERACTION_START() { return get_static_field<"TYPE_TOUCH_INTERACTION_START", jint>(); }
	static jint TYPE_VIEW_ACCESSIBILITY_FOCUSED() { return get_static_field<"TYPE_VIEW_ACCESSIBILITY_FOCUSED", jint>(); }
	static jint TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED() { return get_static_field<"TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED", jint>(); }
	static jint TYPE_VIEW_CLICKED() { return get_static_field<"TYPE_VIEW_CLICKED", jint>(); }
	static jint TYPE_VIEW_CONTEXT_CLICKED() { return get_static_field<"TYPE_VIEW_CONTEXT_CLICKED", jint>(); }
	static jint TYPE_VIEW_FOCUSED() { return get_static_field<"TYPE_VIEW_FOCUSED", jint>(); }
	static jint TYPE_VIEW_HOVER_ENTER() { return get_static_field<"TYPE_VIEW_HOVER_ENTER", jint>(); }
	static jint TYPE_VIEW_HOVER_EXIT() { return get_static_field<"TYPE_VIEW_HOVER_EXIT", jint>(); }
	static jint TYPE_VIEW_LONG_CLICKED() { return get_static_field<"TYPE_VIEW_LONG_CLICKED", jint>(); }
	static jint TYPE_VIEW_SCROLLED() { return get_static_field<"TYPE_VIEW_SCROLLED", jint>(); }
	static jint TYPE_VIEW_SELECTED() { return get_static_field<"TYPE_VIEW_SELECTED", jint>(); }
	static jint TYPE_VIEW_TEXT_CHANGED() { return get_static_field<"TYPE_VIEW_TEXT_CHANGED", jint>(); }
	static jint TYPE_VIEW_TEXT_SELECTION_CHANGED() { return get_static_field<"TYPE_VIEW_TEXT_SELECTION_CHANGED", jint>(); }
	static jint TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY() { return get_static_field<"TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY", jint>(); }
	static jint TYPE_WINDOWS_CHANGED() { return get_static_field<"TYPE_WINDOWS_CHANGED", jint>(); }
	static jint TYPE_WINDOW_CONTENT_CHANGED() { return get_static_field<"TYPE_WINDOW_CONTENT_CHANGED", jint>(); }
	static jint TYPE_WINDOW_STATE_CHANGED() { return get_static_field<"TYPE_WINDOW_STATE_CHANGED", jint>(); }
	static jint WINDOWS_CHANGE_ACCESSIBILITY_FOCUSED() { return get_static_field<"WINDOWS_CHANGE_ACCESSIBILITY_FOCUSED", jint>(); }
	static jint WINDOWS_CHANGE_ACTIVE() { return get_static_field<"WINDOWS_CHANGE_ACTIVE", jint>(); }
	static jint WINDOWS_CHANGE_ADDED() { return get_static_field<"WINDOWS_CHANGE_ADDED", jint>(); }
	static jint WINDOWS_CHANGE_BOUNDS() { return get_static_field<"WINDOWS_CHANGE_BOUNDS", jint>(); }
	static jint WINDOWS_CHANGE_CHILDREN() { return get_static_field<"WINDOWS_CHANGE_CHILDREN", jint>(); }
	static jint WINDOWS_CHANGE_FOCUSED() { return get_static_field<"WINDOWS_CHANGE_FOCUSED", jint>(); }
	static jint WINDOWS_CHANGE_LAYER() { return get_static_field<"WINDOWS_CHANGE_LAYER", jint>(); }
	static jint WINDOWS_CHANGE_PARENT() { return get_static_field<"WINDOWS_CHANGE_PARENT", jint>(); }
	static jint WINDOWS_CHANGE_PIP() { return get_static_field<"WINDOWS_CHANGE_PIP", jint>(); }
	static jint WINDOWS_CHANGE_REMOVED() { return get_static_field<"WINDOWS_CHANGE_REMOVED", jint>(); }
	static jint WINDOWS_CHANGE_TITLE() { return get_static_field<"WINDOWS_CHANGE_TITLE", jint>(); }

	static jni::ref<android::view::accessibility::AccessibilityEvent> new_object() { return base_::new_object(); }
	static jni::ref<android::view::accessibility::AccessibilityEvent> new_object(jint eventType) { return base_::new_object(eventType); }
	static jni::ref<android::view::accessibility::AccessibilityEvent> new_object(jni::ref<android::view::accessibility::AccessibilityEvent> event) { return base_::new_object(event); }
	jint getRecordCount() { return call_method<"getRecordCount", jint>(); }
	void appendRecord(jni::ref<android::view::accessibility::AccessibilityRecord> record) { return call_method<"appendRecord", void>(record); }
	jni::ref<android::view::accessibility::AccessibilityRecord> getRecord(jint index) { return call_method<"getRecord", jni::ref<android::view::accessibility::AccessibilityRecord>>(index); }
	jint getEventType() { return call_method<"getEventType", jint>(); }
	jint getContentChangeTypes() { return call_method<"getContentChangeTypes", jint>(); }
	void setContentChangeTypes(jint changeTypes) { return call_method<"setContentChangeTypes", void>(changeTypes); }
	jint getWindowChanges() { return call_method<"getWindowChanges", jint>(); }
	void setEventType(jint eventType) { return call_method<"setEventType", void>(eventType); }
	jlong getEventTime() { return call_method<"getEventTime", jlong>(); }
	void setEventTime(jlong eventTime) { return call_method<"setEventTime", void>(eventTime); }
	jni::ref<java::lang::CharSequence> getPackageName() { return call_method<"getPackageName", jni::ref<java::lang::CharSequence>>(); }
	void setPackageName(jni::ref<java::lang::CharSequence> packageName) { return call_method<"setPackageName", void>(packageName); }
	void setMovementGranularity(jint granularity) { return call_method<"setMovementGranularity", void>(granularity); }
	jint getMovementGranularity() { return call_method<"getMovementGranularity", jint>(); }
	void setAction(jint action) { return call_method<"setAction", void>(action); }
	jint getAction() { return call_method<"getAction", jint>(); }
	static jni::ref<android::view::accessibility::AccessibilityEvent> obtain(jint eventType) { return call_static_method<"obtain", jni::ref<android::view::accessibility::AccessibilityEvent>>(eventType); }
	static jni::ref<android::view::accessibility::AccessibilityEvent> obtain(jni::ref<android::view::accessibility::AccessibilityEvent> event) { return call_static_method<"obtain", jni::ref<android::view::accessibility::AccessibilityEvent>>(event); }
	static jni::ref<android::view::accessibility::AccessibilityEvent> obtain() { return call_static_method<"obtain", jni::ref<android::view::accessibility::AccessibilityEvent>>(); }
	void recycle() { return call_method<"recycle", void>(); }
	void initFromParcel(jni::ref<android::os::Parcel> parcel) { return call_method<"initFromParcel", void>(parcel); }
	void writeToParcel(jni::ref<android::os::Parcel> parcel, jint flags) { return call_method<"writeToParcel", void>(parcel, flags); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> eventTypeToString(jint eventType) { return call_static_method<"eventTypeToString", jni::ref<java::lang::String>>(eventType); }

protected:

	AccessibilityEvent(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_ACCESSIBILITY_ACCESSIBILITYEVENT
