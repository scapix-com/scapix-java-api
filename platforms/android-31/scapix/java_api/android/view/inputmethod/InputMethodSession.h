// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_VIEW_INPUTMETHOD_INPUTMETHODSESSION_FWD
#define SCAPIX_JAVA_API_ANDROID_VIEW_INPUTMETHOD_INPUTMETHODSESSION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::view::inputmethod { class InputMethodSession; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::view::inputmethod::InputMethodSession>
{
	static constexpr fixed_string class_name = "android/view/inputmethod/InputMethodSession";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_INPUTMETHOD_INPUTMETHODSESSION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_VIEW_INPUTMETHOD_INPUTMETHODSESSION)
#define SCAPIX_JAVA_API_ANDROID_VIEW_INPUTMETHOD_INPUTMETHODSESSION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/graphics/Rect.h>
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/android/view/KeyEvent.h>
#include <scapix/java_api/android/view/MotionEvent.h>
#include <scapix/java_api/android/view/inputmethod/CompletionInfo.h>
#include <scapix/java_api/android/view/inputmethod/CursorAnchorInfo.h>
#include <scapix/java_api/android/view/inputmethod/ExtractedText.h>
#include <scapix/java_api/android/view/inputmethod/InputMethodSession_EventCallback.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::view::inputmethod::InputMethodSession : public jni::object_base<"android/view/inputmethod/InputMethodSession",
	java::lang::Object>
{
public:

	using EventCallback = InputMethodSession_EventCallback;

	void finishInput() { return call_method<"finishInput", void>(); }
	void updateSelection(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6) { return call_method<"updateSelection", void>(p1, p2, p3, p4, p5, p6); }
	void viewClicked(jboolean p1) { return call_method<"viewClicked", void>(p1); }
	void updateCursor(jni::ref<android::graphics::Rect> p1) { return call_method<"updateCursor", void>(p1); }
	void displayCompletions(jni::ref<jni::array<android::view::inputmethod::CompletionInfo>> p1) { return call_method<"displayCompletions", void>(p1); }
	void updateExtractedText(jint p1, jni::ref<android::view::inputmethod::ExtractedText> p2) { return call_method<"updateExtractedText", void>(p1, p2); }
	void dispatchKeyEvent(jint p1, jni::ref<android::view::KeyEvent> p2, jni::ref<android::view::inputmethod::InputMethodSession_EventCallback> p3) { return call_method<"dispatchKeyEvent", void>(p1, p2, p3); }
	void dispatchTrackballEvent(jint p1, jni::ref<android::view::MotionEvent> p2, jni::ref<android::view::inputmethod::InputMethodSession_EventCallback> p3) { return call_method<"dispatchTrackballEvent", void>(p1, p2, p3); }
	void dispatchGenericMotionEvent(jint p1, jni::ref<android::view::MotionEvent> p2, jni::ref<android::view::inputmethod::InputMethodSession_EventCallback> p3) { return call_method<"dispatchGenericMotionEvent", void>(p1, p2, p3); }
	void appPrivateCommand(jni::ref<java::lang::String> p1, jni::ref<android::os::Bundle> p2) { return call_method<"appPrivateCommand", void>(p1, p2); }
	void toggleSoftInput(jint p1, jint p2) { return call_method<"toggleSoftInput", void>(p1, p2); }
	void updateCursorAnchorInfo(jni::ref<android::view::inputmethod::CursorAnchorInfo> p1) { return call_method<"updateCursorAnchorInfo", void>(p1); }

protected:

	InputMethodSession(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_INPUTMETHOD_INPUTMETHODSESSION
