// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_NET_IPSEC_IKE_TRANSPORTMODECHILDSESSIONPARAMS_BUILDER_FWD
#define SCAPIX_JAVA_API_ANDROID_NET_IPSEC_IKE_TRANSPORTMODECHILDSESSIONPARAMS_BUILDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::net::ipsec::ike { class TransportModeChildSessionParams_Builder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::net::ipsec::ike::TransportModeChildSessionParams_Builder>
{
	static constexpr fixed_string class_name = "android/net/ipsec/ike/TransportModeChildSessionParams$Builder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_IPSEC_IKE_TRANSPORTMODECHILDSESSIONPARAMS_BUILDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_NET_IPSEC_IKE_TRANSPORTMODECHILDSESSIONPARAMS_BUILDER)
#define SCAPIX_JAVA_API_ANDROID_NET_IPSEC_IKE_TRANSPORTMODECHILDSESSIONPARAMS_BUILDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/net/ipsec/ike/ChildSaProposal.h>
#include <scapix/java_api/android/net/ipsec/ike/IkeTrafficSelector.h>
#include <scapix/java_api/android/net/ipsec/ike/TransportModeChildSessionParams.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::net::ipsec::ike::TransportModeChildSessionParams_Builder : public jni::object_base<"android/net/ipsec/ike/TransportModeChildSessionParams$Builder",
	java::lang::Object>
{
public:

	static jni::ref<android::net::ipsec::ike::TransportModeChildSessionParams_Builder> new_object() { return base_::new_object(); }
	static jni::ref<android::net::ipsec::ike::TransportModeChildSessionParams_Builder> new_object(jni::ref<android::net::ipsec::ike::TransportModeChildSessionParams> childParams) { return base_::new_object(childParams); }
	jni::ref<android::net::ipsec::ike::TransportModeChildSessionParams_Builder> addChildSaProposal(jni::ref<android::net::ipsec::ike::ChildSaProposal> proposal) { return call_method<"addChildSaProposal", jni::ref<android::net::ipsec::ike::TransportModeChildSessionParams_Builder>>(proposal); }
	jni::ref<android::net::ipsec::ike::TransportModeChildSessionParams_Builder> addInboundTrafficSelectors(jni::ref<android::net::ipsec::ike::IkeTrafficSelector> trafficSelector) { return call_method<"addInboundTrafficSelectors", jni::ref<android::net::ipsec::ike::TransportModeChildSessionParams_Builder>>(trafficSelector); }
	jni::ref<android::net::ipsec::ike::TransportModeChildSessionParams_Builder> addOutboundTrafficSelectors(jni::ref<android::net::ipsec::ike::IkeTrafficSelector> trafficSelector) { return call_method<"addOutboundTrafficSelectors", jni::ref<android::net::ipsec::ike::TransportModeChildSessionParams_Builder>>(trafficSelector); }
	jni::ref<android::net::ipsec::ike::TransportModeChildSessionParams_Builder> setLifetimeSeconds(jint hardLifetimeSeconds, jint softLifetimeSeconds) { return call_method<"setLifetimeSeconds", jni::ref<android::net::ipsec::ike::TransportModeChildSessionParams_Builder>>(hardLifetimeSeconds, softLifetimeSeconds); }
	jni::ref<android::net::ipsec::ike::TransportModeChildSessionParams> build() { return call_method<"build", jni::ref<android::net::ipsec::ike::TransportModeChildSessionParams>>(); }

protected:

	TransportModeChildSessionParams_Builder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_IPSEC_IKE_TRANSPORTMODECHILDSESSIONPARAMS_BUILDER
