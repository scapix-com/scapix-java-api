// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_NET_IPSEC_IKE_IKETRAFFICSELECTOR_FWD
#define SCAPIX_JAVA_API_ANDROID_NET_IPSEC_IKE_IKETRAFFICSELECTOR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::net::ipsec::ike { class IkeTrafficSelector; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::net::ipsec::ike::IkeTrafficSelector>
{
	static constexpr fixed_string class_name = "android/net/ipsec/ike/IkeTrafficSelector";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_IPSEC_IKE_IKETRAFFICSELECTOR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_NET_IPSEC_IKE_IKETRAFFICSELECTOR)
#define SCAPIX_JAVA_API_ANDROID_NET_IPSEC_IKE_IKETRAFFICSELECTOR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/net/InetAddress.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::net::ipsec::ike::IkeTrafficSelector : public jni::object_base<"android/net/ipsec/ike/IkeTrafficSelector",
	java::lang::Object>
{
public:

	jint endPort() { return get_field<"endPort", jint>(); }
	jni::ref<java::net::InetAddress> endingAddress() { return get_field<"endingAddress", jni::ref<java::net::InetAddress>>(); }
	jint startPort() { return get_field<"startPort", jint>(); }
	jni::ref<java::net::InetAddress> startingAddress() { return get_field<"startingAddress", jni::ref<java::net::InetAddress>>(); }

	static jni::ref<android::net::ipsec::ike::IkeTrafficSelector> new_object(jint startPort, jint endPort, jni::ref<java::net::InetAddress> startingAddress, jni::ref<java::net::InetAddress> endingAddress) { return base_::new_object(startPort, endPort, startingAddress, endingAddress); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jboolean equals(jni::ref<java::lang::Object> o) { return call_method<"equals", jboolean>(o); }

protected:

	IkeTrafficSelector(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_IPSEC_IKE_IKETRAFFICSELECTOR
