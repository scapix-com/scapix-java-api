// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_NET_IPSEC_IKE_IKESESSIONCONFIGURATION_BUILDER_FWD
#define SCAPIX_JAVA_API_ANDROID_NET_IPSEC_IKE_IKESESSIONCONFIGURATION_BUILDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::net::ipsec::ike { class IkeSessionConfiguration_Builder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::net::ipsec::ike::IkeSessionConfiguration_Builder>
{
	static constexpr fixed_string class_name = "android/net/ipsec/ike/IkeSessionConfiguration$Builder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_IPSEC_IKE_IKESESSIONCONFIGURATION_BUILDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_NET_IPSEC_IKE_IKESESSIONCONFIGURATION_BUILDER)
#define SCAPIX_JAVA_API_ANDROID_NET_IPSEC_IKE_IKESESSIONCONFIGURATION_BUILDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/net/ipsec/ike/IkeSessionConfiguration.h>
#include <scapix/java_api/android/net/ipsec/ike/IkeSessionConnectionInfo.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::net::ipsec::ike::IkeSessionConfiguration_Builder : public jni::object_base<"android/net/ipsec/ike/IkeSessionConfiguration$Builder",
	java::lang::Object>
{
public:

	static jni::ref<android::net::ipsec::ike::IkeSessionConfiguration_Builder> new_object(jni::ref<android::net::ipsec::ike::IkeSessionConnectionInfo> ikeConnInfo) { return base_::new_object(ikeConnInfo); }
	jni::ref<android::net::ipsec::ike::IkeSessionConfiguration_Builder> addRemoteVendorId(jni::ref<jni::array<jbyte>> remoteVendorId) { return call_method<"addRemoteVendorId", jni::ref<android::net::ipsec::ike::IkeSessionConfiguration_Builder>>(remoteVendorId); }
	jni::ref<android::net::ipsec::ike::IkeSessionConfiguration_Builder> clearRemoteVendorIds() { return call_method<"clearRemoteVendorIds", jni::ref<android::net::ipsec::ike::IkeSessionConfiguration_Builder>>(); }
	jni::ref<android::net::ipsec::ike::IkeSessionConfiguration_Builder> setRemoteApplicationVersion(jni::ref<java::lang::String> remoteApplicationVersion) { return call_method<"setRemoteApplicationVersion", jni::ref<android::net::ipsec::ike::IkeSessionConfiguration_Builder>>(remoteApplicationVersion); }
	jni::ref<android::net::ipsec::ike::IkeSessionConfiguration_Builder> clearRemoteApplicationVersion() { return call_method<"clearRemoteApplicationVersion", jni::ref<android::net::ipsec::ike::IkeSessionConfiguration_Builder>>(); }
	jni::ref<android::net::ipsec::ike::IkeSessionConfiguration_Builder> addIkeExtension(jint extensionType) { return call_method<"addIkeExtension", jni::ref<android::net::ipsec::ike::IkeSessionConfiguration_Builder>>(extensionType); }
	jni::ref<android::net::ipsec::ike::IkeSessionConfiguration_Builder> clearIkeExtensions() { return call_method<"clearIkeExtensions", jni::ref<android::net::ipsec::ike::IkeSessionConfiguration_Builder>>(); }
	jni::ref<android::net::ipsec::ike::IkeSessionConfiguration> build() { return call_method<"build", jni::ref<android::net::ipsec::ike::IkeSessionConfiguration>>(); }

protected:

	IkeSessionConfiguration_Builder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_IPSEC_IKE_IKESESSIONCONFIGURATION_BUILDER
