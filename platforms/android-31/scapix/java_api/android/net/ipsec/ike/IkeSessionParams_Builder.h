// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_NET_IPSEC_IKE_IKESESSIONPARAMS_BUILDER_FWD
#define SCAPIX_JAVA_API_ANDROID_NET_IPSEC_IKE_IKESESSIONPARAMS_BUILDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::net::ipsec::ike { class IkeSessionParams_Builder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::net::ipsec::ike::IkeSessionParams_Builder>
{
	static constexpr fixed_string class_name = "android/net/ipsec/ike/IkeSessionParams$Builder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_IPSEC_IKE_IKESESSIONPARAMS_BUILDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_NET_IPSEC_IKE_IKESESSIONPARAMS_BUILDER)
#define SCAPIX_JAVA_API_ANDROID_NET_IPSEC_IKE_IKESESSIONPARAMS_BUILDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/net/Network.h>
#include <scapix/java_api/android/net/eap/EapSessionConfig.h>
#include <scapix/java_api/android/net/ipsec/ike/IkeIdentification.h>
#include <scapix/java_api/android/net/ipsec/ike/IkeSaProposal.h>
#include <scapix/java_api/android/net/ipsec/ike/IkeSessionParams.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/security/PrivateKey.h>
#include <scapix/java_api/java/security/cert/X509Certificate.h>
#include <scapix/java_api/java/util/List.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::net::ipsec::ike::IkeSessionParams_Builder : public jni::object_base<"android/net/ipsec/ike/IkeSessionParams$Builder",
	java::lang::Object>
{
public:

	static jni::ref<android::net::ipsec::ike::IkeSessionParams_Builder> new_object() { return base_::new_object(); }
	static jni::ref<android::net::ipsec::ike::IkeSessionParams_Builder> new_object(jni::ref<android::net::ipsec::ike::IkeSessionParams> ikeSessionParams) { return base_::new_object(ikeSessionParams); }
	jni::ref<android::net::ipsec::ike::IkeSessionParams_Builder> setServerHostname(jni::ref<java::lang::String> serverHostname) { return call_method<"setServerHostname", jni::ref<android::net::ipsec::ike::IkeSessionParams_Builder>>(serverHostname); }
	jni::ref<android::net::ipsec::ike::IkeSessionParams_Builder> setNetwork(jni::ref<android::net::Network> network) { return call_method<"setNetwork", jni::ref<android::net::ipsec::ike::IkeSessionParams_Builder>>(network); }
	jni::ref<android::net::ipsec::ike::IkeSessionParams_Builder> setLocalIdentification(jni::ref<android::net::ipsec::ike::IkeIdentification> identification) { return call_method<"setLocalIdentification", jni::ref<android::net::ipsec::ike::IkeSessionParams_Builder>>(identification); }
	jni::ref<android::net::ipsec::ike::IkeSessionParams_Builder> setRemoteIdentification(jni::ref<android::net::ipsec::ike::IkeIdentification> identification) { return call_method<"setRemoteIdentification", jni::ref<android::net::ipsec::ike::IkeSessionParams_Builder>>(identification); }
	jni::ref<android::net::ipsec::ike::IkeSessionParams_Builder> addIkeSaProposal(jni::ref<android::net::ipsec::ike::IkeSaProposal> proposal) { return call_method<"addIkeSaProposal", jni::ref<android::net::ipsec::ike::IkeSessionParams_Builder>>(proposal); }
	jni::ref<android::net::ipsec::ike::IkeSessionParams_Builder> setAuthPsk(jni::ref<jni::array<jbyte>> sharedKey) { return call_method<"setAuthPsk", jni::ref<android::net::ipsec::ike::IkeSessionParams_Builder>>(sharedKey); }
	jni::ref<android::net::ipsec::ike::IkeSessionParams_Builder> setAuthEap(jni::ref<java::security::cert::X509Certificate> serverCaCert, jni::ref<android::net::eap::EapSessionConfig> eapConfig) { return call_method<"setAuthEap", jni::ref<android::net::ipsec::ike::IkeSessionParams_Builder>>(serverCaCert, eapConfig); }
	jni::ref<android::net::ipsec::ike::IkeSessionParams_Builder> setAuthDigitalSignature(jni::ref<java::security::cert::X509Certificate> serverCaCert, jni::ref<java::security::cert::X509Certificate> clientEndCert, jni::ref<java::security::PrivateKey> clientPrivateKey) { return call_method<"setAuthDigitalSignature", jni::ref<android::net::ipsec::ike::IkeSessionParams_Builder>>(serverCaCert, clientEndCert, clientPrivateKey); }
	jni::ref<android::net::ipsec::ike::IkeSessionParams_Builder> setAuthDigitalSignature(jni::ref<java::security::cert::X509Certificate> serverCaCert, jni::ref<java::security::cert::X509Certificate> clientEndCert, jni::ref<java::util::List> clientIntermediateCerts, jni::ref<java::security::PrivateKey> clientPrivateKey) { return call_method<"setAuthDigitalSignature", jni::ref<android::net::ipsec::ike::IkeSessionParams_Builder>>(serverCaCert, clientEndCert, clientIntermediateCerts, clientPrivateKey); }
	jni::ref<android::net::ipsec::ike::IkeSessionParams_Builder> setLifetimeSeconds(jint hardLifetimeSeconds, jint softLifetimeSeconds) { return call_method<"setLifetimeSeconds", jni::ref<android::net::ipsec::ike::IkeSessionParams_Builder>>(hardLifetimeSeconds, softLifetimeSeconds); }
	jni::ref<android::net::ipsec::ike::IkeSessionParams_Builder> setDpdDelaySeconds(jint dpdDelaySeconds) { return call_method<"setDpdDelaySeconds", jni::ref<android::net::ipsec::ike::IkeSessionParams_Builder>>(dpdDelaySeconds); }
	jni::ref<android::net::ipsec::ike::IkeSessionParams_Builder> setNattKeepAliveDelaySeconds(jint nattKeepaliveDelaySeconds) { return call_method<"setNattKeepAliveDelaySeconds", jni::ref<android::net::ipsec::ike::IkeSessionParams_Builder>>(nattKeepaliveDelaySeconds); }
	jni::ref<android::net::ipsec::ike::IkeSessionParams_Builder> setRetransmissionTimeoutsMillis(jni::ref<jni::array<jint>> retransTimeoutMillisList) { return call_method<"setRetransmissionTimeoutsMillis", jni::ref<android::net::ipsec::ike::IkeSessionParams_Builder>>(retransTimeoutMillisList); }
	jni::ref<android::net::ipsec::ike::IkeSessionParams_Builder> addIkeOption(jint ikeOption) { return call_method<"addIkeOption", jni::ref<android::net::ipsec::ike::IkeSessionParams_Builder>>(ikeOption); }
	jni::ref<android::net::ipsec::ike::IkeSessionParams_Builder> removeIkeOption(jint ikeOption) { return call_method<"removeIkeOption", jni::ref<android::net::ipsec::ike::IkeSessionParams_Builder>>(ikeOption); }
	jni::ref<android::net::ipsec::ike::IkeSessionParams> build() { return call_method<"build", jni::ref<android::net::ipsec::ike::IkeSessionParams>>(); }

protected:

	IkeSessionParams_Builder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_IPSEC_IKE_IKESESSIONPARAMS_BUILDER
