// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_NET_HTTP_SSLCERTIFICATE_FWD
#define SCAPIX_JAVA_API_ANDROID_NET_HTTP_SSLCERTIFICATE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::net::http { class SslCertificate; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::net::http::SslCertificate>
{
	static constexpr fixed_string class_name = "android/net/http/SslCertificate";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_HTTP_SSLCERTIFICATE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_NET_HTTP_SSLCERTIFICATE)
#define SCAPIX_JAVA_API_ANDROID_NET_HTTP_SSLCERTIFICATE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/net/http/SslCertificate_DName.h>
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/security/cert/X509Certificate.h>
#include <scapix/java_api/java/util/Date.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::net::http::SslCertificate : public jni::object_base<"android/net/http/SslCertificate",
	java::lang::Object>
{
public:

	using DName = SslCertificate_DName;

	static jni::ref<android::net::http::SslCertificate> new_object(jni::ref<java::lang::String> issuedTo, jni::ref<java::lang::String> issuedBy, jni::ref<java::lang::String> validNotBefore, jni::ref<java::lang::String> validNotAfter) { return base_::new_object(issuedTo, issuedBy, validNotBefore, validNotAfter); }
	static jni::ref<android::net::http::SslCertificate> new_object(jni::ref<java::lang::String> issuedTo, jni::ref<java::lang::String> issuedBy, jni::ref<java::util::Date> validNotBefore, jni::ref<java::util::Date> validNotAfter) { return base_::new_object(issuedTo, issuedBy, validNotBefore, validNotAfter); }
	static jni::ref<android::net::http::SslCertificate> new_object(jni::ref<java::security::cert::X509Certificate> certificate) { return base_::new_object(certificate); }
	static jni::ref<android::os::Bundle> saveState(jni::ref<android::net::http::SslCertificate> certificate) { return call_static_method<"saveState", jni::ref<android::os::Bundle>>(certificate); }
	static jni::ref<android::net::http::SslCertificate> restoreState(jni::ref<android::os::Bundle> bundle) { return call_static_method<"restoreState", jni::ref<android::net::http::SslCertificate>>(bundle); }
	jni::ref<java::util::Date> getValidNotBeforeDate() { return call_method<"getValidNotBeforeDate", jni::ref<java::util::Date>>(); }
	jni::ref<java::lang::String> getValidNotBefore() { return call_method<"getValidNotBefore", jni::ref<java::lang::String>>(); }
	jni::ref<java::util::Date> getValidNotAfterDate() { return call_method<"getValidNotAfterDate", jni::ref<java::util::Date>>(); }
	jni::ref<java::lang::String> getValidNotAfter() { return call_method<"getValidNotAfter", jni::ref<java::lang::String>>(); }
	jni::ref<android::net::http::SslCertificate_DName> getIssuedTo() { return call_method<"getIssuedTo", jni::ref<android::net::http::SslCertificate_DName>>(); }
	jni::ref<android::net::http::SslCertificate_DName> getIssuedBy() { return call_method<"getIssuedBy", jni::ref<android::net::http::SslCertificate_DName>>(); }
	jni::ref<java::security::cert::X509Certificate> getX509Certificate() { return call_method<"getX509Certificate", jni::ref<java::security::cert::X509Certificate>>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	SslCertificate(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_HTTP_SSLCERTIFICATE
