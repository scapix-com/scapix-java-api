// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_NET_WIFI_P2P_WIFIP2PCONFIG_BUILDER_FWD
#define SCAPIX_JAVA_API_ANDROID_NET_WIFI_P2P_WIFIP2PCONFIG_BUILDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::net::wifi::p2p { class WifiP2pConfig_Builder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::net::wifi::p2p::WifiP2pConfig_Builder>
{
	static constexpr fixed_string class_name = "android/net/wifi/p2p/WifiP2pConfig$Builder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_WIFI_P2P_WIFIP2PCONFIG_BUILDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_NET_WIFI_P2P_WIFIP2PCONFIG_BUILDER)
#define SCAPIX_JAVA_API_ANDROID_NET_WIFI_P2P_WIFIP2PCONFIG_BUILDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/net/MacAddress.h>
#include <scapix/java_api/android/net/wifi/p2p/WifiP2pConfig.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::net::wifi::p2p::WifiP2pConfig_Builder : public jni::object_base<"android/net/wifi/p2p/WifiP2pConfig$Builder",
	java::lang::Object>
{
public:

	static jni::ref<android::net::wifi::p2p::WifiP2pConfig_Builder> new_object() { return base_::new_object(); }
	jni::ref<android::net::wifi::p2p::WifiP2pConfig_Builder> setDeviceAddress(jni::ref<android::net::MacAddress> deviceAddress) { return call_method<"setDeviceAddress", jni::ref<android::net::wifi::p2p::WifiP2pConfig_Builder>>(deviceAddress); }
	jni::ref<android::net::wifi::p2p::WifiP2pConfig_Builder> setNetworkName(jni::ref<java::lang::String> networkName) { return call_method<"setNetworkName", jni::ref<android::net::wifi::p2p::WifiP2pConfig_Builder>>(networkName); }
	jni::ref<android::net::wifi::p2p::WifiP2pConfig_Builder> setPassphrase(jni::ref<java::lang::String> passphrase) { return call_method<"setPassphrase", jni::ref<android::net::wifi::p2p::WifiP2pConfig_Builder>>(passphrase); }
	jni::ref<android::net::wifi::p2p::WifiP2pConfig_Builder> setGroupOperatingBand(jint band) { return call_method<"setGroupOperatingBand", jni::ref<android::net::wifi::p2p::WifiP2pConfig_Builder>>(band); }
	jni::ref<android::net::wifi::p2p::WifiP2pConfig_Builder> setGroupOperatingFrequency(jint frequency) { return call_method<"setGroupOperatingFrequency", jni::ref<android::net::wifi::p2p::WifiP2pConfig_Builder>>(frequency); }
	jni::ref<android::net::wifi::p2p::WifiP2pConfig_Builder> enablePersistentMode(jboolean persistent) { return call_method<"enablePersistentMode", jni::ref<android::net::wifi::p2p::WifiP2pConfig_Builder>>(persistent); }
	jni::ref<android::net::wifi::p2p::WifiP2pConfig> build() { return call_method<"build", jni::ref<android::net::wifi::p2p::WifiP2pConfig>>(); }

protected:

	WifiP2pConfig_Builder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_WIFI_P2P_WIFIP2PCONFIG_BUILDER
