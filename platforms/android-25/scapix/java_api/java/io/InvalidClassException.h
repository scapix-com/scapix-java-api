// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/io/ObjectStreamException.h>

#ifndef SCAPIX_JAVA_API_JAVA_IO_INVALIDCLASSEXCEPTION_FWD
#define SCAPIX_JAVA_API_JAVA_IO_INVALIDCLASSEXCEPTION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::io { class InvalidClassException; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::io::InvalidClassException>
{
	static constexpr fixed_string class_name = "java/io/InvalidClassException";
	using base_classes = std::tuple<scapix::java_api::java::io::ObjectStreamException>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_IO_INVALIDCLASSEXCEPTION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_IO_INVALIDCLASSEXCEPTION)
#define SCAPIX_JAVA_API_JAVA_IO_INVALIDCLASSEXCEPTION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::io::InvalidClassException : public jni::object_base<"java/io/InvalidClassException",
	java::io::ObjectStreamException>
{
public:

	jni::ref<java::lang::String> classname() { return get_field<"classname", jni::ref<java::lang::String>>(); }
	void classname(jni::ref<java::lang::String> v) { set_field<"classname", jni::ref<java::lang::String>>(v); }

	static jni::ref<java::io::InvalidClassException> new_object(jni::ref<java::lang::String> reason) { return base_::new_object(reason); }
	static jni::ref<java::io::InvalidClassException> new_object(jni::ref<java::lang::String> cname, jni::ref<java::lang::String> reason) { return base_::new_object(cname, reason); }
	jni::ref<java::lang::String> getMessage() { return call_method<"getMessage", jni::ref<java::lang::String>>(); }

protected:

	InvalidClassException(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_IO_INVALIDCLASSEXCEPTION
