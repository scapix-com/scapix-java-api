// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/io/Closeable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_UTIL_JSONREADER_FWD
#define SCAPIX_JAVA_API_ANDROID_UTIL_JSONREADER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::util { class JsonReader; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::util::JsonReader>
{
	static constexpr fixed_string class_name = "android/util/JsonReader";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::io::Closeable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_UTIL_JSONREADER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_UTIL_JSONREADER)
#define SCAPIX_JAVA_API_ANDROID_UTIL_JSONREADER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/util/JsonToken.h>
#include <scapix/java_api/java/io/Reader.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::util::JsonReader : public jni::object_base<"android/util/JsonReader",
	java::lang::Object,
	java::io::Closeable>
{
public:

	static jni::ref<android::util::JsonReader> new_object(jni::ref<java::io::Reader> in) { return base_::new_object(in); }
	void setLenient(jboolean lenient) { return call_method<"setLenient", void>(lenient); }
	jboolean isLenient() { return call_method<"isLenient", jboolean>(); }
	void beginArray() { return call_method<"beginArray", void>(); }
	void endArray() { return call_method<"endArray", void>(); }
	void beginObject() { return call_method<"beginObject", void>(); }
	void endObject() { return call_method<"endObject", void>(); }
	jboolean hasNext() { return call_method<"hasNext", jboolean>(); }
	jni::ref<android::util::JsonToken> peek() { return call_method<"peek", jni::ref<android::util::JsonToken>>(); }
	jni::ref<java::lang::String> nextName() { return call_method<"nextName", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> nextString() { return call_method<"nextString", jni::ref<java::lang::String>>(); }
	jboolean nextBoolean() { return call_method<"nextBoolean", jboolean>(); }
	void nextNull() { return call_method<"nextNull", void>(); }
	jdouble nextDouble() { return call_method<"nextDouble", jdouble>(); }
	jlong nextLong() { return call_method<"nextLong", jlong>(); }
	jint nextInt() { return call_method<"nextInt", jint>(); }
	void close() { return call_method<"close", void>(); }
	void skipValue() { return call_method<"skipValue", void>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	JsonReader(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_UTIL_JSONREADER
