// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_PRINT_PRINTJOBINFO_FWD
#define SCAPIX_JAVA_API_ANDROID_PRINT_PRINTJOBINFO_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::print { class PrintJobInfo; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::print::PrintJobInfo>
{
	static constexpr fixed_string class_name = "android/print/PrintJobInfo";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_PRINT_PRINTJOBINFO_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_PRINT_PRINTJOBINFO)
#define SCAPIX_JAVA_API_ANDROID_PRINT_PRINTJOBINFO

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/android/print/PageRange.h>
#include <scapix/java_api/android/print/PrintAttributes.h>
#include <scapix/java_api/android/print/PrintJobId.h>
#include <scapix/java_api/android/print/PrinterId.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/android/print/PrintJobInfo_Builder.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::print::PrintJobInfo : public jni::object_base<"android/print/PrintJobInfo",
	java::lang::Object,
	android::os::Parcelable>
{
public:

	using Builder = PrintJobInfo_Builder;

	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }
	static jint STATE_BLOCKED() { return get_static_field<"STATE_BLOCKED", jint>(); }
	static jint STATE_CANCELED() { return get_static_field<"STATE_CANCELED", jint>(); }
	static jint STATE_COMPLETED() { return get_static_field<"STATE_COMPLETED", jint>(); }
	static jint STATE_CREATED() { return get_static_field<"STATE_CREATED", jint>(); }
	static jint STATE_FAILED() { return get_static_field<"STATE_FAILED", jint>(); }
	static jint STATE_QUEUED() { return get_static_field<"STATE_QUEUED", jint>(); }
	static jint STATE_STARTED() { return get_static_field<"STATE_STARTED", jint>(); }

	jni::ref<android::print::PrintJobId> getId() { return call_method<"getId", jni::ref<android::print::PrintJobId>>(); }
	jni::ref<java::lang::String> getLabel() { return call_method<"getLabel", jni::ref<java::lang::String>>(); }
	jni::ref<android::print::PrinterId> getPrinterId() { return call_method<"getPrinterId", jni::ref<android::print::PrinterId>>(); }
	jint getState() { return call_method<"getState", jint>(); }
	jlong getCreationTime() { return call_method<"getCreationTime", jlong>(); }
	jint getCopies() { return call_method<"getCopies", jint>(); }
	jni::ref<jni::array<android::print::PageRange>> getPages() { return call_method<"getPages", jni::ref<jni::array<android::print::PageRange>>>(); }
	jni::ref<android::print::PrintAttributes> getAttributes() { return call_method<"getAttributes", jni::ref<android::print::PrintAttributes>>(); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	void writeToParcel(jni::ref<android::os::Parcel> parcel, jint flags) { return call_method<"writeToParcel", void>(parcel, flags); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	PrintJobInfo(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_PRINT_PRINTJOBINFO
