// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_CONTENT_CONTEXT_FWD
#define SCAPIX_JAVA_API_ANDROID_CONTENT_CONTEXT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::content { class Context; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::content::Context>
{
	static constexpr fixed_string class_name = "android/content/Context";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_CONTENT_CONTEXT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_CONTENT_CONTEXT)
#define SCAPIX_JAVA_API_ANDROID_CONTENT_CONTEXT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/BroadcastReceiver.h>
#include <scapix/java_api/android/content/ComponentCallbacks.h>
#include <scapix/java_api/android/content/ComponentName.h>
#include <scapix/java_api/android/content/ContentResolver.h>
#include <scapix/java_api/android/content/Intent.h>
#include <scapix/java_api/android/content/IntentFilter.h>
#include <scapix/java_api/android/content/IntentSender.h>
#include <scapix/java_api/android/content/ServiceConnection.h>
#include <scapix/java_api/android/content/SharedPreferences.h>
#include <scapix/java_api/android/content/pm/ApplicationInfo.h>
#include <scapix/java_api/android/content/pm/PackageManager.h>
#include <scapix/java_api/android/content/res/AssetManager.h>
#include <scapix/java_api/android/content/res/ColorStateList.h>
#include <scapix/java_api/android/content/res/Configuration.h>
#include <scapix/java_api/android/content/res/Resources.h>
#include <scapix/java_api/android/content/res/Resources_Theme.h>
#include <scapix/java_api/android/content/res/TypedArray.h>
#include <scapix/java_api/android/database/DatabaseErrorHandler.h>
#include <scapix/java_api/android/database/sqlite/SQLiteDatabase.h>
#include <scapix/java_api/android/database/sqlite/SQLiteDatabase_CursorFactory.h>
#include <scapix/java_api/android/graphics/Bitmap.h>
#include <scapix/java_api/android/graphics/drawable/Drawable.h>
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/android/os/Handler.h>
#include <scapix/java_api/android/os/Looper.h>
#include <scapix/java_api/android/os/UserHandle.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/view/Display.h>
#include <scapix/java_api/java/io/File.h>
#include <scapix/java_api/java/io/FileInputStream.h>
#include <scapix/java_api/java/io/FileOutputStream.h>
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/ClassLoader.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::content::Context : public jni::object_base<"android/content/Context",
	java::lang::Object>
{
public:

	static jni::ref<java::lang::String> ACCESSIBILITY_SERVICE() { return get_static_field<"ACCESSIBILITY_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ACCOUNT_SERVICE() { return get_static_field<"ACCOUNT_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ACTIVITY_SERVICE() { return get_static_field<"ACTIVITY_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ALARM_SERVICE() { return get_static_field<"ALARM_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> APPWIDGET_SERVICE() { return get_static_field<"APPWIDGET_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> APP_OPS_SERVICE() { return get_static_field<"APP_OPS_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> AUDIO_SERVICE() { return get_static_field<"AUDIO_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> BATTERY_SERVICE() { return get_static_field<"BATTERY_SERVICE", jni::ref<java::lang::String>>(); }
	static jint BIND_ABOVE_CLIENT() { return get_static_field<"BIND_ABOVE_CLIENT", jint>(); }
	static jint BIND_ADJUST_WITH_ACTIVITY() { return get_static_field<"BIND_ADJUST_WITH_ACTIVITY", jint>(); }
	static jint BIND_ALLOW_OOM_MANAGEMENT() { return get_static_field<"BIND_ALLOW_OOM_MANAGEMENT", jint>(); }
	static jint BIND_AUTO_CREATE() { return get_static_field<"BIND_AUTO_CREATE", jint>(); }
	static jint BIND_DEBUG_UNBIND() { return get_static_field<"BIND_DEBUG_UNBIND", jint>(); }
	static jint BIND_EXTERNAL_SERVICE() { return get_static_field<"BIND_EXTERNAL_SERVICE", jint>(); }
	static jint BIND_IMPORTANT() { return get_static_field<"BIND_IMPORTANT", jint>(); }
	static jint BIND_NOT_FOREGROUND() { return get_static_field<"BIND_NOT_FOREGROUND", jint>(); }
	static jint BIND_WAIVE_PRIORITY() { return get_static_field<"BIND_WAIVE_PRIORITY", jint>(); }
	static jni::ref<java::lang::String> BLUETOOTH_SERVICE() { return get_static_field<"BLUETOOTH_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> CAMERA_SERVICE() { return get_static_field<"CAMERA_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> CAPTIONING_SERVICE() { return get_static_field<"CAPTIONING_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> CARRIER_CONFIG_SERVICE() { return get_static_field<"CARRIER_CONFIG_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> CLIPBOARD_SERVICE() { return get_static_field<"CLIPBOARD_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> CONNECTIVITY_SERVICE() { return get_static_field<"CONNECTIVITY_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> CONSUMER_IR_SERVICE() { return get_static_field<"CONSUMER_IR_SERVICE", jni::ref<java::lang::String>>(); }
	static jint CONTEXT_IGNORE_SECURITY() { return get_static_field<"CONTEXT_IGNORE_SECURITY", jint>(); }
	static jint CONTEXT_INCLUDE_CODE() { return get_static_field<"CONTEXT_INCLUDE_CODE", jint>(); }
	static jint CONTEXT_RESTRICTED() { return get_static_field<"CONTEXT_RESTRICTED", jint>(); }
	static jni::ref<java::lang::String> DEVICE_POLICY_SERVICE() { return get_static_field<"DEVICE_POLICY_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> DISPLAY_SERVICE() { return get_static_field<"DISPLAY_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> DOWNLOAD_SERVICE() { return get_static_field<"DOWNLOAD_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> DROPBOX_SERVICE() { return get_static_field<"DROPBOX_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> FINGERPRINT_SERVICE() { return get_static_field<"FINGERPRINT_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> HARDWARE_PROPERTIES_SERVICE() { return get_static_field<"HARDWARE_PROPERTIES_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> INPUT_METHOD_SERVICE() { return get_static_field<"INPUT_METHOD_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> INPUT_SERVICE() { return get_static_field<"INPUT_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> JOB_SCHEDULER_SERVICE() { return get_static_field<"JOB_SCHEDULER_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> KEYGUARD_SERVICE() { return get_static_field<"KEYGUARD_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> LAUNCHER_APPS_SERVICE() { return get_static_field<"LAUNCHER_APPS_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> LAYOUT_INFLATER_SERVICE() { return get_static_field<"LAYOUT_INFLATER_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> LOCATION_SERVICE() { return get_static_field<"LOCATION_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MEDIA_PROJECTION_SERVICE() { return get_static_field<"MEDIA_PROJECTION_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MEDIA_ROUTER_SERVICE() { return get_static_field<"MEDIA_ROUTER_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MEDIA_SESSION_SERVICE() { return get_static_field<"MEDIA_SESSION_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MIDI_SERVICE() { return get_static_field<"MIDI_SERVICE", jni::ref<java::lang::String>>(); }
	static jint MODE_APPEND() { return get_static_field<"MODE_APPEND", jint>(); }
	static jint MODE_ENABLE_WRITE_AHEAD_LOGGING() { return get_static_field<"MODE_ENABLE_WRITE_AHEAD_LOGGING", jint>(); }
	static jint MODE_MULTI_PROCESS() { return get_static_field<"MODE_MULTI_PROCESS", jint>(); }
	static jint MODE_NO_LOCALIZED_COLLATORS() { return get_static_field<"MODE_NO_LOCALIZED_COLLATORS", jint>(); }
	static jint MODE_PRIVATE() { return get_static_field<"MODE_PRIVATE", jint>(); }
	static jint MODE_WORLD_READABLE() { return get_static_field<"MODE_WORLD_READABLE", jint>(); }
	static jint MODE_WORLD_WRITEABLE() { return get_static_field<"MODE_WORLD_WRITEABLE", jint>(); }
	static jni::ref<java::lang::String> NETWORK_STATS_SERVICE() { return get_static_field<"NETWORK_STATS_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> NFC_SERVICE() { return get_static_field<"NFC_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> NOTIFICATION_SERVICE() { return get_static_field<"NOTIFICATION_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> NSD_SERVICE() { return get_static_field<"NSD_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> POWER_SERVICE() { return get_static_field<"POWER_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> PRINT_SERVICE() { return get_static_field<"PRINT_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> RESTRICTIONS_SERVICE() { return get_static_field<"RESTRICTIONS_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> SEARCH_SERVICE() { return get_static_field<"SEARCH_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> SENSOR_SERVICE() { return get_static_field<"SENSOR_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> SHORTCUT_SERVICE() { return get_static_field<"SHORTCUT_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> STORAGE_SERVICE() { return get_static_field<"STORAGE_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> SYSTEM_HEALTH_SERVICE() { return get_static_field<"SYSTEM_HEALTH_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> TELECOM_SERVICE() { return get_static_field<"TELECOM_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> TELEPHONY_SERVICE() { return get_static_field<"TELEPHONY_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> TELEPHONY_SUBSCRIPTION_SERVICE() { return get_static_field<"TELEPHONY_SUBSCRIPTION_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> TEXT_SERVICES_MANAGER_SERVICE() { return get_static_field<"TEXT_SERVICES_MANAGER_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> TV_INPUT_SERVICE() { return get_static_field<"TV_INPUT_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> UI_MODE_SERVICE() { return get_static_field<"UI_MODE_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> USAGE_STATS_SERVICE() { return get_static_field<"USAGE_STATS_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> USB_SERVICE() { return get_static_field<"USB_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> USER_SERVICE() { return get_static_field<"USER_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> VIBRATOR_SERVICE() { return get_static_field<"VIBRATOR_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> WALLPAPER_SERVICE() { return get_static_field<"WALLPAPER_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> WIFI_P2P_SERVICE() { return get_static_field<"WIFI_P2P_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> WIFI_SERVICE() { return get_static_field<"WIFI_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> WINDOW_SERVICE() { return get_static_field<"WINDOW_SERVICE", jni::ref<java::lang::String>>(); }

	static jni::ref<android::content::Context> new_object() { return base_::new_object(); }
	jni::ref<android::content::res::AssetManager> getAssets() { return call_method<"getAssets", jni::ref<android::content::res::AssetManager>>(); }
	jni::ref<android::content::res::Resources> getResources() { return call_method<"getResources", jni::ref<android::content::res::Resources>>(); }
	jni::ref<android::content::pm::PackageManager> getPackageManager() { return call_method<"getPackageManager", jni::ref<android::content::pm::PackageManager>>(); }
	jni::ref<android::content::ContentResolver> getContentResolver() { return call_method<"getContentResolver", jni::ref<android::content::ContentResolver>>(); }
	jni::ref<android::os::Looper> getMainLooper() { return call_method<"getMainLooper", jni::ref<android::os::Looper>>(); }
	jni::ref<android::content::Context> getApplicationContext() { return call_method<"getApplicationContext", jni::ref<android::content::Context>>(); }
	void registerComponentCallbacks(jni::ref<android::content::ComponentCallbacks> callback) { return call_method<"registerComponentCallbacks", void>(callback); }
	void unregisterComponentCallbacks(jni::ref<android::content::ComponentCallbacks> callback) { return call_method<"unregisterComponentCallbacks", void>(callback); }
	jni::ref<java::lang::CharSequence> getText(jint resId) { return call_method<"getText", jni::ref<java::lang::CharSequence>>(resId); }
	jni::ref<java::lang::String> getString(jint resId) { return call_method<"getString", jni::ref<java::lang::String>>(resId); }
	jni::ref<java::lang::String> getString(jint resId, jni::ref<jni::array<java::lang::Object>> formatArgs) { return call_method<"getString", jni::ref<java::lang::String>>(resId, formatArgs); }
	jint getColor(jint id) { return call_method<"getColor", jint>(id); }
	jni::ref<android::graphics::drawable::Drawable> getDrawable(jint id) { return call_method<"getDrawable", jni::ref<android::graphics::drawable::Drawable>>(id); }
	jni::ref<android::content::res::ColorStateList> getColorStateList(jint id) { return call_method<"getColorStateList", jni::ref<android::content::res::ColorStateList>>(id); }
	void setTheme(jint p1) { return call_method<"setTheme", void>(p1); }
	jni::ref<android::content::res::Resources_Theme> getTheme() { return call_method<"getTheme", jni::ref<android::content::res::Resources_Theme>>(); }
	jni::ref<android::content::res::TypedArray> obtainStyledAttributes(jni::ref<jni::array<jint>> attrs) { return call_method<"obtainStyledAttributes", jni::ref<android::content::res::TypedArray>>(attrs); }
	jni::ref<android::content::res::TypedArray> obtainStyledAttributes(jint resid, jni::ref<jni::array<jint>> attrs) { return call_method<"obtainStyledAttributes", jni::ref<android::content::res::TypedArray>>(resid, attrs); }
	jni::ref<android::content::res::TypedArray> obtainStyledAttributes(jni::ref<android::util::AttributeSet> set, jni::ref<jni::array<jint>> attrs) { return call_method<"obtainStyledAttributes", jni::ref<android::content::res::TypedArray>>(set, attrs); }
	jni::ref<android::content::res::TypedArray> obtainStyledAttributes(jni::ref<android::util::AttributeSet> set, jni::ref<jni::array<jint>> attrs, jint defStyleAttr, jint defStyleRes) { return call_method<"obtainStyledAttributes", jni::ref<android::content::res::TypedArray>>(set, attrs, defStyleAttr, defStyleRes); }
	jni::ref<java::lang::ClassLoader> getClassLoader() { return call_method<"getClassLoader", jni::ref<java::lang::ClassLoader>>(); }
	jni::ref<java::lang::String> getPackageName() { return call_method<"getPackageName", jni::ref<java::lang::String>>(); }
	jni::ref<android::content::pm::ApplicationInfo> getApplicationInfo() { return call_method<"getApplicationInfo", jni::ref<android::content::pm::ApplicationInfo>>(); }
	jni::ref<java::lang::String> getPackageResourcePath() { return call_method<"getPackageResourcePath", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getPackageCodePath() { return call_method<"getPackageCodePath", jni::ref<java::lang::String>>(); }
	jni::ref<android::content::SharedPreferences> getSharedPreferences(jni::ref<java::lang::String> p1, jint p2) { return call_method<"getSharedPreferences", jni::ref<android::content::SharedPreferences>>(p1, p2); }
	jboolean moveSharedPreferencesFrom(jni::ref<android::content::Context> p1, jni::ref<java::lang::String> p2) { return call_method<"moveSharedPreferencesFrom", jboolean>(p1, p2); }
	jboolean deleteSharedPreferences(jni::ref<java::lang::String> p1) { return call_method<"deleteSharedPreferences", jboolean>(p1); }
	jni::ref<java::io::FileInputStream> openFileInput(jni::ref<java::lang::String> p1) { return call_method<"openFileInput", jni::ref<java::io::FileInputStream>>(p1); }
	jni::ref<java::io::FileOutputStream> openFileOutput(jni::ref<java::lang::String> p1, jint p2) { return call_method<"openFileOutput", jni::ref<java::io::FileOutputStream>>(p1, p2); }
	jboolean deleteFile(jni::ref<java::lang::String> p1) { return call_method<"deleteFile", jboolean>(p1); }
	jni::ref<java::io::File> getFileStreamPath(jni::ref<java::lang::String> p1) { return call_method<"getFileStreamPath", jni::ref<java::io::File>>(p1); }
	jni::ref<java::io::File> getDataDir() { return call_method<"getDataDir", jni::ref<java::io::File>>(); }
	jni::ref<java::io::File> getFilesDir() { return call_method<"getFilesDir", jni::ref<java::io::File>>(); }
	jni::ref<java::io::File> getNoBackupFilesDir() { return call_method<"getNoBackupFilesDir", jni::ref<java::io::File>>(); }
	jni::ref<java::io::File> getExternalFilesDir(jni::ref<java::lang::String> p1) { return call_method<"getExternalFilesDir", jni::ref<java::io::File>>(p1); }
	jni::ref<jni::array<java::io::File>> getExternalFilesDirs(jni::ref<java::lang::String> p1) { return call_method<"getExternalFilesDirs", jni::ref<jni::array<java::io::File>>>(p1); }
	jni::ref<java::io::File> getObbDir() { return call_method<"getObbDir", jni::ref<java::io::File>>(); }
	jni::ref<jni::array<java::io::File>> getObbDirs() { return call_method<"getObbDirs", jni::ref<jni::array<java::io::File>>>(); }
	jni::ref<java::io::File> getCacheDir() { return call_method<"getCacheDir", jni::ref<java::io::File>>(); }
	jni::ref<java::io::File> getCodeCacheDir() { return call_method<"getCodeCacheDir", jni::ref<java::io::File>>(); }
	jni::ref<java::io::File> getExternalCacheDir() { return call_method<"getExternalCacheDir", jni::ref<java::io::File>>(); }
	jni::ref<jni::array<java::io::File>> getExternalCacheDirs() { return call_method<"getExternalCacheDirs", jni::ref<jni::array<java::io::File>>>(); }
	jni::ref<jni::array<java::io::File>> getExternalMediaDirs() { return call_method<"getExternalMediaDirs", jni::ref<jni::array<java::io::File>>>(); }
	jni::ref<jni::array<java::lang::String>> fileList() { return call_method<"fileList", jni::ref<jni::array<java::lang::String>>>(); }
	jni::ref<java::io::File> getDir(jni::ref<java::lang::String> p1, jint p2) { return call_method<"getDir", jni::ref<java::io::File>>(p1, p2); }
	jni::ref<android::database::sqlite::SQLiteDatabase> openOrCreateDatabase(jni::ref<java::lang::String> p1, jint p2, jni::ref<android::database::sqlite::SQLiteDatabase_CursorFactory> p3) { return call_method<"openOrCreateDatabase", jni::ref<android::database::sqlite::SQLiteDatabase>>(p1, p2, p3); }
	jni::ref<android::database::sqlite::SQLiteDatabase> openOrCreateDatabase(jni::ref<java::lang::String> p1, jint p2, jni::ref<android::database::sqlite::SQLiteDatabase_CursorFactory> p3, jni::ref<android::database::DatabaseErrorHandler> p4) { return call_method<"openOrCreateDatabase", jni::ref<android::database::sqlite::SQLiteDatabase>>(p1, p2, p3, p4); }
	jboolean moveDatabaseFrom(jni::ref<android::content::Context> p1, jni::ref<java::lang::String> p2) { return call_method<"moveDatabaseFrom", jboolean>(p1, p2); }
	jboolean deleteDatabase(jni::ref<java::lang::String> p1) { return call_method<"deleteDatabase", jboolean>(p1); }
	jni::ref<java::io::File> getDatabasePath(jni::ref<java::lang::String> p1) { return call_method<"getDatabasePath", jni::ref<java::io::File>>(p1); }
	jni::ref<jni::array<java::lang::String>> databaseList() { return call_method<"databaseList", jni::ref<jni::array<java::lang::String>>>(); }
	jni::ref<android::graphics::drawable::Drawable> getWallpaper() { return call_method<"getWallpaper", jni::ref<android::graphics::drawable::Drawable>>(); }
	jni::ref<android::graphics::drawable::Drawable> peekWallpaper() { return call_method<"peekWallpaper", jni::ref<android::graphics::drawable::Drawable>>(); }
	jint getWallpaperDesiredMinimumWidth() { return call_method<"getWallpaperDesiredMinimumWidth", jint>(); }
	jint getWallpaperDesiredMinimumHeight() { return call_method<"getWallpaperDesiredMinimumHeight", jint>(); }
	void setWallpaper(jni::ref<android::graphics::Bitmap> p1) { return call_method<"setWallpaper", void>(p1); }
	void setWallpaper(jni::ref<java::io::InputStream> p1) { return call_method<"setWallpaper", void>(p1); }
	void clearWallpaper() { return call_method<"clearWallpaper", void>(); }
	void startActivity(jni::ref<android::content::Intent> p1) { return call_method<"startActivity", void>(p1); }
	void startActivity(jni::ref<android::content::Intent> p1, jni::ref<android::os::Bundle> p2) { return call_method<"startActivity", void>(p1, p2); }
	void startActivities(jni::ref<jni::array<android::content::Intent>> p1) { return call_method<"startActivities", void>(p1); }
	void startActivities(jni::ref<jni::array<android::content::Intent>> p1, jni::ref<android::os::Bundle> p2) { return call_method<"startActivities", void>(p1, p2); }
	void startIntentSender(jni::ref<android::content::IntentSender> p1, jni::ref<android::content::Intent> p2, jint p3, jint p4, jint p5) { return call_method<"startIntentSender", void>(p1, p2, p3, p4, p5); }
	void startIntentSender(jni::ref<android::content::IntentSender> p1, jni::ref<android::content::Intent> p2, jint p3, jint p4, jint p5, jni::ref<android::os::Bundle> p6) { return call_method<"startIntentSender", void>(p1, p2, p3, p4, p5, p6); }
	void sendBroadcast(jni::ref<android::content::Intent> p1) { return call_method<"sendBroadcast", void>(p1); }
	void sendBroadcast(jni::ref<android::content::Intent> p1, jni::ref<java::lang::String> p2) { return call_method<"sendBroadcast", void>(p1, p2); }
	void sendOrderedBroadcast(jni::ref<android::content::Intent> p1, jni::ref<java::lang::String> p2) { return call_method<"sendOrderedBroadcast", void>(p1, p2); }
	void sendOrderedBroadcast(jni::ref<android::content::Intent> p1, jni::ref<java::lang::String> p2, jni::ref<android::content::BroadcastReceiver> p3, jni::ref<android::os::Handler> p4, jint p5, jni::ref<java::lang::String> p6, jni::ref<android::os::Bundle> p7) { return call_method<"sendOrderedBroadcast", void>(p1, p2, p3, p4, p5, p6, p7); }
	void sendBroadcastAsUser(jni::ref<android::content::Intent> p1, jni::ref<android::os::UserHandle> p2) { return call_method<"sendBroadcastAsUser", void>(p1, p2); }
	void sendBroadcastAsUser(jni::ref<android::content::Intent> p1, jni::ref<android::os::UserHandle> p2, jni::ref<java::lang::String> p3) { return call_method<"sendBroadcastAsUser", void>(p1, p2, p3); }
	void sendOrderedBroadcastAsUser(jni::ref<android::content::Intent> p1, jni::ref<android::os::UserHandle> p2, jni::ref<java::lang::String> p3, jni::ref<android::content::BroadcastReceiver> p4, jni::ref<android::os::Handler> p5, jint p6, jni::ref<java::lang::String> p7, jni::ref<android::os::Bundle> p8) { return call_method<"sendOrderedBroadcastAsUser", void>(p1, p2, p3, p4, p5, p6, p7, p8); }
	void sendStickyBroadcast(jni::ref<android::content::Intent> p1) { return call_method<"sendStickyBroadcast", void>(p1); }
	void sendStickyOrderedBroadcast(jni::ref<android::content::Intent> p1, jni::ref<android::content::BroadcastReceiver> p2, jni::ref<android::os::Handler> p3, jint p4, jni::ref<java::lang::String> p5, jni::ref<android::os::Bundle> p6) { return call_method<"sendStickyOrderedBroadcast", void>(p1, p2, p3, p4, p5, p6); }
	void removeStickyBroadcast(jni::ref<android::content::Intent> p1) { return call_method<"removeStickyBroadcast", void>(p1); }
	void sendStickyBroadcastAsUser(jni::ref<android::content::Intent> p1, jni::ref<android::os::UserHandle> p2) { return call_method<"sendStickyBroadcastAsUser", void>(p1, p2); }
	void sendStickyOrderedBroadcastAsUser(jni::ref<android::content::Intent> p1, jni::ref<android::os::UserHandle> p2, jni::ref<android::content::BroadcastReceiver> p3, jni::ref<android::os::Handler> p4, jint p5, jni::ref<java::lang::String> p6, jni::ref<android::os::Bundle> p7) { return call_method<"sendStickyOrderedBroadcastAsUser", void>(p1, p2, p3, p4, p5, p6, p7); }
	void removeStickyBroadcastAsUser(jni::ref<android::content::Intent> p1, jni::ref<android::os::UserHandle> p2) { return call_method<"removeStickyBroadcastAsUser", void>(p1, p2); }
	jni::ref<android::content::Intent> registerReceiver(jni::ref<android::content::BroadcastReceiver> p1, jni::ref<android::content::IntentFilter> p2) { return call_method<"registerReceiver", jni::ref<android::content::Intent>>(p1, p2); }
	jni::ref<android::content::Intent> registerReceiver(jni::ref<android::content::BroadcastReceiver> p1, jni::ref<android::content::IntentFilter> p2, jni::ref<java::lang::String> p3, jni::ref<android::os::Handler> p4) { return call_method<"registerReceiver", jni::ref<android::content::Intent>>(p1, p2, p3, p4); }
	void unregisterReceiver(jni::ref<android::content::BroadcastReceiver> p1) { return call_method<"unregisterReceiver", void>(p1); }
	jni::ref<android::content::ComponentName> startService(jni::ref<android::content::Intent> p1) { return call_method<"startService", jni::ref<android::content::ComponentName>>(p1); }
	jboolean stopService(jni::ref<android::content::Intent> p1) { return call_method<"stopService", jboolean>(p1); }
	jboolean bindService(jni::ref<android::content::Intent> p1, jni::ref<android::content::ServiceConnection> p2, jint p3) { return call_method<"bindService", jboolean>(p1, p2, p3); }
	void unbindService(jni::ref<android::content::ServiceConnection> p1) { return call_method<"unbindService", void>(p1); }
	jboolean startInstrumentation(jni::ref<android::content::ComponentName> p1, jni::ref<java::lang::String> p2, jni::ref<android::os::Bundle> p3) { return call_method<"startInstrumentation", jboolean>(p1, p2, p3); }
	jni::ref<java::lang::Object> getSystemService(jni::ref<java::lang::String> p1) { return call_method<"getSystemService", jni::ref<java::lang::Object>>(p1); }
	jni::ref<java::lang::Object> getSystemService(jni::ref<java::lang::Class> serviceClass) { return call_method<"getSystemService", jni::ref<java::lang::Object>>(serviceClass); }
	jni::ref<java::lang::String> getSystemServiceName(jni::ref<java::lang::Class> p1) { return call_method<"getSystemServiceName", jni::ref<java::lang::String>>(p1); }
	jint checkPermission(jni::ref<java::lang::String> p1, jint p2, jint p3) { return call_method<"checkPermission", jint>(p1, p2, p3); }
	jint checkCallingPermission(jni::ref<java::lang::String> p1) { return call_method<"checkCallingPermission", jint>(p1); }
	jint checkCallingOrSelfPermission(jni::ref<java::lang::String> p1) { return call_method<"checkCallingOrSelfPermission", jint>(p1); }
	jint checkSelfPermission(jni::ref<java::lang::String> p1) { return call_method<"checkSelfPermission", jint>(p1); }
	void enforcePermission(jni::ref<java::lang::String> p1, jint p2, jint p3, jni::ref<java::lang::String> p4) { return call_method<"enforcePermission", void>(p1, p2, p3, p4); }
	void enforceCallingPermission(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return call_method<"enforceCallingPermission", void>(p1, p2); }
	void enforceCallingOrSelfPermission(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return call_method<"enforceCallingOrSelfPermission", void>(p1, p2); }
	void grantUriPermission(jni::ref<java::lang::String> p1, jni::ref<android::net::Uri> p2, jint p3) { return call_method<"grantUriPermission", void>(p1, p2, p3); }
	void revokeUriPermission(jni::ref<android::net::Uri> p1, jint p2) { return call_method<"revokeUriPermission", void>(p1, p2); }
	jint checkUriPermission(jni::ref<android::net::Uri> p1, jint p2, jint p3, jint p4) { return call_method<"checkUriPermission", jint>(p1, p2, p3, p4); }
	jint checkCallingUriPermission(jni::ref<android::net::Uri> p1, jint p2) { return call_method<"checkCallingUriPermission", jint>(p1, p2); }
	jint checkCallingOrSelfUriPermission(jni::ref<android::net::Uri> p1, jint p2) { return call_method<"checkCallingOrSelfUriPermission", jint>(p1, p2); }
	jint checkUriPermission(jni::ref<android::net::Uri> p1, jni::ref<java::lang::String> p2, jni::ref<java::lang::String> p3, jint p4, jint p5, jint p6) { return call_method<"checkUriPermission", jint>(p1, p2, p3, p4, p5, p6); }
	void enforceUriPermission(jni::ref<android::net::Uri> p1, jint p2, jint p3, jint p4, jni::ref<java::lang::String> p5) { return call_method<"enforceUriPermission", void>(p1, p2, p3, p4, p5); }
	void enforceCallingUriPermission(jni::ref<android::net::Uri> p1, jint p2, jni::ref<java::lang::String> p3) { return call_method<"enforceCallingUriPermission", void>(p1, p2, p3); }
	void enforceCallingOrSelfUriPermission(jni::ref<android::net::Uri> p1, jint p2, jni::ref<java::lang::String> p3) { return call_method<"enforceCallingOrSelfUriPermission", void>(p1, p2, p3); }
	void enforceUriPermission(jni::ref<android::net::Uri> p1, jni::ref<java::lang::String> p2, jni::ref<java::lang::String> p3, jint p4, jint p5, jint p6, jni::ref<java::lang::String> p7) { return call_method<"enforceUriPermission", void>(p1, p2, p3, p4, p5, p6, p7); }
	jni::ref<android::content::Context> createPackageContext(jni::ref<java::lang::String> p1, jint p2) { return call_method<"createPackageContext", jni::ref<android::content::Context>>(p1, p2); }
	jni::ref<android::content::Context> createConfigurationContext(jni::ref<android::content::res::Configuration> p1) { return call_method<"createConfigurationContext", jni::ref<android::content::Context>>(p1); }
	jni::ref<android::content::Context> createDisplayContext(jni::ref<android::view::Display> p1) { return call_method<"createDisplayContext", jni::ref<android::content::Context>>(p1); }
	jni::ref<android::content::Context> createDeviceProtectedStorageContext() { return call_method<"createDeviceProtectedStorageContext", jni::ref<android::content::Context>>(); }
	jboolean isRestricted() { return call_method<"isRestricted", jboolean>(); }
	jboolean isDeviceProtectedStorage() { return call_method<"isDeviceProtectedStorage", jboolean>(); }

protected:

	Context(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_CONTENT_CONTEXT
