// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/widget/FrameLayout.h>

#ifndef SCAPIX_JAVA_API_ANDROID_WIDGET_DATEPICKER_FWD
#define SCAPIX_JAVA_API_ANDROID_WIDGET_DATEPICKER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::widget { class DatePicker; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::widget::DatePicker>
{
	static constexpr fixed_string class_name = "android/widget/DatePicker";
	using base_classes = std::tuple<scapix::java_api::android::widget::FrameLayout>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_WIDGET_DATEPICKER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_WIDGET_DATEPICKER)
#define SCAPIX_JAVA_API_ANDROID_WIDGET_DATEPICKER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/widget/CalendarView.h>
#include <scapix/java_api/android/widget/DatePicker_OnDateChangedListener.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::widget::DatePicker : public jni::object_base<"android/widget/DatePicker",
	android::widget::FrameLayout>
{
public:

	using OnDateChangedListener = DatePicker_OnDateChangedListener;

	static jni::ref<android::widget::DatePicker> new_object(jni::ref<android::content::Context> context) { return base_::new_object(context); }
	static jni::ref<android::widget::DatePicker> new_object(jni::ref<android::content::Context> context, jni::ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
	static jni::ref<android::widget::DatePicker> new_object(jni::ref<android::content::Context> context, jni::ref<android::util::AttributeSet> attrs, jint defStyleAttr) { return base_::new_object(context, attrs, defStyleAttr); }
	static jni::ref<android::widget::DatePicker> new_object(jni::ref<android::content::Context> context, jni::ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes) { return base_::new_object(context, attrs, defStyleAttr, defStyleRes); }
	void init(jint year, jint monthOfYear, jint dayOfMonth, jni::ref<android::widget::DatePicker_OnDateChangedListener> onDateChangedListener) { return call_method<"init", void>(year, monthOfYear, dayOfMonth, onDateChangedListener); }
	void updateDate(jint year, jint month, jint dayOfMonth) { return call_method<"updateDate", void>(year, month, dayOfMonth); }
	jint getYear() { return call_method<"getYear", jint>(); }
	jint getMonth() { return call_method<"getMonth", jint>(); }
	jint getDayOfMonth() { return call_method<"getDayOfMonth", jint>(); }
	jlong getMinDate() { return call_method<"getMinDate", jlong>(); }
	void setMinDate(jlong minDate) { return call_method<"setMinDate", void>(minDate); }
	jlong getMaxDate() { return call_method<"getMaxDate", jlong>(); }
	void setMaxDate(jlong maxDate) { return call_method<"setMaxDate", void>(maxDate); }
	void setEnabled(jboolean enabled) { return call_method<"setEnabled", void>(enabled); }
	jboolean isEnabled() { return call_method<"isEnabled", jboolean>(); }
	jni::ref<java::lang::CharSequence> getAccessibilityClassName() { return call_method<"getAccessibilityClassName", jni::ref<java::lang::CharSequence>>(); }
	void setFirstDayOfWeek(jint firstDayOfWeek) { return call_method<"setFirstDayOfWeek", void>(firstDayOfWeek); }
	jint getFirstDayOfWeek() { return call_method<"getFirstDayOfWeek", jint>(); }
	jboolean getCalendarViewShown() { return call_method<"getCalendarViewShown", jboolean>(); }
	jni::ref<android::widget::CalendarView> getCalendarView() { return call_method<"getCalendarView", jni::ref<android::widget::CalendarView>>(); }
	void setCalendarViewShown(jboolean shown) { return call_method<"setCalendarViewShown", void>(shown); }
	jboolean getSpinnersShown() { return call_method<"getSpinnersShown", jboolean>(); }
	void setSpinnersShown(jboolean shown) { return call_method<"setSpinnersShown", void>(shown); }

protected:

	DatePicker(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_WIDGET_DATEPICKER
