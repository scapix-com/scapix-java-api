// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_PRINTSERVICE_PRINTJOB_FWD
#define SCAPIX_JAVA_API_ANDROID_PRINTSERVICE_PRINTJOB_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::printservice { class PrintJob; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::printservice::PrintJob>
{
	static constexpr fixed_string class_name = "android/printservice/PrintJob";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_PRINTSERVICE_PRINTJOB_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_PRINTSERVICE_PRINTJOB)
#define SCAPIX_JAVA_API_ANDROID_PRINTSERVICE_PRINTJOB

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/print/PrintJobId.h>
#include <scapix/java_api/android/print/PrintJobInfo.h>
#include <scapix/java_api/android/printservice/PrintDocument.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::printservice::PrintJob : public jni::object_base<"android/printservice/PrintJob",
	java::lang::Object>
{
public:

	jni::ref<android::print::PrintJobId> getId() { return call_method<"getId", jni::ref<android::print::PrintJobId>>(); }
	jni::ref<android::print::PrintJobInfo> getInfo() { return call_method<"getInfo", jni::ref<android::print::PrintJobInfo>>(); }
	jni::ref<android::printservice::PrintDocument> getDocument() { return call_method<"getDocument", jni::ref<android::printservice::PrintDocument>>(); }
	jboolean isQueued() { return call_method<"isQueued", jboolean>(); }
	jboolean isStarted() { return call_method<"isStarted", jboolean>(); }
	jboolean isBlocked() { return call_method<"isBlocked", jboolean>(); }
	jboolean isCompleted() { return call_method<"isCompleted", jboolean>(); }
	jboolean isFailed() { return call_method<"isFailed", jboolean>(); }
	jboolean isCancelled() { return call_method<"isCancelled", jboolean>(); }
	jboolean start() { return call_method<"start", jboolean>(); }
	jboolean block(jni::ref<java::lang::String> reason) { return call_method<"block", jboolean>(reason); }
	jboolean complete() { return call_method<"complete", jboolean>(); }
	jboolean fail(jni::ref<java::lang::String> error) { return call_method<"fail", jboolean>(error); }
	jboolean cancel() { return call_method<"cancel", jboolean>(); }
	void setProgress(jfloat progress) { return call_method<"setProgress", void>(progress); }
	void setStatus(jni::ref<java::lang::CharSequence> status) { return call_method<"setStatus", void>(status); }
	void setStatus(jint statusResId) { return call_method<"setStatus", void>(statusResId); }
	jboolean setTag(jni::ref<java::lang::String> tag) { return call_method<"setTag", jboolean>(tag); }
	jni::ref<java::lang::String> getTag() { return call_method<"getTag", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getAdvancedStringOption(jni::ref<java::lang::String> key) { return call_method<"getAdvancedStringOption", jni::ref<java::lang::String>>(key); }
	jboolean hasAdvancedOption(jni::ref<java::lang::String> key) { return call_method<"hasAdvancedOption", jboolean>(key); }
	jint getAdvancedIntOption(jni::ref<java::lang::String> key) { return call_method<"getAdvancedIntOption", jint>(key); }
	jboolean equals(jni::ref<java::lang::Object> obj) { return call_method<"equals", jboolean>(obj); }
	jint hashCode() { return call_method<"hashCode", jint>(); }

protected:

	PrintJob(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_PRINTSERVICE_PRINTJOB
