// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA_AREA_FWD
#define SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA_AREA_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::hardware { class Camera_Area; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::hardware::Camera_Area>
{
	static constexpr fixed_string class_name = "android/hardware/Camera$Area";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA_AREA_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA_AREA)
#define SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA_AREA

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/graphics/Rect.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::hardware::Camera_Area : public jni::object_base<"android/hardware/Camera$Area",
	java::lang::Object>
{
public:

	jni::ref<android::graphics::Rect> rect() { return get_field<"rect", jni::ref<android::graphics::Rect>>(); }
	void rect(jni::ref<android::graphics::Rect> v) { set_field<"rect", jni::ref<android::graphics::Rect>>(v); }
	jint weight() { return get_field<"weight", jint>(); }
	void weight(jint v) { set_field<"weight", jint>(v); }

	static jni::ref<android::hardware::Camera_Area> new_object(jni::ref<android::graphics::Rect> rect, jint weight) { return base_::new_object(rect, weight); }
	jboolean equals(jni::ref<java::lang::Object> obj) { return call_method<"equals", jboolean>(obj); }

protected:

	Camera_Area(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA_AREA
