// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/app/Activity.h>
#include <scapix/java_api/android/view/SurfaceHolder_Callback2.h>
#include <scapix/java_api/android/view/InputQueue_Callback.h>
#include <scapix/java_api/android/view/ViewTreeObserver_OnGlobalLayoutListener.h>

#ifndef SCAPIX_JAVA_API_ANDROID_APP_NATIVEACTIVITY_FWD
#define SCAPIX_JAVA_API_ANDROID_APP_NATIVEACTIVITY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::app { class NativeActivity; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::app::NativeActivity>
{
	static constexpr fixed_string class_name = "android/app/NativeActivity";
	using base_classes = std::tuple<scapix::java_api::android::app::Activity, scapix::java_api::android::view::SurfaceHolder_Callback2, scapix::java_api::android::view::InputQueue_Callback, scapix::java_api::android::view::ViewTreeObserver_OnGlobalLayoutListener>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_NATIVEACTIVITY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_APP_NATIVEACTIVITY)
#define SCAPIX_JAVA_API_ANDROID_APP_NATIVEACTIVITY

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/res/Configuration.h>
#include <scapix/java_api/android/view/InputQueue.h>
#include <scapix/java_api/android/view/SurfaceHolder.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::app::NativeActivity : public jni::object_base<"android/app/NativeActivity",
	android::app::Activity,
	android::view::SurfaceHolder_Callback2,
	android::view::InputQueue_Callback,
	android::view::ViewTreeObserver_OnGlobalLayoutListener>
{
public:

	static jni::ref<java::lang::String> META_DATA_FUNC_NAME() { return get_static_field<"META_DATA_FUNC_NAME", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> META_DATA_LIB_NAME() { return get_static_field<"META_DATA_LIB_NAME", jni::ref<java::lang::String>>(); }

	static jni::ref<android::app::NativeActivity> new_object() { return base_::new_object(); }
	void onConfigurationChanged(jni::ref<android::content::res::Configuration> newConfig) { return call_method<"onConfigurationChanged", void>(newConfig); }
	void onLowMemory() { return call_method<"onLowMemory", void>(); }
	void onWindowFocusChanged(jboolean hasFocus) { return call_method<"onWindowFocusChanged", void>(hasFocus); }
	void surfaceCreated(jni::ref<android::view::SurfaceHolder> holder) { return call_method<"surfaceCreated", void>(holder); }
	void surfaceChanged(jni::ref<android::view::SurfaceHolder> holder, jint format, jint width, jint height) { return call_method<"surfaceChanged", void>(holder, format, width, height); }
	void surfaceRedrawNeeded(jni::ref<android::view::SurfaceHolder> holder) { return call_method<"surfaceRedrawNeeded", void>(holder); }
	void surfaceDestroyed(jni::ref<android::view::SurfaceHolder> holder) { return call_method<"surfaceDestroyed", void>(holder); }
	void onInputQueueCreated(jni::ref<android::view::InputQueue> queue) { return call_method<"onInputQueueCreated", void>(queue); }
	void onInputQueueDestroyed(jni::ref<android::view::InputQueue> queue) { return call_method<"onInputQueueDestroyed", void>(queue); }
	void onGlobalLayout() { return call_method<"onGlobalLayout", void>(); }

protected:

	NativeActivity(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_NATIVEACTIVITY
