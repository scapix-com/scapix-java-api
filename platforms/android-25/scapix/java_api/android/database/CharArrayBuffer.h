// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_DATABASE_CHARARRAYBUFFER_FWD
#define SCAPIX_JAVA_API_ANDROID_DATABASE_CHARARRAYBUFFER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::database { class CharArrayBuffer; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::database::CharArrayBuffer>
{
	static constexpr fixed_string class_name = "android/database/CharArrayBuffer";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_DATABASE_CHARARRAYBUFFER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_DATABASE_CHARARRAYBUFFER)
#define SCAPIX_JAVA_API_ANDROID_DATABASE_CHARARRAYBUFFER

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::database::CharArrayBuffer : public jni::object_base<"android/database/CharArrayBuffer",
	java::lang::Object>
{
public:

	jni::ref<jni::array<jchar>> data() { return get_field<"data", jni::ref<jni::array<jchar>>>(); }
	void data(jni::ref<jni::array<jchar>> v) { set_field<"data", jni::ref<jni::array<jchar>>>(v); }
	jint sizeCopied() { return get_field<"sizeCopied", jint>(); }
	void sizeCopied(jint v) { set_field<"sizeCopied", jint>(v); }

	static jni::ref<android::database::CharArrayBuffer> new_object(jint size) { return base_::new_object(size); }
	static jni::ref<android::database::CharArrayBuffer> new_object(jni::ref<jni::array<jchar>> buf) { return base_::new_object(buf); }

protected:

	CharArrayBuffer(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_DATABASE_CHARARRAYBUFFER
