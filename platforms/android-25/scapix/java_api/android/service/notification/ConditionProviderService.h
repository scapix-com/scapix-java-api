// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/app/Service.h>

#ifndef SCAPIX_JAVA_API_ANDROID_SERVICE_NOTIFICATION_CONDITIONPROVIDERSERVICE_FWD
#define SCAPIX_JAVA_API_ANDROID_SERVICE_NOTIFICATION_CONDITIONPROVIDERSERVICE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::service::notification { class ConditionProviderService; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::service::notification::ConditionProviderService>
{
	static constexpr fixed_string class_name = "android/service/notification/ConditionProviderService";
	using base_classes = std::tuple<scapix::java_api::android::app::Service>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_SERVICE_NOTIFICATION_CONDITIONPROVIDERSERVICE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_SERVICE_NOTIFICATION_CONDITIONPROVIDERSERVICE)
#define SCAPIX_JAVA_API_ANDROID_SERVICE_NOTIFICATION_CONDITIONPROVIDERSERVICE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/Intent.h>
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/android/os/IBinder.h>
#include <scapix/java_api/android/service/notification/Condition.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::service::notification::ConditionProviderService : public jni::object_base<"android/service/notification/ConditionProviderService",
	android::app::Service>
{
public:

	static jni::ref<java::lang::String> EXTRA_RULE_ID() { return get_static_field<"EXTRA_RULE_ID", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> META_DATA_CONFIGURATION_ACTIVITY() { return get_static_field<"META_DATA_CONFIGURATION_ACTIVITY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> META_DATA_RULE_INSTANCE_LIMIT() { return get_static_field<"META_DATA_RULE_INSTANCE_LIMIT", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> META_DATA_RULE_TYPE() { return get_static_field<"META_DATA_RULE_TYPE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> SERVICE_INTERFACE() { return get_static_field<"SERVICE_INTERFACE", jni::ref<java::lang::String>>(); }

	static jni::ref<android::service::notification::ConditionProviderService> new_object() { return base_::new_object(); }
	void onConnected() { return call_method<"onConnected", void>(); }
	void onRequestConditions(jint relevance) { return call_method<"onRequestConditions", void>(relevance); }
	void onSubscribe(jni::ref<android::net::Uri> p1) { return call_method<"onSubscribe", void>(p1); }
	void onUnsubscribe(jni::ref<android::net::Uri> p1) { return call_method<"onUnsubscribe", void>(p1); }
	void notifyCondition(jni::ref<android::service::notification::Condition> condition) { return call_method<"notifyCondition", void>(condition); }
	void notifyConditions(jni::ref<jni::array<android::service::notification::Condition>> conditions) { return call_method<"notifyConditions", void>(conditions); }
	jni::ref<android::os::IBinder> onBind(jni::ref<android::content::Intent> intent) { return call_method<"onBind", jni::ref<android::os::IBinder>>(intent); }

protected:

	ConditionProviderService(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_SERVICE_NOTIFICATION_CONDITIONPROVIDERSERVICE
