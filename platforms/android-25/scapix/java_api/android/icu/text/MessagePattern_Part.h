// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_ICU_TEXT_MESSAGEPATTERN_PART_FWD
#define SCAPIX_JAVA_API_ANDROID_ICU_TEXT_MESSAGEPATTERN_PART_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::icu::text { class MessagePattern_Part; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::icu::text::MessagePattern_Part>
{
	static constexpr fixed_string class_name = "android/icu/text/MessagePattern$Part";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_TEXT_MESSAGEPATTERN_PART_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_ICU_TEXT_MESSAGEPATTERN_PART)
#define SCAPIX_JAVA_API_ANDROID_ICU_TEXT_MESSAGEPATTERN_PART

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/icu/text/MessagePattern_ArgType.h>
#include <scapix/java_api/android/icu/text/MessagePattern_Part_Type.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::icu::text::MessagePattern_Part : public jni::object_base<"android/icu/text/MessagePattern$Part",
	java::lang::Object>
{
public:

	using Type = MessagePattern_Part_Type;

	jni::ref<android::icu::text::MessagePattern_Part_Type> getType() { return call_method<"getType", jni::ref<android::icu::text::MessagePattern_Part_Type>>(); }
	jint getIndex() { return call_method<"getIndex", jint>(); }
	jint getLength() { return call_method<"getLength", jint>(); }
	jint getLimit() { return call_method<"getLimit", jint>(); }
	jint getValue() { return call_method<"getValue", jint>(); }
	jni::ref<android::icu::text::MessagePattern_ArgType> getArgType() { return call_method<"getArgType", jni::ref<android::icu::text::MessagePattern_ArgType>>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jboolean equals(jni::ref<java::lang::Object> other) { return call_method<"equals", jboolean>(other); }
	jint hashCode() { return call_method<"hashCode", jint>(); }

protected:

	MessagePattern_Part(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_TEXT_MESSAGEPATTERN_PART
