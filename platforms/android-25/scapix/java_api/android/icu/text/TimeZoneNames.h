// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_ICU_TEXT_TIMEZONENAMES_FWD
#define SCAPIX_JAVA_API_ANDROID_ICU_TEXT_TIMEZONENAMES_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::icu::text { class TimeZoneNames; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::icu::text::TimeZoneNames>
{
	static constexpr fixed_string class_name = "android/icu/text/TimeZoneNames";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::io::Serializable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_TEXT_TIMEZONENAMES_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_ICU_TEXT_TIMEZONENAMES)
#define SCAPIX_JAVA_API_ANDROID_ICU_TEXT_TIMEZONENAMES

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/icu/text/TimeZoneNames_NameType.h>
#include <scapix/java_api/android/icu/util/ULocale.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Locale.h>
#include <scapix/java_api/java/util/Set.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::icu::text::TimeZoneNames : public jni::object_base<"android/icu/text/TimeZoneNames",
	java::lang::Object,
	java::io::Serializable>
{
public:

	using NameType = TimeZoneNames_NameType;

	static jni::ref<android::icu::text::TimeZoneNames> getInstance(jni::ref<android::icu::util::ULocale> locale) { return call_static_method<"getInstance", jni::ref<android::icu::text::TimeZoneNames>>(locale); }
	static jni::ref<android::icu::text::TimeZoneNames> getInstance(jni::ref<java::util::Locale> locale) { return call_static_method<"getInstance", jni::ref<android::icu::text::TimeZoneNames>>(locale); }
	static jni::ref<android::icu::text::TimeZoneNames> getTZDBInstance(jni::ref<android::icu::util::ULocale> locale) { return call_static_method<"getTZDBInstance", jni::ref<android::icu::text::TimeZoneNames>>(locale); }
	jni::ref<java::util::Set> getAvailableMetaZoneIDs() { return call_method<"getAvailableMetaZoneIDs", jni::ref<java::util::Set>>(); }
	jni::ref<java::util::Set> getAvailableMetaZoneIDs(jni::ref<java::lang::String> p1) { return call_method<"getAvailableMetaZoneIDs", jni::ref<java::util::Set>>(p1); }
	jni::ref<java::lang::String> getMetaZoneID(jni::ref<java::lang::String> p1, jlong p2) { return call_method<"getMetaZoneID", jni::ref<java::lang::String>>(p1, p2); }
	jni::ref<java::lang::String> getReferenceZoneID(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return call_method<"getReferenceZoneID", jni::ref<java::lang::String>>(p1, p2); }
	jni::ref<java::lang::String> getMetaZoneDisplayName(jni::ref<java::lang::String> p1, jni::ref<android::icu::text::TimeZoneNames_NameType> p2) { return call_method<"getMetaZoneDisplayName", jni::ref<java::lang::String>>(p1, p2); }
	jni::ref<java::lang::String> getDisplayName(jni::ref<java::lang::String> tzID, jni::ref<android::icu::text::TimeZoneNames_NameType> type, jlong date) { return call_method<"getDisplayName", jni::ref<java::lang::String>>(tzID, type, date); }
	jni::ref<java::lang::String> getTimeZoneDisplayName(jni::ref<java::lang::String> p1, jni::ref<android::icu::text::TimeZoneNames_NameType> p2) { return call_method<"getTimeZoneDisplayName", jni::ref<java::lang::String>>(p1, p2); }
	jni::ref<java::lang::String> getExemplarLocationName(jni::ref<java::lang::String> tzID) { return call_method<"getExemplarLocationName", jni::ref<java::lang::String>>(tzID); }

protected:

	TimeZoneNames(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_TEXT_TIMEZONENAMES
