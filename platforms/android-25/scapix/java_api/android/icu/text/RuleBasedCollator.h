// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/icu/text/Collator.h>

#ifndef SCAPIX_JAVA_API_ANDROID_ICU_TEXT_RULEBASEDCOLLATOR_FWD
#define SCAPIX_JAVA_API_ANDROID_ICU_TEXT_RULEBASEDCOLLATOR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::icu::text { class RuleBasedCollator; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::icu::text::RuleBasedCollator>
{
	static constexpr fixed_string class_name = "android/icu/text/RuleBasedCollator";
	using base_classes = std::tuple<scapix::java_api::android::icu::text::Collator>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_TEXT_RULEBASEDCOLLATOR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_ICU_TEXT_RULEBASEDCOLLATOR)
#define SCAPIX_JAVA_API_ANDROID_ICU_TEXT_RULEBASEDCOLLATOR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/icu/text/CollationElementIterator.h>
#include <scapix/java_api/android/icu/text/CollationKey.h>
#include <scapix/java_api/android/icu/text/UCharacterIterator.h>
#include <scapix/java_api/android/icu/text/UnicodeSet.h>
#include <scapix/java_api/android/icu/util/VersionInfo.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/text/CharacterIterator.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::icu::text::RuleBasedCollator : public jni::object_base<"android/icu/text/RuleBasedCollator",
	android::icu::text::Collator>
{
public:

	static jni::ref<android::icu::text::RuleBasedCollator> new_object(jni::ref<java::lang::String> rules) { return base_::new_object(rules); }
	jni::ref<java::lang::Object> clone() { return call_method<"clone", jni::ref<java::lang::Object>>(); }
	jni::ref<android::icu::text::CollationElementIterator> getCollationElementIterator(jni::ref<java::lang::String> source) { return call_method<"getCollationElementIterator", jni::ref<android::icu::text::CollationElementIterator>>(source); }
	jni::ref<android::icu::text::CollationElementIterator> getCollationElementIterator(jni::ref<java::text::CharacterIterator> source) { return call_method<"getCollationElementIterator", jni::ref<android::icu::text::CollationElementIterator>>(source); }
	jni::ref<android::icu::text::CollationElementIterator> getCollationElementIterator(jni::ref<android::icu::text::UCharacterIterator> source) { return call_method<"getCollationElementIterator", jni::ref<android::icu::text::CollationElementIterator>>(source); }
	jboolean isFrozen() { return call_method<"isFrozen", jboolean>(); }
	jni::ref<android::icu::text::Collator> freeze() { return call_method<"freeze", jni::ref<android::icu::text::Collator>>(); }
	jni::ref<android::icu::text::RuleBasedCollator> cloneAsThawed() { return call_method<"cloneAsThawed", jni::ref<android::icu::text::RuleBasedCollator>>(); }
	void setUpperCaseFirst(jboolean upperfirst) { return call_method<"setUpperCaseFirst", void>(upperfirst); }
	void setLowerCaseFirst(jboolean lowerfirst) { return call_method<"setLowerCaseFirst", void>(lowerfirst); }
	void setCaseFirstDefault() { return call_method<"setCaseFirstDefault", void>(); }
	void setAlternateHandlingDefault() { return call_method<"setAlternateHandlingDefault", void>(); }
	void setCaseLevelDefault() { return call_method<"setCaseLevelDefault", void>(); }
	void setDecompositionDefault() { return call_method<"setDecompositionDefault", void>(); }
	void setFrenchCollationDefault() { return call_method<"setFrenchCollationDefault", void>(); }
	void setStrengthDefault() { return call_method<"setStrengthDefault", void>(); }
	void setNumericCollationDefault() { return call_method<"setNumericCollationDefault", void>(); }
	void setFrenchCollation(jboolean flag) { return call_method<"setFrenchCollation", void>(flag); }
	void setAlternateHandlingShifted(jboolean shifted) { return call_method<"setAlternateHandlingShifted", void>(shifted); }
	void setCaseLevel(jboolean flag) { return call_method<"setCaseLevel", void>(flag); }
	void setDecomposition(jint decomposition) { return call_method<"setDecomposition", void>(decomposition); }
	void setStrength(jint newStrength) { return call_method<"setStrength", void>(newStrength); }
	jni::ref<android::icu::text::RuleBasedCollator> setMaxVariable(jint group) { return call_method<"setMaxVariable", jni::ref<android::icu::text::RuleBasedCollator>>(group); }
	jint getMaxVariable() { return call_method<"getMaxVariable", jint>(); }
	void setNumericCollation(jboolean flag) { return call_method<"setNumericCollation", void>(flag); }
	void setReorderCodes(jni::ref<jni::array<jint>> order) { return call_method<"setReorderCodes", void>(order); }
	jni::ref<java::lang::String> getRules() { return call_method<"getRules", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getRules(jboolean fullrules) { return call_method<"getRules", jni::ref<java::lang::String>>(fullrules); }
	jni::ref<android::icu::text::UnicodeSet> getTailoredSet() { return call_method<"getTailoredSet", jni::ref<android::icu::text::UnicodeSet>>(); }
	void getContractionsAndExpansions(jni::ref<android::icu::text::UnicodeSet> contractions, jni::ref<android::icu::text::UnicodeSet> expansions, jboolean addPrefixes) { return call_method<"getContractionsAndExpansions", void>(contractions, expansions, addPrefixes); }
	jni::ref<android::icu::text::CollationKey> getCollationKey(jni::ref<java::lang::String> source) { return call_method<"getCollationKey", jni::ref<android::icu::text::CollationKey>>(source); }
	jint getStrength() { return call_method<"getStrength", jint>(); }
	jint getDecomposition() { return call_method<"getDecomposition", jint>(); }
	jboolean isUpperCaseFirst() { return call_method<"isUpperCaseFirst", jboolean>(); }
	jboolean isLowerCaseFirst() { return call_method<"isLowerCaseFirst", jboolean>(); }
	jboolean isAlternateHandlingShifted() { return call_method<"isAlternateHandlingShifted", jboolean>(); }
	jboolean isCaseLevel() { return call_method<"isCaseLevel", jboolean>(); }
	jboolean isFrenchCollation() { return call_method<"isFrenchCollation", jboolean>(); }
	jint getVariableTop() { return call_method<"getVariableTop", jint>(); }
	jboolean getNumericCollation() { return call_method<"getNumericCollation", jboolean>(); }
	jni::ref<jni::array<jint>> getReorderCodes() { return call_method<"getReorderCodes", jni::ref<jni::array<jint>>>(); }
	jboolean equals(jni::ref<java::lang::Object> obj) { return call_method<"equals", jboolean>(obj); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jint compare(jni::ref<java::lang::String> source, jni::ref<java::lang::String> target) { return call_method<"compare", jint>(source, target); }
	jni::ref<android::icu::util::VersionInfo> getVersion() { return call_method<"getVersion", jni::ref<android::icu::util::VersionInfo>>(); }
	jni::ref<android::icu::util::VersionInfo> getUCAVersion() { return call_method<"getUCAVersion", jni::ref<android::icu::util::VersionInfo>>(); }

protected:

	RuleBasedCollator(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_TEXT_RULEBASEDCOLLATOR
