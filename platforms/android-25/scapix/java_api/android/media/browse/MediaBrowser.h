// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_BROWSE_MEDIABROWSER_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_BROWSE_MEDIABROWSER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media::browse { class MediaBrowser; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::browse::MediaBrowser>
{
	static constexpr fixed_string class_name = "android/media/browse/MediaBrowser";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_BROWSE_MEDIABROWSER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_BROWSE_MEDIABROWSER)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_BROWSE_MEDIABROWSER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/ComponentName.h>
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/media/browse/MediaBrowser_ConnectionCallback.h>
#include <scapix/java_api/android/media/browse/MediaBrowser_ItemCallback.h>
#include <scapix/java_api/android/media/browse/MediaBrowser_SubscriptionCallback.h>
#include <scapix/java_api/android/media/session/MediaSession_Token.h>
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/android/media/browse/MediaBrowser_MediaItem.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::browse::MediaBrowser : public jni::object_base<"android/media/browse/MediaBrowser",
	java::lang::Object>
{
public:

	using ItemCallback = MediaBrowser_ItemCallback;
	using SubscriptionCallback = MediaBrowser_SubscriptionCallback;
	using ConnectionCallback = MediaBrowser_ConnectionCallback;
	using MediaItem = MediaBrowser_MediaItem;

	static jni::ref<java::lang::String> EXTRA_PAGE() { return get_static_field<"EXTRA_PAGE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> EXTRA_PAGE_SIZE() { return get_static_field<"EXTRA_PAGE_SIZE", jni::ref<java::lang::String>>(); }

	static jni::ref<android::media::browse::MediaBrowser> new_object(jni::ref<android::content::Context> context, jni::ref<android::content::ComponentName> serviceComponent, jni::ref<android::media::browse::MediaBrowser_ConnectionCallback> callback, jni::ref<android::os::Bundle> rootHints) { return base_::new_object(context, serviceComponent, callback, rootHints); }
	void connect() { return call_method<"connect", void>(); }
	void disconnect() { return call_method<"disconnect", void>(); }
	jboolean isConnected() { return call_method<"isConnected", jboolean>(); }
	jni::ref<android::content::ComponentName> getServiceComponent() { return call_method<"getServiceComponent", jni::ref<android::content::ComponentName>>(); }
	jni::ref<java::lang::String> getRoot() { return call_method<"getRoot", jni::ref<java::lang::String>>(); }
	jni::ref<android::os::Bundle> getExtras() { return call_method<"getExtras", jni::ref<android::os::Bundle>>(); }
	jni::ref<android::media::session::MediaSession_Token> getSessionToken() { return call_method<"getSessionToken", jni::ref<android::media::session::MediaSession_Token>>(); }
	void subscribe(jni::ref<java::lang::String> parentId, jni::ref<android::media::browse::MediaBrowser_SubscriptionCallback> callback) { return call_method<"subscribe", void>(parentId, callback); }
	void subscribe(jni::ref<java::lang::String> parentId, jni::ref<android::os::Bundle> options, jni::ref<android::media::browse::MediaBrowser_SubscriptionCallback> callback) { return call_method<"subscribe", void>(parentId, options, callback); }
	void unsubscribe(jni::ref<java::lang::String> parentId) { return call_method<"unsubscribe", void>(parentId); }
	void unsubscribe(jni::ref<java::lang::String> parentId, jni::ref<android::media::browse::MediaBrowser_SubscriptionCallback> callback) { return call_method<"unsubscribe", void>(parentId, callback); }
	void getItem(jni::ref<java::lang::String> mediaId, jni::ref<android::media::browse::MediaBrowser_ItemCallback> cb) { return call_method<"getItem", void>(mediaId, cb); }

protected:

	MediaBrowser(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_BROWSE_MEDIABROWSER
