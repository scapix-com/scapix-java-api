// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_SESSION_MEDIACONTROLLER_CALLBACK_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_SESSION_MEDIACONTROLLER_CALLBACK_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media::session { class MediaController_Callback; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::session::MediaController_Callback>
{
	static constexpr fixed_string class_name = "android/media/session/MediaController$Callback";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_SESSION_MEDIACONTROLLER_CALLBACK_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_SESSION_MEDIACONTROLLER_CALLBACK)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_SESSION_MEDIACONTROLLER_CALLBACK

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/media/MediaMetadata.h>
#include <scapix/java_api/android/media/session/MediaController_PlaybackInfo.h>
#include <scapix/java_api/android/media/session/PlaybackState.h>
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::session::MediaController_Callback : public jni::object_base<"android/media/session/MediaController$Callback",
	java::lang::Object>
{
public:

	static jni::ref<android::media::session::MediaController_Callback> new_object() { return base_::new_object(); }
	void onSessionDestroyed() { return call_method<"onSessionDestroyed", void>(); }
	void onSessionEvent(jni::ref<java::lang::String> event, jni::ref<android::os::Bundle> extras) { return call_method<"onSessionEvent", void>(event, extras); }
	void onPlaybackStateChanged(jni::ref<android::media::session::PlaybackState> state) { return call_method<"onPlaybackStateChanged", void>(state); }
	void onMetadataChanged(jni::ref<android::media::MediaMetadata> metadata) { return call_method<"onMetadataChanged", void>(metadata); }
	void onQueueChanged(jni::ref<java::util::List> queue) { return call_method<"onQueueChanged", void>(queue); }
	void onQueueTitleChanged(jni::ref<java::lang::CharSequence> title) { return call_method<"onQueueTitleChanged", void>(title); }
	void onExtrasChanged(jni::ref<android::os::Bundle> extras) { return call_method<"onExtrasChanged", void>(extras); }
	void onAudioInfoChanged(jni::ref<android::media::session::MediaController_PlaybackInfo> info) { return call_method<"onAudioInfoChanged", void>(info); }

protected:

	MediaController_Callback(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_SESSION_MEDIACONTROLLER_CALLBACK
