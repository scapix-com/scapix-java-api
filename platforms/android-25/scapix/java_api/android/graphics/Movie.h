// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_GRAPHICS_MOVIE_FWD
#define SCAPIX_JAVA_API_ANDROID_GRAPHICS_MOVIE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::graphics { class Movie; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::graphics::Movie>
{
	static constexpr fixed_string class_name = "android/graphics/Movie";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_GRAPHICS_MOVIE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_GRAPHICS_MOVIE)
#define SCAPIX_JAVA_API_ANDROID_GRAPHICS_MOVIE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/graphics/Canvas.h>
#include <scapix/java_api/android/graphics/Paint.h>
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::graphics::Movie : public jni::object_base<"android/graphics/Movie",
	java::lang::Object>
{
public:

	jint width() { return call_method<"width", jint>(); }
	jint height() { return call_method<"height", jint>(); }
	jboolean isOpaque() { return call_method<"isOpaque", jboolean>(); }
	jint duration() { return call_method<"duration", jint>(); }
	jboolean setTime(jint p1) { return call_method<"setTime", jboolean>(p1); }
	void draw(jni::ref<android::graphics::Canvas> canvas, jfloat x, jfloat y, jni::ref<android::graphics::Paint> paint) { return call_method<"draw", void>(canvas, x, y, paint); }
	void draw(jni::ref<android::graphics::Canvas> canvas, jfloat x, jfloat y) { return call_method<"draw", void>(canvas, x, y); }
	static jni::ref<android::graphics::Movie> decodeStream(jni::ref<java::io::InputStream> is) { return call_static_method<"decodeStream", jni::ref<android::graphics::Movie>>(is); }
	static jni::ref<android::graphics::Movie> decodeByteArray(jni::ref<jni::array<jbyte>> p1, jint p2, jint p3) { return call_static_method<"decodeByteArray", jni::ref<android::graphics::Movie>>(p1, p2, p3); }
	static jni::ref<android::graphics::Movie> decodeFile(jni::ref<java::lang::String> pathName) { return call_static_method<"decodeFile", jni::ref<android::graphics::Movie>>(pathName); }

protected:

	Movie(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_GRAPHICS_MOVIE
