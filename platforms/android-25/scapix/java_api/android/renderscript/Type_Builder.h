// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_RENDERSCRIPT_TYPE_BUILDER_FWD
#define SCAPIX_JAVA_API_ANDROID_RENDERSCRIPT_TYPE_BUILDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::renderscript { class Type_Builder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::renderscript::Type_Builder>
{
	static constexpr fixed_string class_name = "android/renderscript/Type$Builder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_RENDERSCRIPT_TYPE_BUILDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_RENDERSCRIPT_TYPE_BUILDER)
#define SCAPIX_JAVA_API_ANDROID_RENDERSCRIPT_TYPE_BUILDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/renderscript/Element.h>
#include <scapix/java_api/android/renderscript/RenderScript.h>
#include <scapix/java_api/android/renderscript/Type.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::renderscript::Type_Builder : public jni::object_base<"android/renderscript/Type$Builder",
	java::lang::Object>
{
public:

	static jni::ref<android::renderscript::Type_Builder> new_object(jni::ref<android::renderscript::RenderScript> rs, jni::ref<android::renderscript::Element> e) { return base_::new_object(rs, e); }
	jni::ref<android::renderscript::Type_Builder> setX(jint value) { return call_method<"setX", jni::ref<android::renderscript::Type_Builder>>(value); }
	jni::ref<android::renderscript::Type_Builder> setY(jint value) { return call_method<"setY", jni::ref<android::renderscript::Type_Builder>>(value); }
	jni::ref<android::renderscript::Type_Builder> setZ(jint value) { return call_method<"setZ", jni::ref<android::renderscript::Type_Builder>>(value); }
	jni::ref<android::renderscript::Type_Builder> setMipmaps(jboolean value) { return call_method<"setMipmaps", jni::ref<android::renderscript::Type_Builder>>(value); }
	jni::ref<android::renderscript::Type_Builder> setFaces(jboolean value) { return call_method<"setFaces", jni::ref<android::renderscript::Type_Builder>>(value); }
	jni::ref<android::renderscript::Type_Builder> setYuvFormat(jint yuvFormat) { return call_method<"setYuvFormat", jni::ref<android::renderscript::Type_Builder>>(yuvFormat); }
	jni::ref<android::renderscript::Type> create() { return call_method<"create", jni::ref<android::renderscript::Type>>(); }

protected:

	Type_Builder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_RENDERSCRIPT_TYPE_BUILDER
