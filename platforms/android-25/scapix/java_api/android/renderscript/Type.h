// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/renderscript/BaseObj.h>

#ifndef SCAPIX_JAVA_API_ANDROID_RENDERSCRIPT_TYPE_FWD
#define SCAPIX_JAVA_API_ANDROID_RENDERSCRIPT_TYPE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::renderscript { class Type; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::renderscript::Type>
{
	static constexpr fixed_string class_name = "android/renderscript/Type";
	using base_classes = std::tuple<scapix::java_api::android::renderscript::BaseObj>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_RENDERSCRIPT_TYPE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_RENDERSCRIPT_TYPE)
#define SCAPIX_JAVA_API_ANDROID_RENDERSCRIPT_TYPE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/renderscript/Element.h>
#include <scapix/java_api/android/renderscript/RenderScript.h>
#include <scapix/java_api/android/renderscript/Type_Builder.h>
#include <scapix/java_api/android/renderscript/Type_CubemapFace.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::renderscript::Type : public jni::object_base<"android/renderscript/Type",
	android::renderscript::BaseObj>
{
public:

	using Builder = Type_Builder;
	using CubemapFace = Type_CubemapFace;

	jni::ref<android::renderscript::Element> getElement() { return call_method<"getElement", jni::ref<android::renderscript::Element>>(); }
	jint getX() { return call_method<"getX", jint>(); }
	jint getY() { return call_method<"getY", jint>(); }
	jint getZ() { return call_method<"getZ", jint>(); }
	jint getYuv() { return call_method<"getYuv", jint>(); }
	jboolean hasMipmaps() { return call_method<"hasMipmaps", jboolean>(); }
	jboolean hasFaces() { return call_method<"hasFaces", jboolean>(); }
	jint getCount() { return call_method<"getCount", jint>(); }
	static jni::ref<android::renderscript::Type> createX(jni::ref<android::renderscript::RenderScript> rs, jni::ref<android::renderscript::Element> e, jint dimX) { return call_static_method<"createX", jni::ref<android::renderscript::Type>>(rs, e, dimX); }
	static jni::ref<android::renderscript::Type> createXY(jni::ref<android::renderscript::RenderScript> rs, jni::ref<android::renderscript::Element> e, jint dimX, jint dimY) { return call_static_method<"createXY", jni::ref<android::renderscript::Type>>(rs, e, dimX, dimY); }
	static jni::ref<android::renderscript::Type> createXYZ(jni::ref<android::renderscript::RenderScript> rs, jni::ref<android::renderscript::Element> e, jint dimX, jint dimY, jint dimZ) { return call_static_method<"createXYZ", jni::ref<android::renderscript::Type>>(rs, e, dimX, dimY, dimZ); }

protected:

	Type(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_RENDERSCRIPT_TYPE
