// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/org/apache/http/io/SessionOutputBuffer.h>

#ifndef SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_CONN_LOGGINGSESSIONOUTPUTBUFFER_FWD
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_CONN_LOGGINGSESSIONOUTPUTBUFFER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::apache::http::impl::conn { class LoggingSessionOutputBuffer; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::apache::http::impl::conn::LoggingSessionOutputBuffer>
{
	static constexpr fixed_string class_name = "org/apache/http/impl/conn/LoggingSessionOutputBuffer";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::org::apache::http::io::SessionOutputBuffer>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_CONN_LOGGINGSESSIONOUTPUTBUFFER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_CONN_LOGGINGSESSIONOUTPUTBUFFER)
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_CONN_LOGGINGSESSIONOUTPUTBUFFER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/apache/http/impl/conn/Wire.h>
#include <scapix/java_api/org/apache/http/io/HttpTransportMetrics.h>
#include <scapix/java_api/org/apache/http/util/CharArrayBuffer.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::apache::http::impl::conn::LoggingSessionOutputBuffer : public jni::object_base<"org/apache/http/impl/conn/LoggingSessionOutputBuffer",
	java::lang::Object,
	org::apache::http::io::SessionOutputBuffer>
{
public:

	static jni::ref<org::apache::http::impl::conn::LoggingSessionOutputBuffer> new_object(jni::ref<org::apache::http::io::SessionOutputBuffer> out, jni::ref<org::apache::http::impl::conn::Wire> wire) { return base_::new_object(out, wire); }
	void write(jni::ref<jni::array<jbyte>> b, jint off, jint len) { return call_method<"write", void>(b, off, len); }
	void write(jint b) { return call_method<"write", void>(b); }
	void write(jni::ref<jni::array<jbyte>> b) { return call_method<"write", void>(b); }
	void flush() { return call_method<"flush", void>(); }
	void writeLine(jni::ref<org::apache::http::util::CharArrayBuffer> buffer) { return call_method<"writeLine", void>(buffer); }
	void writeLine(jni::ref<java::lang::String> s) { return call_method<"writeLine", void>(s); }
	jni::ref<org::apache::http::io::HttpTransportMetrics> getMetrics() { return call_method<"getMetrics", jni::ref<org::apache::http::io::HttpTransportMetrics>>(); }

protected:

	LoggingSessionOutputBuffer(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_CONN_LOGGINGSESSIONOUTPUTBUFFER
