// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/io/InputStream.h>

#ifndef SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_IO_IDENTITYINPUTSTREAM_FWD
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_IO_IDENTITYINPUTSTREAM_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::apache::http::impl::io { class IdentityInputStream; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::apache::http::impl::io::IdentityInputStream>
{
	static constexpr fixed_string class_name = "org/apache/http/impl/io/IdentityInputStream";
	using base_classes = std::tuple<scapix::java_api::java::io::InputStream>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_IO_IDENTITYINPUTSTREAM_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_IO_IDENTITYINPUTSTREAM)
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_IO_IDENTITYINPUTSTREAM

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/org/apache/http/io/SessionInputBuffer.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::apache::http::impl::io::IdentityInputStream : public jni::object_base<"org/apache/http/impl/io/IdentityInputStream",
	java::io::InputStream>
{
public:

	static jni::ref<org::apache::http::impl::io::IdentityInputStream> new_object(jni::ref<org::apache::http::io::SessionInputBuffer> in) { return base_::new_object(in); }
	jint available() { return call_method<"available", jint>(); }
	void close() { return call_method<"close", void>(); }
	jint read() { return call_method<"read", jint>(); }
	jint read(jni::ref<jni::array<jbyte>> b, jint off, jint len) { return call_method<"read", jint>(b, off, len); }

protected:

	IdentityInputStream(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_IO_IDENTITYINPUTSTREAM
