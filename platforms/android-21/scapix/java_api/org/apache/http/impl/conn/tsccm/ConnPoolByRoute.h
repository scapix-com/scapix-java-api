// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/org/apache/http/impl/conn/tsccm/AbstractConnPool.h>

#ifndef SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_CONN_TSCCM_CONNPOOLBYROUTE_FWD
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_CONN_TSCCM_CONNPOOLBYROUTE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::apache::http::impl::conn::tsccm { class ConnPoolByRoute; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::apache::http::impl::conn::tsccm::ConnPoolByRoute>
{
	static constexpr fixed_string class_name = "org/apache/http/impl/conn/tsccm/ConnPoolByRoute";
	using base_classes = std::tuple<scapix::java_api::org::apache::http::impl::conn::tsccm::AbstractConnPool>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_CONN_TSCCM_CONNPOOLBYROUTE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_CONN_TSCCM_CONNPOOLBYROUTE)
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_CONN_TSCCM_CONNPOOLBYROUTE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/util/concurrent/TimeUnit.h>
#include <scapix/java_api/org/apache/http/conn/ClientConnectionOperator.h>
#include <scapix/java_api/org/apache/http/conn/routing/HttpRoute.h>
#include <scapix/java_api/org/apache/http/impl/conn/tsccm/BasicPoolEntry.h>
#include <scapix/java_api/org/apache/http/impl/conn/tsccm/PoolEntryRequest.h>
#include <scapix/java_api/org/apache/http/params/HttpParams.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::apache::http::impl::conn::tsccm::ConnPoolByRoute : public jni::object_base<"org/apache/http/impl/conn/tsccm/ConnPoolByRoute",
	org::apache::http::impl::conn::tsccm::AbstractConnPool>
{
public:

	static jni::ref<org::apache::http::impl::conn::tsccm::ConnPoolByRoute> new_object(jni::ref<org::apache::http::conn::ClientConnectionOperator> operator_, jni::ref<org::apache::http::params::HttpParams> params) { return base_::new_object(operator_, params); }
	jint getConnectionsInPool(jni::ref<org::apache::http::conn::routing::HttpRoute> route) { return call_method<"getConnectionsInPool", jint>(route); }
	jni::ref<org::apache::http::impl::conn::tsccm::PoolEntryRequest> requestPoolEntry(jni::ref<org::apache::http::conn::routing::HttpRoute> route, jni::ref<java::lang::Object> state) { return call_method<"requestPoolEntry", jni::ref<org::apache::http::impl::conn::tsccm::PoolEntryRequest>>(route, state); }
	void freeEntry(jni::ref<org::apache::http::impl::conn::tsccm::BasicPoolEntry> entry, jboolean reusable, jlong validDuration, jni::ref<java::util::concurrent::TimeUnit> p4) { return call_method<"freeEntry", void>(entry, reusable, validDuration, p4); }
	void deleteClosedConnections() { return call_method<"deleteClosedConnections", void>(); }
	void shutdown() { return call_method<"shutdown", void>(); }

protected:

	ConnPoolByRoute(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_CONN_TSCCM_CONNPOOLBYROUTE
