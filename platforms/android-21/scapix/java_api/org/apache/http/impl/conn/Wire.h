// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_CONN_WIRE_FWD
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_CONN_WIRE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::apache::http::impl::conn { class Wire; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::apache::http::impl::conn::Wire>
{
	static constexpr fixed_string class_name = "org/apache/http/impl/conn/Wire";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_CONN_WIRE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_CONN_WIRE)
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_CONN_WIRE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/apache/commons/logging/Log.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::apache::http::impl::conn::Wire : public jni::object_base<"org/apache/http/impl/conn/Wire",
	java::lang::Object>
{
public:

	static jni::ref<org::apache::http::impl::conn::Wire> new_object(jni::ref<org::apache::commons::logging::Log> log) { return base_::new_object(log); }
	jboolean enabled() { return call_method<"enabled", jboolean>(); }
	void output(jni::ref<java::io::InputStream> outstream) { return call_method<"output", void>(outstream); }
	void input(jni::ref<java::io::InputStream> instream) { return call_method<"input", void>(instream); }
	void output(jni::ref<jni::array<jbyte>> b, jint off, jint len) { return call_method<"output", void>(b, off, len); }
	void input(jni::ref<jni::array<jbyte>> b, jint off, jint len) { return call_method<"input", void>(b, off, len); }
	void output(jni::ref<jni::array<jbyte>> b) { return call_method<"output", void>(b); }
	void input(jni::ref<jni::array<jbyte>> b) { return call_method<"input", void>(b); }
	void output(jint b) { return call_method<"output", void>(b); }
	void input(jint b) { return call_method<"input", void>(b); }
	void output(jni::ref<java::lang::String> s) { return call_method<"output", void>(s); }
	void input(jni::ref<java::lang::String> s) { return call_method<"input", void>(s); }

protected:

	Wire(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_CONN_WIRE
