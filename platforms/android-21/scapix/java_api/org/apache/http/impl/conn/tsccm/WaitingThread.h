// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_CONN_TSCCM_WAITINGTHREAD_FWD
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_CONN_TSCCM_WAITINGTHREAD_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::apache::http::impl::conn::tsccm { class WaitingThread; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::apache::http::impl::conn::tsccm::WaitingThread>
{
	static constexpr fixed_string class_name = "org/apache/http/impl/conn/tsccm/WaitingThread";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_CONN_TSCCM_WAITINGTHREAD_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_CONN_TSCCM_WAITINGTHREAD)
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_CONN_TSCCM_WAITINGTHREAD

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Thread.h>
#include <scapix/java_api/java/util/Date.h>
#include <scapix/java_api/java/util/concurrent/locks/Condition.h>
#include <scapix/java_api/org/apache/http/impl/conn/tsccm/RouteSpecificPool.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::apache::http::impl::conn::tsccm::WaitingThread : public jni::object_base<"org/apache/http/impl/conn/tsccm/WaitingThread",
	java::lang::Object>
{
public:

	static jni::ref<org::apache::http::impl::conn::tsccm::WaitingThread> new_object(jni::ref<java::util::concurrent::locks::Condition> cond, jni::ref<org::apache::http::impl::conn::tsccm::RouteSpecificPool> pool) { return base_::new_object(cond, pool); }
	jni::ref<java::util::concurrent::locks::Condition> getCondition() { return call_method<"getCondition", jni::ref<java::util::concurrent::locks::Condition>>(); }
	jni::ref<org::apache::http::impl::conn::tsccm::RouteSpecificPool> getPool() { return call_method<"getPool", jni::ref<org::apache::http::impl::conn::tsccm::RouteSpecificPool>>(); }
	jni::ref<java::lang::Thread> getThread() { return call_method<"getThread", jni::ref<java::lang::Thread>>(); }
	jboolean await(jni::ref<java::util::Date> deadline) { return call_method<"await", jboolean>(deadline); }
	void wakeup() { return call_method<"wakeup", void>(); }
	void interrupt() { return call_method<"interrupt", void>(); }

protected:

	WaitingThread(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_CONN_TSCCM_WAITINGTHREAD
