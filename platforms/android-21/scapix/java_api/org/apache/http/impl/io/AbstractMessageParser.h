// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/org/apache/http/io/HttpMessageParser.h>

#ifndef SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_IO_ABSTRACTMESSAGEPARSER_FWD
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_IO_ABSTRACTMESSAGEPARSER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::apache::http::impl::io { class AbstractMessageParser; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::apache::http::impl::io::AbstractMessageParser>
{
	static constexpr fixed_string class_name = "org/apache/http/impl/io/AbstractMessageParser";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::org::apache::http::io::HttpMessageParser>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_IO_ABSTRACTMESSAGEPARSER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_IO_ABSTRACTMESSAGEPARSER)
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_IO_ABSTRACTMESSAGEPARSER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/org/apache/http/Header.h>
#include <scapix/java_api/org/apache/http/HttpMessage.h>
#include <scapix/java_api/org/apache/http/io/SessionInputBuffer.h>
#include <scapix/java_api/org/apache/http/message/LineParser.h>
#include <scapix/java_api/org/apache/http/params/HttpParams.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::apache::http::impl::io::AbstractMessageParser : public jni::object_base<"org/apache/http/impl/io/AbstractMessageParser",
	java::lang::Object,
	org::apache::http::io::HttpMessageParser>
{
public:

	static jni::ref<org::apache::http::impl::io::AbstractMessageParser> new_object(jni::ref<org::apache::http::io::SessionInputBuffer> buffer, jni::ref<org::apache::http::message::LineParser> parser, jni::ref<org::apache::http::params::HttpParams> params) { return base_::new_object(buffer, parser, params); }
	static jni::ref<jni::array<org::apache::http::Header>> parseHeaders(jni::ref<org::apache::http::io::SessionInputBuffer> inbuffer, jint maxHeaderCount, jint maxLineLen, jni::ref<org::apache::http::message::LineParser> parser) { return call_static_method<"parseHeaders", jni::ref<jni::array<org::apache::http::Header>>>(inbuffer, maxHeaderCount, maxLineLen, parser); }
	jni::ref<org::apache::http::HttpMessage> parse() { return call_method<"parse", jni::ref<org::apache::http::HttpMessage>>(); }

protected:

	AbstractMessageParser(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_IO_ABSTRACTMESSAGEPARSER
