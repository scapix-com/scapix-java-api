// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/org/apache/http/impl/conn/AbstractClientConnAdapter.h>

#ifndef SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_CONN_ABSTRACTPOOLEDCONNADAPTER_FWD
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_CONN_ABSTRACTPOOLEDCONNADAPTER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::apache::http::impl::conn { class AbstractPooledConnAdapter; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::apache::http::impl::conn::AbstractPooledConnAdapter>
{
	static constexpr fixed_string class_name = "org/apache/http/impl/conn/AbstractPooledConnAdapter";
	using base_classes = std::tuple<scapix::java_api::org::apache::http::impl::conn::AbstractClientConnAdapter>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_CONN_ABSTRACTPOOLEDCONNADAPTER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_CONN_ABSTRACTPOOLEDCONNADAPTER)
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_CONN_ABSTRACTPOOLEDCONNADAPTER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/org/apache/http/HttpHost.h>
#include <scapix/java_api/org/apache/http/conn/routing/HttpRoute.h>
#include <scapix/java_api/org/apache/http/params/HttpParams.h>
#include <scapix/java_api/org/apache/http/protocol/HttpContext.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::apache::http::impl::conn::AbstractPooledConnAdapter : public jni::object_base<"org/apache/http/impl/conn/AbstractPooledConnAdapter",
	org::apache::http::impl::conn::AbstractClientConnAdapter>
{
public:

	jni::ref<org::apache::http::conn::routing::HttpRoute> getRoute() { return call_method<"getRoute", jni::ref<org::apache::http::conn::routing::HttpRoute>>(); }
	void open(jni::ref<org::apache::http::conn::routing::HttpRoute> route, jni::ref<org::apache::http::protocol::HttpContext> context, jni::ref<org::apache::http::params::HttpParams> params) { return call_method<"open", void>(route, context, params); }
	void tunnelTarget(jboolean secure, jni::ref<org::apache::http::params::HttpParams> params) { return call_method<"tunnelTarget", void>(secure, params); }
	void tunnelProxy(jni::ref<org::apache::http::HttpHost> next, jboolean secure, jni::ref<org::apache::http::params::HttpParams> params) { return call_method<"tunnelProxy", void>(next, secure, params); }
	void layerProtocol(jni::ref<org::apache::http::protocol::HttpContext> context, jni::ref<org::apache::http::params::HttpParams> params) { return call_method<"layerProtocol", void>(context, params); }
	void close() { return call_method<"close", void>(); }
	void shutdown() { return call_method<"shutdown", void>(); }
	jni::ref<java::lang::Object> getState() { return call_method<"getState", jni::ref<java::lang::Object>>(); }
	void setState(jni::ref<java::lang::Object> state) { return call_method<"setState", void>(state); }

protected:

	AbstractPooledConnAdapter(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_IMPL_CONN_ABSTRACTPOOLEDCONNADAPTER
