// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/org/apache/http/HttpEntity.h>

#ifndef SCAPIX_JAVA_API_ORG_APACHE_HTTP_ENTITY_ABSTRACTHTTPENTITY_FWD
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_ENTITY_ABSTRACTHTTPENTITY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::apache::http::entity { class AbstractHttpEntity; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::apache::http::entity::AbstractHttpEntity>
{
	static constexpr fixed_string class_name = "org/apache/http/entity/AbstractHttpEntity";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::org::apache::http::HttpEntity>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_ENTITY_ABSTRACTHTTPENTITY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_APACHE_HTTP_ENTITY_ABSTRACTHTTPENTITY)
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_ENTITY_ABSTRACTHTTPENTITY

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/apache/http/Header.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::apache::http::entity::AbstractHttpEntity : public jni::object_base<"org/apache/http/entity/AbstractHttpEntity",
	java::lang::Object,
	org::apache::http::HttpEntity>
{
public:

	jni::ref<org::apache::http::Header> getContentType() { return call_method<"getContentType", jni::ref<org::apache::http::Header>>(); }
	jni::ref<org::apache::http::Header> getContentEncoding() { return call_method<"getContentEncoding", jni::ref<org::apache::http::Header>>(); }
	jboolean isChunked() { return call_method<"isChunked", jboolean>(); }
	void setContentType(jni::ref<org::apache::http::Header> contentType) { return call_method<"setContentType", void>(contentType); }
	void setContentType(jni::ref<java::lang::String> ctString) { return call_method<"setContentType", void>(ctString); }
	void setContentEncoding(jni::ref<org::apache::http::Header> contentEncoding) { return call_method<"setContentEncoding", void>(contentEncoding); }
	void setContentEncoding(jni::ref<java::lang::String> ceString) { return call_method<"setContentEncoding", void>(ceString); }
	void setChunked(jboolean b) { return call_method<"setChunked", void>(b); }
	void consumeContent() { return call_method<"consumeContent", void>(); }

protected:

	AbstractHttpEntity(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_ENTITY_ABSTRACTHTTPENTITY
