// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ORG_APACHE_HTTP_PROTOCOL_HTTP_FWD
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_PROTOCOL_HTTP_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::apache::http::protocol { class HTTP; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::apache::http::protocol::HTTP>
{
	static constexpr fixed_string class_name = "org/apache/http/protocol/HTTP";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_PROTOCOL_HTTP_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_APACHE_HTTP_PROTOCOL_HTTP)
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_PROTOCOL_HTTP

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::apache::http::protocol::HTTP : public jni::object_base<"org/apache/http/protocol/HTTP",
	java::lang::Object>
{
public:

	static jni::ref<java::lang::String> ASCII() { return get_static_field<"ASCII", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> CHARSET_PARAM() { return get_static_field<"CHARSET_PARAM", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> CHUNK_CODING() { return get_static_field<"CHUNK_CODING", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> CONN_CLOSE() { return get_static_field<"CONN_CLOSE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> CONN_DIRECTIVE() { return get_static_field<"CONN_DIRECTIVE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> CONN_KEEP_ALIVE() { return get_static_field<"CONN_KEEP_ALIVE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> CONTENT_ENCODING() { return get_static_field<"CONTENT_ENCODING", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> CONTENT_LEN() { return get_static_field<"CONTENT_LEN", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> CONTENT_TYPE() { return get_static_field<"CONTENT_TYPE", jni::ref<java::lang::String>>(); }
	static jint CR() { return get_static_field<"CR", jint>(); }
	static jni::ref<java::lang::String> DATE_HEADER() { return get_static_field<"DATE_HEADER", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> DEFAULT_CONTENT_CHARSET() { return get_static_field<"DEFAULT_CONTENT_CHARSET", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> DEFAULT_CONTENT_TYPE() { return get_static_field<"DEFAULT_CONTENT_TYPE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> DEFAULT_PROTOCOL_CHARSET() { return get_static_field<"DEFAULT_PROTOCOL_CHARSET", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> EXPECT_CONTINUE() { return get_static_field<"EXPECT_CONTINUE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> EXPECT_DIRECTIVE() { return get_static_field<"EXPECT_DIRECTIVE", jni::ref<java::lang::String>>(); }
	static jint HT() { return get_static_field<"HT", jint>(); }
	static jni::ref<java::lang::String> IDENTITY_CODING() { return get_static_field<"IDENTITY_CODING", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ISO_8859_1() { return get_static_field<"ISO_8859_1", jni::ref<java::lang::String>>(); }
	static jint LF() { return get_static_field<"LF", jint>(); }
	static jni::ref<java::lang::String> OCTET_STREAM_TYPE() { return get_static_field<"OCTET_STREAM_TYPE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> PLAIN_TEXT_TYPE() { return get_static_field<"PLAIN_TEXT_TYPE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> SERVER_HEADER() { return get_static_field<"SERVER_HEADER", jni::ref<java::lang::String>>(); }
	static jint SP() { return get_static_field<"SP", jint>(); }
	static jni::ref<java::lang::String> TARGET_HOST() { return get_static_field<"TARGET_HOST", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> TRANSFER_ENCODING() { return get_static_field<"TRANSFER_ENCODING", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> USER_AGENT() { return get_static_field<"USER_AGENT", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> US_ASCII() { return get_static_field<"US_ASCII", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> UTF_16() { return get_static_field<"UTF_16", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> UTF_8() { return get_static_field<"UTF_8", jni::ref<java::lang::String>>(); }

	static jboolean isWhitespace(jchar ch) { return call_static_method<"isWhitespace", jboolean>(ch); }

protected:

	HTTP(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_PROTOCOL_HTTP
