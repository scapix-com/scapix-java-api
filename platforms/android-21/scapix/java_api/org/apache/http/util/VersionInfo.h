// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ORG_APACHE_HTTP_UTIL_VERSIONINFO_FWD
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_UTIL_VERSIONINFO_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::apache::http::util { class VersionInfo; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::apache::http::util::VersionInfo>
{
	static constexpr fixed_string class_name = "org/apache/http/util/VersionInfo";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_UTIL_VERSIONINFO_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_APACHE_HTTP_UTIL_VERSIONINFO)
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_UTIL_VERSIONINFO

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/ClassLoader.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::apache::http::util::VersionInfo : public jni::object_base<"org/apache/http/util/VersionInfo",
	java::lang::Object>
{
public:

	static jni::ref<java::lang::String> PROPERTY_MODULE() { return get_static_field<"PROPERTY_MODULE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> PROPERTY_RELEASE() { return get_static_field<"PROPERTY_RELEASE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> PROPERTY_TIMESTAMP() { return get_static_field<"PROPERTY_TIMESTAMP", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> UNAVAILABLE() { return get_static_field<"UNAVAILABLE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> VERSION_PROPERTY_FILE() { return get_static_field<"VERSION_PROPERTY_FILE", jni::ref<java::lang::String>>(); }

	jni::ref<java::lang::String> getPackage() { return call_method<"getPackage", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getModule() { return call_method<"getModule", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getRelease() { return call_method<"getRelease", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getTimestamp() { return call_method<"getTimestamp", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getClassloader() { return call_method<"getClassloader", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	static jni::ref<jni::array<org::apache::http::util::VersionInfo>> loadVersionInfo(jni::ref<jni::array<java::lang::String>> pckgs, jni::ref<java::lang::ClassLoader> clsldr) { return call_static_method<"loadVersionInfo", jni::ref<jni::array<org::apache::http::util::VersionInfo>>>(pckgs, clsldr); }
	static jni::ref<org::apache::http::util::VersionInfo> loadVersionInfo(jni::ref<java::lang::String> pckg, jni::ref<java::lang::ClassLoader> clsldr) { return call_static_method<"loadVersionInfo", jni::ref<org::apache::http::util::VersionInfo>>(pckg, clsldr); }

protected:

	VersionInfo(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_UTIL_VERSIONINFO
