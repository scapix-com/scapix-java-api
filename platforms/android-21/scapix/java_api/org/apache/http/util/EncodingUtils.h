// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ORG_APACHE_HTTP_UTIL_ENCODINGUTILS_FWD
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_UTIL_ENCODINGUTILS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::apache::http::util { class EncodingUtils; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::apache::http::util::EncodingUtils>
{
	static constexpr fixed_string class_name = "org/apache/http/util/EncodingUtils";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_UTIL_ENCODINGUTILS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_APACHE_HTTP_UTIL_ENCODINGUTILS)
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_UTIL_ENCODINGUTILS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::apache::http::util::EncodingUtils : public jni::object_base<"org/apache/http/util/EncodingUtils",
	java::lang::Object>
{
public:

	static jni::ref<java::lang::String> getString(jni::ref<jni::array<jbyte>> data, jint offset, jint length, jni::ref<java::lang::String> charset) { return call_static_method<"getString", jni::ref<java::lang::String>>(data, offset, length, charset); }
	static jni::ref<java::lang::String> getString(jni::ref<jni::array<jbyte>> data, jni::ref<java::lang::String> charset) { return call_static_method<"getString", jni::ref<java::lang::String>>(data, charset); }
	static jni::ref<jni::array<jbyte>> getBytes(jni::ref<java::lang::String> data, jni::ref<java::lang::String> charset) { return call_static_method<"getBytes", jni::ref<jni::array<jbyte>>>(data, charset); }
	static jni::ref<jni::array<jbyte>> getAsciiBytes(jni::ref<java::lang::String> data) { return call_static_method<"getAsciiBytes", jni::ref<jni::array<jbyte>>>(data); }
	static jni::ref<java::lang::String> getAsciiString(jni::ref<jni::array<jbyte>> data, jint offset, jint length) { return call_static_method<"getAsciiString", jni::ref<java::lang::String>>(data, offset, length); }
	static jni::ref<java::lang::String> getAsciiString(jni::ref<jni::array<jbyte>> data) { return call_static_method<"getAsciiString", jni::ref<java::lang::String>>(data); }

protected:

	EncodingUtils(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_UTIL_ENCODINGUTILS
