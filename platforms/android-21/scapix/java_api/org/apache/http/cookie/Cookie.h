// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ORG_APACHE_HTTP_COOKIE_COOKIE_FWD
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_COOKIE_COOKIE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::apache::http::cookie { class Cookie; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::apache::http::cookie::Cookie>
{
	static constexpr fixed_string class_name = "org/apache/http/cookie/Cookie";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_COOKIE_COOKIE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_APACHE_HTTP_COOKIE_COOKIE)
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_COOKIE_COOKIE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Date.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::apache::http::cookie::Cookie : public jni::object_base<"org/apache/http/cookie/Cookie",
	java::lang::Object>
{
public:

	jni::ref<java::lang::String> getName() { return call_method<"getName", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getValue() { return call_method<"getValue", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getComment() { return call_method<"getComment", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getCommentURL() { return call_method<"getCommentURL", jni::ref<java::lang::String>>(); }
	jni::ref<java::util::Date> getExpiryDate() { return call_method<"getExpiryDate", jni::ref<java::util::Date>>(); }
	jboolean isPersistent() { return call_method<"isPersistent", jboolean>(); }
	jni::ref<java::lang::String> getDomain() { return call_method<"getDomain", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getPath() { return call_method<"getPath", jni::ref<java::lang::String>>(); }
	jni::ref<jni::array<jint>> getPorts() { return call_method<"getPorts", jni::ref<jni::array<jint>>>(); }
	jboolean isSecure() { return call_method<"isSecure", jboolean>(); }
	jint getVersion() { return call_method<"getVersion", jint>(); }
	jboolean isExpired(jni::ref<java::util::Date> p1) { return call_method<"isExpired", jboolean>(p1); }

protected:

	Cookie(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_COOKIE_COOKIE
