// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ORG_APACHE_HTTP_CLIENT_UTILS_URIUTILS_FWD
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_CLIENT_UTILS_URIUTILS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::apache::http::client::utils { class URIUtils; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::apache::http::client::utils::URIUtils>
{
	static constexpr fixed_string class_name = "org/apache/http/client/utils/URIUtils";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_CLIENT_UTILS_URIUTILS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_APACHE_HTTP_CLIENT_UTILS_URIUTILS)
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_CLIENT_UTILS_URIUTILS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/net/URI.h>
#include <scapix/java_api/org/apache/http/HttpHost.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::apache::http::client::utils::URIUtils : public jni::object_base<"org/apache/http/client/utils/URIUtils",
	java::lang::Object>
{
public:

	static jni::ref<java::net::URI> createURI(jni::ref<java::lang::String> scheme, jni::ref<java::lang::String> host, jint port, jni::ref<java::lang::String> path, jni::ref<java::lang::String> query, jni::ref<java::lang::String> fragment) { return call_static_method<"createURI", jni::ref<java::net::URI>>(scheme, host, port, path, query, fragment); }
	static jni::ref<java::net::URI> rewriteURI(jni::ref<java::net::URI> uri, jni::ref<org::apache::http::HttpHost> target, jboolean dropFragment) { return call_static_method<"rewriteURI", jni::ref<java::net::URI>>(uri, target, dropFragment); }
	static jni::ref<java::net::URI> rewriteURI(jni::ref<java::net::URI> uri, jni::ref<org::apache::http::HttpHost> target) { return call_static_method<"rewriteURI", jni::ref<java::net::URI>>(uri, target); }
	static jni::ref<java::net::URI> resolve(jni::ref<java::net::URI> baseURI, jni::ref<java::lang::String> reference) { return call_static_method<"resolve", jni::ref<java::net::URI>>(baseURI, reference); }
	static jni::ref<java::net::URI> resolve(jni::ref<java::net::URI> baseURI, jni::ref<java::net::URI> reference) { return call_static_method<"resolve", jni::ref<java::net::URI>>(baseURI, reference); }

protected:

	URIUtils(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_CLIENT_UTILS_URIUTILS
