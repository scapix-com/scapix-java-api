// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ORG_APACHE_HTTP_CLIENT_HTTPCLIENT_FWD
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_CLIENT_HTTPCLIENT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::apache::http::client { class HttpClient; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::apache::http::client::HttpClient>
{
	static constexpr fixed_string class_name = "org/apache/http/client/HttpClient";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_CLIENT_HTTPCLIENT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_APACHE_HTTP_CLIENT_HTTPCLIENT)
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_CLIENT_HTTPCLIENT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/org/apache/http/HttpHost.h>
#include <scapix/java_api/org/apache/http/HttpRequest.h>
#include <scapix/java_api/org/apache/http/HttpResponse.h>
#include <scapix/java_api/org/apache/http/client/ResponseHandler.h>
#include <scapix/java_api/org/apache/http/client/methods/HttpUriRequest.h>
#include <scapix/java_api/org/apache/http/conn/ClientConnectionManager.h>
#include <scapix/java_api/org/apache/http/params/HttpParams.h>
#include <scapix/java_api/org/apache/http/protocol/HttpContext.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::apache::http::client::HttpClient : public jni::object_base<"org/apache/http/client/HttpClient",
	java::lang::Object>
{
public:

	jni::ref<org::apache::http::params::HttpParams> getParams() { return call_method<"getParams", jni::ref<org::apache::http::params::HttpParams>>(); }
	jni::ref<org::apache::http::conn::ClientConnectionManager> getConnectionManager() { return call_method<"getConnectionManager", jni::ref<org::apache::http::conn::ClientConnectionManager>>(); }
	jni::ref<org::apache::http::HttpResponse> execute(jni::ref<org::apache::http::client::methods::HttpUriRequest> p1) { return call_method<"execute", jni::ref<org::apache::http::HttpResponse>>(p1); }
	jni::ref<org::apache::http::HttpResponse> execute(jni::ref<org::apache::http::client::methods::HttpUriRequest> p1, jni::ref<org::apache::http::protocol::HttpContext> p2) { return call_method<"execute", jni::ref<org::apache::http::HttpResponse>>(p1, p2); }
	jni::ref<org::apache::http::HttpResponse> execute(jni::ref<org::apache::http::HttpHost> p1, jni::ref<org::apache::http::HttpRequest> p2) { return call_method<"execute", jni::ref<org::apache::http::HttpResponse>>(p1, p2); }
	jni::ref<org::apache::http::HttpResponse> execute(jni::ref<org::apache::http::HttpHost> p1, jni::ref<org::apache::http::HttpRequest> p2, jni::ref<org::apache::http::protocol::HttpContext> p3) { return call_method<"execute", jni::ref<org::apache::http::HttpResponse>>(p1, p2, p3); }
	jni::ref<java::lang::Object> execute(jni::ref<org::apache::http::client::methods::HttpUriRequest> p1, jni::ref<org::apache::http::client::ResponseHandler> p2) { return call_method<"execute", jni::ref<java::lang::Object>>(p1, p2); }
	jni::ref<java::lang::Object> execute(jni::ref<org::apache::http::client::methods::HttpUriRequest> p1, jni::ref<org::apache::http::client::ResponseHandler> p2, jni::ref<org::apache::http::protocol::HttpContext> p3) { return call_method<"execute", jni::ref<java::lang::Object>>(p1, p2, p3); }
	jni::ref<java::lang::Object> execute(jni::ref<org::apache::http::HttpHost> p1, jni::ref<org::apache::http::HttpRequest> p2, jni::ref<org::apache::http::client::ResponseHandler> p3) { return call_method<"execute", jni::ref<java::lang::Object>>(p1, p2, p3); }
	jni::ref<java::lang::Object> execute(jni::ref<org::apache::http::HttpHost> p1, jni::ref<org::apache::http::HttpRequest> p2, jni::ref<org::apache::http::client::ResponseHandler> p3, jni::ref<org::apache::http::protocol::HttpContext> p4) { return call_method<"execute", jni::ref<java::lang::Object>>(p1, p2, p3, p4); }

protected:

	HttpClient(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_CLIENT_HTTPCLIENT
