// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/org/apache/http/params/HttpAbstractParamBean.h>

#ifndef SCAPIX_JAVA_API_ORG_APACHE_HTTP_CLIENT_PARAMS_CLIENTPARAMBEAN_FWD
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_CLIENT_PARAMS_CLIENTPARAMBEAN_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::apache::http::client::params { class ClientParamBean; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::apache::http::client::params::ClientParamBean>
{
	static constexpr fixed_string class_name = "org/apache/http/client/params/ClientParamBean";
	using base_classes = std::tuple<scapix::java_api::org::apache::http::params::HttpAbstractParamBean>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_CLIENT_PARAMS_CLIENTPARAMBEAN_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_APACHE_HTTP_CLIENT_PARAMS_CLIENTPARAMBEAN)
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_CLIENT_PARAMS_CLIENTPARAMBEAN

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Collection.h>
#include <scapix/java_api/org/apache/http/HttpHost.h>
#include <scapix/java_api/org/apache/http/conn/ClientConnectionManagerFactory.h>
#include <scapix/java_api/org/apache/http/params/HttpParams.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::apache::http::client::params::ClientParamBean : public jni::object_base<"org/apache/http/client/params/ClientParamBean",
	org::apache::http::params::HttpAbstractParamBean>
{
public:

	static jni::ref<org::apache::http::client::params::ClientParamBean> new_object(jni::ref<org::apache::http::params::HttpParams> params) { return base_::new_object(params); }
	void setConnectionManagerFactoryClassName(jni::ref<java::lang::String> factory) { return call_method<"setConnectionManagerFactoryClassName", void>(factory); }
	void setConnectionManagerFactory(jni::ref<org::apache::http::conn::ClientConnectionManagerFactory> factory) { return call_method<"setConnectionManagerFactory", void>(factory); }
	void setHandleRedirects(jboolean handle) { return call_method<"setHandleRedirects", void>(handle); }
	void setRejectRelativeRedirect(jboolean reject) { return call_method<"setRejectRelativeRedirect", void>(reject); }
	void setMaxRedirects(jint maxRedirects) { return call_method<"setMaxRedirects", void>(maxRedirects); }
	void setAllowCircularRedirects(jboolean allow) { return call_method<"setAllowCircularRedirects", void>(allow); }
	void setHandleAuthentication(jboolean handle) { return call_method<"setHandleAuthentication", void>(handle); }
	void setCookiePolicy(jni::ref<java::lang::String> policy) { return call_method<"setCookiePolicy", void>(policy); }
	void setVirtualHost(jni::ref<org::apache::http::HttpHost> host) { return call_method<"setVirtualHost", void>(host); }
	void setDefaultHeaders(jni::ref<java::util::Collection> headers) { return call_method<"setDefaultHeaders", void>(headers); }
	void setDefaultHost(jni::ref<org::apache::http::HttpHost> host) { return call_method<"setDefaultHost", void>(host); }

protected:

	ClientParamBean(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_CLIENT_PARAMS_CLIENTPARAMBEAN
