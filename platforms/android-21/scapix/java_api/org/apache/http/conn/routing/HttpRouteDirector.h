// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ORG_APACHE_HTTP_CONN_ROUTING_HTTPROUTEDIRECTOR_FWD
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_CONN_ROUTING_HTTPROUTEDIRECTOR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::apache::http::conn::routing { class HttpRouteDirector; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::apache::http::conn::routing::HttpRouteDirector>
{
	static constexpr fixed_string class_name = "org/apache/http/conn/routing/HttpRouteDirector";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_CONN_ROUTING_HTTPROUTEDIRECTOR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_APACHE_HTTP_CONN_ROUTING_HTTPROUTEDIRECTOR)
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_CONN_ROUTING_HTTPROUTEDIRECTOR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/org/apache/http/conn/routing/RouteInfo.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::apache::http::conn::routing::HttpRouteDirector : public jni::object_base<"org/apache/http/conn/routing/HttpRouteDirector",
	java::lang::Object>
{
public:

	static jint COMPLETE() { return get_static_field<"COMPLETE", jint>(); }
	static jint CONNECT_PROXY() { return get_static_field<"CONNECT_PROXY", jint>(); }
	static jint CONNECT_TARGET() { return get_static_field<"CONNECT_TARGET", jint>(); }
	static jint LAYER_PROTOCOL() { return get_static_field<"LAYER_PROTOCOL", jint>(); }
	static jint TUNNEL_PROXY() { return get_static_field<"TUNNEL_PROXY", jint>(); }
	static jint TUNNEL_TARGET() { return get_static_field<"TUNNEL_TARGET", jint>(); }
	static jint UNREACHABLE() { return get_static_field<"UNREACHABLE", jint>(); }

	jint nextStep(jni::ref<org::apache::http::conn::routing::RouteInfo> p1, jni::ref<org::apache::http::conn::routing::RouteInfo> p2) { return call_method<"nextStep", jint>(p1, p2); }

protected:

	HttpRouteDirector(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_CONN_ROUTING_HTTPROUTEDIRECTOR
