// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_UTIL_LOGGING_HANDLER_FWD
#define SCAPIX_JAVA_API_JAVA_UTIL_LOGGING_HANDLER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::util::logging { class Handler; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::util::logging::Handler>
{
	static constexpr fixed_string class_name = "java/util/logging/Handler";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_LOGGING_HANDLER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_UTIL_LOGGING_HANDLER)
#define SCAPIX_JAVA_API_JAVA_UTIL_LOGGING_HANDLER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/logging/ErrorManager.h>
#include <scapix/java_api/java/util/logging/Filter.h>
#include <scapix/java_api/java/util/logging/Formatter.h>
#include <scapix/java_api/java/util/logging/Level.h>
#include <scapix/java_api/java/util/logging/LogRecord.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::util::logging::Handler : public jni::object_base<"java/util/logging/Handler",
	java::lang::Object>
{
public:

	void close() { return call_method<"close", void>(); }
	void flush() { return call_method<"flush", void>(); }
	void publish(jni::ref<java::util::logging::LogRecord> p1) { return call_method<"publish", void>(p1); }
	jni::ref<java::lang::String> getEncoding() { return call_method<"getEncoding", jni::ref<java::lang::String>>(); }
	jni::ref<java::util::logging::ErrorManager> getErrorManager() { return call_method<"getErrorManager", jni::ref<java::util::logging::ErrorManager>>(); }
	jni::ref<java::util::logging::Filter> getFilter() { return call_method<"getFilter", jni::ref<java::util::logging::Filter>>(); }
	jni::ref<java::util::logging::Formatter> getFormatter() { return call_method<"getFormatter", jni::ref<java::util::logging::Formatter>>(); }
	jni::ref<java::util::logging::Level> getLevel() { return call_method<"getLevel", jni::ref<java::util::logging::Level>>(); }
	jboolean isLoggable(jni::ref<java::util::logging::LogRecord> record) { return call_method<"isLoggable", jboolean>(record); }
	void setEncoding(jni::ref<java::lang::String> charsetName) { return call_method<"setEncoding", void>(charsetName); }
	void setErrorManager(jni::ref<java::util::logging::ErrorManager> newErrorManager) { return call_method<"setErrorManager", void>(newErrorManager); }
	void setFilter(jni::ref<java::util::logging::Filter> newFilter) { return call_method<"setFilter", void>(newFilter); }
	void setFormatter(jni::ref<java::util::logging::Formatter> newFormatter) { return call_method<"setFormatter", void>(newFormatter); }
	void setLevel(jni::ref<java::util::logging::Level> newLevel) { return call_method<"setLevel", void>(newLevel); }

protected:

	Handler(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_LOGGING_HANDLER
