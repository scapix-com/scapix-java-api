// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_TEXT_FORMAT_DATEFORMAT_FWD
#define SCAPIX_JAVA_API_ANDROID_TEXT_FORMAT_DATEFORMAT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::text::format { class DateFormat; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::text::format::DateFormat>
{
	static constexpr fixed_string class_name = "android/text/format/DateFormat";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEXT_FORMAT_DATEFORMAT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_TEXT_FORMAT_DATEFORMAT)
#define SCAPIX_JAVA_API_ANDROID_TEXT_FORMAT_DATEFORMAT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/text/DateFormat.h>
#include <scapix/java_api/java/util/Calendar.h>
#include <scapix/java_api/java/util/Date.h>
#include <scapix/java_api/java/util/Locale.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::text::format::DateFormat : public jni::object_base<"android/text/format/DateFormat",
	java::lang::Object>
{
public:

	static jchar AM_PM() { return get_static_field<"AM_PM", jchar>(); }
	static jchar CAPITAL_AM_PM() { return get_static_field<"CAPITAL_AM_PM", jchar>(); }
	static jchar DATE() { return get_static_field<"DATE", jchar>(); }
	static jchar DAY() { return get_static_field<"DAY", jchar>(); }
	static jchar HOUR() { return get_static_field<"HOUR", jchar>(); }
	static jchar HOUR_OF_DAY() { return get_static_field<"HOUR_OF_DAY", jchar>(); }
	static jchar MINUTE() { return get_static_field<"MINUTE", jchar>(); }
	static jchar MONTH() { return get_static_field<"MONTH", jchar>(); }
	static jchar QUOTE() { return get_static_field<"QUOTE", jchar>(); }
	static jchar SECONDS() { return get_static_field<"SECONDS", jchar>(); }
	static jchar STANDALONE_MONTH() { return get_static_field<"STANDALONE_MONTH", jchar>(); }
	static jchar TIME_ZONE() { return get_static_field<"TIME_ZONE", jchar>(); }
	static jchar YEAR() { return get_static_field<"YEAR", jchar>(); }

	static jni::ref<android::text::format::DateFormat> new_object() { return base_::new_object(); }
	static jboolean is24HourFormat(jni::ref<android::content::Context> context) { return call_static_method<"is24HourFormat", jboolean>(context); }
	static jni::ref<java::lang::String> getBestDateTimePattern(jni::ref<java::util::Locale> locale, jni::ref<java::lang::String> skeleton) { return call_static_method<"getBestDateTimePattern", jni::ref<java::lang::String>>(locale, skeleton); }
	static jni::ref<java::text::DateFormat> getTimeFormat(jni::ref<android::content::Context> context) { return call_static_method<"getTimeFormat", jni::ref<java::text::DateFormat>>(context); }
	static jni::ref<java::text::DateFormat> getDateFormat(jni::ref<android::content::Context> context) { return call_static_method<"getDateFormat", jni::ref<java::text::DateFormat>>(context); }
	static jni::ref<java::text::DateFormat> getLongDateFormat(jni::ref<android::content::Context> context) { return call_static_method<"getLongDateFormat", jni::ref<java::text::DateFormat>>(context); }
	static jni::ref<java::text::DateFormat> getMediumDateFormat(jni::ref<android::content::Context> context) { return call_static_method<"getMediumDateFormat", jni::ref<java::text::DateFormat>>(context); }
	static jni::ref<jni::array<jchar>> getDateFormatOrder(jni::ref<android::content::Context> context) { return call_static_method<"getDateFormatOrder", jni::ref<jni::array<jchar>>>(context); }
	static jni::ref<java::lang::CharSequence> format(jni::ref<java::lang::CharSequence> inFormat, jlong inTimeInMillis) { return call_static_method<"format", jni::ref<java::lang::CharSequence>>(inFormat, inTimeInMillis); }
	static jni::ref<java::lang::CharSequence> format(jni::ref<java::lang::CharSequence> inFormat, jni::ref<java::util::Date> inDate) { return call_static_method<"format", jni::ref<java::lang::CharSequence>>(inFormat, inDate); }
	static jni::ref<java::lang::CharSequence> format(jni::ref<java::lang::CharSequence> inFormat, jni::ref<java::util::Calendar> inDate) { return call_static_method<"format", jni::ref<java::lang::CharSequence>>(inFormat, inDate); }

protected:

	DateFormat(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEXT_FORMAT_DATEFORMAT
