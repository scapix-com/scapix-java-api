// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_CONTENT_PM_CONFIGURATIONINFO_FWD
#define SCAPIX_JAVA_API_ANDROID_CONTENT_PM_CONFIGURATIONINFO_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::content::pm { class ConfigurationInfo; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::content::pm::ConfigurationInfo>
{
	static constexpr fixed_string class_name = "android/content/pm/ConfigurationInfo";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_CONTENT_PM_CONFIGURATIONINFO_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_CONTENT_PM_CONFIGURATIONINFO)
#define SCAPIX_JAVA_API_ANDROID_CONTENT_PM_CONFIGURATIONINFO

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::content::pm::ConfigurationInfo : public jni::object_base<"android/content/pm/ConfigurationInfo",
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }
	static jint GL_ES_VERSION_UNDEFINED() { return get_static_field<"GL_ES_VERSION_UNDEFINED", jint>(); }
	static jint INPUT_FEATURE_FIVE_WAY_NAV() { return get_static_field<"INPUT_FEATURE_FIVE_WAY_NAV", jint>(); }
	static jint INPUT_FEATURE_HARD_KEYBOARD() { return get_static_field<"INPUT_FEATURE_HARD_KEYBOARD", jint>(); }
	jint reqGlEsVersion() { return get_field<"reqGlEsVersion", jint>(); }
	void reqGlEsVersion(jint v) { set_field<"reqGlEsVersion", jint>(v); }
	jint reqInputFeatures() { return get_field<"reqInputFeatures", jint>(); }
	void reqInputFeatures(jint v) { set_field<"reqInputFeatures", jint>(v); }
	jint reqKeyboardType() { return get_field<"reqKeyboardType", jint>(); }
	void reqKeyboardType(jint v) { set_field<"reqKeyboardType", jint>(v); }
	jint reqNavigation() { return get_field<"reqNavigation", jint>(); }
	void reqNavigation(jint v) { set_field<"reqNavigation", jint>(v); }
	jint reqTouchScreen() { return get_field<"reqTouchScreen", jint>(); }
	void reqTouchScreen(jint v) { set_field<"reqTouchScreen", jint>(v); }

	static jni::ref<android::content::pm::ConfigurationInfo> new_object() { return base_::new_object(); }
	static jni::ref<android::content::pm::ConfigurationInfo> new_object(jni::ref<android::content::pm::ConfigurationInfo> orig) { return base_::new_object(orig); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	void writeToParcel(jni::ref<android::os::Parcel> dest, jint parcelableFlags) { return call_method<"writeToParcel", void>(dest, parcelableFlags); }
	jni::ref<java::lang::String> getGlEsVersion() { return call_method<"getGlEsVersion", jni::ref<java::lang::String>>(); }

protected:

	ConfigurationInfo(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_CONTENT_PM_CONFIGURATIONINFO
