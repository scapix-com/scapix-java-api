// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_CONTENT_SYNCRESULT_FWD
#define SCAPIX_JAVA_API_ANDROID_CONTENT_SYNCRESULT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::content { class SyncResult; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::content::SyncResult>
{
	static constexpr fixed_string class_name = "android/content/SyncResult";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_CONTENT_SYNCRESULT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_CONTENT_SYNCRESULT)
#define SCAPIX_JAVA_API_ANDROID_CONTENT_SYNCRESULT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/SyncStats.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::content::SyncResult : public jni::object_base<"android/content/SyncResult",
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static jni::ref<android::content::SyncResult> ALREADY_IN_PROGRESS() { return get_static_field<"ALREADY_IN_PROGRESS", jni::ref<android::content::SyncResult>>(); }
	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }
	jboolean databaseError() { return get_field<"databaseError", jboolean>(); }
	void databaseError(jboolean v) { set_field<"databaseError", jboolean>(v); }
	jlong delayUntil() { return get_field<"delayUntil", jlong>(); }
	void delayUntil(jlong v) { set_field<"delayUntil", jlong>(v); }
	jboolean fullSyncRequested() { return get_field<"fullSyncRequested", jboolean>(); }
	void fullSyncRequested(jboolean v) { set_field<"fullSyncRequested", jboolean>(v); }
	jboolean moreRecordsToGet() { return get_field<"moreRecordsToGet", jboolean>(); }
	void moreRecordsToGet(jboolean v) { set_field<"moreRecordsToGet", jboolean>(v); }
	jboolean partialSyncUnavailable() { return get_field<"partialSyncUnavailable", jboolean>(); }
	void partialSyncUnavailable(jboolean v) { set_field<"partialSyncUnavailable", jboolean>(v); }
	jni::ref<android::content::SyncStats> stats() { return get_field<"stats", jni::ref<android::content::SyncStats>>(); }
	jboolean syncAlreadyInProgress() { return get_field<"syncAlreadyInProgress", jboolean>(); }
	jboolean tooManyDeletions() { return get_field<"tooManyDeletions", jboolean>(); }
	void tooManyDeletions(jboolean v) { set_field<"tooManyDeletions", jboolean>(v); }
	jboolean tooManyRetries() { return get_field<"tooManyRetries", jboolean>(); }
	void tooManyRetries(jboolean v) { set_field<"tooManyRetries", jboolean>(v); }

	static jni::ref<android::content::SyncResult> new_object() { return base_::new_object(); }
	jboolean hasHardError() { return call_method<"hasHardError", jboolean>(); }
	jboolean hasSoftError() { return call_method<"hasSoftError", jboolean>(); }
	jboolean hasError() { return call_method<"hasError", jboolean>(); }
	jboolean madeSomeProgress() { return call_method<"madeSomeProgress", jboolean>(); }
	void clear() { return call_method<"clear", void>(); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	void writeToParcel(jni::ref<android::os::Parcel> parcel, jint flags) { return call_method<"writeToParcel", void>(parcel, flags); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> toDebugString() { return call_method<"toDebugString", jni::ref<java::lang::String>>(); }

protected:

	SyncResult(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_CONTENT_SYNCRESULT
