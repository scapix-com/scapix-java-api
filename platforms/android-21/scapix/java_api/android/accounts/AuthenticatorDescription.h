// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_ACCOUNTS_AUTHENTICATORDESCRIPTION_FWD
#define SCAPIX_JAVA_API_ANDROID_ACCOUNTS_AUTHENTICATORDESCRIPTION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::accounts { class AuthenticatorDescription; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::accounts::AuthenticatorDescription>
{
	static constexpr fixed_string class_name = "android/accounts/AuthenticatorDescription";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ACCOUNTS_AUTHENTICATORDESCRIPTION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_ACCOUNTS_AUTHENTICATORDESCRIPTION)
#define SCAPIX_JAVA_API_ANDROID_ACCOUNTS_AUTHENTICATORDESCRIPTION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::accounts::AuthenticatorDescription : public jni::object_base<"android/accounts/AuthenticatorDescription",
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }
	jint accountPreferencesId() { return get_field<"accountPreferencesId", jint>(); }
	jboolean customTokens() { return get_field<"customTokens", jboolean>(); }
	jint iconId() { return get_field<"iconId", jint>(); }
	jint labelId() { return get_field<"labelId", jint>(); }
	jni::ref<java::lang::String> packageName() { return get_field<"packageName", jni::ref<java::lang::String>>(); }
	jint smallIconId() { return get_field<"smallIconId", jint>(); }
	jni::ref<java::lang::String> type() { return get_field<"type", jni::ref<java::lang::String>>(); }

	static jni::ref<android::accounts::AuthenticatorDescription> new_object(jni::ref<java::lang::String> type, jni::ref<java::lang::String> packageName, jint labelId, jint iconId, jint smallIconId, jint prefId, jboolean customTokens) { return base_::new_object(type, packageName, labelId, iconId, smallIconId, prefId, customTokens); }
	static jni::ref<android::accounts::AuthenticatorDescription> new_object(jni::ref<java::lang::String> type, jni::ref<java::lang::String> packageName, jint labelId, jint iconId, jint smallIconId, jint prefId) { return base_::new_object(type, packageName, labelId, iconId, smallIconId, prefId); }
	static jni::ref<android::accounts::AuthenticatorDescription> newKey(jni::ref<java::lang::String> type) { return call_static_method<"newKey", jni::ref<android::accounts::AuthenticatorDescription>>(type); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jboolean equals(jni::ref<java::lang::Object> o) { return call_method<"equals", jboolean>(o); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	void writeToParcel(jni::ref<android::os::Parcel> dest, jint flags) { return call_method<"writeToParcel", void>(dest, flags); }

protected:

	AuthenticatorDescription(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ACCOUNTS_AUTHENTICATORDESCRIPTION
