// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_UTIL_XML_FWD
#define SCAPIX_JAVA_API_ANDROID_UTIL_XML_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::util { class Xml; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::util::Xml>
{
	static constexpr fixed_string class_name = "android/util/Xml";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_UTIL_XML_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_UTIL_XML)
#define SCAPIX_JAVA_API_ANDROID_UTIL_XML

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/util/Xml_Encoding.h>
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/io/Reader.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/xml/sax/ContentHandler.h>
#include <scapix/java_api/org/xmlpull/v1/XmlPullParser.h>
#include <scapix/java_api/org/xmlpull/v1/XmlSerializer.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::util::Xml : public jni::object_base<"android/util/Xml",
	java::lang::Object>
{
public:

	using Encoding = Xml_Encoding;

	static jni::ref<java::lang::String> FEATURE_RELAXED() { return get_static_field<"FEATURE_RELAXED", jni::ref<java::lang::String>>(); }
	static void FEATURE_RELAXED(jni::ref<java::lang::String> v) { set_static_field<"FEATURE_RELAXED", jni::ref<java::lang::String>>(v); }

	static void parse(jni::ref<java::lang::String> xml, jni::ref<org::xml::sax::ContentHandler> contentHandler) { return call_static_method<"parse", void>(xml, contentHandler); }
	static void parse(jni::ref<java::io::Reader> in, jni::ref<org::xml::sax::ContentHandler> contentHandler) { return call_static_method<"parse", void>(in, contentHandler); }
	static void parse(jni::ref<java::io::InputStream> in, jni::ref<android::util::Xml_Encoding> encoding, jni::ref<org::xml::sax::ContentHandler> contentHandler) { return call_static_method<"parse", void>(in, encoding, contentHandler); }
	static jni::ref<org::xmlpull::v1::XmlPullParser> newPullParser() { return call_static_method<"newPullParser", jni::ref<org::xmlpull::v1::XmlPullParser>>(); }
	static jni::ref<org::xmlpull::v1::XmlSerializer> newSerializer() { return call_static_method<"newSerializer", jni::ref<org::xmlpull::v1::XmlSerializer>>(); }
	static jni::ref<android::util::Xml_Encoding> findEncodingByName(jni::ref<java::lang::String> encodingName) { return call_static_method<"findEncodingByName", jni::ref<android::util::Xml_Encoding>>(encodingName); }
	static jni::ref<android::util::AttributeSet> asAttributeSet(jni::ref<org::xmlpull::v1::XmlPullParser> parser) { return call_static_method<"asAttributeSet", jni::ref<android::util::AttributeSet>>(parser); }

protected:

	Xml(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_UTIL_XML
