// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_NET_WIFI_SCANRESULT_FWD
#define SCAPIX_JAVA_API_ANDROID_NET_WIFI_SCANRESULT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::net::wifi { class ScanResult; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::net::wifi::ScanResult>
{
	static constexpr fixed_string class_name = "android/net/wifi/ScanResult";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_WIFI_SCANRESULT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_NET_WIFI_SCANRESULT)
#define SCAPIX_JAVA_API_ANDROID_NET_WIFI_SCANRESULT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::net::wifi::ScanResult : public jni::object_base<"android/net/wifi/ScanResult",
	java::lang::Object,
	android::os::Parcelable>
{
public:

	jni::ref<java::lang::String> BSSID() { return get_field<"BSSID", jni::ref<java::lang::String>>(); }
	void BSSID(jni::ref<java::lang::String> v) { set_field<"BSSID", jni::ref<java::lang::String>>(v); }
	jni::ref<java::lang::String> SSID() { return get_field<"SSID", jni::ref<java::lang::String>>(); }
	void SSID(jni::ref<java::lang::String> v) { set_field<"SSID", jni::ref<java::lang::String>>(v); }
	jni::ref<java::lang::String> capabilities() { return get_field<"capabilities", jni::ref<java::lang::String>>(); }
	void capabilities(jni::ref<java::lang::String> v) { set_field<"capabilities", jni::ref<java::lang::String>>(v); }
	jint frequency() { return get_field<"frequency", jint>(); }
	void frequency(jint v) { set_field<"frequency", jint>(v); }
	jint level() { return get_field<"level", jint>(); }
	void level(jint v) { set_field<"level", jint>(v); }
	jlong timestamp() { return get_field<"timestamp", jlong>(); }
	void timestamp(jlong v) { set_field<"timestamp", jlong>(v); }

	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	void writeToParcel(jni::ref<android::os::Parcel> dest, jint flags) { return call_method<"writeToParcel", void>(dest, flags); }

protected:

	ScanResult(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_WIFI_SCANRESULT
