// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_GESTURE_GESTURELIBRARIES_FWD
#define SCAPIX_JAVA_API_ANDROID_GESTURE_GESTURELIBRARIES_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::gesture { class GestureLibraries; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::gesture::GestureLibraries>
{
	static constexpr fixed_string class_name = "android/gesture/GestureLibraries";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_GESTURE_GESTURELIBRARIES_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_GESTURE_GESTURELIBRARIES)
#define SCAPIX_JAVA_API_ANDROID_GESTURE_GESTURELIBRARIES

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/gesture/GestureLibrary.h>
#include <scapix/java_api/java/io/File.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::gesture::GestureLibraries : public jni::object_base<"android/gesture/GestureLibraries",
	java::lang::Object>
{
public:

	static jni::ref<android::gesture::GestureLibrary> fromFile(jni::ref<java::lang::String> path) { return call_static_method<"fromFile", jni::ref<android::gesture::GestureLibrary>>(path); }
	static jni::ref<android::gesture::GestureLibrary> fromFile(jni::ref<java::io::File> path) { return call_static_method<"fromFile", jni::ref<android::gesture::GestureLibrary>>(path); }
	static jni::ref<android::gesture::GestureLibrary> fromPrivateFile(jni::ref<android::content::Context> context, jni::ref<java::lang::String> name) { return call_static_method<"fromPrivateFile", jni::ref<android::gesture::GestureLibrary>>(context, name); }
	static jni::ref<android::gesture::GestureLibrary> fromRawResource(jni::ref<android::content::Context> context, jint resourceId) { return call_static_method<"fromRawResource", jni::ref<android::gesture::GestureLibrary>>(context, resourceId); }

protected:

	GestureLibraries(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_GESTURE_GESTURELIBRARIES
