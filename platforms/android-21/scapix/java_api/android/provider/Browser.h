// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_PROVIDER_BROWSER_FWD
#define SCAPIX_JAVA_API_ANDROID_PROVIDER_BROWSER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::provider { class Browser; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::provider::Browser>
{
	static constexpr fixed_string class_name = "android/provider/Browser";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_PROVIDER_BROWSER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_PROVIDER_BROWSER)
#define SCAPIX_JAVA_API_ANDROID_PROVIDER_BROWSER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/ContentResolver.h>
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/database/Cursor.h>
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/android/webkit/WebIconDatabase_IconListener.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/android/provider/Browser_SearchColumns.h>
#include <scapix/java_api/android/provider/Browser_BookmarkColumns.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::provider::Browser : public jni::object_base<"android/provider/Browser",
	java::lang::Object>
{
public:

	using SearchColumns = Browser_SearchColumns;
	using BookmarkColumns = Browser_BookmarkColumns;

	static jni::ref<android::net::Uri> BOOKMARKS_URI() { return get_static_field<"BOOKMARKS_URI", jni::ref<android::net::Uri>>(); }
	static jni::ref<java::lang::String> EXTRA_APPLICATION_ID() { return get_static_field<"EXTRA_APPLICATION_ID", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> EXTRA_CREATE_NEW_TAB() { return get_static_field<"EXTRA_CREATE_NEW_TAB", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> EXTRA_HEADERS() { return get_static_field<"EXTRA_HEADERS", jni::ref<java::lang::String>>(); }
	static jni::ref<jni::array<java::lang::String>> HISTORY_PROJECTION() { return get_static_field<"HISTORY_PROJECTION", jni::ref<jni::array<java::lang::String>>>(); }
	static jint HISTORY_PROJECTION_BOOKMARK_INDEX() { return get_static_field<"HISTORY_PROJECTION_BOOKMARK_INDEX", jint>(); }
	static jint HISTORY_PROJECTION_DATE_INDEX() { return get_static_field<"HISTORY_PROJECTION_DATE_INDEX", jint>(); }
	static jint HISTORY_PROJECTION_FAVICON_INDEX() { return get_static_field<"HISTORY_PROJECTION_FAVICON_INDEX", jint>(); }
	static jint HISTORY_PROJECTION_ID_INDEX() { return get_static_field<"HISTORY_PROJECTION_ID_INDEX", jint>(); }
	static jint HISTORY_PROJECTION_TITLE_INDEX() { return get_static_field<"HISTORY_PROJECTION_TITLE_INDEX", jint>(); }
	static jint HISTORY_PROJECTION_URL_INDEX() { return get_static_field<"HISTORY_PROJECTION_URL_INDEX", jint>(); }
	static jint HISTORY_PROJECTION_VISITS_INDEX() { return get_static_field<"HISTORY_PROJECTION_VISITS_INDEX", jint>(); }
	static jni::ref<java::lang::String> INITIAL_ZOOM_LEVEL() { return get_static_field<"INITIAL_ZOOM_LEVEL", jni::ref<java::lang::String>>(); }
	static jni::ref<jni::array<java::lang::String>> SEARCHES_PROJECTION() { return get_static_field<"SEARCHES_PROJECTION", jni::ref<jni::array<java::lang::String>>>(); }
	static jint SEARCHES_PROJECTION_DATE_INDEX() { return get_static_field<"SEARCHES_PROJECTION_DATE_INDEX", jint>(); }
	static jint SEARCHES_PROJECTION_SEARCH_INDEX() { return get_static_field<"SEARCHES_PROJECTION_SEARCH_INDEX", jint>(); }
	static jni::ref<android::net::Uri> SEARCHES_URI() { return get_static_field<"SEARCHES_URI", jni::ref<android::net::Uri>>(); }
	static jni::ref<jni::array<java::lang::String>> TRUNCATE_HISTORY_PROJECTION() { return get_static_field<"TRUNCATE_HISTORY_PROJECTION", jni::ref<jni::array<java::lang::String>>>(); }
	static jint TRUNCATE_HISTORY_PROJECTION_ID_INDEX() { return get_static_field<"TRUNCATE_HISTORY_PROJECTION_ID_INDEX", jint>(); }
	static jint TRUNCATE_N_OLDEST() { return get_static_field<"TRUNCATE_N_OLDEST", jint>(); }

	static jni::ref<android::provider::Browser> new_object() { return base_::new_object(); }
	static void saveBookmark(jni::ref<android::content::Context> c, jni::ref<java::lang::String> title, jni::ref<java::lang::String> url) { return call_static_method<"saveBookmark", void>(c, title, url); }
	static void sendString(jni::ref<android::content::Context> context, jni::ref<java::lang::String> string) { return call_static_method<"sendString", void>(context, string); }
	static jni::ref<android::database::Cursor> getAllBookmarks(jni::ref<android::content::ContentResolver> cr) { return call_static_method<"getAllBookmarks", jni::ref<android::database::Cursor>>(cr); }
	static jni::ref<android::database::Cursor> getAllVisitedUrls(jni::ref<android::content::ContentResolver> cr) { return call_static_method<"getAllVisitedUrls", jni::ref<android::database::Cursor>>(cr); }
	static void updateVisitedHistory(jni::ref<android::content::ContentResolver> cr, jni::ref<java::lang::String> url, jboolean real) { return call_static_method<"updateVisitedHistory", void>(cr, url, real); }
	static void truncateHistory(jni::ref<android::content::ContentResolver> cr) { return call_static_method<"truncateHistory", void>(cr); }
	static jboolean canClearHistory(jni::ref<android::content::ContentResolver> cr) { return call_static_method<"canClearHistory", jboolean>(cr); }
	static void clearHistory(jni::ref<android::content::ContentResolver> cr) { return call_static_method<"clearHistory", void>(cr); }
	static void deleteHistoryTimeFrame(jni::ref<android::content::ContentResolver> cr, jlong begin, jlong p3) { return call_static_method<"deleteHistoryTimeFrame", void>(cr, begin, p3); }
	static void deleteFromHistory(jni::ref<android::content::ContentResolver> cr, jni::ref<java::lang::String> url) { return call_static_method<"deleteFromHistory", void>(cr, url); }
	static void addSearchUrl(jni::ref<android::content::ContentResolver> cr, jni::ref<java::lang::String> search) { return call_static_method<"addSearchUrl", void>(cr, search); }
	static void clearSearches(jni::ref<android::content::ContentResolver> cr) { return call_static_method<"clearSearches", void>(cr); }
	static void requestAllIcons(jni::ref<android::content::ContentResolver> cr, jni::ref<java::lang::String> where, jni::ref<android::webkit::WebIconDatabase_IconListener> listener) { return call_static_method<"requestAllIcons", void>(cr, where, listener); }

protected:

	Browser(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_PROVIDER_BROWSER
