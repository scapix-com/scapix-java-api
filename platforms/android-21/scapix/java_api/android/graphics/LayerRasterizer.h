// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/graphics/Rasterizer.h>

#ifndef SCAPIX_JAVA_API_ANDROID_GRAPHICS_LAYERRASTERIZER_FWD
#define SCAPIX_JAVA_API_ANDROID_GRAPHICS_LAYERRASTERIZER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::graphics { class LayerRasterizer; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::graphics::LayerRasterizer>
{
	static constexpr fixed_string class_name = "android/graphics/LayerRasterizer";
	using base_classes = std::tuple<scapix::java_api::android::graphics::Rasterizer>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_GRAPHICS_LAYERRASTERIZER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_GRAPHICS_LAYERRASTERIZER)
#define SCAPIX_JAVA_API_ANDROID_GRAPHICS_LAYERRASTERIZER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/graphics/Paint.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::graphics::LayerRasterizer : public jni::object_base<"android/graphics/LayerRasterizer",
	android::graphics::Rasterizer>
{
public:

	static jni::ref<android::graphics::LayerRasterizer> new_object() { return base_::new_object(); }
	void addLayer(jni::ref<android::graphics::Paint> paint, jfloat dx, jfloat dy) { return call_method<"addLayer", void>(paint, dx, dy); }
	void addLayer(jni::ref<android::graphics::Paint> paint) { return call_method<"addLayer", void>(paint); }

protected:

	LayerRasterizer(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_GRAPHICS_LAYERRASTERIZER
