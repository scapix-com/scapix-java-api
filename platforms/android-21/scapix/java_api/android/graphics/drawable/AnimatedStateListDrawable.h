// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/graphics/drawable/StateListDrawable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_GRAPHICS_DRAWABLE_ANIMATEDSTATELISTDRAWABLE_FWD
#define SCAPIX_JAVA_API_ANDROID_GRAPHICS_DRAWABLE_ANIMATEDSTATELISTDRAWABLE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::graphics::drawable { class AnimatedStateListDrawable; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::graphics::drawable::AnimatedStateListDrawable>
{
	static constexpr fixed_string class_name = "android/graphics/drawable/AnimatedStateListDrawable";
	using base_classes = std::tuple<scapix::java_api::android::graphics::drawable::StateListDrawable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_GRAPHICS_DRAWABLE_ANIMATEDSTATELISTDRAWABLE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_GRAPHICS_DRAWABLE_ANIMATEDSTATELISTDRAWABLE)
#define SCAPIX_JAVA_API_ANDROID_GRAPHICS_DRAWABLE_ANIMATEDSTATELISTDRAWABLE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/res/Resources.h>
#include <scapix/java_api/android/content/res/Resources_Theme.h>
#include <scapix/java_api/android/graphics/drawable/Drawable.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/org/xmlpull/v1/XmlPullParser.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::graphics::drawable::AnimatedStateListDrawable : public jni::object_base<"android/graphics/drawable/AnimatedStateListDrawable",
	android::graphics::drawable::StateListDrawable>
{
public:

	static jni::ref<android::graphics::drawable::AnimatedStateListDrawable> new_object() { return base_::new_object(); }
	jboolean setVisible(jboolean visible, jboolean restart) { return call_method<"setVisible", jboolean>(visible, restart); }
	void addState(jni::ref<jni::array<jint>> stateSet, jni::ref<android::graphics::drawable::Drawable> drawable, jint id) { return call_method<"addState", void>(stateSet, drawable, id); }
	void addTransition(jint fromId, jint toId, jni::ref<android::graphics::drawable::Drawable> transition, jboolean reversible) { return call_method<"addTransition", void>(fromId, toId, transition, reversible); }
	jboolean isStateful() { return call_method<"isStateful", jboolean>(); }
	void jumpToCurrentState() { return call_method<"jumpToCurrentState", void>(); }
	void inflate(jni::ref<android::content::res::Resources> r, jni::ref<org::xmlpull::v1::XmlPullParser> parser, jni::ref<android::util::AttributeSet> attrs, jni::ref<android::content::res::Resources_Theme> theme) { return call_method<"inflate", void>(r, parser, attrs, theme); }
	jni::ref<android::graphics::drawable::Drawable> mutate() { return call_method<"mutate", jni::ref<android::graphics::drawable::Drawable>>(); }

protected:

	AnimatedStateListDrawable(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_GRAPHICS_DRAWABLE_ANIMATEDSTATELISTDRAWABLE
