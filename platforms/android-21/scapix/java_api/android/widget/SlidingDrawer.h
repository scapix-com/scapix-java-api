// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/view/ViewGroup.h>

#ifndef SCAPIX_JAVA_API_ANDROID_WIDGET_SLIDINGDRAWER_FWD
#define SCAPIX_JAVA_API_ANDROID_WIDGET_SLIDINGDRAWER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::widget { class SlidingDrawer; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::widget::SlidingDrawer>
{
	static constexpr fixed_string class_name = "android/widget/SlidingDrawer";
	using base_classes = std::tuple<scapix::java_api::android::view::ViewGroup>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_WIDGET_SLIDINGDRAWER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_WIDGET_SLIDINGDRAWER)
#define SCAPIX_JAVA_API_ANDROID_WIDGET_SLIDINGDRAWER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/view/MotionEvent.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/android/view/accessibility/AccessibilityEvent.h>
#include <scapix/java_api/android/view/accessibility/AccessibilityNodeInfo.h>
#include <scapix/java_api/android/widget/SlidingDrawer_OnDrawerCloseListener.h>
#include <scapix/java_api/android/widget/SlidingDrawer_OnDrawerOpenListener.h>
#include <scapix/java_api/android/widget/SlidingDrawer_OnDrawerScrollListener.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::widget::SlidingDrawer : public jni::object_base<"android/widget/SlidingDrawer",
	android::view::ViewGroup>
{
public:

	using OnDrawerScrollListener = SlidingDrawer_OnDrawerScrollListener;
	using OnDrawerCloseListener = SlidingDrawer_OnDrawerCloseListener;
	using OnDrawerOpenListener = SlidingDrawer_OnDrawerOpenListener;

	static jint ORIENTATION_HORIZONTAL() { return get_static_field<"ORIENTATION_HORIZONTAL", jint>(); }
	static jint ORIENTATION_VERTICAL() { return get_static_field<"ORIENTATION_VERTICAL", jint>(); }

	static jni::ref<android::widget::SlidingDrawer> new_object(jni::ref<android::content::Context> context, jni::ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
	static jni::ref<android::widget::SlidingDrawer> new_object(jni::ref<android::content::Context> context, jni::ref<android::util::AttributeSet> attrs, jint defStyleAttr) { return base_::new_object(context, attrs, defStyleAttr); }
	static jni::ref<android::widget::SlidingDrawer> new_object(jni::ref<android::content::Context> context, jni::ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes) { return base_::new_object(context, attrs, defStyleAttr, defStyleRes); }
	jboolean onInterceptTouchEvent(jni::ref<android::view::MotionEvent> event) { return call_method<"onInterceptTouchEvent", jboolean>(event); }
	jboolean onTouchEvent(jni::ref<android::view::MotionEvent> event) { return call_method<"onTouchEvent", jboolean>(event); }
	void toggle() { return call_method<"toggle", void>(); }
	void animateToggle() { return call_method<"animateToggle", void>(); }
	void open() { return call_method<"open", void>(); }
	void close() { return call_method<"close", void>(); }
	void animateClose() { return call_method<"animateClose", void>(); }
	void animateOpen() { return call_method<"animateOpen", void>(); }
	void onInitializeAccessibilityEvent(jni::ref<android::view::accessibility::AccessibilityEvent> event) { return call_method<"onInitializeAccessibilityEvent", void>(event); }
	void onInitializeAccessibilityNodeInfo(jni::ref<android::view::accessibility::AccessibilityNodeInfo> info) { return call_method<"onInitializeAccessibilityNodeInfo", void>(info); }
	void setOnDrawerOpenListener(jni::ref<android::widget::SlidingDrawer_OnDrawerOpenListener> onDrawerOpenListener) { return call_method<"setOnDrawerOpenListener", void>(onDrawerOpenListener); }
	void setOnDrawerCloseListener(jni::ref<android::widget::SlidingDrawer_OnDrawerCloseListener> onDrawerCloseListener) { return call_method<"setOnDrawerCloseListener", void>(onDrawerCloseListener); }
	void setOnDrawerScrollListener(jni::ref<android::widget::SlidingDrawer_OnDrawerScrollListener> onDrawerScrollListener) { return call_method<"setOnDrawerScrollListener", void>(onDrawerScrollListener); }
	jni::ref<android::view::View> getHandle() { return call_method<"getHandle", jni::ref<android::view::View>>(); }
	jni::ref<android::view::View> getContent() { return call_method<"getContent", jni::ref<android::view::View>>(); }
	void unlock() { return call_method<"unlock", void>(); }
	void lock() { return call_method<"lock", void>(); }
	jboolean isOpened() { return call_method<"isOpened", jboolean>(); }
	jboolean isMoving() { return call_method<"isMoving", jboolean>(); }

protected:

	SlidingDrawer(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_WIDGET_SLIDINGDRAWER
