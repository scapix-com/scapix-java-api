// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_EFFECT_EFFECT_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_EFFECT_EFFECT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media::effect { class Effect; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::effect::Effect>
{
	static constexpr fixed_string class_name = "android/media/effect/Effect";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_EFFECT_EFFECT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_EFFECT_EFFECT)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_EFFECT_EFFECT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/media/effect/EffectUpdateListener.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::effect::Effect : public jni::object_base<"android/media/effect/Effect",
	java::lang::Object>
{
public:

	static jni::ref<android::media::effect::Effect> new_object() { return base_::new_object(); }
	jni::ref<java::lang::String> getName() { return call_method<"getName", jni::ref<java::lang::String>>(); }
	void apply(jint p1, jint p2, jint p3, jint p4) { return call_method<"apply", void>(p1, p2, p3, p4); }
	void setParameter(jni::ref<java::lang::String> p1, jni::ref<java::lang::Object> p2) { return call_method<"setParameter", void>(p1, p2); }
	void setUpdateListener(jni::ref<android::media::effect::EffectUpdateListener> listener) { return call_method<"setUpdateListener", void>(listener); }
	void release() { return call_method<"release", void>(); }

protected:

	Effect(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_EFFECT_EFFECT
