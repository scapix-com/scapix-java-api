// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_OPENGL_GLES20_FWD
#define SCAPIX_JAVA_API_ANDROID_OPENGL_GLES20_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::opengl { class GLES20; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::opengl::GLES20>
{
	static constexpr fixed_string class_name = "android/opengl/GLES20";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_OPENGL_GLES20_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_OPENGL_GLES20)
#define SCAPIX_JAVA_API_ANDROID_OPENGL_GLES20

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/nio/Buffer.h>
#include <scapix/java_api/java/nio/FloatBuffer.h>
#include <scapix/java_api/java/nio/IntBuffer.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::opengl::GLES20 : public jni::object_base<"android/opengl/GLES20",
	java::lang::Object>
{
public:

	static jint GL_ACTIVE_ATTRIBUTES() { return get_static_field<"GL_ACTIVE_ATTRIBUTES", jint>(); }
	static jint GL_ACTIVE_ATTRIBUTE_MAX_LENGTH() { return get_static_field<"GL_ACTIVE_ATTRIBUTE_MAX_LENGTH", jint>(); }
	static jint GL_ACTIVE_TEXTURE() { return get_static_field<"GL_ACTIVE_TEXTURE", jint>(); }
	static jint GL_ACTIVE_UNIFORMS() { return get_static_field<"GL_ACTIVE_UNIFORMS", jint>(); }
	static jint GL_ACTIVE_UNIFORM_MAX_LENGTH() { return get_static_field<"GL_ACTIVE_UNIFORM_MAX_LENGTH", jint>(); }
	static jint GL_ALIASED_LINE_WIDTH_RANGE() { return get_static_field<"GL_ALIASED_LINE_WIDTH_RANGE", jint>(); }
	static jint GL_ALIASED_POINT_SIZE_RANGE() { return get_static_field<"GL_ALIASED_POINT_SIZE_RANGE", jint>(); }
	static jint GL_ALPHA() { return get_static_field<"GL_ALPHA", jint>(); }
	static jint GL_ALPHA_BITS() { return get_static_field<"GL_ALPHA_BITS", jint>(); }
	static jint GL_ALWAYS() { return get_static_field<"GL_ALWAYS", jint>(); }
	static jint GL_ARRAY_BUFFER() { return get_static_field<"GL_ARRAY_BUFFER", jint>(); }
	static jint GL_ARRAY_BUFFER_BINDING() { return get_static_field<"GL_ARRAY_BUFFER_BINDING", jint>(); }
	static jint GL_ATTACHED_SHADERS() { return get_static_field<"GL_ATTACHED_SHADERS", jint>(); }
	static jint GL_BACK() { return get_static_field<"GL_BACK", jint>(); }
	static jint GL_BLEND() { return get_static_field<"GL_BLEND", jint>(); }
	static jint GL_BLEND_COLOR() { return get_static_field<"GL_BLEND_COLOR", jint>(); }
	static jint GL_BLEND_DST_ALPHA() { return get_static_field<"GL_BLEND_DST_ALPHA", jint>(); }
	static jint GL_BLEND_DST_RGB() { return get_static_field<"GL_BLEND_DST_RGB", jint>(); }
	static jint GL_BLEND_EQUATION() { return get_static_field<"GL_BLEND_EQUATION", jint>(); }
	static jint GL_BLEND_EQUATION_ALPHA() { return get_static_field<"GL_BLEND_EQUATION_ALPHA", jint>(); }
	static jint GL_BLEND_EQUATION_RGB() { return get_static_field<"GL_BLEND_EQUATION_RGB", jint>(); }
	static jint GL_BLEND_SRC_ALPHA() { return get_static_field<"GL_BLEND_SRC_ALPHA", jint>(); }
	static jint GL_BLEND_SRC_RGB() { return get_static_field<"GL_BLEND_SRC_RGB", jint>(); }
	static jint GL_BLUE_BITS() { return get_static_field<"GL_BLUE_BITS", jint>(); }
	static jint GL_BOOL() { return get_static_field<"GL_BOOL", jint>(); }
	static jint GL_BOOL_VEC2() { return get_static_field<"GL_BOOL_VEC2", jint>(); }
	static jint GL_BOOL_VEC3() { return get_static_field<"GL_BOOL_VEC3", jint>(); }
	static jint GL_BOOL_VEC4() { return get_static_field<"GL_BOOL_VEC4", jint>(); }
	static jint GL_BUFFER_SIZE() { return get_static_field<"GL_BUFFER_SIZE", jint>(); }
	static jint GL_BUFFER_USAGE() { return get_static_field<"GL_BUFFER_USAGE", jint>(); }
	static jint GL_BYTE() { return get_static_field<"GL_BYTE", jint>(); }
	static jint GL_CCW() { return get_static_field<"GL_CCW", jint>(); }
	static jint GL_CLAMP_TO_EDGE() { return get_static_field<"GL_CLAMP_TO_EDGE", jint>(); }
	static jint GL_COLOR_ATTACHMENT0() { return get_static_field<"GL_COLOR_ATTACHMENT0", jint>(); }
	static jint GL_COLOR_BUFFER_BIT() { return get_static_field<"GL_COLOR_BUFFER_BIT", jint>(); }
	static jint GL_COLOR_CLEAR_VALUE() { return get_static_field<"GL_COLOR_CLEAR_VALUE", jint>(); }
	static jint GL_COLOR_WRITEMASK() { return get_static_field<"GL_COLOR_WRITEMASK", jint>(); }
	static jint GL_COMPILE_STATUS() { return get_static_field<"GL_COMPILE_STATUS", jint>(); }
	static jint GL_COMPRESSED_TEXTURE_FORMATS() { return get_static_field<"GL_COMPRESSED_TEXTURE_FORMATS", jint>(); }
	static jint GL_CONSTANT_ALPHA() { return get_static_field<"GL_CONSTANT_ALPHA", jint>(); }
	static jint GL_CONSTANT_COLOR() { return get_static_field<"GL_CONSTANT_COLOR", jint>(); }
	static jint GL_CULL_FACE() { return get_static_field<"GL_CULL_FACE", jint>(); }
	static jint GL_CULL_FACE_MODE() { return get_static_field<"GL_CULL_FACE_MODE", jint>(); }
	static jint GL_CURRENT_PROGRAM() { return get_static_field<"GL_CURRENT_PROGRAM", jint>(); }
	static jint GL_CURRENT_VERTEX_ATTRIB() { return get_static_field<"GL_CURRENT_VERTEX_ATTRIB", jint>(); }
	static jint GL_CW() { return get_static_field<"GL_CW", jint>(); }
	static jint GL_DECR() { return get_static_field<"GL_DECR", jint>(); }
	static jint GL_DECR_WRAP() { return get_static_field<"GL_DECR_WRAP", jint>(); }
	static jint GL_DELETE_STATUS() { return get_static_field<"GL_DELETE_STATUS", jint>(); }
	static jint GL_DEPTH_ATTACHMENT() { return get_static_field<"GL_DEPTH_ATTACHMENT", jint>(); }
	static jint GL_DEPTH_BITS() { return get_static_field<"GL_DEPTH_BITS", jint>(); }
	static jint GL_DEPTH_BUFFER_BIT() { return get_static_field<"GL_DEPTH_BUFFER_BIT", jint>(); }
	static jint GL_DEPTH_CLEAR_VALUE() { return get_static_field<"GL_DEPTH_CLEAR_VALUE", jint>(); }
	static jint GL_DEPTH_COMPONENT() { return get_static_field<"GL_DEPTH_COMPONENT", jint>(); }
	static jint GL_DEPTH_COMPONENT16() { return get_static_field<"GL_DEPTH_COMPONENT16", jint>(); }
	static jint GL_DEPTH_FUNC() { return get_static_field<"GL_DEPTH_FUNC", jint>(); }
	static jint GL_DEPTH_RANGE() { return get_static_field<"GL_DEPTH_RANGE", jint>(); }
	static jint GL_DEPTH_TEST() { return get_static_field<"GL_DEPTH_TEST", jint>(); }
	static jint GL_DEPTH_WRITEMASK() { return get_static_field<"GL_DEPTH_WRITEMASK", jint>(); }
	static jint GL_DITHER() { return get_static_field<"GL_DITHER", jint>(); }
	static jint GL_DONT_CARE() { return get_static_field<"GL_DONT_CARE", jint>(); }
	static jint GL_DST_ALPHA() { return get_static_field<"GL_DST_ALPHA", jint>(); }
	static jint GL_DST_COLOR() { return get_static_field<"GL_DST_COLOR", jint>(); }
	static jint GL_DYNAMIC_DRAW() { return get_static_field<"GL_DYNAMIC_DRAW", jint>(); }
	static jint GL_ELEMENT_ARRAY_BUFFER() { return get_static_field<"GL_ELEMENT_ARRAY_BUFFER", jint>(); }
	static jint GL_ELEMENT_ARRAY_BUFFER_BINDING() { return get_static_field<"GL_ELEMENT_ARRAY_BUFFER_BINDING", jint>(); }
	static jint GL_EQUAL() { return get_static_field<"GL_EQUAL", jint>(); }
	static jint GL_EXTENSIONS() { return get_static_field<"GL_EXTENSIONS", jint>(); }
	static jint GL_FALSE() { return get_static_field<"GL_FALSE", jint>(); }
	static jint GL_FASTEST() { return get_static_field<"GL_FASTEST", jint>(); }
	static jint GL_FIXED() { return get_static_field<"GL_FIXED", jint>(); }
	static jint GL_FLOAT() { return get_static_field<"GL_FLOAT", jint>(); }
	static jint GL_FLOAT_MAT2() { return get_static_field<"GL_FLOAT_MAT2", jint>(); }
	static jint GL_FLOAT_MAT3() { return get_static_field<"GL_FLOAT_MAT3", jint>(); }
	static jint GL_FLOAT_MAT4() { return get_static_field<"GL_FLOAT_MAT4", jint>(); }
	static jint GL_FLOAT_VEC2() { return get_static_field<"GL_FLOAT_VEC2", jint>(); }
	static jint GL_FLOAT_VEC3() { return get_static_field<"GL_FLOAT_VEC3", jint>(); }
	static jint GL_FLOAT_VEC4() { return get_static_field<"GL_FLOAT_VEC4", jint>(); }
	static jint GL_FRAGMENT_SHADER() { return get_static_field<"GL_FRAGMENT_SHADER", jint>(); }
	static jint GL_FRAMEBUFFER() { return get_static_field<"GL_FRAMEBUFFER", jint>(); }
	static jint GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME() { return get_static_field<"GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME", jint>(); }
	static jint GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE() { return get_static_field<"GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE", jint>(); }
	static jint GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE() { return get_static_field<"GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE", jint>(); }
	static jint GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL() { return get_static_field<"GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL", jint>(); }
	static jint GL_FRAMEBUFFER_BINDING() { return get_static_field<"GL_FRAMEBUFFER_BINDING", jint>(); }
	static jint GL_FRAMEBUFFER_COMPLETE() { return get_static_field<"GL_FRAMEBUFFER_COMPLETE", jint>(); }
	static jint GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT() { return get_static_field<"GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT", jint>(); }
	static jint GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS() { return get_static_field<"GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS", jint>(); }
	static jint GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT() { return get_static_field<"GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT", jint>(); }
	static jint GL_FRAMEBUFFER_UNSUPPORTED() { return get_static_field<"GL_FRAMEBUFFER_UNSUPPORTED", jint>(); }
	static jint GL_FRONT() { return get_static_field<"GL_FRONT", jint>(); }
	static jint GL_FRONT_AND_BACK() { return get_static_field<"GL_FRONT_AND_BACK", jint>(); }
	static jint GL_FRONT_FACE() { return get_static_field<"GL_FRONT_FACE", jint>(); }
	static jint GL_FUNC_ADD() { return get_static_field<"GL_FUNC_ADD", jint>(); }
	static jint GL_FUNC_REVERSE_SUBTRACT() { return get_static_field<"GL_FUNC_REVERSE_SUBTRACT", jint>(); }
	static jint GL_FUNC_SUBTRACT() { return get_static_field<"GL_FUNC_SUBTRACT", jint>(); }
	static jint GL_GENERATE_MIPMAP_HINT() { return get_static_field<"GL_GENERATE_MIPMAP_HINT", jint>(); }
	static jint GL_GEQUAL() { return get_static_field<"GL_GEQUAL", jint>(); }
	static jint GL_GREATER() { return get_static_field<"GL_GREATER", jint>(); }
	static jint GL_GREEN_BITS() { return get_static_field<"GL_GREEN_BITS", jint>(); }
	static jint GL_HIGH_FLOAT() { return get_static_field<"GL_HIGH_FLOAT", jint>(); }
	static jint GL_HIGH_INT() { return get_static_field<"GL_HIGH_INT", jint>(); }
	static jint GL_IMPLEMENTATION_COLOR_READ_FORMAT() { return get_static_field<"GL_IMPLEMENTATION_COLOR_READ_FORMAT", jint>(); }
	static jint GL_IMPLEMENTATION_COLOR_READ_TYPE() { return get_static_field<"GL_IMPLEMENTATION_COLOR_READ_TYPE", jint>(); }
	static jint GL_INCR() { return get_static_field<"GL_INCR", jint>(); }
	static jint GL_INCR_WRAP() { return get_static_field<"GL_INCR_WRAP", jint>(); }
	static jint GL_INFO_LOG_LENGTH() { return get_static_field<"GL_INFO_LOG_LENGTH", jint>(); }
	static jint GL_INT() { return get_static_field<"GL_INT", jint>(); }
	static jint GL_INT_VEC2() { return get_static_field<"GL_INT_VEC2", jint>(); }
	static jint GL_INT_VEC3() { return get_static_field<"GL_INT_VEC3", jint>(); }
	static jint GL_INT_VEC4() { return get_static_field<"GL_INT_VEC4", jint>(); }
	static jint GL_INVALID_ENUM() { return get_static_field<"GL_INVALID_ENUM", jint>(); }
	static jint GL_INVALID_FRAMEBUFFER_OPERATION() { return get_static_field<"GL_INVALID_FRAMEBUFFER_OPERATION", jint>(); }
	static jint GL_INVALID_OPERATION() { return get_static_field<"GL_INVALID_OPERATION", jint>(); }
	static jint GL_INVALID_VALUE() { return get_static_field<"GL_INVALID_VALUE", jint>(); }
	static jint GL_INVERT() { return get_static_field<"GL_INVERT", jint>(); }
	static jint GL_KEEP() { return get_static_field<"GL_KEEP", jint>(); }
	static jint GL_LEQUAL() { return get_static_field<"GL_LEQUAL", jint>(); }
	static jint GL_LESS() { return get_static_field<"GL_LESS", jint>(); }
	static jint GL_LINEAR() { return get_static_field<"GL_LINEAR", jint>(); }
	static jint GL_LINEAR_MIPMAP_LINEAR() { return get_static_field<"GL_LINEAR_MIPMAP_LINEAR", jint>(); }
	static jint GL_LINEAR_MIPMAP_NEAREST() { return get_static_field<"GL_LINEAR_MIPMAP_NEAREST", jint>(); }
	static jint GL_LINES() { return get_static_field<"GL_LINES", jint>(); }
	static jint GL_LINE_LOOP() { return get_static_field<"GL_LINE_LOOP", jint>(); }
	static jint GL_LINE_STRIP() { return get_static_field<"GL_LINE_STRIP", jint>(); }
	static jint GL_LINE_WIDTH() { return get_static_field<"GL_LINE_WIDTH", jint>(); }
	static jint GL_LINK_STATUS() { return get_static_field<"GL_LINK_STATUS", jint>(); }
	static jint GL_LOW_FLOAT() { return get_static_field<"GL_LOW_FLOAT", jint>(); }
	static jint GL_LOW_INT() { return get_static_field<"GL_LOW_INT", jint>(); }
	static jint GL_LUMINANCE() { return get_static_field<"GL_LUMINANCE", jint>(); }
	static jint GL_LUMINANCE_ALPHA() { return get_static_field<"GL_LUMINANCE_ALPHA", jint>(); }
	static jint GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS() { return get_static_field<"GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS", jint>(); }
	static jint GL_MAX_CUBE_MAP_TEXTURE_SIZE() { return get_static_field<"GL_MAX_CUBE_MAP_TEXTURE_SIZE", jint>(); }
	static jint GL_MAX_FRAGMENT_UNIFORM_VECTORS() { return get_static_field<"GL_MAX_FRAGMENT_UNIFORM_VECTORS", jint>(); }
	static jint GL_MAX_RENDERBUFFER_SIZE() { return get_static_field<"GL_MAX_RENDERBUFFER_SIZE", jint>(); }
	static jint GL_MAX_TEXTURE_IMAGE_UNITS() { return get_static_field<"GL_MAX_TEXTURE_IMAGE_UNITS", jint>(); }
	static jint GL_MAX_TEXTURE_SIZE() { return get_static_field<"GL_MAX_TEXTURE_SIZE", jint>(); }
	static jint GL_MAX_VARYING_VECTORS() { return get_static_field<"GL_MAX_VARYING_VECTORS", jint>(); }
	static jint GL_MAX_VERTEX_ATTRIBS() { return get_static_field<"GL_MAX_VERTEX_ATTRIBS", jint>(); }
	static jint GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS() { return get_static_field<"GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS", jint>(); }
	static jint GL_MAX_VERTEX_UNIFORM_VECTORS() { return get_static_field<"GL_MAX_VERTEX_UNIFORM_VECTORS", jint>(); }
	static jint GL_MAX_VIEWPORT_DIMS() { return get_static_field<"GL_MAX_VIEWPORT_DIMS", jint>(); }
	static jint GL_MEDIUM_FLOAT() { return get_static_field<"GL_MEDIUM_FLOAT", jint>(); }
	static jint GL_MEDIUM_INT() { return get_static_field<"GL_MEDIUM_INT", jint>(); }
	static jint GL_MIRRORED_REPEAT() { return get_static_field<"GL_MIRRORED_REPEAT", jint>(); }
	static jint GL_NEAREST() { return get_static_field<"GL_NEAREST", jint>(); }
	static jint GL_NEAREST_MIPMAP_LINEAR() { return get_static_field<"GL_NEAREST_MIPMAP_LINEAR", jint>(); }
	static jint GL_NEAREST_MIPMAP_NEAREST() { return get_static_field<"GL_NEAREST_MIPMAP_NEAREST", jint>(); }
	static jint GL_NEVER() { return get_static_field<"GL_NEVER", jint>(); }
	static jint GL_NICEST() { return get_static_field<"GL_NICEST", jint>(); }
	static jint GL_NONE() { return get_static_field<"GL_NONE", jint>(); }
	static jint GL_NOTEQUAL() { return get_static_field<"GL_NOTEQUAL", jint>(); }
	static jint GL_NO_ERROR() { return get_static_field<"GL_NO_ERROR", jint>(); }
	static jint GL_NUM_COMPRESSED_TEXTURE_FORMATS() { return get_static_field<"GL_NUM_COMPRESSED_TEXTURE_FORMATS", jint>(); }
	static jint GL_NUM_SHADER_BINARY_FORMATS() { return get_static_field<"GL_NUM_SHADER_BINARY_FORMATS", jint>(); }
	static jint GL_ONE() { return get_static_field<"GL_ONE", jint>(); }
	static jint GL_ONE_MINUS_CONSTANT_ALPHA() { return get_static_field<"GL_ONE_MINUS_CONSTANT_ALPHA", jint>(); }
	static jint GL_ONE_MINUS_CONSTANT_COLOR() { return get_static_field<"GL_ONE_MINUS_CONSTANT_COLOR", jint>(); }
	static jint GL_ONE_MINUS_DST_ALPHA() { return get_static_field<"GL_ONE_MINUS_DST_ALPHA", jint>(); }
	static jint GL_ONE_MINUS_DST_COLOR() { return get_static_field<"GL_ONE_MINUS_DST_COLOR", jint>(); }
	static jint GL_ONE_MINUS_SRC_ALPHA() { return get_static_field<"GL_ONE_MINUS_SRC_ALPHA", jint>(); }
	static jint GL_ONE_MINUS_SRC_COLOR() { return get_static_field<"GL_ONE_MINUS_SRC_COLOR", jint>(); }
	static jint GL_OUT_OF_MEMORY() { return get_static_field<"GL_OUT_OF_MEMORY", jint>(); }
	static jint GL_PACK_ALIGNMENT() { return get_static_field<"GL_PACK_ALIGNMENT", jint>(); }
	static jint GL_POINTS() { return get_static_field<"GL_POINTS", jint>(); }
	static jint GL_POLYGON_OFFSET_FACTOR() { return get_static_field<"GL_POLYGON_OFFSET_FACTOR", jint>(); }
	static jint GL_POLYGON_OFFSET_FILL() { return get_static_field<"GL_POLYGON_OFFSET_FILL", jint>(); }
	static jint GL_POLYGON_OFFSET_UNITS() { return get_static_field<"GL_POLYGON_OFFSET_UNITS", jint>(); }
	static jint GL_RED_BITS() { return get_static_field<"GL_RED_BITS", jint>(); }
	static jint GL_RENDERBUFFER() { return get_static_field<"GL_RENDERBUFFER", jint>(); }
	static jint GL_RENDERBUFFER_ALPHA_SIZE() { return get_static_field<"GL_RENDERBUFFER_ALPHA_SIZE", jint>(); }
	static jint GL_RENDERBUFFER_BINDING() { return get_static_field<"GL_RENDERBUFFER_BINDING", jint>(); }
	static jint GL_RENDERBUFFER_BLUE_SIZE() { return get_static_field<"GL_RENDERBUFFER_BLUE_SIZE", jint>(); }
	static jint GL_RENDERBUFFER_DEPTH_SIZE() { return get_static_field<"GL_RENDERBUFFER_DEPTH_SIZE", jint>(); }
	static jint GL_RENDERBUFFER_GREEN_SIZE() { return get_static_field<"GL_RENDERBUFFER_GREEN_SIZE", jint>(); }
	static jint GL_RENDERBUFFER_HEIGHT() { return get_static_field<"GL_RENDERBUFFER_HEIGHT", jint>(); }
	static jint GL_RENDERBUFFER_INTERNAL_FORMAT() { return get_static_field<"GL_RENDERBUFFER_INTERNAL_FORMAT", jint>(); }
	static jint GL_RENDERBUFFER_RED_SIZE() { return get_static_field<"GL_RENDERBUFFER_RED_SIZE", jint>(); }
	static jint GL_RENDERBUFFER_STENCIL_SIZE() { return get_static_field<"GL_RENDERBUFFER_STENCIL_SIZE", jint>(); }
	static jint GL_RENDERBUFFER_WIDTH() { return get_static_field<"GL_RENDERBUFFER_WIDTH", jint>(); }
	static jint GL_RENDERER() { return get_static_field<"GL_RENDERER", jint>(); }
	static jint GL_REPEAT() { return get_static_field<"GL_REPEAT", jint>(); }
	static jint GL_REPLACE() { return get_static_field<"GL_REPLACE", jint>(); }
	static jint GL_RGB() { return get_static_field<"GL_RGB", jint>(); }
	static jint GL_RGB565() { return get_static_field<"GL_RGB565", jint>(); }
	static jint GL_RGB5_A1() { return get_static_field<"GL_RGB5_A1", jint>(); }
	static jint GL_RGBA() { return get_static_field<"GL_RGBA", jint>(); }
	static jint GL_RGBA4() { return get_static_field<"GL_RGBA4", jint>(); }
	static jint GL_SAMPLER_2D() { return get_static_field<"GL_SAMPLER_2D", jint>(); }
	static jint GL_SAMPLER_CUBE() { return get_static_field<"GL_SAMPLER_CUBE", jint>(); }
	static jint GL_SAMPLES() { return get_static_field<"GL_SAMPLES", jint>(); }
	static jint GL_SAMPLE_ALPHA_TO_COVERAGE() { return get_static_field<"GL_SAMPLE_ALPHA_TO_COVERAGE", jint>(); }
	static jint GL_SAMPLE_BUFFERS() { return get_static_field<"GL_SAMPLE_BUFFERS", jint>(); }
	static jint GL_SAMPLE_COVERAGE() { return get_static_field<"GL_SAMPLE_COVERAGE", jint>(); }
	static jint GL_SAMPLE_COVERAGE_INVERT() { return get_static_field<"GL_SAMPLE_COVERAGE_INVERT", jint>(); }
	static jint GL_SAMPLE_COVERAGE_VALUE() { return get_static_field<"GL_SAMPLE_COVERAGE_VALUE", jint>(); }
	static jint GL_SCISSOR_BOX() { return get_static_field<"GL_SCISSOR_BOX", jint>(); }
	static jint GL_SCISSOR_TEST() { return get_static_field<"GL_SCISSOR_TEST", jint>(); }
	static jint GL_SHADER_BINARY_FORMATS() { return get_static_field<"GL_SHADER_BINARY_FORMATS", jint>(); }
	static jint GL_SHADER_COMPILER() { return get_static_field<"GL_SHADER_COMPILER", jint>(); }
	static jint GL_SHADER_SOURCE_LENGTH() { return get_static_field<"GL_SHADER_SOURCE_LENGTH", jint>(); }
	static jint GL_SHADER_TYPE() { return get_static_field<"GL_SHADER_TYPE", jint>(); }
	static jint GL_SHADING_LANGUAGE_VERSION() { return get_static_field<"GL_SHADING_LANGUAGE_VERSION", jint>(); }
	static jint GL_SHORT() { return get_static_field<"GL_SHORT", jint>(); }
	static jint GL_SRC_ALPHA() { return get_static_field<"GL_SRC_ALPHA", jint>(); }
	static jint GL_SRC_ALPHA_SATURATE() { return get_static_field<"GL_SRC_ALPHA_SATURATE", jint>(); }
	static jint GL_SRC_COLOR() { return get_static_field<"GL_SRC_COLOR", jint>(); }
	static jint GL_STATIC_DRAW() { return get_static_field<"GL_STATIC_DRAW", jint>(); }
	static jint GL_STENCIL_ATTACHMENT() { return get_static_field<"GL_STENCIL_ATTACHMENT", jint>(); }
	static jint GL_STENCIL_BACK_FAIL() { return get_static_field<"GL_STENCIL_BACK_FAIL", jint>(); }
	static jint GL_STENCIL_BACK_FUNC() { return get_static_field<"GL_STENCIL_BACK_FUNC", jint>(); }
	static jint GL_STENCIL_BACK_PASS_DEPTH_FAIL() { return get_static_field<"GL_STENCIL_BACK_PASS_DEPTH_FAIL", jint>(); }
	static jint GL_STENCIL_BACK_PASS_DEPTH_PASS() { return get_static_field<"GL_STENCIL_BACK_PASS_DEPTH_PASS", jint>(); }
	static jint GL_STENCIL_BACK_REF() { return get_static_field<"GL_STENCIL_BACK_REF", jint>(); }
	static jint GL_STENCIL_BACK_VALUE_MASK() { return get_static_field<"GL_STENCIL_BACK_VALUE_MASK", jint>(); }
	static jint GL_STENCIL_BACK_WRITEMASK() { return get_static_field<"GL_STENCIL_BACK_WRITEMASK", jint>(); }
	static jint GL_STENCIL_BITS() { return get_static_field<"GL_STENCIL_BITS", jint>(); }
	static jint GL_STENCIL_BUFFER_BIT() { return get_static_field<"GL_STENCIL_BUFFER_BIT", jint>(); }
	static jint GL_STENCIL_CLEAR_VALUE() { return get_static_field<"GL_STENCIL_CLEAR_VALUE", jint>(); }
	static jint GL_STENCIL_FAIL() { return get_static_field<"GL_STENCIL_FAIL", jint>(); }
	static jint GL_STENCIL_FUNC() { return get_static_field<"GL_STENCIL_FUNC", jint>(); }
	static jint GL_STENCIL_INDEX() { return get_static_field<"GL_STENCIL_INDEX", jint>(); }
	static jint GL_STENCIL_INDEX8() { return get_static_field<"GL_STENCIL_INDEX8", jint>(); }
	static jint GL_STENCIL_PASS_DEPTH_FAIL() { return get_static_field<"GL_STENCIL_PASS_DEPTH_FAIL", jint>(); }
	static jint GL_STENCIL_PASS_DEPTH_PASS() { return get_static_field<"GL_STENCIL_PASS_DEPTH_PASS", jint>(); }
	static jint GL_STENCIL_REF() { return get_static_field<"GL_STENCIL_REF", jint>(); }
	static jint GL_STENCIL_TEST() { return get_static_field<"GL_STENCIL_TEST", jint>(); }
	static jint GL_STENCIL_VALUE_MASK() { return get_static_field<"GL_STENCIL_VALUE_MASK", jint>(); }
	static jint GL_STENCIL_WRITEMASK() { return get_static_field<"GL_STENCIL_WRITEMASK", jint>(); }
	static jint GL_STREAM_DRAW() { return get_static_field<"GL_STREAM_DRAW", jint>(); }
	static jint GL_SUBPIXEL_BITS() { return get_static_field<"GL_SUBPIXEL_BITS", jint>(); }
	static jint GL_TEXTURE() { return get_static_field<"GL_TEXTURE", jint>(); }
	static jint GL_TEXTURE0() { return get_static_field<"GL_TEXTURE0", jint>(); }
	static jint GL_TEXTURE1() { return get_static_field<"GL_TEXTURE1", jint>(); }
	static jint GL_TEXTURE10() { return get_static_field<"GL_TEXTURE10", jint>(); }
	static jint GL_TEXTURE11() { return get_static_field<"GL_TEXTURE11", jint>(); }
	static jint GL_TEXTURE12() { return get_static_field<"GL_TEXTURE12", jint>(); }
	static jint GL_TEXTURE13() { return get_static_field<"GL_TEXTURE13", jint>(); }
	static jint GL_TEXTURE14() { return get_static_field<"GL_TEXTURE14", jint>(); }
	static jint GL_TEXTURE15() { return get_static_field<"GL_TEXTURE15", jint>(); }
	static jint GL_TEXTURE16() { return get_static_field<"GL_TEXTURE16", jint>(); }
	static jint GL_TEXTURE17() { return get_static_field<"GL_TEXTURE17", jint>(); }
	static jint GL_TEXTURE18() { return get_static_field<"GL_TEXTURE18", jint>(); }
	static jint GL_TEXTURE19() { return get_static_field<"GL_TEXTURE19", jint>(); }
	static jint GL_TEXTURE2() { return get_static_field<"GL_TEXTURE2", jint>(); }
	static jint GL_TEXTURE20() { return get_static_field<"GL_TEXTURE20", jint>(); }
	static jint GL_TEXTURE21() { return get_static_field<"GL_TEXTURE21", jint>(); }
	static jint GL_TEXTURE22() { return get_static_field<"GL_TEXTURE22", jint>(); }
	static jint GL_TEXTURE23() { return get_static_field<"GL_TEXTURE23", jint>(); }
	static jint GL_TEXTURE24() { return get_static_field<"GL_TEXTURE24", jint>(); }
	static jint GL_TEXTURE25() { return get_static_field<"GL_TEXTURE25", jint>(); }
	static jint GL_TEXTURE26() { return get_static_field<"GL_TEXTURE26", jint>(); }
	static jint GL_TEXTURE27() { return get_static_field<"GL_TEXTURE27", jint>(); }
	static jint GL_TEXTURE28() { return get_static_field<"GL_TEXTURE28", jint>(); }
	static jint GL_TEXTURE29() { return get_static_field<"GL_TEXTURE29", jint>(); }
	static jint GL_TEXTURE3() { return get_static_field<"GL_TEXTURE3", jint>(); }
	static jint GL_TEXTURE30() { return get_static_field<"GL_TEXTURE30", jint>(); }
	static jint GL_TEXTURE31() { return get_static_field<"GL_TEXTURE31", jint>(); }
	static jint GL_TEXTURE4() { return get_static_field<"GL_TEXTURE4", jint>(); }
	static jint GL_TEXTURE5() { return get_static_field<"GL_TEXTURE5", jint>(); }
	static jint GL_TEXTURE6() { return get_static_field<"GL_TEXTURE6", jint>(); }
	static jint GL_TEXTURE7() { return get_static_field<"GL_TEXTURE7", jint>(); }
	static jint GL_TEXTURE8() { return get_static_field<"GL_TEXTURE8", jint>(); }
	static jint GL_TEXTURE9() { return get_static_field<"GL_TEXTURE9", jint>(); }
	static jint GL_TEXTURE_2D() { return get_static_field<"GL_TEXTURE_2D", jint>(); }
	static jint GL_TEXTURE_BINDING_2D() { return get_static_field<"GL_TEXTURE_BINDING_2D", jint>(); }
	static jint GL_TEXTURE_BINDING_CUBE_MAP() { return get_static_field<"GL_TEXTURE_BINDING_CUBE_MAP", jint>(); }
	static jint GL_TEXTURE_CUBE_MAP() { return get_static_field<"GL_TEXTURE_CUBE_MAP", jint>(); }
	static jint GL_TEXTURE_CUBE_MAP_NEGATIVE_X() { return get_static_field<"GL_TEXTURE_CUBE_MAP_NEGATIVE_X", jint>(); }
	static jint GL_TEXTURE_CUBE_MAP_NEGATIVE_Y() { return get_static_field<"GL_TEXTURE_CUBE_MAP_NEGATIVE_Y", jint>(); }
	static jint GL_TEXTURE_CUBE_MAP_NEGATIVE_Z() { return get_static_field<"GL_TEXTURE_CUBE_MAP_NEGATIVE_Z", jint>(); }
	static jint GL_TEXTURE_CUBE_MAP_POSITIVE_X() { return get_static_field<"GL_TEXTURE_CUBE_MAP_POSITIVE_X", jint>(); }
	static jint GL_TEXTURE_CUBE_MAP_POSITIVE_Y() { return get_static_field<"GL_TEXTURE_CUBE_MAP_POSITIVE_Y", jint>(); }
	static jint GL_TEXTURE_CUBE_MAP_POSITIVE_Z() { return get_static_field<"GL_TEXTURE_CUBE_MAP_POSITIVE_Z", jint>(); }
	static jint GL_TEXTURE_MAG_FILTER() { return get_static_field<"GL_TEXTURE_MAG_FILTER", jint>(); }
	static jint GL_TEXTURE_MIN_FILTER() { return get_static_field<"GL_TEXTURE_MIN_FILTER", jint>(); }
	static jint GL_TEXTURE_WRAP_S() { return get_static_field<"GL_TEXTURE_WRAP_S", jint>(); }
	static jint GL_TEXTURE_WRAP_T() { return get_static_field<"GL_TEXTURE_WRAP_T", jint>(); }
	static jint GL_TRIANGLES() { return get_static_field<"GL_TRIANGLES", jint>(); }
	static jint GL_TRIANGLE_FAN() { return get_static_field<"GL_TRIANGLE_FAN", jint>(); }
	static jint GL_TRIANGLE_STRIP() { return get_static_field<"GL_TRIANGLE_STRIP", jint>(); }
	static jint GL_TRUE() { return get_static_field<"GL_TRUE", jint>(); }
	static jint GL_UNPACK_ALIGNMENT() { return get_static_field<"GL_UNPACK_ALIGNMENT", jint>(); }
	static jint GL_UNSIGNED_BYTE() { return get_static_field<"GL_UNSIGNED_BYTE", jint>(); }
	static jint GL_UNSIGNED_INT() { return get_static_field<"GL_UNSIGNED_INT", jint>(); }
	static jint GL_UNSIGNED_SHORT() { return get_static_field<"GL_UNSIGNED_SHORT", jint>(); }
	static jint GL_UNSIGNED_SHORT_4_4_4_4() { return get_static_field<"GL_UNSIGNED_SHORT_4_4_4_4", jint>(); }
	static jint GL_UNSIGNED_SHORT_5_5_5_1() { return get_static_field<"GL_UNSIGNED_SHORT_5_5_5_1", jint>(); }
	static jint GL_UNSIGNED_SHORT_5_6_5() { return get_static_field<"GL_UNSIGNED_SHORT_5_6_5", jint>(); }
	static jint GL_VALIDATE_STATUS() { return get_static_field<"GL_VALIDATE_STATUS", jint>(); }
	static jint GL_VENDOR() { return get_static_field<"GL_VENDOR", jint>(); }
	static jint GL_VERSION() { return get_static_field<"GL_VERSION", jint>(); }
	static jint GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING() { return get_static_field<"GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING", jint>(); }
	static jint GL_VERTEX_ATTRIB_ARRAY_ENABLED() { return get_static_field<"GL_VERTEX_ATTRIB_ARRAY_ENABLED", jint>(); }
	static jint GL_VERTEX_ATTRIB_ARRAY_NORMALIZED() { return get_static_field<"GL_VERTEX_ATTRIB_ARRAY_NORMALIZED", jint>(); }
	static jint GL_VERTEX_ATTRIB_ARRAY_POINTER() { return get_static_field<"GL_VERTEX_ATTRIB_ARRAY_POINTER", jint>(); }
	static jint GL_VERTEX_ATTRIB_ARRAY_SIZE() { return get_static_field<"GL_VERTEX_ATTRIB_ARRAY_SIZE", jint>(); }
	static jint GL_VERTEX_ATTRIB_ARRAY_STRIDE() { return get_static_field<"GL_VERTEX_ATTRIB_ARRAY_STRIDE", jint>(); }
	static jint GL_VERTEX_ATTRIB_ARRAY_TYPE() { return get_static_field<"GL_VERTEX_ATTRIB_ARRAY_TYPE", jint>(); }
	static jint GL_VERTEX_SHADER() { return get_static_field<"GL_VERTEX_SHADER", jint>(); }
	static jint GL_VIEWPORT() { return get_static_field<"GL_VIEWPORT", jint>(); }
	static jint GL_ZERO() { return get_static_field<"GL_ZERO", jint>(); }

	static jni::ref<android::opengl::GLES20> new_object() { return base_::new_object(); }
	static void glActiveTexture(jint p1) { return call_static_method<"glActiveTexture", void>(p1); }
	static void glAttachShader(jint p1, jint p2) { return call_static_method<"glAttachShader", void>(p1, p2); }
	static void glBindAttribLocation(jint p1, jint p2, jni::ref<java::lang::String> p3) { return call_static_method<"glBindAttribLocation", void>(p1, p2, p3); }
	static void glBindBuffer(jint p1, jint p2) { return call_static_method<"glBindBuffer", void>(p1, p2); }
	static void glBindFramebuffer(jint p1, jint p2) { return call_static_method<"glBindFramebuffer", void>(p1, p2); }
	static void glBindRenderbuffer(jint p1, jint p2) { return call_static_method<"glBindRenderbuffer", void>(p1, p2); }
	static void glBindTexture(jint p1, jint p2) { return call_static_method<"glBindTexture", void>(p1, p2); }
	static void glBlendColor(jfloat p1, jfloat p2, jfloat p3, jfloat p4) { return call_static_method<"glBlendColor", void>(p1, p2, p3, p4); }
	static void glBlendEquation(jint p1) { return call_static_method<"glBlendEquation", void>(p1); }
	static void glBlendEquationSeparate(jint p1, jint p2) { return call_static_method<"glBlendEquationSeparate", void>(p1, p2); }
	static void glBlendFunc(jint p1, jint p2) { return call_static_method<"glBlendFunc", void>(p1, p2); }
	static void glBlendFuncSeparate(jint p1, jint p2, jint p3, jint p4) { return call_static_method<"glBlendFuncSeparate", void>(p1, p2, p3, p4); }
	static void glBufferData(jint p1, jint p2, jni::ref<java::nio::Buffer> p3, jint p4) { return call_static_method<"glBufferData", void>(p1, p2, p3, p4); }
	static void glBufferSubData(jint p1, jint p2, jint p3, jni::ref<java::nio::Buffer> p4) { return call_static_method<"glBufferSubData", void>(p1, p2, p3, p4); }
	static jint glCheckFramebufferStatus(jint p1) { return call_static_method<"glCheckFramebufferStatus", jint>(p1); }
	static void glClear(jint p1) { return call_static_method<"glClear", void>(p1); }
	static void glClearColor(jfloat p1, jfloat p2, jfloat p3, jfloat p4) { return call_static_method<"glClearColor", void>(p1, p2, p3, p4); }
	static void glClearDepthf(jfloat p1) { return call_static_method<"glClearDepthf", void>(p1); }
	static void glClearStencil(jint p1) { return call_static_method<"glClearStencil", void>(p1); }
	static void glColorMask(jboolean p1, jboolean p2, jboolean p3, jboolean p4) { return call_static_method<"glColorMask", void>(p1, p2, p3, p4); }
	static void glCompileShader(jint p1) { return call_static_method<"glCompileShader", void>(p1); }
	static void glCompressedTexImage2D(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6, jint p7, jni::ref<java::nio::Buffer> p8) { return call_static_method<"glCompressedTexImage2D", void>(p1, p2, p3, p4, p5, p6, p7, p8); }
	static void glCompressedTexSubImage2D(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6, jint p7, jint p8, jni::ref<java::nio::Buffer> p9) { return call_static_method<"glCompressedTexSubImage2D", void>(p1, p2, p3, p4, p5, p6, p7, p8, p9); }
	static void glCopyTexImage2D(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6, jint p7, jint p8) { return call_static_method<"glCopyTexImage2D", void>(p1, p2, p3, p4, p5, p6, p7, p8); }
	static void glCopyTexSubImage2D(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6, jint p7, jint p8) { return call_static_method<"glCopyTexSubImage2D", void>(p1, p2, p3, p4, p5, p6, p7, p8); }
	static jint glCreateProgram() { return call_static_method<"glCreateProgram", jint>(); }
	static jint glCreateShader(jint p1) { return call_static_method<"glCreateShader", jint>(p1); }
	static void glCullFace(jint p1) { return call_static_method<"glCullFace", void>(p1); }
	static void glDeleteBuffers(jint p1, jni::ref<jni::array<jint>> p2, jint p3) { return call_static_method<"glDeleteBuffers", void>(p1, p2, p3); }
	static void glDeleteBuffers(jint p1, jni::ref<java::nio::IntBuffer> p2) { return call_static_method<"glDeleteBuffers", void>(p1, p2); }
	static void glDeleteFramebuffers(jint p1, jni::ref<jni::array<jint>> p2, jint p3) { return call_static_method<"glDeleteFramebuffers", void>(p1, p2, p3); }
	static void glDeleteFramebuffers(jint p1, jni::ref<java::nio::IntBuffer> p2) { return call_static_method<"glDeleteFramebuffers", void>(p1, p2); }
	static void glDeleteProgram(jint p1) { return call_static_method<"glDeleteProgram", void>(p1); }
	static void glDeleteRenderbuffers(jint p1, jni::ref<jni::array<jint>> p2, jint p3) { return call_static_method<"glDeleteRenderbuffers", void>(p1, p2, p3); }
	static void glDeleteRenderbuffers(jint p1, jni::ref<java::nio::IntBuffer> p2) { return call_static_method<"glDeleteRenderbuffers", void>(p1, p2); }
	static void glDeleteShader(jint p1) { return call_static_method<"glDeleteShader", void>(p1); }
	static void glDeleteTextures(jint p1, jni::ref<jni::array<jint>> p2, jint p3) { return call_static_method<"glDeleteTextures", void>(p1, p2, p3); }
	static void glDeleteTextures(jint p1, jni::ref<java::nio::IntBuffer> p2) { return call_static_method<"glDeleteTextures", void>(p1, p2); }
	static void glDepthFunc(jint p1) { return call_static_method<"glDepthFunc", void>(p1); }
	static void glDepthMask(jboolean p1) { return call_static_method<"glDepthMask", void>(p1); }
	static void glDepthRangef(jfloat p1, jfloat p2) { return call_static_method<"glDepthRangef", void>(p1, p2); }
	static void glDetachShader(jint p1, jint p2) { return call_static_method<"glDetachShader", void>(p1, p2); }
	static void glDisable(jint p1) { return call_static_method<"glDisable", void>(p1); }
	static void glDisableVertexAttribArray(jint p1) { return call_static_method<"glDisableVertexAttribArray", void>(p1); }
	static void glDrawArrays(jint p1, jint p2, jint p3) { return call_static_method<"glDrawArrays", void>(p1, p2, p3); }
	static void glDrawElements(jint p1, jint p2, jint p3, jint p4) { return call_static_method<"glDrawElements", void>(p1, p2, p3, p4); }
	static void glDrawElements(jint p1, jint p2, jint p3, jni::ref<java::nio::Buffer> p4) { return call_static_method<"glDrawElements", void>(p1, p2, p3, p4); }
	static void glEnable(jint p1) { return call_static_method<"glEnable", void>(p1); }
	static void glEnableVertexAttribArray(jint p1) { return call_static_method<"glEnableVertexAttribArray", void>(p1); }
	static void glFinish() { return call_static_method<"glFinish", void>(); }
	static void glFlush() { return call_static_method<"glFlush", void>(); }
	static void glFramebufferRenderbuffer(jint p1, jint p2, jint p3, jint p4) { return call_static_method<"glFramebufferRenderbuffer", void>(p1, p2, p3, p4); }
	static void glFramebufferTexture2D(jint p1, jint p2, jint p3, jint p4, jint p5) { return call_static_method<"glFramebufferTexture2D", void>(p1, p2, p3, p4, p5); }
	static void glFrontFace(jint p1) { return call_static_method<"glFrontFace", void>(p1); }
	static void glGenBuffers(jint p1, jni::ref<jni::array<jint>> p2, jint p3) { return call_static_method<"glGenBuffers", void>(p1, p2, p3); }
	static void glGenBuffers(jint p1, jni::ref<java::nio::IntBuffer> p2) { return call_static_method<"glGenBuffers", void>(p1, p2); }
	static void glGenerateMipmap(jint p1) { return call_static_method<"glGenerateMipmap", void>(p1); }
	static void glGenFramebuffers(jint p1, jni::ref<jni::array<jint>> p2, jint p3) { return call_static_method<"glGenFramebuffers", void>(p1, p2, p3); }
	static void glGenFramebuffers(jint p1, jni::ref<java::nio::IntBuffer> p2) { return call_static_method<"glGenFramebuffers", void>(p1, p2); }
	static void glGenRenderbuffers(jint p1, jni::ref<jni::array<jint>> p2, jint p3) { return call_static_method<"glGenRenderbuffers", void>(p1, p2, p3); }
	static void glGenRenderbuffers(jint p1, jni::ref<java::nio::IntBuffer> p2) { return call_static_method<"glGenRenderbuffers", void>(p1, p2); }
	static void glGenTextures(jint p1, jni::ref<jni::array<jint>> p2, jint p3) { return call_static_method<"glGenTextures", void>(p1, p2, p3); }
	static void glGenTextures(jint p1, jni::ref<java::nio::IntBuffer> p2) { return call_static_method<"glGenTextures", void>(p1, p2); }
	static void glGetActiveAttrib(jint p1, jint p2, jint p3, jni::ref<jni::array<jint>> p4, jint p5, jni::ref<jni::array<jint>> p6, jint p7, jni::ref<jni::array<jint>> p8, jint p9, jni::ref<jni::array<jbyte>> p10, jint p11) { return call_static_method<"glGetActiveAttrib", void>(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11); }
	static jni::ref<java::lang::String> glGetActiveAttrib(jint p1, jint p2, jni::ref<jni::array<jint>> p3, jint p4, jni::ref<jni::array<jint>> p5, jint p6) { return call_static_method<"glGetActiveAttrib", jni::ref<java::lang::String>>(p1, p2, p3, p4, p5, p6); }
	static jni::ref<java::lang::String> glGetActiveAttrib(jint p1, jint p2, jni::ref<java::nio::IntBuffer> p3, jni::ref<java::nio::IntBuffer> p4) { return call_static_method<"glGetActiveAttrib", jni::ref<java::lang::String>>(p1, p2, p3, p4); }
	static void glGetActiveUniform(jint p1, jint p2, jint p3, jni::ref<jni::array<jint>> p4, jint p5, jni::ref<jni::array<jint>> p6, jint p7, jni::ref<jni::array<jint>> p8, jint p9, jni::ref<jni::array<jbyte>> p10, jint p11) { return call_static_method<"glGetActiveUniform", void>(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11); }
	static jni::ref<java::lang::String> glGetActiveUniform(jint p1, jint p2, jni::ref<jni::array<jint>> p3, jint p4, jni::ref<jni::array<jint>> p5, jint p6) { return call_static_method<"glGetActiveUniform", jni::ref<java::lang::String>>(p1, p2, p3, p4, p5, p6); }
	static jni::ref<java::lang::String> glGetActiveUniform(jint p1, jint p2, jni::ref<java::nio::IntBuffer> p3, jni::ref<java::nio::IntBuffer> p4) { return call_static_method<"glGetActiveUniform", jni::ref<java::lang::String>>(p1, p2, p3, p4); }
	static void glGetAttachedShaders(jint p1, jint p2, jni::ref<jni::array<jint>> p3, jint p4, jni::ref<jni::array<jint>> p5, jint p6) { return call_static_method<"glGetAttachedShaders", void>(p1, p2, p3, p4, p5, p6); }
	static void glGetAttachedShaders(jint p1, jint p2, jni::ref<java::nio::IntBuffer> p3, jni::ref<java::nio::IntBuffer> p4) { return call_static_method<"glGetAttachedShaders", void>(p1, p2, p3, p4); }
	static jint glGetAttribLocation(jint p1, jni::ref<java::lang::String> p2) { return call_static_method<"glGetAttribLocation", jint>(p1, p2); }
	static void glGetBooleanv(jint p1, jni::ref<jni::array<jboolean>> p2, jint p3) { return call_static_method<"glGetBooleanv", void>(p1, p2, p3); }
	static void glGetBooleanv(jint p1, jni::ref<java::nio::IntBuffer> p2) { return call_static_method<"glGetBooleanv", void>(p1, p2); }
	static void glGetBufferParameteriv(jint p1, jint p2, jni::ref<jni::array<jint>> p3, jint p4) { return call_static_method<"glGetBufferParameteriv", void>(p1, p2, p3, p4); }
	static void glGetBufferParameteriv(jint p1, jint p2, jni::ref<java::nio::IntBuffer> p3) { return call_static_method<"glGetBufferParameteriv", void>(p1, p2, p3); }
	static jint glGetError() { return call_static_method<"glGetError", jint>(); }
	static void glGetFloatv(jint p1, jni::ref<jni::array<jfloat>> p2, jint p3) { return call_static_method<"glGetFloatv", void>(p1, p2, p3); }
	static void glGetFloatv(jint p1, jni::ref<java::nio::FloatBuffer> p2) { return call_static_method<"glGetFloatv", void>(p1, p2); }
	static void glGetFramebufferAttachmentParameteriv(jint p1, jint p2, jint p3, jni::ref<jni::array<jint>> p4, jint p5) { return call_static_method<"glGetFramebufferAttachmentParameteriv", void>(p1, p2, p3, p4, p5); }
	static void glGetFramebufferAttachmentParameteriv(jint p1, jint p2, jint p3, jni::ref<java::nio::IntBuffer> p4) { return call_static_method<"glGetFramebufferAttachmentParameteriv", void>(p1, p2, p3, p4); }
	static void glGetIntegerv(jint p1, jni::ref<jni::array<jint>> p2, jint p3) { return call_static_method<"glGetIntegerv", void>(p1, p2, p3); }
	static void glGetIntegerv(jint p1, jni::ref<java::nio::IntBuffer> p2) { return call_static_method<"glGetIntegerv", void>(p1, p2); }
	static void glGetProgramiv(jint p1, jint p2, jni::ref<jni::array<jint>> p3, jint p4) { return call_static_method<"glGetProgramiv", void>(p1, p2, p3, p4); }
	static void glGetProgramiv(jint p1, jint p2, jni::ref<java::nio::IntBuffer> p3) { return call_static_method<"glGetProgramiv", void>(p1, p2, p3); }
	static jni::ref<java::lang::String> glGetProgramInfoLog(jint p1) { return call_static_method<"glGetProgramInfoLog", jni::ref<java::lang::String>>(p1); }
	static void glGetRenderbufferParameteriv(jint p1, jint p2, jni::ref<jni::array<jint>> p3, jint p4) { return call_static_method<"glGetRenderbufferParameteriv", void>(p1, p2, p3, p4); }
	static void glGetRenderbufferParameteriv(jint p1, jint p2, jni::ref<java::nio::IntBuffer> p3) { return call_static_method<"glGetRenderbufferParameteriv", void>(p1, p2, p3); }
	static void glGetShaderiv(jint p1, jint p2, jni::ref<jni::array<jint>> p3, jint p4) { return call_static_method<"glGetShaderiv", void>(p1, p2, p3, p4); }
	static void glGetShaderiv(jint p1, jint p2, jni::ref<java::nio::IntBuffer> p3) { return call_static_method<"glGetShaderiv", void>(p1, p2, p3); }
	static jni::ref<java::lang::String> glGetShaderInfoLog(jint p1) { return call_static_method<"glGetShaderInfoLog", jni::ref<java::lang::String>>(p1); }
	static void glGetShaderPrecisionFormat(jint p1, jint p2, jni::ref<jni::array<jint>> p3, jint p4, jni::ref<jni::array<jint>> p5, jint p6) { return call_static_method<"glGetShaderPrecisionFormat", void>(p1, p2, p3, p4, p5, p6); }
	static void glGetShaderPrecisionFormat(jint p1, jint p2, jni::ref<java::nio::IntBuffer> p3, jni::ref<java::nio::IntBuffer> p4) { return call_static_method<"glGetShaderPrecisionFormat", void>(p1, p2, p3, p4); }
	static void glGetShaderSource(jint p1, jint p2, jni::ref<jni::array<jint>> p3, jint p4, jni::ref<jni::array<jbyte>> p5, jint p6) { return call_static_method<"glGetShaderSource", void>(p1, p2, p3, p4, p5, p6); }
	static jni::ref<java::lang::String> glGetShaderSource(jint p1) { return call_static_method<"glGetShaderSource", jni::ref<java::lang::String>>(p1); }
	static jni::ref<java::lang::String> glGetString(jint p1) { return call_static_method<"glGetString", jni::ref<java::lang::String>>(p1); }
	static void glGetTexParameterfv(jint p1, jint p2, jni::ref<jni::array<jfloat>> p3, jint p4) { return call_static_method<"glGetTexParameterfv", void>(p1, p2, p3, p4); }
	static void glGetTexParameterfv(jint p1, jint p2, jni::ref<java::nio::FloatBuffer> p3) { return call_static_method<"glGetTexParameterfv", void>(p1, p2, p3); }
	static void glGetTexParameteriv(jint p1, jint p2, jni::ref<jni::array<jint>> p3, jint p4) { return call_static_method<"glGetTexParameteriv", void>(p1, p2, p3, p4); }
	static void glGetTexParameteriv(jint p1, jint p2, jni::ref<java::nio::IntBuffer> p3) { return call_static_method<"glGetTexParameteriv", void>(p1, p2, p3); }
	static void glGetUniformfv(jint p1, jint p2, jni::ref<jni::array<jfloat>> p3, jint p4) { return call_static_method<"glGetUniformfv", void>(p1, p2, p3, p4); }
	static void glGetUniformfv(jint p1, jint p2, jni::ref<java::nio::FloatBuffer> p3) { return call_static_method<"glGetUniformfv", void>(p1, p2, p3); }
	static void glGetUniformiv(jint p1, jint p2, jni::ref<jni::array<jint>> p3, jint p4) { return call_static_method<"glGetUniformiv", void>(p1, p2, p3, p4); }
	static void glGetUniformiv(jint p1, jint p2, jni::ref<java::nio::IntBuffer> p3) { return call_static_method<"glGetUniformiv", void>(p1, p2, p3); }
	static jint glGetUniformLocation(jint p1, jni::ref<java::lang::String> p2) { return call_static_method<"glGetUniformLocation", jint>(p1, p2); }
	static void glGetVertexAttribfv(jint p1, jint p2, jni::ref<jni::array<jfloat>> p3, jint p4) { return call_static_method<"glGetVertexAttribfv", void>(p1, p2, p3, p4); }
	static void glGetVertexAttribfv(jint p1, jint p2, jni::ref<java::nio::FloatBuffer> p3) { return call_static_method<"glGetVertexAttribfv", void>(p1, p2, p3); }
	static void glGetVertexAttribiv(jint p1, jint p2, jni::ref<jni::array<jint>> p3, jint p4) { return call_static_method<"glGetVertexAttribiv", void>(p1, p2, p3, p4); }
	static void glGetVertexAttribiv(jint p1, jint p2, jni::ref<java::nio::IntBuffer> p3) { return call_static_method<"glGetVertexAttribiv", void>(p1, p2, p3); }
	static void glHint(jint p1, jint p2) { return call_static_method<"glHint", void>(p1, p2); }
	static jboolean glIsBuffer(jint p1) { return call_static_method<"glIsBuffer", jboolean>(p1); }
	static jboolean glIsEnabled(jint p1) { return call_static_method<"glIsEnabled", jboolean>(p1); }
	static jboolean glIsFramebuffer(jint p1) { return call_static_method<"glIsFramebuffer", jboolean>(p1); }
	static jboolean glIsProgram(jint p1) { return call_static_method<"glIsProgram", jboolean>(p1); }
	static jboolean glIsRenderbuffer(jint p1) { return call_static_method<"glIsRenderbuffer", jboolean>(p1); }
	static jboolean glIsShader(jint p1) { return call_static_method<"glIsShader", jboolean>(p1); }
	static jboolean glIsTexture(jint p1) { return call_static_method<"glIsTexture", jboolean>(p1); }
	static void glLineWidth(jfloat p1) { return call_static_method<"glLineWidth", void>(p1); }
	static void glLinkProgram(jint p1) { return call_static_method<"glLinkProgram", void>(p1); }
	static void glPixelStorei(jint p1, jint p2) { return call_static_method<"glPixelStorei", void>(p1, p2); }
	static void glPolygonOffset(jfloat p1, jfloat p2) { return call_static_method<"glPolygonOffset", void>(p1, p2); }
	static void glReadPixels(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6, jni::ref<java::nio::Buffer> p7) { return call_static_method<"glReadPixels", void>(p1, p2, p3, p4, p5, p6, p7); }
	static void glReleaseShaderCompiler() { return call_static_method<"glReleaseShaderCompiler", void>(); }
	static void glRenderbufferStorage(jint p1, jint p2, jint p3, jint p4) { return call_static_method<"glRenderbufferStorage", void>(p1, p2, p3, p4); }
	static void glSampleCoverage(jfloat p1, jboolean p2) { return call_static_method<"glSampleCoverage", void>(p1, p2); }
	static void glScissor(jint p1, jint p2, jint p3, jint p4) { return call_static_method<"glScissor", void>(p1, p2, p3, p4); }
	static void glShaderBinary(jint p1, jni::ref<jni::array<jint>> p2, jint p3, jint p4, jni::ref<java::nio::Buffer> p5, jint p6) { return call_static_method<"glShaderBinary", void>(p1, p2, p3, p4, p5, p6); }
	static void glShaderBinary(jint p1, jni::ref<java::nio::IntBuffer> p2, jint p3, jni::ref<java::nio::Buffer> p4, jint p5) { return call_static_method<"glShaderBinary", void>(p1, p2, p3, p4, p5); }
	static void glShaderSource(jint p1, jni::ref<java::lang::String> p2) { return call_static_method<"glShaderSource", void>(p1, p2); }
	static void glStencilFunc(jint p1, jint p2, jint p3) { return call_static_method<"glStencilFunc", void>(p1, p2, p3); }
	static void glStencilFuncSeparate(jint p1, jint p2, jint p3, jint p4) { return call_static_method<"glStencilFuncSeparate", void>(p1, p2, p3, p4); }
	static void glStencilMask(jint p1) { return call_static_method<"glStencilMask", void>(p1); }
	static void glStencilMaskSeparate(jint p1, jint p2) { return call_static_method<"glStencilMaskSeparate", void>(p1, p2); }
	static void glStencilOp(jint p1, jint p2, jint p3) { return call_static_method<"glStencilOp", void>(p1, p2, p3); }
	static void glStencilOpSeparate(jint p1, jint p2, jint p3, jint p4) { return call_static_method<"glStencilOpSeparate", void>(p1, p2, p3, p4); }
	static void glTexImage2D(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6, jint p7, jint p8, jni::ref<java::nio::Buffer> p9) { return call_static_method<"glTexImage2D", void>(p1, p2, p3, p4, p5, p6, p7, p8, p9); }
	static void glTexParameterf(jint p1, jint p2, jfloat p3) { return call_static_method<"glTexParameterf", void>(p1, p2, p3); }
	static void glTexParameterfv(jint p1, jint p2, jni::ref<jni::array<jfloat>> p3, jint p4) { return call_static_method<"glTexParameterfv", void>(p1, p2, p3, p4); }
	static void glTexParameterfv(jint p1, jint p2, jni::ref<java::nio::FloatBuffer> p3) { return call_static_method<"glTexParameterfv", void>(p1, p2, p3); }
	static void glTexParameteri(jint p1, jint p2, jint p3) { return call_static_method<"glTexParameteri", void>(p1, p2, p3); }
	static void glTexParameteriv(jint p1, jint p2, jni::ref<jni::array<jint>> p3, jint p4) { return call_static_method<"glTexParameteriv", void>(p1, p2, p3, p4); }
	static void glTexParameteriv(jint p1, jint p2, jni::ref<java::nio::IntBuffer> p3) { return call_static_method<"glTexParameteriv", void>(p1, p2, p3); }
	static void glTexSubImage2D(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6, jint p7, jint p8, jni::ref<java::nio::Buffer> p9) { return call_static_method<"glTexSubImage2D", void>(p1, p2, p3, p4, p5, p6, p7, p8, p9); }
	static void glUniform1f(jint p1, jfloat p2) { return call_static_method<"glUniform1f", void>(p1, p2); }
	static void glUniform1fv(jint p1, jint p2, jni::ref<jni::array<jfloat>> p3, jint p4) { return call_static_method<"glUniform1fv", void>(p1, p2, p3, p4); }
	static void glUniform1fv(jint p1, jint p2, jni::ref<java::nio::FloatBuffer> p3) { return call_static_method<"glUniform1fv", void>(p1, p2, p3); }
	static void glUniform1i(jint p1, jint p2) { return call_static_method<"glUniform1i", void>(p1, p2); }
	static void glUniform1iv(jint p1, jint p2, jni::ref<jni::array<jint>> p3, jint p4) { return call_static_method<"glUniform1iv", void>(p1, p2, p3, p4); }
	static void glUniform1iv(jint p1, jint p2, jni::ref<java::nio::IntBuffer> p3) { return call_static_method<"glUniform1iv", void>(p1, p2, p3); }
	static void glUniform2f(jint p1, jfloat p2, jfloat p3) { return call_static_method<"glUniform2f", void>(p1, p2, p3); }
	static void glUniform2fv(jint p1, jint p2, jni::ref<jni::array<jfloat>> p3, jint p4) { return call_static_method<"glUniform2fv", void>(p1, p2, p3, p4); }
	static void glUniform2fv(jint p1, jint p2, jni::ref<java::nio::FloatBuffer> p3) { return call_static_method<"glUniform2fv", void>(p1, p2, p3); }
	static void glUniform2i(jint p1, jint p2, jint p3) { return call_static_method<"glUniform2i", void>(p1, p2, p3); }
	static void glUniform2iv(jint p1, jint p2, jni::ref<jni::array<jint>> p3, jint p4) { return call_static_method<"glUniform2iv", void>(p1, p2, p3, p4); }
	static void glUniform2iv(jint p1, jint p2, jni::ref<java::nio::IntBuffer> p3) { return call_static_method<"glUniform2iv", void>(p1, p2, p3); }
	static void glUniform3f(jint p1, jfloat p2, jfloat p3, jfloat p4) { return call_static_method<"glUniform3f", void>(p1, p2, p3, p4); }
	static void glUniform3fv(jint p1, jint p2, jni::ref<jni::array<jfloat>> p3, jint p4) { return call_static_method<"glUniform3fv", void>(p1, p2, p3, p4); }
	static void glUniform3fv(jint p1, jint p2, jni::ref<java::nio::FloatBuffer> p3) { return call_static_method<"glUniform3fv", void>(p1, p2, p3); }
	static void glUniform3i(jint p1, jint p2, jint p3, jint p4) { return call_static_method<"glUniform3i", void>(p1, p2, p3, p4); }
	static void glUniform3iv(jint p1, jint p2, jni::ref<jni::array<jint>> p3, jint p4) { return call_static_method<"glUniform3iv", void>(p1, p2, p3, p4); }
	static void glUniform3iv(jint p1, jint p2, jni::ref<java::nio::IntBuffer> p3) { return call_static_method<"glUniform3iv", void>(p1, p2, p3); }
	static void glUniform4f(jint p1, jfloat p2, jfloat p3, jfloat p4, jfloat p5) { return call_static_method<"glUniform4f", void>(p1, p2, p3, p4, p5); }
	static void glUniform4fv(jint p1, jint p2, jni::ref<jni::array<jfloat>> p3, jint p4) { return call_static_method<"glUniform4fv", void>(p1, p2, p3, p4); }
	static void glUniform4fv(jint p1, jint p2, jni::ref<java::nio::FloatBuffer> p3) { return call_static_method<"glUniform4fv", void>(p1, p2, p3); }
	static void glUniform4i(jint p1, jint p2, jint p3, jint p4, jint p5) { return call_static_method<"glUniform4i", void>(p1, p2, p3, p4, p5); }
	static void glUniform4iv(jint p1, jint p2, jni::ref<jni::array<jint>> p3, jint p4) { return call_static_method<"glUniform4iv", void>(p1, p2, p3, p4); }
	static void glUniform4iv(jint p1, jint p2, jni::ref<java::nio::IntBuffer> p3) { return call_static_method<"glUniform4iv", void>(p1, p2, p3); }
	static void glUniformMatrix2fv(jint p1, jint p2, jboolean p3, jni::ref<jni::array<jfloat>> p4, jint p5) { return call_static_method<"glUniformMatrix2fv", void>(p1, p2, p3, p4, p5); }
	static void glUniformMatrix2fv(jint p1, jint p2, jboolean p3, jni::ref<java::nio::FloatBuffer> p4) { return call_static_method<"glUniformMatrix2fv", void>(p1, p2, p3, p4); }
	static void glUniformMatrix3fv(jint p1, jint p2, jboolean p3, jni::ref<jni::array<jfloat>> p4, jint p5) { return call_static_method<"glUniformMatrix3fv", void>(p1, p2, p3, p4, p5); }
	static void glUniformMatrix3fv(jint p1, jint p2, jboolean p3, jni::ref<java::nio::FloatBuffer> p4) { return call_static_method<"glUniformMatrix3fv", void>(p1, p2, p3, p4); }
	static void glUniformMatrix4fv(jint p1, jint p2, jboolean p3, jni::ref<jni::array<jfloat>> p4, jint p5) { return call_static_method<"glUniformMatrix4fv", void>(p1, p2, p3, p4, p5); }
	static void glUniformMatrix4fv(jint p1, jint p2, jboolean p3, jni::ref<java::nio::FloatBuffer> p4) { return call_static_method<"glUniformMatrix4fv", void>(p1, p2, p3, p4); }
	static void glUseProgram(jint p1) { return call_static_method<"glUseProgram", void>(p1); }
	static void glValidateProgram(jint p1) { return call_static_method<"glValidateProgram", void>(p1); }
	static void glVertexAttrib1f(jint p1, jfloat p2) { return call_static_method<"glVertexAttrib1f", void>(p1, p2); }
	static void glVertexAttrib1fv(jint p1, jni::ref<jni::array<jfloat>> p2, jint p3) { return call_static_method<"glVertexAttrib1fv", void>(p1, p2, p3); }
	static void glVertexAttrib1fv(jint p1, jni::ref<java::nio::FloatBuffer> p2) { return call_static_method<"glVertexAttrib1fv", void>(p1, p2); }
	static void glVertexAttrib2f(jint p1, jfloat p2, jfloat p3) { return call_static_method<"glVertexAttrib2f", void>(p1, p2, p3); }
	static void glVertexAttrib2fv(jint p1, jni::ref<jni::array<jfloat>> p2, jint p3) { return call_static_method<"glVertexAttrib2fv", void>(p1, p2, p3); }
	static void glVertexAttrib2fv(jint p1, jni::ref<java::nio::FloatBuffer> p2) { return call_static_method<"glVertexAttrib2fv", void>(p1, p2); }
	static void glVertexAttrib3f(jint p1, jfloat p2, jfloat p3, jfloat p4) { return call_static_method<"glVertexAttrib3f", void>(p1, p2, p3, p4); }
	static void glVertexAttrib3fv(jint p1, jni::ref<jni::array<jfloat>> p2, jint p3) { return call_static_method<"glVertexAttrib3fv", void>(p1, p2, p3); }
	static void glVertexAttrib3fv(jint p1, jni::ref<java::nio::FloatBuffer> p2) { return call_static_method<"glVertexAttrib3fv", void>(p1, p2); }
	static void glVertexAttrib4f(jint p1, jfloat p2, jfloat p3, jfloat p4, jfloat p5) { return call_static_method<"glVertexAttrib4f", void>(p1, p2, p3, p4, p5); }
	static void glVertexAttrib4fv(jint p1, jni::ref<jni::array<jfloat>> p2, jint p3) { return call_static_method<"glVertexAttrib4fv", void>(p1, p2, p3); }
	static void glVertexAttrib4fv(jint p1, jni::ref<java::nio::FloatBuffer> p2) { return call_static_method<"glVertexAttrib4fv", void>(p1, p2); }
	static void glVertexAttribPointer(jint p1, jint p2, jint p3, jboolean p4, jint p5, jint p6) { return call_static_method<"glVertexAttribPointer", void>(p1, p2, p3, p4, p5, p6); }
	static void glVertexAttribPointer(jint indx, jint size, jint type, jboolean normalized, jint stride, jni::ref<java::nio::Buffer> ptr) { return call_static_method<"glVertexAttribPointer", void>(indx, size, type, normalized, stride, ptr); }
	static void glViewport(jint p1, jint p2, jint p3, jint p4) { return call_static_method<"glViewport", void>(p1, p2, p3, p4); }

protected:

	GLES20(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_OPENGL_GLES20
