// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_OPENGL_GLES31EXT_FWD
#define SCAPIX_JAVA_API_ANDROID_OPENGL_GLES31EXT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::opengl { class GLES31Ext; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::opengl::GLES31Ext>
{
	static constexpr fixed_string class_name = "android/opengl/GLES31Ext";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_OPENGL_GLES31EXT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_OPENGL_GLES31EXT)
#define SCAPIX_JAVA_API_ANDROID_OPENGL_GLES31EXT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/opengl/GLES31Ext_DebugProcKHR.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/nio/ByteBuffer.h>
#include <scapix/java_api/java/nio/IntBuffer.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::opengl::GLES31Ext : public jni::object_base<"android/opengl/GLES31Ext",
	java::lang::Object>
{
public:

	using DebugProcKHR = GLES31Ext_DebugProcKHR;

	static jint GL_BLEND_ADVANCED_COHERENT_KHR() { return get_static_field<"GL_BLEND_ADVANCED_COHERENT_KHR", jint>(); }
	static jint GL_BUFFER_KHR() { return get_static_field<"GL_BUFFER_KHR", jint>(); }
	static jint GL_CLAMP_TO_BORDER_EXT() { return get_static_field<"GL_CLAMP_TO_BORDER_EXT", jint>(); }
	static jint GL_COLORBURN_KHR() { return get_static_field<"GL_COLORBURN_KHR", jint>(); }
	static jint GL_COLORDODGE_KHR() { return get_static_field<"GL_COLORDODGE_KHR", jint>(); }
	static jint GL_COMPRESSED_RGBA_ASTC_10x10_KHR() { return get_static_field<"GL_COMPRESSED_RGBA_ASTC_10x10_KHR", jint>(); }
	static jint GL_COMPRESSED_RGBA_ASTC_10x5_KHR() { return get_static_field<"GL_COMPRESSED_RGBA_ASTC_10x5_KHR", jint>(); }
	static jint GL_COMPRESSED_RGBA_ASTC_10x6_KHR() { return get_static_field<"GL_COMPRESSED_RGBA_ASTC_10x6_KHR", jint>(); }
	static jint GL_COMPRESSED_RGBA_ASTC_10x8_KHR() { return get_static_field<"GL_COMPRESSED_RGBA_ASTC_10x8_KHR", jint>(); }
	static jint GL_COMPRESSED_RGBA_ASTC_12x10_KHR() { return get_static_field<"GL_COMPRESSED_RGBA_ASTC_12x10_KHR", jint>(); }
	static jint GL_COMPRESSED_RGBA_ASTC_12x12_KHR() { return get_static_field<"GL_COMPRESSED_RGBA_ASTC_12x12_KHR", jint>(); }
	static jint GL_COMPRESSED_RGBA_ASTC_4x4_KHR() { return get_static_field<"GL_COMPRESSED_RGBA_ASTC_4x4_KHR", jint>(); }
	static jint GL_COMPRESSED_RGBA_ASTC_5x4_KHR() { return get_static_field<"GL_COMPRESSED_RGBA_ASTC_5x4_KHR", jint>(); }
	static jint GL_COMPRESSED_RGBA_ASTC_5x5_KHR() { return get_static_field<"GL_COMPRESSED_RGBA_ASTC_5x5_KHR", jint>(); }
	static jint GL_COMPRESSED_RGBA_ASTC_6x5_KHR() { return get_static_field<"GL_COMPRESSED_RGBA_ASTC_6x5_KHR", jint>(); }
	static jint GL_COMPRESSED_RGBA_ASTC_6x6_KHR() { return get_static_field<"GL_COMPRESSED_RGBA_ASTC_6x6_KHR", jint>(); }
	static jint GL_COMPRESSED_RGBA_ASTC_8x5_KHR() { return get_static_field<"GL_COMPRESSED_RGBA_ASTC_8x5_KHR", jint>(); }
	static jint GL_COMPRESSED_RGBA_ASTC_8x6_KHR() { return get_static_field<"GL_COMPRESSED_RGBA_ASTC_8x6_KHR", jint>(); }
	static jint GL_COMPRESSED_RGBA_ASTC_8x8_KHR() { return get_static_field<"GL_COMPRESSED_RGBA_ASTC_8x8_KHR", jint>(); }
	static jint GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR() { return get_static_field<"GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR", jint>(); }
	static jint GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR() { return get_static_field<"GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR", jint>(); }
	static jint GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR() { return get_static_field<"GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR", jint>(); }
	static jint GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR() { return get_static_field<"GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR", jint>(); }
	static jint GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR() { return get_static_field<"GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR", jint>(); }
	static jint GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR() { return get_static_field<"GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR", jint>(); }
	static jint GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR() { return get_static_field<"GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR", jint>(); }
	static jint GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR() { return get_static_field<"GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR", jint>(); }
	static jint GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR() { return get_static_field<"GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR", jint>(); }
	static jint GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR() { return get_static_field<"GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR", jint>(); }
	static jint GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR() { return get_static_field<"GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR", jint>(); }
	static jint GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR() { return get_static_field<"GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR", jint>(); }
	static jint GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR() { return get_static_field<"GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR", jint>(); }
	static jint GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR() { return get_static_field<"GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR", jint>(); }
	static jint GL_CONTEXT_FLAG_DEBUG_BIT_KHR() { return get_static_field<"GL_CONTEXT_FLAG_DEBUG_BIT_KHR", jint>(); }
	static jint GL_DARKEN_KHR() { return get_static_field<"GL_DARKEN_KHR", jint>(); }
	static jint GL_DEBUG_CALLBACK_FUNCTION_KHR() { return get_static_field<"GL_DEBUG_CALLBACK_FUNCTION_KHR", jint>(); }
	static jint GL_DEBUG_CALLBACK_USER_PARAM_KHR() { return get_static_field<"GL_DEBUG_CALLBACK_USER_PARAM_KHR", jint>(); }
	static jint GL_DEBUG_GROUP_STACK_DEPTH_KHR() { return get_static_field<"GL_DEBUG_GROUP_STACK_DEPTH_KHR", jint>(); }
	static jint GL_DEBUG_LOGGED_MESSAGES_KHR() { return get_static_field<"GL_DEBUG_LOGGED_MESSAGES_KHR", jint>(); }
	static jint GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR() { return get_static_field<"GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR", jint>(); }
	static jint GL_DEBUG_OUTPUT_KHR() { return get_static_field<"GL_DEBUG_OUTPUT_KHR", jint>(); }
	static jint GL_DEBUG_OUTPUT_SYNCHRONOUS_KHR() { return get_static_field<"GL_DEBUG_OUTPUT_SYNCHRONOUS_KHR", jint>(); }
	static jint GL_DEBUG_SEVERITY_HIGH_KHR() { return get_static_field<"GL_DEBUG_SEVERITY_HIGH_KHR", jint>(); }
	static jint GL_DEBUG_SEVERITY_LOW_KHR() { return get_static_field<"GL_DEBUG_SEVERITY_LOW_KHR", jint>(); }
	static jint GL_DEBUG_SEVERITY_MEDIUM_KHR() { return get_static_field<"GL_DEBUG_SEVERITY_MEDIUM_KHR", jint>(); }
	static jint GL_DEBUG_SEVERITY_NOTIFICATION_KHR() { return get_static_field<"GL_DEBUG_SEVERITY_NOTIFICATION_KHR", jint>(); }
	static jint GL_DEBUG_SOURCE_API_KHR() { return get_static_field<"GL_DEBUG_SOURCE_API_KHR", jint>(); }
	static jint GL_DEBUG_SOURCE_APPLICATION_KHR() { return get_static_field<"GL_DEBUG_SOURCE_APPLICATION_KHR", jint>(); }
	static jint GL_DEBUG_SOURCE_OTHER_KHR() { return get_static_field<"GL_DEBUG_SOURCE_OTHER_KHR", jint>(); }
	static jint GL_DEBUG_SOURCE_SHADER_COMPILER_KHR() { return get_static_field<"GL_DEBUG_SOURCE_SHADER_COMPILER_KHR", jint>(); }
	static jint GL_DEBUG_SOURCE_THIRD_PARTY_KHR() { return get_static_field<"GL_DEBUG_SOURCE_THIRD_PARTY_KHR", jint>(); }
	static jint GL_DEBUG_SOURCE_WINDOW_SYSTEM_KHR() { return get_static_field<"GL_DEBUG_SOURCE_WINDOW_SYSTEM_KHR", jint>(); }
	static jint GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR() { return get_static_field<"GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR", jint>(); }
	static jint GL_DEBUG_TYPE_ERROR_KHR() { return get_static_field<"GL_DEBUG_TYPE_ERROR_KHR", jint>(); }
	static jint GL_DEBUG_TYPE_MARKER_KHR() { return get_static_field<"GL_DEBUG_TYPE_MARKER_KHR", jint>(); }
	static jint GL_DEBUG_TYPE_OTHER_KHR() { return get_static_field<"GL_DEBUG_TYPE_OTHER_KHR", jint>(); }
	static jint GL_DEBUG_TYPE_PERFORMANCE_KHR() { return get_static_field<"GL_DEBUG_TYPE_PERFORMANCE_KHR", jint>(); }
	static jint GL_DEBUG_TYPE_POP_GROUP_KHR() { return get_static_field<"GL_DEBUG_TYPE_POP_GROUP_KHR", jint>(); }
	static jint GL_DEBUG_TYPE_PORTABILITY_KHR() { return get_static_field<"GL_DEBUG_TYPE_PORTABILITY_KHR", jint>(); }
	static jint GL_DEBUG_TYPE_PUSH_GROUP_KHR() { return get_static_field<"GL_DEBUG_TYPE_PUSH_GROUP_KHR", jint>(); }
	static jint GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR() { return get_static_field<"GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR", jint>(); }
	static jint GL_DECODE_EXT() { return get_static_field<"GL_DECODE_EXT", jint>(); }
	static jint GL_DIFFERENCE_KHR() { return get_static_field<"GL_DIFFERENCE_KHR", jint>(); }
	static jint GL_EXCLUSION_KHR() { return get_static_field<"GL_EXCLUSION_KHR", jint>(); }
	static jint GL_FIRST_VERTEX_CONVENTION_EXT() { return get_static_field<"GL_FIRST_VERTEX_CONVENTION_EXT", jint>(); }
	static jint GL_FRACTIONAL_EVEN_EXT() { return get_static_field<"GL_FRACTIONAL_EVEN_EXT", jint>(); }
	static jint GL_FRACTIONAL_ODD_EXT() { return get_static_field<"GL_FRACTIONAL_ODD_EXT", jint>(); }
	static jint GL_FRAGMENT_INTERPOLATION_OFFSET_BITS_OES() { return get_static_field<"GL_FRAGMENT_INTERPOLATION_OFFSET_BITS_OES", jint>(); }
	static jint GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT() { return get_static_field<"GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT", jint>(); }
	static jint GL_FRAMEBUFFER_DEFAULT_LAYERS_EXT() { return get_static_field<"GL_FRAMEBUFFER_DEFAULT_LAYERS_EXT", jint>(); }
	static jint GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT() { return get_static_field<"GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT", jint>(); }
	static jint GL_GEOMETRY_LINKED_INPUT_TYPE_EXT() { return get_static_field<"GL_GEOMETRY_LINKED_INPUT_TYPE_EXT", jint>(); }
	static jint GL_GEOMETRY_LINKED_OUTPUT_TYPE_EXT() { return get_static_field<"GL_GEOMETRY_LINKED_OUTPUT_TYPE_EXT", jint>(); }
	static jint GL_GEOMETRY_LINKED_VERTICES_OUT_EXT() { return get_static_field<"GL_GEOMETRY_LINKED_VERTICES_OUT_EXT", jint>(); }
	static jint GL_GEOMETRY_SHADER_BIT_EXT() { return get_static_field<"GL_GEOMETRY_SHADER_BIT_EXT", jint>(); }
	static jint GL_GEOMETRY_SHADER_EXT() { return get_static_field<"GL_GEOMETRY_SHADER_EXT", jint>(); }
	static jint GL_GEOMETRY_SHADER_INVOCATIONS_EXT() { return get_static_field<"GL_GEOMETRY_SHADER_INVOCATIONS_EXT", jint>(); }
	static jint GL_HARDLIGHT_KHR() { return get_static_field<"GL_HARDLIGHT_KHR", jint>(); }
	static jint GL_HSL_COLOR_KHR() { return get_static_field<"GL_HSL_COLOR_KHR", jint>(); }
	static jint GL_HSL_HUE_KHR() { return get_static_field<"GL_HSL_HUE_KHR", jint>(); }
	static jint GL_HSL_LUMINOSITY_KHR() { return get_static_field<"GL_HSL_LUMINOSITY_KHR", jint>(); }
	static jint GL_HSL_SATURATION_KHR() { return get_static_field<"GL_HSL_SATURATION_KHR", jint>(); }
	static jint GL_IMAGE_BUFFER_EXT() { return get_static_field<"GL_IMAGE_BUFFER_EXT", jint>(); }
	static jint GL_IMAGE_CUBE_MAP_ARRAY_EXT() { return get_static_field<"GL_IMAGE_CUBE_MAP_ARRAY_EXT", jint>(); }
	static jint GL_INT_IMAGE_BUFFER_EXT() { return get_static_field<"GL_INT_IMAGE_BUFFER_EXT", jint>(); }
	static jint GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT() { return get_static_field<"GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT", jint>(); }
	static jint GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES() { return get_static_field<"GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES", jint>(); }
	static jint GL_INT_SAMPLER_BUFFER_EXT() { return get_static_field<"GL_INT_SAMPLER_BUFFER_EXT", jint>(); }
	static jint GL_INT_SAMPLER_CUBE_MAP_ARRAY_EXT() { return get_static_field<"GL_INT_SAMPLER_CUBE_MAP_ARRAY_EXT", jint>(); }
	static jint GL_ISOLINES_EXT() { return get_static_field<"GL_ISOLINES_EXT", jint>(); }
	static jint GL_IS_PER_PATCH_EXT() { return get_static_field<"GL_IS_PER_PATCH_EXT", jint>(); }
	static jint GL_LAST_VERTEX_CONVENTION_EXT() { return get_static_field<"GL_LAST_VERTEX_CONVENTION_EXT", jint>(); }
	static jint GL_LAYER_PROVOKING_VERTEX_EXT() { return get_static_field<"GL_LAYER_PROVOKING_VERTEX_EXT", jint>(); }
	static jint GL_LIGHTEN_KHR() { return get_static_field<"GL_LIGHTEN_KHR", jint>(); }
	static jint GL_LINES_ADJACENCY_EXT() { return get_static_field<"GL_LINES_ADJACENCY_EXT", jint>(); }
	static jint GL_LINE_STRIP_ADJACENCY_EXT() { return get_static_field<"GL_LINE_STRIP_ADJACENCY_EXT", jint>(); }
	static jint GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_EXT() { return get_static_field<"GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_EXT", jint>(); }
	static jint GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_EXT() { return get_static_field<"GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_EXT", jint>(); }
	static jint GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT() { return get_static_field<"GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT", jint>(); }
	static jint GL_MAX_DEBUG_GROUP_STACK_DEPTH_KHR() { return get_static_field<"GL_MAX_DEBUG_GROUP_STACK_DEPTH_KHR", jint>(); }
	static jint GL_MAX_DEBUG_LOGGED_MESSAGES_KHR() { return get_static_field<"GL_MAX_DEBUG_LOGGED_MESSAGES_KHR", jint>(); }
	static jint GL_MAX_DEBUG_MESSAGE_LENGTH_KHR() { return get_static_field<"GL_MAX_DEBUG_MESSAGE_LENGTH_KHR", jint>(); }
	static jint GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_OES() { return get_static_field<"GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_OES", jint>(); }
	static jint GL_MAX_FRAMEBUFFER_LAYERS_EXT() { return get_static_field<"GL_MAX_FRAMEBUFFER_LAYERS_EXT", jint>(); }
	static jint GL_MAX_GEOMETRY_ATOMIC_COUNTERS_EXT() { return get_static_field<"GL_MAX_GEOMETRY_ATOMIC_COUNTERS_EXT", jint>(); }
	static jint GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_EXT() { return get_static_field<"GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_EXT", jint>(); }
	static jint GL_MAX_GEOMETRY_IMAGE_UNIFORMS_EXT() { return get_static_field<"GL_MAX_GEOMETRY_IMAGE_UNIFORMS_EXT", jint>(); }
	static jint GL_MAX_GEOMETRY_INPUT_COMPONENTS_EXT() { return get_static_field<"GL_MAX_GEOMETRY_INPUT_COMPONENTS_EXT", jint>(); }
	static jint GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_EXT() { return get_static_field<"GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_EXT", jint>(); }
	static jint GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT() { return get_static_field<"GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT", jint>(); }
	static jint GL_MAX_GEOMETRY_SHADER_INVOCATIONS_EXT() { return get_static_field<"GL_MAX_GEOMETRY_SHADER_INVOCATIONS_EXT", jint>(); }
	static jint GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_EXT() { return get_static_field<"GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_EXT", jint>(); }
	static jint GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT() { return get_static_field<"GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT", jint>(); }
	static jint GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT() { return get_static_field<"GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT", jint>(); }
	static jint GL_MAX_GEOMETRY_UNIFORM_BLOCKS_EXT() { return get_static_field<"GL_MAX_GEOMETRY_UNIFORM_BLOCKS_EXT", jint>(); }
	static jint GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT() { return get_static_field<"GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT", jint>(); }
	static jint GL_MAX_LABEL_LENGTH_KHR() { return get_static_field<"GL_MAX_LABEL_LENGTH_KHR", jint>(); }
	static jint GL_MAX_PATCH_VERTICES_EXT() { return get_static_field<"GL_MAX_PATCH_VERTICES_EXT", jint>(); }
	static jint GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_EXT() { return get_static_field<"GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_EXT", jint>(); }
	static jint GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_EXT() { return get_static_field<"GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_EXT", jint>(); }
	static jint GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_EXT() { return get_static_field<"GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_EXT", jint>(); }
	static jint GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_EXT() { return get_static_field<"GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_EXT", jint>(); }
	static jint GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_EXT() { return get_static_field<"GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_EXT", jint>(); }
	static jint GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_EXT() { return get_static_field<"GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_EXT", jint>(); }
	static jint GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_EXT() { return get_static_field<"GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_EXT", jint>(); }
	static jint GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_EXT() { return get_static_field<"GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_EXT", jint>(); }
	static jint GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_EXT() { return get_static_field<"GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_EXT", jint>(); }
	static jint GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_EXT() { return get_static_field<"GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_EXT", jint>(); }
	static jint GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_EXT() { return get_static_field<"GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_EXT", jint>(); }
	static jint GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_EXT() { return get_static_field<"GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_EXT", jint>(); }
	static jint GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_EXT() { return get_static_field<"GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_EXT", jint>(); }
	static jint GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_EXT() { return get_static_field<"GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_EXT", jint>(); }
	static jint GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_EXT() { return get_static_field<"GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_EXT", jint>(); }
	static jint GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_EXT() { return get_static_field<"GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_EXT", jint>(); }
	static jint GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_EXT() { return get_static_field<"GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_EXT", jint>(); }
	static jint GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_EXT() { return get_static_field<"GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_EXT", jint>(); }
	static jint GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT() { return get_static_field<"GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT", jint>(); }
	static jint GL_MAX_TESS_GEN_LEVEL_EXT() { return get_static_field<"GL_MAX_TESS_GEN_LEVEL_EXT", jint>(); }
	static jint GL_MAX_TESS_PATCH_COMPONENTS_EXT() { return get_static_field<"GL_MAX_TESS_PATCH_COMPONENTS_EXT", jint>(); }
	static jint GL_MAX_TEXTURE_BUFFER_SIZE_EXT() { return get_static_field<"GL_MAX_TEXTURE_BUFFER_SIZE_EXT", jint>(); }
	static jint GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_OES() { return get_static_field<"GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_OES", jint>(); }
	static jint GL_MIN_SAMPLE_SHADING_VALUE_OES() { return get_static_field<"GL_MIN_SAMPLE_SHADING_VALUE_OES", jint>(); }
	static jint GL_MULTIPLY_KHR() { return get_static_field<"GL_MULTIPLY_KHR", jint>(); }
	static jint GL_OVERLAY_KHR() { return get_static_field<"GL_OVERLAY_KHR", jint>(); }
	static jint GL_PATCHES_EXT() { return get_static_field<"GL_PATCHES_EXT", jint>(); }
	static jint GL_PATCH_VERTICES_EXT() { return get_static_field<"GL_PATCH_VERTICES_EXT", jint>(); }
	static jint GL_PRIMITIVES_GENERATED_EXT() { return get_static_field<"GL_PRIMITIVES_GENERATED_EXT", jint>(); }
	static jint GL_PRIMITIVE_BOUNDING_BOX_EXT() { return get_static_field<"GL_PRIMITIVE_BOUNDING_BOX_EXT", jint>(); }
	static jint GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED() { return get_static_field<"GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED", jint>(); }
	static jint GL_PROGRAM_KHR() { return get_static_field<"GL_PROGRAM_KHR", jint>(); }
	static jint GL_QUADS_EXT() { return get_static_field<"GL_QUADS_EXT", jint>(); }
	static jint GL_QUERY_KHR() { return get_static_field<"GL_QUERY_KHR", jint>(); }
	static jint GL_REFERENCED_BY_GEOMETRY_SHADER_EXT() { return get_static_field<"GL_REFERENCED_BY_GEOMETRY_SHADER_EXT", jint>(); }
	static jint GL_REFERENCED_BY_TESS_CONTROL_SHADER_EXT() { return get_static_field<"GL_REFERENCED_BY_TESS_CONTROL_SHADER_EXT", jint>(); }
	static jint GL_REFERENCED_BY_TESS_EVALUATION_SHADER_EXT() { return get_static_field<"GL_REFERENCED_BY_TESS_EVALUATION_SHADER_EXT", jint>(); }
	static jint GL_SAMPLER_2D_MULTISAMPLE_ARRAY_OES() { return get_static_field<"GL_SAMPLER_2D_MULTISAMPLE_ARRAY_OES", jint>(); }
	static jint GL_SAMPLER_BUFFER_EXT() { return get_static_field<"GL_SAMPLER_BUFFER_EXT", jint>(); }
	static jint GL_SAMPLER_CUBE_MAP_ARRAY_EXT() { return get_static_field<"GL_SAMPLER_CUBE_MAP_ARRAY_EXT", jint>(); }
	static jint GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_EXT() { return get_static_field<"GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_EXT", jint>(); }
	static jint GL_SAMPLER_KHR() { return get_static_field<"GL_SAMPLER_KHR", jint>(); }
	static jint GL_SAMPLE_SHADING_OES() { return get_static_field<"GL_SAMPLE_SHADING_OES", jint>(); }
	static jint GL_SCREEN_KHR() { return get_static_field<"GL_SCREEN_KHR", jint>(); }
	static jint GL_SHADER_KHR() { return get_static_field<"GL_SHADER_KHR", jint>(); }
	static jint GL_SKIP_DECODE_EXT() { return get_static_field<"GL_SKIP_DECODE_EXT", jint>(); }
	static jint GL_SOFTLIGHT_KHR() { return get_static_field<"GL_SOFTLIGHT_KHR", jint>(); }
	static jint GL_STACK_OVERFLOW_KHR() { return get_static_field<"GL_STACK_OVERFLOW_KHR", jint>(); }
	static jint GL_STACK_UNDERFLOW_KHR() { return get_static_field<"GL_STACK_UNDERFLOW_KHR", jint>(); }
	static jint GL_STENCIL_INDEX8_OES() { return get_static_field<"GL_STENCIL_INDEX8_OES", jint>(); }
	static jint GL_STENCIL_INDEX_OES() { return get_static_field<"GL_STENCIL_INDEX_OES", jint>(); }
	static jint GL_TESS_CONTROL_OUTPUT_VERTICES_EXT() { return get_static_field<"GL_TESS_CONTROL_OUTPUT_VERTICES_EXT", jint>(); }
	static jint GL_TESS_CONTROL_SHADER_BIT_EXT() { return get_static_field<"GL_TESS_CONTROL_SHADER_BIT_EXT", jint>(); }
	static jint GL_TESS_CONTROL_SHADER_EXT() { return get_static_field<"GL_TESS_CONTROL_SHADER_EXT", jint>(); }
	static jint GL_TESS_EVALUATION_SHADER_BIT_EXT() { return get_static_field<"GL_TESS_EVALUATION_SHADER_BIT_EXT", jint>(); }
	static jint GL_TESS_EVALUATION_SHADER_EXT() { return get_static_field<"GL_TESS_EVALUATION_SHADER_EXT", jint>(); }
	static jint GL_TESS_GEN_MODE_EXT() { return get_static_field<"GL_TESS_GEN_MODE_EXT", jint>(); }
	static jint GL_TESS_GEN_POINT_MODE_EXT() { return get_static_field<"GL_TESS_GEN_POINT_MODE_EXT", jint>(); }
	static jint GL_TESS_GEN_SPACING_EXT() { return get_static_field<"GL_TESS_GEN_SPACING_EXT", jint>(); }
	static jint GL_TESS_GEN_VERTEX_ORDER_EXT() { return get_static_field<"GL_TESS_GEN_VERTEX_ORDER_EXT", jint>(); }
	static jint GL_TEXTURE_2D_MULTISAMPLE_ARRAY_OES() { return get_static_field<"GL_TEXTURE_2D_MULTISAMPLE_ARRAY_OES", jint>(); }
	static jint GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY_OES() { return get_static_field<"GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY_OES", jint>(); }
	static jint GL_TEXTURE_BINDING_BUFFER_EXT() { return get_static_field<"GL_TEXTURE_BINDING_BUFFER_EXT", jint>(); }
	static jint GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_EXT() { return get_static_field<"GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_EXT", jint>(); }
	static jint GL_TEXTURE_BORDER_COLOR_EXT() { return get_static_field<"GL_TEXTURE_BORDER_COLOR_EXT", jint>(); }
	static jint GL_TEXTURE_BUFFER_BINDING_EXT() { return get_static_field<"GL_TEXTURE_BUFFER_BINDING_EXT", jint>(); }
	static jint GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT() { return get_static_field<"GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT", jint>(); }
	static jint GL_TEXTURE_BUFFER_EXT() { return get_static_field<"GL_TEXTURE_BUFFER_EXT", jint>(); }
	static jint GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_EXT() { return get_static_field<"GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_EXT", jint>(); }
	static jint GL_TEXTURE_BUFFER_OFFSET_EXT() { return get_static_field<"GL_TEXTURE_BUFFER_OFFSET_EXT", jint>(); }
	static jint GL_TEXTURE_BUFFER_SIZE_EXT() { return get_static_field<"GL_TEXTURE_BUFFER_SIZE_EXT", jint>(); }
	static jint GL_TEXTURE_CUBE_MAP_ARRAY_EXT() { return get_static_field<"GL_TEXTURE_CUBE_MAP_ARRAY_EXT", jint>(); }
	static jint GL_TEXTURE_SRGB_DECODE_EXT() { return get_static_field<"GL_TEXTURE_SRGB_DECODE_EXT", jint>(); }
	static jint GL_TRIANGLES_ADJACENCY_EXT() { return get_static_field<"GL_TRIANGLES_ADJACENCY_EXT", jint>(); }
	static jint GL_TRIANGLE_STRIP_ADJACENCY_EXT() { return get_static_field<"GL_TRIANGLE_STRIP_ADJACENCY_EXT", jint>(); }
	static jint GL_UNDEFINED_VERTEX_EXT() { return get_static_field<"GL_UNDEFINED_VERTEX_EXT", jint>(); }
	static jint GL_UNSIGNED_INT_IMAGE_BUFFER_EXT() { return get_static_field<"GL_UNSIGNED_INT_IMAGE_BUFFER_EXT", jint>(); }
	static jint GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT() { return get_static_field<"GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT", jint>(); }
	static jint GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES() { return get_static_field<"GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES", jint>(); }
	static jint GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT() { return get_static_field<"GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT", jint>(); }
	static jint GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_EXT() { return get_static_field<"GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_EXT", jint>(); }
	static jint GL_VERTEX_ARRAY_KHR() { return get_static_field<"GL_VERTEX_ARRAY_KHR", jint>(); }

	static void glBlendBarrierKHR() { return call_static_method<"glBlendBarrierKHR", void>(); }
	static void glDebugMessageControlKHR(jint p1, jint p2, jint p3, jint p4, jni::ref<jni::array<jint>> p5, jint p6, jboolean p7) { return call_static_method<"glDebugMessageControlKHR", void>(p1, p2, p3, p4, p5, p6, p7); }
	static void glDebugMessageControlKHR(jint p1, jint p2, jint p3, jint p4, jni::ref<java::nio::IntBuffer> p5, jboolean p6) { return call_static_method<"glDebugMessageControlKHR", void>(p1, p2, p3, p4, p5, p6); }
	static void glDebugMessageInsertKHR(jint p1, jint p2, jint p3, jint p4, jni::ref<java::lang::String> p5) { return call_static_method<"glDebugMessageInsertKHR", void>(p1, p2, p3, p4, p5); }
	static void glDebugMessageCallbackKHR(jni::ref<android::opengl::GLES31Ext_DebugProcKHR> p1) { return call_static_method<"glDebugMessageCallbackKHR", void>(p1); }
	static jint glGetDebugMessageLogKHR(jint p1, jint p2, jni::ref<jni::array<jint>> p3, jint p4, jni::ref<jni::array<jint>> p5, jint p6, jni::ref<jni::array<jint>> p7, jint p8, jni::ref<jni::array<jint>> p9, jint p10, jni::ref<jni::array<jint>> p11, jint p12, jni::ref<jni::array<jbyte>> p13, jint p14) { return call_static_method<"glGetDebugMessageLogKHR", jint>(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14); }
	static jint glGetDebugMessageLogKHR(jint p1, jni::ref<java::nio::IntBuffer> p2, jni::ref<java::nio::IntBuffer> p3, jni::ref<java::nio::IntBuffer> p4, jni::ref<java::nio::IntBuffer> p5, jni::ref<java::nio::IntBuffer> p6, jni::ref<java::nio::ByteBuffer> p7) { return call_static_method<"glGetDebugMessageLogKHR", jint>(p1, p2, p3, p4, p5, p6, p7); }
	static jni::ref<jni::array<java::lang::String>> glGetDebugMessageLogKHR(jint p1, jni::ref<jni::array<jint>> p2, jint p3, jni::ref<jni::array<jint>> p4, jint p5, jni::ref<jni::array<jint>> p6, jint p7, jni::ref<jni::array<jint>> p8, jint p9) { return call_static_method<"glGetDebugMessageLogKHR", jni::ref<jni::array<java::lang::String>>>(p1, p2, p3, p4, p5, p6, p7, p8, p9); }
	static jni::ref<jni::array<java::lang::String>> glGetDebugMessageLogKHR(jint p1, jni::ref<java::nio::IntBuffer> p2, jni::ref<java::nio::IntBuffer> p3, jni::ref<java::nio::IntBuffer> p4, jni::ref<java::nio::IntBuffer> p5) { return call_static_method<"glGetDebugMessageLogKHR", jni::ref<jni::array<java::lang::String>>>(p1, p2, p3, p4, p5); }
	static void glPushDebugGroupKHR(jint p1, jint p2, jint p3, jni::ref<java::lang::String> p4) { return call_static_method<"glPushDebugGroupKHR", void>(p1, p2, p3, p4); }
	static void glPopDebugGroupKHR() { return call_static_method<"glPopDebugGroupKHR", void>(); }
	static void glObjectLabelKHR(jint p1, jint p2, jint p3, jni::ref<java::lang::String> p4) { return call_static_method<"glObjectLabelKHR", void>(p1, p2, p3, p4); }
	static jni::ref<java::lang::String> glGetObjectLabelKHR(jint p1, jint p2) { return call_static_method<"glGetObjectLabelKHR", jni::ref<java::lang::String>>(p1, p2); }
	static void glObjectPtrLabelKHR(jlong p1, jni::ref<java::lang::String> p2) { return call_static_method<"glObjectPtrLabelKHR", void>(p1, p2); }
	static jni::ref<java::lang::String> glGetObjectPtrLabelKHR(jlong p1) { return call_static_method<"glGetObjectPtrLabelKHR", jni::ref<java::lang::String>>(p1); }
	static jni::ref<android::opengl::GLES31Ext_DebugProcKHR> glGetDebugMessageCallbackKHR() { return call_static_method<"glGetDebugMessageCallbackKHR", jni::ref<android::opengl::GLES31Ext_DebugProcKHR>>(); }
	static void glMinSampleShadingOES(jfloat p1) { return call_static_method<"glMinSampleShadingOES", void>(p1); }
	static void glTexStorage3DMultisampleOES(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6, jboolean p7) { return call_static_method<"glTexStorage3DMultisampleOES", void>(p1, p2, p3, p4, p5, p6, p7); }
	static void glCopyImageSubDataEXT(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6, jint p7, jint p8, jint p9, jint p10, jint p11, jint p12, jint p13, jint p14, jint p15) { return call_static_method<"glCopyImageSubDataEXT", void>(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15); }
	static void glEnableiEXT(jint p1, jint p2) { return call_static_method<"glEnableiEXT", void>(p1, p2); }
	static void glDisableiEXT(jint p1, jint p2) { return call_static_method<"glDisableiEXT", void>(p1, p2); }
	static void glBlendEquationiEXT(jint p1, jint p2) { return call_static_method<"glBlendEquationiEXT", void>(p1, p2); }
	static void glBlendEquationSeparateiEXT(jint p1, jint p2, jint p3) { return call_static_method<"glBlendEquationSeparateiEXT", void>(p1, p2, p3); }
	static void glBlendFunciEXT(jint p1, jint p2, jint p3) { return call_static_method<"glBlendFunciEXT", void>(p1, p2, p3); }
	static void glBlendFuncSeparateiEXT(jint p1, jint p2, jint p3, jint p4, jint p5) { return call_static_method<"glBlendFuncSeparateiEXT", void>(p1, p2, p3, p4, p5); }
	static void glColorMaskiEXT(jint p1, jboolean p2, jboolean p3, jboolean p4, jboolean p5) { return call_static_method<"glColorMaskiEXT", void>(p1, p2, p3, p4, p5); }
	static jboolean glIsEnablediEXT(jint p1, jint p2) { return call_static_method<"glIsEnablediEXT", jboolean>(p1, p2); }
	static void glFramebufferTextureEXT(jint p1, jint p2, jint p3, jint p4) { return call_static_method<"glFramebufferTextureEXT", void>(p1, p2, p3, p4); }
	static void glPrimitiveBoundingBoxEXT(jfloat p1, jfloat p2, jfloat p3, jfloat p4, jfloat p5, jfloat p6, jfloat p7, jfloat p8) { return call_static_method<"glPrimitiveBoundingBoxEXT", void>(p1, p2, p3, p4, p5, p6, p7, p8); }
	static void glPatchParameteriEXT(jint p1, jint p2) { return call_static_method<"glPatchParameteriEXT", void>(p1, p2); }
	static void glTexParameterIivEXT(jint p1, jint p2, jni::ref<jni::array<jint>> p3, jint p4) { return call_static_method<"glTexParameterIivEXT", void>(p1, p2, p3, p4); }
	static void glTexParameterIivEXT(jint p1, jint p2, jni::ref<java::nio::IntBuffer> p3) { return call_static_method<"glTexParameterIivEXT", void>(p1, p2, p3); }
	static void glTexParameterIuivEXT(jint p1, jint p2, jni::ref<jni::array<jint>> p3, jint p4) { return call_static_method<"glTexParameterIuivEXT", void>(p1, p2, p3, p4); }
	static void glTexParameterIuivEXT(jint p1, jint p2, jni::ref<java::nio::IntBuffer> p3) { return call_static_method<"glTexParameterIuivEXT", void>(p1, p2, p3); }
	static void glGetTexParameterIivEXT(jint p1, jint p2, jni::ref<jni::array<jint>> p3, jint p4) { return call_static_method<"glGetTexParameterIivEXT", void>(p1, p2, p3, p4); }
	static void glGetTexParameterIivEXT(jint p1, jint p2, jni::ref<java::nio::IntBuffer> p3) { return call_static_method<"glGetTexParameterIivEXT", void>(p1, p2, p3); }
	static void glGetTexParameterIuivEXT(jint p1, jint p2, jni::ref<jni::array<jint>> p3, jint p4) { return call_static_method<"glGetTexParameterIuivEXT", void>(p1, p2, p3, p4); }
	static void glGetTexParameterIuivEXT(jint p1, jint p2, jni::ref<java::nio::IntBuffer> p3) { return call_static_method<"glGetTexParameterIuivEXT", void>(p1, p2, p3); }
	static void glSamplerParameterIivEXT(jint p1, jint p2, jni::ref<jni::array<jint>> p3, jint p4) { return call_static_method<"glSamplerParameterIivEXT", void>(p1, p2, p3, p4); }
	static void glSamplerParameterIivEXT(jint p1, jint p2, jni::ref<java::nio::IntBuffer> p3) { return call_static_method<"glSamplerParameterIivEXT", void>(p1, p2, p3); }
	static void glSamplerParameterIuivEXT(jint p1, jint p2, jni::ref<jni::array<jint>> p3, jint p4) { return call_static_method<"glSamplerParameterIuivEXT", void>(p1, p2, p3, p4); }
	static void glSamplerParameterIuivEXT(jint p1, jint p2, jni::ref<java::nio::IntBuffer> p3) { return call_static_method<"glSamplerParameterIuivEXT", void>(p1, p2, p3); }
	static void glGetSamplerParameterIivEXT(jint p1, jint p2, jni::ref<jni::array<jint>> p3, jint p4) { return call_static_method<"glGetSamplerParameterIivEXT", void>(p1, p2, p3, p4); }
	static void glGetSamplerParameterIivEXT(jint p1, jint p2, jni::ref<java::nio::IntBuffer> p3) { return call_static_method<"glGetSamplerParameterIivEXT", void>(p1, p2, p3); }
	static void glGetSamplerParameterIuivEXT(jint p1, jint p2, jni::ref<jni::array<jint>> p3, jint p4) { return call_static_method<"glGetSamplerParameterIuivEXT", void>(p1, p2, p3, p4); }
	static void glGetSamplerParameterIuivEXT(jint p1, jint p2, jni::ref<java::nio::IntBuffer> p3) { return call_static_method<"glGetSamplerParameterIuivEXT", void>(p1, p2, p3); }
	static void glTexBufferEXT(jint p1, jint p2, jint p3) { return call_static_method<"glTexBufferEXT", void>(p1, p2, p3); }
	static void glTexBufferRangeEXT(jint p1, jint p2, jint p3, jint p4, jint p5) { return call_static_method<"glTexBufferRangeEXT", void>(p1, p2, p3, p4, p5); }

protected:

	GLES31Ext(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_OPENGL_GLES31EXT
