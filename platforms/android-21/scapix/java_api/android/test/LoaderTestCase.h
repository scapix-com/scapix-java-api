// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/test/AndroidTestCase.h>

#ifndef SCAPIX_JAVA_API_ANDROID_TEST_LOADERTESTCASE_FWD
#define SCAPIX_JAVA_API_ANDROID_TEST_LOADERTESTCASE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::test { class LoaderTestCase; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::test::LoaderTestCase>
{
	static constexpr fixed_string class_name = "android/test/LoaderTestCase";
	using base_classes = std::tuple<scapix::java_api::android::test::AndroidTestCase>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEST_LOADERTESTCASE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_TEST_LOADERTESTCASE)
#define SCAPIX_JAVA_API_ANDROID_TEST_LOADERTESTCASE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/Loader.h>
#include <scapix/java_api/java/lang/Object.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::test::LoaderTestCase : public jni::object_base<"android/test/LoaderTestCase",
	android::test::AndroidTestCase>
{
public:

	static jni::ref<android::test::LoaderTestCase> new_object() { return base_::new_object(); }
	jni::ref<java::lang::Object> getLoaderResultSynchronously(jni::ref<android::content::Loader> loader) { return call_method<"getLoaderResultSynchronously", jni::ref<java::lang::Object>>(loader); }

protected:

	LoaderTestCase(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEST_LOADERTESTCASE
