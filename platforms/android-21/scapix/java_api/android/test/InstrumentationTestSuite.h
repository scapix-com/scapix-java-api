// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/junit/framework/TestSuite.h>

#ifndef SCAPIX_JAVA_API_ANDROID_TEST_INSTRUMENTATIONTESTSUITE_FWD
#define SCAPIX_JAVA_API_ANDROID_TEST_INSTRUMENTATIONTESTSUITE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::test { class InstrumentationTestSuite; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::test::InstrumentationTestSuite>
{
	static constexpr fixed_string class_name = "android/test/InstrumentationTestSuite";
	using base_classes = std::tuple<scapix::java_api::junit::framework::TestSuite>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEST_INSTRUMENTATIONTESTSUITE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_TEST_INSTRUMENTATIONTESTSUITE)
#define SCAPIX_JAVA_API_ANDROID_TEST_INSTRUMENTATIONTESTSUITE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/app/Instrumentation.h>
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/junit/framework/Test.h>
#include <scapix/java_api/junit/framework/TestResult.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::test::InstrumentationTestSuite : public jni::object_base<"android/test/InstrumentationTestSuite",
	junit::framework::TestSuite>
{
public:

	static jni::ref<android::test::InstrumentationTestSuite> new_object(jni::ref<android::app::Instrumentation> instr) { return base_::new_object(instr); }
	static jni::ref<android::test::InstrumentationTestSuite> new_object(jni::ref<java::lang::String> name, jni::ref<android::app::Instrumentation> instr) { return base_::new_object(name, instr); }
	static jni::ref<android::test::InstrumentationTestSuite> new_object(jni::ref<java::lang::Class> theClass, jni::ref<android::app::Instrumentation> instr) { return base_::new_object(theClass, instr); }
	void addTestSuite(jni::ref<java::lang::Class> testClass) { return call_method<"addTestSuite", void>(testClass); }
	void runTest(jni::ref<junit::framework::Test> test, jni::ref<junit::framework::TestResult> result) { return call_method<"runTest", void>(test, result); }

protected:

	InstrumentationTestSuite(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEST_INSTRUMENTATIONTESTSUITE
