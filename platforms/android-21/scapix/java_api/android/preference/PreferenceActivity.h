// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/app/ListActivity.h>
#include <scapix/java_api/android/preference/PreferenceFragment_OnPreferenceStartFragmentCallback.h>

#ifndef SCAPIX_JAVA_API_ANDROID_PREFERENCE_PREFERENCEACTIVITY_FWD
#define SCAPIX_JAVA_API_ANDROID_PREFERENCE_PREFERENCEACTIVITY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::preference { class PreferenceActivity; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::preference::PreferenceActivity>
{
	static constexpr fixed_string class_name = "android/preference/PreferenceActivity";
	using base_classes = std::tuple<scapix::java_api::android::app::ListActivity, scapix::java_api::android::preference::PreferenceFragment_OnPreferenceStartFragmentCallback>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_PREFERENCE_PREFERENCEACTIVITY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_PREFERENCE_PREFERENCEACTIVITY)
#define SCAPIX_JAVA_API_ANDROID_PREFERENCE_PREFERENCEACTIVITY

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/app/Fragment.h>
#include <scapix/java_api/android/content/Intent.h>
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/android/preference/Preference.h>
#include <scapix/java_api/android/preference/PreferenceActivity_Header.h>
#include <scapix/java_api/android/preference/PreferenceFragment.h>
#include <scapix/java_api/android/preference/PreferenceManager.h>
#include <scapix/java_api/android/preference/PreferenceScreen.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/android/view/View_OnClickListener.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::preference::PreferenceActivity : public jni::object_base<"android/preference/PreferenceActivity",
	android::app::ListActivity,
	android::preference::PreferenceFragment_OnPreferenceStartFragmentCallback>
{
public:

	using Header = PreferenceActivity_Header;

	static jni::ref<java::lang::String> EXTRA_NO_HEADERS() { return get_static_field<"EXTRA_NO_HEADERS", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> EXTRA_SHOW_FRAGMENT() { return get_static_field<"EXTRA_SHOW_FRAGMENT", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> EXTRA_SHOW_FRAGMENT_ARGUMENTS() { return get_static_field<"EXTRA_SHOW_FRAGMENT_ARGUMENTS", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> EXTRA_SHOW_FRAGMENT_SHORT_TITLE() { return get_static_field<"EXTRA_SHOW_FRAGMENT_SHORT_TITLE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> EXTRA_SHOW_FRAGMENT_TITLE() { return get_static_field<"EXTRA_SHOW_FRAGMENT_TITLE", jni::ref<java::lang::String>>(); }
	static jlong HEADER_ID_UNDEFINED() { return get_static_field<"HEADER_ID_UNDEFINED", jlong>(); }

	static jni::ref<android::preference::PreferenceActivity> new_object() { return base_::new_object(); }
	jboolean hasHeaders() { return call_method<"hasHeaders", jboolean>(); }
	jboolean isMultiPane() { return call_method<"isMultiPane", jboolean>(); }
	jboolean onIsMultiPane() { return call_method<"onIsMultiPane", jboolean>(); }
	jboolean onIsHidingHeaders() { return call_method<"onIsHidingHeaders", jboolean>(); }
	jni::ref<android::preference::PreferenceActivity_Header> onGetInitialHeader() { return call_method<"onGetInitialHeader", jni::ref<android::preference::PreferenceActivity_Header>>(); }
	jni::ref<android::preference::PreferenceActivity_Header> onGetNewHeader() { return call_method<"onGetNewHeader", jni::ref<android::preference::PreferenceActivity_Header>>(); }
	void onBuildHeaders(jni::ref<java::util::List> target) { return call_method<"onBuildHeaders", void>(target); }
	void invalidateHeaders() { return call_method<"invalidateHeaders", void>(); }
	void loadHeadersFromResource(jint resid, jni::ref<java::util::List> target) { return call_method<"loadHeadersFromResource", void>(resid, target); }
	void setListFooter(jni::ref<android::view::View> view) { return call_method<"setListFooter", void>(view); }
	void onContentChanged() { return call_method<"onContentChanged", void>(); }
	void onHeaderClick(jni::ref<android::preference::PreferenceActivity_Header> header, jint position) { return call_method<"onHeaderClick", void>(header, position); }
	jni::ref<android::content::Intent> onBuildStartFragmentIntent(jni::ref<java::lang::String> fragmentName, jni::ref<android::os::Bundle> args, jint titleRes, jint shortTitleRes) { return call_method<"onBuildStartFragmentIntent", jni::ref<android::content::Intent>>(fragmentName, args, titleRes, shortTitleRes); }
	void startWithFragment(jni::ref<java::lang::String> fragmentName, jni::ref<android::os::Bundle> args, jni::ref<android::app::Fragment> resultTo, jint resultRequestCode) { return call_method<"startWithFragment", void>(fragmentName, args, resultTo, resultRequestCode); }
	void startWithFragment(jni::ref<java::lang::String> fragmentName, jni::ref<android::os::Bundle> args, jni::ref<android::app::Fragment> resultTo, jint resultRequestCode, jint titleRes, jint shortTitleRes) { return call_method<"startWithFragment", void>(fragmentName, args, resultTo, resultRequestCode, titleRes, shortTitleRes); }
	void showBreadCrumbs(jni::ref<java::lang::CharSequence> title, jni::ref<java::lang::CharSequence> shortTitle) { return call_method<"showBreadCrumbs", void>(title, shortTitle); }
	void setParentTitle(jni::ref<java::lang::CharSequence> title, jni::ref<java::lang::CharSequence> shortTitle, jni::ref<android::view::View_OnClickListener> listener) { return call_method<"setParentTitle", void>(title, shortTitle, listener); }
	void switchToHeader(jni::ref<java::lang::String> fragmentName, jni::ref<android::os::Bundle> args) { return call_method<"switchToHeader", void>(fragmentName, args); }
	void switchToHeader(jni::ref<android::preference::PreferenceActivity_Header> header) { return call_method<"switchToHeader", void>(header); }
	void startPreferenceFragment(jni::ref<android::app::Fragment> fragment, jboolean push) { return call_method<"startPreferenceFragment", void>(fragment, push); }
	void startPreferencePanel(jni::ref<java::lang::String> fragmentClass, jni::ref<android::os::Bundle> args, jint titleRes, jni::ref<java::lang::CharSequence> titleText, jni::ref<android::app::Fragment> resultTo, jint resultRequestCode) { return call_method<"startPreferencePanel", void>(fragmentClass, args, titleRes, titleText, resultTo, resultRequestCode); }
	void finishPreferencePanel(jni::ref<android::app::Fragment> caller, jint resultCode, jni::ref<android::content::Intent> resultData) { return call_method<"finishPreferencePanel", void>(caller, resultCode, resultData); }
	jboolean onPreferenceStartFragment(jni::ref<android::preference::PreferenceFragment> caller, jni::ref<android::preference::Preference> pref) { return call_method<"onPreferenceStartFragment", jboolean>(caller, pref); }
	jni::ref<android::preference::PreferenceManager> getPreferenceManager() { return call_method<"getPreferenceManager", jni::ref<android::preference::PreferenceManager>>(); }
	void setPreferenceScreen(jni::ref<android::preference::PreferenceScreen> preferenceScreen) { return call_method<"setPreferenceScreen", void>(preferenceScreen); }
	jni::ref<android::preference::PreferenceScreen> getPreferenceScreen() { return call_method<"getPreferenceScreen", jni::ref<android::preference::PreferenceScreen>>(); }
	void addPreferencesFromIntent(jni::ref<android::content::Intent> intent) { return call_method<"addPreferencesFromIntent", void>(intent); }
	void addPreferencesFromResource(jint preferencesResId) { return call_method<"addPreferencesFromResource", void>(preferencesResId); }
	jboolean onPreferenceTreeClick(jni::ref<android::preference::PreferenceScreen> preferenceScreen, jni::ref<android::preference::Preference> preference) { return call_method<"onPreferenceTreeClick", jboolean>(preferenceScreen, preference); }
	jni::ref<android::preference::Preference> findPreference(jni::ref<java::lang::CharSequence> key) { return call_method<"findPreference", jni::ref<android::preference::Preference>>(key); }

protected:

	PreferenceActivity(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_PREFERENCE_PREFERENCEACTIVITY
