// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_VIEW_VIEWPROPERTYANIMATOR_FWD
#define SCAPIX_JAVA_API_ANDROID_VIEW_VIEWPROPERTYANIMATOR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::view { class ViewPropertyAnimator; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::view::ViewPropertyAnimator>
{
	static constexpr fixed_string class_name = "android/view/ViewPropertyAnimator";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_VIEWPROPERTYANIMATOR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_VIEW_VIEWPROPERTYANIMATOR)
#define SCAPIX_JAVA_API_ANDROID_VIEW_VIEWPROPERTYANIMATOR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/animation/Animator_AnimatorListener.h>
#include <scapix/java_api/android/animation/TimeInterpolator.h>
#include <scapix/java_api/android/animation/ValueAnimator_AnimatorUpdateListener.h>
#include <scapix/java_api/java/lang/Runnable.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::view::ViewPropertyAnimator : public jni::object_base<"android/view/ViewPropertyAnimator",
	java::lang::Object>
{
public:

	jni::ref<android::view::ViewPropertyAnimator> setDuration(jlong duration) { return call_method<"setDuration", jni::ref<android::view::ViewPropertyAnimator>>(duration); }
	jlong getDuration() { return call_method<"getDuration", jlong>(); }
	jlong getStartDelay() { return call_method<"getStartDelay", jlong>(); }
	jni::ref<android::view::ViewPropertyAnimator> setStartDelay(jlong startDelay) { return call_method<"setStartDelay", jni::ref<android::view::ViewPropertyAnimator>>(startDelay); }
	jni::ref<android::view::ViewPropertyAnimator> setInterpolator(jni::ref<android::animation::TimeInterpolator> interpolator) { return call_method<"setInterpolator", jni::ref<android::view::ViewPropertyAnimator>>(interpolator); }
	jni::ref<android::animation::TimeInterpolator> getInterpolator() { return call_method<"getInterpolator", jni::ref<android::animation::TimeInterpolator>>(); }
	jni::ref<android::view::ViewPropertyAnimator> setListener(jni::ref<android::animation::Animator_AnimatorListener> listener) { return call_method<"setListener", jni::ref<android::view::ViewPropertyAnimator>>(listener); }
	jni::ref<android::view::ViewPropertyAnimator> setUpdateListener(jni::ref<android::animation::ValueAnimator_AnimatorUpdateListener> listener) { return call_method<"setUpdateListener", jni::ref<android::view::ViewPropertyAnimator>>(listener); }
	void start() { return call_method<"start", void>(); }
	void cancel() { return call_method<"cancel", void>(); }
	jni::ref<android::view::ViewPropertyAnimator> x(jfloat value) { return call_method<"x", jni::ref<android::view::ViewPropertyAnimator>>(value); }
	jni::ref<android::view::ViewPropertyAnimator> xBy(jfloat value) { return call_method<"xBy", jni::ref<android::view::ViewPropertyAnimator>>(value); }
	jni::ref<android::view::ViewPropertyAnimator> y(jfloat value) { return call_method<"y", jni::ref<android::view::ViewPropertyAnimator>>(value); }
	jni::ref<android::view::ViewPropertyAnimator> yBy(jfloat value) { return call_method<"yBy", jni::ref<android::view::ViewPropertyAnimator>>(value); }
	jni::ref<android::view::ViewPropertyAnimator> z(jfloat value) { return call_method<"z", jni::ref<android::view::ViewPropertyAnimator>>(value); }
	jni::ref<android::view::ViewPropertyAnimator> zBy(jfloat value) { return call_method<"zBy", jni::ref<android::view::ViewPropertyAnimator>>(value); }
	jni::ref<android::view::ViewPropertyAnimator> rotation(jfloat value) { return call_method<"rotation", jni::ref<android::view::ViewPropertyAnimator>>(value); }
	jni::ref<android::view::ViewPropertyAnimator> rotationBy(jfloat value) { return call_method<"rotationBy", jni::ref<android::view::ViewPropertyAnimator>>(value); }
	jni::ref<android::view::ViewPropertyAnimator> rotationX(jfloat value) { return call_method<"rotationX", jni::ref<android::view::ViewPropertyAnimator>>(value); }
	jni::ref<android::view::ViewPropertyAnimator> rotationXBy(jfloat value) { return call_method<"rotationXBy", jni::ref<android::view::ViewPropertyAnimator>>(value); }
	jni::ref<android::view::ViewPropertyAnimator> rotationY(jfloat value) { return call_method<"rotationY", jni::ref<android::view::ViewPropertyAnimator>>(value); }
	jni::ref<android::view::ViewPropertyAnimator> rotationYBy(jfloat value) { return call_method<"rotationYBy", jni::ref<android::view::ViewPropertyAnimator>>(value); }
	jni::ref<android::view::ViewPropertyAnimator> translationX(jfloat value) { return call_method<"translationX", jni::ref<android::view::ViewPropertyAnimator>>(value); }
	jni::ref<android::view::ViewPropertyAnimator> translationXBy(jfloat value) { return call_method<"translationXBy", jni::ref<android::view::ViewPropertyAnimator>>(value); }
	jni::ref<android::view::ViewPropertyAnimator> translationY(jfloat value) { return call_method<"translationY", jni::ref<android::view::ViewPropertyAnimator>>(value); }
	jni::ref<android::view::ViewPropertyAnimator> translationYBy(jfloat value) { return call_method<"translationYBy", jni::ref<android::view::ViewPropertyAnimator>>(value); }
	jni::ref<android::view::ViewPropertyAnimator> translationZ(jfloat value) { return call_method<"translationZ", jni::ref<android::view::ViewPropertyAnimator>>(value); }
	jni::ref<android::view::ViewPropertyAnimator> translationZBy(jfloat value) { return call_method<"translationZBy", jni::ref<android::view::ViewPropertyAnimator>>(value); }
	jni::ref<android::view::ViewPropertyAnimator> scaleX(jfloat value) { return call_method<"scaleX", jni::ref<android::view::ViewPropertyAnimator>>(value); }
	jni::ref<android::view::ViewPropertyAnimator> scaleXBy(jfloat value) { return call_method<"scaleXBy", jni::ref<android::view::ViewPropertyAnimator>>(value); }
	jni::ref<android::view::ViewPropertyAnimator> scaleY(jfloat value) { return call_method<"scaleY", jni::ref<android::view::ViewPropertyAnimator>>(value); }
	jni::ref<android::view::ViewPropertyAnimator> scaleYBy(jfloat value) { return call_method<"scaleYBy", jni::ref<android::view::ViewPropertyAnimator>>(value); }
	jni::ref<android::view::ViewPropertyAnimator> alpha(jfloat value) { return call_method<"alpha", jni::ref<android::view::ViewPropertyAnimator>>(value); }
	jni::ref<android::view::ViewPropertyAnimator> alphaBy(jfloat value) { return call_method<"alphaBy", jni::ref<android::view::ViewPropertyAnimator>>(value); }
	jni::ref<android::view::ViewPropertyAnimator> withLayer() { return call_method<"withLayer", jni::ref<android::view::ViewPropertyAnimator>>(); }
	jni::ref<android::view::ViewPropertyAnimator> withStartAction(jni::ref<java::lang::Runnable> runnable) { return call_method<"withStartAction", jni::ref<android::view::ViewPropertyAnimator>>(runnable); }
	jni::ref<android::view::ViewPropertyAnimator> withEndAction(jni::ref<java::lang::Runnable> runnable) { return call_method<"withEndAction", jni::ref<android::view::ViewPropertyAnimator>>(runnable); }

protected:

	ViewPropertyAnimator(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_VIEWPROPERTYANIMATOR
