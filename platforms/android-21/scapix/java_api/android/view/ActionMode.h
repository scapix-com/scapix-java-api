// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_VIEW_ACTIONMODE_FWD
#define SCAPIX_JAVA_API_ANDROID_VIEW_ACTIONMODE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::view { class ActionMode; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::view::ActionMode>
{
	static constexpr fixed_string class_name = "android/view/ActionMode";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_ACTIONMODE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_VIEW_ACTIONMODE)
#define SCAPIX_JAVA_API_ANDROID_VIEW_ACTIONMODE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/view/Menu.h>
#include <scapix/java_api/android/view/MenuInflater.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/android/view/ActionMode_Callback.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::view::ActionMode : public jni::object_base<"android/view/ActionMode",
	java::lang::Object>
{
public:

	using Callback = ActionMode_Callback;

	static jni::ref<android::view::ActionMode> new_object() { return base_::new_object(); }
	void setTag(jni::ref<java::lang::Object> tag) { return call_method<"setTag", void>(tag); }
	jni::ref<java::lang::Object> getTag() { return call_method<"getTag", jni::ref<java::lang::Object>>(); }
	void setTitle(jni::ref<java::lang::CharSequence> p1) { return call_method<"setTitle", void>(p1); }
	void setTitle(jint p1) { return call_method<"setTitle", void>(p1); }
	void setSubtitle(jni::ref<java::lang::CharSequence> p1) { return call_method<"setSubtitle", void>(p1); }
	void setSubtitle(jint p1) { return call_method<"setSubtitle", void>(p1); }
	void setTitleOptionalHint(jboolean titleOptional) { return call_method<"setTitleOptionalHint", void>(titleOptional); }
	jboolean getTitleOptionalHint() { return call_method<"getTitleOptionalHint", jboolean>(); }
	jboolean isTitleOptional() { return call_method<"isTitleOptional", jboolean>(); }
	void setCustomView(jni::ref<android::view::View> p1) { return call_method<"setCustomView", void>(p1); }
	void invalidate() { return call_method<"invalidate", void>(); }
	void finish() { return call_method<"finish", void>(); }
	jni::ref<android::view::Menu> getMenu() { return call_method<"getMenu", jni::ref<android::view::Menu>>(); }
	jni::ref<java::lang::CharSequence> getTitle() { return call_method<"getTitle", jni::ref<java::lang::CharSequence>>(); }
	jni::ref<java::lang::CharSequence> getSubtitle() { return call_method<"getSubtitle", jni::ref<java::lang::CharSequence>>(); }
	jni::ref<android::view::View> getCustomView() { return call_method<"getCustomView", jni::ref<android::view::View>>(); }
	jni::ref<android::view::MenuInflater> getMenuInflater() { return call_method<"getMenuInflater", jni::ref<android::view::MenuInflater>>(); }

protected:

	ActionMode(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_ACTIONMODE
