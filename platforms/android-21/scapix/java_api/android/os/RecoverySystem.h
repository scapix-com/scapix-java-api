// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_OS_RECOVERYSYSTEM_FWD
#define SCAPIX_JAVA_API_ANDROID_OS_RECOVERYSYSTEM_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::os { class RecoverySystem; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::os::RecoverySystem>
{
	static constexpr fixed_string class_name = "android/os/RecoverySystem";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_OS_RECOVERYSYSTEM_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_OS_RECOVERYSYSTEM)
#define SCAPIX_JAVA_API_ANDROID_OS_RECOVERYSYSTEM

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/os/RecoverySystem_ProgressListener.h>
#include <scapix/java_api/java/io/File.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::os::RecoverySystem : public jni::object_base<"android/os/RecoverySystem",
	java::lang::Object>
{
public:

	using ProgressListener = RecoverySystem_ProgressListener;

	static jni::ref<android::os::RecoverySystem> new_object() { return base_::new_object(); }
	static void verifyPackage(jni::ref<java::io::File> packageFile, jni::ref<android::os::RecoverySystem_ProgressListener> listener, jni::ref<java::io::File> deviceCertsZipFile) { return call_static_method<"verifyPackage", void>(packageFile, listener, deviceCertsZipFile); }
	static void installPackage(jni::ref<android::content::Context> context, jni::ref<java::io::File> packageFile) { return call_static_method<"installPackage", void>(context, packageFile); }
	static void rebootWipeUserData(jni::ref<android::content::Context> context) { return call_static_method<"rebootWipeUserData", void>(context); }
	static void rebootWipeCache(jni::ref<android::content::Context> context) { return call_static_method<"rebootWipeCache", void>(context); }

protected:

	RecoverySystem(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_OS_RECOVERYSYSTEM
