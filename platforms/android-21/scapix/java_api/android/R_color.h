// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_R_COLOR_FWD
#define SCAPIX_JAVA_API_ANDROID_R_COLOR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android { class R_color; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::R_color>
{
	static constexpr fixed_string class_name = "android/R$color";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_R_COLOR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_R_COLOR)
#define SCAPIX_JAVA_API_ANDROID_R_COLOR

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::R_color : public jni::object_base<"android/R$color",
	java::lang::Object>
{
public:

	static jint background_dark() { return get_static_field<"background_dark", jint>(); }
	static jint background_light() { return get_static_field<"background_light", jint>(); }
	static jint black() { return get_static_field<"black", jint>(); }
	static jint darker_gray() { return get_static_field<"darker_gray", jint>(); }
	static jint holo_blue_bright() { return get_static_field<"holo_blue_bright", jint>(); }
	static jint holo_blue_dark() { return get_static_field<"holo_blue_dark", jint>(); }
	static jint holo_blue_light() { return get_static_field<"holo_blue_light", jint>(); }
	static jint holo_green_dark() { return get_static_field<"holo_green_dark", jint>(); }
	static jint holo_green_light() { return get_static_field<"holo_green_light", jint>(); }
	static jint holo_orange_dark() { return get_static_field<"holo_orange_dark", jint>(); }
	static jint holo_orange_light() { return get_static_field<"holo_orange_light", jint>(); }
	static jint holo_purple() { return get_static_field<"holo_purple", jint>(); }
	static jint holo_red_dark() { return get_static_field<"holo_red_dark", jint>(); }
	static jint holo_red_light() { return get_static_field<"holo_red_light", jint>(); }
	static jint primary_text_dark() { return get_static_field<"primary_text_dark", jint>(); }
	static jint primary_text_dark_nodisable() { return get_static_field<"primary_text_dark_nodisable", jint>(); }
	static jint primary_text_light() { return get_static_field<"primary_text_light", jint>(); }
	static jint primary_text_light_nodisable() { return get_static_field<"primary_text_light_nodisable", jint>(); }
	static jint secondary_text_dark() { return get_static_field<"secondary_text_dark", jint>(); }
	static jint secondary_text_dark_nodisable() { return get_static_field<"secondary_text_dark_nodisable", jint>(); }
	static jint secondary_text_light() { return get_static_field<"secondary_text_light", jint>(); }
	static jint secondary_text_light_nodisable() { return get_static_field<"secondary_text_light_nodisable", jint>(); }
	static jint tab_indicator_text() { return get_static_field<"tab_indicator_text", jint>(); }
	static jint tertiary_text_dark() { return get_static_field<"tertiary_text_dark", jint>(); }
	static jint tertiary_text_light() { return get_static_field<"tertiary_text_light", jint>(); }
	static jint transparent() { return get_static_field<"transparent", jint>(); }
	static jint white() { return get_static_field<"white", jint>(); }
	static jint widget_edittext_dark() { return get_static_field<"widget_edittext_dark", jint>(); }

	static jni::ref<android::R_color> new_object() { return base_::new_object(); }

protected:

	R_color(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_R_COLOR
