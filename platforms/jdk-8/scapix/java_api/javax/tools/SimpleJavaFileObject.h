// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/javax/tools/JavaFileObject.h>

#ifndef SCAPIX_JAVA_API_JAVAX_TOOLS_SIMPLEJAVAFILEOBJECT_FWD
#define SCAPIX_JAVA_API_JAVAX_TOOLS_SIMPLEJAVAFILEOBJECT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::tools { class SimpleJavaFileObject; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::tools::SimpleJavaFileObject>
{
	static constexpr fixed_string class_name = "javax/tools/SimpleJavaFileObject";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::javax::tools::JavaFileObject>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_TOOLS_SIMPLEJAVAFILEOBJECT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_TOOLS_SIMPLEJAVAFILEOBJECT)
#define SCAPIX_JAVA_API_JAVAX_TOOLS_SIMPLEJAVAFILEOBJECT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/io/OutputStream.h>
#include <scapix/java_api/java/io/Reader.h>
#include <scapix/java_api/java/io/Writer.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/net/URI.h>
#include <scapix/java_api/javax/lang/model/element/Modifier.h>
#include <scapix/java_api/javax/lang/model/element/NestingKind.h>
#include <scapix/java_api/javax/tools/JavaFileObject_Kind.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::tools::SimpleJavaFileObject : public jni::object_base<"javax/tools/SimpleJavaFileObject",
	java::lang::Object,
	javax::tools::JavaFileObject>
{
public:

	jni::ref<java::net::URI> toUri() { return call_method<"toUri", jni::ref<java::net::URI>>(); }
	jni::ref<java::lang::String> getName() { return call_method<"getName", jni::ref<java::lang::String>>(); }
	jni::ref<java::io::InputStream> openInputStream() { return call_method<"openInputStream", jni::ref<java::io::InputStream>>(); }
	jni::ref<java::io::OutputStream> openOutputStream() { return call_method<"openOutputStream", jni::ref<java::io::OutputStream>>(); }
	jni::ref<java::io::Reader> openReader(jboolean p1) { return call_method<"openReader", jni::ref<java::io::Reader>>(p1); }
	jni::ref<java::lang::CharSequence> getCharContent(jboolean p1) { return call_method<"getCharContent", jni::ref<java::lang::CharSequence>>(p1); }
	jni::ref<java::io::Writer> openWriter() { return call_method<"openWriter", jni::ref<java::io::Writer>>(); }
	jlong getLastModified() { return call_method<"getLastModified", jlong>(); }
	jboolean delete_() { return call_method<"delete", jboolean>(); }
	jni::ref<javax::tools::JavaFileObject_Kind> getKind() { return call_method<"getKind", jni::ref<javax::tools::JavaFileObject_Kind>>(); }
	jboolean isNameCompatible(jni::ref<java::lang::String> p1, jni::ref<javax::tools::JavaFileObject_Kind> p2) { return call_method<"isNameCompatible", jboolean>(p1, p2); }
	jni::ref<javax::lang::model::element::NestingKind> getNestingKind() { return call_method<"getNestingKind", jni::ref<javax::lang::model::element::NestingKind>>(); }
	jni::ref<javax::lang::model::element::Modifier> getAccessLevel() { return call_method<"getAccessLevel", jni::ref<javax::lang::model::element::Modifier>>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	SimpleJavaFileObject(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_TOOLS_SIMPLEJAVAFILEOBJECT
