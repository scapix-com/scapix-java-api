// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/javax/tools/Tool.h>
#include <scapix/java_api/javax/tools/OptionChecker.h>

#ifndef SCAPIX_JAVA_API_JAVAX_TOOLS_JAVACOMPILER_FWD
#define SCAPIX_JAVA_API_JAVAX_TOOLS_JAVACOMPILER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::tools { class JavaCompiler; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::tools::JavaCompiler>
{
	static constexpr fixed_string class_name = "javax/tools/JavaCompiler";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::javax::tools::Tool, scapix::java_api::javax::tools::OptionChecker>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_TOOLS_JAVACOMPILER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_TOOLS_JAVACOMPILER)
#define SCAPIX_JAVA_API_JAVAX_TOOLS_JAVACOMPILER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/Writer.h>
#include <scapix/java_api/java/lang/Iterable.h>
#include <scapix/java_api/java/nio/charset/Charset.h>
#include <scapix/java_api/java/util/Locale.h>
#include <scapix/java_api/javax/tools/DiagnosticListener.h>
#include <scapix/java_api/javax/tools/JavaCompiler_CompilationTask.h>
#include <scapix/java_api/javax/tools/JavaFileManager.h>
#include <scapix/java_api/javax/tools/StandardJavaFileManager.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::tools::JavaCompiler : public jni::object_base<"javax/tools/JavaCompiler",
	java::lang::Object,
	javax::tools::Tool,
	javax::tools::OptionChecker>
{
public:

	using CompilationTask = JavaCompiler_CompilationTask;

	jni::ref<javax::tools::JavaCompiler_CompilationTask> getTask(jni::ref<java::io::Writer> p1, jni::ref<javax::tools::JavaFileManager> p2, jni::ref<javax::tools::DiagnosticListener> p3, jni::ref<java::lang::Iterable> p4, jni::ref<java::lang::Iterable> p5, jni::ref<java::lang::Iterable> p6) { return call_method<"getTask", jni::ref<javax::tools::JavaCompiler_CompilationTask>>(p1, p2, p3, p4, p5, p6); }
	jni::ref<javax::tools::StandardJavaFileManager> getStandardFileManager(jni::ref<javax::tools::DiagnosticListener> p1, jni::ref<java::util::Locale> p2, jni::ref<java::nio::charset::Charset> p3) { return call_method<"getStandardFileManager", jni::ref<javax::tools::StandardJavaFileManager>>(p1, p2, p3); }

protected:

	JavaCompiler(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_TOOLS_JAVACOMPILER
