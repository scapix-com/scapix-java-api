// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_ANNOTATION_PROCESSING_MESSAGER_FWD
#define SCAPIX_JAVA_API_JAVAX_ANNOTATION_PROCESSING_MESSAGER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::annotation::processing { class Messager; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::annotation::processing::Messager>
{
	static constexpr fixed_string class_name = "javax/annotation/processing/Messager";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_ANNOTATION_PROCESSING_MESSAGER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_ANNOTATION_PROCESSING_MESSAGER)
#define SCAPIX_JAVA_API_JAVAX_ANNOTATION_PROCESSING_MESSAGER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/javax/lang/model/element/AnnotationMirror.h>
#include <scapix/java_api/javax/lang/model/element/AnnotationValue.h>
#include <scapix/java_api/javax/lang/model/element/Element.h>
#include <scapix/java_api/javax/tools/Diagnostic_Kind.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::annotation::processing::Messager : public jni::object_base<"javax/annotation/processing/Messager",
	java::lang::Object>
{
public:

	void printMessage(jni::ref<javax::tools::Diagnostic_Kind> p1, jni::ref<java::lang::CharSequence> p2) { return call_method<"printMessage", void>(p1, p2); }
	void printMessage(jni::ref<javax::tools::Diagnostic_Kind> p1, jni::ref<java::lang::CharSequence> p2, jni::ref<javax::lang::model::element::Element> p3) { return call_method<"printMessage", void>(p1, p2, p3); }
	void printMessage(jni::ref<javax::tools::Diagnostic_Kind> p1, jni::ref<java::lang::CharSequence> p2, jni::ref<javax::lang::model::element::Element> p3, jni::ref<javax::lang::model::element::AnnotationMirror> p4) { return call_method<"printMessage", void>(p1, p2, p3, p4); }
	void printMessage(jni::ref<javax::tools::Diagnostic_Kind> p1, jni::ref<java::lang::CharSequence> p2, jni::ref<javax::lang::model::element::Element> p3, jni::ref<javax::lang::model::element::AnnotationMirror> p4, jni::ref<javax::lang::model::element::AnnotationValue> p5) { return call_method<"printMessage", void>(p1, p2, p3, p4, p5); }

protected:

	Messager(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_ANNOTATION_PROCESSING_MESSAGER
