// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/javax/sql/rowset/WebRowSet.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SQL_ROWSET_JOINROWSET_FWD
#define SCAPIX_JAVA_API_JAVAX_SQL_ROWSET_JOINROWSET_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::sql::rowset { class JoinRowSet; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::sql::rowset::JoinRowSet>
{
	static constexpr fixed_string class_name = "javax/sql/rowset/JoinRowSet";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::javax::sql::rowset::WebRowSet>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SQL_ROWSET_JOINROWSET_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SQL_ROWSET_JOINROWSET)
#define SCAPIX_JAVA_API_JAVAX_SQL_ROWSET_JOINROWSET

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Collection.h>
#include <scapix/java_api/javax/sql/RowSet.h>
#include <scapix/java_api/javax/sql/rowset/CachedRowSet.h>
#include <scapix/java_api/javax/sql/rowset/Joinable.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::sql::rowset::JoinRowSet : public jni::object_base<"javax/sql/rowset/JoinRowSet",
	java::lang::Object,
	javax::sql::rowset::WebRowSet>
{
public:

	static jint CROSS_JOIN() { return get_static_field<"CROSS_JOIN", jint>(); }
	static jint INNER_JOIN() { return get_static_field<"INNER_JOIN", jint>(); }
	static jint LEFT_OUTER_JOIN() { return get_static_field<"LEFT_OUTER_JOIN", jint>(); }
	static jint RIGHT_OUTER_JOIN() { return get_static_field<"RIGHT_OUTER_JOIN", jint>(); }
	static jint FULL_JOIN() { return get_static_field<"FULL_JOIN", jint>(); }

	void addRowSet(jni::ref<javax::sql::rowset::Joinable> p1) { return call_method<"addRowSet", void>(p1); }
	void addRowSet(jni::ref<javax::sql::RowSet> p1, jint p2) { return call_method<"addRowSet", void>(p1, p2); }
	void addRowSet(jni::ref<javax::sql::RowSet> p1, jni::ref<java::lang::String> p2) { return call_method<"addRowSet", void>(p1, p2); }
	void addRowSet(jni::ref<jni::array<javax::sql::RowSet>> p1, jni::ref<jni::array<jint>> p2) { return call_method<"addRowSet", void>(p1, p2); }
	void addRowSet(jni::ref<jni::array<javax::sql::RowSet>> p1, jni::ref<jni::array<java::lang::String>> p2) { return call_method<"addRowSet", void>(p1, p2); }
	jni::ref<java::util::Collection> getRowSets() { return call_method<"getRowSets", jni::ref<java::util::Collection>>(); }
	jni::ref<jni::array<java::lang::String>> getRowSetNames() { return call_method<"getRowSetNames", jni::ref<jni::array<java::lang::String>>>(); }
	jni::ref<javax::sql::rowset::CachedRowSet> toCachedRowSet() { return call_method<"toCachedRowSet", jni::ref<javax::sql::rowset::CachedRowSet>>(); }
	jboolean supportsCrossJoin() { return call_method<"supportsCrossJoin", jboolean>(); }
	jboolean supportsInnerJoin() { return call_method<"supportsInnerJoin", jboolean>(); }
	jboolean supportsLeftOuterJoin() { return call_method<"supportsLeftOuterJoin", jboolean>(); }
	jboolean supportsRightOuterJoin() { return call_method<"supportsRightOuterJoin", jboolean>(); }
	jboolean supportsFullJoin() { return call_method<"supportsFullJoin", jboolean>(); }
	void setJoinType(jint p1) { return call_method<"setJoinType", void>(p1); }
	jni::ref<java::lang::String> getWhereClause() { return call_method<"getWhereClause", jni::ref<java::lang::String>>(); }
	jint getJoinType() { return call_method<"getJoinType", jint>(); }

protected:

	JoinRowSet(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SQL_ROWSET_JOINROWSET
