// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SQL_ROWSET_ROWSETMETADATAIMPL_COLINFO_FWD
#define SCAPIX_JAVA_API_JAVAX_SQL_ROWSET_ROWSETMETADATAIMPL_COLINFO_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::sql::rowset { class RowSetMetaDataImpl_ColInfo; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::sql::rowset::RowSetMetaDataImpl_ColInfo>
{
	static constexpr fixed_string class_name = "javax/sql/rowset/RowSetMetaDataImpl$ColInfo";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::io::Serializable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SQL_ROWSET_ROWSETMETADATAIMPL_COLINFO_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SQL_ROWSET_ROWSETMETADATAIMPL_COLINFO)
#define SCAPIX_JAVA_API_JAVAX_SQL_ROWSET_ROWSETMETADATAIMPL_COLINFO

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class javax::sql::rowset::RowSetMetaDataImpl_ColInfo : public jni::object_base<"javax/sql/rowset/RowSetMetaDataImpl$ColInfo",
	java::lang::Object,
	java::io::Serializable>
{
public:

	jboolean autoIncrement() { return get_field<"autoIncrement", jboolean>(); }
	void autoIncrement(jboolean v) { set_field<"autoIncrement", jboolean>(v); }
	jboolean caseSensitive() { return get_field<"caseSensitive", jboolean>(); }
	void caseSensitive(jboolean v) { set_field<"caseSensitive", jboolean>(v); }
	jboolean currency() { return get_field<"currency", jboolean>(); }
	void currency(jboolean v) { set_field<"currency", jboolean>(v); }
	jint nullable() { return get_field<"nullable", jint>(); }
	void nullable(jint v) { set_field<"nullable", jint>(v); }
	jboolean signed_() { return get_field<"signed", jboolean>(); }
	void signed_(jboolean v) { set_field<"signed", jboolean>(v); }
	jboolean searchable() { return get_field<"searchable", jboolean>(); }
	void searchable(jboolean v) { set_field<"searchable", jboolean>(v); }
	jint columnDisplaySize() { return get_field<"columnDisplaySize", jint>(); }
	void columnDisplaySize(jint v) { set_field<"columnDisplaySize", jint>(v); }
	jni::ref<java::lang::String> columnLabel() { return get_field<"columnLabel", jni::ref<java::lang::String>>(); }
	void columnLabel(jni::ref<java::lang::String> v) { set_field<"columnLabel", jni::ref<java::lang::String>>(v); }
	jni::ref<java::lang::String> columnName() { return get_field<"columnName", jni::ref<java::lang::String>>(); }
	void columnName(jni::ref<java::lang::String> v) { set_field<"columnName", jni::ref<java::lang::String>>(v); }
	jni::ref<java::lang::String> schemaName() { return get_field<"schemaName", jni::ref<java::lang::String>>(); }
	void schemaName(jni::ref<java::lang::String> v) { set_field<"schemaName", jni::ref<java::lang::String>>(v); }
	jint colPrecision() { return get_field<"colPrecision", jint>(); }
	void colPrecision(jint v) { set_field<"colPrecision", jint>(v); }
	jint colScale() { return get_field<"colScale", jint>(); }
	void colScale(jint v) { set_field<"colScale", jint>(v); }
	jni::ref<java::lang::String> tableName() { return get_field<"tableName", jni::ref<java::lang::String>>(); }
	void tableName(jni::ref<java::lang::String> v) { set_field<"tableName", jni::ref<java::lang::String>>(v); }
	jni::ref<java::lang::String> catName() { return get_field<"catName", jni::ref<java::lang::String>>(); }
	void catName(jni::ref<java::lang::String> v) { set_field<"catName", jni::ref<java::lang::String>>(v); }
	jint colType() { return get_field<"colType", jint>(); }
	void colType(jint v) { set_field<"colType", jint>(v); }
	jni::ref<java::lang::String> colTypeName() { return get_field<"colTypeName", jni::ref<java::lang::String>>(); }
	void colTypeName(jni::ref<java::lang::String> v) { set_field<"colTypeName", jni::ref<java::lang::String>>(v); }
	jboolean readOnly() { return get_field<"readOnly", jboolean>(); }
	void readOnly(jboolean v) { set_field<"readOnly", jboolean>(v); }
	jboolean writable() { return get_field<"writable", jboolean>(); }
	void writable(jboolean v) { set_field<"writable", jboolean>(v); }


protected:

	RowSetMetaDataImpl_ColInfo(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SQL_ROWSET_ROWSETMETADATAIMPL_COLINFO
