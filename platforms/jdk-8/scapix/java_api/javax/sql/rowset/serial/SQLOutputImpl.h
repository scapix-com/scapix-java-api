// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/sql/SQLOutput.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SQL_ROWSET_SERIAL_SQLOUTPUTIMPL_FWD
#define SCAPIX_JAVA_API_JAVAX_SQL_ROWSET_SERIAL_SQLOUTPUTIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::sql::rowset::serial { class SQLOutputImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::sql::rowset::serial::SQLOutputImpl>
{
	static constexpr fixed_string class_name = "javax/sql/rowset/serial/SQLOutputImpl";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::sql::SQLOutput>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SQL_ROWSET_SERIAL_SQLOUTPUTIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SQL_ROWSET_SERIAL_SQLOUTPUTIMPL)
#define SCAPIX_JAVA_API_JAVAX_SQL_ROWSET_SERIAL_SQLOUTPUTIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/io/Reader.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/math/BigDecimal.h>
#include <scapix/java_api/java/net/URL.h>
#include <scapix/java_api/java/sql/Array.h>
#include <scapix/java_api/java/sql/Blob.h>
#include <scapix/java_api/java/sql/Clob.h>
#include <scapix/java_api/java/sql/Date.h>
#include <scapix/java_api/java/sql/NClob.h>
#include <scapix/java_api/java/sql/Ref.h>
#include <scapix/java_api/java/sql/RowId.h>
#include <scapix/java_api/java/sql/SQLData.h>
#include <scapix/java_api/java/sql/SQLXML.h>
#include <scapix/java_api/java/sql/Struct.h>
#include <scapix/java_api/java/sql/Time.h>
#include <scapix/java_api/java/sql/Timestamp.h>
#include <scapix/java_api/java/util/Map.h>
#include <scapix/java_api/java/util/Vector.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::sql::rowset::serial::SQLOutputImpl : public jni::object_base<"javax/sql/rowset/serial/SQLOutputImpl",
	java::lang::Object,
	java::sql::SQLOutput>
{
public:

	static jni::ref<javax::sql::rowset::serial::SQLOutputImpl> new_object(jni::ref<java::util::Vector> p1, jni::ref<java::util::Map> p2) { return base_::new_object(p1, p2); }
	void writeString(jni::ref<java::lang::String> p1) { return call_method<"writeString", void>(p1); }
	void writeBoolean(jboolean p1) { return call_method<"writeBoolean", void>(p1); }
	void writeByte(jbyte p1) { return call_method<"writeByte", void>(p1); }
	void writeShort(jshort p1) { return call_method<"writeShort", void>(p1); }
	void writeInt(jint p1) { return call_method<"writeInt", void>(p1); }
	void writeLong(jlong p1) { return call_method<"writeLong", void>(p1); }
	void writeFloat(jfloat p1) { return call_method<"writeFloat", void>(p1); }
	void writeDouble(jdouble p1) { return call_method<"writeDouble", void>(p1); }
	void writeBigDecimal(jni::ref<java::math::BigDecimal> p1) { return call_method<"writeBigDecimal", void>(p1); }
	void writeBytes(jni::ref<jni::array<jbyte>> p1) { return call_method<"writeBytes", void>(p1); }
	void writeDate(jni::ref<java::sql::Date> p1) { return call_method<"writeDate", void>(p1); }
	void writeTime(jni::ref<java::sql::Time> p1) { return call_method<"writeTime", void>(p1); }
	void writeTimestamp(jni::ref<java::sql::Timestamp> p1) { return call_method<"writeTimestamp", void>(p1); }
	void writeCharacterStream(jni::ref<java::io::Reader> p1) { return call_method<"writeCharacterStream", void>(p1); }
	void writeAsciiStream(jni::ref<java::io::InputStream> p1) { return call_method<"writeAsciiStream", void>(p1); }
	void writeBinaryStream(jni::ref<java::io::InputStream> p1) { return call_method<"writeBinaryStream", void>(p1); }
	void writeObject(jni::ref<java::sql::SQLData> p1) { return call_method<"writeObject", void>(p1); }
	void writeRef(jni::ref<java::sql::Ref> p1) { return call_method<"writeRef", void>(p1); }
	void writeBlob(jni::ref<java::sql::Blob> p1) { return call_method<"writeBlob", void>(p1); }
	void writeClob(jni::ref<java::sql::Clob> p1) { return call_method<"writeClob", void>(p1); }
	void writeStruct(jni::ref<java::sql::Struct> p1) { return call_method<"writeStruct", void>(p1); }
	void writeArray(jni::ref<java::sql::Array> p1) { return call_method<"writeArray", void>(p1); }
	void writeURL(jni::ref<java::net::URL> p1) { return call_method<"writeURL", void>(p1); }
	void writeNString(jni::ref<java::lang::String> p1) { return call_method<"writeNString", void>(p1); }
	void writeNClob(jni::ref<java::sql::NClob> p1) { return call_method<"writeNClob", void>(p1); }
	void writeRowId(jni::ref<java::sql::RowId> p1) { return call_method<"writeRowId", void>(p1); }
	void writeSQLXML(jni::ref<java::sql::SQLXML> p1) { return call_method<"writeSQLXML", void>(p1); }

protected:

	SQLOutputImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SQL_ROWSET_SERIAL_SQLOUTPUTIMPL
