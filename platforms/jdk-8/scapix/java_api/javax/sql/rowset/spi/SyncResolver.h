// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/javax/sql/RowSet.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SQL_ROWSET_SPI_SYNCRESOLVER_FWD
#define SCAPIX_JAVA_API_JAVAX_SQL_ROWSET_SPI_SYNCRESOLVER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::sql::rowset::spi { class SyncResolver; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::sql::rowset::spi::SyncResolver>
{
	static constexpr fixed_string class_name = "javax/sql/rowset/spi/SyncResolver";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::javax::sql::RowSet>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SQL_ROWSET_SPI_SYNCRESOLVER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SQL_ROWSET_SPI_SYNCRESOLVER)
#define SCAPIX_JAVA_API_JAVAX_SQL_ROWSET_SPI_SYNCRESOLVER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::sql::rowset::spi::SyncResolver : public jni::object_base<"javax/sql/rowset/spi/SyncResolver",
	java::lang::Object,
	javax::sql::RowSet>
{
public:

	static jint UPDATE_ROW_CONFLICT() { return get_static_field<"UPDATE_ROW_CONFLICT", jint>(); }
	static jint DELETE_ROW_CONFLICT() { return get_static_field<"DELETE_ROW_CONFLICT", jint>(); }
	static jint INSERT_ROW_CONFLICT() { return get_static_field<"INSERT_ROW_CONFLICT", jint>(); }
	static jint NO_ROW_CONFLICT() { return get_static_field<"NO_ROW_CONFLICT", jint>(); }

	jint getStatus() { return call_method<"getStatus", jint>(); }
	jni::ref<java::lang::Object> getConflictValue(jint p1) { return call_method<"getConflictValue", jni::ref<java::lang::Object>>(p1); }
	jni::ref<java::lang::Object> getConflictValue(jni::ref<java::lang::String> p1) { return call_method<"getConflictValue", jni::ref<java::lang::Object>>(p1); }
	void setResolvedValue(jint p1, jni::ref<java::lang::Object> p2) { return call_method<"setResolvedValue", void>(p1, p2); }
	void setResolvedValue(jni::ref<java::lang::String> p1, jni::ref<java::lang::Object> p2) { return call_method<"setResolvedValue", void>(p1, p2); }
	jboolean nextConflict() { return call_method<"nextConflict", jboolean>(); }
	jboolean previousConflict() { return call_method<"previousConflict", jboolean>(); }

protected:

	SyncResolver(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SQL_ROWSET_SPI_SYNCRESOLVER
