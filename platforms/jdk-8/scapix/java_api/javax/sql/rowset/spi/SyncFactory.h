// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SQL_ROWSET_SPI_SYNCFACTORY_FWD
#define SCAPIX_JAVA_API_JAVAX_SQL_ROWSET_SPI_SYNCFACTORY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::sql::rowset::spi { class SyncFactory; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::sql::rowset::spi::SyncFactory>
{
	static constexpr fixed_string class_name = "javax/sql/rowset/spi/SyncFactory";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SQL_ROWSET_SPI_SYNCFACTORY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SQL_ROWSET_SPI_SYNCFACTORY)
#define SCAPIX_JAVA_API_JAVAX_SQL_ROWSET_SPI_SYNCFACTORY

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Enumeration.h>
#include <scapix/java_api/java/util/logging/Level.h>
#include <scapix/java_api/java/util/logging/Logger.h>
#include <scapix/java_api/javax/naming/Context.h>
#include <scapix/java_api/javax/sql/rowset/spi/SyncProvider.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::sql::rowset::spi::SyncFactory : public jni::object_base<"javax/sql/rowset/spi/SyncFactory",
	java::lang::Object>
{
public:

	static jni::ref<java::lang::String> ROWSET_SYNC_PROVIDER() { return get_static_field<"ROWSET_SYNC_PROVIDER", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ROWSET_SYNC_VENDOR() { return get_static_field<"ROWSET_SYNC_VENDOR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ROWSET_SYNC_PROVIDER_VERSION() { return get_static_field<"ROWSET_SYNC_PROVIDER_VERSION", jni::ref<java::lang::String>>(); }

	static void registerProvider(jni::ref<java::lang::String> p1) { return call_static_method<"registerProvider", void>(p1); }
	static jni::ref<javax::sql::rowset::spi::SyncFactory> getSyncFactory() { return call_static_method<"getSyncFactory", jni::ref<javax::sql::rowset::spi::SyncFactory>>(); }
	static void unregisterProvider(jni::ref<java::lang::String> p1) { return call_static_method<"unregisterProvider", void>(p1); }
	static jni::ref<javax::sql::rowset::spi::SyncProvider> getInstance(jni::ref<java::lang::String> p1) { return call_static_method<"getInstance", jni::ref<javax::sql::rowset::spi::SyncProvider>>(p1); }
	static jni::ref<java::util::Enumeration> getRegisteredProviders() { return call_static_method<"getRegisteredProviders", jni::ref<java::util::Enumeration>>(); }
	static void setLogger(jni::ref<java::util::logging::Logger> p1) { return call_static_method<"setLogger", void>(p1); }
	static void setLogger(jni::ref<java::util::logging::Logger> p1, jni::ref<java::util::logging::Level> p2) { return call_static_method<"setLogger", void>(p1, p2); }
	static jni::ref<java::util::logging::Logger> getLogger() { return call_static_method<"getLogger", jni::ref<java::util::logging::Logger>>(); }
	static void setJNDIContext(jni::ref<javax::naming::Context> p1) { return call_static_method<"setJNDIContext", void>(p1); }

protected:

	SyncFactory(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SQL_ROWSET_SPI_SYNCFACTORY
