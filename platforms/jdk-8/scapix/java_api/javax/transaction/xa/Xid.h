// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_TRANSACTION_XA_XID_FWD
#define SCAPIX_JAVA_API_JAVAX_TRANSACTION_XA_XID_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::transaction::xa { class Xid; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::transaction::xa::Xid>
{
	static constexpr fixed_string class_name = "javax/transaction/xa/Xid";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_TRANSACTION_XA_XID_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_TRANSACTION_XA_XID)
#define SCAPIX_JAVA_API_JAVAX_TRANSACTION_XA_XID

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::transaction::xa::Xid : public jni::object_base<"javax/transaction/xa/Xid",
	java::lang::Object>
{
public:

	static jint MAXGTRIDSIZE() { return get_static_field<"MAXGTRIDSIZE", jint>(); }
	static jint MAXBQUALSIZE() { return get_static_field<"MAXBQUALSIZE", jint>(); }

	jint getFormatId() { return call_method<"getFormatId", jint>(); }
	jni::ref<jni::array<jbyte>> getGlobalTransactionId() { return call_method<"getGlobalTransactionId", jni::ref<jni::array<jbyte>>>(); }
	jni::ref<jni::array<jbyte>> getBranchQualifier() { return call_method<"getBranchQualifier", jni::ref<jni::array<jbyte>>>(); }

protected:

	Xid(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_TRANSACTION_XA_XID
