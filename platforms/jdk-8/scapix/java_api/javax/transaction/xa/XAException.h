// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Exception.h>

#ifndef SCAPIX_JAVA_API_JAVAX_TRANSACTION_XA_XAEXCEPTION_FWD
#define SCAPIX_JAVA_API_JAVAX_TRANSACTION_XA_XAEXCEPTION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::transaction::xa { class XAException; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::transaction::xa::XAException>
{
	static constexpr fixed_string class_name = "javax/transaction/xa/XAException";
	using base_classes = std::tuple<scapix::java_api::java::lang::Exception>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_TRANSACTION_XA_XAEXCEPTION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_TRANSACTION_XA_XAEXCEPTION)
#define SCAPIX_JAVA_API_JAVAX_TRANSACTION_XA_XAEXCEPTION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::transaction::xa::XAException : public jni::object_base<"javax/transaction/xa/XAException",
	java::lang::Exception>
{
public:

	jint errorCode() { return get_field<"errorCode", jint>(); }
	void errorCode(jint v) { set_field<"errorCode", jint>(v); }
	static jint XA_RBBASE() { return get_static_field<"XA_RBBASE", jint>(); }
	static jint XA_RBROLLBACK() { return get_static_field<"XA_RBROLLBACK", jint>(); }
	static jint XA_RBCOMMFAIL() { return get_static_field<"XA_RBCOMMFAIL", jint>(); }
	static jint XA_RBDEADLOCK() { return get_static_field<"XA_RBDEADLOCK", jint>(); }
	static jint XA_RBINTEGRITY() { return get_static_field<"XA_RBINTEGRITY", jint>(); }
	static jint XA_RBOTHER() { return get_static_field<"XA_RBOTHER", jint>(); }
	static jint XA_RBPROTO() { return get_static_field<"XA_RBPROTO", jint>(); }
	static jint XA_RBTIMEOUT() { return get_static_field<"XA_RBTIMEOUT", jint>(); }
	static jint XA_RBTRANSIENT() { return get_static_field<"XA_RBTRANSIENT", jint>(); }
	static jint XA_RBEND() { return get_static_field<"XA_RBEND", jint>(); }
	static jint XA_NOMIGRATE() { return get_static_field<"XA_NOMIGRATE", jint>(); }
	static jint XA_HEURHAZ() { return get_static_field<"XA_HEURHAZ", jint>(); }
	static jint XA_HEURCOM() { return get_static_field<"XA_HEURCOM", jint>(); }
	static jint XA_HEURRB() { return get_static_field<"XA_HEURRB", jint>(); }
	static jint XA_HEURMIX() { return get_static_field<"XA_HEURMIX", jint>(); }
	static jint XA_RETRY() { return get_static_field<"XA_RETRY", jint>(); }
	static jint XA_RDONLY() { return get_static_field<"XA_RDONLY", jint>(); }
	static jint XAER_ASYNC() { return get_static_field<"XAER_ASYNC", jint>(); }
	static jint XAER_RMERR() { return get_static_field<"XAER_RMERR", jint>(); }
	static jint XAER_NOTA() { return get_static_field<"XAER_NOTA", jint>(); }
	static jint XAER_INVAL() { return get_static_field<"XAER_INVAL", jint>(); }
	static jint XAER_PROTO() { return get_static_field<"XAER_PROTO", jint>(); }
	static jint XAER_RMFAIL() { return get_static_field<"XAER_RMFAIL", jint>(); }
	static jint XAER_DUPID() { return get_static_field<"XAER_DUPID", jint>(); }
	static jint XAER_OUTSIDE() { return get_static_field<"XAER_OUTSIDE", jint>(); }

	static jni::ref<javax::transaction::xa::XAException> new_object() { return base_::new_object(); }
	static jni::ref<javax::transaction::xa::XAException> new_object(jni::ref<java::lang::String> p1) { return base_::new_object(p1); }
	static jni::ref<javax::transaction::xa::XAException> new_object(jint p1) { return base_::new_object(p1); }

protected:

	XAException(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_TRANSACTION_XA_XAEXCEPTION
