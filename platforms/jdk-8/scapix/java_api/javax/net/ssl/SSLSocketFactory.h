// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/net/SocketFactory.h>

#ifndef SCAPIX_JAVA_API_JAVAX_NET_SSL_SSLSOCKETFACTORY_FWD
#define SCAPIX_JAVA_API_JAVAX_NET_SSL_SSLSOCKETFACTORY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::net::ssl { class SSLSocketFactory; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::net::ssl::SSLSocketFactory>
{
	static constexpr fixed_string class_name = "javax/net/ssl/SSLSocketFactory";
	using base_classes = std::tuple<scapix::java_api::javax::net::SocketFactory>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_NET_SSL_SSLSOCKETFACTORY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_NET_SSL_SSLSOCKETFACTORY)
#define SCAPIX_JAVA_API_JAVAX_NET_SSL_SSLSOCKETFACTORY

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/net/Socket.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::net::ssl::SSLSocketFactory : public jni::object_base<"javax/net/ssl/SSLSocketFactory",
	javax::net::SocketFactory>
{
public:

	static jni::ref<javax::net::ssl::SSLSocketFactory> new_object() { return base_::new_object(); }
	static jni::ref<javax::net::SocketFactory> getDefault() { return call_static_method<"getDefault", jni::ref<javax::net::SocketFactory>>(); }
	jni::ref<jni::array<java::lang::String>> getDefaultCipherSuites() { return call_method<"getDefaultCipherSuites", jni::ref<jni::array<java::lang::String>>>(); }
	jni::ref<jni::array<java::lang::String>> getSupportedCipherSuites() { return call_method<"getSupportedCipherSuites", jni::ref<jni::array<java::lang::String>>>(); }
	jni::ref<java::net::Socket> createSocket(jni::ref<java::net::Socket> p1, jni::ref<java::lang::String> p2, jint p3, jboolean p4) { return call_method<"createSocket", jni::ref<java::net::Socket>>(p1, p2, p3, p4); }
	jni::ref<java::net::Socket> createSocket(jni::ref<java::net::Socket> p1, jni::ref<java::io::InputStream> p2, jboolean p3) { return call_method<"createSocket", jni::ref<java::net::Socket>>(p1, p2, p3); }

protected:

	SSLSocketFactory(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_NET_SSL_SSLSOCKETFACTORY
