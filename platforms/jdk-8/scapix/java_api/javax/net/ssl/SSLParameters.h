// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_NET_SSL_SSLPARAMETERS_FWD
#define SCAPIX_JAVA_API_JAVAX_NET_SSL_SSLPARAMETERS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::net::ssl { class SSLParameters; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::net::ssl::SSLParameters>
{
	static constexpr fixed_string class_name = "javax/net/ssl/SSLParameters";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_NET_SSL_SSLPARAMETERS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_NET_SSL_SSLPARAMETERS)
#define SCAPIX_JAVA_API_JAVAX_NET_SSL_SSLPARAMETERS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/security/AlgorithmConstraints.h>
#include <scapix/java_api/java/util/Collection.h>
#include <scapix/java_api/java/util/List.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::net::ssl::SSLParameters : public jni::object_base<"javax/net/ssl/SSLParameters",
	java::lang::Object>
{
public:

	static jni::ref<javax::net::ssl::SSLParameters> new_object() { return base_::new_object(); }
	static jni::ref<javax::net::ssl::SSLParameters> new_object(jni::ref<jni::array<java::lang::String>> p1) { return base_::new_object(p1); }
	static jni::ref<javax::net::ssl::SSLParameters> new_object(jni::ref<jni::array<java::lang::String>> p1, jni::ref<jni::array<java::lang::String>> p2) { return base_::new_object(p1, p2); }
	jni::ref<jni::array<java::lang::String>> getCipherSuites() { return call_method<"getCipherSuites", jni::ref<jni::array<java::lang::String>>>(); }
	void setCipherSuites(jni::ref<jni::array<java::lang::String>> p1) { return call_method<"setCipherSuites", void>(p1); }
	jni::ref<jni::array<java::lang::String>> getProtocols() { return call_method<"getProtocols", jni::ref<jni::array<java::lang::String>>>(); }
	void setProtocols(jni::ref<jni::array<java::lang::String>> p1) { return call_method<"setProtocols", void>(p1); }
	jboolean getWantClientAuth() { return call_method<"getWantClientAuth", jboolean>(); }
	void setWantClientAuth(jboolean p1) { return call_method<"setWantClientAuth", void>(p1); }
	jboolean getNeedClientAuth() { return call_method<"getNeedClientAuth", jboolean>(); }
	void setNeedClientAuth(jboolean p1) { return call_method<"setNeedClientAuth", void>(p1); }
	jni::ref<java::security::AlgorithmConstraints> getAlgorithmConstraints() { return call_method<"getAlgorithmConstraints", jni::ref<java::security::AlgorithmConstraints>>(); }
	void setAlgorithmConstraints(jni::ref<java::security::AlgorithmConstraints> p1) { return call_method<"setAlgorithmConstraints", void>(p1); }
	jni::ref<java::lang::String> getEndpointIdentificationAlgorithm() { return call_method<"getEndpointIdentificationAlgorithm", jni::ref<java::lang::String>>(); }
	void setEndpointIdentificationAlgorithm(jni::ref<java::lang::String> p1) { return call_method<"setEndpointIdentificationAlgorithm", void>(p1); }
	void setServerNames(jni::ref<java::util::List> p1) { return call_method<"setServerNames", void>(p1); }
	jni::ref<java::util::List> getServerNames() { return call_method<"getServerNames", jni::ref<java::util::List>>(); }
	void setSNIMatchers(jni::ref<java::util::Collection> p1) { return call_method<"setSNIMatchers", void>(p1); }
	jni::ref<java::util::Collection> getSNIMatchers() { return call_method<"getSNIMatchers", jni::ref<java::util::Collection>>(); }
	void setUseCipherSuitesOrder(jboolean p1) { return call_method<"setUseCipherSuitesOrder", void>(p1); }
	jboolean getUseCipherSuitesOrder() { return call_method<"getUseCipherSuitesOrder", jboolean>(); }
	jni::ref<jni::array<java::lang::String>> getApplicationProtocols() { return call_method<"getApplicationProtocols", jni::ref<jni::array<java::lang::String>>>(); }
	void setApplicationProtocols(jni::ref<jni::array<java::lang::String>> p1) { return call_method<"setApplicationProtocols", void>(p1); }

protected:

	SSLParameters(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_NET_SSL_SSLPARAMETERS
