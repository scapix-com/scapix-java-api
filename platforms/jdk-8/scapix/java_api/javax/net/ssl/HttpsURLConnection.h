// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/net/HttpURLConnection.h>

#ifndef SCAPIX_JAVA_API_JAVAX_NET_SSL_HTTPSURLCONNECTION_FWD
#define SCAPIX_JAVA_API_JAVAX_NET_SSL_HTTPSURLCONNECTION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::net::ssl { class HttpsURLConnection; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::net::ssl::HttpsURLConnection>
{
	static constexpr fixed_string class_name = "javax/net/ssl/HttpsURLConnection";
	using base_classes = std::tuple<scapix::java_api::java::net::HttpURLConnection>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_NET_SSL_HTTPSURLCONNECTION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_NET_SSL_HTTPSURLCONNECTION)
#define SCAPIX_JAVA_API_JAVAX_NET_SSL_HTTPSURLCONNECTION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/security/Principal.h>
#include <scapix/java_api/java/security/cert/Certificate.h>
#include <scapix/java_api/javax/net/ssl/HostnameVerifier.h>
#include <scapix/java_api/javax/net/ssl/SSLSocketFactory.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::net::ssl::HttpsURLConnection : public jni::object_base<"javax/net/ssl/HttpsURLConnection",
	java::net::HttpURLConnection>
{
public:

	jni::ref<java::lang::String> getCipherSuite() { return call_method<"getCipherSuite", jni::ref<java::lang::String>>(); }
	jni::ref<jni::array<java::security::cert::Certificate>> getLocalCertificates() { return call_method<"getLocalCertificates", jni::ref<jni::array<java::security::cert::Certificate>>>(); }
	jni::ref<jni::array<java::security::cert::Certificate>> getServerCertificates() { return call_method<"getServerCertificates", jni::ref<jni::array<java::security::cert::Certificate>>>(); }
	jni::ref<java::security::Principal> getPeerPrincipal() { return call_method<"getPeerPrincipal", jni::ref<java::security::Principal>>(); }
	jni::ref<java::security::Principal> getLocalPrincipal() { return call_method<"getLocalPrincipal", jni::ref<java::security::Principal>>(); }
	static void setDefaultHostnameVerifier(jni::ref<javax::net::ssl::HostnameVerifier> p1) { return call_static_method<"setDefaultHostnameVerifier", void>(p1); }
	static jni::ref<javax::net::ssl::HostnameVerifier> getDefaultHostnameVerifier() { return call_static_method<"getDefaultHostnameVerifier", jni::ref<javax::net::ssl::HostnameVerifier>>(); }
	void setHostnameVerifier(jni::ref<javax::net::ssl::HostnameVerifier> p1) { return call_method<"setHostnameVerifier", void>(p1); }
	jni::ref<javax::net::ssl::HostnameVerifier> getHostnameVerifier() { return call_method<"getHostnameVerifier", jni::ref<javax::net::ssl::HostnameVerifier>>(); }
	static void setDefaultSSLSocketFactory(jni::ref<javax::net::ssl::SSLSocketFactory> p1) { return call_static_method<"setDefaultSSLSocketFactory", void>(p1); }
	static jni::ref<javax::net::ssl::SSLSocketFactory> getDefaultSSLSocketFactory() { return call_static_method<"getDefaultSSLSocketFactory", jni::ref<javax::net::ssl::SSLSocketFactory>>(); }
	void setSSLSocketFactory(jni::ref<javax::net::ssl::SSLSocketFactory> p1) { return call_method<"setSSLSocketFactory", void>(p1); }
	jni::ref<javax::net::ssl::SSLSocketFactory> getSSLSocketFactory() { return call_method<"getSSLSocketFactory", jni::ref<javax::net::ssl::SSLSocketFactory>>(); }

protected:

	HttpsURLConnection(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_NET_SSL_HTTPSURLCONNECTION
