// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Exception.h>

#ifndef SCAPIX_JAVA_API_JAVAX_NAMING_NAMINGEXCEPTION_FWD
#define SCAPIX_JAVA_API_JAVAX_NAMING_NAMINGEXCEPTION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::naming { class NamingException; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::naming::NamingException>
{
	static constexpr fixed_string class_name = "javax/naming/NamingException";
	using base_classes = std::tuple<scapix::java_api::java::lang::Exception>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_NAMING_NAMINGEXCEPTION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_NAMING_NAMINGEXCEPTION)
#define SCAPIX_JAVA_API_JAVAX_NAMING_NAMINGEXCEPTION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/Throwable.h>
#include <scapix/java_api/javax/naming/Name.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::naming::NamingException : public jni::object_base<"javax/naming/NamingException",
	java::lang::Exception>
{
public:

	static jni::ref<javax::naming::NamingException> new_object(jni::ref<java::lang::String> p1) { return base_::new_object(p1); }
	static jni::ref<javax::naming::NamingException> new_object() { return base_::new_object(); }
	jni::ref<javax::naming::Name> getResolvedName() { return call_method<"getResolvedName", jni::ref<javax::naming::Name>>(); }
	jni::ref<javax::naming::Name> getRemainingName() { return call_method<"getRemainingName", jni::ref<javax::naming::Name>>(); }
	jni::ref<java::lang::Object> getResolvedObj() { return call_method<"getResolvedObj", jni::ref<java::lang::Object>>(); }
	jni::ref<java::lang::String> getExplanation() { return call_method<"getExplanation", jni::ref<java::lang::String>>(); }
	void setResolvedName(jni::ref<javax::naming::Name> p1) { return call_method<"setResolvedName", void>(p1); }
	void setRemainingName(jni::ref<javax::naming::Name> p1) { return call_method<"setRemainingName", void>(p1); }
	void setResolvedObj(jni::ref<java::lang::Object> p1) { return call_method<"setResolvedObj", void>(p1); }
	void appendRemainingComponent(jni::ref<java::lang::String> p1) { return call_method<"appendRemainingComponent", void>(p1); }
	void appendRemainingName(jni::ref<javax::naming::Name> p1) { return call_method<"appendRemainingName", void>(p1); }
	jni::ref<java::lang::Throwable> getRootCause() { return call_method<"getRootCause", jni::ref<java::lang::Throwable>>(); }
	void setRootCause(jni::ref<java::lang::Throwable> p1) { return call_method<"setRootCause", void>(p1); }
	jni::ref<java::lang::Throwable> getCause() { return call_method<"getCause", jni::ref<java::lang::Throwable>>(); }
	jni::ref<java::lang::Throwable> initCause(jni::ref<java::lang::Throwable> p1) { return call_method<"initCause", jni::ref<java::lang::Throwable>>(p1); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> toString(jboolean p1) { return call_method<"toString", jni::ref<java::lang::String>>(p1); }

protected:

	NamingException(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_NAMING_NAMINGEXCEPTION
