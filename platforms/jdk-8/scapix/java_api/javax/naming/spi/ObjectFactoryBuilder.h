// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_NAMING_SPI_OBJECTFACTORYBUILDER_FWD
#define SCAPIX_JAVA_API_JAVAX_NAMING_SPI_OBJECTFACTORYBUILDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::naming::spi { class ObjectFactoryBuilder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::naming::spi::ObjectFactoryBuilder>
{
	static constexpr fixed_string class_name = "javax/naming/spi/ObjectFactoryBuilder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_NAMING_SPI_OBJECTFACTORYBUILDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_NAMING_SPI_OBJECTFACTORYBUILDER)
#define SCAPIX_JAVA_API_JAVAX_NAMING_SPI_OBJECTFACTORYBUILDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/util/Hashtable.h>
#include <scapix/java_api/javax/naming/spi/ObjectFactory.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::naming::spi::ObjectFactoryBuilder : public jni::object_base<"javax/naming/spi/ObjectFactoryBuilder",
	java::lang::Object>
{
public:

	jni::ref<javax::naming::spi::ObjectFactory> createObjectFactory(jni::ref<java::lang::Object> p1, jni::ref<java::util::Hashtable> p2) { return call_method<"createObjectFactory", jni::ref<javax::naming::spi::ObjectFactory>>(p1, p2); }

protected:

	ObjectFactoryBuilder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_NAMING_SPI_OBJECTFACTORYBUILDER
