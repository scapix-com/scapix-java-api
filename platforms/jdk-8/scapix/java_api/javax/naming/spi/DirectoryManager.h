// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/naming/spi/NamingManager.h>

#ifndef SCAPIX_JAVA_API_JAVAX_NAMING_SPI_DIRECTORYMANAGER_FWD
#define SCAPIX_JAVA_API_JAVAX_NAMING_SPI_DIRECTORYMANAGER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::naming::spi { class DirectoryManager; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::naming::spi::DirectoryManager>
{
	static constexpr fixed_string class_name = "javax/naming/spi/DirectoryManager";
	using base_classes = std::tuple<scapix::java_api::javax::naming::spi::NamingManager>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_NAMING_SPI_DIRECTORYMANAGER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_NAMING_SPI_DIRECTORYMANAGER)
#define SCAPIX_JAVA_API_JAVAX_NAMING_SPI_DIRECTORYMANAGER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/util/Hashtable.h>
#include <scapix/java_api/javax/naming/CannotProceedException.h>
#include <scapix/java_api/javax/naming/Context.h>
#include <scapix/java_api/javax/naming/Name.h>
#include <scapix/java_api/javax/naming/directory/Attributes.h>
#include <scapix/java_api/javax/naming/directory/DirContext.h>
#include <scapix/java_api/javax/naming/spi/DirStateFactory_Result.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::naming::spi::DirectoryManager : public jni::object_base<"javax/naming/spi/DirectoryManager",
	javax::naming::spi::NamingManager>
{
public:

	static jni::ref<javax::naming::directory::DirContext> getContinuationDirContext(jni::ref<javax::naming::CannotProceedException> p1) { return call_static_method<"getContinuationDirContext", jni::ref<javax::naming::directory::DirContext>>(p1); }
	static jni::ref<java::lang::Object> getObjectInstance(jni::ref<java::lang::Object> p1, jni::ref<javax::naming::Name> p2, jni::ref<javax::naming::Context> p3, jni::ref<java::util::Hashtable> p4, jni::ref<javax::naming::directory::Attributes> p5) { return call_static_method<"getObjectInstance", jni::ref<java::lang::Object>>(p1, p2, p3, p4, p5); }
	static jni::ref<javax::naming::spi::DirStateFactory_Result> getStateToBind(jni::ref<java::lang::Object> p1, jni::ref<javax::naming::Name> p2, jni::ref<javax::naming::Context> p3, jni::ref<java::util::Hashtable> p4, jni::ref<javax::naming::directory::Attributes> p5) { return call_static_method<"getStateToBind", jni::ref<javax::naming::spi::DirStateFactory_Result>>(p1, p2, p3, p4, p5); }

protected:

	DirectoryManager(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_NAMING_SPI_DIRECTORYMANAGER
