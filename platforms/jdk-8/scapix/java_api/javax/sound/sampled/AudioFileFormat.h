// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SOUND_SAMPLED_AUDIOFILEFORMAT_FWD
#define SCAPIX_JAVA_API_JAVAX_SOUND_SAMPLED_AUDIOFILEFORMAT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::sound::sampled { class AudioFileFormat; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::sound::sampled::AudioFileFormat>
{
	static constexpr fixed_string class_name = "javax/sound/sampled/AudioFileFormat";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SOUND_SAMPLED_AUDIOFILEFORMAT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SOUND_SAMPLED_AUDIOFILEFORMAT)
#define SCAPIX_JAVA_API_JAVAX_SOUND_SAMPLED_AUDIOFILEFORMAT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Map.h>
#include <scapix/java_api/javax/sound/sampled/AudioFileFormat_Type.h>
#include <scapix/java_api/javax/sound/sampled/AudioFormat.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::sound::sampled::AudioFileFormat : public jni::object_base<"javax/sound/sampled/AudioFileFormat",
	java::lang::Object>
{
public:

	using Type = AudioFileFormat_Type;

	static jni::ref<javax::sound::sampled::AudioFileFormat> new_object(jni::ref<javax::sound::sampled::AudioFileFormat_Type> p1, jni::ref<javax::sound::sampled::AudioFormat> p2, jint p3) { return base_::new_object(p1, p2, p3); }
	static jni::ref<javax::sound::sampled::AudioFileFormat> new_object(jni::ref<javax::sound::sampled::AudioFileFormat_Type> p1, jni::ref<javax::sound::sampled::AudioFormat> p2, jint p3, jni::ref<java::util::Map> p4) { return base_::new_object(p1, p2, p3, p4); }
	jni::ref<javax::sound::sampled::AudioFileFormat_Type> getType() { return call_method<"getType", jni::ref<javax::sound::sampled::AudioFileFormat_Type>>(); }
	jint getByteLength() { return call_method<"getByteLength", jint>(); }
	jni::ref<javax::sound::sampled::AudioFormat> getFormat() { return call_method<"getFormat", jni::ref<javax::sound::sampled::AudioFormat>>(); }
	jint getFrameLength() { return call_method<"getFrameLength", jint>(); }
	jni::ref<java::util::Map> properties() { return call_method<"properties", jni::ref<java::util::Map>>(); }
	jni::ref<java::lang::Object> getProperty(jni::ref<java::lang::String> p1) { return call_method<"getProperty", jni::ref<java::lang::Object>>(p1); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	AudioFileFormat(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SOUND_SAMPLED_AUDIOFILEFORMAT
