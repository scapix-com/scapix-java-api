// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/sound/midi/MidiMessage.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SOUND_MIDI_METAMESSAGE_FWD
#define SCAPIX_JAVA_API_JAVAX_SOUND_MIDI_METAMESSAGE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::sound::midi { class MetaMessage; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::sound::midi::MetaMessage>
{
	static constexpr fixed_string class_name = "javax/sound/midi/MetaMessage";
	using base_classes = std::tuple<scapix::java_api::javax::sound::midi::MidiMessage>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SOUND_MIDI_METAMESSAGE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SOUND_MIDI_METAMESSAGE)
#define SCAPIX_JAVA_API_JAVAX_SOUND_MIDI_METAMESSAGE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::sound::midi::MetaMessage : public jni::object_base<"javax/sound/midi/MetaMessage",
	javax::sound::midi::MidiMessage>
{
public:

	static jint META() { return get_static_field<"META", jint>(); }

	static jni::ref<javax::sound::midi::MetaMessage> new_object() { return base_::new_object(); }
	static jni::ref<javax::sound::midi::MetaMessage> new_object(jint p1, jni::ref<jni::array<jbyte>> p2, jint p3) { return base_::new_object(p1, p2, p3); }
	void setMessage(jint p1, jni::ref<jni::array<jbyte>> p2, jint p3) { return call_method<"setMessage", void>(p1, p2, p3); }
	jint getType() { return call_method<"getType", jint>(); }
	jni::ref<jni::array<jbyte>> getData() { return call_method<"getData", jni::ref<jni::array<jbyte>>>(); }
	jni::ref<java::lang::Object> clone() { return call_method<"clone", jni::ref<java::lang::Object>>(); }

protected:

	MetaMessage(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SOUND_MIDI_METAMESSAGE
