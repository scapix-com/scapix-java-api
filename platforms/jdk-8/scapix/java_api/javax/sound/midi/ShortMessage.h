// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/sound/midi/MidiMessage.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SOUND_MIDI_SHORTMESSAGE_FWD
#define SCAPIX_JAVA_API_JAVAX_SOUND_MIDI_SHORTMESSAGE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::sound::midi { class ShortMessage; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::sound::midi::ShortMessage>
{
	static constexpr fixed_string class_name = "javax/sound/midi/ShortMessage";
	using base_classes = std::tuple<scapix::java_api::javax::sound::midi::MidiMessage>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SOUND_MIDI_SHORTMESSAGE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SOUND_MIDI_SHORTMESSAGE)
#define SCAPIX_JAVA_API_JAVAX_SOUND_MIDI_SHORTMESSAGE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::sound::midi::ShortMessage : public jni::object_base<"javax/sound/midi/ShortMessage",
	javax::sound::midi::MidiMessage>
{
public:

	static jint MIDI_TIME_CODE() { return get_static_field<"MIDI_TIME_CODE", jint>(); }
	static jint SONG_POSITION_POINTER() { return get_static_field<"SONG_POSITION_POINTER", jint>(); }
	static jint SONG_SELECT() { return get_static_field<"SONG_SELECT", jint>(); }
	static jint TUNE_REQUEST() { return get_static_field<"TUNE_REQUEST", jint>(); }
	static jint END_OF_EXCLUSIVE() { return get_static_field<"END_OF_EXCLUSIVE", jint>(); }
	static jint TIMING_CLOCK() { return get_static_field<"TIMING_CLOCK", jint>(); }
	static jint START() { return get_static_field<"START", jint>(); }
	static jint CONTINUE() { return get_static_field<"CONTINUE", jint>(); }
	static jint STOP() { return get_static_field<"STOP", jint>(); }
	static jint ACTIVE_SENSING() { return get_static_field<"ACTIVE_SENSING", jint>(); }
	static jint SYSTEM_RESET() { return get_static_field<"SYSTEM_RESET", jint>(); }
	static jint NOTE_OFF() { return get_static_field<"NOTE_OFF", jint>(); }
	static jint NOTE_ON() { return get_static_field<"NOTE_ON", jint>(); }
	static jint POLY_PRESSURE() { return get_static_field<"POLY_PRESSURE", jint>(); }
	static jint CONTROL_CHANGE() { return get_static_field<"CONTROL_CHANGE", jint>(); }
	static jint PROGRAM_CHANGE() { return get_static_field<"PROGRAM_CHANGE", jint>(); }
	static jint CHANNEL_PRESSURE() { return get_static_field<"CHANNEL_PRESSURE", jint>(); }
	static jint PITCH_BEND() { return get_static_field<"PITCH_BEND", jint>(); }

	static jni::ref<javax::sound::midi::ShortMessage> new_object() { return base_::new_object(); }
	static jni::ref<javax::sound::midi::ShortMessage> new_object(jint p1) { return base_::new_object(p1); }
	static jni::ref<javax::sound::midi::ShortMessage> new_object(jint p1, jint p2, jint p3) { return base_::new_object(p1, p2, p3); }
	static jni::ref<javax::sound::midi::ShortMessage> new_object(jint p1, jint p2, jint p3, jint p4) { return base_::new_object(p1, p2, p3, p4); }
	void setMessage(jint p1) { return call_method<"setMessage", void>(p1); }
	void setMessage(jint p1, jint p2, jint p3) { return call_method<"setMessage", void>(p1, p2, p3); }
	void setMessage(jint p1, jint p2, jint p3, jint p4) { return call_method<"setMessage", void>(p1, p2, p3, p4); }
	jint getChannel() { return call_method<"getChannel", jint>(); }
	jint getCommand() { return call_method<"getCommand", jint>(); }
	jint getData1() { return call_method<"getData1", jint>(); }
	jint getData2() { return call_method<"getData2", jint>(); }
	jni::ref<java::lang::Object> clone() { return call_method<"clone", jni::ref<java::lang::Object>>(); }

protected:

	ShortMessage(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SOUND_MIDI_SHORTMESSAGE
