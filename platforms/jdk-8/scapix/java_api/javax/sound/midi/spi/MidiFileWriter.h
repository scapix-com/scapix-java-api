// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SOUND_MIDI_SPI_MIDIFILEWRITER_FWD
#define SCAPIX_JAVA_API_JAVAX_SOUND_MIDI_SPI_MIDIFILEWRITER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::sound::midi::spi { class MidiFileWriter; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::sound::midi::spi::MidiFileWriter>
{
	static constexpr fixed_string class_name = "javax/sound/midi/spi/MidiFileWriter";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SOUND_MIDI_SPI_MIDIFILEWRITER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SOUND_MIDI_SPI_MIDIFILEWRITER)
#define SCAPIX_JAVA_API_JAVAX_SOUND_MIDI_SPI_MIDIFILEWRITER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/File.h>
#include <scapix/java_api/java/io/OutputStream.h>
#include <scapix/java_api/javax/sound/midi/Sequence.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::sound::midi::spi::MidiFileWriter : public jni::object_base<"javax/sound/midi/spi/MidiFileWriter",
	java::lang::Object>
{
public:

	static jni::ref<javax::sound::midi::spi::MidiFileWriter> new_object() { return base_::new_object(); }
	jni::ref<jni::array<jint>> getMidiFileTypes() { return call_method<"getMidiFileTypes", jni::ref<jni::array<jint>>>(); }
	jni::ref<jni::array<jint>> getMidiFileTypes(jni::ref<javax::sound::midi::Sequence> p1) { return call_method<"getMidiFileTypes", jni::ref<jni::array<jint>>>(p1); }
	jboolean isFileTypeSupported(jint p1) { return call_method<"isFileTypeSupported", jboolean>(p1); }
	jboolean isFileTypeSupported(jint p1, jni::ref<javax::sound::midi::Sequence> p2) { return call_method<"isFileTypeSupported", jboolean>(p1, p2); }
	jint write(jni::ref<javax::sound::midi::Sequence> p1, jint p2, jni::ref<java::io::OutputStream> p3) { return call_method<"write", jint>(p1, p2, p3); }
	jint write(jni::ref<javax::sound::midi::Sequence> p1, jint p2, jni::ref<java::io::File> p3) { return call_method<"write", jint>(p1, p2, p3); }

protected:

	MidiFileWriter(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SOUND_MIDI_SPI_MIDIFILEWRITER
