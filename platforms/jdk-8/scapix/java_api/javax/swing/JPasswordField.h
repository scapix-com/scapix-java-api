// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/swing/JTextField.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_JPASSWORDFIELD_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_JPASSWORDFIELD_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing { class JPasswordField; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::JPasswordField>
{
	static constexpr fixed_string class_name = "javax/swing/JPasswordField";
	using base_classes = std::tuple<scapix::java_api::javax::swing::JTextField>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_JPASSWORDFIELD_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_JPASSWORDFIELD)
#define SCAPIX_JAVA_API_JAVAX_SWING_JPASSWORDFIELD

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/accessibility/AccessibleContext.h>
#include <scapix/java_api/javax/swing/text/Document.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::JPasswordField : public jni::object_base<"javax/swing/JPasswordField",
	javax::swing::JTextField>
{
public:

	static jni::ref<javax::swing::JPasswordField> new_object() { return base_::new_object(); }
	static jni::ref<javax::swing::JPasswordField> new_object(jni::ref<java::lang::String> p1) { return base_::new_object(p1); }
	static jni::ref<javax::swing::JPasswordField> new_object(jint p1) { return base_::new_object(p1); }
	static jni::ref<javax::swing::JPasswordField> new_object(jni::ref<java::lang::String> p1, jint p2) { return base_::new_object(p1, p2); }
	static jni::ref<javax::swing::JPasswordField> new_object(jni::ref<javax::swing::text::Document> p1, jni::ref<java::lang::String> p2, jint p3) { return base_::new_object(p1, p2, p3); }
	jni::ref<java::lang::String> getUIClassID() { return call_method<"getUIClassID", jni::ref<java::lang::String>>(); }
	void updateUI() { return call_method<"updateUI", void>(); }
	jchar getEchoChar() { return call_method<"getEchoChar", jchar>(); }
	void setEchoChar(jchar p1) { return call_method<"setEchoChar", void>(p1); }
	jboolean echoCharIsSet() { return call_method<"echoCharIsSet", jboolean>(); }
	void cut() { return call_method<"cut", void>(); }
	void copy() { return call_method<"copy", void>(); }
	jni::ref<java::lang::String> getText() { return call_method<"getText", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getText(jint p1, jint p2) { return call_method<"getText", jni::ref<java::lang::String>>(p1, p2); }
	void setText(jni::ref<java::lang::String> p1) { return call_method<"setText", void>(p1); }
	jni::ref<jni::array<jchar>> getPassword() { return call_method<"getPassword", jni::ref<jni::array<jchar>>>(); }
	jni::ref<javax::accessibility::AccessibleContext> getAccessibleContext() { return call_method<"getAccessibleContext", jni::ref<javax::accessibility::AccessibleContext>>(); }

protected:

	JPasswordField(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_JPASSWORDFIELD
