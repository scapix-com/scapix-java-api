// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_TREE_TREEMODEL_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_TREE_TREEMODEL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing::tree { class TreeModel; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::tree::TreeModel>
{
	static constexpr fixed_string class_name = "javax/swing/tree/TreeModel";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TREE_TREEMODEL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_TREE_TREEMODEL)
#define SCAPIX_JAVA_API_JAVAX_SWING_TREE_TREEMODEL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/javax/swing/event/TreeModelListener.h>
#include <scapix/java_api/javax/swing/tree/TreePath.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::tree::TreeModel : public jni::object_base<"javax/swing/tree/TreeModel",
	java::lang::Object>
{
public:

	jni::ref<java::lang::Object> getRoot() { return call_method<"getRoot", jni::ref<java::lang::Object>>(); }
	jni::ref<java::lang::Object> getChild(jni::ref<java::lang::Object> p1, jint p2) { return call_method<"getChild", jni::ref<java::lang::Object>>(p1, p2); }
	jint getChildCount(jni::ref<java::lang::Object> p1) { return call_method<"getChildCount", jint>(p1); }
	jboolean isLeaf(jni::ref<java::lang::Object> p1) { return call_method<"isLeaf", jboolean>(p1); }
	void valueForPathChanged(jni::ref<javax::swing::tree::TreePath> p1, jni::ref<java::lang::Object> p2) { return call_method<"valueForPathChanged", void>(p1, p2); }
	jint getIndexOfChild(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2) { return call_method<"getIndexOfChild", jint>(p1, p2); }
	void addTreeModelListener(jni::ref<javax::swing::event::TreeModelListener> p1) { return call_method<"addTreeModelListener", void>(p1); }
	void removeTreeModelListener(jni::ref<javax::swing::event::TreeModelListener> p1) { return call_method<"removeTreeModelListener", void>(p1); }

protected:

	TreeModel(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TREE_TREEMODEL
