// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/awt/event/ActionListener.h>
#include <scapix/java_api/javax/swing/tree/TreeCellEditor.h>
#include <scapix/java_api/javax/swing/event/TreeSelectionListener.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_TREE_DEFAULTTREECELLEDITOR_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_TREE_DEFAULTTREECELLEDITOR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing::tree { class DefaultTreeCellEditor; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::tree::DefaultTreeCellEditor>
{
	static constexpr fixed_string class_name = "javax/swing/tree/DefaultTreeCellEditor";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::awt::event::ActionListener, scapix::java_api::javax::swing::tree::TreeCellEditor, scapix::java_api::javax::swing::event::TreeSelectionListener>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TREE_DEFAULTTREECELLEDITOR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_TREE_DEFAULTTREECELLEDITOR)
#define SCAPIX_JAVA_API_JAVAX_SWING_TREE_DEFAULTTREECELLEDITOR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Color.h>
#include <scapix/java_api/java/awt/Component.h>
#include <scapix/java_api/java/awt/Font.h>
#include <scapix/java_api/java/awt/event/ActionEvent.h>
#include <scapix/java_api/java/util/EventObject.h>
#include <scapix/java_api/javax/swing/JTree.h>
#include <scapix/java_api/javax/swing/event/CellEditorListener.h>
#include <scapix/java_api/javax/swing/event/TreeSelectionEvent.h>
#include <scapix/java_api/javax/swing/tree/DefaultTreeCellRenderer.h>
#include <scapix/java_api/javax/swing/tree/DefaultTreeCellEditor_DefaultTextField.h>
#include <scapix/java_api/javax/swing/tree/DefaultTreeCellEditor_EditorContainer.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::tree::DefaultTreeCellEditor : public jni::object_base<"javax/swing/tree/DefaultTreeCellEditor",
	java::lang::Object,
	java::awt::event::ActionListener,
	javax::swing::tree::TreeCellEditor,
	javax::swing::event::TreeSelectionListener>
{
public:

	using DefaultTextField = DefaultTreeCellEditor_DefaultTextField;
	using EditorContainer = DefaultTreeCellEditor_EditorContainer;

	static jni::ref<javax::swing::tree::DefaultTreeCellEditor> new_object(jni::ref<javax::swing::JTree> p1, jni::ref<javax::swing::tree::DefaultTreeCellRenderer> p2) { return base_::new_object(p1, p2); }
	static jni::ref<javax::swing::tree::DefaultTreeCellEditor> new_object(jni::ref<javax::swing::JTree> p1, jni::ref<javax::swing::tree::DefaultTreeCellRenderer> p2, jni::ref<javax::swing::tree::TreeCellEditor> p3) { return base_::new_object(p1, p2, p3); }
	void setBorderSelectionColor(jni::ref<java::awt::Color> p1) { return call_method<"setBorderSelectionColor", void>(p1); }
	jni::ref<java::awt::Color> getBorderSelectionColor() { return call_method<"getBorderSelectionColor", jni::ref<java::awt::Color>>(); }
	void setFont(jni::ref<java::awt::Font> p1) { return call_method<"setFont", void>(p1); }
	jni::ref<java::awt::Font> getFont() { return call_method<"getFont", jni::ref<java::awt::Font>>(); }
	jni::ref<java::awt::Component> getTreeCellEditorComponent(jni::ref<javax::swing::JTree> p1, jni::ref<java::lang::Object> p2, jboolean p3, jboolean p4, jboolean p5, jint p6) { return call_method<"getTreeCellEditorComponent", jni::ref<java::awt::Component>>(p1, p2, p3, p4, p5, p6); }
	jni::ref<java::lang::Object> getCellEditorValue() { return call_method<"getCellEditorValue", jni::ref<java::lang::Object>>(); }
	jboolean isCellEditable(jni::ref<java::util::EventObject> p1) { return call_method<"isCellEditable", jboolean>(p1); }
	jboolean shouldSelectCell(jni::ref<java::util::EventObject> p1) { return call_method<"shouldSelectCell", jboolean>(p1); }
	jboolean stopCellEditing() { return call_method<"stopCellEditing", jboolean>(); }
	void cancelCellEditing() { return call_method<"cancelCellEditing", void>(); }
	void addCellEditorListener(jni::ref<javax::swing::event::CellEditorListener> p1) { return call_method<"addCellEditorListener", void>(p1); }
	void removeCellEditorListener(jni::ref<javax::swing::event::CellEditorListener> p1) { return call_method<"removeCellEditorListener", void>(p1); }
	jni::ref<jni::array<javax::swing::event::CellEditorListener>> getCellEditorListeners() { return call_method<"getCellEditorListeners", jni::ref<jni::array<javax::swing::event::CellEditorListener>>>(); }
	void valueChanged(jni::ref<javax::swing::event::TreeSelectionEvent> p1) { return call_method<"valueChanged", void>(p1); }
	void actionPerformed(jni::ref<java::awt::event::ActionEvent> p1) { return call_method<"actionPerformed", void>(p1); }

protected:

	DefaultTreeCellEditor(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TREE_DEFAULTTREECELLEDITOR
