// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/swing/tree/AbstractLayoutCache.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_TREE_VARIABLEHEIGHTLAYOUTCACHE_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_TREE_VARIABLEHEIGHTLAYOUTCACHE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing::tree { class VariableHeightLayoutCache; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::tree::VariableHeightLayoutCache>
{
	static constexpr fixed_string class_name = "javax/swing/tree/VariableHeightLayoutCache";
	using base_classes = std::tuple<scapix::java_api::javax::swing::tree::AbstractLayoutCache>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TREE_VARIABLEHEIGHTLAYOUTCACHE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_TREE_VARIABLEHEIGHTLAYOUTCACHE)
#define SCAPIX_JAVA_API_JAVAX_SWING_TREE_VARIABLEHEIGHTLAYOUTCACHE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Rectangle.h>
#include <scapix/java_api/java/util/Enumeration.h>
#include <scapix/java_api/javax/swing/event/TreeModelEvent.h>
#include <scapix/java_api/javax/swing/tree/AbstractLayoutCache_NodeDimensions.h>
#include <scapix/java_api/javax/swing/tree/TreeModel.h>
#include <scapix/java_api/javax/swing/tree/TreePath.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::tree::VariableHeightLayoutCache : public jni::object_base<"javax/swing/tree/VariableHeightLayoutCache",
	javax::swing::tree::AbstractLayoutCache>
{
public:

	static jni::ref<javax::swing::tree::VariableHeightLayoutCache> new_object() { return base_::new_object(); }
	void setModel(jni::ref<javax::swing::tree::TreeModel> p1) { return call_method<"setModel", void>(p1); }
	void setRootVisible(jboolean p1) { return call_method<"setRootVisible", void>(p1); }
	void setRowHeight(jint p1) { return call_method<"setRowHeight", void>(p1); }
	void setNodeDimensions(jni::ref<javax::swing::tree::AbstractLayoutCache_NodeDimensions> p1) { return call_method<"setNodeDimensions", void>(p1); }
	void setExpandedState(jni::ref<javax::swing::tree::TreePath> p1, jboolean p2) { return call_method<"setExpandedState", void>(p1, p2); }
	jboolean getExpandedState(jni::ref<javax::swing::tree::TreePath> p1) { return call_method<"getExpandedState", jboolean>(p1); }
	jni::ref<java::awt::Rectangle> getBounds(jni::ref<javax::swing::tree::TreePath> p1, jni::ref<java::awt::Rectangle> p2) { return call_method<"getBounds", jni::ref<java::awt::Rectangle>>(p1, p2); }
	jni::ref<javax::swing::tree::TreePath> getPathForRow(jint p1) { return call_method<"getPathForRow", jni::ref<javax::swing::tree::TreePath>>(p1); }
	jint getRowForPath(jni::ref<javax::swing::tree::TreePath> p1) { return call_method<"getRowForPath", jint>(p1); }
	jint getRowCount() { return call_method<"getRowCount", jint>(); }
	void invalidatePathBounds(jni::ref<javax::swing::tree::TreePath> p1) { return call_method<"invalidatePathBounds", void>(p1); }
	jint getPreferredHeight() { return call_method<"getPreferredHeight", jint>(); }
	jint getPreferredWidth(jni::ref<java::awt::Rectangle> p1) { return call_method<"getPreferredWidth", jint>(p1); }
	jni::ref<javax::swing::tree::TreePath> getPathClosestTo(jint p1, jint p2) { return call_method<"getPathClosestTo", jni::ref<javax::swing::tree::TreePath>>(p1, p2); }
	jni::ref<java::util::Enumeration> getVisiblePathsFrom(jni::ref<javax::swing::tree::TreePath> p1) { return call_method<"getVisiblePathsFrom", jni::ref<java::util::Enumeration>>(p1); }
	jint getVisibleChildCount(jni::ref<javax::swing::tree::TreePath> p1) { return call_method<"getVisibleChildCount", jint>(p1); }
	void invalidateSizes() { return call_method<"invalidateSizes", void>(); }
	jboolean isExpanded(jni::ref<javax::swing::tree::TreePath> p1) { return call_method<"isExpanded", jboolean>(p1); }
	void treeNodesChanged(jni::ref<javax::swing::event::TreeModelEvent> p1) { return call_method<"treeNodesChanged", void>(p1); }
	void treeNodesInserted(jni::ref<javax::swing::event::TreeModelEvent> p1) { return call_method<"treeNodesInserted", void>(p1); }
	void treeNodesRemoved(jni::ref<javax::swing::event::TreeModelEvent> p1) { return call_method<"treeNodesRemoved", void>(p1); }
	void treeStructureChanged(jni::ref<javax::swing::event::TreeModelEvent> p1) { return call_method<"treeStructureChanged", void>(p1); }

protected:

	VariableHeightLayoutCache(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TREE_VARIABLEHEIGHTLAYOUTCACHE
