// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_TREE_TREENODE_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_TREE_TREENODE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing::tree { class TreeNode; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::tree::TreeNode>
{
	static constexpr fixed_string class_name = "javax/swing/tree/TreeNode";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TREE_TREENODE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_TREE_TREENODE)
#define SCAPIX_JAVA_API_JAVAX_SWING_TREE_TREENODE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/util/Enumeration.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::tree::TreeNode : public jni::object_base<"javax/swing/tree/TreeNode",
	java::lang::Object>
{
public:

	jni::ref<javax::swing::tree::TreeNode> getChildAt(jint p1) { return call_method<"getChildAt", jni::ref<javax::swing::tree::TreeNode>>(p1); }
	jint getChildCount() { return call_method<"getChildCount", jint>(); }
	jni::ref<javax::swing::tree::TreeNode> getParent() { return call_method<"getParent", jni::ref<javax::swing::tree::TreeNode>>(); }
	jint getIndex(jni::ref<javax::swing::tree::TreeNode> p1) { return call_method<"getIndex", jint>(p1); }
	jboolean getAllowsChildren() { return call_method<"getAllowsChildren", jboolean>(); }
	jboolean isLeaf() { return call_method<"isLeaf", jboolean>(); }
	jni::ref<java::util::Enumeration> children() { return call_method<"children", jni::ref<java::util::Enumeration>>(); }

protected:

	TreeNode(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TREE_TREENODE
