// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/javax/swing/table/TableModel.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_TABLE_ABSTRACTTABLEMODEL_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_TABLE_ABSTRACTTABLEMODEL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing::table { class AbstractTableModel; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::table::AbstractTableModel>
{
	static constexpr fixed_string class_name = "javax/swing/table/AbstractTableModel";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::javax::swing::table::TableModel, scapix::java_api::java::io::Serializable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TABLE_ABSTRACTTABLEMODEL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_TABLE_ABSTRACTTABLEMODEL)
#define SCAPIX_JAVA_API_JAVAX_SWING_TABLE_ABSTRACTTABLEMODEL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/EventListener.h>
#include <scapix/java_api/javax/swing/event/TableModelEvent.h>
#include <scapix/java_api/javax/swing/event/TableModelListener.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::table::AbstractTableModel : public jni::object_base<"javax/swing/table/AbstractTableModel",
	java::lang::Object,
	javax::swing::table::TableModel,
	java::io::Serializable>
{
public:

	static jni::ref<javax::swing::table::AbstractTableModel> new_object() { return base_::new_object(); }
	jni::ref<java::lang::String> getColumnName(jint p1) { return call_method<"getColumnName", jni::ref<java::lang::String>>(p1); }
	jint findColumn(jni::ref<java::lang::String> p1) { return call_method<"findColumn", jint>(p1); }
	jni::ref<java::lang::Class> getColumnClass(jint p1) { return call_method<"getColumnClass", jni::ref<java::lang::Class>>(p1); }
	jboolean isCellEditable(jint p1, jint p2) { return call_method<"isCellEditable", jboolean>(p1, p2); }
	void setValueAt(jni::ref<java::lang::Object> p1, jint p2, jint p3) { return call_method<"setValueAt", void>(p1, p2, p3); }
	void addTableModelListener(jni::ref<javax::swing::event::TableModelListener> p1) { return call_method<"addTableModelListener", void>(p1); }
	void removeTableModelListener(jni::ref<javax::swing::event::TableModelListener> p1) { return call_method<"removeTableModelListener", void>(p1); }
	jni::ref<jni::array<javax::swing::event::TableModelListener>> getTableModelListeners() { return call_method<"getTableModelListeners", jni::ref<jni::array<javax::swing::event::TableModelListener>>>(); }
	void fireTableDataChanged() { return call_method<"fireTableDataChanged", void>(); }
	void fireTableStructureChanged() { return call_method<"fireTableStructureChanged", void>(); }
	void fireTableRowsInserted(jint p1, jint p2) { return call_method<"fireTableRowsInserted", void>(p1, p2); }
	void fireTableRowsUpdated(jint p1, jint p2) { return call_method<"fireTableRowsUpdated", void>(p1, p2); }
	void fireTableRowsDeleted(jint p1, jint p2) { return call_method<"fireTableRowsDeleted", void>(p1, p2); }
	void fireTableCellUpdated(jint p1, jint p2) { return call_method<"fireTableCellUpdated", void>(p1, p2); }
	void fireTableChanged(jni::ref<javax::swing::event::TableModelEvent> p1) { return call_method<"fireTableChanged", void>(p1); }
	jni::ref<jni::array<java::util::EventListener>> getListeners(jni::ref<java::lang::Class> p1) { return call_method<"getListeners", jni::ref<jni::array<java::util::EventListener>>>(p1); }

protected:

	AbstractTableModel(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TABLE_ABSTRACTTABLEMODEL
