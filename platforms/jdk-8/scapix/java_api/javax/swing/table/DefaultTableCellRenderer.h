// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/swing/JLabel.h>
#include <scapix/java_api/javax/swing/table/TableCellRenderer.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_TABLE_DEFAULTTABLECELLRENDERER_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_TABLE_DEFAULTTABLECELLRENDERER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing::table { class DefaultTableCellRenderer; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::table::DefaultTableCellRenderer>
{
	static constexpr fixed_string class_name = "javax/swing/table/DefaultTableCellRenderer";
	using base_classes = std::tuple<scapix::java_api::javax::swing::JLabel, scapix::java_api::javax::swing::table::TableCellRenderer, scapix::java_api::java::io::Serializable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TABLE_DEFAULTTABLECELLRENDERER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_TABLE_DEFAULTTABLECELLRENDERER)
#define SCAPIX_JAVA_API_JAVAX_SWING_TABLE_DEFAULTTABLECELLRENDERER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Color.h>
#include <scapix/java_api/java/awt/Component.h>
#include <scapix/java_api/java/awt/Rectangle.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/swing/JTable.h>
#include <scapix/java_api/javax/swing/table/DefaultTableCellRenderer_UIResource.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::table::DefaultTableCellRenderer : public jni::object_base<"javax/swing/table/DefaultTableCellRenderer",
	javax::swing::JLabel,
	javax::swing::table::TableCellRenderer,
	java::io::Serializable>
{
public:

	using UIResource = DefaultTableCellRenderer_UIResource;

	static jni::ref<javax::swing::table::DefaultTableCellRenderer> new_object() { return base_::new_object(); }
	void setForeground(jni::ref<java::awt::Color> p1) { return call_method<"setForeground", void>(p1); }
	void setBackground(jni::ref<java::awt::Color> p1) { return call_method<"setBackground", void>(p1); }
	void updateUI() { return call_method<"updateUI", void>(); }
	jni::ref<java::awt::Component> getTableCellRendererComponent(jni::ref<javax::swing::JTable> p1, jni::ref<java::lang::Object> p2, jboolean p3, jboolean p4, jint p5, jint p6) { return call_method<"getTableCellRendererComponent", jni::ref<java::awt::Component>>(p1, p2, p3, p4, p5, p6); }
	jboolean isOpaque() { return call_method<"isOpaque", jboolean>(); }
	void invalidate() { return call_method<"invalidate", void>(); }
	void validate() { return call_method<"validate", void>(); }
	void revalidate() { return call_method<"revalidate", void>(); }
	void repaint(jlong p1, jint p2, jint p3, jint p4, jint p5) { return call_method<"repaint", void>(p1, p2, p3, p4, p5); }
	void repaint(jni::ref<java::awt::Rectangle> p1) { return call_method<"repaint", void>(p1); }
	void repaint() { return call_method<"repaint", void>(); }
	void firePropertyChange(jni::ref<java::lang::String> p1, jboolean p2, jboolean p3) { return call_method<"firePropertyChange", void>(p1, p2, p3); }

protected:

	DefaultTableCellRenderer(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TABLE_DEFAULTTABLECELLRENDERER
