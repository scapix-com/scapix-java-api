// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/swing/JComponent.h>
#include <scapix/java_api/javax/swing/event/TableColumnModelListener.h>
#include <scapix/java_api/javax/accessibility/Accessible.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_TABLE_JTABLEHEADER_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_TABLE_JTABLEHEADER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing::table { class JTableHeader; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::table::JTableHeader>
{
	static constexpr fixed_string class_name = "javax/swing/table/JTableHeader";
	using base_classes = std::tuple<scapix::java_api::javax::swing::JComponent, scapix::java_api::javax::swing::event::TableColumnModelListener, scapix::java_api::javax::accessibility::Accessible>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TABLE_JTABLEHEADER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_TABLE_JTABLEHEADER)
#define SCAPIX_JAVA_API_JAVAX_SWING_TABLE_JTABLEHEADER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Point.h>
#include <scapix/java_api/java/awt/Rectangle.h>
#include <scapix/java_api/java/awt/event/MouseEvent.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/accessibility/AccessibleContext.h>
#include <scapix/java_api/javax/swing/JTable.h>
#include <scapix/java_api/javax/swing/event/ChangeEvent.h>
#include <scapix/java_api/javax/swing/event/ListSelectionEvent.h>
#include <scapix/java_api/javax/swing/event/TableColumnModelEvent.h>
#include <scapix/java_api/javax/swing/plaf/TableHeaderUI.h>
#include <scapix/java_api/javax/swing/table/TableCellRenderer.h>
#include <scapix/java_api/javax/swing/table/TableColumn.h>
#include <scapix/java_api/javax/swing/table/TableColumnModel.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::table::JTableHeader : public jni::object_base<"javax/swing/table/JTableHeader",
	javax::swing::JComponent,
	javax::swing::event::TableColumnModelListener,
	javax::accessibility::Accessible>
{
public:

	static jni::ref<javax::swing::table::JTableHeader> new_object() { return base_::new_object(); }
	static jni::ref<javax::swing::table::JTableHeader> new_object(jni::ref<javax::swing::table::TableColumnModel> p1) { return base_::new_object(p1); }
	void setTable(jni::ref<javax::swing::JTable> p1) { return call_method<"setTable", void>(p1); }
	jni::ref<javax::swing::JTable> getTable() { return call_method<"getTable", jni::ref<javax::swing::JTable>>(); }
	void setReorderingAllowed(jboolean p1) { return call_method<"setReorderingAllowed", void>(p1); }
	jboolean getReorderingAllowed() { return call_method<"getReorderingAllowed", jboolean>(); }
	void setResizingAllowed(jboolean p1) { return call_method<"setResizingAllowed", void>(p1); }
	jboolean getResizingAllowed() { return call_method<"getResizingAllowed", jboolean>(); }
	jni::ref<javax::swing::table::TableColumn> getDraggedColumn() { return call_method<"getDraggedColumn", jni::ref<javax::swing::table::TableColumn>>(); }
	jint getDraggedDistance() { return call_method<"getDraggedDistance", jint>(); }
	jni::ref<javax::swing::table::TableColumn> getResizingColumn() { return call_method<"getResizingColumn", jni::ref<javax::swing::table::TableColumn>>(); }
	void setUpdateTableInRealTime(jboolean p1) { return call_method<"setUpdateTableInRealTime", void>(p1); }
	jboolean getUpdateTableInRealTime() { return call_method<"getUpdateTableInRealTime", jboolean>(); }
	void setDefaultRenderer(jni::ref<javax::swing::table::TableCellRenderer> p1) { return call_method<"setDefaultRenderer", void>(p1); }
	jni::ref<javax::swing::table::TableCellRenderer> getDefaultRenderer() { return call_method<"getDefaultRenderer", jni::ref<javax::swing::table::TableCellRenderer>>(); }
	jint columnAtPoint(jni::ref<java::awt::Point> p1) { return call_method<"columnAtPoint", jint>(p1); }
	jni::ref<java::awt::Rectangle> getHeaderRect(jint p1) { return call_method<"getHeaderRect", jni::ref<java::awt::Rectangle>>(p1); }
	jni::ref<java::lang::String> getToolTipText(jni::ref<java::awt::event::MouseEvent> p1) { return call_method<"getToolTipText", jni::ref<java::lang::String>>(p1); }
	jni::ref<javax::swing::plaf::TableHeaderUI> getUI() { return call_method<"getUI", jni::ref<javax::swing::plaf::TableHeaderUI>>(); }
	void setUI(jni::ref<javax::swing::plaf::TableHeaderUI> p1) { return call_method<"setUI", void>(p1); }
	void updateUI() { return call_method<"updateUI", void>(); }
	jni::ref<java::lang::String> getUIClassID() { return call_method<"getUIClassID", jni::ref<java::lang::String>>(); }
	void setColumnModel(jni::ref<javax::swing::table::TableColumnModel> p1) { return call_method<"setColumnModel", void>(p1); }
	jni::ref<javax::swing::table::TableColumnModel> getColumnModel() { return call_method<"getColumnModel", jni::ref<javax::swing::table::TableColumnModel>>(); }
	void columnAdded(jni::ref<javax::swing::event::TableColumnModelEvent> p1) { return call_method<"columnAdded", void>(p1); }
	void columnRemoved(jni::ref<javax::swing::event::TableColumnModelEvent> p1) { return call_method<"columnRemoved", void>(p1); }
	void columnMoved(jni::ref<javax::swing::event::TableColumnModelEvent> p1) { return call_method<"columnMoved", void>(p1); }
	void columnMarginChanged(jni::ref<javax::swing::event::ChangeEvent> p1) { return call_method<"columnMarginChanged", void>(p1); }
	void columnSelectionChanged(jni::ref<javax::swing::event::ListSelectionEvent> p1) { return call_method<"columnSelectionChanged", void>(p1); }
	void resizeAndRepaint() { return call_method<"resizeAndRepaint", void>(); }
	void setDraggedColumn(jni::ref<javax::swing::table::TableColumn> p1) { return call_method<"setDraggedColumn", void>(p1); }
	void setDraggedDistance(jint p1) { return call_method<"setDraggedDistance", void>(p1); }
	void setResizingColumn(jni::ref<javax::swing::table::TableColumn> p1) { return call_method<"setResizingColumn", void>(p1); }
	jni::ref<javax::accessibility::AccessibleContext> getAccessibleContext() { return call_method<"getAccessibleContext", jni::ref<javax::accessibility::AccessibleContext>>(); }

protected:

	JTableHeader(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TABLE_JTABLEHEADER
