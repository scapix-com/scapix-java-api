// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/swing/JList_AccessibleJList_AccessibleJListChild.h>
#include <scapix/java_api/javax/accessibility/AccessibleAction.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_JLIST_ACCESSIBLEJLIST_ACTIONABLEACCESSIBLEJLISTCHILD_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_JLIST_ACCESSIBLEJLIST_ACTIONABLEACCESSIBLEJLISTCHILD_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing { class JList_AccessibleJList_ActionableAccessibleJListChild; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::JList_AccessibleJList_ActionableAccessibleJListChild>
{
	static constexpr fixed_string class_name = "javax/swing/JList$AccessibleJList$ActionableAccessibleJListChild";
	using base_classes = std::tuple<scapix::java_api::javax::swing::JList_AccessibleJList_AccessibleJListChild, scapix::java_api::javax::accessibility::AccessibleAction>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_JLIST_ACCESSIBLEJLIST_ACTIONABLEACCESSIBLEJLISTCHILD_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_JLIST_ACCESSIBLEJLIST_ACTIONABLEACCESSIBLEJLISTCHILD)
#define SCAPIX_JAVA_API_JAVAX_SWING_JLIST_ACCESSIBLEJLIST_ACTIONABLEACCESSIBLEJLISTCHILD

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class javax::swing::JList_AccessibleJList_ActionableAccessibleJListChild : public jni::object_base<"javax/swing/JList$AccessibleJList$ActionableAccessibleJListChild",
	javax::swing::JList_AccessibleJList_AccessibleJListChild,
	javax::accessibility::AccessibleAction>
{
public:

	jni::ref<javax::accessibility::AccessibleAction> getAccessibleAction() { return call_method<"getAccessibleAction", jni::ref<javax::accessibility::AccessibleAction>>(); }
	jboolean doAccessibleAction(jint p1) { return call_method<"doAccessibleAction", jboolean>(p1); }
	jni::ref<java::lang::String> getAccessibleActionDescription(jint p1) { return call_method<"getAccessibleActionDescription", jni::ref<java::lang::String>>(p1); }
	jint getAccessibleActionCount() { return call_method<"getAccessibleActionCount", jint>(); }

protected:

	JList_AccessibleJList_ActionableAccessibleJListChild(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_JLIST_ACCESSIBLEJLIST_ACTIONABLEACCESSIBLEJLISTCHILD
