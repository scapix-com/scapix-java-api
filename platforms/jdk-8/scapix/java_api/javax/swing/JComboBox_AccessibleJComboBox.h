// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/swing/JComponent_AccessibleJComponent.h>
#include <scapix/java_api/javax/accessibility/AccessibleAction.h>
#include <scapix/java_api/javax/accessibility/AccessibleSelection.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_JCOMBOBOX_ACCESSIBLEJCOMBOBOX_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_JCOMBOBOX_ACCESSIBLEJCOMBOBOX_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing { class JComboBox_AccessibleJComboBox; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::JComboBox_AccessibleJComboBox>
{
	static constexpr fixed_string class_name = "javax/swing/JComboBox$AccessibleJComboBox";
	using base_classes = std::tuple<scapix::java_api::javax::swing::JComponent_AccessibleJComponent, scapix::java_api::javax::accessibility::AccessibleAction, scapix::java_api::javax::accessibility::AccessibleSelection>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_JCOMBOBOX_ACCESSIBLEJCOMBOBOX_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_JCOMBOBOX_ACCESSIBLEJCOMBOBOX)
#define SCAPIX_JAVA_API_JAVAX_SWING_JCOMBOBOX_ACCESSIBLEJCOMBOBOX

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/accessibility/Accessible.h>
#include <scapix/java_api/javax/accessibility/AccessibleRole.h>
#include <scapix/java_api/javax/accessibility/AccessibleStateSet.h>
#include <scapix/java_api/javax/swing/JComboBox.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::JComboBox_AccessibleJComboBox : public jni::object_base<"javax/swing/JComboBox$AccessibleJComboBox",
	javax::swing::JComponent_AccessibleJComponent,
	javax::accessibility::AccessibleAction,
	javax::accessibility::AccessibleSelection>
{
public:

	static jni::ref<javax::swing::JComboBox_AccessibleJComboBox> new_object(jni::ref<javax::swing::JComboBox> p1) { return base_::new_object(p1); }
	jint getAccessibleChildrenCount() { return call_method<"getAccessibleChildrenCount", jint>(); }
	jni::ref<javax::accessibility::Accessible> getAccessibleChild(jint p1) { return call_method<"getAccessibleChild", jni::ref<javax::accessibility::Accessible>>(p1); }
	jni::ref<javax::accessibility::AccessibleRole> getAccessibleRole() { return call_method<"getAccessibleRole", jni::ref<javax::accessibility::AccessibleRole>>(); }
	jni::ref<javax::accessibility::AccessibleStateSet> getAccessibleStateSet() { return call_method<"getAccessibleStateSet", jni::ref<javax::accessibility::AccessibleStateSet>>(); }
	jni::ref<javax::accessibility::AccessibleAction> getAccessibleAction() { return call_method<"getAccessibleAction", jni::ref<javax::accessibility::AccessibleAction>>(); }
	jni::ref<java::lang::String> getAccessibleActionDescription(jint p1) { return call_method<"getAccessibleActionDescription", jni::ref<java::lang::String>>(p1); }
	jint getAccessibleActionCount() { return call_method<"getAccessibleActionCount", jint>(); }
	jboolean doAccessibleAction(jint p1) { return call_method<"doAccessibleAction", jboolean>(p1); }
	jni::ref<javax::accessibility::AccessibleSelection> getAccessibleSelection() { return call_method<"getAccessibleSelection", jni::ref<javax::accessibility::AccessibleSelection>>(); }
	jint getAccessibleSelectionCount() { return call_method<"getAccessibleSelectionCount", jint>(); }
	jni::ref<javax::accessibility::Accessible> getAccessibleSelection(jint p1) { return call_method<"getAccessibleSelection", jni::ref<javax::accessibility::Accessible>>(p1); }
	jboolean isAccessibleChildSelected(jint p1) { return call_method<"isAccessibleChildSelected", jboolean>(p1); }
	void addAccessibleSelection(jint p1) { return call_method<"addAccessibleSelection", void>(p1); }
	void removeAccessibleSelection(jint p1) { return call_method<"removeAccessibleSelection", void>(p1); }
	void clearAccessibleSelection() { return call_method<"clearAccessibleSelection", void>(); }
	void selectAllAccessibleSelection() { return call_method<"selectAllAccessibleSelection", void>(); }

protected:

	JComboBox_AccessibleJComboBox(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_JCOMBOBOX_ACCESSIBLEJCOMBOBOX
