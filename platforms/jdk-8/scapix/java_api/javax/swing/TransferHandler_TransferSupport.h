// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_TRANSFERHANDLER_TRANSFERSUPPORT_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_TRANSFERHANDLER_TRANSFERSUPPORT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing { class TransferHandler_TransferSupport; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::TransferHandler_TransferSupport>
{
	static constexpr fixed_string class_name = "javax/swing/TransferHandler$TransferSupport";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TRANSFERHANDLER_TRANSFERSUPPORT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_TRANSFERHANDLER_TRANSFERSUPPORT)
#define SCAPIX_JAVA_API_JAVAX_SWING_TRANSFERHANDLER_TRANSFERSUPPORT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Component.h>
#include <scapix/java_api/java/awt/datatransfer/DataFlavor.h>
#include <scapix/java_api/java/awt/datatransfer/Transferable.h>
#include <scapix/java_api/javax/swing/TransferHandler_DropLocation.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::TransferHandler_TransferSupport : public jni::object_base<"javax/swing/TransferHandler$TransferSupport",
	java::lang::Object>
{
public:

	static jni::ref<javax::swing::TransferHandler_TransferSupport> new_object(jni::ref<java::awt::Component> p1, jni::ref<java::awt::datatransfer::Transferable> p2) { return base_::new_object(p1, p2); }
	jboolean isDrop() { return call_method<"isDrop", jboolean>(); }
	jni::ref<java::awt::Component> getComponent() { return call_method<"getComponent", jni::ref<java::awt::Component>>(); }
	jni::ref<javax::swing::TransferHandler_DropLocation> getDropLocation() { return call_method<"getDropLocation", jni::ref<javax::swing::TransferHandler_DropLocation>>(); }
	void setShowDropLocation(jboolean p1) { return call_method<"setShowDropLocation", void>(p1); }
	void setDropAction(jint p1) { return call_method<"setDropAction", void>(p1); }
	jint getDropAction() { return call_method<"getDropAction", jint>(); }
	jint getUserDropAction() { return call_method<"getUserDropAction", jint>(); }
	jint getSourceDropActions() { return call_method<"getSourceDropActions", jint>(); }
	jni::ref<jni::array<java::awt::datatransfer::DataFlavor>> getDataFlavors() { return call_method<"getDataFlavors", jni::ref<jni::array<java::awt::datatransfer::DataFlavor>>>(); }
	jboolean isDataFlavorSupported(jni::ref<java::awt::datatransfer::DataFlavor> p1) { return call_method<"isDataFlavorSupported", jboolean>(p1); }
	jni::ref<java::awt::datatransfer::Transferable> getTransferable() { return call_method<"getTransferable", jni::ref<java::awt::datatransfer::Transferable>>(); }

protected:

	TransferHandler_TransferSupport(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TRANSFERHANDLER_TRANSFERSUPPORT
