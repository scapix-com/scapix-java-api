// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/swing/JComponent.h>
#include <scapix/java_api/javax/swing/ScrollPaneConstants.h>
#include <scapix/java_api/javax/accessibility/Accessible.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_JSCROLLPANE_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_JSCROLLPANE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing { class JScrollPane; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::JScrollPane>
{
	static constexpr fixed_string class_name = "javax/swing/JScrollPane";
	using base_classes = std::tuple<scapix::java_api::javax::swing::JComponent, scapix::java_api::javax::swing::ScrollPaneConstants, scapix::java_api::javax::accessibility::Accessible>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_JSCROLLPANE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_JSCROLLPANE)
#define SCAPIX_JAVA_API_JAVAX_SWING_JSCROLLPANE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Component.h>
#include <scapix/java_api/java/awt/ComponentOrientation.h>
#include <scapix/java_api/java/awt/LayoutManager.h>
#include <scapix/java_api/java/awt/Rectangle.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/accessibility/AccessibleContext.h>
#include <scapix/java_api/javax/swing/JScrollBar.h>
#include <scapix/java_api/javax/swing/JViewport.h>
#include <scapix/java_api/javax/swing/border/Border.h>
#include <scapix/java_api/javax/swing/plaf/ScrollPaneUI.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::JScrollPane : public jni::object_base<"javax/swing/JScrollPane",
	javax::swing::JComponent,
	javax::swing::ScrollPaneConstants,
	javax::accessibility::Accessible>
{
public:

	static jni::ref<javax::swing::JScrollPane> new_object(jni::ref<java::awt::Component> p1, jint p2, jint p3) { return base_::new_object(p1, p2, p3); }
	static jni::ref<javax::swing::JScrollPane> new_object(jni::ref<java::awt::Component> p1) { return base_::new_object(p1); }
	static jni::ref<javax::swing::JScrollPane> new_object(jint p1, jint p2) { return base_::new_object(p1, p2); }
	static jni::ref<javax::swing::JScrollPane> new_object() { return base_::new_object(); }
	jni::ref<javax::swing::plaf::ScrollPaneUI> getUI() { return call_method<"getUI", jni::ref<javax::swing::plaf::ScrollPaneUI>>(); }
	void setUI(jni::ref<javax::swing::plaf::ScrollPaneUI> p1) { return call_method<"setUI", void>(p1); }
	void updateUI() { return call_method<"updateUI", void>(); }
	jni::ref<java::lang::String> getUIClassID() { return call_method<"getUIClassID", jni::ref<java::lang::String>>(); }
	void setLayout(jni::ref<java::awt::LayoutManager> p1) { return call_method<"setLayout", void>(p1); }
	jboolean isValidateRoot() { return call_method<"isValidateRoot", jboolean>(); }
	jint getVerticalScrollBarPolicy() { return call_method<"getVerticalScrollBarPolicy", jint>(); }
	void setVerticalScrollBarPolicy(jint p1) { return call_method<"setVerticalScrollBarPolicy", void>(p1); }
	jint getHorizontalScrollBarPolicy() { return call_method<"getHorizontalScrollBarPolicy", jint>(); }
	void setHorizontalScrollBarPolicy(jint p1) { return call_method<"setHorizontalScrollBarPolicy", void>(p1); }
	jni::ref<javax::swing::border::Border> getViewportBorder() { return call_method<"getViewportBorder", jni::ref<javax::swing::border::Border>>(); }
	void setViewportBorder(jni::ref<javax::swing::border::Border> p1) { return call_method<"setViewportBorder", void>(p1); }
	jni::ref<java::awt::Rectangle> getViewportBorderBounds() { return call_method<"getViewportBorderBounds", jni::ref<java::awt::Rectangle>>(); }
	jni::ref<javax::swing::JScrollBar> createHorizontalScrollBar() { return call_method<"createHorizontalScrollBar", jni::ref<javax::swing::JScrollBar>>(); }
	jni::ref<javax::swing::JScrollBar> getHorizontalScrollBar() { return call_method<"getHorizontalScrollBar", jni::ref<javax::swing::JScrollBar>>(); }
	void setHorizontalScrollBar(jni::ref<javax::swing::JScrollBar> p1) { return call_method<"setHorizontalScrollBar", void>(p1); }
	jni::ref<javax::swing::JScrollBar> createVerticalScrollBar() { return call_method<"createVerticalScrollBar", jni::ref<javax::swing::JScrollBar>>(); }
	jni::ref<javax::swing::JScrollBar> getVerticalScrollBar() { return call_method<"getVerticalScrollBar", jni::ref<javax::swing::JScrollBar>>(); }
	void setVerticalScrollBar(jni::ref<javax::swing::JScrollBar> p1) { return call_method<"setVerticalScrollBar", void>(p1); }
	jni::ref<javax::swing::JViewport> getViewport() { return call_method<"getViewport", jni::ref<javax::swing::JViewport>>(); }
	void setViewport(jni::ref<javax::swing::JViewport> p1) { return call_method<"setViewport", void>(p1); }
	void setViewportView(jni::ref<java::awt::Component> p1) { return call_method<"setViewportView", void>(p1); }
	jni::ref<javax::swing::JViewport> getRowHeader() { return call_method<"getRowHeader", jni::ref<javax::swing::JViewport>>(); }
	void setRowHeader(jni::ref<javax::swing::JViewport> p1) { return call_method<"setRowHeader", void>(p1); }
	void setRowHeaderView(jni::ref<java::awt::Component> p1) { return call_method<"setRowHeaderView", void>(p1); }
	jni::ref<javax::swing::JViewport> getColumnHeader() { return call_method<"getColumnHeader", jni::ref<javax::swing::JViewport>>(); }
	void setColumnHeader(jni::ref<javax::swing::JViewport> p1) { return call_method<"setColumnHeader", void>(p1); }
	void setColumnHeaderView(jni::ref<java::awt::Component> p1) { return call_method<"setColumnHeaderView", void>(p1); }
	jni::ref<java::awt::Component> getCorner(jni::ref<java::lang::String> p1) { return call_method<"getCorner", jni::ref<java::awt::Component>>(p1); }
	void setCorner(jni::ref<java::lang::String> p1, jni::ref<java::awt::Component> p2) { return call_method<"setCorner", void>(p1, p2); }
	void setComponentOrientation(jni::ref<java::awt::ComponentOrientation> p1) { return call_method<"setComponentOrientation", void>(p1); }
	jboolean isWheelScrollingEnabled() { return call_method<"isWheelScrollingEnabled", jboolean>(); }
	void setWheelScrollingEnabled(jboolean p1) { return call_method<"setWheelScrollingEnabled", void>(p1); }
	jni::ref<javax::accessibility::AccessibleContext> getAccessibleContext() { return call_method<"getAccessibleContext", jni::ref<javax::accessibility::AccessibleContext>>(); }

protected:

	JScrollPane(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_JSCROLLPANE
