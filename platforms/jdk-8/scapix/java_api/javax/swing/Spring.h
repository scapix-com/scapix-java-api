// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_SPRING_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_SPRING_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing { class Spring; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::Spring>
{
	static constexpr fixed_string class_name = "javax/swing/Spring";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_SPRING_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_SPRING)
#define SCAPIX_JAVA_API_JAVAX_SWING_SPRING

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Component.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::Spring : public jni::object_base<"javax/swing/Spring",
	java::lang::Object>
{
public:

	static jint UNSET() { return get_static_field<"UNSET", jint>(); }

	jint getMinimumValue() { return call_method<"getMinimumValue", jint>(); }
	jint getPreferredValue() { return call_method<"getPreferredValue", jint>(); }
	jint getMaximumValue() { return call_method<"getMaximumValue", jint>(); }
	jint getValue() { return call_method<"getValue", jint>(); }
	void setValue(jint p1) { return call_method<"setValue", void>(p1); }
	static jni::ref<javax::swing::Spring> constant(jint p1) { return call_static_method<"constant", jni::ref<javax::swing::Spring>>(p1); }
	static jni::ref<javax::swing::Spring> constant(jint p1, jint p2, jint p3) { return call_static_method<"constant", jni::ref<javax::swing::Spring>>(p1, p2, p3); }
	static jni::ref<javax::swing::Spring> minus(jni::ref<javax::swing::Spring> p1) { return call_static_method<"minus", jni::ref<javax::swing::Spring>>(p1); }
	static jni::ref<javax::swing::Spring> sum(jni::ref<javax::swing::Spring> p1, jni::ref<javax::swing::Spring> p2) { return call_static_method<"sum", jni::ref<javax::swing::Spring>>(p1, p2); }
	static jni::ref<javax::swing::Spring> max(jni::ref<javax::swing::Spring> p1, jni::ref<javax::swing::Spring> p2) { return call_static_method<"max", jni::ref<javax::swing::Spring>>(p1, p2); }
	static jni::ref<javax::swing::Spring> scale(jni::ref<javax::swing::Spring> p1, jfloat p2) { return call_static_method<"scale", jni::ref<javax::swing::Spring>>(p1, p2); }
	static jni::ref<javax::swing::Spring> width(jni::ref<java::awt::Component> p1) { return call_static_method<"width", jni::ref<javax::swing::Spring>>(p1); }
	static jni::ref<javax::swing::Spring> height(jni::ref<java::awt::Component> p1) { return call_static_method<"height", jni::ref<javax::swing::Spring>>(p1); }

protected:

	Spring(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_SPRING
