// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/javax/swing/ButtonModel.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_DEFAULTBUTTONMODEL_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_DEFAULTBUTTONMODEL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing { class DefaultButtonModel; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::DefaultButtonModel>
{
	static constexpr fixed_string class_name = "javax/swing/DefaultButtonModel";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::javax::swing::ButtonModel, scapix::java_api::java::io::Serializable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_DEFAULTBUTTONMODEL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_DEFAULTBUTTONMODEL)
#define SCAPIX_JAVA_API_JAVAX_SWING_DEFAULTBUTTONMODEL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/event/ActionListener.h>
#include <scapix/java_api/java/awt/event/ItemListener.h>
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/EventListener.h>
#include <scapix/java_api/javax/swing/ButtonGroup.h>
#include <scapix/java_api/javax/swing/event/ChangeListener.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::DefaultButtonModel : public jni::object_base<"javax/swing/DefaultButtonModel",
	java::lang::Object,
	javax::swing::ButtonModel,
	java::io::Serializable>
{
public:

	static jint ARMED() { return get_static_field<"ARMED", jint>(); }
	static jint SELECTED() { return get_static_field<"SELECTED", jint>(); }
	static jint PRESSED() { return get_static_field<"PRESSED", jint>(); }
	static jint ENABLED() { return get_static_field<"ENABLED", jint>(); }
	static jint ROLLOVER() { return get_static_field<"ROLLOVER", jint>(); }

	static jni::ref<javax::swing::DefaultButtonModel> new_object() { return base_::new_object(); }
	void setActionCommand(jni::ref<java::lang::String> p1) { return call_method<"setActionCommand", void>(p1); }
	jni::ref<java::lang::String> getActionCommand() { return call_method<"getActionCommand", jni::ref<java::lang::String>>(); }
	jboolean isArmed() { return call_method<"isArmed", jboolean>(); }
	jboolean isSelected() { return call_method<"isSelected", jboolean>(); }
	jboolean isEnabled() { return call_method<"isEnabled", jboolean>(); }
	jboolean isPressed() { return call_method<"isPressed", jboolean>(); }
	jboolean isRollover() { return call_method<"isRollover", jboolean>(); }
	void setArmed(jboolean p1) { return call_method<"setArmed", void>(p1); }
	void setEnabled(jboolean p1) { return call_method<"setEnabled", void>(p1); }
	void setSelected(jboolean p1) { return call_method<"setSelected", void>(p1); }
	void setPressed(jboolean p1) { return call_method<"setPressed", void>(p1); }
	void setRollover(jboolean p1) { return call_method<"setRollover", void>(p1); }
	void setMnemonic(jint p1) { return call_method<"setMnemonic", void>(p1); }
	jint getMnemonic() { return call_method<"getMnemonic", jint>(); }
	void addChangeListener(jni::ref<javax::swing::event::ChangeListener> p1) { return call_method<"addChangeListener", void>(p1); }
	void removeChangeListener(jni::ref<javax::swing::event::ChangeListener> p1) { return call_method<"removeChangeListener", void>(p1); }
	jni::ref<jni::array<javax::swing::event::ChangeListener>> getChangeListeners() { return call_method<"getChangeListeners", jni::ref<jni::array<javax::swing::event::ChangeListener>>>(); }
	void addActionListener(jni::ref<java::awt::event::ActionListener> p1) { return call_method<"addActionListener", void>(p1); }
	void removeActionListener(jni::ref<java::awt::event::ActionListener> p1) { return call_method<"removeActionListener", void>(p1); }
	jni::ref<jni::array<java::awt::event::ActionListener>> getActionListeners() { return call_method<"getActionListeners", jni::ref<jni::array<java::awt::event::ActionListener>>>(); }
	void addItemListener(jni::ref<java::awt::event::ItemListener> p1) { return call_method<"addItemListener", void>(p1); }
	void removeItemListener(jni::ref<java::awt::event::ItemListener> p1) { return call_method<"removeItemListener", void>(p1); }
	jni::ref<jni::array<java::awt::event::ItemListener>> getItemListeners() { return call_method<"getItemListeners", jni::ref<jni::array<java::awt::event::ItemListener>>>(); }
	jni::ref<jni::array<java::util::EventListener>> getListeners(jni::ref<java::lang::Class> p1) { return call_method<"getListeners", jni::ref<jni::array<java::util::EventListener>>>(p1); }
	jni::ref<jni::array<java::lang::Object>> getSelectedObjects() { return call_method<"getSelectedObjects", jni::ref<jni::array<java::lang::Object>>>(); }
	void setGroup(jni::ref<javax::swing::ButtonGroup> p1) { return call_method<"setGroup", void>(p1); }
	jni::ref<javax::swing::ButtonGroup> getGroup() { return call_method<"getGroup", jni::ref<javax::swing::ButtonGroup>>(); }

protected:

	DefaultButtonModel(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_DEFAULTBUTTONMODEL
