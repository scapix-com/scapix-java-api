// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/swing/JComponent.h>
#include <scapix/java_api/java/awt/ItemSelectable.h>
#include <scapix/java_api/javax/swing/SwingConstants.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_ABSTRACTBUTTON_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_ABSTRACTBUTTON_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing { class AbstractButton; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::AbstractButton>
{
	static constexpr fixed_string class_name = "javax/swing/AbstractButton";
	using base_classes = std::tuple<scapix::java_api::javax::swing::JComponent, scapix::java_api::java::awt::ItemSelectable, scapix::java_api::javax::swing::SwingConstants>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_ABSTRACTBUTTON_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_ABSTRACTBUTTON)
#define SCAPIX_JAVA_API_JAVAX_SWING_ABSTRACTBUTTON

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Image.h>
#include <scapix/java_api/java/awt/Insets.h>
#include <scapix/java_api/java/awt/LayoutManager.h>
#include <scapix/java_api/java/awt/event/ActionListener.h>
#include <scapix/java_api/java/awt/event/ItemListener.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/swing/Action.h>
#include <scapix/java_api/javax/swing/ButtonModel.h>
#include <scapix/java_api/javax/swing/Icon.h>
#include <scapix/java_api/javax/swing/event/ChangeListener.h>
#include <scapix/java_api/javax/swing/plaf/ButtonUI.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::AbstractButton : public jni::object_base<"javax/swing/AbstractButton",
	javax::swing::JComponent,
	java::awt::ItemSelectable,
	javax::swing::SwingConstants>
{
public:

	static jni::ref<java::lang::String> MODEL_CHANGED_PROPERTY() { return get_static_field<"MODEL_CHANGED_PROPERTY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> TEXT_CHANGED_PROPERTY() { return get_static_field<"TEXT_CHANGED_PROPERTY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MNEMONIC_CHANGED_PROPERTY() { return get_static_field<"MNEMONIC_CHANGED_PROPERTY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MARGIN_CHANGED_PROPERTY() { return get_static_field<"MARGIN_CHANGED_PROPERTY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> VERTICAL_ALIGNMENT_CHANGED_PROPERTY() { return get_static_field<"VERTICAL_ALIGNMENT_CHANGED_PROPERTY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> HORIZONTAL_ALIGNMENT_CHANGED_PROPERTY() { return get_static_field<"HORIZONTAL_ALIGNMENT_CHANGED_PROPERTY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> VERTICAL_TEXT_POSITION_CHANGED_PROPERTY() { return get_static_field<"VERTICAL_TEXT_POSITION_CHANGED_PROPERTY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> HORIZONTAL_TEXT_POSITION_CHANGED_PROPERTY() { return get_static_field<"HORIZONTAL_TEXT_POSITION_CHANGED_PROPERTY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> BORDER_PAINTED_CHANGED_PROPERTY() { return get_static_field<"BORDER_PAINTED_CHANGED_PROPERTY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> FOCUS_PAINTED_CHANGED_PROPERTY() { return get_static_field<"FOCUS_PAINTED_CHANGED_PROPERTY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ROLLOVER_ENABLED_CHANGED_PROPERTY() { return get_static_field<"ROLLOVER_ENABLED_CHANGED_PROPERTY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> CONTENT_AREA_FILLED_CHANGED_PROPERTY() { return get_static_field<"CONTENT_AREA_FILLED_CHANGED_PROPERTY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ICON_CHANGED_PROPERTY() { return get_static_field<"ICON_CHANGED_PROPERTY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> PRESSED_ICON_CHANGED_PROPERTY() { return get_static_field<"PRESSED_ICON_CHANGED_PROPERTY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> SELECTED_ICON_CHANGED_PROPERTY() { return get_static_field<"SELECTED_ICON_CHANGED_PROPERTY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ROLLOVER_ICON_CHANGED_PROPERTY() { return get_static_field<"ROLLOVER_ICON_CHANGED_PROPERTY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ROLLOVER_SELECTED_ICON_CHANGED_PROPERTY() { return get_static_field<"ROLLOVER_SELECTED_ICON_CHANGED_PROPERTY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> DISABLED_ICON_CHANGED_PROPERTY() { return get_static_field<"DISABLED_ICON_CHANGED_PROPERTY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> DISABLED_SELECTED_ICON_CHANGED_PROPERTY() { return get_static_field<"DISABLED_SELECTED_ICON_CHANGED_PROPERTY", jni::ref<java::lang::String>>(); }

	static jni::ref<javax::swing::AbstractButton> new_object() { return base_::new_object(); }
	void setHideActionText(jboolean p1) { return call_method<"setHideActionText", void>(p1); }
	jboolean getHideActionText() { return call_method<"getHideActionText", jboolean>(); }
	jni::ref<java::lang::String> getText() { return call_method<"getText", jni::ref<java::lang::String>>(); }
	void setText(jni::ref<java::lang::String> p1) { return call_method<"setText", void>(p1); }
	jboolean isSelected() { return call_method<"isSelected", jboolean>(); }
	void setSelected(jboolean p1) { return call_method<"setSelected", void>(p1); }
	void doClick() { return call_method<"doClick", void>(); }
	void doClick(jint p1) { return call_method<"doClick", void>(p1); }
	void setMargin(jni::ref<java::awt::Insets> p1) { return call_method<"setMargin", void>(p1); }
	jni::ref<java::awt::Insets> getMargin() { return call_method<"getMargin", jni::ref<java::awt::Insets>>(); }
	jni::ref<javax::swing::Icon> getIcon() { return call_method<"getIcon", jni::ref<javax::swing::Icon>>(); }
	void setIcon(jni::ref<javax::swing::Icon> p1) { return call_method<"setIcon", void>(p1); }
	jni::ref<javax::swing::Icon> getPressedIcon() { return call_method<"getPressedIcon", jni::ref<javax::swing::Icon>>(); }
	void setPressedIcon(jni::ref<javax::swing::Icon> p1) { return call_method<"setPressedIcon", void>(p1); }
	jni::ref<javax::swing::Icon> getSelectedIcon() { return call_method<"getSelectedIcon", jni::ref<javax::swing::Icon>>(); }
	void setSelectedIcon(jni::ref<javax::swing::Icon> p1) { return call_method<"setSelectedIcon", void>(p1); }
	jni::ref<javax::swing::Icon> getRolloverIcon() { return call_method<"getRolloverIcon", jni::ref<javax::swing::Icon>>(); }
	void setRolloverIcon(jni::ref<javax::swing::Icon> p1) { return call_method<"setRolloverIcon", void>(p1); }
	jni::ref<javax::swing::Icon> getRolloverSelectedIcon() { return call_method<"getRolloverSelectedIcon", jni::ref<javax::swing::Icon>>(); }
	void setRolloverSelectedIcon(jni::ref<javax::swing::Icon> p1) { return call_method<"setRolloverSelectedIcon", void>(p1); }
	jni::ref<javax::swing::Icon> getDisabledIcon() { return call_method<"getDisabledIcon", jni::ref<javax::swing::Icon>>(); }
	void setDisabledIcon(jni::ref<javax::swing::Icon> p1) { return call_method<"setDisabledIcon", void>(p1); }
	jni::ref<javax::swing::Icon> getDisabledSelectedIcon() { return call_method<"getDisabledSelectedIcon", jni::ref<javax::swing::Icon>>(); }
	void setDisabledSelectedIcon(jni::ref<javax::swing::Icon> p1) { return call_method<"setDisabledSelectedIcon", void>(p1); }
	jint getVerticalAlignment() { return call_method<"getVerticalAlignment", jint>(); }
	void setVerticalAlignment(jint p1) { return call_method<"setVerticalAlignment", void>(p1); }
	jint getHorizontalAlignment() { return call_method<"getHorizontalAlignment", jint>(); }
	void setHorizontalAlignment(jint p1) { return call_method<"setHorizontalAlignment", void>(p1); }
	jint getVerticalTextPosition() { return call_method<"getVerticalTextPosition", jint>(); }
	void setVerticalTextPosition(jint p1) { return call_method<"setVerticalTextPosition", void>(p1); }
	jint getHorizontalTextPosition() { return call_method<"getHorizontalTextPosition", jint>(); }
	void setHorizontalTextPosition(jint p1) { return call_method<"setHorizontalTextPosition", void>(p1); }
	jint getIconTextGap() { return call_method<"getIconTextGap", jint>(); }
	void setIconTextGap(jint p1) { return call_method<"setIconTextGap", void>(p1); }
	void removeNotify() { return call_method<"removeNotify", void>(); }
	void setActionCommand(jni::ref<java::lang::String> p1) { return call_method<"setActionCommand", void>(p1); }
	jni::ref<java::lang::String> getActionCommand() { return call_method<"getActionCommand", jni::ref<java::lang::String>>(); }
	void setAction(jni::ref<javax::swing::Action> p1) { return call_method<"setAction", void>(p1); }
	jni::ref<javax::swing::Action> getAction() { return call_method<"getAction", jni::ref<javax::swing::Action>>(); }
	jboolean isBorderPainted() { return call_method<"isBorderPainted", jboolean>(); }
	void setBorderPainted(jboolean p1) { return call_method<"setBorderPainted", void>(p1); }
	jboolean isFocusPainted() { return call_method<"isFocusPainted", jboolean>(); }
	void setFocusPainted(jboolean p1) { return call_method<"setFocusPainted", void>(p1); }
	jboolean isContentAreaFilled() { return call_method<"isContentAreaFilled", jboolean>(); }
	void setContentAreaFilled(jboolean p1) { return call_method<"setContentAreaFilled", void>(p1); }
	jboolean isRolloverEnabled() { return call_method<"isRolloverEnabled", jboolean>(); }
	void setRolloverEnabled(jboolean p1) { return call_method<"setRolloverEnabled", void>(p1); }
	jint getMnemonic() { return call_method<"getMnemonic", jint>(); }
	void setMnemonic(jint p1) { return call_method<"setMnemonic", void>(p1); }
	void setMnemonic(jchar p1) { return call_method<"setMnemonic", void>(p1); }
	void setDisplayedMnemonicIndex(jint p1) { return call_method<"setDisplayedMnemonicIndex", void>(p1); }
	jint getDisplayedMnemonicIndex() { return call_method<"getDisplayedMnemonicIndex", jint>(); }
	void setMultiClickThreshhold(jlong p1) { return call_method<"setMultiClickThreshhold", void>(p1); }
	jlong getMultiClickThreshhold() { return call_method<"getMultiClickThreshhold", jlong>(); }
	jni::ref<javax::swing::ButtonModel> getModel() { return call_method<"getModel", jni::ref<javax::swing::ButtonModel>>(); }
	void setModel(jni::ref<javax::swing::ButtonModel> p1) { return call_method<"setModel", void>(p1); }
	jni::ref<javax::swing::plaf::ButtonUI> getUI() { return call_method<"getUI", jni::ref<javax::swing::plaf::ButtonUI>>(); }
	void setUI(jni::ref<javax::swing::plaf::ButtonUI> p1) { return call_method<"setUI", void>(p1); }
	void updateUI() { return call_method<"updateUI", void>(); }
	void setLayout(jni::ref<java::awt::LayoutManager> p1) { return call_method<"setLayout", void>(p1); }
	void addChangeListener(jni::ref<javax::swing::event::ChangeListener> p1) { return call_method<"addChangeListener", void>(p1); }
	void removeChangeListener(jni::ref<javax::swing::event::ChangeListener> p1) { return call_method<"removeChangeListener", void>(p1); }
	jni::ref<jni::array<javax::swing::event::ChangeListener>> getChangeListeners() { return call_method<"getChangeListeners", jni::ref<jni::array<javax::swing::event::ChangeListener>>>(); }
	void addActionListener(jni::ref<java::awt::event::ActionListener> p1) { return call_method<"addActionListener", void>(p1); }
	void removeActionListener(jni::ref<java::awt::event::ActionListener> p1) { return call_method<"removeActionListener", void>(p1); }
	jni::ref<jni::array<java::awt::event::ActionListener>> getActionListeners() { return call_method<"getActionListeners", jni::ref<jni::array<java::awt::event::ActionListener>>>(); }
	void setEnabled(jboolean p1) { return call_method<"setEnabled", void>(p1); }
	jni::ref<java::lang::String> getLabel() { return call_method<"getLabel", jni::ref<java::lang::String>>(); }
	void setLabel(jni::ref<java::lang::String> p1) { return call_method<"setLabel", void>(p1); }
	void addItemListener(jni::ref<java::awt::event::ItemListener> p1) { return call_method<"addItemListener", void>(p1); }
	void removeItemListener(jni::ref<java::awt::event::ItemListener> p1) { return call_method<"removeItemListener", void>(p1); }
	jni::ref<jni::array<java::awt::event::ItemListener>> getItemListeners() { return call_method<"getItemListeners", jni::ref<jni::array<java::awt::event::ItemListener>>>(); }
	jni::ref<jni::array<java::lang::Object>> getSelectedObjects() { return call_method<"getSelectedObjects", jni::ref<jni::array<java::lang::Object>>>(); }
	jboolean imageUpdate(jni::ref<java::awt::Image> p1, jint p2, jint p3, jint p4, jint p5, jint p6) { return call_method<"imageUpdate", jboolean>(p1, p2, p3, p4, p5, p6); }

protected:

	AbstractButton(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_ABSTRACTBUTTON
