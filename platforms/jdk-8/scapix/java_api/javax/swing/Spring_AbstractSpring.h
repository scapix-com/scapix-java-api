// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/swing/Spring.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_SPRING_ABSTRACTSPRING_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_SPRING_ABSTRACTSPRING_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing { class Spring_AbstractSpring; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::Spring_AbstractSpring>
{
	static constexpr fixed_string class_name = "javax/swing/Spring$AbstractSpring";
	using base_classes = std::tuple<scapix::java_api::javax::swing::Spring>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_SPRING_ABSTRACTSPRING_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_SPRING_ABSTRACTSPRING)
#define SCAPIX_JAVA_API_JAVAX_SWING_SPRING_ABSTRACTSPRING

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class javax::swing::Spring_AbstractSpring : public jni::object_base<"javax/swing/Spring$AbstractSpring",
	javax::swing::Spring>
{
public:

	jint getValue() { return call_method<"getValue", jint>(); }
	void setValue(jint p1) { return call_method<"setValue", void>(p1); }

protected:

	Spring_AbstractSpring(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_SPRING_ABSTRACTSPRING
