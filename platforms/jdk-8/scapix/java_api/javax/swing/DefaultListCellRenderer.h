// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/swing/JLabel.h>
#include <scapix/java_api/javax/swing/ListCellRenderer.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_DEFAULTLISTCELLRENDERER_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_DEFAULTLISTCELLRENDERER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing { class DefaultListCellRenderer; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::DefaultListCellRenderer>
{
	static constexpr fixed_string class_name = "javax/swing/DefaultListCellRenderer";
	using base_classes = std::tuple<scapix::java_api::javax::swing::JLabel, scapix::java_api::javax::swing::ListCellRenderer, scapix::java_api::java::io::Serializable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_DEFAULTLISTCELLRENDERER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_DEFAULTLISTCELLRENDERER)
#define SCAPIX_JAVA_API_JAVAX_SWING_DEFAULTLISTCELLRENDERER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Component.h>
#include <scapix/java_api/java/awt/Rectangle.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/swing/JList.h>
#include <scapix/java_api/javax/swing/DefaultListCellRenderer_UIResource.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::DefaultListCellRenderer : public jni::object_base<"javax/swing/DefaultListCellRenderer",
	javax::swing::JLabel,
	javax::swing::ListCellRenderer,
	java::io::Serializable>
{
public:

	using UIResource = DefaultListCellRenderer_UIResource;

	static jni::ref<javax::swing::DefaultListCellRenderer> new_object() { return base_::new_object(); }
	jni::ref<java::awt::Component> getListCellRendererComponent(jni::ref<javax::swing::JList> p1, jni::ref<java::lang::Object> p2, jint p3, jboolean p4, jboolean p5) { return call_method<"getListCellRendererComponent", jni::ref<java::awt::Component>>(p1, p2, p3, p4, p5); }
	jboolean isOpaque() { return call_method<"isOpaque", jboolean>(); }
	void validate() { return call_method<"validate", void>(); }
	void invalidate() { return call_method<"invalidate", void>(); }
	void repaint() { return call_method<"repaint", void>(); }
	void revalidate() { return call_method<"revalidate", void>(); }
	void repaint(jlong p1, jint p2, jint p3, jint p4, jint p5) { return call_method<"repaint", void>(p1, p2, p3, p4, p5); }
	void repaint(jni::ref<java::awt::Rectangle> p1) { return call_method<"repaint", void>(p1); }
	void firePropertyChange(jni::ref<java::lang::String> p1, jbyte p2, jbyte p3) { return call_method<"firePropertyChange", void>(p1, p2, p3); }
	void firePropertyChange(jni::ref<java::lang::String> p1, jchar p2, jchar p3) { return call_method<"firePropertyChange", void>(p1, p2, p3); }
	void firePropertyChange(jni::ref<java::lang::String> p1, jshort p2, jshort p3) { return call_method<"firePropertyChange", void>(p1, p2, p3); }
	void firePropertyChange(jni::ref<java::lang::String> p1, jint p2, jint p3) { return call_method<"firePropertyChange", void>(p1, p2, p3); }
	void firePropertyChange(jni::ref<java::lang::String> p1, jlong p2, jlong p3) { return call_method<"firePropertyChange", void>(p1, p2, p3); }
	void firePropertyChange(jni::ref<java::lang::String> p1, jfloat p2, jfloat p3) { return call_method<"firePropertyChange", void>(p1, p2, p3); }
	void firePropertyChange(jni::ref<java::lang::String> p1, jdouble p2, jdouble p3) { return call_method<"firePropertyChange", void>(p1, p2, p3); }
	void firePropertyChange(jni::ref<java::lang::String> p1, jboolean p2, jboolean p3) { return call_method<"firePropertyChange", void>(p1, p2, p3); }

protected:

	DefaultListCellRenderer(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_DEFAULTLISTCELLRENDERER
