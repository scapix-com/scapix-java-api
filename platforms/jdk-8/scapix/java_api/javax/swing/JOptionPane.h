// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/swing/JComponent.h>
#include <scapix/java_api/javax/accessibility/Accessible.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_JOPTIONPANE_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_JOPTIONPANE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing { class JOptionPane; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::JOptionPane>
{
	static constexpr fixed_string class_name = "javax/swing/JOptionPane";
	using base_classes = std::tuple<scapix::java_api::javax::swing::JComponent, scapix::java_api::javax::accessibility::Accessible>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_JOPTIONPANE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_JOPTIONPANE)
#define SCAPIX_JAVA_API_JAVAX_SWING_JOPTIONPANE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Component.h>
#include <scapix/java_api/java/awt/Frame.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/accessibility/AccessibleContext.h>
#include <scapix/java_api/javax/swing/Icon.h>
#include <scapix/java_api/javax/swing/JDesktopPane.h>
#include <scapix/java_api/javax/swing/JDialog.h>
#include <scapix/java_api/javax/swing/JInternalFrame.h>
#include <scapix/java_api/javax/swing/plaf/OptionPaneUI.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::JOptionPane : public jni::object_base<"javax/swing/JOptionPane",
	javax::swing::JComponent,
	javax::accessibility::Accessible>
{
public:

	static jni::ref<java::lang::Object> UNINITIALIZED_VALUE() { return get_static_field<"UNINITIALIZED_VALUE", jni::ref<java::lang::Object>>(); }
	static jint DEFAULT_OPTION() { return get_static_field<"DEFAULT_OPTION", jint>(); }
	static jint YES_NO_OPTION() { return get_static_field<"YES_NO_OPTION", jint>(); }
	static jint YES_NO_CANCEL_OPTION() { return get_static_field<"YES_NO_CANCEL_OPTION", jint>(); }
	static jint OK_CANCEL_OPTION() { return get_static_field<"OK_CANCEL_OPTION", jint>(); }
	static jint YES_OPTION() { return get_static_field<"YES_OPTION", jint>(); }
	static jint NO_OPTION() { return get_static_field<"NO_OPTION", jint>(); }
	static jint CANCEL_OPTION() { return get_static_field<"CANCEL_OPTION", jint>(); }
	static jint OK_OPTION() { return get_static_field<"OK_OPTION", jint>(); }
	static jint CLOSED_OPTION() { return get_static_field<"CLOSED_OPTION", jint>(); }
	static jint ERROR_MESSAGE() { return get_static_field<"ERROR_MESSAGE", jint>(); }
	static jint INFORMATION_MESSAGE() { return get_static_field<"INFORMATION_MESSAGE", jint>(); }
	static jint WARNING_MESSAGE() { return get_static_field<"WARNING_MESSAGE", jint>(); }
	static jint QUESTION_MESSAGE() { return get_static_field<"QUESTION_MESSAGE", jint>(); }
	static jint PLAIN_MESSAGE() { return get_static_field<"PLAIN_MESSAGE", jint>(); }
	static jni::ref<java::lang::String> ICON_PROPERTY() { return get_static_field<"ICON_PROPERTY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MESSAGE_PROPERTY() { return get_static_field<"MESSAGE_PROPERTY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> VALUE_PROPERTY() { return get_static_field<"VALUE_PROPERTY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> OPTIONS_PROPERTY() { return get_static_field<"OPTIONS_PROPERTY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> INITIAL_VALUE_PROPERTY() { return get_static_field<"INITIAL_VALUE_PROPERTY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MESSAGE_TYPE_PROPERTY() { return get_static_field<"MESSAGE_TYPE_PROPERTY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> OPTION_TYPE_PROPERTY() { return get_static_field<"OPTION_TYPE_PROPERTY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> SELECTION_VALUES_PROPERTY() { return get_static_field<"SELECTION_VALUES_PROPERTY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> INITIAL_SELECTION_VALUE_PROPERTY() { return get_static_field<"INITIAL_SELECTION_VALUE_PROPERTY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> INPUT_VALUE_PROPERTY() { return get_static_field<"INPUT_VALUE_PROPERTY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> WANTS_INPUT_PROPERTY() { return get_static_field<"WANTS_INPUT_PROPERTY", jni::ref<java::lang::String>>(); }

	static jni::ref<java::lang::String> showInputDialog(jni::ref<java::lang::Object> p1) { return call_static_method<"showInputDialog", jni::ref<java::lang::String>>(p1); }
	static jni::ref<java::lang::String> showInputDialog(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2) { return call_static_method<"showInputDialog", jni::ref<java::lang::String>>(p1, p2); }
	static jni::ref<java::lang::String> showInputDialog(jni::ref<java::awt::Component> p1, jni::ref<java::lang::Object> p2) { return call_static_method<"showInputDialog", jni::ref<java::lang::String>>(p1, p2); }
	static jni::ref<java::lang::String> showInputDialog(jni::ref<java::awt::Component> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_static_method<"showInputDialog", jni::ref<java::lang::String>>(p1, p2, p3); }
	static jni::ref<java::lang::String> showInputDialog(jni::ref<java::awt::Component> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::String> p3, jint p4) { return call_static_method<"showInputDialog", jni::ref<java::lang::String>>(p1, p2, p3, p4); }
	static jni::ref<java::lang::Object> showInputDialog(jni::ref<java::awt::Component> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::String> p3, jint p4, jni::ref<javax::swing::Icon> p5, jni::ref<jni::array<java::lang::Object>> p6, jni::ref<java::lang::Object> p7) { return call_static_method<"showInputDialog", jni::ref<java::lang::Object>>(p1, p2, p3, p4, p5, p6, p7); }
	static void showMessageDialog(jni::ref<java::awt::Component> p1, jni::ref<java::lang::Object> p2) { return call_static_method<"showMessageDialog", void>(p1, p2); }
	static void showMessageDialog(jni::ref<java::awt::Component> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::String> p3, jint p4) { return call_static_method<"showMessageDialog", void>(p1, p2, p3, p4); }
	static void showMessageDialog(jni::ref<java::awt::Component> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::String> p3, jint p4, jni::ref<javax::swing::Icon> p5) { return call_static_method<"showMessageDialog", void>(p1, p2, p3, p4, p5); }
	static jint showConfirmDialog(jni::ref<java::awt::Component> p1, jni::ref<java::lang::Object> p2) { return call_static_method<"showConfirmDialog", jint>(p1, p2); }
	static jint showConfirmDialog(jni::ref<java::awt::Component> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::String> p3, jint p4) { return call_static_method<"showConfirmDialog", jint>(p1, p2, p3, p4); }
	static jint showConfirmDialog(jni::ref<java::awt::Component> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::String> p3, jint p4, jint p5) { return call_static_method<"showConfirmDialog", jint>(p1, p2, p3, p4, p5); }
	static jint showConfirmDialog(jni::ref<java::awt::Component> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::String> p3, jint p4, jint p5, jni::ref<javax::swing::Icon> p6) { return call_static_method<"showConfirmDialog", jint>(p1, p2, p3, p4, p5, p6); }
	static jint showOptionDialog(jni::ref<java::awt::Component> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::String> p3, jint p4, jint p5, jni::ref<javax::swing::Icon> p6, jni::ref<jni::array<java::lang::Object>> p7, jni::ref<java::lang::Object> p8) { return call_static_method<"showOptionDialog", jint>(p1, p2, p3, p4, p5, p6, p7, p8); }
	jni::ref<javax::swing::JDialog> createDialog(jni::ref<java::awt::Component> p1, jni::ref<java::lang::String> p2) { return call_method<"createDialog", jni::ref<javax::swing::JDialog>>(p1, p2); }
	jni::ref<javax::swing::JDialog> createDialog(jni::ref<java::lang::String> p1) { return call_method<"createDialog", jni::ref<javax::swing::JDialog>>(p1); }
	static void showInternalMessageDialog(jni::ref<java::awt::Component> p1, jni::ref<java::lang::Object> p2) { return call_static_method<"showInternalMessageDialog", void>(p1, p2); }
	static void showInternalMessageDialog(jni::ref<java::awt::Component> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::String> p3, jint p4) { return call_static_method<"showInternalMessageDialog", void>(p1, p2, p3, p4); }
	static void showInternalMessageDialog(jni::ref<java::awt::Component> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::String> p3, jint p4, jni::ref<javax::swing::Icon> p5) { return call_static_method<"showInternalMessageDialog", void>(p1, p2, p3, p4, p5); }
	static jint showInternalConfirmDialog(jni::ref<java::awt::Component> p1, jni::ref<java::lang::Object> p2) { return call_static_method<"showInternalConfirmDialog", jint>(p1, p2); }
	static jint showInternalConfirmDialog(jni::ref<java::awt::Component> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::String> p3, jint p4) { return call_static_method<"showInternalConfirmDialog", jint>(p1, p2, p3, p4); }
	static jint showInternalConfirmDialog(jni::ref<java::awt::Component> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::String> p3, jint p4, jint p5) { return call_static_method<"showInternalConfirmDialog", jint>(p1, p2, p3, p4, p5); }
	static jint showInternalConfirmDialog(jni::ref<java::awt::Component> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::String> p3, jint p4, jint p5, jni::ref<javax::swing::Icon> p6) { return call_static_method<"showInternalConfirmDialog", jint>(p1, p2, p3, p4, p5, p6); }
	static jint showInternalOptionDialog(jni::ref<java::awt::Component> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::String> p3, jint p4, jint p5, jni::ref<javax::swing::Icon> p6, jni::ref<jni::array<java::lang::Object>> p7, jni::ref<java::lang::Object> p8) { return call_static_method<"showInternalOptionDialog", jint>(p1, p2, p3, p4, p5, p6, p7, p8); }
	static jni::ref<java::lang::String> showInternalInputDialog(jni::ref<java::awt::Component> p1, jni::ref<java::lang::Object> p2) { return call_static_method<"showInternalInputDialog", jni::ref<java::lang::String>>(p1, p2); }
	static jni::ref<java::lang::String> showInternalInputDialog(jni::ref<java::awt::Component> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::String> p3, jint p4) { return call_static_method<"showInternalInputDialog", jni::ref<java::lang::String>>(p1, p2, p3, p4); }
	static jni::ref<java::lang::Object> showInternalInputDialog(jni::ref<java::awt::Component> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::String> p3, jint p4, jni::ref<javax::swing::Icon> p5, jni::ref<jni::array<java::lang::Object>> p6, jni::ref<java::lang::Object> p7) { return call_static_method<"showInternalInputDialog", jni::ref<java::lang::Object>>(p1, p2, p3, p4, p5, p6, p7); }
	jni::ref<javax::swing::JInternalFrame> createInternalFrame(jni::ref<java::awt::Component> p1, jni::ref<java::lang::String> p2) { return call_method<"createInternalFrame", jni::ref<javax::swing::JInternalFrame>>(p1, p2); }
	static jni::ref<java::awt::Frame> getFrameForComponent(jni::ref<java::awt::Component> p1) { return call_static_method<"getFrameForComponent", jni::ref<java::awt::Frame>>(p1); }
	static jni::ref<javax::swing::JDesktopPane> getDesktopPaneForComponent(jni::ref<java::awt::Component> p1) { return call_static_method<"getDesktopPaneForComponent", jni::ref<javax::swing::JDesktopPane>>(p1); }
	static void setRootFrame(jni::ref<java::awt::Frame> p1) { return call_static_method<"setRootFrame", void>(p1); }
	static jni::ref<java::awt::Frame> getRootFrame() { return call_static_method<"getRootFrame", jni::ref<java::awt::Frame>>(); }
	static jni::ref<javax::swing::JOptionPane> new_object() { return base_::new_object(); }
	static jni::ref<javax::swing::JOptionPane> new_object(jni::ref<java::lang::Object> p1) { return base_::new_object(p1); }
	static jni::ref<javax::swing::JOptionPane> new_object(jni::ref<java::lang::Object> p1, jint p2) { return base_::new_object(p1, p2); }
	static jni::ref<javax::swing::JOptionPane> new_object(jni::ref<java::lang::Object> p1, jint p2, jint p3) { return base_::new_object(p1, p2, p3); }
	static jni::ref<javax::swing::JOptionPane> new_object(jni::ref<java::lang::Object> p1, jint p2, jint p3, jni::ref<javax::swing::Icon> p4) { return base_::new_object(p1, p2, p3, p4); }
	static jni::ref<javax::swing::JOptionPane> new_object(jni::ref<java::lang::Object> p1, jint p2, jint p3, jni::ref<javax::swing::Icon> p4, jni::ref<jni::array<java::lang::Object>> p5) { return base_::new_object(p1, p2, p3, p4, p5); }
	static jni::ref<javax::swing::JOptionPane> new_object(jni::ref<java::lang::Object> p1, jint p2, jint p3, jni::ref<javax::swing::Icon> p4, jni::ref<jni::array<java::lang::Object>> p5, jni::ref<java::lang::Object> p6) { return base_::new_object(p1, p2, p3, p4, p5, p6); }
	void setUI(jni::ref<javax::swing::plaf::OptionPaneUI> p1) { return call_method<"setUI", void>(p1); }
	jni::ref<javax::swing::plaf::OptionPaneUI> getUI() { return call_method<"getUI", jni::ref<javax::swing::plaf::OptionPaneUI>>(); }
	void updateUI() { return call_method<"updateUI", void>(); }
	jni::ref<java::lang::String> getUIClassID() { return call_method<"getUIClassID", jni::ref<java::lang::String>>(); }
	void setMessage(jni::ref<java::lang::Object> p1) { return call_method<"setMessage", void>(p1); }
	jni::ref<java::lang::Object> getMessage() { return call_method<"getMessage", jni::ref<java::lang::Object>>(); }
	void setIcon(jni::ref<javax::swing::Icon> p1) { return call_method<"setIcon", void>(p1); }
	jni::ref<javax::swing::Icon> getIcon() { return call_method<"getIcon", jni::ref<javax::swing::Icon>>(); }
	void setValue(jni::ref<java::lang::Object> p1) { return call_method<"setValue", void>(p1); }
	jni::ref<java::lang::Object> getValue() { return call_method<"getValue", jni::ref<java::lang::Object>>(); }
	void setOptions(jni::ref<jni::array<java::lang::Object>> p1) { return call_method<"setOptions", void>(p1); }
	jni::ref<jni::array<java::lang::Object>> getOptions() { return call_method<"getOptions", jni::ref<jni::array<java::lang::Object>>>(); }
	void setInitialValue(jni::ref<java::lang::Object> p1) { return call_method<"setInitialValue", void>(p1); }
	jni::ref<java::lang::Object> getInitialValue() { return call_method<"getInitialValue", jni::ref<java::lang::Object>>(); }
	void setMessageType(jint p1) { return call_method<"setMessageType", void>(p1); }
	jint getMessageType() { return call_method<"getMessageType", jint>(); }
	void setOptionType(jint p1) { return call_method<"setOptionType", void>(p1); }
	jint getOptionType() { return call_method<"getOptionType", jint>(); }
	void setSelectionValues(jni::ref<jni::array<java::lang::Object>> p1) { return call_method<"setSelectionValues", void>(p1); }
	jni::ref<jni::array<java::lang::Object>> getSelectionValues() { return call_method<"getSelectionValues", jni::ref<jni::array<java::lang::Object>>>(); }
	void setInitialSelectionValue(jni::ref<java::lang::Object> p1) { return call_method<"setInitialSelectionValue", void>(p1); }
	jni::ref<java::lang::Object> getInitialSelectionValue() { return call_method<"getInitialSelectionValue", jni::ref<java::lang::Object>>(); }
	void setInputValue(jni::ref<java::lang::Object> p1) { return call_method<"setInputValue", void>(p1); }
	jni::ref<java::lang::Object> getInputValue() { return call_method<"getInputValue", jni::ref<java::lang::Object>>(); }
	jint getMaxCharactersPerLineCount() { return call_method<"getMaxCharactersPerLineCount", jint>(); }
	void setWantsInput(jboolean p1) { return call_method<"setWantsInput", void>(p1); }
	jboolean getWantsInput() { return call_method<"getWantsInput", jboolean>(); }
	void selectInitialValue() { return call_method<"selectInitialValue", void>(); }
	jni::ref<javax::accessibility::AccessibleContext> getAccessibleContext() { return call_method<"getAccessibleContext", jni::ref<javax::accessibility::AccessibleContext>>(); }

protected:

	JOptionPane(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_JOPTIONPANE
