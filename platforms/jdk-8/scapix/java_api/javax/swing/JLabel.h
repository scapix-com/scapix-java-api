// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/swing/JComponent.h>
#include <scapix/java_api/javax/swing/SwingConstants.h>
#include <scapix/java_api/javax/accessibility/Accessible.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_JLABEL_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_JLABEL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing { class JLabel; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::JLabel>
{
	static constexpr fixed_string class_name = "javax/swing/JLabel";
	using base_classes = std::tuple<scapix::java_api::javax::swing::JComponent, scapix::java_api::javax::swing::SwingConstants, scapix::java_api::javax::accessibility::Accessible>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_JLABEL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_JLABEL)
#define SCAPIX_JAVA_API_JAVAX_SWING_JLABEL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Component.h>
#include <scapix/java_api/java/awt/Image.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/accessibility/AccessibleContext.h>
#include <scapix/java_api/javax/swing/Icon.h>
#include <scapix/java_api/javax/swing/plaf/LabelUI.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::JLabel : public jni::object_base<"javax/swing/JLabel",
	javax::swing::JComponent,
	javax::swing::SwingConstants,
	javax::accessibility::Accessible>
{
public:

	static jni::ref<javax::swing::JLabel> new_object(jni::ref<java::lang::String> p1, jni::ref<javax::swing::Icon> p2, jint p3) { return base_::new_object(p1, p2, p3); }
	static jni::ref<javax::swing::JLabel> new_object(jni::ref<java::lang::String> p1, jint p2) { return base_::new_object(p1, p2); }
	static jni::ref<javax::swing::JLabel> new_object(jni::ref<java::lang::String> p1) { return base_::new_object(p1); }
	static jni::ref<javax::swing::JLabel> new_object(jni::ref<javax::swing::Icon> p1, jint p2) { return base_::new_object(p1, p2); }
	static jni::ref<javax::swing::JLabel> new_object(jni::ref<javax::swing::Icon> p1) { return base_::new_object(p1); }
	static jni::ref<javax::swing::JLabel> new_object() { return base_::new_object(); }
	jni::ref<javax::swing::plaf::LabelUI> getUI() { return call_method<"getUI", jni::ref<javax::swing::plaf::LabelUI>>(); }
	void setUI(jni::ref<javax::swing::plaf::LabelUI> p1) { return call_method<"setUI", void>(p1); }
	void updateUI() { return call_method<"updateUI", void>(); }
	jni::ref<java::lang::String> getUIClassID() { return call_method<"getUIClassID", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getText() { return call_method<"getText", jni::ref<java::lang::String>>(); }
	void setText(jni::ref<java::lang::String> p1) { return call_method<"setText", void>(p1); }
	jni::ref<javax::swing::Icon> getIcon() { return call_method<"getIcon", jni::ref<javax::swing::Icon>>(); }
	void setIcon(jni::ref<javax::swing::Icon> p1) { return call_method<"setIcon", void>(p1); }
	jni::ref<javax::swing::Icon> getDisabledIcon() { return call_method<"getDisabledIcon", jni::ref<javax::swing::Icon>>(); }
	void setDisabledIcon(jni::ref<javax::swing::Icon> p1) { return call_method<"setDisabledIcon", void>(p1); }
	void setDisplayedMnemonic(jint p1) { return call_method<"setDisplayedMnemonic", void>(p1); }
	void setDisplayedMnemonic(jchar p1) { return call_method<"setDisplayedMnemonic", void>(p1); }
	jint getDisplayedMnemonic() { return call_method<"getDisplayedMnemonic", jint>(); }
	void setDisplayedMnemonicIndex(jint p1) { return call_method<"setDisplayedMnemonicIndex", void>(p1); }
	jint getDisplayedMnemonicIndex() { return call_method<"getDisplayedMnemonicIndex", jint>(); }
	jint getIconTextGap() { return call_method<"getIconTextGap", jint>(); }
	void setIconTextGap(jint p1) { return call_method<"setIconTextGap", void>(p1); }
	jint getVerticalAlignment() { return call_method<"getVerticalAlignment", jint>(); }
	void setVerticalAlignment(jint p1) { return call_method<"setVerticalAlignment", void>(p1); }
	jint getHorizontalAlignment() { return call_method<"getHorizontalAlignment", jint>(); }
	void setHorizontalAlignment(jint p1) { return call_method<"setHorizontalAlignment", void>(p1); }
	jint getVerticalTextPosition() { return call_method<"getVerticalTextPosition", jint>(); }
	void setVerticalTextPosition(jint p1) { return call_method<"setVerticalTextPosition", void>(p1); }
	jint getHorizontalTextPosition() { return call_method<"getHorizontalTextPosition", jint>(); }
	void setHorizontalTextPosition(jint p1) { return call_method<"setHorizontalTextPosition", void>(p1); }
	jboolean imageUpdate(jni::ref<java::awt::Image> p1, jint p2, jint p3, jint p4, jint p5, jint p6) { return call_method<"imageUpdate", jboolean>(p1, p2, p3, p4, p5, p6); }
	jni::ref<java::awt::Component> getLabelFor() { return call_method<"getLabelFor", jni::ref<java::awt::Component>>(); }
	void setLabelFor(jni::ref<java::awt::Component> p1) { return call_method<"setLabelFor", void>(p1); }
	jni::ref<javax::accessibility::AccessibleContext> getAccessibleContext() { return call_method<"getAccessibleContext", jni::ref<javax::accessibility::AccessibleContext>>(); }

protected:

	JLabel(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_JLABEL
