// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/swing/JLayeredPane.h>
#include <scapix/java_api/javax/accessibility/Accessible.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_JDESKTOPPANE_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_JDESKTOPPANE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing { class JDesktopPane; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::JDesktopPane>
{
	static constexpr fixed_string class_name = "javax/swing/JDesktopPane";
	using base_classes = std::tuple<scapix::java_api::javax::swing::JLayeredPane, scapix::java_api::javax::accessibility::Accessible>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_JDESKTOPPANE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_JDESKTOPPANE)
#define SCAPIX_JAVA_API_JAVAX_SWING_JDESKTOPPANE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Component.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/accessibility/AccessibleContext.h>
#include <scapix/java_api/javax/swing/DesktopManager.h>
#include <scapix/java_api/javax/swing/JInternalFrame.h>
#include <scapix/java_api/javax/swing/plaf/DesktopPaneUI.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::JDesktopPane : public jni::object_base<"javax/swing/JDesktopPane",
	javax::swing::JLayeredPane,
	javax::accessibility::Accessible>
{
public:

	static jint LIVE_DRAG_MODE() { return get_static_field<"LIVE_DRAG_MODE", jint>(); }
	static jint OUTLINE_DRAG_MODE() { return get_static_field<"OUTLINE_DRAG_MODE", jint>(); }

	static jni::ref<javax::swing::JDesktopPane> new_object() { return base_::new_object(); }
	jni::ref<javax::swing::plaf::DesktopPaneUI> getUI() { return call_method<"getUI", jni::ref<javax::swing::plaf::DesktopPaneUI>>(); }
	void setUI(jni::ref<javax::swing::plaf::DesktopPaneUI> p1) { return call_method<"setUI", void>(p1); }
	void setDragMode(jint p1) { return call_method<"setDragMode", void>(p1); }
	jint getDragMode() { return call_method<"getDragMode", jint>(); }
	jni::ref<javax::swing::DesktopManager> getDesktopManager() { return call_method<"getDesktopManager", jni::ref<javax::swing::DesktopManager>>(); }
	void setDesktopManager(jni::ref<javax::swing::DesktopManager> p1) { return call_method<"setDesktopManager", void>(p1); }
	void updateUI() { return call_method<"updateUI", void>(); }
	jni::ref<java::lang::String> getUIClassID() { return call_method<"getUIClassID", jni::ref<java::lang::String>>(); }
	jni::ref<jni::array<javax::swing::JInternalFrame>> getAllFrames() { return call_method<"getAllFrames", jni::ref<jni::array<javax::swing::JInternalFrame>>>(); }
	jni::ref<javax::swing::JInternalFrame> getSelectedFrame() { return call_method<"getSelectedFrame", jni::ref<javax::swing::JInternalFrame>>(); }
	void setSelectedFrame(jni::ref<javax::swing::JInternalFrame> p1) { return call_method<"setSelectedFrame", void>(p1); }
	jni::ref<jni::array<javax::swing::JInternalFrame>> getAllFramesInLayer(jint p1) { return call_method<"getAllFramesInLayer", jni::ref<jni::array<javax::swing::JInternalFrame>>>(p1); }
	void remove(jni::ref<java::awt::Component> p1) { return call_method<"remove", void>(p1); }
	jni::ref<javax::swing::JInternalFrame> selectFrame(jboolean p1) { return call_method<"selectFrame", jni::ref<javax::swing::JInternalFrame>>(p1); }
	void remove(jint p1) { return call_method<"remove", void>(p1); }
	void removeAll() { return call_method<"removeAll", void>(); }
	void setComponentZOrder(jni::ref<java::awt::Component> p1, jint p2) { return call_method<"setComponentZOrder", void>(p1, p2); }
	jni::ref<javax::accessibility::AccessibleContext> getAccessibleContext() { return call_method<"getAccessibleContext", jni::ref<javax::accessibility::AccessibleContext>>(); }

protected:

	JDesktopPane(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_JDESKTOPPANE
