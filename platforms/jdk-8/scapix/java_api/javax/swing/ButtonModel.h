// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/awt/ItemSelectable.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_BUTTONMODEL_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_BUTTONMODEL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing { class ButtonModel; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::ButtonModel>
{
	static constexpr fixed_string class_name = "javax/swing/ButtonModel";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::awt::ItemSelectable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_BUTTONMODEL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_BUTTONMODEL)
#define SCAPIX_JAVA_API_JAVAX_SWING_BUTTONMODEL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/event/ActionListener.h>
#include <scapix/java_api/java/awt/event/ItemListener.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/swing/ButtonGroup.h>
#include <scapix/java_api/javax/swing/event/ChangeListener.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::ButtonModel : public jni::object_base<"javax/swing/ButtonModel",
	java::lang::Object,
	java::awt::ItemSelectable>
{
public:

	jboolean isArmed() { return call_method<"isArmed", jboolean>(); }
	jboolean isSelected() { return call_method<"isSelected", jboolean>(); }
	jboolean isEnabled() { return call_method<"isEnabled", jboolean>(); }
	jboolean isPressed() { return call_method<"isPressed", jboolean>(); }
	jboolean isRollover() { return call_method<"isRollover", jboolean>(); }
	void setArmed(jboolean p1) { return call_method<"setArmed", void>(p1); }
	void setSelected(jboolean p1) { return call_method<"setSelected", void>(p1); }
	void setEnabled(jboolean p1) { return call_method<"setEnabled", void>(p1); }
	void setPressed(jboolean p1) { return call_method<"setPressed", void>(p1); }
	void setRollover(jboolean p1) { return call_method<"setRollover", void>(p1); }
	void setMnemonic(jint p1) { return call_method<"setMnemonic", void>(p1); }
	jint getMnemonic() { return call_method<"getMnemonic", jint>(); }
	void setActionCommand(jni::ref<java::lang::String> p1) { return call_method<"setActionCommand", void>(p1); }
	jni::ref<java::lang::String> getActionCommand() { return call_method<"getActionCommand", jni::ref<java::lang::String>>(); }
	void setGroup(jni::ref<javax::swing::ButtonGroup> p1) { return call_method<"setGroup", void>(p1); }
	void addActionListener(jni::ref<java::awt::event::ActionListener> p1) { return call_method<"addActionListener", void>(p1); }
	void removeActionListener(jni::ref<java::awt::event::ActionListener> p1) { return call_method<"removeActionListener", void>(p1); }
	void addItemListener(jni::ref<java::awt::event::ItemListener> p1) { return call_method<"addItemListener", void>(p1); }
	void removeItemListener(jni::ref<java::awt::event::ItemListener> p1) { return call_method<"removeItemListener", void>(p1); }
	void addChangeListener(jni::ref<javax::swing::event::ChangeListener> p1) { return call_method<"addChangeListener", void>(p1); }
	void removeChangeListener(jni::ref<javax::swing::event::ChangeListener> p1) { return call_method<"removeChangeListener", void>(p1); }

protected:

	ButtonModel(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_BUTTONMODEL
