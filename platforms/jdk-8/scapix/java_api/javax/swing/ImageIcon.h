// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/javax/swing/Icon.h>
#include <scapix/java_api/java/io/Serializable.h>
#include <scapix/java_api/javax/accessibility/Accessible.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_IMAGEICON_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_IMAGEICON_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing { class ImageIcon; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::ImageIcon>
{
	static constexpr fixed_string class_name = "javax/swing/ImageIcon";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::javax::swing::Icon, scapix::java_api::java::io::Serializable, scapix::java_api::javax::accessibility::Accessible>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_IMAGEICON_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_IMAGEICON)
#define SCAPIX_JAVA_API_JAVAX_SWING_IMAGEICON

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Component.h>
#include <scapix/java_api/java/awt/Graphics.h>
#include <scapix/java_api/java/awt/Image.h>
#include <scapix/java_api/java/awt/image/ImageObserver.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/net/URL.h>
#include <scapix/java_api/javax/accessibility/AccessibleContext.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::ImageIcon : public jni::object_base<"javax/swing/ImageIcon",
	java::lang::Object,
	javax::swing::Icon,
	java::io::Serializable,
	javax::accessibility::Accessible>
{
public:

	static jni::ref<javax::swing::ImageIcon> new_object(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return base_::new_object(p1, p2); }
	static jni::ref<javax::swing::ImageIcon> new_object(jni::ref<java::lang::String> p1) { return base_::new_object(p1); }
	static jni::ref<javax::swing::ImageIcon> new_object(jni::ref<java::net::URL> p1, jni::ref<java::lang::String> p2) { return base_::new_object(p1, p2); }
	static jni::ref<javax::swing::ImageIcon> new_object(jni::ref<java::net::URL> p1) { return base_::new_object(p1); }
	static jni::ref<javax::swing::ImageIcon> new_object(jni::ref<java::awt::Image> p1, jni::ref<java::lang::String> p2) { return base_::new_object(p1, p2); }
	static jni::ref<javax::swing::ImageIcon> new_object(jni::ref<java::awt::Image> p1) { return base_::new_object(p1); }
	static jni::ref<javax::swing::ImageIcon> new_object(jni::ref<jni::array<jbyte>> p1, jni::ref<java::lang::String> p2) { return base_::new_object(p1, p2); }
	static jni::ref<javax::swing::ImageIcon> new_object(jni::ref<jni::array<jbyte>> p1) { return base_::new_object(p1); }
	static jni::ref<javax::swing::ImageIcon> new_object() { return base_::new_object(); }
	jint getImageLoadStatus() { return call_method<"getImageLoadStatus", jint>(); }
	jni::ref<java::awt::Image> getImage() { return call_method<"getImage", jni::ref<java::awt::Image>>(); }
	void setImage(jni::ref<java::awt::Image> p1) { return call_method<"setImage", void>(p1); }
	jni::ref<java::lang::String> getDescription() { return call_method<"getDescription", jni::ref<java::lang::String>>(); }
	void setDescription(jni::ref<java::lang::String> p1) { return call_method<"setDescription", void>(p1); }
	void paintIcon(jni::ref<java::awt::Component> p1, jni::ref<java::awt::Graphics> p2, jint p3, jint p4) { return call_method<"paintIcon", void>(p1, p2, p3, p4); }
	jint getIconWidth() { return call_method<"getIconWidth", jint>(); }
	jint getIconHeight() { return call_method<"getIconHeight", jint>(); }
	void setImageObserver(jni::ref<java::awt::image::ImageObserver> p1) { return call_method<"setImageObserver", void>(p1); }
	jni::ref<java::awt::image::ImageObserver> getImageObserver() { return call_method<"getImageObserver", jni::ref<java::awt::image::ImageObserver>>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jni::ref<javax::accessibility::AccessibleContext> getAccessibleContext() { return call_method<"getAccessibleContext", jni::ref<javax::accessibility::AccessibleContext>>(); }

protected:

	ImageIcon(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_IMAGEICON
