// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/awt/event/MouseAdapter.h>
#include <scapix/java_api/java/awt/event/MouseMotionListener.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_TOOLTIPMANAGER_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_TOOLTIPMANAGER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing { class ToolTipManager; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::ToolTipManager>
{
	static constexpr fixed_string class_name = "javax/swing/ToolTipManager";
	using base_classes = std::tuple<scapix::java_api::java::awt::event::MouseAdapter, scapix::java_api::java::awt::event::MouseMotionListener>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TOOLTIPMANAGER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_TOOLTIPMANAGER)
#define SCAPIX_JAVA_API_JAVAX_SWING_TOOLTIPMANAGER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/event/MouseEvent.h>
#include <scapix/java_api/javax/swing/JComponent.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::ToolTipManager : public jni::object_base<"javax/swing/ToolTipManager",
	java::awt::event::MouseAdapter,
	java::awt::event::MouseMotionListener>
{
public:

	void setEnabled(jboolean p1) { return call_method<"setEnabled", void>(p1); }
	jboolean isEnabled() { return call_method<"isEnabled", jboolean>(); }
	void setLightWeightPopupEnabled(jboolean p1) { return call_method<"setLightWeightPopupEnabled", void>(p1); }
	jboolean isLightWeightPopupEnabled() { return call_method<"isLightWeightPopupEnabled", jboolean>(); }
	void setInitialDelay(jint p1) { return call_method<"setInitialDelay", void>(p1); }
	jint getInitialDelay() { return call_method<"getInitialDelay", jint>(); }
	void setDismissDelay(jint p1) { return call_method<"setDismissDelay", void>(p1); }
	jint getDismissDelay() { return call_method<"getDismissDelay", jint>(); }
	void setReshowDelay(jint p1) { return call_method<"setReshowDelay", void>(p1); }
	jint getReshowDelay() { return call_method<"getReshowDelay", jint>(); }
	static jni::ref<javax::swing::ToolTipManager> sharedInstance() { return call_static_method<"sharedInstance", jni::ref<javax::swing::ToolTipManager>>(); }
	void registerComponent(jni::ref<javax::swing::JComponent> p1) { return call_method<"registerComponent", void>(p1); }
	void unregisterComponent(jni::ref<javax::swing::JComponent> p1) { return call_method<"unregisterComponent", void>(p1); }
	void mouseEntered(jni::ref<java::awt::event::MouseEvent> p1) { return call_method<"mouseEntered", void>(p1); }
	void mouseExited(jni::ref<java::awt::event::MouseEvent> p1) { return call_method<"mouseExited", void>(p1); }
	void mousePressed(jni::ref<java::awt::event::MouseEvent> p1) { return call_method<"mousePressed", void>(p1); }
	void mouseDragged(jni::ref<java::awt::event::MouseEvent> p1) { return call_method<"mouseDragged", void>(p1); }
	void mouseMoved(jni::ref<java::awt::event::MouseEvent> p1) { return call_method<"mouseMoved", void>(p1); }

protected:

	ToolTipManager(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TOOLTIPMANAGER
