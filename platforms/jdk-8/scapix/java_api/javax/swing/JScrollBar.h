// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/swing/JComponent.h>
#include <scapix/java_api/java/awt/Adjustable.h>
#include <scapix/java_api/javax/accessibility/Accessible.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_JSCROLLBAR_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_JSCROLLBAR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing { class JScrollBar; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::JScrollBar>
{
	static constexpr fixed_string class_name = "javax/swing/JScrollBar";
	using base_classes = std::tuple<scapix::java_api::javax::swing::JComponent, scapix::java_api::java::awt::Adjustable, scapix::java_api::javax::accessibility::Accessible>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_JSCROLLBAR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_JSCROLLBAR)
#define SCAPIX_JAVA_API_JAVAX_SWING_JSCROLLBAR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Dimension.h>
#include <scapix/java_api/java/awt/event/AdjustmentListener.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/accessibility/AccessibleContext.h>
#include <scapix/java_api/javax/swing/BoundedRangeModel.h>
#include <scapix/java_api/javax/swing/plaf/ScrollBarUI.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::JScrollBar : public jni::object_base<"javax/swing/JScrollBar",
	javax::swing::JComponent,
	java::awt::Adjustable,
	javax::accessibility::Accessible>
{
public:

	static jni::ref<javax::swing::JScrollBar> new_object(jint p1, jint p2, jint p3, jint p4, jint p5) { return base_::new_object(p1, p2, p3, p4, p5); }
	static jni::ref<javax::swing::JScrollBar> new_object(jint p1) { return base_::new_object(p1); }
	static jni::ref<javax::swing::JScrollBar> new_object() { return base_::new_object(); }
	void setUI(jni::ref<javax::swing::plaf::ScrollBarUI> p1) { return call_method<"setUI", void>(p1); }
	jni::ref<javax::swing::plaf::ScrollBarUI> getUI() { return call_method<"getUI", jni::ref<javax::swing::plaf::ScrollBarUI>>(); }
	void updateUI() { return call_method<"updateUI", void>(); }
	jni::ref<java::lang::String> getUIClassID() { return call_method<"getUIClassID", jni::ref<java::lang::String>>(); }
	jint getOrientation() { return call_method<"getOrientation", jint>(); }
	void setOrientation(jint p1) { return call_method<"setOrientation", void>(p1); }
	jni::ref<javax::swing::BoundedRangeModel> getModel() { return call_method<"getModel", jni::ref<javax::swing::BoundedRangeModel>>(); }
	void setModel(jni::ref<javax::swing::BoundedRangeModel> p1) { return call_method<"setModel", void>(p1); }
	jint getUnitIncrement(jint p1) { return call_method<"getUnitIncrement", jint>(p1); }
	void setUnitIncrement(jint p1) { return call_method<"setUnitIncrement", void>(p1); }
	jint getBlockIncrement(jint p1) { return call_method<"getBlockIncrement", jint>(p1); }
	void setBlockIncrement(jint p1) { return call_method<"setBlockIncrement", void>(p1); }
	jint getUnitIncrement() { return call_method<"getUnitIncrement", jint>(); }
	jint getBlockIncrement() { return call_method<"getBlockIncrement", jint>(); }
	jint getValue() { return call_method<"getValue", jint>(); }
	void setValue(jint p1) { return call_method<"setValue", void>(p1); }
	jint getVisibleAmount() { return call_method<"getVisibleAmount", jint>(); }
	void setVisibleAmount(jint p1) { return call_method<"setVisibleAmount", void>(p1); }
	jint getMinimum() { return call_method<"getMinimum", jint>(); }
	void setMinimum(jint p1) { return call_method<"setMinimum", void>(p1); }
	jint getMaximum() { return call_method<"getMaximum", jint>(); }
	void setMaximum(jint p1) { return call_method<"setMaximum", void>(p1); }
	jboolean getValueIsAdjusting() { return call_method<"getValueIsAdjusting", jboolean>(); }
	void setValueIsAdjusting(jboolean p1) { return call_method<"setValueIsAdjusting", void>(p1); }
	void setValues(jint p1, jint p2, jint p3, jint p4) { return call_method<"setValues", void>(p1, p2, p3, p4); }
	void addAdjustmentListener(jni::ref<java::awt::event::AdjustmentListener> p1) { return call_method<"addAdjustmentListener", void>(p1); }
	void removeAdjustmentListener(jni::ref<java::awt::event::AdjustmentListener> p1) { return call_method<"removeAdjustmentListener", void>(p1); }
	jni::ref<jni::array<java::awt::event::AdjustmentListener>> getAdjustmentListeners() { return call_method<"getAdjustmentListeners", jni::ref<jni::array<java::awt::event::AdjustmentListener>>>(); }
	jni::ref<java::awt::Dimension> getMinimumSize() { return call_method<"getMinimumSize", jni::ref<java::awt::Dimension>>(); }
	jni::ref<java::awt::Dimension> getMaximumSize() { return call_method<"getMaximumSize", jni::ref<java::awt::Dimension>>(); }
	void setEnabled(jboolean p1) { return call_method<"setEnabled", void>(p1); }
	jni::ref<javax::accessibility::AccessibleContext> getAccessibleContext() { return call_method<"getAccessibleContext", jni::ref<javax::accessibility::AccessibleContext>>(); }

protected:

	JScrollBar(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_JSCROLLBAR
