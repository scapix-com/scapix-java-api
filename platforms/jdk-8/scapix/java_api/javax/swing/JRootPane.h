// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/swing/JComponent.h>
#include <scapix/java_api/javax/accessibility/Accessible.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_JROOTPANE_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_JROOTPANE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing { class JRootPane; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::JRootPane>
{
	static constexpr fixed_string class_name = "javax/swing/JRootPane";
	using base_classes = std::tuple<scapix::java_api::javax::swing::JComponent, scapix::java_api::javax::accessibility::Accessible>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_JROOTPANE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_JROOTPANE)
#define SCAPIX_JAVA_API_JAVAX_SWING_JROOTPANE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Component.h>
#include <scapix/java_api/java/awt/Container.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/accessibility/AccessibleContext.h>
#include <scapix/java_api/javax/swing/JButton.h>
#include <scapix/java_api/javax/swing/JLayeredPane.h>
#include <scapix/java_api/javax/swing/JMenuBar.h>
#include <scapix/java_api/javax/swing/plaf/RootPaneUI.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::JRootPane : public jni::object_base<"javax/swing/JRootPane",
	javax::swing::JComponent,
	javax::accessibility::Accessible>
{
public:

	static jint NONE() { return get_static_field<"NONE", jint>(); }
	static jint FRAME() { return get_static_field<"FRAME", jint>(); }
	static jint PLAIN_DIALOG() { return get_static_field<"PLAIN_DIALOG", jint>(); }
	static jint INFORMATION_DIALOG() { return get_static_field<"INFORMATION_DIALOG", jint>(); }
	static jint ERROR_DIALOG() { return get_static_field<"ERROR_DIALOG", jint>(); }
	static jint COLOR_CHOOSER_DIALOG() { return get_static_field<"COLOR_CHOOSER_DIALOG", jint>(); }
	static jint FILE_CHOOSER_DIALOG() { return get_static_field<"FILE_CHOOSER_DIALOG", jint>(); }
	static jint QUESTION_DIALOG() { return get_static_field<"QUESTION_DIALOG", jint>(); }
	static jint WARNING_DIALOG() { return get_static_field<"WARNING_DIALOG", jint>(); }

	static jni::ref<javax::swing::JRootPane> new_object() { return base_::new_object(); }
	void setDoubleBuffered(jboolean p1) { return call_method<"setDoubleBuffered", void>(p1); }
	jint getWindowDecorationStyle() { return call_method<"getWindowDecorationStyle", jint>(); }
	void setWindowDecorationStyle(jint p1) { return call_method<"setWindowDecorationStyle", void>(p1); }
	jni::ref<javax::swing::plaf::RootPaneUI> getUI() { return call_method<"getUI", jni::ref<javax::swing::plaf::RootPaneUI>>(); }
	void setUI(jni::ref<javax::swing::plaf::RootPaneUI> p1) { return call_method<"setUI", void>(p1); }
	void updateUI() { return call_method<"updateUI", void>(); }
	jni::ref<java::lang::String> getUIClassID() { return call_method<"getUIClassID", jni::ref<java::lang::String>>(); }
	void setJMenuBar(jni::ref<javax::swing::JMenuBar> p1) { return call_method<"setJMenuBar", void>(p1); }
	void setMenuBar(jni::ref<javax::swing::JMenuBar> p1) { return call_method<"setMenuBar", void>(p1); }
	jni::ref<javax::swing::JMenuBar> getJMenuBar() { return call_method<"getJMenuBar", jni::ref<javax::swing::JMenuBar>>(); }
	jni::ref<javax::swing::JMenuBar> getMenuBar() { return call_method<"getMenuBar", jni::ref<javax::swing::JMenuBar>>(); }
	void setContentPane(jni::ref<java::awt::Container> p1) { return call_method<"setContentPane", void>(p1); }
	jni::ref<java::awt::Container> getContentPane() { return call_method<"getContentPane", jni::ref<java::awt::Container>>(); }
	void setLayeredPane(jni::ref<javax::swing::JLayeredPane> p1) { return call_method<"setLayeredPane", void>(p1); }
	jni::ref<javax::swing::JLayeredPane> getLayeredPane() { return call_method<"getLayeredPane", jni::ref<javax::swing::JLayeredPane>>(); }
	void setGlassPane(jni::ref<java::awt::Component> p1) { return call_method<"setGlassPane", void>(p1); }
	jni::ref<java::awt::Component> getGlassPane() { return call_method<"getGlassPane", jni::ref<java::awt::Component>>(); }
	jboolean isValidateRoot() { return call_method<"isValidateRoot", jboolean>(); }
	jboolean isOptimizedDrawingEnabled() { return call_method<"isOptimizedDrawingEnabled", jboolean>(); }
	void addNotify() { return call_method<"addNotify", void>(); }
	void removeNotify() { return call_method<"removeNotify", void>(); }
	void setDefaultButton(jni::ref<javax::swing::JButton> p1) { return call_method<"setDefaultButton", void>(p1); }
	jni::ref<javax::swing::JButton> getDefaultButton() { return call_method<"getDefaultButton", jni::ref<javax::swing::JButton>>(); }
	jni::ref<javax::accessibility::AccessibleContext> getAccessibleContext() { return call_method<"getAccessibleContext", jni::ref<javax::accessibility::AccessibleContext>>(); }

protected:

	JRootPane(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_JROOTPANE
