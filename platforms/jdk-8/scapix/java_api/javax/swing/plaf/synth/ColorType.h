// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_PLAF_SYNTH_COLORTYPE_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_PLAF_SYNTH_COLORTYPE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing::plaf::synth { class ColorType; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::plaf::synth::ColorType>
{
	static constexpr fixed_string class_name = "javax/swing/plaf/synth/ColorType";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_PLAF_SYNTH_COLORTYPE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_PLAF_SYNTH_COLORTYPE)
#define SCAPIX_JAVA_API_JAVAX_SWING_PLAF_SYNTH_COLORTYPE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::plaf::synth::ColorType : public jni::object_base<"javax/swing/plaf/synth/ColorType",
	java::lang::Object>
{
public:

	static jni::ref<javax::swing::plaf::synth::ColorType> FOREGROUND() { return get_static_field<"FOREGROUND", jni::ref<javax::swing::plaf::synth::ColorType>>(); }
	static jni::ref<javax::swing::plaf::synth::ColorType> BACKGROUND() { return get_static_field<"BACKGROUND", jni::ref<javax::swing::plaf::synth::ColorType>>(); }
	static jni::ref<javax::swing::plaf::synth::ColorType> TEXT_FOREGROUND() { return get_static_field<"TEXT_FOREGROUND", jni::ref<javax::swing::plaf::synth::ColorType>>(); }
	static jni::ref<javax::swing::plaf::synth::ColorType> TEXT_BACKGROUND() { return get_static_field<"TEXT_BACKGROUND", jni::ref<javax::swing::plaf::synth::ColorType>>(); }
	static jni::ref<javax::swing::plaf::synth::ColorType> FOCUS() { return get_static_field<"FOCUS", jni::ref<javax::swing::plaf::synth::ColorType>>(); }
	static jint MAX_COUNT() { return get_static_field<"MAX_COUNT", jint>(); }

	jint getID() { return call_method<"getID", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	ColorType(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_PLAF_SYNTH_COLORTYPE
