// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/awt/Container.h>
#include <scapix/java_api/java/beans/PropertyChangeListener.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_PLAF_BASIC_BASICSPLITPANEDIVIDER_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_PLAF_BASIC_BASICSPLITPANEDIVIDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing::plaf::basic { class BasicSplitPaneDivider; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::plaf::basic::BasicSplitPaneDivider>
{
	static constexpr fixed_string class_name = "javax/swing/plaf/basic/BasicSplitPaneDivider";
	using base_classes = std::tuple<scapix::java_api::java::awt::Container, scapix::java_api::java::beans::PropertyChangeListener>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_PLAF_BASIC_BASICSPLITPANEDIVIDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_PLAF_BASIC_BASICSPLITPANEDIVIDER)
#define SCAPIX_JAVA_API_JAVAX_SWING_PLAF_BASIC_BASICSPLITPANEDIVIDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Dimension.h>
#include <scapix/java_api/java/awt/Graphics.h>
#include <scapix/java_api/java/awt/Insets.h>
#include <scapix/java_api/java/beans/PropertyChangeEvent.h>
#include <scapix/java_api/javax/swing/border/Border.h>
#include <scapix/java_api/javax/swing/plaf/basic/BasicSplitPaneUI.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::plaf::basic::BasicSplitPaneDivider : public jni::object_base<"javax/swing/plaf/basic/BasicSplitPaneDivider",
	java::awt::Container,
	java::beans::PropertyChangeListener>
{
public:

	static jni::ref<javax::swing::plaf::basic::BasicSplitPaneDivider> new_object(jni::ref<javax::swing::plaf::basic::BasicSplitPaneUI> p1) { return base_::new_object(p1); }
	void setBasicSplitPaneUI(jni::ref<javax::swing::plaf::basic::BasicSplitPaneUI> p1) { return call_method<"setBasicSplitPaneUI", void>(p1); }
	jni::ref<javax::swing::plaf::basic::BasicSplitPaneUI> getBasicSplitPaneUI() { return call_method<"getBasicSplitPaneUI", jni::ref<javax::swing::plaf::basic::BasicSplitPaneUI>>(); }
	void setDividerSize(jint p1) { return call_method<"setDividerSize", void>(p1); }
	jint getDividerSize() { return call_method<"getDividerSize", jint>(); }
	void setBorder(jni::ref<javax::swing::border::Border> p1) { return call_method<"setBorder", void>(p1); }
	jni::ref<javax::swing::border::Border> getBorder() { return call_method<"getBorder", jni::ref<javax::swing::border::Border>>(); }
	jni::ref<java::awt::Insets> getInsets() { return call_method<"getInsets", jni::ref<java::awt::Insets>>(); }
	jboolean isMouseOver() { return call_method<"isMouseOver", jboolean>(); }
	jni::ref<java::awt::Dimension> getPreferredSize() { return call_method<"getPreferredSize", jni::ref<java::awt::Dimension>>(); }
	jni::ref<java::awt::Dimension> getMinimumSize() { return call_method<"getMinimumSize", jni::ref<java::awt::Dimension>>(); }
	void propertyChange(jni::ref<java::beans::PropertyChangeEvent> p1) { return call_method<"propertyChange", void>(p1); }
	void paint(jni::ref<java::awt::Graphics> p1) { return call_method<"paint", void>(p1); }

protected:

	BasicSplitPaneDivider(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_PLAF_BASIC_BASICSPLITPANEDIVIDER
