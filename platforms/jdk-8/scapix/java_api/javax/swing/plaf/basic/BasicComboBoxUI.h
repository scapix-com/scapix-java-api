// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/swing/plaf/ComboBoxUI.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_PLAF_BASIC_BASICCOMBOBOXUI_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_PLAF_BASIC_BASICCOMBOBOXUI_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing::plaf::basic { class BasicComboBoxUI; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::plaf::basic::BasicComboBoxUI>
{
	static constexpr fixed_string class_name = "javax/swing/plaf/basic/BasicComboBoxUI";
	using base_classes = std::tuple<scapix::java_api::javax::swing::plaf::ComboBoxUI>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_PLAF_BASIC_BASICCOMBOBOXUI_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_PLAF_BASIC_BASICCOMBOBOXUI)
#define SCAPIX_JAVA_API_JAVAX_SWING_PLAF_BASIC_BASICCOMBOBOXUI

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Component_BaselineResizeBehavior.h>
#include <scapix/java_api/java/awt/Dimension.h>
#include <scapix/java_api/java/awt/Graphics.h>
#include <scapix/java_api/java/awt/Rectangle.h>
#include <scapix/java_api/javax/accessibility/Accessible.h>
#include <scapix/java_api/javax/swing/JComboBox.h>
#include <scapix/java_api/javax/swing/JComponent.h>
#include <scapix/java_api/javax/swing/plaf/ComponentUI.h>
#include <scapix/java_api/javax/swing/plaf/basic/BasicComboBoxUI_KeyHandler.h>
#include <scapix/java_api/javax/swing/plaf/basic/BasicComboBoxUI_FocusHandler.h>
#include <scapix/java_api/javax/swing/plaf/basic/BasicComboBoxUI_ListDataHandler.h>
#include <scapix/java_api/javax/swing/plaf/basic/BasicComboBoxUI_ItemHandler.h>
#include <scapix/java_api/javax/swing/plaf/basic/BasicComboBoxUI_PropertyChangeHandler.h>
#include <scapix/java_api/javax/swing/plaf/basic/BasicComboBoxUI_ComboBoxLayoutManager.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::plaf::basic::BasicComboBoxUI : public jni::object_base<"javax/swing/plaf/basic/BasicComboBoxUI",
	javax::swing::plaf::ComboBoxUI>
{
public:

	using KeyHandler = BasicComboBoxUI_KeyHandler;
	using FocusHandler = BasicComboBoxUI_FocusHandler;
	using ListDataHandler = BasicComboBoxUI_ListDataHandler;
	using ItemHandler = BasicComboBoxUI_ItemHandler;
	using PropertyChangeHandler = BasicComboBoxUI_PropertyChangeHandler;
	using ComboBoxLayoutManager = BasicComboBoxUI_ComboBoxLayoutManager;

	static jni::ref<javax::swing::plaf::basic::BasicComboBoxUI> new_object() { return base_::new_object(); }
	static jni::ref<javax::swing::plaf::ComponentUI> createUI(jni::ref<javax::swing::JComponent> p1) { return call_static_method<"createUI", jni::ref<javax::swing::plaf::ComponentUI>>(p1); }
	void installUI(jni::ref<javax::swing::JComponent> p1) { return call_method<"installUI", void>(p1); }
	void uninstallUI(jni::ref<javax::swing::JComponent> p1) { return call_method<"uninstallUI", void>(p1); }
	void addEditor() { return call_method<"addEditor", void>(); }
	void removeEditor() { return call_method<"removeEditor", void>(); }
	void configureArrowButton() { return call_method<"configureArrowButton", void>(); }
	void unconfigureArrowButton() { return call_method<"unconfigureArrowButton", void>(); }
	jboolean isPopupVisible(jni::ref<javax::swing::JComboBox> p1) { return call_method<"isPopupVisible", jboolean>(p1); }
	void setPopupVisible(jni::ref<javax::swing::JComboBox> p1, jboolean p2) { return call_method<"setPopupVisible", void>(p1, p2); }
	jboolean isFocusTraversable(jni::ref<javax::swing::JComboBox> p1) { return call_method<"isFocusTraversable", jboolean>(p1); }
	void paint(jni::ref<java::awt::Graphics> p1, jni::ref<javax::swing::JComponent> p2) { return call_method<"paint", void>(p1, p2); }
	jni::ref<java::awt::Dimension> getPreferredSize(jni::ref<javax::swing::JComponent> p1) { return call_method<"getPreferredSize", jni::ref<java::awt::Dimension>>(p1); }
	jni::ref<java::awt::Dimension> getMinimumSize(jni::ref<javax::swing::JComponent> p1) { return call_method<"getMinimumSize", jni::ref<java::awt::Dimension>>(p1); }
	jni::ref<java::awt::Dimension> getMaximumSize(jni::ref<javax::swing::JComponent> p1) { return call_method<"getMaximumSize", jni::ref<java::awt::Dimension>>(p1); }
	jint getBaseline(jni::ref<javax::swing::JComponent> p1, jint p2, jint p3) { return call_method<"getBaseline", jint>(p1, p2, p3); }
	jni::ref<java::awt::Component_BaselineResizeBehavior> getBaselineResizeBehavior(jni::ref<javax::swing::JComponent> p1) { return call_method<"getBaselineResizeBehavior", jni::ref<java::awt::Component_BaselineResizeBehavior>>(p1); }
	jint getAccessibleChildrenCount(jni::ref<javax::swing::JComponent> p1) { return call_method<"getAccessibleChildrenCount", jint>(p1); }
	jni::ref<javax::accessibility::Accessible> getAccessibleChild(jni::ref<javax::swing::JComponent> p1, jint p2) { return call_method<"getAccessibleChild", jni::ref<javax::accessibility::Accessible>>(p1, p2); }
	void paintCurrentValue(jni::ref<java::awt::Graphics> p1, jni::ref<java::awt::Rectangle> p2, jboolean p3) { return call_method<"paintCurrentValue", void>(p1, p2, p3); }
	void paintCurrentValueBackground(jni::ref<java::awt::Graphics> p1, jni::ref<java::awt::Rectangle> p2, jboolean p3) { return call_method<"paintCurrentValueBackground", void>(p1, p2, p3); }

protected:

	BasicComboBoxUI(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_PLAF_BASIC_BASICCOMBOBOXUI
