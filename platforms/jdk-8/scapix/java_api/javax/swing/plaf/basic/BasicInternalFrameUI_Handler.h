// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/awt/event/ComponentListener.h>
#include <scapix/java_api/javax/swing/event/InternalFrameListener.h>
#include <scapix/java_api/java/awt/LayoutManager.h>
#include <scapix/java_api/javax/swing/event/MouseInputListener.h>
#include <scapix/java_api/java/beans/PropertyChangeListener.h>
#include <scapix/java_api/java/awt/event/WindowFocusListener.h>
#include <scapix/java_api/javax/swing/SwingConstants.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_PLAF_BASIC_BASICINTERNALFRAMEUI_HANDLER_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_PLAF_BASIC_BASICINTERNALFRAMEUI_HANDLER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing::plaf::basic { class BasicInternalFrameUI_Handler; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::plaf::basic::BasicInternalFrameUI_Handler>
{
	static constexpr fixed_string class_name = "javax/swing/plaf/basic/BasicInternalFrameUI$Handler";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::awt::event::ComponentListener, scapix::java_api::javax::swing::event::InternalFrameListener, scapix::java_api::java::awt::LayoutManager, scapix::java_api::javax::swing::event::MouseInputListener, scapix::java_api::java::beans::PropertyChangeListener, scapix::java_api::java::awt::event::WindowFocusListener, scapix::java_api::javax::swing::SwingConstants>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_PLAF_BASIC_BASICINTERNALFRAMEUI_HANDLER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_PLAF_BASIC_BASICINTERNALFRAMEUI_HANDLER)
#define SCAPIX_JAVA_API_JAVAX_SWING_PLAF_BASIC_BASICINTERNALFRAMEUI_HANDLER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Component.h>
#include <scapix/java_api/java/awt/Container.h>
#include <scapix/java_api/java/awt/Dimension.h>
#include <scapix/java_api/java/awt/event/ComponentEvent.h>
#include <scapix/java_api/java/awt/event/MouseEvent.h>
#include <scapix/java_api/java/awt/event/WindowEvent.h>
#include <scapix/java_api/java/beans/PropertyChangeEvent.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/swing/event/InternalFrameEvent.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class javax::swing::plaf::basic::BasicInternalFrameUI_Handler : public jni::object_base<"javax/swing/plaf/basic/BasicInternalFrameUI$Handler",
	java::lang::Object,
	java::awt::event::ComponentListener,
	javax::swing::event::InternalFrameListener,
	java::awt::LayoutManager,
	javax::swing::event::MouseInputListener,
	java::beans::PropertyChangeListener,
	java::awt::event::WindowFocusListener,
	javax::swing::SwingConstants>
{
public:

	void windowGainedFocus(jni::ref<java::awt::event::WindowEvent> p1) { return call_method<"windowGainedFocus", void>(p1); }
	void windowLostFocus(jni::ref<java::awt::event::WindowEvent> p1) { return call_method<"windowLostFocus", void>(p1); }
	void componentResized(jni::ref<java::awt::event::ComponentEvent> p1) { return call_method<"componentResized", void>(p1); }
	void componentMoved(jni::ref<java::awt::event::ComponentEvent> p1) { return call_method<"componentMoved", void>(p1); }
	void componentShown(jni::ref<java::awt::event::ComponentEvent> p1) { return call_method<"componentShown", void>(p1); }
	void componentHidden(jni::ref<java::awt::event::ComponentEvent> p1) { return call_method<"componentHidden", void>(p1); }
	void internalFrameClosed(jni::ref<javax::swing::event::InternalFrameEvent> p1) { return call_method<"internalFrameClosed", void>(p1); }
	void internalFrameActivated(jni::ref<javax::swing::event::InternalFrameEvent> p1) { return call_method<"internalFrameActivated", void>(p1); }
	void internalFrameDeactivated(jni::ref<javax::swing::event::InternalFrameEvent> p1) { return call_method<"internalFrameDeactivated", void>(p1); }
	void internalFrameClosing(jni::ref<javax::swing::event::InternalFrameEvent> p1) { return call_method<"internalFrameClosing", void>(p1); }
	void internalFrameOpened(jni::ref<javax::swing::event::InternalFrameEvent> p1) { return call_method<"internalFrameOpened", void>(p1); }
	void internalFrameIconified(jni::ref<javax::swing::event::InternalFrameEvent> p1) { return call_method<"internalFrameIconified", void>(p1); }
	void internalFrameDeiconified(jni::ref<javax::swing::event::InternalFrameEvent> p1) { return call_method<"internalFrameDeiconified", void>(p1); }
	void addLayoutComponent(jni::ref<java::lang::String> p1, jni::ref<java::awt::Component> p2) { return call_method<"addLayoutComponent", void>(p1, p2); }
	void removeLayoutComponent(jni::ref<java::awt::Component> p1) { return call_method<"removeLayoutComponent", void>(p1); }
	jni::ref<java::awt::Dimension> preferredLayoutSize(jni::ref<java::awt::Container> p1) { return call_method<"preferredLayoutSize", jni::ref<java::awt::Dimension>>(p1); }
	jni::ref<java::awt::Dimension> minimumLayoutSize(jni::ref<java::awt::Container> p1) { return call_method<"minimumLayoutSize", jni::ref<java::awt::Dimension>>(p1); }
	void layoutContainer(jni::ref<java::awt::Container> p1) { return call_method<"layoutContainer", void>(p1); }
	void mousePressed(jni::ref<java::awt::event::MouseEvent> p1) { return call_method<"mousePressed", void>(p1); }
	void mouseEntered(jni::ref<java::awt::event::MouseEvent> p1) { return call_method<"mouseEntered", void>(p1); }
	void mouseMoved(jni::ref<java::awt::event::MouseEvent> p1) { return call_method<"mouseMoved", void>(p1); }
	void mouseExited(jni::ref<java::awt::event::MouseEvent> p1) { return call_method<"mouseExited", void>(p1); }
	void mouseClicked(jni::ref<java::awt::event::MouseEvent> p1) { return call_method<"mouseClicked", void>(p1); }
	void mouseReleased(jni::ref<java::awt::event::MouseEvent> p1) { return call_method<"mouseReleased", void>(p1); }
	void mouseDragged(jni::ref<java::awt::event::MouseEvent> p1) { return call_method<"mouseDragged", void>(p1); }
	void propertyChange(jni::ref<java::beans::PropertyChangeEvent> p1) { return call_method<"propertyChange", void>(p1); }

protected:

	BasicInternalFrameUI_Handler(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_PLAF_BASIC_BASICINTERNALFRAMEUI_HANDLER
