// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/swing/plaf/SplitPaneUI.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_PLAF_BASIC_BASICSPLITPANEUI_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_PLAF_BASIC_BASICSPLITPANEUI_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing::plaf::basic { class BasicSplitPaneUI; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::plaf::basic::BasicSplitPaneUI>
{
	static constexpr fixed_string class_name = "javax/swing/plaf/basic/BasicSplitPaneUI";
	using base_classes = std::tuple<scapix::java_api::javax::swing::plaf::SplitPaneUI>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_PLAF_BASIC_BASICSPLITPANEUI_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_PLAF_BASIC_BASICSPLITPANEUI)
#define SCAPIX_JAVA_API_JAVAX_SWING_PLAF_BASIC_BASICSPLITPANEUI

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Component.h>
#include <scapix/java_api/java/awt/Dimension.h>
#include <scapix/java_api/java/awt/Graphics.h>
#include <scapix/java_api/java/awt/Insets.h>
#include <scapix/java_api/javax/swing/JComponent.h>
#include <scapix/java_api/javax/swing/JSplitPane.h>
#include <scapix/java_api/javax/swing/plaf/ComponentUI.h>
#include <scapix/java_api/javax/swing/plaf/basic/BasicSplitPaneDivider.h>
#include <scapix/java_api/javax/swing/plaf/basic/BasicSplitPaneUI_PropertyHandler.h>
#include <scapix/java_api/javax/swing/plaf/basic/BasicSplitPaneUI_FocusHandler.h>
#include <scapix/java_api/javax/swing/plaf/basic/BasicSplitPaneUI_KeyboardUpLeftHandler.h>
#include <scapix/java_api/javax/swing/plaf/basic/BasicSplitPaneUI_KeyboardDownRightHandler.h>
#include <scapix/java_api/javax/swing/plaf/basic/BasicSplitPaneUI_KeyboardHomeHandler.h>
#include <scapix/java_api/javax/swing/plaf/basic/BasicSplitPaneUI_KeyboardEndHandler.h>
#include <scapix/java_api/javax/swing/plaf/basic/BasicSplitPaneUI_KeyboardResizeToggleHandler.h>
#include <scapix/java_api/javax/swing/plaf/basic/BasicSplitPaneUI_BasicHorizontalLayoutManager.h>
#include <scapix/java_api/javax/swing/plaf/basic/BasicSplitPaneUI_BasicVerticalLayoutManager.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::plaf::basic::BasicSplitPaneUI : public jni::object_base<"javax/swing/plaf/basic/BasicSplitPaneUI",
	javax::swing::plaf::SplitPaneUI>
{
public:

	using PropertyHandler = BasicSplitPaneUI_PropertyHandler;
	using FocusHandler = BasicSplitPaneUI_FocusHandler;
	using KeyboardUpLeftHandler = BasicSplitPaneUI_KeyboardUpLeftHandler;
	using KeyboardDownRightHandler = BasicSplitPaneUI_KeyboardDownRightHandler;
	using KeyboardHomeHandler = BasicSplitPaneUI_KeyboardHomeHandler;
	using KeyboardEndHandler = BasicSplitPaneUI_KeyboardEndHandler;
	using KeyboardResizeToggleHandler = BasicSplitPaneUI_KeyboardResizeToggleHandler;
	using BasicHorizontalLayoutManager = BasicSplitPaneUI_BasicHorizontalLayoutManager;
	using BasicVerticalLayoutManager = BasicSplitPaneUI_BasicVerticalLayoutManager;

	static jni::ref<javax::swing::plaf::basic::BasicSplitPaneUI> new_object() { return base_::new_object(); }
	static jni::ref<javax::swing::plaf::ComponentUI> createUI(jni::ref<javax::swing::JComponent> p1) { return call_static_method<"createUI", jni::ref<javax::swing::plaf::ComponentUI>>(p1); }
	void installUI(jni::ref<javax::swing::JComponent> p1) { return call_method<"installUI", void>(p1); }
	void uninstallUI(jni::ref<javax::swing::JComponent> p1) { return call_method<"uninstallUI", void>(p1); }
	jint getOrientation() { return call_method<"getOrientation", jint>(); }
	void setOrientation(jint p1) { return call_method<"setOrientation", void>(p1); }
	jboolean isContinuousLayout() { return call_method<"isContinuousLayout", jboolean>(); }
	void setContinuousLayout(jboolean p1) { return call_method<"setContinuousLayout", void>(p1); }
	jint getLastDragLocation() { return call_method<"getLastDragLocation", jint>(); }
	void setLastDragLocation(jint p1) { return call_method<"setLastDragLocation", void>(p1); }
	jni::ref<javax::swing::plaf::basic::BasicSplitPaneDivider> getDivider() { return call_method<"getDivider", jni::ref<javax::swing::plaf::basic::BasicSplitPaneDivider>>(); }
	jni::ref<java::awt::Component> getNonContinuousLayoutDivider() { return call_method<"getNonContinuousLayoutDivider", jni::ref<java::awt::Component>>(); }
	jni::ref<javax::swing::JSplitPane> getSplitPane() { return call_method<"getSplitPane", jni::ref<javax::swing::JSplitPane>>(); }
	jni::ref<javax::swing::plaf::basic::BasicSplitPaneDivider> createDefaultDivider() { return call_method<"createDefaultDivider", jni::ref<javax::swing::plaf::basic::BasicSplitPaneDivider>>(); }
	void resetToPreferredSizes(jni::ref<javax::swing::JSplitPane> p1) { return call_method<"resetToPreferredSizes", void>(p1); }
	void setDividerLocation(jni::ref<javax::swing::JSplitPane> p1, jint p2) { return call_method<"setDividerLocation", void>(p1, p2); }
	jint getDividerLocation(jni::ref<javax::swing::JSplitPane> p1) { return call_method<"getDividerLocation", jint>(p1); }
	jint getMinimumDividerLocation(jni::ref<javax::swing::JSplitPane> p1) { return call_method<"getMinimumDividerLocation", jint>(p1); }
	jint getMaximumDividerLocation(jni::ref<javax::swing::JSplitPane> p1) { return call_method<"getMaximumDividerLocation", jint>(p1); }
	void finishedPaintingChildren(jni::ref<javax::swing::JSplitPane> p1, jni::ref<java::awt::Graphics> p2) { return call_method<"finishedPaintingChildren", void>(p1, p2); }
	void paint(jni::ref<java::awt::Graphics> p1, jni::ref<javax::swing::JComponent> p2) { return call_method<"paint", void>(p1, p2); }
	jni::ref<java::awt::Dimension> getPreferredSize(jni::ref<javax::swing::JComponent> p1) { return call_method<"getPreferredSize", jni::ref<java::awt::Dimension>>(p1); }
	jni::ref<java::awt::Dimension> getMinimumSize(jni::ref<javax::swing::JComponent> p1) { return call_method<"getMinimumSize", jni::ref<java::awt::Dimension>>(p1); }
	jni::ref<java::awt::Dimension> getMaximumSize(jni::ref<javax::swing::JComponent> p1) { return call_method<"getMaximumSize", jni::ref<java::awt::Dimension>>(p1); }
	jni::ref<java::awt::Insets> getInsets(jni::ref<javax::swing::JComponent> p1) { return call_method<"getInsets", jni::ref<java::awt::Insets>>(p1); }

protected:

	BasicSplitPaneUI(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_PLAF_BASIC_BASICSPLITPANEUI
