// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_PLAF_METAL_METALTHEME_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_PLAF_METAL_METALTHEME_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing::plaf::metal { class MetalTheme; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::plaf::metal::MetalTheme>
{
	static constexpr fixed_string class_name = "javax/swing/plaf/metal/MetalTheme";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_PLAF_METAL_METALTHEME_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_PLAF_METAL_METALTHEME)
#define SCAPIX_JAVA_API_JAVAX_SWING_PLAF_METAL_METALTHEME

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/swing/UIDefaults.h>
#include <scapix/java_api/javax/swing/plaf/ColorUIResource.h>
#include <scapix/java_api/javax/swing/plaf/FontUIResource.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::plaf::metal::MetalTheme : public jni::object_base<"javax/swing/plaf/metal/MetalTheme",
	java::lang::Object>
{
public:

	static jni::ref<javax::swing::plaf::metal::MetalTheme> new_object() { return base_::new_object(); }
	jni::ref<java::lang::String> getName() { return call_method<"getName", jni::ref<java::lang::String>>(); }
	jni::ref<javax::swing::plaf::FontUIResource> getControlTextFont() { return call_method<"getControlTextFont", jni::ref<javax::swing::plaf::FontUIResource>>(); }
	jni::ref<javax::swing::plaf::FontUIResource> getSystemTextFont() { return call_method<"getSystemTextFont", jni::ref<javax::swing::plaf::FontUIResource>>(); }
	jni::ref<javax::swing::plaf::FontUIResource> getUserTextFont() { return call_method<"getUserTextFont", jni::ref<javax::swing::plaf::FontUIResource>>(); }
	jni::ref<javax::swing::plaf::FontUIResource> getMenuTextFont() { return call_method<"getMenuTextFont", jni::ref<javax::swing::plaf::FontUIResource>>(); }
	jni::ref<javax::swing::plaf::FontUIResource> getWindowTitleFont() { return call_method<"getWindowTitleFont", jni::ref<javax::swing::plaf::FontUIResource>>(); }
	jni::ref<javax::swing::plaf::FontUIResource> getSubTextFont() { return call_method<"getSubTextFont", jni::ref<javax::swing::plaf::FontUIResource>>(); }
	jni::ref<javax::swing::plaf::ColorUIResource> getFocusColor() { return call_method<"getFocusColor", jni::ref<javax::swing::plaf::ColorUIResource>>(); }
	jni::ref<javax::swing::plaf::ColorUIResource> getDesktopColor() { return call_method<"getDesktopColor", jni::ref<javax::swing::plaf::ColorUIResource>>(); }
	jni::ref<javax::swing::plaf::ColorUIResource> getControl() { return call_method<"getControl", jni::ref<javax::swing::plaf::ColorUIResource>>(); }
	jni::ref<javax::swing::plaf::ColorUIResource> getControlShadow() { return call_method<"getControlShadow", jni::ref<javax::swing::plaf::ColorUIResource>>(); }
	jni::ref<javax::swing::plaf::ColorUIResource> getControlDarkShadow() { return call_method<"getControlDarkShadow", jni::ref<javax::swing::plaf::ColorUIResource>>(); }
	jni::ref<javax::swing::plaf::ColorUIResource> getControlInfo() { return call_method<"getControlInfo", jni::ref<javax::swing::plaf::ColorUIResource>>(); }
	jni::ref<javax::swing::plaf::ColorUIResource> getControlHighlight() { return call_method<"getControlHighlight", jni::ref<javax::swing::plaf::ColorUIResource>>(); }
	jni::ref<javax::swing::plaf::ColorUIResource> getControlDisabled() { return call_method<"getControlDisabled", jni::ref<javax::swing::plaf::ColorUIResource>>(); }
	jni::ref<javax::swing::plaf::ColorUIResource> getPrimaryControl() { return call_method<"getPrimaryControl", jni::ref<javax::swing::plaf::ColorUIResource>>(); }
	jni::ref<javax::swing::plaf::ColorUIResource> getPrimaryControlShadow() { return call_method<"getPrimaryControlShadow", jni::ref<javax::swing::plaf::ColorUIResource>>(); }
	jni::ref<javax::swing::plaf::ColorUIResource> getPrimaryControlDarkShadow() { return call_method<"getPrimaryControlDarkShadow", jni::ref<javax::swing::plaf::ColorUIResource>>(); }
	jni::ref<javax::swing::plaf::ColorUIResource> getPrimaryControlInfo() { return call_method<"getPrimaryControlInfo", jni::ref<javax::swing::plaf::ColorUIResource>>(); }
	jni::ref<javax::swing::plaf::ColorUIResource> getPrimaryControlHighlight() { return call_method<"getPrimaryControlHighlight", jni::ref<javax::swing::plaf::ColorUIResource>>(); }
	jni::ref<javax::swing::plaf::ColorUIResource> getSystemTextColor() { return call_method<"getSystemTextColor", jni::ref<javax::swing::plaf::ColorUIResource>>(); }
	jni::ref<javax::swing::plaf::ColorUIResource> getControlTextColor() { return call_method<"getControlTextColor", jni::ref<javax::swing::plaf::ColorUIResource>>(); }
	jni::ref<javax::swing::plaf::ColorUIResource> getInactiveControlTextColor() { return call_method<"getInactiveControlTextColor", jni::ref<javax::swing::plaf::ColorUIResource>>(); }
	jni::ref<javax::swing::plaf::ColorUIResource> getInactiveSystemTextColor() { return call_method<"getInactiveSystemTextColor", jni::ref<javax::swing::plaf::ColorUIResource>>(); }
	jni::ref<javax::swing::plaf::ColorUIResource> getUserTextColor() { return call_method<"getUserTextColor", jni::ref<javax::swing::plaf::ColorUIResource>>(); }
	jni::ref<javax::swing::plaf::ColorUIResource> getTextHighlightColor() { return call_method<"getTextHighlightColor", jni::ref<javax::swing::plaf::ColorUIResource>>(); }
	jni::ref<javax::swing::plaf::ColorUIResource> getHighlightedTextColor() { return call_method<"getHighlightedTextColor", jni::ref<javax::swing::plaf::ColorUIResource>>(); }
	jni::ref<javax::swing::plaf::ColorUIResource> getWindowBackground() { return call_method<"getWindowBackground", jni::ref<javax::swing::plaf::ColorUIResource>>(); }
	jni::ref<javax::swing::plaf::ColorUIResource> getWindowTitleBackground() { return call_method<"getWindowTitleBackground", jni::ref<javax::swing::plaf::ColorUIResource>>(); }
	jni::ref<javax::swing::plaf::ColorUIResource> getWindowTitleForeground() { return call_method<"getWindowTitleForeground", jni::ref<javax::swing::plaf::ColorUIResource>>(); }
	jni::ref<javax::swing::plaf::ColorUIResource> getWindowTitleInactiveBackground() { return call_method<"getWindowTitleInactiveBackground", jni::ref<javax::swing::plaf::ColorUIResource>>(); }
	jni::ref<javax::swing::plaf::ColorUIResource> getWindowTitleInactiveForeground() { return call_method<"getWindowTitleInactiveForeground", jni::ref<javax::swing::plaf::ColorUIResource>>(); }
	jni::ref<javax::swing::plaf::ColorUIResource> getMenuBackground() { return call_method<"getMenuBackground", jni::ref<javax::swing::plaf::ColorUIResource>>(); }
	jni::ref<javax::swing::plaf::ColorUIResource> getMenuForeground() { return call_method<"getMenuForeground", jni::ref<javax::swing::plaf::ColorUIResource>>(); }
	jni::ref<javax::swing::plaf::ColorUIResource> getMenuSelectedBackground() { return call_method<"getMenuSelectedBackground", jni::ref<javax::swing::plaf::ColorUIResource>>(); }
	jni::ref<javax::swing::plaf::ColorUIResource> getMenuSelectedForeground() { return call_method<"getMenuSelectedForeground", jni::ref<javax::swing::plaf::ColorUIResource>>(); }
	jni::ref<javax::swing::plaf::ColorUIResource> getMenuDisabledForeground() { return call_method<"getMenuDisabledForeground", jni::ref<javax::swing::plaf::ColorUIResource>>(); }
	jni::ref<javax::swing::plaf::ColorUIResource> getSeparatorBackground() { return call_method<"getSeparatorBackground", jni::ref<javax::swing::plaf::ColorUIResource>>(); }
	jni::ref<javax::swing::plaf::ColorUIResource> getSeparatorForeground() { return call_method<"getSeparatorForeground", jni::ref<javax::swing::plaf::ColorUIResource>>(); }
	jni::ref<javax::swing::plaf::ColorUIResource> getAcceleratorForeground() { return call_method<"getAcceleratorForeground", jni::ref<javax::swing::plaf::ColorUIResource>>(); }
	jni::ref<javax::swing::plaf::ColorUIResource> getAcceleratorSelectedForeground() { return call_method<"getAcceleratorSelectedForeground", jni::ref<javax::swing::plaf::ColorUIResource>>(); }
	void addCustomEntriesToTable(jni::ref<javax::swing::UIDefaults> p1) { return call_method<"addCustomEntriesToTable", void>(p1); }

protected:

	MetalTheme(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_PLAF_METAL_METALTHEME
