// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/swing/JButton.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_PLAF_METAL_METALCOMBOBOXBUTTON_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_PLAF_METAL_METALCOMBOBOXBUTTON_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing::plaf::metal { class MetalComboBoxButton; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::plaf::metal::MetalComboBoxButton>
{
	static constexpr fixed_string class_name = "javax/swing/plaf/metal/MetalComboBoxButton";
	using base_classes = std::tuple<scapix::java_api::javax::swing::JButton>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_PLAF_METAL_METALCOMBOBOXBUTTON_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_PLAF_METAL_METALCOMBOBOXBUTTON)
#define SCAPIX_JAVA_API_JAVAX_SWING_PLAF_METAL_METALCOMBOBOXBUTTON

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Dimension.h>
#include <scapix/java_api/java/awt/Graphics.h>
#include <scapix/java_api/javax/swing/CellRendererPane.h>
#include <scapix/java_api/javax/swing/Icon.h>
#include <scapix/java_api/javax/swing/JComboBox.h>
#include <scapix/java_api/javax/swing/JList.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::plaf::metal::MetalComboBoxButton : public jni::object_base<"javax/swing/plaf/metal/MetalComboBoxButton",
	javax::swing::JButton>
{
public:

	jni::ref<javax::swing::JComboBox> getComboBox() { return call_method<"getComboBox", jni::ref<javax::swing::JComboBox>>(); }
	void setComboBox(jni::ref<javax::swing::JComboBox> p1) { return call_method<"setComboBox", void>(p1); }
	jni::ref<javax::swing::Icon> getComboIcon() { return call_method<"getComboIcon", jni::ref<javax::swing::Icon>>(); }
	void setComboIcon(jni::ref<javax::swing::Icon> p1) { return call_method<"setComboIcon", void>(p1); }
	jboolean isIconOnly() { return call_method<"isIconOnly", jboolean>(); }
	void setIconOnly(jboolean p1) { return call_method<"setIconOnly", void>(p1); }
	static jni::ref<javax::swing::plaf::metal::MetalComboBoxButton> new_object(jni::ref<javax::swing::JComboBox> p1, jni::ref<javax::swing::Icon> p2, jni::ref<javax::swing::CellRendererPane> p3, jni::ref<javax::swing::JList> p4) { return base_::new_object(p1, p2, p3, p4); }
	static jni::ref<javax::swing::plaf::metal::MetalComboBoxButton> new_object(jni::ref<javax::swing::JComboBox> p1, jni::ref<javax::swing::Icon> p2, jboolean p3, jni::ref<javax::swing::CellRendererPane> p4, jni::ref<javax::swing::JList> p5) { return base_::new_object(p1, p2, p3, p4, p5); }
	jboolean isFocusTraversable() { return call_method<"isFocusTraversable", jboolean>(); }
	void setEnabled(jboolean p1) { return call_method<"setEnabled", void>(p1); }
	void paintComponent(jni::ref<java::awt::Graphics> p1) { return call_method<"paintComponent", void>(p1); }
	jni::ref<java::awt::Dimension> getMinimumSize() { return call_method<"getMinimumSize", jni::ref<java::awt::Dimension>>(); }

protected:

	MetalComboBoxButton(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_PLAF_METAL_METALCOMBOBOXBUTTON
