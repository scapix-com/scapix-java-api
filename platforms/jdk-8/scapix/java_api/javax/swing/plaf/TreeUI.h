// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/swing/plaf/ComponentUI.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_PLAF_TREEUI_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_PLAF_TREEUI_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing::plaf { class TreeUI; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::plaf::TreeUI>
{
	static constexpr fixed_string class_name = "javax/swing/plaf/TreeUI";
	using base_classes = std::tuple<scapix::java_api::javax::swing::plaf::ComponentUI>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_PLAF_TREEUI_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_PLAF_TREEUI)
#define SCAPIX_JAVA_API_JAVAX_SWING_PLAF_TREEUI

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Rectangle.h>
#include <scapix/java_api/javax/swing/JTree.h>
#include <scapix/java_api/javax/swing/tree/TreePath.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::plaf::TreeUI : public jni::object_base<"javax/swing/plaf/TreeUI",
	javax::swing::plaf::ComponentUI>
{
public:

	static jni::ref<javax::swing::plaf::TreeUI> new_object() { return base_::new_object(); }
	jni::ref<java::awt::Rectangle> getPathBounds(jni::ref<javax::swing::JTree> p1, jni::ref<javax::swing::tree::TreePath> p2) { return call_method<"getPathBounds", jni::ref<java::awt::Rectangle>>(p1, p2); }
	jni::ref<javax::swing::tree::TreePath> getPathForRow(jni::ref<javax::swing::JTree> p1, jint p2) { return call_method<"getPathForRow", jni::ref<javax::swing::tree::TreePath>>(p1, p2); }
	jint getRowForPath(jni::ref<javax::swing::JTree> p1, jni::ref<javax::swing::tree::TreePath> p2) { return call_method<"getRowForPath", jint>(p1, p2); }
	jint getRowCount(jni::ref<javax::swing::JTree> p1) { return call_method<"getRowCount", jint>(p1); }
	jni::ref<javax::swing::tree::TreePath> getClosestPathForLocation(jni::ref<javax::swing::JTree> p1, jint p2, jint p3) { return call_method<"getClosestPathForLocation", jni::ref<javax::swing::tree::TreePath>>(p1, p2, p3); }
	jboolean isEditing(jni::ref<javax::swing::JTree> p1) { return call_method<"isEditing", jboolean>(p1); }
	jboolean stopEditing(jni::ref<javax::swing::JTree> p1) { return call_method<"stopEditing", jboolean>(p1); }
	void cancelEditing(jni::ref<javax::swing::JTree> p1) { return call_method<"cancelEditing", void>(p1); }
	void startEditingAtPath(jni::ref<javax::swing::JTree> p1, jni::ref<javax::swing::tree::TreePath> p2) { return call_method<"startEditingAtPath", void>(p1, p2); }
	jni::ref<javax::swing::tree::TreePath> getEditingPath(jni::ref<javax::swing::JTree> p1) { return call_method<"getEditingPath", jni::ref<javax::swing::tree::TreePath>>(p1); }

protected:

	TreeUI(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_PLAF_TREEUI
