// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/ref/SoftReference.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_PLAF_NIMBUS_IMAGECACHE_PIXELCOUNTSOFTREFERENCE_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_PLAF_NIMBUS_IMAGECACHE_PIXELCOUNTSOFTREFERENCE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing::plaf::nimbus { class ImageCache_PixelCountSoftReference; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::plaf::nimbus::ImageCache_PixelCountSoftReference>
{
	static constexpr fixed_string class_name = "javax/swing/plaf/nimbus/ImageCache$PixelCountSoftReference";
	using base_classes = std::tuple<scapix::java_api::java::lang::ref::SoftReference>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_PLAF_NIMBUS_IMAGECACHE_PIXELCOUNTSOFTREFERENCE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_PLAF_NIMBUS_IMAGECACHE_PIXELCOUNTSOFTREFERENCE)
#define SCAPIX_JAVA_API_JAVAX_SWING_PLAF_NIMBUS_IMAGECACHE_PIXELCOUNTSOFTREFERENCE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/GraphicsConfiguration.h>
#include <scapix/java_api/java/awt/Image.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/ref/ReferenceQueue.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class javax::swing::plaf::nimbus::ImageCache_PixelCountSoftReference : public jni::object_base<"javax/swing/plaf/nimbus/ImageCache$PixelCountSoftReference",
	java::lang::ref::SoftReference>
{
public:

	static jni::ref<javax::swing::plaf::nimbus::ImageCache_PixelCountSoftReference> new_object(jni::ref<java::awt::Image> p1, jni::ref<java::lang::ref::ReferenceQueue> p2, jint p3, jint p4, jni::ref<java::awt::GraphicsConfiguration> p5, jint p6, jint p7, jni::ref<jni::array<java::lang::Object>> p8) { return base_::new_object(p1, p2, p3, p4, p5, p6, p7, p8); }
	jboolean equals(jni::ref<java::awt::GraphicsConfiguration> p1, jint p2, jint p3, jni::ref<jni::array<java::lang::Object>> p4) { return call_method<"equals", jboolean>(p1, p2, p3, p4); }

protected:

	ImageCache_PixelCountSoftReference(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_PLAF_NIMBUS_IMAGECACHE_PIXELCOUNTSOFTREFERENCE
