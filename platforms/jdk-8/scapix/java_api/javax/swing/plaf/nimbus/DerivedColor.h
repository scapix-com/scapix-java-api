// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/awt/Color.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_PLAF_NIMBUS_DERIVEDCOLOR_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_PLAF_NIMBUS_DERIVEDCOLOR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing::plaf::nimbus { class DerivedColor; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::plaf::nimbus::DerivedColor>
{
	static constexpr fixed_string class_name = "javax/swing/plaf/nimbus/DerivedColor";
	using base_classes = std::tuple<scapix::java_api::java::awt::Color>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_PLAF_NIMBUS_DERIVEDCOLOR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_PLAF_NIMBUS_DERIVEDCOLOR)
#define SCAPIX_JAVA_API_JAVAX_SWING_PLAF_NIMBUS_DERIVEDCOLOR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class javax::swing::plaf::nimbus::DerivedColor : public jni::object_base<"javax/swing/plaf/nimbus/DerivedColor",
	java::awt::Color>
{
public:

	jni::ref<java::lang::String> getUiDefaultParentName() { return call_method<"getUiDefaultParentName", jni::ref<java::lang::String>>(); }
	jfloat getHueOffset() { return call_method<"getHueOffset", jfloat>(); }
	jfloat getSaturationOffset() { return call_method<"getSaturationOffset", jfloat>(); }
	jfloat getBrightnessOffset() { return call_method<"getBrightnessOffset", jfloat>(); }
	jint getAlphaOffset() { return call_method<"getAlphaOffset", jint>(); }
	void rederiveColor() { return call_method<"rederiveColor", void>(); }
	jint getRGB() { return call_method<"getRGB", jint>(); }
	jboolean equals(jni::ref<java::lang::Object> p1) { return call_method<"equals", jboolean>(p1); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	DerivedColor(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_PLAF_NIMBUS_DERIVEDCOLOR
