// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_PLAF_NIMBUS_IMAGECACHE_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_PLAF_NIMBUS_IMAGECACHE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing::plaf::nimbus { class ImageCache; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::plaf::nimbus::ImageCache>
{
	static constexpr fixed_string class_name = "javax/swing/plaf/nimbus/ImageCache";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_PLAF_NIMBUS_IMAGECACHE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_PLAF_NIMBUS_IMAGECACHE)
#define SCAPIX_JAVA_API_JAVAX_SWING_PLAF_NIMBUS_IMAGECACHE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/GraphicsConfiguration.h>
#include <scapix/java_api/java/awt/Image.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class javax::swing::plaf::nimbus::ImageCache : public jni::object_base<"javax/swing/plaf/nimbus/ImageCache",
	java::lang::Object>
{
public:

	static jni::ref<javax::swing::plaf::nimbus::ImageCache> new_object() { return base_::new_object(); }
	static jni::ref<javax::swing::plaf::nimbus::ImageCache> new_object(jint p1, jint p2) { return base_::new_object(p1, p2); }
	void flush() { return call_method<"flush", void>(); }
	jboolean isImageCachable(jint p1, jint p2) { return call_method<"isImageCachable", jboolean>(p1, p2); }
	jni::ref<java::awt::Image> getImage(jni::ref<java::awt::GraphicsConfiguration> p1, jint p2, jint p3, jni::ref<jni::array<java::lang::Object>> p4) { return call_method<"getImage", jni::ref<java::awt::Image>>(p1, p2, p3, p4); }
	jboolean setImage(jni::ref<java::awt::Image> p1, jni::ref<java::awt::GraphicsConfiguration> p2, jint p3, jint p4, jni::ref<jni::array<java::lang::Object>> p5) { return call_method<"setImage", jboolean>(p1, p2, p3, p4, p5); }

protected:

	ImageCache(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_PLAF_NIMBUS_IMAGECACHE
