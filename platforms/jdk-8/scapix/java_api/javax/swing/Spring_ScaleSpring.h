// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/swing/Spring.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_SPRING_SCALESPRING_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_SPRING_SCALESPRING_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing { class Spring_ScaleSpring; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::Spring_ScaleSpring>
{
	static constexpr fixed_string class_name = "javax/swing/Spring$ScaleSpring";
	using base_classes = std::tuple<scapix::java_api::javax::swing::Spring>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_SPRING_SCALESPRING_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_SPRING_SCALESPRING)
#define SCAPIX_JAVA_API_JAVAX_SWING_SPRING_SCALESPRING

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class javax::swing::Spring_ScaleSpring : public jni::object_base<"javax/swing/Spring$ScaleSpring",
	javax::swing::Spring>
{
public:

	jint getMinimumValue() { return call_method<"getMinimumValue", jint>(); }
	jint getPreferredValue() { return call_method<"getPreferredValue", jint>(); }
	jint getMaximumValue() { return call_method<"getMaximumValue", jint>(); }
	jint getValue() { return call_method<"getValue", jint>(); }
	void setValue(jint p1) { return call_method<"setValue", void>(p1); }

protected:

	Spring_ScaleSpring(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_SPRING_SCALESPRING
