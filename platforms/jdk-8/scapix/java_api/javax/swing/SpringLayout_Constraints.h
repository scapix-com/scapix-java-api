// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_SPRINGLAYOUT_CONSTRAINTS_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_SPRINGLAYOUT_CONSTRAINTS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing { class SpringLayout_Constraints; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::SpringLayout_Constraints>
{
	static constexpr fixed_string class_name = "javax/swing/SpringLayout$Constraints";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_SPRINGLAYOUT_CONSTRAINTS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_SPRINGLAYOUT_CONSTRAINTS)
#define SCAPIX_JAVA_API_JAVAX_SWING_SPRINGLAYOUT_CONSTRAINTS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Component.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/swing/Spring.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::SpringLayout_Constraints : public jni::object_base<"javax/swing/SpringLayout$Constraints",
	java::lang::Object>
{
public:

	static jni::ref<javax::swing::SpringLayout_Constraints> new_object() { return base_::new_object(); }
	static jni::ref<javax::swing::SpringLayout_Constraints> new_object(jni::ref<javax::swing::Spring> p1, jni::ref<javax::swing::Spring> p2) { return base_::new_object(p1, p2); }
	static jni::ref<javax::swing::SpringLayout_Constraints> new_object(jni::ref<javax::swing::Spring> p1, jni::ref<javax::swing::Spring> p2, jni::ref<javax::swing::Spring> p3, jni::ref<javax::swing::Spring> p4) { return base_::new_object(p1, p2, p3, p4); }
	static jni::ref<javax::swing::SpringLayout_Constraints> new_object(jni::ref<java::awt::Component> p1) { return base_::new_object(p1); }
	void setX(jni::ref<javax::swing::Spring> p1) { return call_method<"setX", void>(p1); }
	jni::ref<javax::swing::Spring> getX() { return call_method<"getX", jni::ref<javax::swing::Spring>>(); }
	void setY(jni::ref<javax::swing::Spring> p1) { return call_method<"setY", void>(p1); }
	jni::ref<javax::swing::Spring> getY() { return call_method<"getY", jni::ref<javax::swing::Spring>>(); }
	void setWidth(jni::ref<javax::swing::Spring> p1) { return call_method<"setWidth", void>(p1); }
	jni::ref<javax::swing::Spring> getWidth() { return call_method<"getWidth", jni::ref<javax::swing::Spring>>(); }
	void setHeight(jni::ref<javax::swing::Spring> p1) { return call_method<"setHeight", void>(p1); }
	jni::ref<javax::swing::Spring> getHeight() { return call_method<"getHeight", jni::ref<javax::swing::Spring>>(); }
	void setConstraint(jni::ref<java::lang::String> p1, jni::ref<javax::swing::Spring> p2) { return call_method<"setConstraint", void>(p1, p2); }
	jni::ref<javax::swing::Spring> getConstraint(jni::ref<java::lang::String> p1) { return call_method<"getConstraint", jni::ref<javax::swing::Spring>>(p1); }

protected:

	SpringLayout_Constraints(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_SPRINGLAYOUT_CONSTRAINTS
