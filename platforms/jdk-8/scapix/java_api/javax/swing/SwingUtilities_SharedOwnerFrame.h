// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/awt/Frame.h>
#include <scapix/java_api/java/awt/event/WindowListener.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_SWINGUTILITIES_SHAREDOWNERFRAME_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_SWINGUTILITIES_SHAREDOWNERFRAME_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing { class SwingUtilities_SharedOwnerFrame; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::SwingUtilities_SharedOwnerFrame>
{
	static constexpr fixed_string class_name = "javax/swing/SwingUtilities$SharedOwnerFrame";
	using base_classes = std::tuple<scapix::java_api::java::awt::Frame, scapix::java_api::java::awt::event::WindowListener>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_SWINGUTILITIES_SHAREDOWNERFRAME_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_SWINGUTILITIES_SHAREDOWNERFRAME)
#define SCAPIX_JAVA_API_JAVAX_SWING_SWINGUTILITIES_SHAREDOWNERFRAME

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/event/WindowEvent.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class javax::swing::SwingUtilities_SharedOwnerFrame : public jni::object_base<"javax/swing/SwingUtilities$SharedOwnerFrame",
	java::awt::Frame,
	java::awt::event::WindowListener>
{
public:

	void addNotify() { return call_method<"addNotify", void>(); }
	void windowClosed(jni::ref<java::awt::event::WindowEvent> p1) { return call_method<"windowClosed", void>(p1); }
	void windowOpened(jni::ref<java::awt::event::WindowEvent> p1) { return call_method<"windowOpened", void>(p1); }
	void windowClosing(jni::ref<java::awt::event::WindowEvent> p1) { return call_method<"windowClosing", void>(p1); }
	void windowIconified(jni::ref<java::awt::event::WindowEvent> p1) { return call_method<"windowIconified", void>(p1); }
	void windowDeiconified(jni::ref<java::awt::event::WindowEvent> p1) { return call_method<"windowDeiconified", void>(p1); }
	void windowActivated(jni::ref<java::awt::event::WindowEvent> p1) { return call_method<"windowActivated", void>(p1); }
	void windowDeactivated(jni::ref<java::awt::event::WindowEvent> p1) { return call_method<"windowDeactivated", void>(p1); }
	void show() { return call_method<"show", void>(); }
	void dispose() { return call_method<"dispose", void>(); }

protected:

	SwingUtilities_SharedOwnerFrame(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_SWINGUTILITIES_SHAREDOWNERFRAME
