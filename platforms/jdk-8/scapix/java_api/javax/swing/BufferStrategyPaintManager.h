// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/swing/RepaintManager_PaintManager.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_BUFFERSTRATEGYPAINTMANAGER_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_BUFFERSTRATEGYPAINTMANAGER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing { class BufferStrategyPaintManager; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::BufferStrategyPaintManager>
{
	static constexpr fixed_string class_name = "javax/swing/BufferStrategyPaintManager";
	using base_classes = std::tuple<scapix::java_api::javax::swing::RepaintManager_PaintManager>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_BUFFERSTRATEGYPAINTMANAGER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_BUFFERSTRATEGYPAINTMANAGER)
#define SCAPIX_JAVA_API_JAVAX_SWING_BUFFERSTRATEGYPAINTMANAGER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Container.h>
#include <scapix/java_api/java/awt/Graphics.h>
#include <scapix/java_api/javax/swing/JComponent.h>
#include <scapix/java_api/javax/swing/JRootPane.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class javax::swing::BufferStrategyPaintManager : public jni::object_base<"javax/swing/BufferStrategyPaintManager",
	javax::swing::RepaintManager_PaintManager>
{
public:

	jboolean show(jni::ref<java::awt::Container> p1, jint p2, jint p3, jint p4, jint p5) { return call_method<"show", jboolean>(p1, p2, p3, p4, p5); }
	jboolean paint(jni::ref<javax::swing::JComponent> p1, jni::ref<javax::swing::JComponent> p2, jni::ref<java::awt::Graphics> p3, jint p4, jint p5, jint p6, jint p7) { return call_method<"paint", jboolean>(p1, p2, p3, p4, p5, p6, p7); }
	void copyArea(jni::ref<javax::swing::JComponent> p1, jni::ref<java::awt::Graphics> p2, jint p3, jint p4, jint p5, jint p6, jint p7, jint p8, jboolean p9) { return call_method<"copyArea", void>(p1, p2, p3, p4, p5, p6, p7, p8, p9); }
	void beginPaint() { return call_method<"beginPaint", void>(); }
	void endPaint() { return call_method<"endPaint", void>(); }
	void doubleBufferingChanged(jni::ref<javax::swing::JRootPane> p1) { return call_method<"doubleBufferingChanged", void>(p1); }

protected:

	BufferStrategyPaintManager(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_BUFFERSTRATEGYPAINTMANAGER
