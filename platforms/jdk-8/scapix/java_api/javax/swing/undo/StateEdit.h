// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/swing/undo/AbstractUndoableEdit.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_UNDO_STATEEDIT_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_UNDO_STATEEDIT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing::undo { class StateEdit; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::undo::StateEdit>
{
	static constexpr fixed_string class_name = "javax/swing/undo/StateEdit";
	using base_classes = std::tuple<scapix::java_api::javax::swing::undo::AbstractUndoableEdit>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_UNDO_STATEEDIT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_UNDO_STATEEDIT)
#define SCAPIX_JAVA_API_JAVAX_SWING_UNDO_STATEEDIT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/swing/undo/StateEditable.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::undo::StateEdit : public jni::object_base<"javax/swing/undo/StateEdit",
	javax::swing::undo::AbstractUndoableEdit>
{
public:

	static jni::ref<javax::swing::undo::StateEdit> new_object(jni::ref<javax::swing::undo::StateEditable> p1) { return base_::new_object(p1); }
	static jni::ref<javax::swing::undo::StateEdit> new_object(jni::ref<javax::swing::undo::StateEditable> p1, jni::ref<java::lang::String> p2) { return base_::new_object(p1, p2); }
	void end() { return call_method<"end", void>(); }
	void undo() { return call_method<"undo", void>(); }
	void redo() { return call_method<"redo", void>(); }
	jni::ref<java::lang::String> getPresentationName() { return call_method<"getPresentationName", jni::ref<java::lang::String>>(); }

protected:

	StateEdit(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_UNDO_STATEEDIT
