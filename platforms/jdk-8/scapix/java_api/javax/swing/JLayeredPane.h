// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/swing/JComponent.h>
#include <scapix/java_api/javax/accessibility/Accessible.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_JLAYEREDPANE_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_JLAYEREDPANE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing { class JLayeredPane; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::JLayeredPane>
{
	static constexpr fixed_string class_name = "javax/swing/JLayeredPane";
	using base_classes = std::tuple<scapix::java_api::javax::swing::JComponent, scapix::java_api::javax::accessibility::Accessible>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_JLAYEREDPANE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_JLAYEREDPANE)
#define SCAPIX_JAVA_API_JAVAX_SWING_JLAYEREDPANE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Component.h>
#include <scapix/java_api/java/awt/Graphics.h>
#include <scapix/java_api/java/lang/Integer.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/accessibility/AccessibleContext.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::JLayeredPane : public jni::object_base<"javax/swing/JLayeredPane",
	javax::swing::JComponent,
	javax::accessibility::Accessible>
{
public:

	static jni::ref<java::lang::Integer> DEFAULT_LAYER() { return get_static_field<"DEFAULT_LAYER", jni::ref<java::lang::Integer>>(); }
	static jni::ref<java::lang::Integer> PALETTE_LAYER() { return get_static_field<"PALETTE_LAYER", jni::ref<java::lang::Integer>>(); }
	static jni::ref<java::lang::Integer> MODAL_LAYER() { return get_static_field<"MODAL_LAYER", jni::ref<java::lang::Integer>>(); }
	static jni::ref<java::lang::Integer> POPUP_LAYER() { return get_static_field<"POPUP_LAYER", jni::ref<java::lang::Integer>>(); }
	static jni::ref<java::lang::Integer> DRAG_LAYER() { return get_static_field<"DRAG_LAYER", jni::ref<java::lang::Integer>>(); }
	static jni::ref<java::lang::Integer> FRAME_CONTENT_LAYER() { return get_static_field<"FRAME_CONTENT_LAYER", jni::ref<java::lang::Integer>>(); }
	static jni::ref<java::lang::String> LAYER_PROPERTY() { return get_static_field<"LAYER_PROPERTY", jni::ref<java::lang::String>>(); }

	static jni::ref<javax::swing::JLayeredPane> new_object() { return base_::new_object(); }
	void remove(jint p1) { return call_method<"remove", void>(p1); }
	void removeAll() { return call_method<"removeAll", void>(); }
	jboolean isOptimizedDrawingEnabled() { return call_method<"isOptimizedDrawingEnabled", jboolean>(); }
	static void putLayer(jni::ref<javax::swing::JComponent> p1, jint p2) { return call_static_method<"putLayer", void>(p1, p2); }
	static jint getLayer(jni::ref<javax::swing::JComponent> p1) { return call_static_method<"getLayer", jint>(p1); }
	static jni::ref<javax::swing::JLayeredPane> getLayeredPaneAbove(jni::ref<java::awt::Component> p1) { return call_static_method<"getLayeredPaneAbove", jni::ref<javax::swing::JLayeredPane>>(p1); }
	void setLayer(jni::ref<java::awt::Component> p1, jint p2) { return call_method<"setLayer", void>(p1, p2); }
	void setLayer(jni::ref<java::awt::Component> p1, jint p2, jint p3) { return call_method<"setLayer", void>(p1, p2, p3); }
	jint getLayer(jni::ref<java::awt::Component> p1) { return call_method<"getLayer", jint>(p1); }
	jint getIndexOf(jni::ref<java::awt::Component> p1) { return call_method<"getIndexOf", jint>(p1); }
	void moveToFront(jni::ref<java::awt::Component> p1) { return call_method<"moveToFront", void>(p1); }
	void moveToBack(jni::ref<java::awt::Component> p1) { return call_method<"moveToBack", void>(p1); }
	void setPosition(jni::ref<java::awt::Component> p1, jint p2) { return call_method<"setPosition", void>(p1, p2); }
	jint getPosition(jni::ref<java::awt::Component> p1) { return call_method<"getPosition", jint>(p1); }
	jint highestLayer() { return call_method<"highestLayer", jint>(); }
	jint lowestLayer() { return call_method<"lowestLayer", jint>(); }
	jint getComponentCountInLayer(jint p1) { return call_method<"getComponentCountInLayer", jint>(p1); }
	jni::ref<jni::array<java::awt::Component>> getComponentsInLayer(jint p1) { return call_method<"getComponentsInLayer", jni::ref<jni::array<java::awt::Component>>>(p1); }
	void paint(jni::ref<java::awt::Graphics> p1) { return call_method<"paint", void>(p1); }
	jni::ref<javax::accessibility::AccessibleContext> getAccessibleContext() { return call_method<"getAccessibleContext", jni::ref<javax::accessibility::AccessibleContext>>(); }

protected:

	JLayeredPane(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_JLAYEREDPANE
