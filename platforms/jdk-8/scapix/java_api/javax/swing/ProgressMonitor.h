// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/javax/accessibility/Accessible.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_PROGRESSMONITOR_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_PROGRESSMONITOR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing { class ProgressMonitor; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::ProgressMonitor>
{
	static constexpr fixed_string class_name = "javax/swing/ProgressMonitor";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::javax::accessibility::Accessible>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_PROGRESSMONITOR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_PROGRESSMONITOR)
#define SCAPIX_JAVA_API_JAVAX_SWING_PROGRESSMONITOR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Component.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/accessibility/AccessibleContext.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::ProgressMonitor : public jni::object_base<"javax/swing/ProgressMonitor",
	java::lang::Object,
	javax::accessibility::Accessible>
{
public:

	static jni::ref<javax::swing::ProgressMonitor> new_object(jni::ref<java::awt::Component> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::String> p3, jint p4, jint p5) { return base_::new_object(p1, p2, p3, p4, p5); }
	void setProgress(jint p1) { return call_method<"setProgress", void>(p1); }
	void close() { return call_method<"close", void>(); }
	jint getMinimum() { return call_method<"getMinimum", jint>(); }
	void setMinimum(jint p1) { return call_method<"setMinimum", void>(p1); }
	jint getMaximum() { return call_method<"getMaximum", jint>(); }
	void setMaximum(jint p1) { return call_method<"setMaximum", void>(p1); }
	jboolean isCanceled() { return call_method<"isCanceled", jboolean>(); }
	void setMillisToDecideToPopup(jint p1) { return call_method<"setMillisToDecideToPopup", void>(p1); }
	jint getMillisToDecideToPopup() { return call_method<"getMillisToDecideToPopup", jint>(); }
	void setMillisToPopup(jint p1) { return call_method<"setMillisToPopup", void>(p1); }
	jint getMillisToPopup() { return call_method<"getMillisToPopup", jint>(); }
	void setNote(jni::ref<java::lang::String> p1) { return call_method<"setNote", void>(p1); }
	jni::ref<java::lang::String> getNote() { return call_method<"getNote", jni::ref<java::lang::String>>(); }
	jni::ref<javax::accessibility::AccessibleContext> getAccessibleContext() { return call_method<"getAccessibleContext", jni::ref<javax::accessibility::AccessibleContext>>(); }

protected:

	ProgressMonitor(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_PROGRESSMONITOR
