// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/swing/JComponent.h>
#include <scapix/java_api/javax/accessibility/Accessible.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_JSPINNER_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_JSPINNER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing { class JSpinner; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::JSpinner>
{
	static constexpr fixed_string class_name = "javax/swing/JSpinner";
	using base_classes = std::tuple<scapix::java_api::javax::swing::JComponent, scapix::java_api::javax::accessibility::Accessible>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_JSPINNER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_JSPINNER)
#define SCAPIX_JAVA_API_JAVAX_SWING_JSPINNER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/accessibility/AccessibleContext.h>
#include <scapix/java_api/javax/swing/SpinnerModel.h>
#include <scapix/java_api/javax/swing/event/ChangeListener.h>
#include <scapix/java_api/javax/swing/plaf/SpinnerUI.h>
#include <scapix/java_api/javax/swing/JSpinner_DefaultEditor.h>
#include <scapix/java_api/javax/swing/JSpinner_DateEditor.h>
#include <scapix/java_api/javax/swing/JSpinner_NumberEditor.h>
#include <scapix/java_api/javax/swing/JSpinner_ListEditor.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::JSpinner : public jni::object_base<"javax/swing/JSpinner",
	javax::swing::JComponent,
	javax::accessibility::Accessible>
{
public:

	using DefaultEditor = JSpinner_DefaultEditor;
	using DateEditor = JSpinner_DateEditor;
	using NumberEditor = JSpinner_NumberEditor;
	using ListEditor = JSpinner_ListEditor;

	static jni::ref<javax::swing::JSpinner> new_object(jni::ref<javax::swing::SpinnerModel> p1) { return base_::new_object(p1); }
	static jni::ref<javax::swing::JSpinner> new_object() { return base_::new_object(); }
	jni::ref<javax::swing::plaf::SpinnerUI> getUI() { return call_method<"getUI", jni::ref<javax::swing::plaf::SpinnerUI>>(); }
	void setUI(jni::ref<javax::swing::plaf::SpinnerUI> p1) { return call_method<"setUI", void>(p1); }
	jni::ref<java::lang::String> getUIClassID() { return call_method<"getUIClassID", jni::ref<java::lang::String>>(); }
	void updateUI() { return call_method<"updateUI", void>(); }
	void setModel(jni::ref<javax::swing::SpinnerModel> p1) { return call_method<"setModel", void>(p1); }
	jni::ref<javax::swing::SpinnerModel> getModel() { return call_method<"getModel", jni::ref<javax::swing::SpinnerModel>>(); }
	jni::ref<java::lang::Object> getValue() { return call_method<"getValue", jni::ref<java::lang::Object>>(); }
	void setValue(jni::ref<java::lang::Object> p1) { return call_method<"setValue", void>(p1); }
	jni::ref<java::lang::Object> getNextValue() { return call_method<"getNextValue", jni::ref<java::lang::Object>>(); }
	void addChangeListener(jni::ref<javax::swing::event::ChangeListener> p1) { return call_method<"addChangeListener", void>(p1); }
	void removeChangeListener(jni::ref<javax::swing::event::ChangeListener> p1) { return call_method<"removeChangeListener", void>(p1); }
	jni::ref<jni::array<javax::swing::event::ChangeListener>> getChangeListeners() { return call_method<"getChangeListeners", jni::ref<jni::array<javax::swing::event::ChangeListener>>>(); }
	jni::ref<java::lang::Object> getPreviousValue() { return call_method<"getPreviousValue", jni::ref<java::lang::Object>>(); }
	void setEditor(jni::ref<javax::swing::JComponent> p1) { return call_method<"setEditor", void>(p1); }
	jni::ref<javax::swing::JComponent> getEditor() { return call_method<"getEditor", jni::ref<javax::swing::JComponent>>(); }
	void commitEdit() { return call_method<"commitEdit", void>(); }
	jni::ref<javax::accessibility::AccessibleContext> getAccessibleContext() { return call_method<"getAccessibleContext", jni::ref<javax::accessibility::AccessibleContext>>(); }

protected:

	JSpinner(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_JSPINNER
