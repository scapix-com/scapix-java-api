// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/javax/swing/DesktopManager.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_DEFAULTDESKTOPMANAGER_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_DEFAULTDESKTOPMANAGER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing { class DefaultDesktopManager; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::DefaultDesktopManager>
{
	static constexpr fixed_string class_name = "javax/swing/DefaultDesktopManager";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::javax::swing::DesktopManager, scapix::java_api::java::io::Serializable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_DEFAULTDESKTOPMANAGER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_DEFAULTDESKTOPMANAGER)
#define SCAPIX_JAVA_API_JAVAX_SWING_DEFAULTDESKTOPMANAGER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/javax/swing/JComponent.h>
#include <scapix/java_api/javax/swing/JInternalFrame.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::DefaultDesktopManager : public jni::object_base<"javax/swing/DefaultDesktopManager",
	java::lang::Object,
	javax::swing::DesktopManager,
	java::io::Serializable>
{
public:

	static jni::ref<javax::swing::DefaultDesktopManager> new_object() { return base_::new_object(); }
	void openFrame(jni::ref<javax::swing::JInternalFrame> p1) { return call_method<"openFrame", void>(p1); }
	void closeFrame(jni::ref<javax::swing::JInternalFrame> p1) { return call_method<"closeFrame", void>(p1); }
	void maximizeFrame(jni::ref<javax::swing::JInternalFrame> p1) { return call_method<"maximizeFrame", void>(p1); }
	void minimizeFrame(jni::ref<javax::swing::JInternalFrame> p1) { return call_method<"minimizeFrame", void>(p1); }
	void iconifyFrame(jni::ref<javax::swing::JInternalFrame> p1) { return call_method<"iconifyFrame", void>(p1); }
	void deiconifyFrame(jni::ref<javax::swing::JInternalFrame> p1) { return call_method<"deiconifyFrame", void>(p1); }
	void activateFrame(jni::ref<javax::swing::JInternalFrame> p1) { return call_method<"activateFrame", void>(p1); }
	void deactivateFrame(jni::ref<javax::swing::JInternalFrame> p1) { return call_method<"deactivateFrame", void>(p1); }
	void beginDraggingFrame(jni::ref<javax::swing::JComponent> p1) { return call_method<"beginDraggingFrame", void>(p1); }
	void dragFrame(jni::ref<javax::swing::JComponent> p1, jint p2, jint p3) { return call_method<"dragFrame", void>(p1, p2, p3); }
	void endDraggingFrame(jni::ref<javax::swing::JComponent> p1) { return call_method<"endDraggingFrame", void>(p1); }
	void beginResizingFrame(jni::ref<javax::swing::JComponent> p1, jint p2) { return call_method<"beginResizingFrame", void>(p1, p2); }
	void resizeFrame(jni::ref<javax::swing::JComponent> p1, jint p2, jint p3, jint p4, jint p5) { return call_method<"resizeFrame", void>(p1, p2, p3, p4, p5); }
	void endResizingFrame(jni::ref<javax::swing::JComponent> p1) { return call_method<"endResizingFrame", void>(p1); }
	void setBoundsForFrame(jni::ref<javax::swing::JComponent> p1, jint p2, jint p3, jint p4, jint p5) { return call_method<"setBoundsForFrame", void>(p1, p2, p3, p4, p5); }

protected:

	DefaultDesktopManager(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_DEFAULTDESKTOPMANAGER
