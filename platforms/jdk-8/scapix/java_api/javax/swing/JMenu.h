// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/swing/JMenuItem.h>
#include <scapix/java_api/javax/accessibility/Accessible.h>
#include <scapix/java_api/javax/swing/MenuElement.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_JMENU_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_JMENU_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing { class JMenu; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::JMenu>
{
	static constexpr fixed_string class_name = "javax/swing/JMenu";
	using base_classes = std::tuple<scapix::java_api::javax::swing::JMenuItem, scapix::java_api::javax::accessibility::Accessible, scapix::java_api::javax::swing::MenuElement>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_JMENU_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_JMENU)
#define SCAPIX_JAVA_API_JAVAX_SWING_JMENU

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Component.h>
#include <scapix/java_api/java/awt/ComponentOrientation.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/accessibility/AccessibleContext.h>
#include <scapix/java_api/javax/swing/Action.h>
#include <scapix/java_api/javax/swing/ButtonModel.h>
#include <scapix/java_api/javax/swing/JPopupMenu.h>
#include <scapix/java_api/javax/swing/KeyStroke.h>
#include <scapix/java_api/javax/swing/event/MenuListener.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::JMenu : public jni::object_base<"javax/swing/JMenu",
	javax::swing::JMenuItem,
	javax::accessibility::Accessible,
	javax::swing::MenuElement>
{
public:

	static jni::ref<javax::swing::JMenu> new_object() { return base_::new_object(); }
	static jni::ref<javax::swing::JMenu> new_object(jni::ref<java::lang::String> p1) { return base_::new_object(p1); }
	static jni::ref<javax::swing::JMenu> new_object(jni::ref<javax::swing::Action> p1) { return base_::new_object(p1); }
	static jni::ref<javax::swing::JMenu> new_object(jni::ref<java::lang::String> p1, jboolean p2) { return base_::new_object(p1, p2); }
	void updateUI() { return call_method<"updateUI", void>(); }
	jni::ref<java::lang::String> getUIClassID() { return call_method<"getUIClassID", jni::ref<java::lang::String>>(); }
	void setModel(jni::ref<javax::swing::ButtonModel> p1) { return call_method<"setModel", void>(p1); }
	jboolean isSelected() { return call_method<"isSelected", jboolean>(); }
	void setSelected(jboolean p1) { return call_method<"setSelected", void>(p1); }
	jboolean isPopupMenuVisible() { return call_method<"isPopupMenuVisible", jboolean>(); }
	void setPopupMenuVisible(jboolean p1) { return call_method<"setPopupMenuVisible", void>(p1); }
	jint getDelay() { return call_method<"getDelay", jint>(); }
	void setDelay(jint p1) { return call_method<"setDelay", void>(p1); }
	void setMenuLocation(jint p1, jint p2) { return call_method<"setMenuLocation", void>(p1, p2); }
	jni::ref<javax::swing::JMenuItem> add(jni::ref<javax::swing::JMenuItem> p1) { return call_method<"add", jni::ref<javax::swing::JMenuItem>>(p1); }
	jni::ref<java::awt::Component> add(jni::ref<java::awt::Component> p1) { return call_method<"add", jni::ref<java::awt::Component>>(p1); }
	jni::ref<java::awt::Component> add(jni::ref<java::awt::Component> p1, jint p2) { return call_method<"add", jni::ref<java::awt::Component>>(p1, p2); }
	jni::ref<javax::swing::JMenuItem> add(jni::ref<java::lang::String> p1) { return call_method<"add", jni::ref<javax::swing::JMenuItem>>(p1); }
	jni::ref<javax::swing::JMenuItem> add(jni::ref<javax::swing::Action> p1) { return call_method<"add", jni::ref<javax::swing::JMenuItem>>(p1); }
	void addSeparator() { return call_method<"addSeparator", void>(); }
	void insert(jni::ref<java::lang::String> p1, jint p2) { return call_method<"insert", void>(p1, p2); }
	jni::ref<javax::swing::JMenuItem> insert(jni::ref<javax::swing::JMenuItem> p1, jint p2) { return call_method<"insert", jni::ref<javax::swing::JMenuItem>>(p1, p2); }
	jni::ref<javax::swing::JMenuItem> insert(jni::ref<javax::swing::Action> p1, jint p2) { return call_method<"insert", jni::ref<javax::swing::JMenuItem>>(p1, p2); }
	void insertSeparator(jint p1) { return call_method<"insertSeparator", void>(p1); }
	jni::ref<javax::swing::JMenuItem> getItem(jint p1) { return call_method<"getItem", jni::ref<javax::swing::JMenuItem>>(p1); }
	jint getItemCount() { return call_method<"getItemCount", jint>(); }
	jboolean isTearOff() { return call_method<"isTearOff", jboolean>(); }
	void remove(jni::ref<javax::swing::JMenuItem> p1) { return call_method<"remove", void>(p1); }
	void remove(jint p1) { return call_method<"remove", void>(p1); }
	void remove(jni::ref<java::awt::Component> p1) { return call_method<"remove", void>(p1); }
	void removeAll() { return call_method<"removeAll", void>(); }
	jint getMenuComponentCount() { return call_method<"getMenuComponentCount", jint>(); }
	jni::ref<java::awt::Component> getMenuComponent(jint p1) { return call_method<"getMenuComponent", jni::ref<java::awt::Component>>(p1); }
	jni::ref<jni::array<java::awt::Component>> getMenuComponents() { return call_method<"getMenuComponents", jni::ref<jni::array<java::awt::Component>>>(); }
	jboolean isTopLevelMenu() { return call_method<"isTopLevelMenu", jboolean>(); }
	jboolean isMenuComponent(jni::ref<java::awt::Component> p1) { return call_method<"isMenuComponent", jboolean>(p1); }
	jni::ref<javax::swing::JPopupMenu> getPopupMenu() { return call_method<"getPopupMenu", jni::ref<javax::swing::JPopupMenu>>(); }
	void addMenuListener(jni::ref<javax::swing::event::MenuListener> p1) { return call_method<"addMenuListener", void>(p1); }
	void removeMenuListener(jni::ref<javax::swing::event::MenuListener> p1) { return call_method<"removeMenuListener", void>(p1); }
	jni::ref<jni::array<javax::swing::event::MenuListener>> getMenuListeners() { return call_method<"getMenuListeners", jni::ref<jni::array<javax::swing::event::MenuListener>>>(); }
	void menuSelectionChanged(jboolean p1) { return call_method<"menuSelectionChanged", void>(p1); }
	jni::ref<jni::array<javax::swing::MenuElement>> getSubElements() { return call_method<"getSubElements", jni::ref<jni::array<javax::swing::MenuElement>>>(); }
	jni::ref<java::awt::Component> getComponent() { return call_method<"getComponent", jni::ref<java::awt::Component>>(); }
	void applyComponentOrientation(jni::ref<java::awt::ComponentOrientation> p1) { return call_method<"applyComponentOrientation", void>(p1); }
	void setComponentOrientation(jni::ref<java::awt::ComponentOrientation> p1) { return call_method<"setComponentOrientation", void>(p1); }
	void setAccelerator(jni::ref<javax::swing::KeyStroke> p1) { return call_method<"setAccelerator", void>(p1); }
	void doClick(jint p1) { return call_method<"doClick", void>(p1); }
	jni::ref<javax::accessibility::AccessibleContext> getAccessibleContext() { return call_method<"getAccessibleContext", jni::ref<javax::accessibility::AccessibleContext>>(); }

protected:

	JMenu(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_JMENU
