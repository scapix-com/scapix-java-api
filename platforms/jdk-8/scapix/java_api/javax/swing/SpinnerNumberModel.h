// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/swing/AbstractSpinnerModel.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_SPINNERNUMBERMODEL_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_SPINNERNUMBERMODEL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing { class SpinnerNumberModel; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::SpinnerNumberModel>
{
	static constexpr fixed_string class_name = "javax/swing/SpinnerNumberModel";
	using base_classes = std::tuple<scapix::java_api::javax::swing::AbstractSpinnerModel, scapix::java_api::java::io::Serializable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_SPINNERNUMBERMODEL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_SPINNERNUMBERMODEL)
#define SCAPIX_JAVA_API_JAVAX_SWING_SPINNERNUMBERMODEL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Comparable.h>
#include <scapix/java_api/java/lang/Number.h>
#include <scapix/java_api/java/lang/Object.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::SpinnerNumberModel : public jni::object_base<"javax/swing/SpinnerNumberModel",
	javax::swing::AbstractSpinnerModel,
	java::io::Serializable>
{
public:

	static jni::ref<javax::swing::SpinnerNumberModel> new_object(jni::ref<java::lang::Number> p1, jni::ref<java::lang::Comparable> p2, jni::ref<java::lang::Comparable> p3, jni::ref<java::lang::Number> p4) { return base_::new_object(p1, p2, p3, p4); }
	static jni::ref<javax::swing::SpinnerNumberModel> new_object(jint p1, jint p2, jint p3, jint p4) { return base_::new_object(p1, p2, p3, p4); }
	static jni::ref<javax::swing::SpinnerNumberModel> new_object(jdouble p1, jdouble p2, jdouble p3, jdouble p4) { return base_::new_object(p1, p2, p3, p4); }
	static jni::ref<javax::swing::SpinnerNumberModel> new_object() { return base_::new_object(); }
	void setMinimum(jni::ref<java::lang::Comparable> p1) { return call_method<"setMinimum", void>(p1); }
	jni::ref<java::lang::Comparable> getMinimum() { return call_method<"getMinimum", jni::ref<java::lang::Comparable>>(); }
	void setMaximum(jni::ref<java::lang::Comparable> p1) { return call_method<"setMaximum", void>(p1); }
	jni::ref<java::lang::Comparable> getMaximum() { return call_method<"getMaximum", jni::ref<java::lang::Comparable>>(); }
	void setStepSize(jni::ref<java::lang::Number> p1) { return call_method<"setStepSize", void>(p1); }
	jni::ref<java::lang::Number> getStepSize() { return call_method<"getStepSize", jni::ref<java::lang::Number>>(); }
	jni::ref<java::lang::Object> getNextValue() { return call_method<"getNextValue", jni::ref<java::lang::Object>>(); }
	jni::ref<java::lang::Object> getPreviousValue() { return call_method<"getPreviousValue", jni::ref<java::lang::Object>>(); }
	jni::ref<java::lang::Number> getNumber() { return call_method<"getNumber", jni::ref<java::lang::Number>>(); }
	jni::ref<java::lang::Object> getValue() { return call_method<"getValue", jni::ref<java::lang::Object>>(); }
	void setValue(jni::ref<java::lang::Object> p1) { return call_method<"setValue", void>(p1); }

protected:

	SpinnerNumberModel(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_SPINNERNUMBERMODEL
