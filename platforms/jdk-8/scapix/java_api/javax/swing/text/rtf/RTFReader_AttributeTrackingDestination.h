// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/javax/swing/text/rtf/RTFReader_Destination.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_TEXT_RTF_RTFREADER_ATTRIBUTETRACKINGDESTINATION_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_TEXT_RTF_RTFREADER_ATTRIBUTETRACKINGDESTINATION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing::text::rtf { class RTFReader_AttributeTrackingDestination; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::text::rtf::RTFReader_AttributeTrackingDestination>
{
	static constexpr fixed_string class_name = "javax/swing/text/rtf/RTFReader$AttributeTrackingDestination";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::javax::swing::text::rtf::RTFReader_Destination>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TEXT_RTF_RTFREADER_ATTRIBUTETRACKINGDESTINATION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_TEXT_RTF_RTFREADER_ATTRIBUTETRACKINGDESTINATION)
#define SCAPIX_JAVA_API_JAVAX_SWING_TEXT_RTF_RTFREADER_ATTRIBUTETRACKINGDESTINATION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Dictionary.h>
#include <scapix/java_api/javax/swing/text/AttributeSet.h>
#include <scapix/java_api/javax/swing/text/rtf/RTFReader.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class javax::swing::text::rtf::RTFReader_AttributeTrackingDestination : public jni::object_base<"javax/swing/text/rtf/RTFReader$AttributeTrackingDestination",
	java::lang::Object,
	javax::swing::text::rtf::RTFReader_Destination>
{
public:

	static jni::ref<javax::swing::text::rtf::RTFReader_AttributeTrackingDestination> new_object(jni::ref<javax::swing::text::rtf::RTFReader> p1) { return base_::new_object(p1); }
	void handleText(jni::ref<java::lang::String> p1) { return call_method<"handleText", void>(p1); }
	void handleBinaryBlob(jni::ref<jni::array<jbyte>> p1) { return call_method<"handleBinaryBlob", void>(p1); }
	void begingroup() { return call_method<"begingroup", void>(); }
	void endgroup(jni::ref<java::util::Dictionary> p1) { return call_method<"endgroup", void>(p1); }
	void close() { return call_method<"close", void>(); }
	jboolean handleKeyword(jni::ref<java::lang::String> p1) { return call_method<"handleKeyword", jboolean>(p1); }
	jboolean handleKeyword(jni::ref<java::lang::String> p1, jint p2) { return call_method<"handleKeyword", jboolean>(p1, p2); }
	jni::ref<javax::swing::text::AttributeSet> currentSectionAttributes() { return call_method<"currentSectionAttributes", jni::ref<javax::swing::text::AttributeSet>>(); }

protected:

	RTFReader_AttributeTrackingDestination(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TEXT_RTF_RTFREADER_ATTRIBUTETRACKINGDESTINATION
