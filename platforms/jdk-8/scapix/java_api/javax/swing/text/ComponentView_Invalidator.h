// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/awt/Container.h>
#include <scapix/java_api/java/beans/PropertyChangeListener.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_TEXT_COMPONENTVIEW_INVALIDATOR_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_TEXT_COMPONENTVIEW_INVALIDATOR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing::text { class ComponentView_Invalidator; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::text::ComponentView_Invalidator>
{
	static constexpr fixed_string class_name = "javax/swing/text/ComponentView$Invalidator";
	using base_classes = std::tuple<scapix::java_api::java::awt::Container, scapix::java_api::java::beans::PropertyChangeListener>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TEXT_COMPONENTVIEW_INVALIDATOR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_TEXT_COMPONENTVIEW_INVALIDATOR)
#define SCAPIX_JAVA_API_JAVAX_SWING_TEXT_COMPONENTVIEW_INVALIDATOR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Dimension.h>
#include <scapix/java_api/java/beans/PropertyChangeEvent.h>
#include <scapix/java_api/java/util/Set.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class javax::swing::text::ComponentView_Invalidator : public jni::object_base<"javax/swing/text/ComponentView$Invalidator",
	java::awt::Container,
	java::beans::PropertyChangeListener>
{
public:

	void invalidate() { return call_method<"invalidate", void>(); }
	void doLayout() { return call_method<"doLayout", void>(); }
	void setBounds(jint p1, jint p2, jint p3, jint p4) { return call_method<"setBounds", void>(p1, p2, p3, p4); }
	void validateIfNecessary() { return call_method<"validateIfNecessary", void>(); }
	void setVisible(jboolean p1) { return call_method<"setVisible", void>(p1); }
	jboolean isShowing() { return call_method<"isShowing", jboolean>(); }
	jni::ref<java::awt::Dimension> getMinimumSize() { return call_method<"getMinimumSize", jni::ref<java::awt::Dimension>>(); }
	jni::ref<java::awt::Dimension> getPreferredSize() { return call_method<"getPreferredSize", jni::ref<java::awt::Dimension>>(); }
	jni::ref<java::awt::Dimension> getMaximumSize() { return call_method<"getMaximumSize", jni::ref<java::awt::Dimension>>(); }
	jfloat getAlignmentX() { return call_method<"getAlignmentX", jfloat>(); }
	jfloat getAlignmentY() { return call_method<"getAlignmentY", jfloat>(); }
	jni::ref<java::util::Set> getFocusTraversalKeys(jint p1) { return call_method<"getFocusTraversalKeys", jni::ref<java::util::Set>>(p1); }
	void propertyChange(jni::ref<java::beans::PropertyChangeEvent> p1) { return call_method<"propertyChange", void>(p1); }

protected:

	ComponentView_Invalidator(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TEXT_COMPONENTVIEW_INVALIDATOR
