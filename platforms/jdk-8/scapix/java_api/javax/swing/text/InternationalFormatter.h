// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/swing/text/DefaultFormatter.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_TEXT_INTERNATIONALFORMATTER_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_TEXT_INTERNATIONALFORMATTER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing::text { class InternationalFormatter; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::text::InternationalFormatter>
{
	static constexpr fixed_string class_name = "javax/swing/text/InternationalFormatter";
	using base_classes = std::tuple<scapix::java_api::javax::swing::text::DefaultFormatter>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TEXT_INTERNATIONALFORMATTER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_TEXT_INTERNATIONALFORMATTER)
#define SCAPIX_JAVA_API_JAVAX_SWING_TEXT_INTERNATIONALFORMATTER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Comparable.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/text/Format.h>
#include <scapix/java_api/java/text/Format_Field.h>
#include <scapix/java_api/javax/swing/JFormattedTextField.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::text::InternationalFormatter : public jni::object_base<"javax/swing/text/InternationalFormatter",
	javax::swing::text::DefaultFormatter>
{
public:

	static jni::ref<javax::swing::text::InternationalFormatter> new_object() { return base_::new_object(); }
	static jni::ref<javax::swing::text::InternationalFormatter> new_object(jni::ref<java::text::Format> p1) { return base_::new_object(p1); }
	void setFormat(jni::ref<java::text::Format> p1) { return call_method<"setFormat", void>(p1); }
	jni::ref<java::text::Format> getFormat() { return call_method<"getFormat", jni::ref<java::text::Format>>(); }
	void setMinimum(jni::ref<java::lang::Comparable> p1) { return call_method<"setMinimum", void>(p1); }
	jni::ref<java::lang::Comparable> getMinimum() { return call_method<"getMinimum", jni::ref<java::lang::Comparable>>(); }
	void setMaximum(jni::ref<java::lang::Comparable> p1) { return call_method<"setMaximum", void>(p1); }
	jni::ref<java::lang::Comparable> getMaximum() { return call_method<"getMaximum", jni::ref<java::lang::Comparable>>(); }
	void install(jni::ref<javax::swing::JFormattedTextField> p1) { return call_method<"install", void>(p1); }
	jni::ref<java::lang::String> valueToString(jni::ref<java::lang::Object> p1) { return call_method<"valueToString", jni::ref<java::lang::String>>(p1); }
	jni::ref<java::lang::Object> stringToValue(jni::ref<java::lang::String> p1) { return call_method<"stringToValue", jni::ref<java::lang::Object>>(p1); }
	jni::ref<jni::array<java::text::Format_Field>> getFields(jint p1) { return call_method<"getFields", jni::ref<jni::array<java::text::Format_Field>>>(p1); }
	jni::ref<java::lang::Object> clone() { return call_method<"clone", jni::ref<java::lang::Object>>(); }

protected:

	InternationalFormatter(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TEXT_INTERNATIONALFORMATTER
