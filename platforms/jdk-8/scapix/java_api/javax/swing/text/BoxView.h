// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/swing/text/CompositeView.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_TEXT_BOXVIEW_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_TEXT_BOXVIEW_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing::text { class BoxView; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::text::BoxView>
{
	static constexpr fixed_string class_name = "javax/swing/text/BoxView";
	using base_classes = std::tuple<scapix::java_api::javax::swing::text::CompositeView>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TEXT_BOXVIEW_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_TEXT_BOXVIEW)
#define SCAPIX_JAVA_API_JAVAX_SWING_TEXT_BOXVIEW

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Graphics.h>
#include <scapix/java_api/java/awt/Shape.h>
#include <scapix/java_api/javax/swing/text/Element.h>
#include <scapix/java_api/javax/swing/text/Position_Bias.h>
#include <scapix/java_api/javax/swing/text/View.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::text::BoxView : public jni::object_base<"javax/swing/text/BoxView",
	javax::swing::text::CompositeView>
{
public:

	static jni::ref<javax::swing::text::BoxView> new_object(jni::ref<javax::swing::text::Element> p1, jint p2) { return base_::new_object(p1, p2); }
	jint getAxis() { return call_method<"getAxis", jint>(); }
	void setAxis(jint p1) { return call_method<"setAxis", void>(p1); }
	void layoutChanged(jint p1) { return call_method<"layoutChanged", void>(p1); }
	void replace(jint p1, jint p2, jni::ref<jni::array<javax::swing::text::View>> p3) { return call_method<"replace", void>(p1, p2, p3); }
	void preferenceChanged(jni::ref<javax::swing::text::View> p1, jboolean p2, jboolean p3) { return call_method<"preferenceChanged", void>(p1, p2, p3); }
	jint getResizeWeight(jint p1) { return call_method<"getResizeWeight", jint>(p1); }
	void setSize(jfloat p1, jfloat p2) { return call_method<"setSize", void>(p1, p2); }
	void paint(jni::ref<java::awt::Graphics> p1, jni::ref<java::awt::Shape> p2) { return call_method<"paint", void>(p1, p2); }
	jni::ref<java::awt::Shape> getChildAllocation(jint p1, jni::ref<java::awt::Shape> p2) { return call_method<"getChildAllocation", jni::ref<java::awt::Shape>>(p1, p2); }
	jni::ref<java::awt::Shape> modelToView(jint p1, jni::ref<java::awt::Shape> p2, jni::ref<javax::swing::text::Position_Bias> p3) { return call_method<"modelToView", jni::ref<java::awt::Shape>>(p1, p2, p3); }
	jint viewToModel(jfloat p1, jfloat p2, jni::ref<java::awt::Shape> p3, jni::ref<jni::array<javax::swing::text::Position_Bias>> p4) { return call_method<"viewToModel", jint>(p1, p2, p3, p4); }
	jfloat getAlignment(jint p1) { return call_method<"getAlignment", jfloat>(p1); }
	jfloat getPreferredSpan(jint p1) { return call_method<"getPreferredSpan", jfloat>(p1); }
	jfloat getMinimumSpan(jint p1) { return call_method<"getMinimumSpan", jfloat>(p1); }
	jfloat getMaximumSpan(jint p1) { return call_method<"getMaximumSpan", jfloat>(p1); }
	jint getWidth() { return call_method<"getWidth", jint>(); }
	jint getHeight() { return call_method<"getHeight", jint>(); }

protected:

	BoxView(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TEXT_BOXVIEW
