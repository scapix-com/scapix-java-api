// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/swing/undo/CompoundEdit.h>
#include <scapix/java_api/javax/swing/event/DocumentEvent.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_TEXT_ABSTRACTDOCUMENT_DEFAULTDOCUMENTEVENT_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_TEXT_ABSTRACTDOCUMENT_DEFAULTDOCUMENTEVENT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing::text { class AbstractDocument_DefaultDocumentEvent; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::text::AbstractDocument_DefaultDocumentEvent>
{
	static constexpr fixed_string class_name = "javax/swing/text/AbstractDocument$DefaultDocumentEvent";
	using base_classes = std::tuple<scapix::java_api::javax::swing::undo::CompoundEdit, scapix::java_api::javax::swing::event::DocumentEvent>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TEXT_ABSTRACTDOCUMENT_DEFAULTDOCUMENTEVENT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_TEXT_ABSTRACTDOCUMENT_DEFAULTDOCUMENTEVENT)
#define SCAPIX_JAVA_API_JAVAX_SWING_TEXT_ABSTRACTDOCUMENT_DEFAULTDOCUMENTEVENT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/swing/event/DocumentEvent_ElementChange.h>
#include <scapix/java_api/javax/swing/event/DocumentEvent_EventType.h>
#include <scapix/java_api/javax/swing/text/AbstractDocument.h>
#include <scapix/java_api/javax/swing/text/Document.h>
#include <scapix/java_api/javax/swing/text/Element.h>
#include <scapix/java_api/javax/swing/undo/UndoableEdit.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::text::AbstractDocument_DefaultDocumentEvent : public jni::object_base<"javax/swing/text/AbstractDocument$DefaultDocumentEvent",
	javax::swing::undo::CompoundEdit,
	javax::swing::event::DocumentEvent>
{
public:

	static jni::ref<javax::swing::text::AbstractDocument_DefaultDocumentEvent> new_object(jni::ref<javax::swing::text::AbstractDocument> p1, jint p2, jint p3, jni::ref<javax::swing::event::DocumentEvent_EventType> p4) { return base_::new_object(p1, p2, p3, p4); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jboolean addEdit(jni::ref<javax::swing::undo::UndoableEdit> p1) { return call_method<"addEdit", jboolean>(p1); }
	void redo() { return call_method<"redo", void>(); }
	void undo() { return call_method<"undo", void>(); }
	jboolean isSignificant() { return call_method<"isSignificant", jboolean>(); }
	jni::ref<java::lang::String> getPresentationName() { return call_method<"getPresentationName", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getUndoPresentationName() { return call_method<"getUndoPresentationName", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getRedoPresentationName() { return call_method<"getRedoPresentationName", jni::ref<java::lang::String>>(); }
	jni::ref<javax::swing::event::DocumentEvent_EventType> getType() { return call_method<"getType", jni::ref<javax::swing::event::DocumentEvent_EventType>>(); }
	jint getOffset() { return call_method<"getOffset", jint>(); }
	jint getLength() { return call_method<"getLength", jint>(); }
	jni::ref<javax::swing::text::Document> getDocument() { return call_method<"getDocument", jni::ref<javax::swing::text::Document>>(); }
	jni::ref<javax::swing::event::DocumentEvent_ElementChange> getChange(jni::ref<javax::swing::text::Element> p1) { return call_method<"getChange", jni::ref<javax::swing::event::DocumentEvent_ElementChange>>(p1); }

protected:

	AbstractDocument_DefaultDocumentEvent(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TEXT_ABSTRACTDOCUMENT_DEFAULTDOCUMENTEVENT
