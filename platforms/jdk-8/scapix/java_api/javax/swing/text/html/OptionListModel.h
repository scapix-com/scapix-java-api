// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/swing/DefaultListModel.h>
#include <scapix/java_api/javax/swing/ListSelectionModel.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_TEXT_HTML_OPTIONLISTMODEL_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_TEXT_HTML_OPTIONLISTMODEL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing::text::html { class OptionListModel; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::text::html::OptionListModel>
{
	static constexpr fixed_string class_name = "javax/swing/text/html/OptionListModel";
	using base_classes = std::tuple<scapix::java_api::javax::swing::DefaultListModel, scapix::java_api::javax::swing::ListSelectionModel, scapix::java_api::java::io::Serializable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TEXT_HTML_OPTIONLISTMODEL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_TEXT_HTML_OPTIONLISTMODEL)
#define SCAPIX_JAVA_API_JAVAX_SWING_TEXT_HTML_OPTIONLISTMODEL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/BitSet.h>
#include <scapix/java_api/javax/swing/event/ListSelectionListener.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class javax::swing::text::html::OptionListModel : public jni::object_base<"javax/swing/text/html/OptionListModel",
	javax::swing::DefaultListModel,
	javax::swing::ListSelectionModel,
	java::io::Serializable>
{
public:

	jint getMinSelectionIndex() { return call_method<"getMinSelectionIndex", jint>(); }
	jint getMaxSelectionIndex() { return call_method<"getMaxSelectionIndex", jint>(); }
	jboolean getValueIsAdjusting() { return call_method<"getValueIsAdjusting", jboolean>(); }
	jint getSelectionMode() { return call_method<"getSelectionMode", jint>(); }
	void setSelectionMode(jint p1) { return call_method<"setSelectionMode", void>(p1); }
	jboolean isSelectedIndex(jint p1) { return call_method<"isSelectedIndex", jboolean>(p1); }
	jboolean isSelectionEmpty() { return call_method<"isSelectionEmpty", jboolean>(); }
	void addListSelectionListener(jni::ref<javax::swing::event::ListSelectionListener> p1) { return call_method<"addListSelectionListener", void>(p1); }
	void removeListSelectionListener(jni::ref<javax::swing::event::ListSelectionListener> p1) { return call_method<"removeListSelectionListener", void>(p1); }
	jni::ref<jni::array<javax::swing::event::ListSelectionListener>> getListSelectionListeners() { return call_method<"getListSelectionListeners", jni::ref<jni::array<javax::swing::event::ListSelectionListener>>>(); }
	void setLeadAnchorNotificationEnabled(jboolean p1) { return call_method<"setLeadAnchorNotificationEnabled", void>(p1); }
	jboolean isLeadAnchorNotificationEnabled() { return call_method<"isLeadAnchorNotificationEnabled", jboolean>(); }
	void clearSelection() { return call_method<"clearSelection", void>(); }
	void setSelectionInterval(jint p1, jint p2) { return call_method<"setSelectionInterval", void>(p1, p2); }
	void addSelectionInterval(jint p1, jint p2) { return call_method<"addSelectionInterval", void>(p1, p2); }
	void removeSelectionInterval(jint p1, jint p2) { return call_method<"removeSelectionInterval", void>(p1, p2); }
	void insertIndexInterval(jint p1, jint p2, jboolean p3) { return call_method<"insertIndexInterval", void>(p1, p2, p3); }
	void removeIndexInterval(jint p1, jint p2) { return call_method<"removeIndexInterval", void>(p1, p2); }
	void setValueIsAdjusting(jboolean p1) { return call_method<"setValueIsAdjusting", void>(p1); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::Object> clone() { return call_method<"clone", jni::ref<java::lang::Object>>(); }
	jint getAnchorSelectionIndex() { return call_method<"getAnchorSelectionIndex", jint>(); }
	jint getLeadSelectionIndex() { return call_method<"getLeadSelectionIndex", jint>(); }
	void setAnchorSelectionIndex(jint p1) { return call_method<"setAnchorSelectionIndex", void>(p1); }
	void setLeadSelectionIndex(jint p1) { return call_method<"setLeadSelectionIndex", void>(p1); }
	void setInitialSelection(jint p1) { return call_method<"setInitialSelection", void>(p1); }
	jni::ref<java::util::BitSet> getInitialSelection() { return call_method<"getInitialSelection", jni::ref<java::util::BitSet>>(); }

protected:

	OptionListModel(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TEXT_HTML_OPTIONLISTMODEL
