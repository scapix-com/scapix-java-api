// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/javax/swing/text/html/parser/DTDConstants.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_TEXT_HTML_PARSER_ENTITY_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_TEXT_HTML_PARSER_ENTITY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing::text::html::parser { class Entity; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::text::html::parser::Entity>
{
	static constexpr fixed_string class_name = "javax/swing/text/html/parser/Entity";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::javax::swing::text::html::parser::DTDConstants>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TEXT_HTML_PARSER_ENTITY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_TEXT_HTML_PARSER_ENTITY)
#define SCAPIX_JAVA_API_JAVAX_SWING_TEXT_HTML_PARSER_ENTITY

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::text::html::parser::Entity : public jni::object_base<"javax/swing/text/html/parser/Entity",
	java::lang::Object,
	javax::swing::text::html::parser::DTDConstants>
{
public:

	jni::ref<java::lang::String> name() { return get_field<"name", jni::ref<java::lang::String>>(); }
	void name(jni::ref<java::lang::String> v) { set_field<"name", jni::ref<java::lang::String>>(v); }
	jint type() { return get_field<"type", jint>(); }
	void type(jint v) { set_field<"type", jint>(v); }
	jni::ref<jni::array<jchar>> data() { return get_field<"data", jni::ref<jni::array<jchar>>>(); }
	void data(jni::ref<jni::array<jchar>> v) { set_field<"data", jni::ref<jni::array<jchar>>>(v); }

	static jni::ref<javax::swing::text::html::parser::Entity> new_object(jni::ref<java::lang::String> p1, jint p2, jni::ref<jni::array<jchar>> p3) { return base_::new_object(p1, p2, p3); }
	jni::ref<java::lang::String> getName() { return call_method<"getName", jni::ref<java::lang::String>>(); }
	jint getType() { return call_method<"getType", jint>(); }
	jboolean isParameter() { return call_method<"isParameter", jboolean>(); }
	jboolean isGeneral() { return call_method<"isGeneral", jboolean>(); }
	jni::ref<jni::array<jchar>> getData() { return call_method<"getData", jni::ref<jni::array<jchar>>>(); }
	jni::ref<java::lang::String> getString() { return call_method<"getString", jni::ref<java::lang::String>>(); }
	static jint name2type(jni::ref<java::lang::String> p1) { return call_static_method<"name2type", jint>(p1); }

protected:

	Entity(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TEXT_HTML_PARSER_ENTITY
