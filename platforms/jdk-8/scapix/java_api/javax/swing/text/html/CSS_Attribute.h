// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_TEXT_HTML_CSS_ATTRIBUTE_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_TEXT_HTML_CSS_ATTRIBUTE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing::text::html { class CSS_Attribute; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::text::html::CSS_Attribute>
{
	static constexpr fixed_string class_name = "javax/swing/text/html/CSS$Attribute";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TEXT_HTML_CSS_ATTRIBUTE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_TEXT_HTML_CSS_ATTRIBUTE)
#define SCAPIX_JAVA_API_JAVAX_SWING_TEXT_HTML_CSS_ATTRIBUTE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::text::html::CSS_Attribute : public jni::object_base<"javax/swing/text/html/CSS$Attribute",
	java::lang::Object>
{
public:

	static jni::ref<javax::swing::text::html::CSS_Attribute> BACKGROUND() { return get_static_field<"BACKGROUND", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> BACKGROUND_ATTACHMENT() { return get_static_field<"BACKGROUND_ATTACHMENT", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> BACKGROUND_COLOR() { return get_static_field<"BACKGROUND_COLOR", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> BACKGROUND_IMAGE() { return get_static_field<"BACKGROUND_IMAGE", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> BACKGROUND_POSITION() { return get_static_field<"BACKGROUND_POSITION", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> BACKGROUND_REPEAT() { return get_static_field<"BACKGROUND_REPEAT", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> BORDER() { return get_static_field<"BORDER", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> BORDER_BOTTOM() { return get_static_field<"BORDER_BOTTOM", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> BORDER_BOTTOM_COLOR() { return get_static_field<"BORDER_BOTTOM_COLOR", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> BORDER_BOTTOM_STYLE() { return get_static_field<"BORDER_BOTTOM_STYLE", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> BORDER_BOTTOM_WIDTH() { return get_static_field<"BORDER_BOTTOM_WIDTH", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> BORDER_COLOR() { return get_static_field<"BORDER_COLOR", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> BORDER_LEFT() { return get_static_field<"BORDER_LEFT", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> BORDER_LEFT_COLOR() { return get_static_field<"BORDER_LEFT_COLOR", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> BORDER_LEFT_STYLE() { return get_static_field<"BORDER_LEFT_STYLE", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> BORDER_LEFT_WIDTH() { return get_static_field<"BORDER_LEFT_WIDTH", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> BORDER_RIGHT() { return get_static_field<"BORDER_RIGHT", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> BORDER_RIGHT_COLOR() { return get_static_field<"BORDER_RIGHT_COLOR", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> BORDER_RIGHT_STYLE() { return get_static_field<"BORDER_RIGHT_STYLE", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> BORDER_RIGHT_WIDTH() { return get_static_field<"BORDER_RIGHT_WIDTH", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> BORDER_STYLE() { return get_static_field<"BORDER_STYLE", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> BORDER_TOP() { return get_static_field<"BORDER_TOP", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> BORDER_TOP_COLOR() { return get_static_field<"BORDER_TOP_COLOR", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> BORDER_TOP_STYLE() { return get_static_field<"BORDER_TOP_STYLE", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> BORDER_TOP_WIDTH() { return get_static_field<"BORDER_TOP_WIDTH", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> BORDER_WIDTH() { return get_static_field<"BORDER_WIDTH", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> CLEAR() { return get_static_field<"CLEAR", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> COLOR() { return get_static_field<"COLOR", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> DISPLAY() { return get_static_field<"DISPLAY", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> FLOAT() { return get_static_field<"FLOAT", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> FONT() { return get_static_field<"FONT", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> FONT_FAMILY() { return get_static_field<"FONT_FAMILY", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> FONT_SIZE() { return get_static_field<"FONT_SIZE", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> FONT_STYLE() { return get_static_field<"FONT_STYLE", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> FONT_VARIANT() { return get_static_field<"FONT_VARIANT", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> FONT_WEIGHT() { return get_static_field<"FONT_WEIGHT", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> HEIGHT() { return get_static_field<"HEIGHT", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> LETTER_SPACING() { return get_static_field<"LETTER_SPACING", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> LINE_HEIGHT() { return get_static_field<"LINE_HEIGHT", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> LIST_STYLE() { return get_static_field<"LIST_STYLE", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> LIST_STYLE_IMAGE() { return get_static_field<"LIST_STYLE_IMAGE", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> LIST_STYLE_POSITION() { return get_static_field<"LIST_STYLE_POSITION", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> LIST_STYLE_TYPE() { return get_static_field<"LIST_STYLE_TYPE", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> MARGIN() { return get_static_field<"MARGIN", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> MARGIN_BOTTOM() { return get_static_field<"MARGIN_BOTTOM", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> MARGIN_LEFT() { return get_static_field<"MARGIN_LEFT", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> MARGIN_RIGHT() { return get_static_field<"MARGIN_RIGHT", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> MARGIN_TOP() { return get_static_field<"MARGIN_TOP", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> PADDING() { return get_static_field<"PADDING", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> PADDING_BOTTOM() { return get_static_field<"PADDING_BOTTOM", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> PADDING_LEFT() { return get_static_field<"PADDING_LEFT", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> PADDING_RIGHT() { return get_static_field<"PADDING_RIGHT", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> PADDING_TOP() { return get_static_field<"PADDING_TOP", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> TEXT_ALIGN() { return get_static_field<"TEXT_ALIGN", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> TEXT_DECORATION() { return get_static_field<"TEXT_DECORATION", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> TEXT_INDENT() { return get_static_field<"TEXT_INDENT", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> TEXT_TRANSFORM() { return get_static_field<"TEXT_TRANSFORM", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> VERTICAL_ALIGN() { return get_static_field<"VERTICAL_ALIGN", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> WORD_SPACING() { return get_static_field<"WORD_SPACING", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> WHITE_SPACE() { return get_static_field<"WHITE_SPACE", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }
	static jni::ref<javax::swing::text::html::CSS_Attribute> WIDTH() { return get_static_field<"WIDTH", jni::ref<javax::swing::text::html::CSS_Attribute>>(); }

	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getDefaultValue() { return call_method<"getDefaultValue", jni::ref<java::lang::String>>(); }
	jboolean isInherited() { return call_method<"isInherited", jboolean>(); }

protected:

	CSS_Attribute(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TEXT_HTML_CSS_ATTRIBUTE
