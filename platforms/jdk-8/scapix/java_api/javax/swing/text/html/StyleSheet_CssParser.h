// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/javax/swing/text/html/CSSParser_CSSParserCallback.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_TEXT_HTML_STYLESHEET_CSSPARSER_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_TEXT_HTML_STYLESHEET_CSSPARSER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing::text::html { class StyleSheet_CssParser; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::text::html::StyleSheet_CssParser>
{
	static constexpr fixed_string class_name = "javax/swing/text/html/StyleSheet$CssParser";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::javax::swing::text::html::CSSParser_CSSParserCallback>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TEXT_HTML_STYLESHEET_CSSPARSER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_TEXT_HTML_STYLESHEET_CSSPARSER)
#define SCAPIX_JAVA_API_JAVAX_SWING_TEXT_HTML_STYLESHEET_CSSPARSER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/Reader.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/net/URL.h>
#include <scapix/java_api/javax/swing/text/AttributeSet.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class javax::swing::text::html::StyleSheet_CssParser : public jni::object_base<"javax/swing/text/html/StyleSheet$CssParser",
	java::lang::Object,
	javax::swing::text::html::CSSParser_CSSParserCallback>
{
public:

	jni::ref<javax::swing::text::AttributeSet> parseDeclaration(jni::ref<java::lang::String> p1) { return call_method<"parseDeclaration", jni::ref<javax::swing::text::AttributeSet>>(p1); }
	jni::ref<javax::swing::text::AttributeSet> parseDeclaration(jni::ref<java::io::Reader> p1) { return call_method<"parseDeclaration", jni::ref<javax::swing::text::AttributeSet>>(p1); }
	void parse(jni::ref<java::net::URL> p1, jni::ref<java::io::Reader> p2, jboolean p3, jboolean p4) { return call_method<"parse", void>(p1, p2, p3, p4); }
	void handleImport(jni::ref<java::lang::String> p1) { return call_method<"handleImport", void>(p1); }
	void handleSelector(jni::ref<java::lang::String> p1) { return call_method<"handleSelector", void>(p1); }
	void startRule() { return call_method<"startRule", void>(); }
	void handleProperty(jni::ref<java::lang::String> p1) { return call_method<"handleProperty", void>(p1); }
	void handleValue(jni::ref<java::lang::String> p1) { return call_method<"handleValue", void>(p1); }
	void endRule() { return call_method<"endRule", void>(); }

protected:

	StyleSheet_CssParser(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TEXT_HTML_STYLESHEET_CSSPARSER
