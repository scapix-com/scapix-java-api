// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/Cloneable.h>
#include <scapix/java_api/java/text/CharacterIterator.h>
#include <scapix/java_api/java/lang/CharSequence.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_TEXT_SEGMENT_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_TEXT_SEGMENT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing::text { class Segment; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::text::Segment>
{
	static constexpr fixed_string class_name = "javax/swing/text/Segment";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::lang::Cloneable, scapix::java_api::java::text::CharacterIterator, scapix::java_api::java::lang::CharSequence>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TEXT_SEGMENT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_TEXT_SEGMENT)
#define SCAPIX_JAVA_API_JAVAX_SWING_TEXT_SEGMENT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::text::Segment : public jni::object_base<"javax/swing/text/Segment",
	java::lang::Object,
	java::lang::Cloneable,
	java::text::CharacterIterator,
	java::lang::CharSequence>
{
public:

	jni::ref<jni::array<jchar>> array() { return get_field<"array", jni::ref<jni::array<jchar>>>(); }
	void array(jni::ref<jni::array<jchar>> v) { set_field<"array", jni::ref<jni::array<jchar>>>(v); }
	jint offset() { return get_field<"offset", jint>(); }
	void offset(jint v) { set_field<"offset", jint>(v); }
	jint count() { return get_field<"count", jint>(); }
	void count(jint v) { set_field<"count", jint>(v); }

	static jni::ref<javax::swing::text::Segment> new_object() { return base_::new_object(); }
	static jni::ref<javax::swing::text::Segment> new_object(jni::ref<jni::array<jchar>> p1, jint p2, jint p3) { return base_::new_object(p1, p2, p3); }
	void setPartialReturn(jboolean p1) { return call_method<"setPartialReturn", void>(p1); }
	jboolean isPartialReturn() { return call_method<"isPartialReturn", jboolean>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jchar first() { return call_method<"first", jchar>(); }
	jchar last() { return call_method<"last", jchar>(); }
	jchar current() { return call_method<"current", jchar>(); }
	jchar next() { return call_method<"next", jchar>(); }
	jchar previous() { return call_method<"previous", jchar>(); }
	jchar setIndex(jint p1) { return call_method<"setIndex", jchar>(p1); }
	jint getBeginIndex() { return call_method<"getBeginIndex", jint>(); }
	jint getEndIndex() { return call_method<"getEndIndex", jint>(); }
	jint getIndex() { return call_method<"getIndex", jint>(); }
	jchar charAt(jint p1) { return call_method<"charAt", jchar>(p1); }
	jint length() { return call_method<"length", jint>(); }
	jni::ref<java::lang::CharSequence> subSequence(jint p1, jint p2) { return call_method<"subSequence", jni::ref<java::lang::CharSequence>>(p1, p2); }
	jni::ref<java::lang::Object> clone() { return call_method<"clone", jni::ref<java::lang::Object>>(); }

protected:

	Segment(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TEXT_SEGMENT
