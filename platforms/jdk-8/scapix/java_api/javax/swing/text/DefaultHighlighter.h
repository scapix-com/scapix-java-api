// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/swing/text/LayeredHighlighter.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_TEXT_DEFAULTHIGHLIGHTER_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_TEXT_DEFAULTHIGHLIGHTER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing::text { class DefaultHighlighter; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::text::DefaultHighlighter>
{
	static constexpr fixed_string class_name = "javax/swing/text/DefaultHighlighter";
	using base_classes = std::tuple<scapix::java_api::javax::swing::text::LayeredHighlighter>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TEXT_DEFAULTHIGHLIGHTER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_TEXT_DEFAULTHIGHLIGHTER)
#define SCAPIX_JAVA_API_JAVAX_SWING_TEXT_DEFAULTHIGHLIGHTER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Graphics.h>
#include <scapix/java_api/java/awt/Shape.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/javax/swing/text/Highlighter_Highlight.h>
#include <scapix/java_api/javax/swing/text/Highlighter_HighlightPainter.h>
#include <scapix/java_api/javax/swing/text/JTextComponent.h>
#include <scapix/java_api/javax/swing/text/LayeredHighlighter_LayerPainter.h>
#include <scapix/java_api/javax/swing/text/View.h>
#include <scapix/java_api/javax/swing/text/DefaultHighlighter_DefaultHighlightPainter.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::text::DefaultHighlighter : public jni::object_base<"javax/swing/text/DefaultHighlighter",
	javax::swing::text::LayeredHighlighter>
{
public:

	using DefaultHighlightPainter = DefaultHighlighter_DefaultHighlightPainter;

	static jni::ref<javax::swing::text::LayeredHighlighter_LayerPainter> DefaultPainter() { return get_static_field<"DefaultPainter", jni::ref<javax::swing::text::LayeredHighlighter_LayerPainter>>(); }

	static jni::ref<javax::swing::text::DefaultHighlighter> new_object() { return base_::new_object(); }
	void paint(jni::ref<java::awt::Graphics> p1) { return call_method<"paint", void>(p1); }
	void install(jni::ref<javax::swing::text::JTextComponent> p1) { return call_method<"install", void>(p1); }
	void deinstall(jni::ref<javax::swing::text::JTextComponent> p1) { return call_method<"deinstall", void>(p1); }
	jni::ref<java::lang::Object> addHighlight(jint p1, jint p2, jni::ref<javax::swing::text::Highlighter_HighlightPainter> p3) { return call_method<"addHighlight", jni::ref<java::lang::Object>>(p1, p2, p3); }
	void removeHighlight(jni::ref<java::lang::Object> p1) { return call_method<"removeHighlight", void>(p1); }
	void removeAllHighlights() { return call_method<"removeAllHighlights", void>(); }
	void changeHighlight(jni::ref<java::lang::Object> p1, jint p2, jint p3) { return call_method<"changeHighlight", void>(p1, p2, p3); }
	jni::ref<jni::array<javax::swing::text::Highlighter_Highlight>> getHighlights() { return call_method<"getHighlights", jni::ref<jni::array<javax::swing::text::Highlighter_Highlight>>>(); }
	void paintLayeredHighlights(jni::ref<java::awt::Graphics> p1, jint p2, jint p3, jni::ref<java::awt::Shape> p4, jni::ref<javax::swing::text::JTextComponent> p5, jni::ref<javax::swing::text::View> p6) { return call_method<"paintLayeredHighlights", void>(p1, p2, p3, p4, p5, p6); }
	void setDrawsLayeredHighlights(jboolean p1) { return call_method<"setDrawsLayeredHighlights", void>(p1); }
	jboolean getDrawsLayeredHighlights() { return call_method<"getDrawsLayeredHighlights", jboolean>(); }

protected:

	DefaultHighlighter(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TEXT_DEFAULTHIGHLIGHTER
