// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/javax/swing/text/Keymap.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_TEXT_JTEXTCOMPONENT_DEFAULTKEYMAP_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_TEXT_JTEXTCOMPONENT_DEFAULTKEYMAP_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing::text { class JTextComponent_DefaultKeymap; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::text::JTextComponent_DefaultKeymap>
{
	static constexpr fixed_string class_name = "javax/swing/text/JTextComponent$DefaultKeymap";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::javax::swing::text::Keymap>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TEXT_JTEXTCOMPONENT_DEFAULTKEYMAP_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_TEXT_JTEXTCOMPONENT_DEFAULTKEYMAP)
#define SCAPIX_JAVA_API_JAVAX_SWING_TEXT_JTEXTCOMPONENT_DEFAULTKEYMAP

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/swing/Action.h>
#include <scapix/java_api/javax/swing/KeyStroke.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class javax::swing::text::JTextComponent_DefaultKeymap : public jni::object_base<"javax/swing/text/JTextComponent$DefaultKeymap",
	java::lang::Object,
	javax::swing::text::Keymap>
{
public:

	jni::ref<javax::swing::Action> getDefaultAction() { return call_method<"getDefaultAction", jni::ref<javax::swing::Action>>(); }
	void setDefaultAction(jni::ref<javax::swing::Action> p1) { return call_method<"setDefaultAction", void>(p1); }
	jni::ref<java::lang::String> getName() { return call_method<"getName", jni::ref<java::lang::String>>(); }
	jni::ref<javax::swing::Action> getAction(jni::ref<javax::swing::KeyStroke> p1) { return call_method<"getAction", jni::ref<javax::swing::Action>>(p1); }
	jni::ref<jni::array<javax::swing::KeyStroke>> getBoundKeyStrokes() { return call_method<"getBoundKeyStrokes", jni::ref<jni::array<javax::swing::KeyStroke>>>(); }
	jni::ref<jni::array<javax::swing::Action>> getBoundActions() { return call_method<"getBoundActions", jni::ref<jni::array<javax::swing::Action>>>(); }
	jni::ref<jni::array<javax::swing::KeyStroke>> getKeyStrokesForAction(jni::ref<javax::swing::Action> p1) { return call_method<"getKeyStrokesForAction", jni::ref<jni::array<javax::swing::KeyStroke>>>(p1); }
	jboolean isLocallyDefined(jni::ref<javax::swing::KeyStroke> p1) { return call_method<"isLocallyDefined", jboolean>(p1); }
	void addActionForKeyStroke(jni::ref<javax::swing::KeyStroke> p1, jni::ref<javax::swing::Action> p2) { return call_method<"addActionForKeyStroke", void>(p1, p2); }
	void removeKeyStrokeBinding(jni::ref<javax::swing::KeyStroke> p1) { return call_method<"removeKeyStrokeBinding", void>(p1); }
	void removeBindings() { return call_method<"removeBindings", void>(); }
	jni::ref<javax::swing::text::Keymap> getResolveParent() { return call_method<"getResolveParent", jni::ref<javax::swing::text::Keymap>>(); }
	void setResolveParent(jni::ref<javax::swing::text::Keymap> p1) { return call_method<"setResolveParent", void>(p1); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	JTextComponent_DefaultKeymap(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TEXT_JTEXTCOMPONENT_DEFAULTKEYMAP
