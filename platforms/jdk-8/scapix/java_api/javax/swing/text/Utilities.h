// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_TEXT_UTILITIES_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_TEXT_UTILITIES_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing::text { class Utilities; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::text::Utilities>
{
	static constexpr fixed_string class_name = "javax/swing/text/Utilities";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TEXT_UTILITIES_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_TEXT_UTILITIES)
#define SCAPIX_JAVA_API_JAVAX_SWING_TEXT_UTILITIES

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/FontMetrics.h>
#include <scapix/java_api/java/awt/Graphics.h>
#include <scapix/java_api/javax/swing/text/Element.h>
#include <scapix/java_api/javax/swing/text/JTextComponent.h>
#include <scapix/java_api/javax/swing/text/Segment.h>
#include <scapix/java_api/javax/swing/text/TabExpander.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::text::Utilities : public jni::object_base<"javax/swing/text/Utilities",
	java::lang::Object>
{
public:

	static jni::ref<javax::swing::text::Utilities> new_object() { return base_::new_object(); }
	static jint drawTabbedText(jni::ref<javax::swing::text::Segment> p1, jint p2, jint p3, jni::ref<java::awt::Graphics> p4, jni::ref<javax::swing::text::TabExpander> p5, jint p6) { return call_static_method<"drawTabbedText", jint>(p1, p2, p3, p4, p5, p6); }
	static jint getTabbedTextWidth(jni::ref<javax::swing::text::Segment> p1, jni::ref<java::awt::FontMetrics> p2, jint p3, jni::ref<javax::swing::text::TabExpander> p4, jint p5) { return call_static_method<"getTabbedTextWidth", jint>(p1, p2, p3, p4, p5); }
	static jint getTabbedTextOffset(jni::ref<javax::swing::text::Segment> p1, jni::ref<java::awt::FontMetrics> p2, jint p3, jint p4, jni::ref<javax::swing::text::TabExpander> p5, jint p6) { return call_static_method<"getTabbedTextOffset", jint>(p1, p2, p3, p4, p5, p6); }
	static jint getTabbedTextOffset(jni::ref<javax::swing::text::Segment> p1, jni::ref<java::awt::FontMetrics> p2, jint p3, jint p4, jni::ref<javax::swing::text::TabExpander> p5, jint p6, jboolean p7) { return call_static_method<"getTabbedTextOffset", jint>(p1, p2, p3, p4, p5, p6, p7); }
	static jint getBreakLocation(jni::ref<javax::swing::text::Segment> p1, jni::ref<java::awt::FontMetrics> p2, jint p3, jint p4, jni::ref<javax::swing::text::TabExpander> p5, jint p6) { return call_static_method<"getBreakLocation", jint>(p1, p2, p3, p4, p5, p6); }
	static jint getRowStart(jni::ref<javax::swing::text::JTextComponent> p1, jint p2) { return call_static_method<"getRowStart", jint>(p1, p2); }
	static jint getRowEnd(jni::ref<javax::swing::text::JTextComponent> p1, jint p2) { return call_static_method<"getRowEnd", jint>(p1, p2); }
	static jint getPositionAbove(jni::ref<javax::swing::text::JTextComponent> p1, jint p2, jint p3) { return call_static_method<"getPositionAbove", jint>(p1, p2, p3); }
	static jint getPositionBelow(jni::ref<javax::swing::text::JTextComponent> p1, jint p2, jint p3) { return call_static_method<"getPositionBelow", jint>(p1, p2, p3); }
	static jint getWordStart(jni::ref<javax::swing::text::JTextComponent> p1, jint p2) { return call_static_method<"getWordStart", jint>(p1, p2); }
	static jint getWordEnd(jni::ref<javax::swing::text::JTextComponent> p1, jint p2) { return call_static_method<"getWordEnd", jint>(p1, p2); }
	static jint getNextWord(jni::ref<javax::swing::text::JTextComponent> p1, jint p2) { return call_static_method<"getNextWord", jint>(p1, p2); }
	static jint getPreviousWord(jni::ref<javax::swing::text::JTextComponent> p1, jint p2) { return call_static_method<"getPreviousWord", jint>(p1, p2); }
	static jni::ref<javax::swing::text::Element> getParagraphElement(jni::ref<javax::swing::text::JTextComponent> p1, jint p2) { return call_static_method<"getParagraphElement", jni::ref<javax::swing::text::Element>>(p1, p2); }

protected:

	Utilities(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TEXT_UTILITIES
