// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/swing/text/GlyphView_GlyphPainter.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_TEXT_GLYPHPAINTER1_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_TEXT_GLYPHPAINTER1_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing::text { class GlyphPainter1; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::text::GlyphPainter1>
{
	static constexpr fixed_string class_name = "javax/swing/text/GlyphPainter1";
	using base_classes = std::tuple<scapix::java_api::javax::swing::text::GlyphView_GlyphPainter>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TEXT_GLYPHPAINTER1_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_TEXT_GLYPHPAINTER1)
#define SCAPIX_JAVA_API_JAVAX_SWING_TEXT_GLYPHPAINTER1

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Graphics.h>
#include <scapix/java_api/java/awt/Shape.h>
#include <scapix/java_api/javax/swing/text/GlyphView.h>
#include <scapix/java_api/javax/swing/text/Position_Bias.h>
#include <scapix/java_api/javax/swing/text/TabExpander.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class javax::swing::text::GlyphPainter1 : public jni::object_base<"javax/swing/text/GlyphPainter1",
	javax::swing::text::GlyphView_GlyphPainter>
{
public:

	jfloat getSpan(jni::ref<javax::swing::text::GlyphView> p1, jint p2, jint p3, jni::ref<javax::swing::text::TabExpander> p4, jfloat p5) { return call_method<"getSpan", jfloat>(p1, p2, p3, p4, p5); }
	jfloat getHeight(jni::ref<javax::swing::text::GlyphView> p1) { return call_method<"getHeight", jfloat>(p1); }
	jfloat getAscent(jni::ref<javax::swing::text::GlyphView> p1) { return call_method<"getAscent", jfloat>(p1); }
	jfloat getDescent(jni::ref<javax::swing::text::GlyphView> p1) { return call_method<"getDescent", jfloat>(p1); }
	void paint(jni::ref<javax::swing::text::GlyphView> p1, jni::ref<java::awt::Graphics> p2, jni::ref<java::awt::Shape> p3, jint p4, jint p5) { return call_method<"paint", void>(p1, p2, p3, p4, p5); }
	jni::ref<java::awt::Shape> modelToView(jni::ref<javax::swing::text::GlyphView> p1, jint p2, jni::ref<javax::swing::text::Position_Bias> p3, jni::ref<java::awt::Shape> p4) { return call_method<"modelToView", jni::ref<java::awt::Shape>>(p1, p2, p3, p4); }
	jint viewToModel(jni::ref<javax::swing::text::GlyphView> p1, jfloat p2, jfloat p3, jni::ref<java::awt::Shape> p4, jni::ref<jni::array<javax::swing::text::Position_Bias>> p5) { return call_method<"viewToModel", jint>(p1, p2, p3, p4, p5); }
	jint getBoundedPosition(jni::ref<javax::swing::text::GlyphView> p1, jint p2, jfloat p3, jfloat p4) { return call_method<"getBoundedPosition", jint>(p1, p2, p3, p4); }

protected:

	GlyphPainter1(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_TEXT_GLYPHPAINTER1
