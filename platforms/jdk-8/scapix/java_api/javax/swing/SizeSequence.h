// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_SIZESEQUENCE_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_SIZESEQUENCE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing { class SizeSequence; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::SizeSequence>
{
	static constexpr fixed_string class_name = "javax/swing/SizeSequence";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_SIZESEQUENCE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_SIZESEQUENCE)
#define SCAPIX_JAVA_API_JAVAX_SWING_SIZESEQUENCE

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::SizeSequence : public jni::object_base<"javax/swing/SizeSequence",
	java::lang::Object>
{
public:

	static jni::ref<javax::swing::SizeSequence> new_object() { return base_::new_object(); }
	static jni::ref<javax::swing::SizeSequence> new_object(jint p1) { return base_::new_object(p1); }
	static jni::ref<javax::swing::SizeSequence> new_object(jint p1, jint p2) { return base_::new_object(p1, p2); }
	static jni::ref<javax::swing::SizeSequence> new_object(jni::ref<jni::array<jint>> p1) { return base_::new_object(p1); }
	void setSizes(jni::ref<jni::array<jint>> p1) { return call_method<"setSizes", void>(p1); }
	jni::ref<jni::array<jint>> getSizes() { return call_method<"getSizes", jni::ref<jni::array<jint>>>(); }
	jint getPosition(jint p1) { return call_method<"getPosition", jint>(p1); }
	jint getIndex(jint p1) { return call_method<"getIndex", jint>(p1); }
	jint getSize(jint p1) { return call_method<"getSize", jint>(p1); }
	void setSize(jint p1, jint p2) { return call_method<"setSize", void>(p1, p2); }
	void insertEntries(jint p1, jint p2, jint p3) { return call_method<"insertEntries", void>(p1, p2, p3); }
	void removeEntries(jint p1, jint p2) { return call_method<"removeEntries", void>(p1, p2); }

protected:

	SizeSequence(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_SIZESEQUENCE
