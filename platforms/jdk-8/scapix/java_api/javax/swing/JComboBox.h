// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/swing/JComponent.h>
#include <scapix/java_api/java/awt/ItemSelectable.h>
#include <scapix/java_api/javax/swing/event/ListDataListener.h>
#include <scapix/java_api/java/awt/event/ActionListener.h>
#include <scapix/java_api/javax/accessibility/Accessible.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_JCOMBOBOX_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_JCOMBOBOX_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing { class JComboBox; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::JComboBox>
{
	static constexpr fixed_string class_name = "javax/swing/JComboBox";
	using base_classes = std::tuple<scapix::java_api::javax::swing::JComponent, scapix::java_api::java::awt::ItemSelectable, scapix::java_api::javax::swing::event::ListDataListener, scapix::java_api::java::awt::event::ActionListener, scapix::java_api::javax::accessibility::Accessible>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_JCOMBOBOX_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_JCOMBOBOX)
#define SCAPIX_JAVA_API_JAVAX_SWING_JCOMBOBOX

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/event/ActionEvent.h>
#include <scapix/java_api/java/awt/event/ItemListener.h>
#include <scapix/java_api/java/awt/event/KeyEvent.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Vector.h>
#include <scapix/java_api/javax/accessibility/AccessibleContext.h>
#include <scapix/java_api/javax/swing/Action.h>
#include <scapix/java_api/javax/swing/ComboBoxEditor.h>
#include <scapix/java_api/javax/swing/ComboBoxModel.h>
#include <scapix/java_api/javax/swing/JComboBox_KeySelectionManager.h>
#include <scapix/java_api/javax/swing/ListCellRenderer.h>
#include <scapix/java_api/javax/swing/event/ListDataEvent.h>
#include <scapix/java_api/javax/swing/event/PopupMenuListener.h>
#include <scapix/java_api/javax/swing/plaf/ComboBoxUI.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::JComboBox : public jni::object_base<"javax/swing/JComboBox",
	javax::swing::JComponent,
	java::awt::ItemSelectable,
	javax::swing::event::ListDataListener,
	java::awt::event::ActionListener,
	javax::accessibility::Accessible>
{
public:

	using KeySelectionManager = JComboBox_KeySelectionManager;

	static jni::ref<javax::swing::JComboBox> new_object(jni::ref<javax::swing::ComboBoxModel> p1) { return base_::new_object(p1); }
	static jni::ref<javax::swing::JComboBox> new_object(jni::ref<jni::array<java::lang::Object>> p1) { return base_::new_object(p1); }
	static jni::ref<javax::swing::JComboBox> new_object(jni::ref<java::util::Vector> p1) { return base_::new_object(p1); }
	static jni::ref<javax::swing::JComboBox> new_object() { return base_::new_object(); }
	void setUI(jni::ref<javax::swing::plaf::ComboBoxUI> p1) { return call_method<"setUI", void>(p1); }
	void updateUI() { return call_method<"updateUI", void>(); }
	jni::ref<java::lang::String> getUIClassID() { return call_method<"getUIClassID", jni::ref<java::lang::String>>(); }
	jni::ref<javax::swing::plaf::ComboBoxUI> getUI() { return call_method<"getUI", jni::ref<javax::swing::plaf::ComboBoxUI>>(); }
	void setModel(jni::ref<javax::swing::ComboBoxModel> p1) { return call_method<"setModel", void>(p1); }
	jni::ref<javax::swing::ComboBoxModel> getModel() { return call_method<"getModel", jni::ref<javax::swing::ComboBoxModel>>(); }
	void setLightWeightPopupEnabled(jboolean p1) { return call_method<"setLightWeightPopupEnabled", void>(p1); }
	jboolean isLightWeightPopupEnabled() { return call_method<"isLightWeightPopupEnabled", jboolean>(); }
	void setEditable(jboolean p1) { return call_method<"setEditable", void>(p1); }
	jboolean isEditable() { return call_method<"isEditable", jboolean>(); }
	void setMaximumRowCount(jint p1) { return call_method<"setMaximumRowCount", void>(p1); }
	jint getMaximumRowCount() { return call_method<"getMaximumRowCount", jint>(); }
	void setRenderer(jni::ref<javax::swing::ListCellRenderer> p1) { return call_method<"setRenderer", void>(p1); }
	jni::ref<javax::swing::ListCellRenderer> getRenderer() { return call_method<"getRenderer", jni::ref<javax::swing::ListCellRenderer>>(); }
	void setEditor(jni::ref<javax::swing::ComboBoxEditor> p1) { return call_method<"setEditor", void>(p1); }
	jni::ref<javax::swing::ComboBoxEditor> getEditor() { return call_method<"getEditor", jni::ref<javax::swing::ComboBoxEditor>>(); }
	void setSelectedItem(jni::ref<java::lang::Object> p1) { return call_method<"setSelectedItem", void>(p1); }
	jni::ref<java::lang::Object> getSelectedItem() { return call_method<"getSelectedItem", jni::ref<java::lang::Object>>(); }
	void setSelectedIndex(jint p1) { return call_method<"setSelectedIndex", void>(p1); }
	jint getSelectedIndex() { return call_method<"getSelectedIndex", jint>(); }
	jni::ref<java::lang::Object> getPrototypeDisplayValue() { return call_method<"getPrototypeDisplayValue", jni::ref<java::lang::Object>>(); }
	void setPrototypeDisplayValue(jni::ref<java::lang::Object> p1) { return call_method<"setPrototypeDisplayValue", void>(p1); }
	void addItem(jni::ref<java::lang::Object> p1) { return call_method<"addItem", void>(p1); }
	void insertItemAt(jni::ref<java::lang::Object> p1, jint p2) { return call_method<"insertItemAt", void>(p1, p2); }
	void removeItem(jni::ref<java::lang::Object> p1) { return call_method<"removeItem", void>(p1); }
	void removeItemAt(jint p1) { return call_method<"removeItemAt", void>(p1); }
	void removeAllItems() { return call_method<"removeAllItems", void>(); }
	void showPopup() { return call_method<"showPopup", void>(); }
	void hidePopup() { return call_method<"hidePopup", void>(); }
	void setPopupVisible(jboolean p1) { return call_method<"setPopupVisible", void>(p1); }
	jboolean isPopupVisible() { return call_method<"isPopupVisible", jboolean>(); }
	void addItemListener(jni::ref<java::awt::event::ItemListener> p1) { return call_method<"addItemListener", void>(p1); }
	void removeItemListener(jni::ref<java::awt::event::ItemListener> p1) { return call_method<"removeItemListener", void>(p1); }
	jni::ref<jni::array<java::awt::event::ItemListener>> getItemListeners() { return call_method<"getItemListeners", jni::ref<jni::array<java::awt::event::ItemListener>>>(); }
	void addActionListener(jni::ref<java::awt::event::ActionListener> p1) { return call_method<"addActionListener", void>(p1); }
	void removeActionListener(jni::ref<java::awt::event::ActionListener> p1) { return call_method<"removeActionListener", void>(p1); }
	jni::ref<jni::array<java::awt::event::ActionListener>> getActionListeners() { return call_method<"getActionListeners", jni::ref<jni::array<java::awt::event::ActionListener>>>(); }
	void addPopupMenuListener(jni::ref<javax::swing::event::PopupMenuListener> p1) { return call_method<"addPopupMenuListener", void>(p1); }
	void removePopupMenuListener(jni::ref<javax::swing::event::PopupMenuListener> p1) { return call_method<"removePopupMenuListener", void>(p1); }
	jni::ref<jni::array<javax::swing::event::PopupMenuListener>> getPopupMenuListeners() { return call_method<"getPopupMenuListeners", jni::ref<jni::array<javax::swing::event::PopupMenuListener>>>(); }
	void firePopupMenuWillBecomeVisible() { return call_method<"firePopupMenuWillBecomeVisible", void>(); }
	void firePopupMenuWillBecomeInvisible() { return call_method<"firePopupMenuWillBecomeInvisible", void>(); }
	void firePopupMenuCanceled() { return call_method<"firePopupMenuCanceled", void>(); }
	void setActionCommand(jni::ref<java::lang::String> p1) { return call_method<"setActionCommand", void>(p1); }
	jni::ref<java::lang::String> getActionCommand() { return call_method<"getActionCommand", jni::ref<java::lang::String>>(); }
	void setAction(jni::ref<javax::swing::Action> p1) { return call_method<"setAction", void>(p1); }
	jni::ref<javax::swing::Action> getAction() { return call_method<"getAction", jni::ref<javax::swing::Action>>(); }
	jni::ref<jni::array<java::lang::Object>> getSelectedObjects() { return call_method<"getSelectedObjects", jni::ref<jni::array<java::lang::Object>>>(); }
	void actionPerformed(jni::ref<java::awt::event::ActionEvent> p1) { return call_method<"actionPerformed", void>(p1); }
	void contentsChanged(jni::ref<javax::swing::event::ListDataEvent> p1) { return call_method<"contentsChanged", void>(p1); }
	void intervalAdded(jni::ref<javax::swing::event::ListDataEvent> p1) { return call_method<"intervalAdded", void>(p1); }
	void intervalRemoved(jni::ref<javax::swing::event::ListDataEvent> p1) { return call_method<"intervalRemoved", void>(p1); }
	jboolean selectWithKeyChar(jchar p1) { return call_method<"selectWithKeyChar", jboolean>(p1); }
	void setEnabled(jboolean p1) { return call_method<"setEnabled", void>(p1); }
	void configureEditor(jni::ref<javax::swing::ComboBoxEditor> p1, jni::ref<java::lang::Object> p2) { return call_method<"configureEditor", void>(p1, p2); }
	void processKeyEvent(jni::ref<java::awt::event::KeyEvent> p1) { return call_method<"processKeyEvent", void>(p1); }
	void setKeySelectionManager(jni::ref<javax::swing::JComboBox_KeySelectionManager> p1) { return call_method<"setKeySelectionManager", void>(p1); }
	jni::ref<javax::swing::JComboBox_KeySelectionManager> getKeySelectionManager() { return call_method<"getKeySelectionManager", jni::ref<javax::swing::JComboBox_KeySelectionManager>>(); }
	jint getItemCount() { return call_method<"getItemCount", jint>(); }
	jni::ref<java::lang::Object> getItemAt(jint p1) { return call_method<"getItemAt", jni::ref<java::lang::Object>>(p1); }
	jni::ref<javax::accessibility::AccessibleContext> getAccessibleContext() { return call_method<"getAccessibleContext", jni::ref<javax::accessibility::AccessibleContext>>(); }

protected:

	JComboBox(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_JCOMBOBOX
