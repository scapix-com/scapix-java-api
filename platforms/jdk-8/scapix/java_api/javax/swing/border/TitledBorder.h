// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/swing/border/AbstractBorder.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_BORDER_TITLEDBORDER_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_BORDER_TITLEDBORDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing::border { class TitledBorder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::border::TitledBorder>
{
	static constexpr fixed_string class_name = "javax/swing/border/TitledBorder";
	using base_classes = std::tuple<scapix::java_api::javax::swing::border::AbstractBorder>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_BORDER_TITLEDBORDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_BORDER_TITLEDBORDER)
#define SCAPIX_JAVA_API_JAVAX_SWING_BORDER_TITLEDBORDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Color.h>
#include <scapix/java_api/java/awt/Component.h>
#include <scapix/java_api/java/awt/Component_BaselineResizeBehavior.h>
#include <scapix/java_api/java/awt/Dimension.h>
#include <scapix/java_api/java/awt/Font.h>
#include <scapix/java_api/java/awt/Graphics.h>
#include <scapix/java_api/java/awt/Insets.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/swing/border/Border.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::border::TitledBorder : public jni::object_base<"javax/swing/border/TitledBorder",
	javax::swing::border::AbstractBorder>
{
public:

	static jint DEFAULT_POSITION() { return get_static_field<"DEFAULT_POSITION", jint>(); }
	static jint ABOVE_TOP() { return get_static_field<"ABOVE_TOP", jint>(); }
	static jint TOP() { return get_static_field<"TOP", jint>(); }
	static jint BELOW_TOP() { return get_static_field<"BELOW_TOP", jint>(); }
	static jint ABOVE_BOTTOM() { return get_static_field<"ABOVE_BOTTOM", jint>(); }
	static jint BOTTOM() { return get_static_field<"BOTTOM", jint>(); }
	static jint BELOW_BOTTOM() { return get_static_field<"BELOW_BOTTOM", jint>(); }
	static jint DEFAULT_JUSTIFICATION() { return get_static_field<"DEFAULT_JUSTIFICATION", jint>(); }
	static jint LEFT() { return get_static_field<"LEFT", jint>(); }
	static jint CENTER() { return get_static_field<"CENTER", jint>(); }
	static jint RIGHT() { return get_static_field<"RIGHT", jint>(); }
	static jint LEADING() { return get_static_field<"LEADING", jint>(); }
	static jint TRAILING() { return get_static_field<"TRAILING", jint>(); }

	static jni::ref<javax::swing::border::TitledBorder> new_object(jni::ref<java::lang::String> p1) { return base_::new_object(p1); }
	static jni::ref<javax::swing::border::TitledBorder> new_object(jni::ref<javax::swing::border::Border> p1) { return base_::new_object(p1); }
	static jni::ref<javax::swing::border::TitledBorder> new_object(jni::ref<javax::swing::border::Border> p1, jni::ref<java::lang::String> p2) { return base_::new_object(p1, p2); }
	static jni::ref<javax::swing::border::TitledBorder> new_object(jni::ref<javax::swing::border::Border> p1, jni::ref<java::lang::String> p2, jint p3, jint p4) { return base_::new_object(p1, p2, p3, p4); }
	static jni::ref<javax::swing::border::TitledBorder> new_object(jni::ref<javax::swing::border::Border> p1, jni::ref<java::lang::String> p2, jint p3, jint p4, jni::ref<java::awt::Font> p5) { return base_::new_object(p1, p2, p3, p4, p5); }
	static jni::ref<javax::swing::border::TitledBorder> new_object(jni::ref<javax::swing::border::Border> p1, jni::ref<java::lang::String> p2, jint p3, jint p4, jni::ref<java::awt::Font> p5, jni::ref<java::awt::Color> p6) { return base_::new_object(p1, p2, p3, p4, p5, p6); }
	void paintBorder(jni::ref<java::awt::Component> p1, jni::ref<java::awt::Graphics> p2, jint p3, jint p4, jint p5, jint p6) { return call_method<"paintBorder", void>(p1, p2, p3, p4, p5, p6); }
	jni::ref<java::awt::Insets> getBorderInsets(jni::ref<java::awt::Component> p1, jni::ref<java::awt::Insets> p2) { return call_method<"getBorderInsets", jni::ref<java::awt::Insets>>(p1, p2); }
	jboolean isBorderOpaque() { return call_method<"isBorderOpaque", jboolean>(); }
	jni::ref<java::lang::String> getTitle() { return call_method<"getTitle", jni::ref<java::lang::String>>(); }
	jni::ref<javax::swing::border::Border> getBorder() { return call_method<"getBorder", jni::ref<javax::swing::border::Border>>(); }
	jint getTitlePosition() { return call_method<"getTitlePosition", jint>(); }
	jint getTitleJustification() { return call_method<"getTitleJustification", jint>(); }
	jni::ref<java::awt::Font> getTitleFont() { return call_method<"getTitleFont", jni::ref<java::awt::Font>>(); }
	jni::ref<java::awt::Color> getTitleColor() { return call_method<"getTitleColor", jni::ref<java::awt::Color>>(); }
	void setTitle(jni::ref<java::lang::String> p1) { return call_method<"setTitle", void>(p1); }
	void setBorder(jni::ref<javax::swing::border::Border> p1) { return call_method<"setBorder", void>(p1); }
	void setTitlePosition(jint p1) { return call_method<"setTitlePosition", void>(p1); }
	void setTitleJustification(jint p1) { return call_method<"setTitleJustification", void>(p1); }
	void setTitleFont(jni::ref<java::awt::Font> p1) { return call_method<"setTitleFont", void>(p1); }
	void setTitleColor(jni::ref<java::awt::Color> p1) { return call_method<"setTitleColor", void>(p1); }
	jni::ref<java::awt::Dimension> getMinimumSize(jni::ref<java::awt::Component> p1) { return call_method<"getMinimumSize", jni::ref<java::awt::Dimension>>(p1); }
	jint getBaseline(jni::ref<java::awt::Component> p1, jint p2, jint p3) { return call_method<"getBaseline", jint>(p1, p2, p3); }
	jni::ref<java::awt::Component_BaselineResizeBehavior> getBaselineResizeBehavior(jni::ref<java::awt::Component> p1) { return call_method<"getBaselineResizeBehavior", jni::ref<java::awt::Component_BaselineResizeBehavior>>(p1); }

protected:

	TitledBorder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_BORDER_TITLEDBORDER
