// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/swing/border/AbstractBorder.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_BORDER_LINEBORDER_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_BORDER_LINEBORDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing::border { class LineBorder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::border::LineBorder>
{
	static constexpr fixed_string class_name = "javax/swing/border/LineBorder";
	using base_classes = std::tuple<scapix::java_api::javax::swing::border::AbstractBorder>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_BORDER_LINEBORDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_BORDER_LINEBORDER)
#define SCAPIX_JAVA_API_JAVAX_SWING_BORDER_LINEBORDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Color.h>
#include <scapix/java_api/java/awt/Component.h>
#include <scapix/java_api/java/awt/Graphics.h>
#include <scapix/java_api/java/awt/Insets.h>
#include <scapix/java_api/javax/swing/border/Border.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::border::LineBorder : public jni::object_base<"javax/swing/border/LineBorder",
	javax::swing::border::AbstractBorder>
{
public:

	static jni::ref<javax::swing::border::Border> createBlackLineBorder() { return call_static_method<"createBlackLineBorder", jni::ref<javax::swing::border::Border>>(); }
	static jni::ref<javax::swing::border::Border> createGrayLineBorder() { return call_static_method<"createGrayLineBorder", jni::ref<javax::swing::border::Border>>(); }
	static jni::ref<javax::swing::border::LineBorder> new_object(jni::ref<java::awt::Color> p1) { return base_::new_object(p1); }
	static jni::ref<javax::swing::border::LineBorder> new_object(jni::ref<java::awt::Color> p1, jint p2) { return base_::new_object(p1, p2); }
	static jni::ref<javax::swing::border::LineBorder> new_object(jni::ref<java::awt::Color> p1, jint p2, jboolean p3) { return base_::new_object(p1, p2, p3); }
	void paintBorder(jni::ref<java::awt::Component> p1, jni::ref<java::awt::Graphics> p2, jint p3, jint p4, jint p5, jint p6) { return call_method<"paintBorder", void>(p1, p2, p3, p4, p5, p6); }
	jni::ref<java::awt::Insets> getBorderInsets(jni::ref<java::awt::Component> p1, jni::ref<java::awt::Insets> p2) { return call_method<"getBorderInsets", jni::ref<java::awt::Insets>>(p1, p2); }
	jni::ref<java::awt::Color> getLineColor() { return call_method<"getLineColor", jni::ref<java::awt::Color>>(); }
	jint getThickness() { return call_method<"getThickness", jint>(); }
	jboolean getRoundedCorners() { return call_method<"getRoundedCorners", jboolean>(); }
	jboolean isBorderOpaque() { return call_method<"isBorderOpaque", jboolean>(); }

protected:

	LineBorder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_BORDER_LINEBORDER
