// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SWING_SIZEREQUIREMENTS_FWD
#define SCAPIX_JAVA_API_JAVAX_SWING_SIZEREQUIREMENTS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::swing { class SizeRequirements; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::swing::SizeRequirements>
{
	static constexpr fixed_string class_name = "javax/swing/SizeRequirements";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::io::Serializable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_SIZEREQUIREMENTS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SWING_SIZEREQUIREMENTS)
#define SCAPIX_JAVA_API_JAVAX_SWING_SIZEREQUIREMENTS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::swing::SizeRequirements : public jni::object_base<"javax/swing/SizeRequirements",
	java::lang::Object,
	java::io::Serializable>
{
public:

	jint minimum() { return get_field<"minimum", jint>(); }
	void minimum(jint v) { set_field<"minimum", jint>(v); }
	jint preferred() { return get_field<"preferred", jint>(); }
	void preferred(jint v) { set_field<"preferred", jint>(v); }
	jint maximum() { return get_field<"maximum", jint>(); }
	void maximum(jint v) { set_field<"maximum", jint>(v); }
	jfloat alignment() { return get_field<"alignment", jfloat>(); }
	void alignment(jfloat v) { set_field<"alignment", jfloat>(v); }

	static jni::ref<javax::swing::SizeRequirements> new_object() { return base_::new_object(); }
	static jni::ref<javax::swing::SizeRequirements> new_object(jint p1, jint p2, jint p3, jfloat p4) { return base_::new_object(p1, p2, p3, p4); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	static jni::ref<javax::swing::SizeRequirements> getTiledSizeRequirements(jni::ref<jni::array<javax::swing::SizeRequirements>> p1) { return call_static_method<"getTiledSizeRequirements", jni::ref<javax::swing::SizeRequirements>>(p1); }
	static jni::ref<javax::swing::SizeRequirements> getAlignedSizeRequirements(jni::ref<jni::array<javax::swing::SizeRequirements>> p1) { return call_static_method<"getAlignedSizeRequirements", jni::ref<javax::swing::SizeRequirements>>(p1); }
	static void calculateTiledPositions(jint p1, jni::ref<javax::swing::SizeRequirements> p2, jni::ref<jni::array<javax::swing::SizeRequirements>> p3, jni::ref<jni::array<jint>> p4, jni::ref<jni::array<jint>> p5) { return call_static_method<"calculateTiledPositions", void>(p1, p2, p3, p4, p5); }
	static void calculateTiledPositions(jint p1, jni::ref<javax::swing::SizeRequirements> p2, jni::ref<jni::array<javax::swing::SizeRequirements>> p3, jni::ref<jni::array<jint>> p4, jni::ref<jni::array<jint>> p5, jboolean p6) { return call_static_method<"calculateTiledPositions", void>(p1, p2, p3, p4, p5, p6); }
	static void calculateAlignedPositions(jint p1, jni::ref<javax::swing::SizeRequirements> p2, jni::ref<jni::array<javax::swing::SizeRequirements>> p3, jni::ref<jni::array<jint>> p4, jni::ref<jni::array<jint>> p5) { return call_static_method<"calculateAlignedPositions", void>(p1, p2, p3, p4, p5); }
	static void calculateAlignedPositions(jint p1, jni::ref<javax::swing::SizeRequirements> p2, jni::ref<jni::array<javax::swing::SizeRequirements>> p3, jni::ref<jni::array<jint>> p4, jni::ref<jni::array<jint>> p5, jboolean p6) { return call_static_method<"calculateAlignedPositions", void>(p1, p2, p3, p4, p5, p6); }
	static jni::ref<jni::array<jint>> adjustSizes(jint p1, jni::ref<jni::array<javax::swing::SizeRequirements>> p2) { return call_static_method<"adjustSizes", jni::ref<jni::array<jint>>>(p1, p2); }

protected:

	SizeRequirements(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SWING_SIZEREQUIREMENTS
