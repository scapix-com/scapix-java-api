// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/javax/accessibility/AccessibleTable.h>

#ifndef SCAPIX_JAVA_API_JAVAX_ACCESSIBILITY_ACCESSIBLEEXTENDEDTABLE_FWD
#define SCAPIX_JAVA_API_JAVAX_ACCESSIBILITY_ACCESSIBLEEXTENDEDTABLE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::accessibility { class AccessibleExtendedTable; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::accessibility::AccessibleExtendedTable>
{
	static constexpr fixed_string class_name = "javax/accessibility/AccessibleExtendedTable";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::javax::accessibility::AccessibleTable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_ACCESSIBILITY_ACCESSIBLEEXTENDEDTABLE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_ACCESSIBILITY_ACCESSIBLEEXTENDEDTABLE)
#define SCAPIX_JAVA_API_JAVAX_ACCESSIBILITY_ACCESSIBLEEXTENDEDTABLE

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::accessibility::AccessibleExtendedTable : public jni::object_base<"javax/accessibility/AccessibleExtendedTable",
	java::lang::Object,
	javax::accessibility::AccessibleTable>
{
public:

	jint getAccessibleRow(jint p1) { return call_method<"getAccessibleRow", jint>(p1); }
	jint getAccessibleColumn(jint p1) { return call_method<"getAccessibleColumn", jint>(p1); }
	jint getAccessibleIndex(jint p1, jint p2) { return call_method<"getAccessibleIndex", jint>(p1, p2); }

protected:

	AccessibleExtendedTable(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_ACCESSIBILITY_ACCESSIBLEEXTENDEDTABLE
