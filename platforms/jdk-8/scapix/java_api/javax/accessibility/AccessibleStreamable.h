// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_ACCESSIBILITY_ACCESSIBLESTREAMABLE_FWD
#define SCAPIX_JAVA_API_JAVAX_ACCESSIBILITY_ACCESSIBLESTREAMABLE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::accessibility { class AccessibleStreamable; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::accessibility::AccessibleStreamable>
{
	static constexpr fixed_string class_name = "javax/accessibility/AccessibleStreamable";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_ACCESSIBILITY_ACCESSIBLESTREAMABLE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_ACCESSIBILITY_ACCESSIBLESTREAMABLE)
#define SCAPIX_JAVA_API_JAVAX_ACCESSIBILITY_ACCESSIBLESTREAMABLE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/datatransfer/DataFlavor.h>
#include <scapix/java_api/java/io/InputStream.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::accessibility::AccessibleStreamable : public jni::object_base<"javax/accessibility/AccessibleStreamable",
	java::lang::Object>
{
public:

	jni::ref<jni::array<java::awt::datatransfer::DataFlavor>> getMimeTypes() { return call_method<"getMimeTypes", jni::ref<jni::array<java::awt::datatransfer::DataFlavor>>>(); }
	jni::ref<java::io::InputStream> getStream(jni::ref<java::awt::datatransfer::DataFlavor> p1) { return call_method<"getStream", jni::ref<java::io::InputStream>>(p1); }

protected:

	AccessibleStreamable(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_ACCESSIBILITY_ACCESSIBLESTREAMABLE
