// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_ACCESSIBILITY_ACCESSIBLETABLE_FWD
#define SCAPIX_JAVA_API_JAVAX_ACCESSIBILITY_ACCESSIBLETABLE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::accessibility { class AccessibleTable; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::accessibility::AccessibleTable>
{
	static constexpr fixed_string class_name = "javax/accessibility/AccessibleTable";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_ACCESSIBILITY_ACCESSIBLETABLE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_ACCESSIBILITY_ACCESSIBLETABLE)
#define SCAPIX_JAVA_API_JAVAX_ACCESSIBILITY_ACCESSIBLETABLE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/javax/accessibility/Accessible.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::accessibility::AccessibleTable : public jni::object_base<"javax/accessibility/AccessibleTable",
	java::lang::Object>
{
public:

	jni::ref<javax::accessibility::Accessible> getAccessibleCaption() { return call_method<"getAccessibleCaption", jni::ref<javax::accessibility::Accessible>>(); }
	void setAccessibleCaption(jni::ref<javax::accessibility::Accessible> p1) { return call_method<"setAccessibleCaption", void>(p1); }
	jni::ref<javax::accessibility::Accessible> getAccessibleSummary() { return call_method<"getAccessibleSummary", jni::ref<javax::accessibility::Accessible>>(); }
	void setAccessibleSummary(jni::ref<javax::accessibility::Accessible> p1) { return call_method<"setAccessibleSummary", void>(p1); }
	jint getAccessibleRowCount() { return call_method<"getAccessibleRowCount", jint>(); }
	jint getAccessibleColumnCount() { return call_method<"getAccessibleColumnCount", jint>(); }
	jni::ref<javax::accessibility::Accessible> getAccessibleAt(jint p1, jint p2) { return call_method<"getAccessibleAt", jni::ref<javax::accessibility::Accessible>>(p1, p2); }
	jint getAccessibleRowExtentAt(jint p1, jint p2) { return call_method<"getAccessibleRowExtentAt", jint>(p1, p2); }
	jint getAccessibleColumnExtentAt(jint p1, jint p2) { return call_method<"getAccessibleColumnExtentAt", jint>(p1, p2); }
	jni::ref<javax::accessibility::AccessibleTable> getAccessibleRowHeader() { return call_method<"getAccessibleRowHeader", jni::ref<javax::accessibility::AccessibleTable>>(); }
	void setAccessibleRowHeader(jni::ref<javax::accessibility::AccessibleTable> p1) { return call_method<"setAccessibleRowHeader", void>(p1); }
	jni::ref<javax::accessibility::AccessibleTable> getAccessibleColumnHeader() { return call_method<"getAccessibleColumnHeader", jni::ref<javax::accessibility::AccessibleTable>>(); }
	void setAccessibleColumnHeader(jni::ref<javax::accessibility::AccessibleTable> p1) { return call_method<"setAccessibleColumnHeader", void>(p1); }
	jni::ref<javax::accessibility::Accessible> getAccessibleRowDescription(jint p1) { return call_method<"getAccessibleRowDescription", jni::ref<javax::accessibility::Accessible>>(p1); }
	void setAccessibleRowDescription(jint p1, jni::ref<javax::accessibility::Accessible> p2) { return call_method<"setAccessibleRowDescription", void>(p1, p2); }
	jni::ref<javax::accessibility::Accessible> getAccessibleColumnDescription(jint p1) { return call_method<"getAccessibleColumnDescription", jni::ref<javax::accessibility::Accessible>>(p1); }
	void setAccessibleColumnDescription(jint p1, jni::ref<javax::accessibility::Accessible> p2) { return call_method<"setAccessibleColumnDescription", void>(p1, p2); }
	jboolean isAccessibleSelected(jint p1, jint p2) { return call_method<"isAccessibleSelected", jboolean>(p1, p2); }
	jboolean isAccessibleRowSelected(jint p1) { return call_method<"isAccessibleRowSelected", jboolean>(p1); }
	jboolean isAccessibleColumnSelected(jint p1) { return call_method<"isAccessibleColumnSelected", jboolean>(p1); }
	jni::ref<jni::array<jint>> getSelectedAccessibleRows() { return call_method<"getSelectedAccessibleRows", jni::ref<jni::array<jint>>>(); }
	jni::ref<jni::array<jint>> getSelectedAccessibleColumns() { return call_method<"getSelectedAccessibleColumns", jni::ref<jni::array<jint>>>(); }

protected:

	AccessibleTable(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_ACCESSIBILITY_ACCESSIBLETABLE
