// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Exception.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SCRIPT_SCRIPTEXCEPTION_FWD
#define SCAPIX_JAVA_API_JAVAX_SCRIPT_SCRIPTEXCEPTION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::script { class ScriptException; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::script::ScriptException>
{
	static constexpr fixed_string class_name = "javax/script/ScriptException";
	using base_classes = std::tuple<scapix::java_api::java::lang::Exception>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SCRIPT_SCRIPTEXCEPTION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SCRIPT_SCRIPTEXCEPTION)
#define SCAPIX_JAVA_API_JAVAX_SCRIPT_SCRIPTEXCEPTION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::script::ScriptException : public jni::object_base<"javax/script/ScriptException",
	java::lang::Exception>
{
public:

	static jni::ref<javax::script::ScriptException> new_object(jni::ref<java::lang::String> p1) { return base_::new_object(p1); }
	static jni::ref<javax::script::ScriptException> new_object(jni::ref<java::lang::Exception> p1) { return base_::new_object(p1); }
	static jni::ref<javax::script::ScriptException> new_object(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2, jint p3) { return base_::new_object(p1, p2, p3); }
	static jni::ref<javax::script::ScriptException> new_object(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2, jint p3, jint p4) { return base_::new_object(p1, p2, p3, p4); }
	jni::ref<java::lang::String> getMessage() { return call_method<"getMessage", jni::ref<java::lang::String>>(); }
	jint getLineNumber() { return call_method<"getLineNumber", jint>(); }
	jint getColumnNumber() { return call_method<"getColumnNumber", jint>(); }
	jni::ref<java::lang::String> getFileName() { return call_method<"getFileName", jni::ref<java::lang::String>>(); }

protected:

	ScriptException(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SCRIPT_SCRIPTEXCEPTION
