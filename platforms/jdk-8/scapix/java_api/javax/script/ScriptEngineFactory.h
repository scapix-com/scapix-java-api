// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SCRIPT_SCRIPTENGINEFACTORY_FWD
#define SCAPIX_JAVA_API_JAVAX_SCRIPT_SCRIPTENGINEFACTORY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::script { class ScriptEngineFactory; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::script::ScriptEngineFactory>
{
	static constexpr fixed_string class_name = "javax/script/ScriptEngineFactory";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SCRIPT_SCRIPTENGINEFACTORY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SCRIPT_SCRIPTENGINEFACTORY)
#define SCAPIX_JAVA_API_JAVAX_SCRIPT_SCRIPTENGINEFACTORY

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/javax/script/ScriptEngine.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::script::ScriptEngineFactory : public jni::object_base<"javax/script/ScriptEngineFactory",
	java::lang::Object>
{
public:

	jni::ref<java::lang::String> getEngineName() { return call_method<"getEngineName", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getEngineVersion() { return call_method<"getEngineVersion", jni::ref<java::lang::String>>(); }
	jni::ref<java::util::List> getExtensions() { return call_method<"getExtensions", jni::ref<java::util::List>>(); }
	jni::ref<java::util::List> getMimeTypes() { return call_method<"getMimeTypes", jni::ref<java::util::List>>(); }
	jni::ref<java::util::List> getNames() { return call_method<"getNames", jni::ref<java::util::List>>(); }
	jni::ref<java::lang::String> getLanguageName() { return call_method<"getLanguageName", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getLanguageVersion() { return call_method<"getLanguageVersion", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::Object> getParameter(jni::ref<java::lang::String> p1) { return call_method<"getParameter", jni::ref<java::lang::Object>>(p1); }
	jni::ref<java::lang::String> getMethodCallSyntax(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2, jni::ref<jni::array<java::lang::String>> p3) { return call_method<"getMethodCallSyntax", jni::ref<java::lang::String>>(p1, p2, p3); }
	jni::ref<java::lang::String> getOutputStatement(jni::ref<java::lang::String> p1) { return call_method<"getOutputStatement", jni::ref<java::lang::String>>(p1); }
	jni::ref<java::lang::String> getProgram(jni::ref<jni::array<java::lang::String>> p1) { return call_method<"getProgram", jni::ref<java::lang::String>>(p1); }
	jni::ref<javax::script::ScriptEngine> getScriptEngine() { return call_method<"getScriptEngine", jni::ref<javax::script::ScriptEngine>>(); }

protected:

	ScriptEngineFactory(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SCRIPT_SCRIPTENGINEFACTORY
