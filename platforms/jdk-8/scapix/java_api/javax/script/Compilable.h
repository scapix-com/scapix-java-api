// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SCRIPT_COMPILABLE_FWD
#define SCAPIX_JAVA_API_JAVAX_SCRIPT_COMPILABLE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::script { class Compilable; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::script::Compilable>
{
	static constexpr fixed_string class_name = "javax/script/Compilable";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SCRIPT_COMPILABLE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SCRIPT_COMPILABLE)
#define SCAPIX_JAVA_API_JAVAX_SCRIPT_COMPILABLE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/Reader.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/script/CompiledScript.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::script::Compilable : public jni::object_base<"javax/script/Compilable",
	java::lang::Object>
{
public:

	jni::ref<javax::script::CompiledScript> compile(jni::ref<java::lang::String> p1) { return call_method<"compile", jni::ref<javax::script::CompiledScript>>(p1); }
	jni::ref<javax::script::CompiledScript> compile(jni::ref<java::io::Reader> p1) { return call_method<"compile", jni::ref<javax::script::CompiledScript>>(p1); }

protected:

	Compilable(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SCRIPT_COMPILABLE
