// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_RMI_CORBA_VALUEHANDLER_FWD
#define SCAPIX_JAVA_API_JAVAX_RMI_CORBA_VALUEHANDLER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::rmi::CORBA { class ValueHandler; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::rmi::CORBA::ValueHandler>
{
	static constexpr fixed_string class_name = "javax/rmi/CORBA/ValueHandler";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_RMI_CORBA_VALUEHANDLER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_RMI_CORBA_VALUEHANDLER)
#define SCAPIX_JAVA_API_JAVAX_RMI_CORBA_VALUEHANDLER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/Serializable.h>
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/omg/CORBA/portable/InputStream.h>
#include <scapix/java_api/org/omg/CORBA/portable/OutputStream.h>
#include <scapix/java_api/org/omg/SendingContext/RunTime.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::rmi::CORBA::ValueHandler : public jni::object_base<"javax/rmi/CORBA/ValueHandler",
	java::lang::Object>
{
public:

	void writeValue(jni::ref<org::omg::CORBA::portable::OutputStream> p1, jni::ref<java::io::Serializable> p2) { return call_method<"writeValue", void>(p1, p2); }
	jni::ref<java::io::Serializable> readValue(jni::ref<org::omg::CORBA::portable::InputStream> p1, jint p2, jni::ref<java::lang::Class> p3, jni::ref<java::lang::String> p4, jni::ref<org::omg::SendingContext::RunTime> p5) { return call_method<"readValue", jni::ref<java::io::Serializable>>(p1, p2, p3, p4, p5); }
	jni::ref<java::lang::String> getRMIRepositoryID(jni::ref<java::lang::Class> p1) { return call_method<"getRMIRepositoryID", jni::ref<java::lang::String>>(p1); }
	jboolean isCustomMarshaled(jni::ref<java::lang::Class> p1) { return call_method<"isCustomMarshaled", jboolean>(p1); }
	jni::ref<org::omg::SendingContext::RunTime> getRunTimeCodeBase() { return call_method<"getRunTimeCodeBase", jni::ref<org::omg::SendingContext::RunTime>>(); }
	jni::ref<java::io::Serializable> writeReplace(jni::ref<java::io::Serializable> p1) { return call_method<"writeReplace", jni::ref<java::io::Serializable>>(p1); }

protected:

	ValueHandler(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_RMI_CORBA_VALUEHANDLER
