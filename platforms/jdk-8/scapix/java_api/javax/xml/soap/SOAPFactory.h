// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_XML_SOAP_SOAPFACTORY_FWD
#define SCAPIX_JAVA_API_JAVAX_XML_SOAP_SOAPFACTORY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::xml::soap { class SOAPFactory; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::xml::soap::SOAPFactory>
{
	static constexpr fixed_string class_name = "javax/xml/soap/SOAPFactory";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_XML_SOAP_SOAPFACTORY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_XML_SOAP_SOAPFACTORY)
#define SCAPIX_JAVA_API_JAVAX_XML_SOAP_SOAPFACTORY

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/xml/namespace/QName.h>
#include <scapix/java_api/javax/xml/soap/Detail.h>
#include <scapix/java_api/javax/xml/soap/Name.h>
#include <scapix/java_api/javax/xml/soap/SOAPElement.h>
#include <scapix/java_api/javax/xml/soap/SOAPFault.h>
#include <scapix/java_api/org/w3c/dom/Element.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::xml::soap::SOAPFactory : public jni::object_base<"javax/xml/soap/SOAPFactory",
	java::lang::Object>
{
public:

	static jni::ref<javax::xml::soap::SOAPFactory> new_object() { return base_::new_object(); }
	jni::ref<javax::xml::soap::SOAPElement> createElement(jni::ref<org::w3c::dom::Element> p1) { return call_method<"createElement", jni::ref<javax::xml::soap::SOAPElement>>(p1); }
	jni::ref<javax::xml::soap::SOAPElement> createElement(jni::ref<javax::xml::soap::Name> p1) { return call_method<"createElement", jni::ref<javax::xml::soap::SOAPElement>>(p1); }
	jni::ref<javax::xml::soap::SOAPElement> createElement(jni::ref<javax::xml::namespace_::QName> p1) { return call_method<"createElement", jni::ref<javax::xml::soap::SOAPElement>>(p1); }
	jni::ref<javax::xml::soap::SOAPElement> createElement(jni::ref<java::lang::String> p1) { return call_method<"createElement", jni::ref<javax::xml::soap::SOAPElement>>(p1); }
	jni::ref<javax::xml::soap::SOAPElement> createElement(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2, jni::ref<java::lang::String> p3) { return call_method<"createElement", jni::ref<javax::xml::soap::SOAPElement>>(p1, p2, p3); }
	jni::ref<javax::xml::soap::Detail> createDetail() { return call_method<"createDetail", jni::ref<javax::xml::soap::Detail>>(); }
	jni::ref<javax::xml::soap::SOAPFault> createFault(jni::ref<java::lang::String> p1, jni::ref<javax::xml::namespace_::QName> p2) { return call_method<"createFault", jni::ref<javax::xml::soap::SOAPFault>>(p1, p2); }
	jni::ref<javax::xml::soap::SOAPFault> createFault() { return call_method<"createFault", jni::ref<javax::xml::soap::SOAPFault>>(); }
	jni::ref<javax::xml::soap::Name> createName(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2, jni::ref<java::lang::String> p3) { return call_method<"createName", jni::ref<javax::xml::soap::Name>>(p1, p2, p3); }
	jni::ref<javax::xml::soap::Name> createName(jni::ref<java::lang::String> p1) { return call_method<"createName", jni::ref<javax::xml::soap::Name>>(p1); }
	static jni::ref<javax::xml::soap::SOAPFactory> newInstance() { return call_static_method<"newInstance", jni::ref<javax::xml::soap::SOAPFactory>>(); }
	static jni::ref<javax::xml::soap::SOAPFactory> newInstance(jni::ref<java::lang::String> p1) { return call_static_method<"newInstance", jni::ref<javax::xml::soap::SOAPFactory>>(p1); }

protected:

	SOAPFactory(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_XML_SOAP_SOAPFACTORY
