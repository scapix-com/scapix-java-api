// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_XML_SOAP_MESSAGEFACTORY_FWD
#define SCAPIX_JAVA_API_JAVAX_XML_SOAP_MESSAGEFACTORY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::xml::soap { class MessageFactory; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::xml::soap::MessageFactory>
{
	static constexpr fixed_string class_name = "javax/xml/soap/MessageFactory";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_XML_SOAP_MESSAGEFACTORY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_XML_SOAP_MESSAGEFACTORY)
#define SCAPIX_JAVA_API_JAVAX_XML_SOAP_MESSAGEFACTORY

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/xml/soap/MimeHeaders.h>
#include <scapix/java_api/javax/xml/soap/SOAPMessage.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::xml::soap::MessageFactory : public jni::object_base<"javax/xml/soap/MessageFactory",
	java::lang::Object>
{
public:

	static jni::ref<javax::xml::soap::MessageFactory> new_object() { return base_::new_object(); }
	static jni::ref<javax::xml::soap::MessageFactory> newInstance() { return call_static_method<"newInstance", jni::ref<javax::xml::soap::MessageFactory>>(); }
	static jni::ref<javax::xml::soap::MessageFactory> newInstance(jni::ref<java::lang::String> p1) { return call_static_method<"newInstance", jni::ref<javax::xml::soap::MessageFactory>>(p1); }
	jni::ref<javax::xml::soap::SOAPMessage> createMessage() { return call_method<"createMessage", jni::ref<javax::xml::soap::SOAPMessage>>(); }
	jni::ref<javax::xml::soap::SOAPMessage> createMessage(jni::ref<javax::xml::soap::MimeHeaders> p1, jni::ref<java::io::InputStream> p2) { return call_method<"createMessage", jni::ref<javax::xml::soap::SOAPMessage>>(p1, p2); }

protected:

	MessageFactory(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_XML_SOAP_MESSAGEFACTORY
