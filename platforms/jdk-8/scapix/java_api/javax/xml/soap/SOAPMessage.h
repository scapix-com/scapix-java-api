// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_XML_SOAP_SOAPMESSAGE_FWD
#define SCAPIX_JAVA_API_JAVAX_XML_SOAP_SOAPMESSAGE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::xml::soap { class SOAPMessage; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::xml::soap::SOAPMessage>
{
	static constexpr fixed_string class_name = "javax/xml/soap/SOAPMessage";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_XML_SOAP_SOAPMESSAGE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_XML_SOAP_SOAPMESSAGE)
#define SCAPIX_JAVA_API_JAVAX_XML_SOAP_SOAPMESSAGE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/OutputStream.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Iterator.h>
#include <scapix/java_api/javax/activation/DataHandler.h>
#include <scapix/java_api/javax/xml/soap/AttachmentPart.h>
#include <scapix/java_api/javax/xml/soap/MimeHeaders.h>
#include <scapix/java_api/javax/xml/soap/SOAPBody.h>
#include <scapix/java_api/javax/xml/soap/SOAPElement.h>
#include <scapix/java_api/javax/xml/soap/SOAPHeader.h>
#include <scapix/java_api/javax/xml/soap/SOAPPart.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::xml::soap::SOAPMessage : public jni::object_base<"javax/xml/soap/SOAPMessage",
	java::lang::Object>
{
public:

	static jni::ref<java::lang::String> CHARACTER_SET_ENCODING() { return get_static_field<"CHARACTER_SET_ENCODING", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> WRITE_XML_DECLARATION() { return get_static_field<"WRITE_XML_DECLARATION", jni::ref<java::lang::String>>(); }

	static jni::ref<javax::xml::soap::SOAPMessage> new_object() { return base_::new_object(); }
	void setContentDescription(jni::ref<java::lang::String> p1) { return call_method<"setContentDescription", void>(p1); }
	jni::ref<java::lang::String> getContentDescription() { return call_method<"getContentDescription", jni::ref<java::lang::String>>(); }
	jni::ref<javax::xml::soap::SOAPPart> getSOAPPart() { return call_method<"getSOAPPart", jni::ref<javax::xml::soap::SOAPPart>>(); }
	jni::ref<javax::xml::soap::SOAPBody> getSOAPBody() { return call_method<"getSOAPBody", jni::ref<javax::xml::soap::SOAPBody>>(); }
	jni::ref<javax::xml::soap::SOAPHeader> getSOAPHeader() { return call_method<"getSOAPHeader", jni::ref<javax::xml::soap::SOAPHeader>>(); }
	void removeAllAttachments() { return call_method<"removeAllAttachments", void>(); }
	jint countAttachments() { return call_method<"countAttachments", jint>(); }
	jni::ref<java::util::Iterator> getAttachments() { return call_method<"getAttachments", jni::ref<java::util::Iterator>>(); }
	jni::ref<java::util::Iterator> getAttachments(jni::ref<javax::xml::soap::MimeHeaders> p1) { return call_method<"getAttachments", jni::ref<java::util::Iterator>>(p1); }
	void removeAttachments(jni::ref<javax::xml::soap::MimeHeaders> p1) { return call_method<"removeAttachments", void>(p1); }
	jni::ref<javax::xml::soap::AttachmentPart> getAttachment(jni::ref<javax::xml::soap::SOAPElement> p1) { return call_method<"getAttachment", jni::ref<javax::xml::soap::AttachmentPart>>(p1); }
	void addAttachmentPart(jni::ref<javax::xml::soap::AttachmentPart> p1) { return call_method<"addAttachmentPart", void>(p1); }
	jni::ref<javax::xml::soap::AttachmentPart> createAttachmentPart() { return call_method<"createAttachmentPart", jni::ref<javax::xml::soap::AttachmentPart>>(); }
	jni::ref<javax::xml::soap::AttachmentPart> createAttachmentPart(jni::ref<javax::activation::DataHandler> p1) { return call_method<"createAttachmentPart", jni::ref<javax::xml::soap::AttachmentPart>>(p1); }
	jni::ref<javax::xml::soap::MimeHeaders> getMimeHeaders() { return call_method<"getMimeHeaders", jni::ref<javax::xml::soap::MimeHeaders>>(); }
	jni::ref<javax::xml::soap::AttachmentPart> createAttachmentPart(jni::ref<java::lang::Object> p1, jni::ref<java::lang::String> p2) { return call_method<"createAttachmentPart", jni::ref<javax::xml::soap::AttachmentPart>>(p1, p2); }
	void saveChanges() { return call_method<"saveChanges", void>(); }
	jboolean saveRequired() { return call_method<"saveRequired", jboolean>(); }
	void writeTo(jni::ref<java::io::OutputStream> p1) { return call_method<"writeTo", void>(p1); }
	void setProperty(jni::ref<java::lang::String> p1, jni::ref<java::lang::Object> p2) { return call_method<"setProperty", void>(p1, p2); }
	jni::ref<java::lang::Object> getProperty(jni::ref<java::lang::String> p1) { return call_method<"getProperty", jni::ref<java::lang::Object>>(p1); }

protected:

	SOAPMessage(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_XML_SOAP_SOAPMESSAGE
