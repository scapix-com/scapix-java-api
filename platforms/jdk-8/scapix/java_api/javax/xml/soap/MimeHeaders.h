// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_XML_SOAP_MIMEHEADERS_FWD
#define SCAPIX_JAVA_API_JAVAX_XML_SOAP_MIMEHEADERS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::xml::soap { class MimeHeaders; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::xml::soap::MimeHeaders>
{
	static constexpr fixed_string class_name = "javax/xml/soap/MimeHeaders";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_XML_SOAP_MIMEHEADERS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_XML_SOAP_MIMEHEADERS)
#define SCAPIX_JAVA_API_JAVAX_XML_SOAP_MIMEHEADERS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Iterator.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::xml::soap::MimeHeaders : public jni::object_base<"javax/xml/soap/MimeHeaders",
	java::lang::Object>
{
public:

	static jni::ref<javax::xml::soap::MimeHeaders> new_object() { return base_::new_object(); }
	jni::ref<jni::array<java::lang::String>> getHeader(jni::ref<java::lang::String> p1) { return call_method<"getHeader", jni::ref<jni::array<java::lang::String>>>(p1); }
	void setHeader(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return call_method<"setHeader", void>(p1, p2); }
	void addHeader(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return call_method<"addHeader", void>(p1, p2); }
	void removeHeader(jni::ref<java::lang::String> p1) { return call_method<"removeHeader", void>(p1); }
	void removeAllHeaders() { return call_method<"removeAllHeaders", void>(); }
	jni::ref<java::util::Iterator> getAllHeaders() { return call_method<"getAllHeaders", jni::ref<java::util::Iterator>>(); }
	jni::ref<java::util::Iterator> getMatchingHeaders(jni::ref<jni::array<java::lang::String>> p1) { return call_method<"getMatchingHeaders", jni::ref<java::util::Iterator>>(p1); }
	jni::ref<java::util::Iterator> getNonMatchingHeaders(jni::ref<jni::array<java::lang::String>> p1) { return call_method<"getNonMatchingHeaders", jni::ref<java::util::Iterator>>(p1); }

protected:

	MimeHeaders(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_XML_SOAP_MIMEHEADERS
