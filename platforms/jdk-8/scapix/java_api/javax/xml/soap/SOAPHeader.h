// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/javax/xml/soap/SOAPElement.h>

#ifndef SCAPIX_JAVA_API_JAVAX_XML_SOAP_SOAPHEADER_FWD
#define SCAPIX_JAVA_API_JAVAX_XML_SOAP_SOAPHEADER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::xml::soap { class SOAPHeader; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::xml::soap::SOAPHeader>
{
	static constexpr fixed_string class_name = "javax/xml/soap/SOAPHeader";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::javax::xml::soap::SOAPElement>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_XML_SOAP_SOAPHEADER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_XML_SOAP_SOAPHEADER)
#define SCAPIX_JAVA_API_JAVAX_XML_SOAP_SOAPHEADER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Iterator.h>
#include <scapix/java_api/javax/xml/namespace/QName.h>
#include <scapix/java_api/javax/xml/soap/Name.h>
#include <scapix/java_api/javax/xml/soap/SOAPHeaderElement.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::xml::soap::SOAPHeader : public jni::object_base<"javax/xml/soap/SOAPHeader",
	java::lang::Object,
	javax::xml::soap::SOAPElement>
{
public:

	jni::ref<javax::xml::soap::SOAPHeaderElement> addHeaderElement(jni::ref<javax::xml::soap::Name> p1) { return call_method<"addHeaderElement", jni::ref<javax::xml::soap::SOAPHeaderElement>>(p1); }
	jni::ref<javax::xml::soap::SOAPHeaderElement> addHeaderElement(jni::ref<javax::xml::namespace_::QName> p1) { return call_method<"addHeaderElement", jni::ref<javax::xml::soap::SOAPHeaderElement>>(p1); }
	jni::ref<java::util::Iterator> examineMustUnderstandHeaderElements(jni::ref<java::lang::String> p1) { return call_method<"examineMustUnderstandHeaderElements", jni::ref<java::util::Iterator>>(p1); }
	jni::ref<java::util::Iterator> examineHeaderElements(jni::ref<java::lang::String> p1) { return call_method<"examineHeaderElements", jni::ref<java::util::Iterator>>(p1); }
	jni::ref<java::util::Iterator> extractHeaderElements(jni::ref<java::lang::String> p1) { return call_method<"extractHeaderElements", jni::ref<java::util::Iterator>>(p1); }
	jni::ref<javax::xml::soap::SOAPHeaderElement> addNotUnderstoodHeaderElement(jni::ref<javax::xml::namespace_::QName> p1) { return call_method<"addNotUnderstoodHeaderElement", jni::ref<javax::xml::soap::SOAPHeaderElement>>(p1); }
	jni::ref<javax::xml::soap::SOAPHeaderElement> addUpgradeHeaderElement(jni::ref<java::util::Iterator> p1) { return call_method<"addUpgradeHeaderElement", jni::ref<javax::xml::soap::SOAPHeaderElement>>(p1); }
	jni::ref<javax::xml::soap::SOAPHeaderElement> addUpgradeHeaderElement(jni::ref<jni::array<java::lang::String>> p1) { return call_method<"addUpgradeHeaderElement", jni::ref<javax::xml::soap::SOAPHeaderElement>>(p1); }
	jni::ref<javax::xml::soap::SOAPHeaderElement> addUpgradeHeaderElement(jni::ref<java::lang::String> p1) { return call_method<"addUpgradeHeaderElement", jni::ref<javax::xml::soap::SOAPHeaderElement>>(p1); }
	jni::ref<java::util::Iterator> examineAllHeaderElements() { return call_method<"examineAllHeaderElements", jni::ref<java::util::Iterator>>(); }
	jni::ref<java::util::Iterator> extractAllHeaderElements() { return call_method<"extractAllHeaderElements", jni::ref<java::util::Iterator>>(); }

protected:

	SOAPHeader(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_XML_SOAP_SOAPHEADER
