// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/javax/xml/transform/Result.h>

#ifndef SCAPIX_JAVA_API_JAVAX_XML_TRANSFORM_DOM_DOMRESULT_FWD
#define SCAPIX_JAVA_API_JAVAX_XML_TRANSFORM_DOM_DOMRESULT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::xml::transform::dom { class DOMResult; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::xml::transform::dom::DOMResult>
{
	static constexpr fixed_string class_name = "javax/xml/transform/dom/DOMResult";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::javax::xml::transform::Result>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_XML_TRANSFORM_DOM_DOMRESULT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_XML_TRANSFORM_DOM_DOMRESULT)
#define SCAPIX_JAVA_API_JAVAX_XML_TRANSFORM_DOM_DOMRESULT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/w3c/dom/Node.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::xml::transform::dom::DOMResult : public jni::object_base<"javax/xml/transform/dom/DOMResult",
	java::lang::Object,
	javax::xml::transform::Result>
{
public:

	static jni::ref<java::lang::String> FEATURE() { return get_static_field<"FEATURE", jni::ref<java::lang::String>>(); }

	static jni::ref<javax::xml::transform::dom::DOMResult> new_object() { return base_::new_object(); }
	static jni::ref<javax::xml::transform::dom::DOMResult> new_object(jni::ref<org::w3c::dom::Node> p1) { return base_::new_object(p1); }
	static jni::ref<javax::xml::transform::dom::DOMResult> new_object(jni::ref<org::w3c::dom::Node> p1, jni::ref<java::lang::String> p2) { return base_::new_object(p1, p2); }
	static jni::ref<javax::xml::transform::dom::DOMResult> new_object(jni::ref<org::w3c::dom::Node> p1, jni::ref<org::w3c::dom::Node> p2) { return base_::new_object(p1, p2); }
	static jni::ref<javax::xml::transform::dom::DOMResult> new_object(jni::ref<org::w3c::dom::Node> p1, jni::ref<org::w3c::dom::Node> p2, jni::ref<java::lang::String> p3) { return base_::new_object(p1, p2, p3); }
	void setNode(jni::ref<org::w3c::dom::Node> p1) { return call_method<"setNode", void>(p1); }
	jni::ref<org::w3c::dom::Node> getNode() { return call_method<"getNode", jni::ref<org::w3c::dom::Node>>(); }
	void setNextSibling(jni::ref<org::w3c::dom::Node> p1) { return call_method<"setNextSibling", void>(p1); }
	jni::ref<org::w3c::dom::Node> getNextSibling() { return call_method<"getNextSibling", jni::ref<org::w3c::dom::Node>>(); }
	void setSystemId(jni::ref<java::lang::String> p1) { return call_method<"setSystemId", void>(p1); }
	jni::ref<java::lang::String> getSystemId() { return call_method<"getSystemId", jni::ref<java::lang::String>>(); }

protected:

	DOMResult(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_XML_TRANSFORM_DOM_DOMRESULT
