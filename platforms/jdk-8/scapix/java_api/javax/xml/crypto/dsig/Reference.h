// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/javax/xml/crypto/URIReference.h>
#include <scapix/java_api/javax/xml/crypto/XMLStructure.h>

#ifndef SCAPIX_JAVA_API_JAVAX_XML_CRYPTO_DSIG_REFERENCE_FWD
#define SCAPIX_JAVA_API_JAVAX_XML_CRYPTO_DSIG_REFERENCE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::xml::crypto::dsig { class Reference; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::xml::crypto::dsig::Reference>
{
	static constexpr fixed_string class_name = "javax/xml/crypto/dsig/Reference";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::javax::xml::crypto::URIReference, scapix::java_api::javax::xml::crypto::XMLStructure>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_XML_CRYPTO_DSIG_REFERENCE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_XML_CRYPTO_DSIG_REFERENCE)
#define SCAPIX_JAVA_API_JAVAX_XML_CRYPTO_DSIG_REFERENCE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/javax/xml/crypto/Data.h>
#include <scapix/java_api/javax/xml/crypto/dsig/DigestMethod.h>
#include <scapix/java_api/javax/xml/crypto/dsig/XMLValidateContext.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::xml::crypto::dsig::Reference : public jni::object_base<"javax/xml/crypto/dsig/Reference",
	java::lang::Object,
	javax::xml::crypto::URIReference,
	javax::xml::crypto::XMLStructure>
{
public:

	jni::ref<java::util::List> getTransforms() { return call_method<"getTransforms", jni::ref<java::util::List>>(); }
	jni::ref<javax::xml::crypto::dsig::DigestMethod> getDigestMethod() { return call_method<"getDigestMethod", jni::ref<javax::xml::crypto::dsig::DigestMethod>>(); }
	jni::ref<java::lang::String> getId() { return call_method<"getId", jni::ref<java::lang::String>>(); }
	jni::ref<jni::array<jbyte>> getDigestValue() { return call_method<"getDigestValue", jni::ref<jni::array<jbyte>>>(); }
	jni::ref<jni::array<jbyte>> getCalculatedDigestValue() { return call_method<"getCalculatedDigestValue", jni::ref<jni::array<jbyte>>>(); }
	jboolean validate(jni::ref<javax::xml::crypto::dsig::XMLValidateContext> p1) { return call_method<"validate", jboolean>(p1); }
	jni::ref<javax::xml::crypto::Data> getDereferencedData() { return call_method<"getDereferencedData", jni::ref<javax::xml::crypto::Data>>(); }
	jni::ref<java::io::InputStream> getDigestInputStream() { return call_method<"getDigestInputStream", jni::ref<java::io::InputStream>>(); }

protected:

	Reference(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_XML_CRYPTO_DSIG_REFERENCE
