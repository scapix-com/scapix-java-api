// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/javax/xml/crypto/XMLStructure.h>

#ifndef SCAPIX_JAVA_API_JAVAX_XML_CRYPTO_DSIG_XMLSIGNATURE_FWD
#define SCAPIX_JAVA_API_JAVAX_XML_CRYPTO_DSIG_XMLSIGNATURE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::xml::crypto::dsig { class XMLSignature; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::xml::crypto::dsig::XMLSignature>
{
	static constexpr fixed_string class_name = "javax/xml/crypto/dsig/XMLSignature";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::javax::xml::crypto::XMLStructure>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_XML_CRYPTO_DSIG_XMLSIGNATURE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_XML_CRYPTO_DSIG_XMLSIGNATURE)
#define SCAPIX_JAVA_API_JAVAX_XML_CRYPTO_DSIG_XMLSIGNATURE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/javax/xml/crypto/KeySelectorResult.h>
#include <scapix/java_api/javax/xml/crypto/dsig/SignedInfo.h>
#include <scapix/java_api/javax/xml/crypto/dsig/XMLSignContext.h>
#include <scapix/java_api/javax/xml/crypto/dsig/XMLSignature_SignatureValue.h>
#include <scapix/java_api/javax/xml/crypto/dsig/XMLValidateContext.h>
#include <scapix/java_api/javax/xml/crypto/dsig/keyinfo/KeyInfo.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::xml::crypto::dsig::XMLSignature : public jni::object_base<"javax/xml/crypto/dsig/XMLSignature",
	java::lang::Object,
	javax::xml::crypto::XMLStructure>
{
public:

	using SignatureValue = XMLSignature_SignatureValue;

	static jni::ref<java::lang::String> XMLNS() { return get_static_field<"XMLNS", jni::ref<java::lang::String>>(); }

	jboolean validate(jni::ref<javax::xml::crypto::dsig::XMLValidateContext> p1) { return call_method<"validate", jboolean>(p1); }
	jni::ref<javax::xml::crypto::dsig::keyinfo::KeyInfo> getKeyInfo() { return call_method<"getKeyInfo", jni::ref<javax::xml::crypto::dsig::keyinfo::KeyInfo>>(); }
	jni::ref<javax::xml::crypto::dsig::SignedInfo> getSignedInfo() { return call_method<"getSignedInfo", jni::ref<javax::xml::crypto::dsig::SignedInfo>>(); }
	jni::ref<java::util::List> getObjects() { return call_method<"getObjects", jni::ref<java::util::List>>(); }
	jni::ref<java::lang::String> getId() { return call_method<"getId", jni::ref<java::lang::String>>(); }
	jni::ref<javax::xml::crypto::dsig::XMLSignature_SignatureValue> getSignatureValue() { return call_method<"getSignatureValue", jni::ref<javax::xml::crypto::dsig::XMLSignature_SignatureValue>>(); }
	void sign(jni::ref<javax::xml::crypto::dsig::XMLSignContext> p1) { return call_method<"sign", void>(p1); }
	jni::ref<javax::xml::crypto::KeySelectorResult> getKeySelectorResult() { return call_method<"getKeySelectorResult", jni::ref<javax::xml::crypto::KeySelectorResult>>(); }

protected:

	XMLSignature(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_XML_CRYPTO_DSIG_XMLSIGNATURE
