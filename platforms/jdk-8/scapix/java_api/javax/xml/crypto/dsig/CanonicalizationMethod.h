// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/javax/xml/crypto/dsig/Transform.h>

#ifndef SCAPIX_JAVA_API_JAVAX_XML_CRYPTO_DSIG_CANONICALIZATIONMETHOD_FWD
#define SCAPIX_JAVA_API_JAVAX_XML_CRYPTO_DSIG_CANONICALIZATIONMETHOD_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::xml::crypto::dsig { class CanonicalizationMethod; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::xml::crypto::dsig::CanonicalizationMethod>
{
	static constexpr fixed_string class_name = "javax/xml/crypto/dsig/CanonicalizationMethod";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::javax::xml::crypto::dsig::Transform>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_XML_CRYPTO_DSIG_CANONICALIZATIONMETHOD_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_XML_CRYPTO_DSIG_CANONICALIZATIONMETHOD)
#define SCAPIX_JAVA_API_JAVAX_XML_CRYPTO_DSIG_CANONICALIZATIONMETHOD

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/security/spec/AlgorithmParameterSpec.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::xml::crypto::dsig::CanonicalizationMethod : public jni::object_base<"javax/xml/crypto/dsig/CanonicalizationMethod",
	java::lang::Object,
	javax::xml::crypto::dsig::Transform>
{
public:

	static jni::ref<java::lang::String> INCLUSIVE() { return get_static_field<"INCLUSIVE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> INCLUSIVE_WITH_COMMENTS() { return get_static_field<"INCLUSIVE_WITH_COMMENTS", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> EXCLUSIVE() { return get_static_field<"EXCLUSIVE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> EXCLUSIVE_WITH_COMMENTS() { return get_static_field<"EXCLUSIVE_WITH_COMMENTS", jni::ref<java::lang::String>>(); }

	jni::ref<java::security::spec::AlgorithmParameterSpec> getParameterSpec() { return call_method<"getParameterSpec", jni::ref<java::security::spec::AlgorithmParameterSpec>>(); }

protected:

	CanonicalizationMethod(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_XML_CRYPTO_DSIG_CANONICALIZATIONMETHOD
