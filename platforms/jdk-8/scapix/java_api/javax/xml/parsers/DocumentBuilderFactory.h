// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_XML_PARSERS_DOCUMENTBUILDERFACTORY_FWD
#define SCAPIX_JAVA_API_JAVAX_XML_PARSERS_DOCUMENTBUILDERFACTORY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::xml::parsers { class DocumentBuilderFactory; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::xml::parsers::DocumentBuilderFactory>
{
	static constexpr fixed_string class_name = "javax/xml/parsers/DocumentBuilderFactory";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_XML_PARSERS_DOCUMENTBUILDERFACTORY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_XML_PARSERS_DOCUMENTBUILDERFACTORY)
#define SCAPIX_JAVA_API_JAVAX_XML_PARSERS_DOCUMENTBUILDERFACTORY

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/ClassLoader.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/xml/parsers/DocumentBuilder.h>
#include <scapix/java_api/javax/xml/validation/Schema.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::xml::parsers::DocumentBuilderFactory : public jni::object_base<"javax/xml/parsers/DocumentBuilderFactory",
	java::lang::Object>
{
public:

	static jni::ref<javax::xml::parsers::DocumentBuilderFactory> newInstance() { return call_static_method<"newInstance", jni::ref<javax::xml::parsers::DocumentBuilderFactory>>(); }
	static jni::ref<javax::xml::parsers::DocumentBuilderFactory> newInstance(jni::ref<java::lang::String> p1, jni::ref<java::lang::ClassLoader> p2) { return call_static_method<"newInstance", jni::ref<javax::xml::parsers::DocumentBuilderFactory>>(p1, p2); }
	jni::ref<javax::xml::parsers::DocumentBuilder> newDocumentBuilder() { return call_method<"newDocumentBuilder", jni::ref<javax::xml::parsers::DocumentBuilder>>(); }
	void setNamespaceAware(jboolean p1) { return call_method<"setNamespaceAware", void>(p1); }
	void setValidating(jboolean p1) { return call_method<"setValidating", void>(p1); }
	void setIgnoringElementContentWhitespace(jboolean p1) { return call_method<"setIgnoringElementContentWhitespace", void>(p1); }
	void setExpandEntityReferences(jboolean p1) { return call_method<"setExpandEntityReferences", void>(p1); }
	void setIgnoringComments(jboolean p1) { return call_method<"setIgnoringComments", void>(p1); }
	void setCoalescing(jboolean p1) { return call_method<"setCoalescing", void>(p1); }
	jboolean isNamespaceAware() { return call_method<"isNamespaceAware", jboolean>(); }
	jboolean isValidating() { return call_method<"isValidating", jboolean>(); }
	jboolean isIgnoringElementContentWhitespace() { return call_method<"isIgnoringElementContentWhitespace", jboolean>(); }
	jboolean isExpandEntityReferences() { return call_method<"isExpandEntityReferences", jboolean>(); }
	jboolean isIgnoringComments() { return call_method<"isIgnoringComments", jboolean>(); }
	jboolean isCoalescing() { return call_method<"isCoalescing", jboolean>(); }
	void setAttribute(jni::ref<java::lang::String> p1, jni::ref<java::lang::Object> p2) { return call_method<"setAttribute", void>(p1, p2); }
	jni::ref<java::lang::Object> getAttribute(jni::ref<java::lang::String> p1) { return call_method<"getAttribute", jni::ref<java::lang::Object>>(p1); }
	void setFeature(jni::ref<java::lang::String> p1, jboolean p2) { return call_method<"setFeature", void>(p1, p2); }
	jboolean getFeature(jni::ref<java::lang::String> p1) { return call_method<"getFeature", jboolean>(p1); }
	jni::ref<javax::xml::validation::Schema> getSchema() { return call_method<"getSchema", jni::ref<javax::xml::validation::Schema>>(); }
	void setSchema(jni::ref<javax::xml::validation::Schema> p1) { return call_method<"setSchema", void>(p1); }
	void setXIncludeAware(jboolean p1) { return call_method<"setXIncludeAware", void>(p1); }
	jboolean isXIncludeAware() { return call_method<"isXIncludeAware", jboolean>(); }

protected:

	DocumentBuilderFactory(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_XML_PARSERS_DOCUMENTBUILDERFACTORY
