// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/util/Map.h>

#ifndef SCAPIX_JAVA_API_JAVAX_XML_WS_HANDLER_MESSAGECONTEXT_FWD
#define SCAPIX_JAVA_API_JAVAX_XML_WS_HANDLER_MESSAGECONTEXT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::xml::ws::handler { class MessageContext; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::xml::ws::handler::MessageContext>
{
	static constexpr fixed_string class_name = "javax/xml/ws/handler/MessageContext";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::util::Map>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_XML_WS_HANDLER_MESSAGECONTEXT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_XML_WS_HANDLER_MESSAGECONTEXT)
#define SCAPIX_JAVA_API_JAVAX_XML_WS_HANDLER_MESSAGECONTEXT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/xml/ws/handler/MessageContext_Scope.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::xml::ws::handler::MessageContext : public jni::object_base<"javax/xml/ws/handler/MessageContext",
	java::lang::Object,
	java::util::Map>
{
public:

	using Scope = MessageContext_Scope;

	static jni::ref<java::lang::String> MESSAGE_OUTBOUND_PROPERTY() { return get_static_field<"MESSAGE_OUTBOUND_PROPERTY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> INBOUND_MESSAGE_ATTACHMENTS() { return get_static_field<"INBOUND_MESSAGE_ATTACHMENTS", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> OUTBOUND_MESSAGE_ATTACHMENTS() { return get_static_field<"OUTBOUND_MESSAGE_ATTACHMENTS", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> WSDL_DESCRIPTION() { return get_static_field<"WSDL_DESCRIPTION", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> WSDL_SERVICE() { return get_static_field<"WSDL_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> WSDL_PORT() { return get_static_field<"WSDL_PORT", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> WSDL_INTERFACE() { return get_static_field<"WSDL_INTERFACE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> WSDL_OPERATION() { return get_static_field<"WSDL_OPERATION", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> HTTP_RESPONSE_CODE() { return get_static_field<"HTTP_RESPONSE_CODE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> HTTP_REQUEST_HEADERS() { return get_static_field<"HTTP_REQUEST_HEADERS", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> HTTP_RESPONSE_HEADERS() { return get_static_field<"HTTP_RESPONSE_HEADERS", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> HTTP_REQUEST_METHOD() { return get_static_field<"HTTP_REQUEST_METHOD", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> SERVLET_REQUEST() { return get_static_field<"SERVLET_REQUEST", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> SERVLET_RESPONSE() { return get_static_field<"SERVLET_RESPONSE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> SERVLET_CONTEXT() { return get_static_field<"SERVLET_CONTEXT", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> QUERY_STRING() { return get_static_field<"QUERY_STRING", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> PATH_INFO() { return get_static_field<"PATH_INFO", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> REFERENCE_PARAMETERS() { return get_static_field<"REFERENCE_PARAMETERS", jni::ref<java::lang::String>>(); }

	void setScope(jni::ref<java::lang::String> p1, jni::ref<javax::xml::ws::handler::MessageContext_Scope> p2) { return call_method<"setScope", void>(p1, p2); }
	jni::ref<javax::xml::ws::handler::MessageContext_Scope> getScope(jni::ref<java::lang::String> p1) { return call_method<"getScope", jni::ref<javax::xml::ws::handler::MessageContext_Scope>>(p1); }

protected:

	MessageContext(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_XML_WS_HANDLER_MESSAGECONTEXT
