// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_XML_WS_LOGICALMESSAGE_FWD
#define SCAPIX_JAVA_API_JAVAX_XML_WS_LOGICALMESSAGE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::xml::ws { class LogicalMessage; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::xml::ws::LogicalMessage>
{
	static constexpr fixed_string class_name = "javax/xml/ws/LogicalMessage";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_XML_WS_LOGICALMESSAGE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_XML_WS_LOGICALMESSAGE)
#define SCAPIX_JAVA_API_JAVAX_XML_WS_LOGICALMESSAGE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/javax/xml/bind/JAXBContext.h>
#include <scapix/java_api/javax/xml/transform/Source.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::xml::ws::LogicalMessage : public jni::object_base<"javax/xml/ws/LogicalMessage",
	java::lang::Object>
{
public:

	jni::ref<javax::xml::transform::Source> getPayload() { return call_method<"getPayload", jni::ref<javax::xml::transform::Source>>(); }
	void setPayload(jni::ref<javax::xml::transform::Source> p1) { return call_method<"setPayload", void>(p1); }
	jni::ref<java::lang::Object> getPayload(jni::ref<javax::xml::bind::JAXBContext> p1) { return call_method<"getPayload", jni::ref<java::lang::Object>>(p1); }
	void setPayload(jni::ref<java::lang::Object> p1, jni::ref<javax::xml::bind::JAXBContext> p2) { return call_method<"setPayload", void>(p1, p2); }

protected:

	LogicalMessage(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_XML_WS_LOGICALMESSAGE
