// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_XML_WS_ENDPOINT_FWD
#define SCAPIX_JAVA_API_JAVAX_XML_WS_ENDPOINT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::xml::ws { class Endpoint; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::xml::ws::Endpoint>
{
	static constexpr fixed_string class_name = "javax/xml/ws/Endpoint";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_XML_WS_ENDPOINT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_XML_WS_ENDPOINT)
#define SCAPIX_JAVA_API_JAVAX_XML_WS_ENDPOINT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/java/util/Map.h>
#include <scapix/java_api/java/util/concurrent/Executor.h>
#include <scapix/java_api/javax/xml/ws/Binding.h>
#include <scapix/java_api/javax/xml/ws/EndpointContext.h>
#include <scapix/java_api/javax/xml/ws/EndpointReference.h>
#include <scapix/java_api/javax/xml/ws/WebServiceFeature.h>
#include <scapix/java_api/javax/xml/ws/spi/http/HttpContext.h>
#include <scapix/java_api/org/w3c/dom/Element.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::xml::ws::Endpoint : public jni::object_base<"javax/xml/ws/Endpoint",
	java::lang::Object>
{
public:

	static jni::ref<java::lang::String> WSDL_SERVICE() { return get_static_field<"WSDL_SERVICE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> WSDL_PORT() { return get_static_field<"WSDL_PORT", jni::ref<java::lang::String>>(); }

	static jni::ref<javax::xml::ws::Endpoint> new_object() { return base_::new_object(); }
	static jni::ref<javax::xml::ws::Endpoint> create(jni::ref<java::lang::Object> p1) { return call_static_method<"create", jni::ref<javax::xml::ws::Endpoint>>(p1); }
	static jni::ref<javax::xml::ws::Endpoint> create(jni::ref<java::lang::Object> p1, jni::ref<jni::array<javax::xml::ws::WebServiceFeature>> p2) { return call_static_method<"create", jni::ref<javax::xml::ws::Endpoint>>(p1, p2); }
	static jni::ref<javax::xml::ws::Endpoint> create(jni::ref<java::lang::String> p1, jni::ref<java::lang::Object> p2) { return call_static_method<"create", jni::ref<javax::xml::ws::Endpoint>>(p1, p2); }
	static jni::ref<javax::xml::ws::Endpoint> create(jni::ref<java::lang::String> p1, jni::ref<java::lang::Object> p2, jni::ref<jni::array<javax::xml::ws::WebServiceFeature>> p3) { return call_static_method<"create", jni::ref<javax::xml::ws::Endpoint>>(p1, p2, p3); }
	jni::ref<javax::xml::ws::Binding> getBinding() { return call_method<"getBinding", jni::ref<javax::xml::ws::Binding>>(); }
	jni::ref<java::lang::Object> getImplementor() { return call_method<"getImplementor", jni::ref<java::lang::Object>>(); }
	void publish(jni::ref<java::lang::String> p1) { return call_method<"publish", void>(p1); }
	static jni::ref<javax::xml::ws::Endpoint> publish(jni::ref<java::lang::String> p1, jni::ref<java::lang::Object> p2) { return call_static_method<"publish", jni::ref<javax::xml::ws::Endpoint>>(p1, p2); }
	static jni::ref<javax::xml::ws::Endpoint> publish(jni::ref<java::lang::String> p1, jni::ref<java::lang::Object> p2, jni::ref<jni::array<javax::xml::ws::WebServiceFeature>> p3) { return call_static_method<"publish", jni::ref<javax::xml::ws::Endpoint>>(p1, p2, p3); }
	void publish(jni::ref<java::lang::Object> p1) { return call_method<"publish", void>(p1); }
	void publish(jni::ref<javax::xml::ws::spi::http::HttpContext> p1) { return call_method<"publish", void>(p1); }
	void stop() { return call_method<"stop", void>(); }
	jboolean isPublished() { return call_method<"isPublished", jboolean>(); }
	jni::ref<java::util::List> getMetadata() { return call_method<"getMetadata", jni::ref<java::util::List>>(); }
	void setMetadata(jni::ref<java::util::List> p1) { return call_method<"setMetadata", void>(p1); }
	jni::ref<java::util::concurrent::Executor> getExecutor() { return call_method<"getExecutor", jni::ref<java::util::concurrent::Executor>>(); }
	void setExecutor(jni::ref<java::util::concurrent::Executor> p1) { return call_method<"setExecutor", void>(p1); }
	jni::ref<java::util::Map> getProperties() { return call_method<"getProperties", jni::ref<java::util::Map>>(); }
	void setProperties(jni::ref<java::util::Map> p1) { return call_method<"setProperties", void>(p1); }
	jni::ref<javax::xml::ws::EndpointReference> getEndpointReference(jni::ref<jni::array<org::w3c::dom::Element>> p1) { return call_method<"getEndpointReference", jni::ref<javax::xml::ws::EndpointReference>>(p1); }
	jni::ref<javax::xml::ws::EndpointReference> getEndpointReference(jni::ref<java::lang::Class> p1, jni::ref<jni::array<org::w3c::dom::Element>> p2) { return call_method<"getEndpointReference", jni::ref<javax::xml::ws::EndpointReference>>(p1, p2); }
	void setEndpointContext(jni::ref<javax::xml::ws::EndpointContext> p1) { return call_method<"setEndpointContext", void>(p1); }

protected:

	Endpoint(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_XML_WS_ENDPOINT
