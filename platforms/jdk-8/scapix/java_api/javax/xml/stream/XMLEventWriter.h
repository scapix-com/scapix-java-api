// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/javax/xml/stream/util/XMLEventConsumer.h>

#ifndef SCAPIX_JAVA_API_JAVAX_XML_STREAM_XMLEVENTWRITER_FWD
#define SCAPIX_JAVA_API_JAVAX_XML_STREAM_XMLEVENTWRITER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::xml::stream { class XMLEventWriter; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::xml::stream::XMLEventWriter>
{
	static constexpr fixed_string class_name = "javax/xml/stream/XMLEventWriter";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::javax::xml::stream::util::XMLEventConsumer>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_XML_STREAM_XMLEVENTWRITER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_XML_STREAM_XMLEVENTWRITER)
#define SCAPIX_JAVA_API_JAVAX_XML_STREAM_XMLEVENTWRITER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/xml/namespace/NamespaceContext.h>
#include <scapix/java_api/javax/xml/stream/XMLEventReader.h>
#include <scapix/java_api/javax/xml/stream/events/XMLEvent.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::xml::stream::XMLEventWriter : public jni::object_base<"javax/xml/stream/XMLEventWriter",
	java::lang::Object,
	javax::xml::stream::util::XMLEventConsumer>
{
public:

	void flush() { return call_method<"flush", void>(); }
	void close() { return call_method<"close", void>(); }
	void add(jni::ref<javax::xml::stream::events::XMLEvent> p1) { return call_method<"add", void>(p1); }
	void add(jni::ref<javax::xml::stream::XMLEventReader> p1) { return call_method<"add", void>(p1); }
	jni::ref<java::lang::String> getPrefix(jni::ref<java::lang::String> p1) { return call_method<"getPrefix", jni::ref<java::lang::String>>(p1); }
	void setPrefix(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return call_method<"setPrefix", void>(p1, p2); }
	void setDefaultNamespace(jni::ref<java::lang::String> p1) { return call_method<"setDefaultNamespace", void>(p1); }
	void setNamespaceContext(jni::ref<javax::xml::namespace_::NamespaceContext> p1) { return call_method<"setNamespaceContext", void>(p1); }
	jni::ref<javax::xml::namespace_::NamespaceContext> getNamespaceContext() { return call_method<"getNamespaceContext", jni::ref<javax::xml::namespace_::NamespaceContext>>(); }

protected:

	XMLEventWriter(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_XML_STREAM_XMLEVENTWRITER
