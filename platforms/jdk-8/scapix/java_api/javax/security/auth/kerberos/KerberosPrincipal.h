// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/security/Principal.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SECURITY_AUTH_KERBEROS_KERBEROSPRINCIPAL_FWD
#define SCAPIX_JAVA_API_JAVAX_SECURITY_AUTH_KERBEROS_KERBEROSPRINCIPAL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::security::auth::kerberos { class KerberosPrincipal; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::security::auth::kerberos::KerberosPrincipal>
{
	static constexpr fixed_string class_name = "javax/security/auth/kerberos/KerberosPrincipal";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::security::Principal, scapix::java_api::java::io::Serializable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SECURITY_AUTH_KERBEROS_KERBEROSPRINCIPAL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SECURITY_AUTH_KERBEROS_KERBEROSPRINCIPAL)
#define SCAPIX_JAVA_API_JAVAX_SECURITY_AUTH_KERBEROS_KERBEROSPRINCIPAL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::security::auth::kerberos::KerberosPrincipal : public jni::object_base<"javax/security/auth/kerberos/KerberosPrincipal",
	java::lang::Object,
	java::security::Principal,
	java::io::Serializable>
{
public:

	static jint KRB_NT_UNKNOWN() { return get_static_field<"KRB_NT_UNKNOWN", jint>(); }
	static jint KRB_NT_PRINCIPAL() { return get_static_field<"KRB_NT_PRINCIPAL", jint>(); }
	static jint KRB_NT_SRV_INST() { return get_static_field<"KRB_NT_SRV_INST", jint>(); }
	static jint KRB_NT_SRV_HST() { return get_static_field<"KRB_NT_SRV_HST", jint>(); }
	static jint KRB_NT_SRV_XHST() { return get_static_field<"KRB_NT_SRV_XHST", jint>(); }
	static jint KRB_NT_UID() { return get_static_field<"KRB_NT_UID", jint>(); }

	static jni::ref<javax::security::auth::kerberos::KerberosPrincipal> new_object(jni::ref<java::lang::String> p1) { return base_::new_object(p1); }
	static jni::ref<javax::security::auth::kerberos::KerberosPrincipal> new_object(jni::ref<java::lang::String> p1, jint p2) { return base_::new_object(p1, p2); }
	jni::ref<java::lang::String> getRealm() { return call_method<"getRealm", jni::ref<java::lang::String>>(); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jboolean equals(jni::ref<java::lang::Object> p1) { return call_method<"equals", jboolean>(p1); }
	jni::ref<java::lang::String> getName() { return call_method<"getName", jni::ref<java::lang::String>>(); }
	jint getNameType() { return call_method<"getNameType", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	KerberosPrincipal(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SECURITY_AUTH_KERBEROS_KERBEROSPRINCIPAL
