// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_SECURITY_AUTH_SPI_LOGINMODULE_FWD
#define SCAPIX_JAVA_API_JAVAX_SECURITY_AUTH_SPI_LOGINMODULE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::security::auth::spi { class LoginModule; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::security::auth::spi::LoginModule>
{
	static constexpr fixed_string class_name = "javax/security/auth/spi/LoginModule";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SECURITY_AUTH_SPI_LOGINMODULE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_SECURITY_AUTH_SPI_LOGINMODULE)
#define SCAPIX_JAVA_API_JAVAX_SECURITY_AUTH_SPI_LOGINMODULE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/util/Map.h>
#include <scapix/java_api/javax/security/auth/Subject.h>
#include <scapix/java_api/javax/security/auth/callback/CallbackHandler.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::security::auth::spi::LoginModule : public jni::object_base<"javax/security/auth/spi/LoginModule",
	java::lang::Object>
{
public:

	void initialize(jni::ref<javax::security::auth::Subject> p1, jni::ref<javax::security::auth::callback::CallbackHandler> p2, jni::ref<java::util::Map> p3, jni::ref<java::util::Map> p4) { return call_method<"initialize", void>(p1, p2, p3, p4); }
	jboolean login() { return call_method<"login", jboolean>(); }
	jboolean commit() { return call_method<"commit", jboolean>(); }
	jboolean abort() { return call_method<"abort", jboolean>(); }
	jboolean logout() { return call_method<"logout", jboolean>(); }

protected:

	LoginModule(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_SECURITY_AUTH_SPI_LOGINMODULE
