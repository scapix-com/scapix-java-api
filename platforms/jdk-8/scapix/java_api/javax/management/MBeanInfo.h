// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/Cloneable.h>
#include <scapix/java_api/java/io/Serializable.h>
#include <scapix/java_api/javax/management/DescriptorRead.h>

#ifndef SCAPIX_JAVA_API_JAVAX_MANAGEMENT_MBEANINFO_FWD
#define SCAPIX_JAVA_API_JAVAX_MANAGEMENT_MBEANINFO_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::management { class MBeanInfo; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::management::MBeanInfo>
{
	static constexpr fixed_string class_name = "javax/management/MBeanInfo";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::lang::Cloneable, scapix::java_api::java::io::Serializable, scapix::java_api::javax::management::DescriptorRead>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_MANAGEMENT_MBEANINFO_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_MANAGEMENT_MBEANINFO)
#define SCAPIX_JAVA_API_JAVAX_MANAGEMENT_MBEANINFO

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/management/Descriptor.h>
#include <scapix/java_api/javax/management/MBeanAttributeInfo.h>
#include <scapix/java_api/javax/management/MBeanConstructorInfo.h>
#include <scapix/java_api/javax/management/MBeanNotificationInfo.h>
#include <scapix/java_api/javax/management/MBeanOperationInfo.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::management::MBeanInfo : public jni::object_base<"javax/management/MBeanInfo",
	java::lang::Object,
	java::lang::Cloneable,
	java::io::Serializable,
	javax::management::DescriptorRead>
{
public:

	static jni::ref<javax::management::MBeanInfo> new_object(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2, jni::ref<jni::array<javax::management::MBeanAttributeInfo>> p3, jni::ref<jni::array<javax::management::MBeanConstructorInfo>> p4, jni::ref<jni::array<javax::management::MBeanOperationInfo>> p5, jni::ref<jni::array<javax::management::MBeanNotificationInfo>> p6) { return base_::new_object(p1, p2, p3, p4, p5, p6); }
	static jni::ref<javax::management::MBeanInfo> new_object(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2, jni::ref<jni::array<javax::management::MBeanAttributeInfo>> p3, jni::ref<jni::array<javax::management::MBeanConstructorInfo>> p4, jni::ref<jni::array<javax::management::MBeanOperationInfo>> p5, jni::ref<jni::array<javax::management::MBeanNotificationInfo>> p6, jni::ref<javax::management::Descriptor> p7) { return base_::new_object(p1, p2, p3, p4, p5, p6, p7); }
	jni::ref<java::lang::Object> clone() { return call_method<"clone", jni::ref<java::lang::Object>>(); }
	jni::ref<java::lang::String> getClassName() { return call_method<"getClassName", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getDescription() { return call_method<"getDescription", jni::ref<java::lang::String>>(); }
	jni::ref<jni::array<javax::management::MBeanAttributeInfo>> getAttributes() { return call_method<"getAttributes", jni::ref<jni::array<javax::management::MBeanAttributeInfo>>>(); }
	jni::ref<jni::array<javax::management::MBeanOperationInfo>> getOperations() { return call_method<"getOperations", jni::ref<jni::array<javax::management::MBeanOperationInfo>>>(); }
	jni::ref<jni::array<javax::management::MBeanConstructorInfo>> getConstructors() { return call_method<"getConstructors", jni::ref<jni::array<javax::management::MBeanConstructorInfo>>>(); }
	jni::ref<jni::array<javax::management::MBeanNotificationInfo>> getNotifications() { return call_method<"getNotifications", jni::ref<jni::array<javax::management::MBeanNotificationInfo>>>(); }
	jni::ref<javax::management::Descriptor> getDescriptor() { return call_method<"getDescriptor", jni::ref<javax::management::Descriptor>>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jboolean equals(jni::ref<java::lang::Object> p1) { return call_method<"equals", jboolean>(p1); }
	jint hashCode() { return call_method<"hashCode", jint>(); }

protected:

	MBeanInfo(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_MANAGEMENT_MBEANINFO
