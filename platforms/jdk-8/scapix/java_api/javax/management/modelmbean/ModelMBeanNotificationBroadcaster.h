// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/javax/management/NotificationBroadcaster.h>

#ifndef SCAPIX_JAVA_API_JAVAX_MANAGEMENT_MODELMBEAN_MODELMBEANNOTIFICATIONBROADCASTER_FWD
#define SCAPIX_JAVA_API_JAVAX_MANAGEMENT_MODELMBEAN_MODELMBEANNOTIFICATIONBROADCASTER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::management::modelmbean { class ModelMBeanNotificationBroadcaster; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::management::modelmbean::ModelMBeanNotificationBroadcaster>
{
	static constexpr fixed_string class_name = "javax/management/modelmbean/ModelMBeanNotificationBroadcaster";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::javax::management::NotificationBroadcaster>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_MANAGEMENT_MODELMBEAN_MODELMBEANNOTIFICATIONBROADCASTER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_MANAGEMENT_MODELMBEAN_MODELMBEANNOTIFICATIONBROADCASTER)
#define SCAPIX_JAVA_API_JAVAX_MANAGEMENT_MODELMBEAN_MODELMBEANNOTIFICATIONBROADCASTER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/management/Attribute.h>
#include <scapix/java_api/javax/management/AttributeChangeNotification.h>
#include <scapix/java_api/javax/management/Notification.h>
#include <scapix/java_api/javax/management/NotificationListener.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::management::modelmbean::ModelMBeanNotificationBroadcaster : public jni::object_base<"javax/management/modelmbean/ModelMBeanNotificationBroadcaster",
	java::lang::Object,
	javax::management::NotificationBroadcaster>
{
public:

	void sendNotification(jni::ref<javax::management::Notification> p1) { return call_method<"sendNotification", void>(p1); }
	void sendNotification(jni::ref<java::lang::String> p1) { return call_method<"sendNotification", void>(p1); }
	void sendAttributeChangeNotification(jni::ref<javax::management::AttributeChangeNotification> p1) { return call_method<"sendAttributeChangeNotification", void>(p1); }
	void sendAttributeChangeNotification(jni::ref<javax::management::Attribute> p1, jni::ref<javax::management::Attribute> p2) { return call_method<"sendAttributeChangeNotification", void>(p1, p2); }
	void addAttributeChangeNotificationListener(jni::ref<javax::management::NotificationListener> p1, jni::ref<java::lang::String> p2, jni::ref<java::lang::Object> p3) { return call_method<"addAttributeChangeNotificationListener", void>(p1, p2, p3); }
	void removeAttributeChangeNotificationListener(jni::ref<javax::management::NotificationListener> p1, jni::ref<java::lang::String> p2) { return call_method<"removeAttributeChangeNotificationListener", void>(p1, p2); }

protected:

	ModelMBeanNotificationBroadcaster(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_MANAGEMENT_MODELMBEAN_MODELMBEANNOTIFICATIONBROADCASTER
