// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/security/BasicPermission.h>

#ifndef SCAPIX_JAVA_API_JAVAX_MANAGEMENT_MBEANSERVERPERMISSION_FWD
#define SCAPIX_JAVA_API_JAVAX_MANAGEMENT_MBEANSERVERPERMISSION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::management { class MBeanServerPermission; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::management::MBeanServerPermission>
{
	static constexpr fixed_string class_name = "javax/management/MBeanServerPermission";
	using base_classes = std::tuple<scapix::java_api::java::security::BasicPermission>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_MANAGEMENT_MBEANSERVERPERMISSION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_MANAGEMENT_MBEANSERVERPERMISSION)
#define SCAPIX_JAVA_API_JAVAX_MANAGEMENT_MBEANSERVERPERMISSION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/security/Permission.h>
#include <scapix/java_api/java/security/PermissionCollection.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::management::MBeanServerPermission : public jni::object_base<"javax/management/MBeanServerPermission",
	java::security::BasicPermission>
{
public:

	static jni::ref<javax::management::MBeanServerPermission> new_object(jni::ref<java::lang::String> p1) { return base_::new_object(p1); }
	static jni::ref<javax::management::MBeanServerPermission> new_object(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return base_::new_object(p1, p2); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jboolean implies(jni::ref<java::security::Permission> p1) { return call_method<"implies", jboolean>(p1); }
	jboolean equals(jni::ref<java::lang::Object> p1) { return call_method<"equals", jboolean>(p1); }
	jni::ref<java::security::PermissionCollection> newPermissionCollection() { return call_method<"newPermissionCollection", jni::ref<java::security::PermissionCollection>>(); }

protected:

	MBeanServerPermission(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_MANAGEMENT_MBEANSERVERPERMISSION
