// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_MANAGEMENT_RELATION_RELATION_FWD
#define SCAPIX_JAVA_API_JAVAX_MANAGEMENT_RELATION_RELATION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::management::relation { class Relation; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::management::relation::Relation>
{
	static constexpr fixed_string class_name = "javax/management/relation/Relation";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_MANAGEMENT_RELATION_RELATION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_MANAGEMENT_RELATION_RELATION)
#define SCAPIX_JAVA_API_JAVAX_MANAGEMENT_RELATION_RELATION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Integer.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/java/util/Map.h>
#include <scapix/java_api/javax/management/ObjectName.h>
#include <scapix/java_api/javax/management/relation/Role.h>
#include <scapix/java_api/javax/management/relation/RoleList.h>
#include <scapix/java_api/javax/management/relation/RoleResult.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::management::relation::Relation : public jni::object_base<"javax/management/relation/Relation",
	java::lang::Object>
{
public:

	jni::ref<java::util::List> getRole(jni::ref<java::lang::String> p1) { return call_method<"getRole", jni::ref<java::util::List>>(p1); }
	jni::ref<javax::management::relation::RoleResult> getRoles(jni::ref<jni::array<java::lang::String>> p1) { return call_method<"getRoles", jni::ref<javax::management::relation::RoleResult>>(p1); }
	jni::ref<java::lang::Integer> getRoleCardinality(jni::ref<java::lang::String> p1) { return call_method<"getRoleCardinality", jni::ref<java::lang::Integer>>(p1); }
	jni::ref<javax::management::relation::RoleResult> getAllRoles() { return call_method<"getAllRoles", jni::ref<javax::management::relation::RoleResult>>(); }
	jni::ref<javax::management::relation::RoleList> retrieveAllRoles() { return call_method<"retrieveAllRoles", jni::ref<javax::management::relation::RoleList>>(); }
	void setRole(jni::ref<javax::management::relation::Role> p1) { return call_method<"setRole", void>(p1); }
	jni::ref<javax::management::relation::RoleResult> setRoles(jni::ref<javax::management::relation::RoleList> p1) { return call_method<"setRoles", jni::ref<javax::management::relation::RoleResult>>(p1); }
	void handleMBeanUnregistration(jni::ref<javax::management::ObjectName> p1, jni::ref<java::lang::String> p2) { return call_method<"handleMBeanUnregistration", void>(p1, p2); }
	jni::ref<java::util::Map> getReferencedMBeans() { return call_method<"getReferencedMBeans", jni::ref<java::util::Map>>(); }
	jni::ref<java::lang::String> getRelationTypeName() { return call_method<"getRelationTypeName", jni::ref<java::lang::String>>(); }
	jni::ref<javax::management::ObjectName> getRelationServiceName() { return call_method<"getRelationServiceName", jni::ref<javax::management::ObjectName>>(); }
	jni::ref<java::lang::String> getRelationId() { return call_method<"getRelationId", jni::ref<java::lang::String>>(); }

protected:

	Relation(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_MANAGEMENT_RELATION_RELATION
