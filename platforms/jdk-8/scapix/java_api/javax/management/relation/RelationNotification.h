// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/management/Notification.h>

#ifndef SCAPIX_JAVA_API_JAVAX_MANAGEMENT_RELATION_RELATIONNOTIFICATION_FWD
#define SCAPIX_JAVA_API_JAVAX_MANAGEMENT_RELATION_RELATIONNOTIFICATION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::management::relation { class RelationNotification; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::management::relation::RelationNotification>
{
	static constexpr fixed_string class_name = "javax/management/relation/RelationNotification";
	using base_classes = std::tuple<scapix::java_api::javax::management::Notification>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_MANAGEMENT_RELATION_RELATIONNOTIFICATION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_MANAGEMENT_RELATION_RELATIONNOTIFICATION)
#define SCAPIX_JAVA_API_JAVAX_MANAGEMENT_RELATION_RELATIONNOTIFICATION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/javax/management/ObjectName.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::management::relation::RelationNotification : public jni::object_base<"javax/management/relation/RelationNotification",
	javax::management::Notification>
{
public:

	static jni::ref<java::lang::String> RELATION_BASIC_CREATION() { return get_static_field<"RELATION_BASIC_CREATION", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> RELATION_MBEAN_CREATION() { return get_static_field<"RELATION_MBEAN_CREATION", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> RELATION_BASIC_UPDATE() { return get_static_field<"RELATION_BASIC_UPDATE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> RELATION_MBEAN_UPDATE() { return get_static_field<"RELATION_MBEAN_UPDATE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> RELATION_BASIC_REMOVAL() { return get_static_field<"RELATION_BASIC_REMOVAL", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> RELATION_MBEAN_REMOVAL() { return get_static_field<"RELATION_MBEAN_REMOVAL", jni::ref<java::lang::String>>(); }

	static jni::ref<javax::management::relation::RelationNotification> new_object(jni::ref<java::lang::String> p1, jni::ref<java::lang::Object> p2, jlong p3, jlong p4, jni::ref<java::lang::String> p5, jni::ref<java::lang::String> p6, jni::ref<java::lang::String> p7, jni::ref<javax::management::ObjectName> p8, jni::ref<java::util::List> p9) { return base_::new_object(p1, p2, p3, p4, p5, p6, p7, p8, p9); }
	static jni::ref<javax::management::relation::RelationNotification> new_object(jni::ref<java::lang::String> p1, jni::ref<java::lang::Object> p2, jlong p3, jlong p4, jni::ref<java::lang::String> p5, jni::ref<java::lang::String> p6, jni::ref<java::lang::String> p7, jni::ref<javax::management::ObjectName> p8, jni::ref<java::lang::String> p9, jni::ref<java::util::List> p10, jni::ref<java::util::List> p11) { return base_::new_object(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11); }
	jni::ref<java::lang::String> getRelationId() { return call_method<"getRelationId", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getRelationTypeName() { return call_method<"getRelationTypeName", jni::ref<java::lang::String>>(); }
	jni::ref<javax::management::ObjectName> getObjectName() { return call_method<"getObjectName", jni::ref<javax::management::ObjectName>>(); }
	jni::ref<java::util::List> getMBeansToUnregister() { return call_method<"getMBeansToUnregister", jni::ref<java::util::List>>(); }
	jni::ref<java::lang::String> getRoleName() { return call_method<"getRoleName", jni::ref<java::lang::String>>(); }
	jni::ref<java::util::List> getOldRoleValue() { return call_method<"getOldRoleValue", jni::ref<java::util::List>>(); }
	jni::ref<java::util::List> getNewRoleValue() { return call_method<"getNewRoleValue", jni::ref<java::util::List>>(); }

protected:

	RelationNotification(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_MANAGEMENT_RELATION_RELATIONNOTIFICATION
