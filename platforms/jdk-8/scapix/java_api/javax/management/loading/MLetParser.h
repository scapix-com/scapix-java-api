// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_MANAGEMENT_LOADING_MLETPARSER_FWD
#define SCAPIX_JAVA_API_JAVAX_MANAGEMENT_LOADING_MLETPARSER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::management::loading { class MLetParser; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::management::loading::MLetParser>
{
	static constexpr fixed_string class_name = "javax/management/loading/MLetParser";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_MANAGEMENT_LOADING_MLETPARSER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_MANAGEMENT_LOADING_MLETPARSER)
#define SCAPIX_JAVA_API_JAVAX_MANAGEMENT_LOADING_MLETPARSER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/Reader.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/net/URL.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/java/util/Map.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class javax::management::loading::MLetParser : public jni::object_base<"javax/management/loading/MLetParser",
	java::lang::Object>
{
public:

	static jni::ref<javax::management::loading::MLetParser> new_object() { return base_::new_object(); }
	void skipSpace(jni::ref<java::io::Reader> p1) { return call_method<"skipSpace", void>(p1); }
	jni::ref<java::lang::String> scanIdentifier(jni::ref<java::io::Reader> p1) { return call_method<"scanIdentifier", jni::ref<java::lang::String>>(p1); }
	jni::ref<java::util::Map> scanTag(jni::ref<java::io::Reader> p1) { return call_method<"scanTag", jni::ref<java::util::Map>>(p1); }
	jni::ref<java::util::List> parse(jni::ref<java::net::URL> p1) { return call_method<"parse", jni::ref<java::util::List>>(p1); }
	jni::ref<java::util::List> parseURL(jni::ref<java::lang::String> p1) { return call_method<"parseURL", jni::ref<java::util::List>>(p1); }

protected:

	MLetParser(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_MANAGEMENT_LOADING_MLETPARSER
