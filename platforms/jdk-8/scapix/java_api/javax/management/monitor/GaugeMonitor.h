// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/management/monitor/Monitor.h>
#include <scapix/java_api/javax/management/monitor/GaugeMonitorMBean.h>

#ifndef SCAPIX_JAVA_API_JAVAX_MANAGEMENT_MONITOR_GAUGEMONITOR_FWD
#define SCAPIX_JAVA_API_JAVAX_MANAGEMENT_MONITOR_GAUGEMONITOR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::management::monitor { class GaugeMonitor; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::management::monitor::GaugeMonitor>
{
	static constexpr fixed_string class_name = "javax/management/monitor/GaugeMonitor";
	using base_classes = std::tuple<scapix::java_api::javax::management::monitor::Monitor, scapix::java_api::javax::management::monitor::GaugeMonitorMBean>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_MANAGEMENT_MONITOR_GAUGEMONITOR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_MANAGEMENT_MONITOR_GAUGEMONITOR)
#define SCAPIX_JAVA_API_JAVAX_MANAGEMENT_MONITOR_GAUGEMONITOR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Number.h>
#include <scapix/java_api/javax/management/MBeanNotificationInfo.h>
#include <scapix/java_api/javax/management/ObjectName.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::management::monitor::GaugeMonitor : public jni::object_base<"javax/management/monitor/GaugeMonitor",
	javax::management::monitor::Monitor,
	javax::management::monitor::GaugeMonitorMBean>
{
public:

	static jni::ref<javax::management::monitor::GaugeMonitor> new_object() { return base_::new_object(); }
	void start() { return call_method<"start", void>(); }
	void stop() { return call_method<"stop", void>(); }
	jni::ref<java::lang::Number> getDerivedGauge(jni::ref<javax::management::ObjectName> p1) { return call_method<"getDerivedGauge", jni::ref<java::lang::Number>>(p1); }
	jlong getDerivedGaugeTimeStamp(jni::ref<javax::management::ObjectName> p1) { return call_method<"getDerivedGaugeTimeStamp", jlong>(p1); }
	jni::ref<java::lang::Number> getDerivedGauge() { return call_method<"getDerivedGauge", jni::ref<java::lang::Number>>(); }
	jlong getDerivedGaugeTimeStamp() { return call_method<"getDerivedGaugeTimeStamp", jlong>(); }
	jni::ref<java::lang::Number> getHighThreshold() { return call_method<"getHighThreshold", jni::ref<java::lang::Number>>(); }
	jni::ref<java::lang::Number> getLowThreshold() { return call_method<"getLowThreshold", jni::ref<java::lang::Number>>(); }
	void setThresholds(jni::ref<java::lang::Number> p1, jni::ref<java::lang::Number> p2) { return call_method<"setThresholds", void>(p1, p2); }
	jboolean getNotifyHigh() { return call_method<"getNotifyHigh", jboolean>(); }
	void setNotifyHigh(jboolean p1) { return call_method<"setNotifyHigh", void>(p1); }
	jboolean getNotifyLow() { return call_method<"getNotifyLow", jboolean>(); }
	void setNotifyLow(jboolean p1) { return call_method<"setNotifyLow", void>(p1); }
	jboolean getDifferenceMode() { return call_method<"getDifferenceMode", jboolean>(); }
	void setDifferenceMode(jboolean p1) { return call_method<"setDifferenceMode", void>(p1); }
	jni::ref<jni::array<javax::management::MBeanNotificationInfo>> getNotificationInfo() { return call_method<"getNotificationInfo", jni::ref<jni::array<javax::management::MBeanNotificationInfo>>>(); }

protected:

	GaugeMonitor(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_MANAGEMENT_MONITOR_GAUGEMONITOR
