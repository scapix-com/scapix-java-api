// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Enum.h>

#ifndef SCAPIX_JAVA_API_JAVAX_MANAGEMENT_MONITOR_MONITOR_NUMERICALTYPE_FWD
#define SCAPIX_JAVA_API_JAVAX_MANAGEMENT_MONITOR_MONITOR_NUMERICALTYPE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::management::monitor { class Monitor_NumericalType; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::management::monitor::Monitor_NumericalType>
{
	static constexpr fixed_string class_name = "javax/management/monitor/Monitor$NumericalType";
	using base_classes = std::tuple<scapix::java_api::java::lang::Enum>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_MANAGEMENT_MONITOR_MONITOR_NUMERICALTYPE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_MANAGEMENT_MONITOR_MONITOR_NUMERICALTYPE)
#define SCAPIX_JAVA_API_JAVAX_MANAGEMENT_MONITOR_MONITOR_NUMERICALTYPE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class javax::management::monitor::Monitor_NumericalType : public jni::object_base<"javax/management/monitor/Monitor$NumericalType",
	java::lang::Enum>
{
public:

	static jni::ref<javax::management::monitor::Monitor_NumericalType> BYTE() { return get_static_field<"BYTE", jni::ref<javax::management::monitor::Monitor_NumericalType>>(); }
	static jni::ref<javax::management::monitor::Monitor_NumericalType> SHORT() { return get_static_field<"SHORT", jni::ref<javax::management::monitor::Monitor_NumericalType>>(); }
	static jni::ref<javax::management::monitor::Monitor_NumericalType> INTEGER() { return get_static_field<"INTEGER", jni::ref<javax::management::monitor::Monitor_NumericalType>>(); }
	static jni::ref<javax::management::monitor::Monitor_NumericalType> LONG() { return get_static_field<"LONG", jni::ref<javax::management::monitor::Monitor_NumericalType>>(); }
	static jni::ref<javax::management::monitor::Monitor_NumericalType> FLOAT() { return get_static_field<"FLOAT", jni::ref<javax::management::monitor::Monitor_NumericalType>>(); }
	static jni::ref<javax::management::monitor::Monitor_NumericalType> DOUBLE() { return get_static_field<"DOUBLE", jni::ref<javax::management::monitor::Monitor_NumericalType>>(); }

	static jni::ref<jni::array<javax::management::monitor::Monitor_NumericalType>> values() { return call_static_method<"values", jni::ref<jni::array<javax::management::monitor::Monitor_NumericalType>>>(); }
	static jni::ref<javax::management::monitor::Monitor_NumericalType> valueOf(jni::ref<java::lang::String> p1) { return call_static_method<"valueOf", jni::ref<javax::management::monitor::Monitor_NumericalType>>(p1); }

protected:

	Monitor_NumericalType(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_MANAGEMENT_MONITOR_MONITOR_NUMERICALTYPE
