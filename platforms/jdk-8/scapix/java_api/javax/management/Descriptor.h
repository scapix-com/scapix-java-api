// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/io/Serializable.h>
#include <scapix/java_api/java/lang/Cloneable.h>

#ifndef SCAPIX_JAVA_API_JAVAX_MANAGEMENT_DESCRIPTOR_FWD
#define SCAPIX_JAVA_API_JAVAX_MANAGEMENT_DESCRIPTOR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::management { class Descriptor; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::management::Descriptor>
{
	static constexpr fixed_string class_name = "javax/management/Descriptor";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::io::Serializable, scapix::java_api::java::lang::Cloneable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_MANAGEMENT_DESCRIPTOR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_MANAGEMENT_DESCRIPTOR)
#define SCAPIX_JAVA_API_JAVAX_MANAGEMENT_DESCRIPTOR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::management::Descriptor : public jni::object_base<"javax/management/Descriptor",
	java::lang::Object,
	java::io::Serializable,
	java::lang::Cloneable>
{
public:

	jni::ref<java::lang::Object> getFieldValue(jni::ref<java::lang::String> p1) { return call_method<"getFieldValue", jni::ref<java::lang::Object>>(p1); }
	void setField(jni::ref<java::lang::String> p1, jni::ref<java::lang::Object> p2) { return call_method<"setField", void>(p1, p2); }
	jni::ref<jni::array<java::lang::String>> getFields() { return call_method<"getFields", jni::ref<jni::array<java::lang::String>>>(); }
	jni::ref<jni::array<java::lang::String>> getFieldNames() { return call_method<"getFieldNames", jni::ref<jni::array<java::lang::String>>>(); }
	jni::ref<jni::array<java::lang::Object>> getFieldValues(jni::ref<jni::array<java::lang::String>> p1) { return call_method<"getFieldValues", jni::ref<jni::array<java::lang::Object>>>(p1); }
	void removeField(jni::ref<java::lang::String> p1) { return call_method<"removeField", void>(p1); }
	void setFields(jni::ref<jni::array<java::lang::String>> p1, jni::ref<jni::array<java::lang::Object>> p2) { return call_method<"setFields", void>(p1, p2); }
	jni::ref<java::lang::Object> clone() { return call_method<"clone", jni::ref<java::lang::Object>>(); }
	jboolean isValid() { return call_method<"isValid", jboolean>(); }
	jboolean equals(jni::ref<java::lang::Object> p1) { return call_method<"equals", jboolean>(p1); }
	jint hashCode() { return call_method<"hashCode", jint>(); }

protected:

	Descriptor(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_MANAGEMENT_DESCRIPTOR
