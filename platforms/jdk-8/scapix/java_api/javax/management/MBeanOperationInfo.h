// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/management/MBeanFeatureInfo.h>
#include <scapix/java_api/java/lang/Cloneable.h>

#ifndef SCAPIX_JAVA_API_JAVAX_MANAGEMENT_MBEANOPERATIONINFO_FWD
#define SCAPIX_JAVA_API_JAVAX_MANAGEMENT_MBEANOPERATIONINFO_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::management { class MBeanOperationInfo; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::management::MBeanOperationInfo>
{
	static constexpr fixed_string class_name = "javax/management/MBeanOperationInfo";
	using base_classes = std::tuple<scapix::java_api::javax::management::MBeanFeatureInfo, scapix::java_api::java::lang::Cloneable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_MANAGEMENT_MBEANOPERATIONINFO_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_MANAGEMENT_MBEANOPERATIONINFO)
#define SCAPIX_JAVA_API_JAVAX_MANAGEMENT_MBEANOPERATIONINFO

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/reflect/Method.h>
#include <scapix/java_api/javax/management/Descriptor.h>
#include <scapix/java_api/javax/management/MBeanParameterInfo.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::management::MBeanOperationInfo : public jni::object_base<"javax/management/MBeanOperationInfo",
	javax::management::MBeanFeatureInfo,
	java::lang::Cloneable>
{
public:

	static jint INFO() { return get_static_field<"INFO", jint>(); }
	static jint ACTION() { return get_static_field<"ACTION", jint>(); }
	static jint ACTION_INFO() { return get_static_field<"ACTION_INFO", jint>(); }
	static jint UNKNOWN() { return get_static_field<"UNKNOWN", jint>(); }

	static jni::ref<javax::management::MBeanOperationInfo> new_object(jni::ref<java::lang::String> p1, jni::ref<java::lang::reflect::Method> p2) { return base_::new_object(p1, p2); }
	static jni::ref<javax::management::MBeanOperationInfo> new_object(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2, jni::ref<jni::array<javax::management::MBeanParameterInfo>> p3, jni::ref<java::lang::String> p4, jint p5) { return base_::new_object(p1, p2, p3, p4, p5); }
	static jni::ref<javax::management::MBeanOperationInfo> new_object(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2, jni::ref<jni::array<javax::management::MBeanParameterInfo>> p3, jni::ref<java::lang::String> p4, jint p5, jni::ref<javax::management::Descriptor> p6) { return base_::new_object(p1, p2, p3, p4, p5, p6); }
	jni::ref<java::lang::Object> clone() { return call_method<"clone", jni::ref<java::lang::Object>>(); }
	jni::ref<java::lang::String> getReturnType() { return call_method<"getReturnType", jni::ref<java::lang::String>>(); }
	jni::ref<jni::array<javax::management::MBeanParameterInfo>> getSignature() { return call_method<"getSignature", jni::ref<jni::array<javax::management::MBeanParameterInfo>>>(); }
	jint getImpact() { return call_method<"getImpact", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jboolean equals(jni::ref<java::lang::Object> p1) { return call_method<"equals", jboolean>(p1); }
	jint hashCode() { return call_method<"hashCode", jint>(); }

protected:

	MBeanOperationInfo(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_MANAGEMENT_MBEANOPERATIONINFO
