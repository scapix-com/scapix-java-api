// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/rmi/CORBA/Stub.h>
#include <scapix/java_api/javax/management/remote/rmi/RMIConnection.h>

#ifndef SCAPIX_JAVA_API_JAVAX_MANAGEMENT_REMOTE_RMI__RMICONNECTION_STUB_FWD
#define SCAPIX_JAVA_API_JAVAX_MANAGEMENT_REMOTE_RMI__RMICONNECTION_STUB_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::management::remote::rmi { class _RMIConnection_Stub; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::management::remote::rmi::_RMIConnection_Stub>
{
	static constexpr fixed_string class_name = "javax/management/remote/rmi/_RMIConnection_Stub";
	using base_classes = std::tuple<scapix::java_api::javax::rmi::CORBA::Stub, scapix::java_api::javax::management::remote::rmi::RMIConnection>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_MANAGEMENT_REMOTE_RMI__RMICONNECTION_STUB_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_MANAGEMENT_REMOTE_RMI__RMICONNECTION_STUB)
#define SCAPIX_JAVA_API_JAVAX_MANAGEMENT_REMOTE_RMI__RMICONNECTION_STUB

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Integer.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/rmi/MarshalledObject.h>
#include <scapix/java_api/java/util/Set.h>
#include <scapix/java_api/javax/management/AttributeList.h>
#include <scapix/java_api/javax/management/MBeanInfo.h>
#include <scapix/java_api/javax/management/ObjectInstance.h>
#include <scapix/java_api/javax/management/ObjectName.h>
#include <scapix/java_api/javax/management/remote/NotificationResult.h>
#include <scapix/java_api/javax/security/auth/Subject.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::management::remote::rmi::_RMIConnection_Stub : public jni::object_base<"javax/management/remote/rmi/_RMIConnection_Stub",
	javax::rmi::CORBA::Stub,
	javax::management::remote::rmi::RMIConnection>
{
public:

	static jni::ref<javax::management::remote::rmi::_RMIConnection_Stub> new_object() { return base_::new_object(); }
	jni::ref<jni::array<java::lang::String>> _ids() { return call_method<"_ids", jni::ref<jni::array<java::lang::String>>>(); }
	void addNotificationListener(jni::ref<javax::management::ObjectName> p1, jni::ref<javax::management::ObjectName> p2, jni::ref<java::rmi::MarshalledObject> p3, jni::ref<java::rmi::MarshalledObject> p4, jni::ref<javax::security::auth::Subject> p5) { return call_method<"addNotificationListener", void>(p1, p2, p3, p4, p5); }
	jni::ref<jni::array<java::lang::Integer>> addNotificationListeners(jni::ref<jni::array<javax::management::ObjectName>> p1, jni::ref<jni::array<java::rmi::MarshalledObject>> p2, jni::ref<jni::array<javax::security::auth::Subject>> p3) { return call_method<"addNotificationListeners", jni::ref<jni::array<java::lang::Integer>>>(p1, p2, p3); }
	void close() { return call_method<"close", void>(); }
	jni::ref<javax::management::ObjectInstance> createMBean(jni::ref<java::lang::String> p1, jni::ref<javax::management::ObjectName> p2, jni::ref<java::rmi::MarshalledObject> p3, jni::ref<jni::array<java::lang::String>> p4, jni::ref<javax::security::auth::Subject> p5) { return call_method<"createMBean", jni::ref<javax::management::ObjectInstance>>(p1, p2, p3, p4, p5); }
	jni::ref<javax::management::ObjectInstance> createMBean(jni::ref<java::lang::String> p1, jni::ref<javax::management::ObjectName> p2, jni::ref<javax::management::ObjectName> p3, jni::ref<java::rmi::MarshalledObject> p4, jni::ref<jni::array<java::lang::String>> p5, jni::ref<javax::security::auth::Subject> p6) { return call_method<"createMBean", jni::ref<javax::management::ObjectInstance>>(p1, p2, p3, p4, p5, p6); }
	jni::ref<javax::management::ObjectInstance> createMBean(jni::ref<java::lang::String> p1, jni::ref<javax::management::ObjectName> p2, jni::ref<javax::management::ObjectName> p3, jni::ref<javax::security::auth::Subject> p4) { return call_method<"createMBean", jni::ref<javax::management::ObjectInstance>>(p1, p2, p3, p4); }
	jni::ref<javax::management::ObjectInstance> createMBean(jni::ref<java::lang::String> p1, jni::ref<javax::management::ObjectName> p2, jni::ref<javax::security::auth::Subject> p3) { return call_method<"createMBean", jni::ref<javax::management::ObjectInstance>>(p1, p2, p3); }
	jni::ref<javax::management::remote::NotificationResult> fetchNotifications(jlong p1, jint p2, jlong p3) { return call_method<"fetchNotifications", jni::ref<javax::management::remote::NotificationResult>>(p1, p2, p3); }
	jni::ref<java::lang::Object> getAttribute(jni::ref<javax::management::ObjectName> p1, jni::ref<java::lang::String> p2, jni::ref<javax::security::auth::Subject> p3) { return call_method<"getAttribute", jni::ref<java::lang::Object>>(p1, p2, p3); }
	jni::ref<javax::management::AttributeList> getAttributes(jni::ref<javax::management::ObjectName> p1, jni::ref<jni::array<java::lang::String>> p2, jni::ref<javax::security::auth::Subject> p3) { return call_method<"getAttributes", jni::ref<javax::management::AttributeList>>(p1, p2, p3); }
	jni::ref<java::lang::String> getConnectionId() { return call_method<"getConnectionId", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getDefaultDomain(jni::ref<javax::security::auth::Subject> p1) { return call_method<"getDefaultDomain", jni::ref<java::lang::String>>(p1); }
	jni::ref<jni::array<java::lang::String>> getDomains(jni::ref<javax::security::auth::Subject> p1) { return call_method<"getDomains", jni::ref<jni::array<java::lang::String>>>(p1); }
	jni::ref<java::lang::Integer> getMBeanCount(jni::ref<javax::security::auth::Subject> p1) { return call_method<"getMBeanCount", jni::ref<java::lang::Integer>>(p1); }
	jni::ref<javax::management::MBeanInfo> getMBeanInfo(jni::ref<javax::management::ObjectName> p1, jni::ref<javax::security::auth::Subject> p2) { return call_method<"getMBeanInfo", jni::ref<javax::management::MBeanInfo>>(p1, p2); }
	jni::ref<javax::management::ObjectInstance> getObjectInstance(jni::ref<javax::management::ObjectName> p1, jni::ref<javax::security::auth::Subject> p2) { return call_method<"getObjectInstance", jni::ref<javax::management::ObjectInstance>>(p1, p2); }
	jni::ref<java::lang::Object> invoke(jni::ref<javax::management::ObjectName> p1, jni::ref<java::lang::String> p2, jni::ref<java::rmi::MarshalledObject> p3, jni::ref<jni::array<java::lang::String>> p4, jni::ref<javax::security::auth::Subject> p5) { return call_method<"invoke", jni::ref<java::lang::Object>>(p1, p2, p3, p4, p5); }
	jboolean isInstanceOf(jni::ref<javax::management::ObjectName> p1, jni::ref<java::lang::String> p2, jni::ref<javax::security::auth::Subject> p3) { return call_method<"isInstanceOf", jboolean>(p1, p2, p3); }
	jboolean isRegistered(jni::ref<javax::management::ObjectName> p1, jni::ref<javax::security::auth::Subject> p2) { return call_method<"isRegistered", jboolean>(p1, p2); }
	jni::ref<java::util::Set> queryMBeans(jni::ref<javax::management::ObjectName> p1, jni::ref<java::rmi::MarshalledObject> p2, jni::ref<javax::security::auth::Subject> p3) { return call_method<"queryMBeans", jni::ref<java::util::Set>>(p1, p2, p3); }
	jni::ref<java::util::Set> queryNames(jni::ref<javax::management::ObjectName> p1, jni::ref<java::rmi::MarshalledObject> p2, jni::ref<javax::security::auth::Subject> p3) { return call_method<"queryNames", jni::ref<java::util::Set>>(p1, p2, p3); }
	void removeNotificationListener(jni::ref<javax::management::ObjectName> p1, jni::ref<javax::management::ObjectName> p2, jni::ref<java::rmi::MarshalledObject> p3, jni::ref<java::rmi::MarshalledObject> p4, jni::ref<javax::security::auth::Subject> p5) { return call_method<"removeNotificationListener", void>(p1, p2, p3, p4, p5); }
	void removeNotificationListener(jni::ref<javax::management::ObjectName> p1, jni::ref<javax::management::ObjectName> p2, jni::ref<javax::security::auth::Subject> p3) { return call_method<"removeNotificationListener", void>(p1, p2, p3); }
	void removeNotificationListeners(jni::ref<javax::management::ObjectName> p1, jni::ref<jni::array<java::lang::Integer>> p2, jni::ref<javax::security::auth::Subject> p3) { return call_method<"removeNotificationListeners", void>(p1, p2, p3); }
	void setAttribute(jni::ref<javax::management::ObjectName> p1, jni::ref<java::rmi::MarshalledObject> p2, jni::ref<javax::security::auth::Subject> p3) { return call_method<"setAttribute", void>(p1, p2, p3); }
	jni::ref<javax::management::AttributeList> setAttributes(jni::ref<javax::management::ObjectName> p1, jni::ref<java::rmi::MarshalledObject> p2, jni::ref<javax::security::auth::Subject> p3) { return call_method<"setAttributes", jni::ref<javax::management::AttributeList>>(p1, p2, p3); }
	void unregisterMBean(jni::ref<javax::management::ObjectName> p1, jni::ref<javax::security::auth::Subject> p2) { return call_method<"unregisterMBean", void>(p1, p2); }

protected:

	_RMIConnection_Stub(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_MANAGEMENT_REMOTE_RMI__RMICONNECTION_STUB
