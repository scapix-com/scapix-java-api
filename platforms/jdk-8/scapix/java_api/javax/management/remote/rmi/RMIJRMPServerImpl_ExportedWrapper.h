// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/javax/management/remote/rmi/RMIServer.h>
#include <scapix/java_api/sun/rmi/server/DeserializationChecker.h>

#ifndef SCAPIX_JAVA_API_JAVAX_MANAGEMENT_REMOTE_RMI_RMIJRMPSERVERIMPL_EXPORTEDWRAPPER_FWD
#define SCAPIX_JAVA_API_JAVAX_MANAGEMENT_REMOTE_RMI_RMIJRMPSERVERIMPL_EXPORTEDWRAPPER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::management::remote::rmi { class RMIJRMPServerImpl_ExportedWrapper; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::management::remote::rmi::RMIJRMPServerImpl_ExportedWrapper>
{
	static constexpr fixed_string class_name = "javax/management/remote/rmi/RMIJRMPServerImpl$ExportedWrapper";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::javax::management::remote::rmi::RMIServer, scapix::java_api::sun::rmi::server::DeserializationChecker>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_MANAGEMENT_REMOTE_RMI_RMIJRMPSERVERIMPL_EXPORTEDWRAPPER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_MANAGEMENT_REMOTE_RMI_RMIJRMPSERVERIMPL_EXPORTEDWRAPPER)
#define SCAPIX_JAVA_API_JAVAX_MANAGEMENT_REMOTE_RMI_RMIJRMPSERVERIMPL_EXPORTEDWRAPPER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/ObjectStreamClass.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/reflect/Method.h>
#include <scapix/java_api/javax/management/remote/rmi/RMIConnection.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class javax::management::remote::rmi::RMIJRMPServerImpl_ExportedWrapper : public jni::object_base<"javax/management/remote/rmi/RMIJRMPServerImpl$ExportedWrapper",
	java::lang::Object,
	javax::management::remote::rmi::RMIServer,
	sun::rmi::server::DeserializationChecker>
{
public:

	jni::ref<java::lang::String> getVersion() { return call_method<"getVersion", jni::ref<java::lang::String>>(); }
	jni::ref<javax::management::remote::rmi::RMIConnection> newClient(jni::ref<java::lang::Object> p1) { return call_method<"newClient", jni::ref<javax::management::remote::rmi::RMIConnection>>(p1); }
	void check(jni::ref<java::lang::reflect::Method> p1, jni::ref<java::io::ObjectStreamClass> p2, jint p3, jint p4) { return call_method<"check", void>(p1, p2, p3, p4); }
	void checkProxyClass(jni::ref<java::lang::reflect::Method> p1, jni::ref<jni::array<java::lang::String>> p2, jint p3, jint p4) { return call_method<"checkProxyClass", void>(p1, p2, p3, p4); }

protected:

	RMIJRMPServerImpl_ExportedWrapper(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_MANAGEMENT_REMOTE_RMI_RMIJRMPSERVERIMPL_EXPORTEDWRAPPER
