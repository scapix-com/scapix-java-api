// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/management/remote/JMXConnectorServer.h>

#ifndef SCAPIX_JAVA_API_JAVAX_MANAGEMENT_REMOTE_RMI_RMICONNECTORSERVER_FWD
#define SCAPIX_JAVA_API_JAVAX_MANAGEMENT_REMOTE_RMI_RMICONNECTORSERVER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::management::remote::rmi { class RMIConnectorServer; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::management::remote::rmi::RMIConnectorServer>
{
	static constexpr fixed_string class_name = "javax/management/remote/rmi/RMIConnectorServer";
	using base_classes = std::tuple<scapix::java_api::javax::management::remote::JMXConnectorServer>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_MANAGEMENT_REMOTE_RMI_RMICONNECTORSERVER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_MANAGEMENT_REMOTE_RMI_RMICONNECTORSERVER)
#define SCAPIX_JAVA_API_JAVAX_MANAGEMENT_REMOTE_RMI_RMICONNECTORSERVER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Map.h>
#include <scapix/java_api/javax/management/MBeanServer.h>
#include <scapix/java_api/javax/management/remote/JMXConnector.h>
#include <scapix/java_api/javax/management/remote/JMXServiceURL.h>
#include <scapix/java_api/javax/management/remote/MBeanServerForwarder.h>
#include <scapix/java_api/javax/management/remote/rmi/RMIServerImpl.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::management::remote::rmi::RMIConnectorServer : public jni::object_base<"javax/management/remote/rmi/RMIConnectorServer",
	javax::management::remote::JMXConnectorServer>
{
public:

	static jni::ref<java::lang::String> JNDI_REBIND_ATTRIBUTE() { return get_static_field<"JNDI_REBIND_ATTRIBUTE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> RMI_CLIENT_SOCKET_FACTORY_ATTRIBUTE() { return get_static_field<"RMI_CLIENT_SOCKET_FACTORY_ATTRIBUTE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> RMI_SERVER_SOCKET_FACTORY_ATTRIBUTE() { return get_static_field<"RMI_SERVER_SOCKET_FACTORY_ATTRIBUTE", jni::ref<java::lang::String>>(); }

	static jni::ref<javax::management::remote::rmi::RMIConnectorServer> new_object(jni::ref<javax::management::remote::JMXServiceURL> p1, jni::ref<java::util::Map> p2) { return base_::new_object(p1, p2); }
	static jni::ref<javax::management::remote::rmi::RMIConnectorServer> new_object(jni::ref<javax::management::remote::JMXServiceURL> p1, jni::ref<java::util::Map> p2, jni::ref<javax::management::MBeanServer> p3) { return base_::new_object(p1, p2, p3); }
	static jni::ref<javax::management::remote::rmi::RMIConnectorServer> new_object(jni::ref<javax::management::remote::JMXServiceURL> p1, jni::ref<java::util::Map> p2, jni::ref<javax::management::remote::rmi::RMIServerImpl> p3, jni::ref<javax::management::MBeanServer> p4) { return base_::new_object(p1, p2, p3, p4); }
	jni::ref<javax::management::remote::JMXConnector> toJMXConnector(jni::ref<java::util::Map> p1) { return call_method<"toJMXConnector", jni::ref<javax::management::remote::JMXConnector>>(p1); }
	void start() { return call_method<"start", void>(); }
	void stop() { return call_method<"stop", void>(); }
	jboolean isActive() { return call_method<"isActive", jboolean>(); }
	jni::ref<javax::management::remote::JMXServiceURL> getAddress() { return call_method<"getAddress", jni::ref<javax::management::remote::JMXServiceURL>>(); }
	jni::ref<java::util::Map> getAttributes() { return call_method<"getAttributes", jni::ref<java::util::Map>>(); }
	void setMBeanServerForwarder(jni::ref<javax::management::remote::MBeanServerForwarder> p1) { return call_method<"setMBeanServerForwarder", void>(p1); }

protected:

	RMIConnectorServer(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_MANAGEMENT_REMOTE_RMI_RMICONNECTORSERVER
