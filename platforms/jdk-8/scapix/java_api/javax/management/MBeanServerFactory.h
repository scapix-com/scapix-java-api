// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_MANAGEMENT_MBEANSERVERFACTORY_FWD
#define SCAPIX_JAVA_API_JAVAX_MANAGEMENT_MBEANSERVERFACTORY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::management { class MBeanServerFactory; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::management::MBeanServerFactory>
{
	static constexpr fixed_string class_name = "javax/management/MBeanServerFactory";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_MANAGEMENT_MBEANSERVERFACTORY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_MANAGEMENT_MBEANSERVERFACTORY)
#define SCAPIX_JAVA_API_JAVAX_MANAGEMENT_MBEANSERVERFACTORY

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/ArrayList.h>
#include <scapix/java_api/javax/management/MBeanServer.h>
#include <scapix/java_api/javax/management/loading/ClassLoaderRepository.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::management::MBeanServerFactory : public jni::object_base<"javax/management/MBeanServerFactory",
	java::lang::Object>
{
public:

	static void releaseMBeanServer(jni::ref<javax::management::MBeanServer> p1) { return call_static_method<"releaseMBeanServer", void>(p1); }
	static jni::ref<javax::management::MBeanServer> createMBeanServer() { return call_static_method<"createMBeanServer", jni::ref<javax::management::MBeanServer>>(); }
	static jni::ref<javax::management::MBeanServer> createMBeanServer(jni::ref<java::lang::String> p1) { return call_static_method<"createMBeanServer", jni::ref<javax::management::MBeanServer>>(p1); }
	static jni::ref<javax::management::MBeanServer> newMBeanServer() { return call_static_method<"newMBeanServer", jni::ref<javax::management::MBeanServer>>(); }
	static jni::ref<javax::management::MBeanServer> newMBeanServer(jni::ref<java::lang::String> p1) { return call_static_method<"newMBeanServer", jni::ref<javax::management::MBeanServer>>(p1); }
	static jni::ref<java::util::ArrayList> findMBeanServer(jni::ref<java::lang::String> p1) { return call_static_method<"findMBeanServer", jni::ref<java::util::ArrayList>>(p1); }
	static jni::ref<javax::management::loading::ClassLoaderRepository> getClassLoaderRepository(jni::ref<javax::management::MBeanServer> p1) { return call_static_method<"getClassLoaderRepository", jni::ref<javax::management::loading::ClassLoaderRepository>>(p1); }

protected:

	MBeanServerFactory(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_MANAGEMENT_MBEANSERVERFACTORY
