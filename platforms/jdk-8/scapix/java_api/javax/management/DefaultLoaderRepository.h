// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_MANAGEMENT_DEFAULTLOADERREPOSITORY_FWD
#define SCAPIX_JAVA_API_JAVAX_MANAGEMENT_DEFAULTLOADERREPOSITORY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::management { class DefaultLoaderRepository; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::management::DefaultLoaderRepository>
{
	static constexpr fixed_string class_name = "javax/management/DefaultLoaderRepository";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_MANAGEMENT_DEFAULTLOADERREPOSITORY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_MANAGEMENT_DEFAULTLOADERREPOSITORY)
#define SCAPIX_JAVA_API_JAVAX_MANAGEMENT_DEFAULTLOADERREPOSITORY

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/ClassLoader.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::management::DefaultLoaderRepository : public jni::object_base<"javax/management/DefaultLoaderRepository",
	java::lang::Object>
{
public:

	static jni::ref<javax::management::DefaultLoaderRepository> new_object() { return base_::new_object(); }
	static jni::ref<java::lang::Class> loadClass(jni::ref<java::lang::String> p1) { return call_static_method<"loadClass", jni::ref<java::lang::Class>>(p1); }
	static jni::ref<java::lang::Class> loadClassWithout(jni::ref<java::lang::ClassLoader> p1, jni::ref<java::lang::String> p2) { return call_static_method<"loadClassWithout", jni::ref<java::lang::Class>>(p1, p2); }

protected:

	DefaultLoaderRepository(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_MANAGEMENT_DEFAULTLOADERREPOSITORY
