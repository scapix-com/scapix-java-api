// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_API_JAVAX_MANAGEMENT_OPENMBEAN_OPENTYPE_FWD
#define SCAPIX_JAVA_API_JAVAX_MANAGEMENT_OPENMBEAN_OPENTYPE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::management::openmbean { class OpenType; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::management::openmbean::OpenType>
{
	static constexpr fixed_string class_name = "javax/management/openmbean/OpenType";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::io::Serializable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_MANAGEMENT_OPENMBEAN_OPENTYPE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_MANAGEMENT_OPENMBEAN_OPENTYPE)
#define SCAPIX_JAVA_API_JAVAX_MANAGEMENT_OPENMBEAN_OPENTYPE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::management::openmbean::OpenType : public jni::object_base<"javax/management/openmbean/OpenType",
	java::lang::Object,
	java::io::Serializable>
{
public:

	static jni::ref<java::util::List> ALLOWED_CLASSNAMES_LIST() { return get_static_field<"ALLOWED_CLASSNAMES_LIST", jni::ref<java::util::List>>(); }
	static jni::ref<jni::array<java::lang::String>> ALLOWED_CLASSNAMES() { return get_static_field<"ALLOWED_CLASSNAMES", jni::ref<jni::array<java::lang::String>>>(); }

	jni::ref<java::lang::String> getClassName() { return call_method<"getClassName", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getTypeName() { return call_method<"getTypeName", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getDescription() { return call_method<"getDescription", jni::ref<java::lang::String>>(); }
	jboolean isArray() { return call_method<"isArray", jboolean>(); }
	jboolean isValue(jni::ref<java::lang::Object> p1) { return call_method<"isValue", jboolean>(p1); }
	jboolean equals(jni::ref<java::lang::Object> p1) { return call_method<"equals", jboolean>(p1); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	OpenType(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_MANAGEMENT_OPENMBEAN_OPENTYPE
