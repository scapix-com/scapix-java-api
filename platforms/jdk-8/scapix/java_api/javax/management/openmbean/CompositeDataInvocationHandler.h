// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/reflect/InvocationHandler.h>

#ifndef SCAPIX_JAVA_API_JAVAX_MANAGEMENT_OPENMBEAN_COMPOSITEDATAINVOCATIONHANDLER_FWD
#define SCAPIX_JAVA_API_JAVAX_MANAGEMENT_OPENMBEAN_COMPOSITEDATAINVOCATIONHANDLER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::management::openmbean { class CompositeDataInvocationHandler; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::management::openmbean::CompositeDataInvocationHandler>
{
	static constexpr fixed_string class_name = "javax/management/openmbean/CompositeDataInvocationHandler";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::lang::reflect::InvocationHandler>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_MANAGEMENT_OPENMBEAN_COMPOSITEDATAINVOCATIONHANDLER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_MANAGEMENT_OPENMBEAN_COMPOSITEDATAINVOCATIONHANDLER)
#define SCAPIX_JAVA_API_JAVAX_MANAGEMENT_OPENMBEAN_COMPOSITEDATAINVOCATIONHANDLER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/reflect/Method.h>
#include <scapix/java_api/javax/management/openmbean/CompositeData.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::management::openmbean::CompositeDataInvocationHandler : public jni::object_base<"javax/management/openmbean/CompositeDataInvocationHandler",
	java::lang::Object,
	java::lang::reflect::InvocationHandler>
{
public:

	static jni::ref<javax::management::openmbean::CompositeDataInvocationHandler> new_object(jni::ref<javax::management::openmbean::CompositeData> p1) { return base_::new_object(p1); }
	jni::ref<javax::management::openmbean::CompositeData> getCompositeData() { return call_method<"getCompositeData", jni::ref<javax::management::openmbean::CompositeData>>(); }
	jni::ref<java::lang::Object> invoke(jni::ref<java::lang::Object> p1, jni::ref<java::lang::reflect::Method> p2, jni::ref<jni::array<java::lang::Object>> p3) { return call_method<"invoke", jni::ref<java::lang::Object>>(p1, p2, p3); }

protected:

	CompositeDataInvocationHandler(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_MANAGEMENT_OPENMBEAN_COMPOSITEDATAINVOCATIONHANDLER
