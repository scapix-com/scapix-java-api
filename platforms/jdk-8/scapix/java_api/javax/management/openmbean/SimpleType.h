// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/management/openmbean/OpenType.h>

#ifndef SCAPIX_JAVA_API_JAVAX_MANAGEMENT_OPENMBEAN_SIMPLETYPE_FWD
#define SCAPIX_JAVA_API_JAVAX_MANAGEMENT_OPENMBEAN_SIMPLETYPE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::management::openmbean { class SimpleType; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::management::openmbean::SimpleType>
{
	static constexpr fixed_string class_name = "javax/management/openmbean/SimpleType";
	using base_classes = std::tuple<scapix::java_api::javax::management::openmbean::OpenType>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_MANAGEMENT_OPENMBEAN_SIMPLETYPE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_MANAGEMENT_OPENMBEAN_SIMPLETYPE)
#define SCAPIX_JAVA_API_JAVAX_MANAGEMENT_OPENMBEAN_SIMPLETYPE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::management::openmbean::SimpleType : public jni::object_base<"javax/management/openmbean/SimpleType",
	javax::management::openmbean::OpenType>
{
public:

	static jni::ref<javax::management::openmbean::SimpleType> VOID() { return get_static_field<"VOID", jni::ref<javax::management::openmbean::SimpleType>>(); }
	static jni::ref<javax::management::openmbean::SimpleType> BOOLEAN() { return get_static_field<"BOOLEAN", jni::ref<javax::management::openmbean::SimpleType>>(); }
	static jni::ref<javax::management::openmbean::SimpleType> CHARACTER() { return get_static_field<"CHARACTER", jni::ref<javax::management::openmbean::SimpleType>>(); }
	static jni::ref<javax::management::openmbean::SimpleType> BYTE() { return get_static_field<"BYTE", jni::ref<javax::management::openmbean::SimpleType>>(); }
	static jni::ref<javax::management::openmbean::SimpleType> SHORT() { return get_static_field<"SHORT", jni::ref<javax::management::openmbean::SimpleType>>(); }
	static jni::ref<javax::management::openmbean::SimpleType> INTEGER() { return get_static_field<"INTEGER", jni::ref<javax::management::openmbean::SimpleType>>(); }
	static jni::ref<javax::management::openmbean::SimpleType> LONG() { return get_static_field<"LONG", jni::ref<javax::management::openmbean::SimpleType>>(); }
	static jni::ref<javax::management::openmbean::SimpleType> FLOAT() { return get_static_field<"FLOAT", jni::ref<javax::management::openmbean::SimpleType>>(); }
	static jni::ref<javax::management::openmbean::SimpleType> DOUBLE() { return get_static_field<"DOUBLE", jni::ref<javax::management::openmbean::SimpleType>>(); }
	static jni::ref<javax::management::openmbean::SimpleType> STRING() { return get_static_field<"STRING", jni::ref<javax::management::openmbean::SimpleType>>(); }
	static jni::ref<javax::management::openmbean::SimpleType> BIGDECIMAL() { return get_static_field<"BIGDECIMAL", jni::ref<javax::management::openmbean::SimpleType>>(); }
	static jni::ref<javax::management::openmbean::SimpleType> BIGINTEGER() { return get_static_field<"BIGINTEGER", jni::ref<javax::management::openmbean::SimpleType>>(); }
	static jni::ref<javax::management::openmbean::SimpleType> DATE() { return get_static_field<"DATE", jni::ref<javax::management::openmbean::SimpleType>>(); }
	static jni::ref<javax::management::openmbean::SimpleType> OBJECTNAME() { return get_static_field<"OBJECTNAME", jni::ref<javax::management::openmbean::SimpleType>>(); }

	jboolean isValue(jni::ref<java::lang::Object> p1) { return call_method<"isValue", jboolean>(p1); }
	jboolean equals(jni::ref<java::lang::Object> p1) { return call_method<"equals", jboolean>(p1); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::Object> readResolve() { return call_method<"readResolve", jni::ref<java::lang::Object>>(); }

protected:

	SimpleType(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_MANAGEMENT_OPENMBEAN_SIMPLETYPE
