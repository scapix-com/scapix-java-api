// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/util/ArrayList.h>

#ifndef SCAPIX_JAVA_API_JAVAX_MANAGEMENT_ATTRIBUTELIST_FWD
#define SCAPIX_JAVA_API_JAVAX_MANAGEMENT_ATTRIBUTELIST_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::management { class AttributeList; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::management::AttributeList>
{
	static constexpr fixed_string class_name = "javax/management/AttributeList";
	using base_classes = std::tuple<scapix::java_api::java::util::ArrayList>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_MANAGEMENT_ATTRIBUTELIST_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_MANAGEMENT_ATTRIBUTELIST)
#define SCAPIX_JAVA_API_JAVAX_MANAGEMENT_ATTRIBUTELIST

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/util/Collection.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/javax/management/Attribute.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::management::AttributeList : public jni::object_base<"javax/management/AttributeList",
	java::util::ArrayList>
{
public:

	static jni::ref<javax::management::AttributeList> new_object() { return base_::new_object(); }
	static jni::ref<javax::management::AttributeList> new_object(jint p1) { return base_::new_object(p1); }
	static jni::ref<javax::management::AttributeList> new_object(jni::ref<javax::management::AttributeList> p1) { return base_::new_object(p1); }
	static jni::ref<javax::management::AttributeList> new_object(jni::ref<java::util::List> p1) { return base_::new_object(p1); }
	jni::ref<java::util::List> asList() { return call_method<"asList", jni::ref<java::util::List>>(); }
	void add(jni::ref<javax::management::Attribute> p1) { return call_method<"add", void>(p1); }
	void add(jint p1, jni::ref<javax::management::Attribute> p2) { return call_method<"add", void>(p1, p2); }
	void set(jint p1, jni::ref<javax::management::Attribute> p2) { return call_method<"set", void>(p1, p2); }
	jboolean addAll(jni::ref<javax::management::AttributeList> p1) { return call_method<"addAll", jboolean>(p1); }
	jboolean addAll(jint p1, jni::ref<javax::management::AttributeList> p2) { return call_method<"addAll", jboolean>(p1, p2); }
	jboolean add(jni::ref<java::lang::Object> p1) { return call_method<"add", jboolean>(p1); }
	void add(jint p1, jni::ref<java::lang::Object> p2) { return call_method<"add", void>(p1, p2); }
	jboolean addAll(jni::ref<java::util::Collection> p1) { return call_method<"addAll", jboolean>(p1); }
	jboolean addAll(jint p1, jni::ref<java::util::Collection> p2) { return call_method<"addAll", jboolean>(p1, p2); }
	jni::ref<java::lang::Object> set(jint p1, jni::ref<java::lang::Object> p2) { return call_method<"set", jni::ref<java::lang::Object>>(p1, p2); }

protected:

	AttributeList(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_MANAGEMENT_ATTRIBUTELIST
