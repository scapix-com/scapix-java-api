// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/imageio/ImageTypeSpecifier.h>

#ifndef SCAPIX_JAVA_API_JAVAX_IMAGEIO_IMAGETYPESPECIFIER_PACKED_FWD
#define SCAPIX_JAVA_API_JAVAX_IMAGEIO_IMAGETYPESPECIFIER_PACKED_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::imageio { class ImageTypeSpecifier_Packed; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::imageio::ImageTypeSpecifier_Packed>
{
	static constexpr fixed_string class_name = "javax/imageio/ImageTypeSpecifier$Packed";
	using base_classes = std::tuple<scapix::java_api::javax::imageio::ImageTypeSpecifier>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_IMAGEIO_IMAGETYPESPECIFIER_PACKED_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_IMAGEIO_IMAGETYPESPECIFIER_PACKED)
#define SCAPIX_JAVA_API_JAVAX_IMAGEIO_IMAGETYPESPECIFIER_PACKED

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/color/ColorSpace.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class javax::imageio::ImageTypeSpecifier_Packed : public jni::object_base<"javax/imageio/ImageTypeSpecifier$Packed",
	javax::imageio::ImageTypeSpecifier>
{
public:

	static jni::ref<javax::imageio::ImageTypeSpecifier_Packed> new_object(jni::ref<java::awt::color::ColorSpace> p1, jint p2, jint p3, jint p4, jint p5, jint p6, jboolean p7) { return base_::new_object(p1, p2, p3, p4, p5, p6, p7); }

protected:

	ImageTypeSpecifier_Packed(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_IMAGEIO_IMAGETYPESPECIFIER_PACKED
