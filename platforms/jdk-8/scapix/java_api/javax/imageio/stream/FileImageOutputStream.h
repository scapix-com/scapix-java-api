// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/imageio/stream/ImageOutputStreamImpl.h>

#ifndef SCAPIX_JAVA_API_JAVAX_IMAGEIO_STREAM_FILEIMAGEOUTPUTSTREAM_FWD
#define SCAPIX_JAVA_API_JAVAX_IMAGEIO_STREAM_FILEIMAGEOUTPUTSTREAM_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::imageio::stream { class FileImageOutputStream; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::imageio::stream::FileImageOutputStream>
{
	static constexpr fixed_string class_name = "javax/imageio/stream/FileImageOutputStream";
	using base_classes = std::tuple<scapix::java_api::javax::imageio::stream::ImageOutputStreamImpl>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_IMAGEIO_STREAM_FILEIMAGEOUTPUTSTREAM_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_IMAGEIO_STREAM_FILEIMAGEOUTPUTSTREAM)
#define SCAPIX_JAVA_API_JAVAX_IMAGEIO_STREAM_FILEIMAGEOUTPUTSTREAM

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/File.h>
#include <scapix/java_api/java/io/RandomAccessFile.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::imageio::stream::FileImageOutputStream : public jni::object_base<"javax/imageio/stream/FileImageOutputStream",
	javax::imageio::stream::ImageOutputStreamImpl>
{
public:

	static jni::ref<javax::imageio::stream::FileImageOutputStream> new_object(jni::ref<java::io::File> p1) { return base_::new_object(p1); }
	static jni::ref<javax::imageio::stream::FileImageOutputStream> new_object(jni::ref<java::io::RandomAccessFile> p1) { return base_::new_object(p1); }
	jint read() { return call_method<"read", jint>(); }
	jint read(jni::ref<jni::array<jbyte>> p1, jint p2, jint p3) { return call_method<"read", jint>(p1, p2, p3); }
	void write(jint p1) { return call_method<"write", void>(p1); }
	void write(jni::ref<jni::array<jbyte>> p1, jint p2, jint p3) { return call_method<"write", void>(p1, p2, p3); }
	jlong length() { return call_method<"length", jlong>(); }
	void seek(jlong p1) { return call_method<"seek", void>(p1); }
	void close() { return call_method<"close", void>(); }

protected:

	FileImageOutputStream(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_IMAGEIO_STREAM_FILEIMAGEOUTPUTSTREAM
