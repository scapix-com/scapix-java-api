// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/imageio/stream/ImageInputStreamImpl.h>

#ifndef SCAPIX_JAVA_API_JAVAX_IMAGEIO_STREAM_MEMORYCACHEIMAGEINPUTSTREAM_FWD
#define SCAPIX_JAVA_API_JAVAX_IMAGEIO_STREAM_MEMORYCACHEIMAGEINPUTSTREAM_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::imageio::stream { class MemoryCacheImageInputStream; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::imageio::stream::MemoryCacheImageInputStream>
{
	static constexpr fixed_string class_name = "javax/imageio/stream/MemoryCacheImageInputStream";
	using base_classes = std::tuple<scapix::java_api::javax::imageio::stream::ImageInputStreamImpl>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_IMAGEIO_STREAM_MEMORYCACHEIMAGEINPUTSTREAM_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_IMAGEIO_STREAM_MEMORYCACHEIMAGEINPUTSTREAM)
#define SCAPIX_JAVA_API_JAVAX_IMAGEIO_STREAM_MEMORYCACHEIMAGEINPUTSTREAM

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/InputStream.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::imageio::stream::MemoryCacheImageInputStream : public jni::object_base<"javax/imageio/stream/MemoryCacheImageInputStream",
	javax::imageio::stream::ImageInputStreamImpl>
{
public:

	static jni::ref<javax::imageio::stream::MemoryCacheImageInputStream> new_object(jni::ref<java::io::InputStream> p1) { return base_::new_object(p1); }
	jint read() { return call_method<"read", jint>(); }
	jint read(jni::ref<jni::array<jbyte>> p1, jint p2, jint p3) { return call_method<"read", jint>(p1, p2, p3); }
	void flushBefore(jlong p1) { return call_method<"flushBefore", void>(p1); }
	jboolean isCached() { return call_method<"isCached", jboolean>(); }
	jboolean isCachedFile() { return call_method<"isCachedFile", jboolean>(); }
	jboolean isCachedMemory() { return call_method<"isCachedMemory", jboolean>(); }
	void close() { return call_method<"close", void>(); }

protected:

	MemoryCacheImageInputStream(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_IMAGEIO_STREAM_MEMORYCACHEIMAGEINPUTSTREAM
