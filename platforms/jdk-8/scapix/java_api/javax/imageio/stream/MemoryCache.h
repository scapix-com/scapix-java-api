// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_IMAGEIO_STREAM_MEMORYCACHE_FWD
#define SCAPIX_JAVA_API_JAVAX_IMAGEIO_STREAM_MEMORYCACHE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::imageio::stream { class MemoryCache; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::imageio::stream::MemoryCache>
{
	static constexpr fixed_string class_name = "javax/imageio/stream/MemoryCache";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_IMAGEIO_STREAM_MEMORYCACHE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_IMAGEIO_STREAM_MEMORYCACHE)
#define SCAPIX_JAVA_API_JAVAX_IMAGEIO_STREAM_MEMORYCACHE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/io/OutputStream.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class javax::imageio::stream::MemoryCache : public jni::object_base<"javax/imageio/stream/MemoryCache",
	java::lang::Object>
{
public:

	jlong loadFromStream(jni::ref<java::io::InputStream> p1, jlong p2) { return call_method<"loadFromStream", jlong>(p1, p2); }
	void writeToStream(jni::ref<java::io::OutputStream> p1, jlong p2, jlong p3) { return call_method<"writeToStream", void>(p1, p2, p3); }
	void write(jni::ref<jni::array<jbyte>> p1, jint p2, jint p3, jlong p4) { return call_method<"write", void>(p1, p2, p3, p4); }
	void write(jint p1, jlong p2) { return call_method<"write", void>(p1, p2); }
	jlong getLength() { return call_method<"getLength", jlong>(); }
	jint read(jlong p1) { return call_method<"read", jint>(p1); }
	void read(jni::ref<jni::array<jbyte>> p1, jint p2, jint p3, jlong p4) { return call_method<"read", void>(p1, p2, p3, p4); }
	void disposeBefore(jlong p1) { return call_method<"disposeBefore", void>(p1); }
	void reset() { return call_method<"reset", void>(); }

protected:

	MemoryCache(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_IMAGEIO_STREAM_MEMORYCACHE
