// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_IMAGEIO_SPI_REGISTERABLESERVICE_FWD
#define SCAPIX_JAVA_API_JAVAX_IMAGEIO_SPI_REGISTERABLESERVICE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::imageio::spi { class RegisterableService; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::imageio::spi::RegisterableService>
{
	static constexpr fixed_string class_name = "javax/imageio/spi/RegisterableService";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_IMAGEIO_SPI_REGISTERABLESERVICE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_IMAGEIO_SPI_REGISTERABLESERVICE)
#define SCAPIX_JAVA_API_JAVAX_IMAGEIO_SPI_REGISTERABLESERVICE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/javax/imageio/spi/ServiceRegistry.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::imageio::spi::RegisterableService : public jni::object_base<"javax/imageio/spi/RegisterableService",
	java::lang::Object>
{
public:

	void onRegistration(jni::ref<javax::imageio::spi::ServiceRegistry> p1, jni::ref<java::lang::Class> p2) { return call_method<"onRegistration", void>(p1, p2); }
	void onDeregistration(jni::ref<javax::imageio::spi::ServiceRegistry> p1, jni::ref<java::lang::Class> p2) { return call_method<"onDeregistration", void>(p1, p2); }

protected:

	RegisterableService(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_IMAGEIO_SPI_REGISTERABLESERVICE
