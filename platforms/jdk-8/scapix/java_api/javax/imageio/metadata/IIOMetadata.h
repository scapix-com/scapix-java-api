// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_IMAGEIO_METADATA_IIOMETADATA_FWD
#define SCAPIX_JAVA_API_JAVAX_IMAGEIO_METADATA_IIOMETADATA_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::imageio::metadata { class IIOMetadata; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::imageio::metadata::IIOMetadata>
{
	static constexpr fixed_string class_name = "javax/imageio/metadata/IIOMetadata";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_IMAGEIO_METADATA_IIOMETADATA_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_IMAGEIO_METADATA_IIOMETADATA)
#define SCAPIX_JAVA_API_JAVAX_IMAGEIO_METADATA_IIOMETADATA

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/imageio/metadata/IIOMetadataController.h>
#include <scapix/java_api/javax/imageio/metadata/IIOMetadataFormat.h>
#include <scapix/java_api/org/w3c/dom/Node.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::imageio::metadata::IIOMetadata : public jni::object_base<"javax/imageio/metadata/IIOMetadata",
	java::lang::Object>
{
public:

	jboolean isStandardMetadataFormatSupported() { return call_method<"isStandardMetadataFormatSupported", jboolean>(); }
	jboolean isReadOnly() { return call_method<"isReadOnly", jboolean>(); }
	jni::ref<java::lang::String> getNativeMetadataFormatName() { return call_method<"getNativeMetadataFormatName", jni::ref<java::lang::String>>(); }
	jni::ref<jni::array<java::lang::String>> getExtraMetadataFormatNames() { return call_method<"getExtraMetadataFormatNames", jni::ref<jni::array<java::lang::String>>>(); }
	jni::ref<jni::array<java::lang::String>> getMetadataFormatNames() { return call_method<"getMetadataFormatNames", jni::ref<jni::array<java::lang::String>>>(); }
	jni::ref<javax::imageio::metadata::IIOMetadataFormat> getMetadataFormat(jni::ref<java::lang::String> p1) { return call_method<"getMetadataFormat", jni::ref<javax::imageio::metadata::IIOMetadataFormat>>(p1); }
	jni::ref<org::w3c::dom::Node> getAsTree(jni::ref<java::lang::String> p1) { return call_method<"getAsTree", jni::ref<org::w3c::dom::Node>>(p1); }
	void mergeTree(jni::ref<java::lang::String> p1, jni::ref<org::w3c::dom::Node> p2) { return call_method<"mergeTree", void>(p1, p2); }
	void setFromTree(jni::ref<java::lang::String> p1, jni::ref<org::w3c::dom::Node> p2) { return call_method<"setFromTree", void>(p1, p2); }
	void reset() { return call_method<"reset", void>(); }
	void setController(jni::ref<javax::imageio::metadata::IIOMetadataController> p1) { return call_method<"setController", void>(p1); }
	jni::ref<javax::imageio::metadata::IIOMetadataController> getController() { return call_method<"getController", jni::ref<javax::imageio::metadata::IIOMetadataController>>(); }
	jni::ref<javax::imageio::metadata::IIOMetadataController> getDefaultController() { return call_method<"getDefaultController", jni::ref<javax::imageio::metadata::IIOMetadataController>>(); }
	jboolean hasController() { return call_method<"hasController", jboolean>(); }
	jboolean activateController() { return call_method<"activateController", jboolean>(); }

protected:

	IIOMetadata(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_IMAGEIO_METADATA_IIOMETADATA
