// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/imageio/ImageTypeSpecifier.h>

#ifndef SCAPIX_JAVA_API_JAVAX_IMAGEIO_IMAGETYPESPECIFIER_INTERLEAVED_FWD
#define SCAPIX_JAVA_API_JAVAX_IMAGEIO_IMAGETYPESPECIFIER_INTERLEAVED_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::imageio { class ImageTypeSpecifier_Interleaved; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::imageio::ImageTypeSpecifier_Interleaved>
{
	static constexpr fixed_string class_name = "javax/imageio/ImageTypeSpecifier$Interleaved";
	using base_classes = std::tuple<scapix::java_api::javax::imageio::ImageTypeSpecifier>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_IMAGEIO_IMAGETYPESPECIFIER_INTERLEAVED_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_IMAGEIO_IMAGETYPESPECIFIER_INTERLEAVED)
#define SCAPIX_JAVA_API_JAVAX_IMAGEIO_IMAGETYPESPECIFIER_INTERLEAVED

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/color/ColorSpace.h>
#include <scapix/java_api/java/lang/Object.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class javax::imageio::ImageTypeSpecifier_Interleaved : public jni::object_base<"javax/imageio/ImageTypeSpecifier$Interleaved",
	javax::imageio::ImageTypeSpecifier>
{
public:

	static jni::ref<javax::imageio::ImageTypeSpecifier_Interleaved> new_object(jni::ref<java::awt::color::ColorSpace> p1, jni::ref<jni::array<jint>> p2, jint p3, jboolean p4, jboolean p5) { return base_::new_object(p1, p2, p3, p4, p5); }
	jboolean equals(jni::ref<java::lang::Object> p1) { return call_method<"equals", jboolean>(p1); }
	jint hashCode() { return call_method<"hashCode", jint>(); }

protected:

	ImageTypeSpecifier_Interleaved(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_IMAGEIO_IMAGETYPESPECIFIER_INTERLEAVED
