// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_LANG_MODEL_UTIL_ELEMENTFILTER_FWD
#define SCAPIX_JAVA_API_JAVAX_LANG_MODEL_UTIL_ELEMENTFILTER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::lang::model::util { class ElementFilter; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::lang::model::util::ElementFilter>
{
	static constexpr fixed_string class_name = "javax/lang/model/util/ElementFilter";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_LANG_MODEL_UTIL_ELEMENTFILTER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_LANG_MODEL_UTIL_ELEMENTFILTER)
#define SCAPIX_JAVA_API_JAVAX_LANG_MODEL_UTIL_ELEMENTFILTER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Iterable.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/java/util/Set.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::lang::model::util::ElementFilter : public jni::object_base<"javax/lang/model/util/ElementFilter",
	java::lang::Object>
{
public:

	static jni::ref<java::util::List> fieldsIn(jni::ref<java::lang::Iterable> p1) { return call_static_method<"fieldsIn", jni::ref<java::util::List>>(p1); }
	static jni::ref<java::util::Set> fieldsIn(jni::ref<java::util::Set> p1) { return call_static_method<"fieldsIn", jni::ref<java::util::Set>>(p1); }
	static jni::ref<java::util::List> constructorsIn(jni::ref<java::lang::Iterable> p1) { return call_static_method<"constructorsIn", jni::ref<java::util::List>>(p1); }
	static jni::ref<java::util::Set> constructorsIn(jni::ref<java::util::Set> p1) { return call_static_method<"constructorsIn", jni::ref<java::util::Set>>(p1); }
	static jni::ref<java::util::List> methodsIn(jni::ref<java::lang::Iterable> p1) { return call_static_method<"methodsIn", jni::ref<java::util::List>>(p1); }
	static jni::ref<java::util::Set> methodsIn(jni::ref<java::util::Set> p1) { return call_static_method<"methodsIn", jni::ref<java::util::Set>>(p1); }
	static jni::ref<java::util::List> typesIn(jni::ref<java::lang::Iterable> p1) { return call_static_method<"typesIn", jni::ref<java::util::List>>(p1); }
	static jni::ref<java::util::Set> typesIn(jni::ref<java::util::Set> p1) { return call_static_method<"typesIn", jni::ref<java::util::Set>>(p1); }
	static jni::ref<java::util::List> packagesIn(jni::ref<java::lang::Iterable> p1) { return call_static_method<"packagesIn", jni::ref<java::util::List>>(p1); }
	static jni::ref<java::util::Set> packagesIn(jni::ref<java::util::Set> p1) { return call_static_method<"packagesIn", jni::ref<java::util::Set>>(p1); }

protected:

	ElementFilter(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_LANG_MODEL_UTIL_ELEMENTFILTER
