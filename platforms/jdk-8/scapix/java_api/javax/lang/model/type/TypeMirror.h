// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/javax/lang/model/AnnotatedConstruct.h>

#ifndef SCAPIX_JAVA_API_JAVAX_LANG_MODEL_TYPE_TYPEMIRROR_FWD
#define SCAPIX_JAVA_API_JAVAX_LANG_MODEL_TYPE_TYPEMIRROR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::lang::model::type { class TypeMirror; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::lang::model::type::TypeMirror>
{
	static constexpr fixed_string class_name = "javax/lang/model/type/TypeMirror";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::javax::lang::model::AnnotatedConstruct>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_LANG_MODEL_TYPE_TYPEMIRROR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_LANG_MODEL_TYPE_TYPEMIRROR)
#define SCAPIX_JAVA_API_JAVAX_LANG_MODEL_TYPE_TYPEMIRROR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/lang/model/type/TypeKind.h>
#include <scapix/java_api/javax/lang/model/type/TypeVisitor.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::lang::model::type::TypeMirror : public jni::object_base<"javax/lang/model/type/TypeMirror",
	java::lang::Object,
	javax::lang::model::AnnotatedConstruct>
{
public:

	jni::ref<javax::lang::model::type::TypeKind> getKind() { return call_method<"getKind", jni::ref<javax::lang::model::type::TypeKind>>(); }
	jboolean equals(jni::ref<java::lang::Object> p1) { return call_method<"equals", jboolean>(p1); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::Object> accept(jni::ref<javax::lang::model::type::TypeVisitor> p1, jni::ref<java::lang::Object> p2) { return call_method<"accept", jni::ref<java::lang::Object>>(p1, p2); }

protected:

	TypeMirror(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_LANG_MODEL_TYPE_TYPEMIRROR
