// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/activation/CommandMap.h>

#ifndef SCAPIX_JAVA_API_JAVAX_ACTIVATION_MAILCAPCOMMANDMAP_FWD
#define SCAPIX_JAVA_API_JAVAX_ACTIVATION_MAILCAPCOMMANDMAP_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::activation { class MailcapCommandMap; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::activation::MailcapCommandMap>
{
	static constexpr fixed_string class_name = "javax/activation/MailcapCommandMap";
	using base_classes = std::tuple<scapix::java_api::javax::activation::CommandMap>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_ACTIVATION_MAILCAPCOMMANDMAP_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_ACTIVATION_MAILCAPCOMMANDMAP)
#define SCAPIX_JAVA_API_JAVAX_ACTIVATION_MAILCAPCOMMANDMAP

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/activation/CommandInfo.h>
#include <scapix/java_api/javax/activation/DataContentHandler.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::activation::MailcapCommandMap : public jni::object_base<"javax/activation/MailcapCommandMap",
	javax::activation::CommandMap>
{
public:

	static jni::ref<javax::activation::MailcapCommandMap> new_object() { return base_::new_object(); }
	static jni::ref<javax::activation::MailcapCommandMap> new_object(jni::ref<java::lang::String> p1) { return base_::new_object(p1); }
	static jni::ref<javax::activation::MailcapCommandMap> new_object(jni::ref<java::io::InputStream> p1) { return base_::new_object(p1); }
	jni::ref<jni::array<javax::activation::CommandInfo>> getPreferredCommands(jni::ref<java::lang::String> p1) { return call_method<"getPreferredCommands", jni::ref<jni::array<javax::activation::CommandInfo>>>(p1); }
	jni::ref<jni::array<javax::activation::CommandInfo>> getAllCommands(jni::ref<java::lang::String> p1) { return call_method<"getAllCommands", jni::ref<jni::array<javax::activation::CommandInfo>>>(p1); }
	jni::ref<javax::activation::CommandInfo> getCommand(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return call_method<"getCommand", jni::ref<javax::activation::CommandInfo>>(p1, p2); }
	void addMailcap(jni::ref<java::lang::String> p1) { return call_method<"addMailcap", void>(p1); }
	jni::ref<javax::activation::DataContentHandler> createDataContentHandler(jni::ref<java::lang::String> p1) { return call_method<"createDataContentHandler", jni::ref<javax::activation::DataContentHandler>>(p1); }
	jni::ref<jni::array<java::lang::String>> getMimeTypes() { return call_method<"getMimeTypes", jni::ref<jni::array<java::lang::String>>>(); }
	jni::ref<jni::array<java::lang::String>> getNativeCommands(jni::ref<java::lang::String> p1) { return call_method<"getNativeCommands", jni::ref<jni::array<java::lang::String>>>(p1); }

protected:

	MailcapCommandMap(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_ACTIVATION_MAILCAPCOMMANDMAP
