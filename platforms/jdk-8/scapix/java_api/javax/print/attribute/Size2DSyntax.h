// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/io/Serializable.h>
#include <scapix/java_api/java/lang/Cloneable.h>

#ifndef SCAPIX_JAVA_API_JAVAX_PRINT_ATTRIBUTE_SIZE2DSYNTAX_FWD
#define SCAPIX_JAVA_API_JAVAX_PRINT_ATTRIBUTE_SIZE2DSYNTAX_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::print::attribute { class Size2DSyntax; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::print::attribute::Size2DSyntax>
{
	static constexpr fixed_string class_name = "javax/print/attribute/Size2DSyntax";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::io::Serializable, scapix::java_api::java::lang::Cloneable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_PRINT_ATTRIBUTE_SIZE2DSYNTAX_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_PRINT_ATTRIBUTE_SIZE2DSYNTAX)
#define SCAPIX_JAVA_API_JAVAX_PRINT_ATTRIBUTE_SIZE2DSYNTAX

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::print::attribute::Size2DSyntax : public jni::object_base<"javax/print/attribute/Size2DSyntax",
	java::lang::Object,
	java::io::Serializable,
	java::lang::Cloneable>
{
public:

	static jint INCH() { return get_static_field<"INCH", jint>(); }
	static jint MM() { return get_static_field<"MM", jint>(); }

	jni::ref<jni::array<jfloat>> getSize(jint p1) { return call_method<"getSize", jni::ref<jni::array<jfloat>>>(p1); }
	jfloat getX(jint p1) { return call_method<"getX", jfloat>(p1); }
	jfloat getY(jint p1) { return call_method<"getY", jfloat>(p1); }
	jni::ref<java::lang::String> toString(jint p1, jni::ref<java::lang::String> p2) { return call_method<"toString", jni::ref<java::lang::String>>(p1, p2); }
	jboolean equals(jni::ref<java::lang::Object> p1) { return call_method<"equals", jboolean>(p1); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	Size2DSyntax(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_PRINT_ATTRIBUTE_SIZE2DSYNTAX
