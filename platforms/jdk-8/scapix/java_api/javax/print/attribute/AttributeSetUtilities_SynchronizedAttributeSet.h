// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/javax/print/attribute/AttributeSet.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_API_JAVAX_PRINT_ATTRIBUTE_ATTRIBUTESETUTILITIES_SYNCHRONIZEDATTRIBUTESET_FWD
#define SCAPIX_JAVA_API_JAVAX_PRINT_ATTRIBUTE_ATTRIBUTESETUTILITIES_SYNCHRONIZEDATTRIBUTESET_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::print::attribute { class AttributeSetUtilities_SynchronizedAttributeSet; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::print::attribute::AttributeSetUtilities_SynchronizedAttributeSet>
{
	static constexpr fixed_string class_name = "javax/print/attribute/AttributeSetUtilities$SynchronizedAttributeSet";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::javax::print::attribute::AttributeSet, scapix::java_api::java::io::Serializable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_PRINT_ATTRIBUTE_ATTRIBUTESETUTILITIES_SYNCHRONIZEDATTRIBUTESET_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_PRINT_ATTRIBUTE_ATTRIBUTESETUTILITIES_SYNCHRONIZEDATTRIBUTESET)
#define SCAPIX_JAVA_API_JAVAX_PRINT_ATTRIBUTE_ATTRIBUTESETUTILITIES_SYNCHRONIZEDATTRIBUTESET

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/javax/print/attribute/Attribute.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class javax::print::attribute::AttributeSetUtilities_SynchronizedAttributeSet : public jni::object_base<"javax/print/attribute/AttributeSetUtilities$SynchronizedAttributeSet",
	java::lang::Object,
	javax::print::attribute::AttributeSet,
	java::io::Serializable>
{
public:

	static jni::ref<javax::print::attribute::AttributeSetUtilities_SynchronizedAttributeSet> new_object(jni::ref<javax::print::attribute::AttributeSet> p1) { return base_::new_object(p1); }
	jni::ref<javax::print::attribute::Attribute> get(jni::ref<java::lang::Class> p1) { return call_method<"get", jni::ref<javax::print::attribute::Attribute>>(p1); }
	jboolean add(jni::ref<javax::print::attribute::Attribute> p1) { return call_method<"add", jboolean>(p1); }
	jboolean remove(jni::ref<java::lang::Class> p1) { return call_method<"remove", jboolean>(p1); }
	jboolean remove(jni::ref<javax::print::attribute::Attribute> p1) { return call_method<"remove", jboolean>(p1); }
	jboolean containsKey(jni::ref<java::lang::Class> p1) { return call_method<"containsKey", jboolean>(p1); }
	jboolean containsValue(jni::ref<javax::print::attribute::Attribute> p1) { return call_method<"containsValue", jboolean>(p1); }
	jboolean addAll(jni::ref<javax::print::attribute::AttributeSet> p1) { return call_method<"addAll", jboolean>(p1); }
	jint size() { return call_method<"size", jint>(); }
	jni::ref<jni::array<javax::print::attribute::Attribute>> toArray() { return call_method<"toArray", jni::ref<jni::array<javax::print::attribute::Attribute>>>(); }
	void clear() { return call_method<"clear", void>(); }
	jboolean isEmpty() { return call_method<"isEmpty", jboolean>(); }
	jboolean equals(jni::ref<java::lang::Object> p1) { return call_method<"equals", jboolean>(p1); }
	jint hashCode() { return call_method<"hashCode", jint>(); }

protected:

	AttributeSetUtilities_SynchronizedAttributeSet(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_PRINT_ATTRIBUTE_ATTRIBUTESETUTILITIES_SYNCHRONIZEDATTRIBUTESET
