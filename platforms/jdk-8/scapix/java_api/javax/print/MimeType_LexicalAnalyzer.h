// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_PRINT_MIMETYPE_LEXICALANALYZER_FWD
#define SCAPIX_JAVA_API_JAVAX_PRINT_MIMETYPE_LEXICALANALYZER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::print { class MimeType_LexicalAnalyzer; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::print::MimeType_LexicalAnalyzer>
{
	static constexpr fixed_string class_name = "javax/print/MimeType$LexicalAnalyzer";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_PRINT_MIMETYPE_LEXICALANALYZER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_PRINT_MIMETYPE_LEXICALANALYZER)
#define SCAPIX_JAVA_API_JAVAX_PRINT_MIMETYPE_LEXICALANALYZER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class javax::print::MimeType_LexicalAnalyzer : public jni::object_base<"javax/print/MimeType$LexicalAnalyzer",
	java::lang::Object>
{
public:

	static jni::ref<javax::print::MimeType_LexicalAnalyzer> new_object(jni::ref<java::lang::String> p1) { return base_::new_object(p1); }
	jint getLexemeType() { return call_method<"getLexemeType", jint>(); }
	jni::ref<java::lang::String> getLexeme() { return call_method<"getLexeme", jni::ref<java::lang::String>>(); }
	jchar getLexemeFirstCharacter() { return call_method<"getLexemeFirstCharacter", jchar>(); }
	void nextLexeme() { return call_method<"nextLexeme", void>(); }

protected:

	MimeType_LexicalAnalyzer(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_PRINT_MIMETYPE_LEXICALANALYZER
