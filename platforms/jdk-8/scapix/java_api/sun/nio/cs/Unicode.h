// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/nio/charset/Charset.h>
#include <scapix/java_api/sun/nio/cs/HistoricallyNamedCharset.h>

#ifndef SCAPIX_JAVA_API_SUN_NIO_CS_UNICODE_FWD
#define SCAPIX_JAVA_API_SUN_NIO_CS_UNICODE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::nio::cs { class Unicode; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::nio::cs::Unicode>
{
	static constexpr fixed_string class_name = "sun/nio/cs/Unicode";
	using base_classes = std::tuple<scapix::java_api::java::nio::charset::Charset, scapix::java_api::sun::nio::cs::HistoricallyNamedCharset>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NIO_CS_UNICODE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_NIO_CS_UNICODE)
#define SCAPIX_JAVA_API_SUN_NIO_CS_UNICODE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::nio::cs::Unicode : public jni::object_base<"sun/nio/cs/Unicode",
	java::nio::charset::Charset,
	sun::nio::cs::HistoricallyNamedCharset>
{
public:

	static jni::ref<sun::nio::cs::Unicode> new_object(jni::ref<java::lang::String> p1, jni::ref<jni::array<java::lang::String>> p2) { return base_::new_object(p1, p2); }
	jboolean contains(jni::ref<java::nio::charset::Charset> p1) { return call_method<"contains", jboolean>(p1); }

protected:

	Unicode(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NIO_CS_UNICODE
