// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/nio/channels/spi/SelectorProvider.h>

#ifndef SCAPIX_JAVA_API_SUN_NIO_CH_SELECTORPROVIDERIMPL_FWD
#define SCAPIX_JAVA_API_SUN_NIO_CH_SELECTORPROVIDERIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::nio::ch { class SelectorProviderImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::nio::ch::SelectorProviderImpl>
{
	static constexpr fixed_string class_name = "sun/nio/ch/SelectorProviderImpl";
	using base_classes = std::tuple<scapix::java_api::java::nio::channels::spi::SelectorProvider>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NIO_CH_SELECTORPROVIDERIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_NIO_CH_SELECTORPROVIDERIMPL)
#define SCAPIX_JAVA_API_SUN_NIO_CH_SELECTORPROVIDERIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/net/ProtocolFamily.h>
#include <scapix/java_api/java/nio/channels/DatagramChannel.h>
#include <scapix/java_api/java/nio/channels/Pipe.h>
#include <scapix/java_api/java/nio/channels/ServerSocketChannel.h>
#include <scapix/java_api/java/nio/channels/SocketChannel.h>
#include <scapix/java_api/java/nio/channels/spi/AbstractSelector.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::nio::ch::SelectorProviderImpl : public jni::object_base<"sun/nio/ch/SelectorProviderImpl",
	java::nio::channels::spi::SelectorProvider>
{
public:

	static jni::ref<sun::nio::ch::SelectorProviderImpl> new_object() { return base_::new_object(); }
	jni::ref<java::nio::channels::DatagramChannel> openDatagramChannel() { return call_method<"openDatagramChannel", jni::ref<java::nio::channels::DatagramChannel>>(); }
	jni::ref<java::nio::channels::DatagramChannel> openDatagramChannel(jni::ref<java::net::ProtocolFamily> p1) { return call_method<"openDatagramChannel", jni::ref<java::nio::channels::DatagramChannel>>(p1); }
	jni::ref<java::nio::channels::Pipe> openPipe() { return call_method<"openPipe", jni::ref<java::nio::channels::Pipe>>(); }
	jni::ref<java::nio::channels::spi::AbstractSelector> openSelector() { return call_method<"openSelector", jni::ref<java::nio::channels::spi::AbstractSelector>>(); }
	jni::ref<java::nio::channels::ServerSocketChannel> openServerSocketChannel() { return call_method<"openServerSocketChannel", jni::ref<java::nio::channels::ServerSocketChannel>>(); }
	jni::ref<java::nio::channels::SocketChannel> openSocketChannel() { return call_method<"openSocketChannel", jni::ref<java::nio::channels::SocketChannel>>(); }

protected:

	SelectorProviderImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NIO_CH_SELECTORPROVIDERIMPL
