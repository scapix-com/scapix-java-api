// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/nio/channels/spi/AbstractSelectionKey.h>

#ifndef SCAPIX_JAVA_API_SUN_NIO_CH_SELECTIONKEYIMPL_FWD
#define SCAPIX_JAVA_API_SUN_NIO_CH_SELECTIONKEYIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::nio::ch { class SelectionKeyImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::nio::ch::SelectionKeyImpl>
{
	static constexpr fixed_string class_name = "sun/nio/ch/SelectionKeyImpl";
	using base_classes = std::tuple<scapix::java_api::java::nio::channels::spi::AbstractSelectionKey>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NIO_CH_SELECTIONKEYIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_NIO_CH_SELECTIONKEYIMPL)
#define SCAPIX_JAVA_API_SUN_NIO_CH_SELECTIONKEYIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/nio/channels/SelectableChannel.h>
#include <scapix/java_api/java/nio/channels/SelectionKey.h>
#include <scapix/java_api/java/nio/channels/Selector.h>
#include <scapix/java_api/sun/nio/ch/SelectorImpl.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::nio::ch::SelectionKeyImpl : public jni::object_base<"sun/nio/ch/SelectionKeyImpl",
	java::nio::channels::spi::AbstractSelectionKey>
{
public:

	jni::ref<sun::nio::ch::SelectorImpl> selector_() { return get_field<"selector", jni::ref<sun::nio::ch::SelectorImpl>>(); }

	jni::ref<java::nio::channels::SelectableChannel> channel() { return call_method<"channel", jni::ref<java::nio::channels::SelectableChannel>>(); }
	jni::ref<java::nio::channels::Selector> selector() { return call_method<"selector", jni::ref<java::nio::channels::Selector>>(); }
	jint interestOps() { return call_method<"interestOps", jint>(); }
	jni::ref<java::nio::channels::SelectionKey> interestOps(jint p1) { return call_method<"interestOps", jni::ref<java::nio::channels::SelectionKey>>(p1); }
	jint readyOps() { return call_method<"readyOps", jint>(); }
	void nioReadyOps(jint p1) { return call_method<"nioReadyOps", void>(p1); }
	jint nioReadyOps() { return call_method<"nioReadyOps", jint>(); }
	jni::ref<java::nio::channels::SelectionKey> nioInterestOps(jint p1) { return call_method<"nioInterestOps", jni::ref<java::nio::channels::SelectionKey>>(p1); }
	jint nioInterestOps() { return call_method<"nioInterestOps", jint>(); }

protected:

	SelectionKeyImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NIO_CH_SELECTIONKEYIMPL
