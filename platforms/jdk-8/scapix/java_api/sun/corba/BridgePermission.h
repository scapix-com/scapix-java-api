// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/security/BasicPermission.h>

#ifndef SCAPIX_JAVA_API_SUN_CORBA_BRIDGEPERMISSION_FWD
#define SCAPIX_JAVA_API_SUN_CORBA_BRIDGEPERMISSION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::corba { class BridgePermission; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::corba::BridgePermission>
{
	static constexpr fixed_string class_name = "sun/corba/BridgePermission";
	using base_classes = std::tuple<scapix::java_api::java::security::BasicPermission>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_CORBA_BRIDGEPERMISSION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_CORBA_BRIDGEPERMISSION)
#define SCAPIX_JAVA_API_SUN_CORBA_BRIDGEPERMISSION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::corba::BridgePermission : public jni::object_base<"sun/corba/BridgePermission",
	java::security::BasicPermission>
{
public:

	static jni::ref<sun::corba::BridgePermission> new_object(jni::ref<java::lang::String> p1) { return base_::new_object(p1); }
	static jni::ref<sun::corba::BridgePermission> new_object(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return base_::new_object(p1, p2); }

protected:

	BridgePermission(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_CORBA_BRIDGEPERMISSION
