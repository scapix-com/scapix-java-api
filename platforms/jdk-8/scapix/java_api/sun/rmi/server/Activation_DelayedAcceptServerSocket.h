// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/net/ServerSocket.h>

#ifndef SCAPIX_JAVA_API_SUN_RMI_SERVER_ACTIVATION_DELAYEDACCEPTSERVERSOCKET_FWD
#define SCAPIX_JAVA_API_SUN_RMI_SERVER_ACTIVATION_DELAYEDACCEPTSERVERSOCKET_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::rmi::server { class Activation_DelayedAcceptServerSocket; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::rmi::server::Activation_DelayedAcceptServerSocket>
{
	static constexpr fixed_string class_name = "sun/rmi/server/Activation$DelayedAcceptServerSocket";
	using base_classes = std::tuple<scapix::java_api::java::net::ServerSocket>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_RMI_SERVER_ACTIVATION_DELAYEDACCEPTSERVERSOCKET_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_RMI_SERVER_ACTIVATION_DELAYEDACCEPTSERVERSOCKET)
#define SCAPIX_JAVA_API_SUN_RMI_SERVER_ACTIVATION_DELAYEDACCEPTSERVERSOCKET

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/net/InetAddress.h>
#include <scapix/java_api/java/net/Socket.h>
#include <scapix/java_api/java/net/SocketAddress.h>
#include <scapix/java_api/java/nio/channels/ServerSocketChannel.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::rmi::server::Activation_DelayedAcceptServerSocket : public jni::object_base<"sun/rmi/server/Activation$DelayedAcceptServerSocket",
	java::net::ServerSocket>
{
public:

	void bind(jni::ref<java::net::SocketAddress> p1) { return call_method<"bind", void>(p1); }
	void bind(jni::ref<java::net::SocketAddress> p1, jint p2) { return call_method<"bind", void>(p1, p2); }
	jni::ref<java::net::InetAddress> getInetAddress() { return call_method<"getInetAddress", jni::ref<java::net::InetAddress>>(); }
	jint getLocalPort() { return call_method<"getLocalPort", jint>(); }
	jni::ref<java::net::SocketAddress> getLocalSocketAddress() { return call_method<"getLocalSocketAddress", jni::ref<java::net::SocketAddress>>(); }
	jni::ref<java::net::Socket> accept() { return call_method<"accept", jni::ref<java::net::Socket>>(); }
	void close() { return call_method<"close", void>(); }
	jni::ref<java::nio::channels::ServerSocketChannel> getChannel() { return call_method<"getChannel", jni::ref<java::nio::channels::ServerSocketChannel>>(); }
	jboolean isBound() { return call_method<"isBound", jboolean>(); }
	jboolean isClosed() { return call_method<"isClosed", jboolean>(); }
	void setSoTimeout(jint p1) { return call_method<"setSoTimeout", void>(p1); }
	jint getSoTimeout() { return call_method<"getSoTimeout", jint>(); }
	void setReuseAddress(jboolean p1) { return call_method<"setReuseAddress", void>(p1); }
	jboolean getReuseAddress() { return call_method<"getReuseAddress", jboolean>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	void setReceiveBufferSize(jint p1) { return call_method<"setReceiveBufferSize", void>(p1); }
	jint getReceiveBufferSize() { return call_method<"getReceiveBufferSize", jint>(); }

protected:

	Activation_DelayedAcceptServerSocket(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_RMI_SERVER_ACTIVATION_DELAYEDACCEPTSERVERSOCKET
