// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/sun/rmi/server/UnicastServerRef2.h>

#ifndef SCAPIX_JAVA_API_SUN_RMI_SERVER_ACTIVATABLESERVERREF_FWD
#define SCAPIX_JAVA_API_SUN_RMI_SERVER_ACTIVATABLESERVERREF_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::rmi::server { class ActivatableServerRef; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::rmi::server::ActivatableServerRef>
{
	static constexpr fixed_string class_name = "sun/rmi/server/ActivatableServerRef";
	using base_classes = std::tuple<scapix::java_api::sun::rmi::server::UnicastServerRef2>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_RMI_SERVER_ACTIVATABLESERVERREF_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_RMI_SERVER_ACTIVATABLESERVERREF)
#define SCAPIX_JAVA_API_SUN_RMI_SERVER_ACTIVATABLESERVERREF

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/ObjectOutput.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/rmi/activation/ActivationID.h>
#include <scapix/java_api/java/rmi/server/RMIClientSocketFactory.h>
#include <scapix/java_api/java/rmi/server/RMIServerSocketFactory.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::rmi::server::ActivatableServerRef : public jni::object_base<"sun/rmi/server/ActivatableServerRef",
	sun::rmi::server::UnicastServerRef2>
{
public:

	static jni::ref<sun::rmi::server::ActivatableServerRef> new_object(jni::ref<java::rmi::activation::ActivationID> p1, jint p2) { return base_::new_object(p1, p2); }
	static jni::ref<sun::rmi::server::ActivatableServerRef> new_object(jni::ref<java::rmi::activation::ActivationID> p1, jint p2, jni::ref<java::rmi::server::RMIClientSocketFactory> p3, jni::ref<java::rmi::server::RMIServerSocketFactory> p4) { return base_::new_object(p1, p2, p3, p4); }
	jni::ref<java::lang::String> getRefClass(jni::ref<java::io::ObjectOutput> p1) { return call_method<"getRefClass", jni::ref<java::lang::String>>(p1); }
	void writeExternal(jni::ref<java::io::ObjectOutput> p1) { return call_method<"writeExternal", void>(p1); }

protected:

	ActivatableServerRef(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_RMI_SERVER_ACTIVATABLESERVERREF
