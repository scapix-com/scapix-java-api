// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_RMI_SERVER_DESERIALIZATIONCHECKER_FWD
#define SCAPIX_JAVA_API_SUN_RMI_SERVER_DESERIALIZATIONCHECKER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::rmi::server { class DeserializationChecker; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::rmi::server::DeserializationChecker>
{
	static constexpr fixed_string class_name = "sun/rmi/server/DeserializationChecker";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_RMI_SERVER_DESERIALIZATIONCHECKER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_RMI_SERVER_DESERIALIZATIONCHECKER)
#define SCAPIX_JAVA_API_SUN_RMI_SERVER_DESERIALIZATIONCHECKER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/ObjectStreamClass.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/reflect/Method.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::rmi::server::DeserializationChecker : public jni::object_base<"sun/rmi/server/DeserializationChecker",
	java::lang::Object>
{
public:

	void check(jni::ref<java::lang::reflect::Method> p1, jni::ref<java::io::ObjectStreamClass> p2, jint p3, jint p4) { return call_method<"check", void>(p1, p2, p3, p4); }
	void checkProxyClass(jni::ref<java::lang::reflect::Method> p1, jni::ref<jni::array<java::lang::String>> p2, jint p3, jint p4) { return call_method<"checkProxyClass", void>(p1, p2, p3, p4); }
	void end(jint p1) { return call_method<"end", void>(p1); }

protected:

	DeserializationChecker(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_RMI_SERVER_DESERIALIZATIONCHECKER
