// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/io/ObjectOutputStream.h>

#ifndef SCAPIX_JAVA_API_SUN_RMI_SERVER_MARSHALOUTPUTSTREAM_FWD
#define SCAPIX_JAVA_API_SUN_RMI_SERVER_MARSHALOUTPUTSTREAM_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::rmi::server { class MarshalOutputStream; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::rmi::server::MarshalOutputStream>
{
	static constexpr fixed_string class_name = "sun/rmi/server/MarshalOutputStream";
	using base_classes = std::tuple<scapix::java_api::java::io::ObjectOutputStream>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_RMI_SERVER_MARSHALOUTPUTSTREAM_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_RMI_SERVER_MARSHALOUTPUTSTREAM)
#define SCAPIX_JAVA_API_SUN_RMI_SERVER_MARSHALOUTPUTSTREAM

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/OutputStream.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::rmi::server::MarshalOutputStream : public jni::object_base<"sun/rmi/server/MarshalOutputStream",
	java::io::ObjectOutputStream>
{
public:

	static jni::ref<sun::rmi::server::MarshalOutputStream> new_object(jni::ref<java::io::OutputStream> p1) { return base_::new_object(p1); }
	static jni::ref<sun::rmi::server::MarshalOutputStream> new_object(jni::ref<java::io::OutputStream> p1, jint p2) { return base_::new_object(p1, p2); }

protected:

	MarshalOutputStream(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_RMI_SERVER_MARSHALOUTPUTSTREAM
