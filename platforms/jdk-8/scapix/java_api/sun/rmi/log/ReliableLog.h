// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_RMI_LOG_RELIABLELOG_FWD
#define SCAPIX_JAVA_API_SUN_RMI_LOG_RELIABLELOG_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::rmi::log { class ReliableLog; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::rmi::log::ReliableLog>
{
	static constexpr fixed_string class_name = "sun/rmi/log/ReliableLog";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_RMI_LOG_RELIABLELOG_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_RMI_LOG_RELIABLELOG)
#define SCAPIX_JAVA_API_SUN_RMI_LOG_RELIABLELOG

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/sun/rmi/log/LogHandler.h>
#include <scapix/java_api/sun/rmi/log/ReliableLog_LogFile.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::rmi::log::ReliableLog : public jni::object_base<"sun/rmi/log/ReliableLog",
	java::lang::Object>
{
public:

	using LogFile = ReliableLog_LogFile;

	static jint PreferredMajorVersion() { return get_static_field<"PreferredMajorVersion", jint>(); }
	static jint PreferredMinorVersion() { return get_static_field<"PreferredMinorVersion", jint>(); }

	static jni::ref<sun::rmi::log::ReliableLog> new_object(jni::ref<java::lang::String> p1, jni::ref<sun::rmi::log::LogHandler> p2, jboolean p3) { return base_::new_object(p1, p2, p3); }
	static jni::ref<sun::rmi::log::ReliableLog> new_object(jni::ref<java::lang::String> p1, jni::ref<sun::rmi::log::LogHandler> p2) { return base_::new_object(p1, p2); }
	jni::ref<java::lang::Object> recover() { return call_method<"recover", jni::ref<java::lang::Object>>(); }
	void update(jni::ref<java::lang::Object> p1) { return call_method<"update", void>(p1); }
	void update(jni::ref<java::lang::Object> p1, jboolean p2) { return call_method<"update", void>(p1, p2); }
	void snapshot(jni::ref<java::lang::Object> p1) { return call_method<"snapshot", void>(p1); }
	void close() { return call_method<"close", void>(); }
	jlong snapshotSize() { return call_method<"snapshotSize", jlong>(); }
	jlong logSize() { return call_method<"logSize", jlong>(); }

protected:

	ReliableLog(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_RMI_LOG_RELIABLELOG
