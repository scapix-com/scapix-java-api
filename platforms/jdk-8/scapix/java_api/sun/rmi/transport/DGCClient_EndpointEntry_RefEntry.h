// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_RMI_TRANSPORT_DGCCLIENT_ENDPOINTENTRY_REFENTRY_FWD
#define SCAPIX_JAVA_API_SUN_RMI_TRANSPORT_DGCCLIENT_ENDPOINTENTRY_REFENTRY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::rmi::transport { class DGCClient_EndpointEntry_RefEntry; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::rmi::transport::DGCClient_EndpointEntry_RefEntry>
{
	static constexpr fixed_string class_name = "sun/rmi/transport/DGCClient$EndpointEntry$RefEntry";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_RMI_TRANSPORT_DGCCLIENT_ENDPOINTENTRY_REFENTRY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_RMI_TRANSPORT_DGCCLIENT_ENDPOINTENTRY_REFENTRY)
#define SCAPIX_JAVA_API_SUN_RMI_TRANSPORT_DGCCLIENT_ENDPOINTENTRY_REFENTRY

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/sun/rmi/transport/DGCClient_EndpointEntry.h>
#include <scapix/java_api/sun/rmi/transport/DGCClient_EndpointEntry_RefEntry_PhantomLiveRef.h>
#include <scapix/java_api/sun/rmi/transport/LiveRef.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::rmi::transport::DGCClient_EndpointEntry_RefEntry : public jni::object_base<"sun/rmi/transport/DGCClient$EndpointEntry$RefEntry",
	java::lang::Object>
{
public:

	static jni::ref<sun::rmi::transport::DGCClient_EndpointEntry_RefEntry> new_object(jni::ref<sun::rmi::transport::DGCClient_EndpointEntry> p1, jni::ref<sun::rmi::transport::LiveRef> p2) { return base_::new_object(p1, p2); }
	jni::ref<sun::rmi::transport::LiveRef> getRef() { return call_method<"getRef", jni::ref<sun::rmi::transport::LiveRef>>(); }
	void addInstanceToRefSet(jni::ref<sun::rmi::transport::LiveRef> p1) { return call_method<"addInstanceToRefSet", void>(p1); }
	void removeInstanceFromRefSet(jni::ref<sun::rmi::transport::DGCClient_EndpointEntry_RefEntry_PhantomLiveRef> p1) { return call_method<"removeInstanceFromRefSet", void>(p1); }
	jboolean isRefSetEmpty() { return call_method<"isRefSetEmpty", jboolean>(); }
	void markDirtyFailed() { return call_method<"markDirtyFailed", void>(); }
	jboolean hasDirtyFailed() { return call_method<"hasDirtyFailed", jboolean>(); }

protected:

	DGCClient_EndpointEntry_RefEntry(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_RMI_TRANSPORT_DGCCLIENT_ENDPOINTENTRY_REFENTRY
