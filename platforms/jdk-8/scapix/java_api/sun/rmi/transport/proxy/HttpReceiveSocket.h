// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/sun/rmi/transport/proxy/WrappedSocket.h>
#include <scapix/java_api/sun/rmi/transport/proxy/RMISocketInfo.h>

#ifndef SCAPIX_JAVA_API_SUN_RMI_TRANSPORT_PROXY_HTTPRECEIVESOCKET_FWD
#define SCAPIX_JAVA_API_SUN_RMI_TRANSPORT_PROXY_HTTPRECEIVESOCKET_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::rmi::transport::proxy { class HttpReceiveSocket; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::rmi::transport::proxy::HttpReceiveSocket>
{
	static constexpr fixed_string class_name = "sun/rmi/transport/proxy/HttpReceiveSocket";
	using base_classes = std::tuple<scapix::java_api::sun::rmi::transport::proxy::WrappedSocket, scapix::java_api::sun::rmi::transport::proxy::RMISocketInfo>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_RMI_TRANSPORT_PROXY_HTTPRECEIVESOCKET_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_RMI_TRANSPORT_PROXY_HTTPRECEIVESOCKET)
#define SCAPIX_JAVA_API_SUN_RMI_TRANSPORT_PROXY_HTTPRECEIVESOCKET

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/io/OutputStream.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/net/InetAddress.h>
#include <scapix/java_api/java/net/Socket.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::rmi::transport::proxy::HttpReceiveSocket : public jni::object_base<"sun/rmi/transport/proxy/HttpReceiveSocket",
	sun::rmi::transport::proxy::WrappedSocket,
	sun::rmi::transport::proxy::RMISocketInfo>
{
public:

	static jni::ref<sun::rmi::transport::proxy::HttpReceiveSocket> new_object(jni::ref<java::net::Socket> p1, jni::ref<java::io::InputStream> p2, jni::ref<java::io::OutputStream> p3) { return base_::new_object(p1, p2, p3); }
	jboolean isReusable() { return call_method<"isReusable", jboolean>(); }
	jni::ref<java::net::InetAddress> getInetAddress() { return call_method<"getInetAddress", jni::ref<java::net::InetAddress>>(); }
	jni::ref<java::io::OutputStream> getOutputStream() { return call_method<"getOutputStream", jni::ref<java::io::OutputStream>>(); }
	void close() { return call_method<"close", void>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	HttpReceiveSocket(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_RMI_TRANSPORT_PROXY_HTTPRECEIVESOCKET
