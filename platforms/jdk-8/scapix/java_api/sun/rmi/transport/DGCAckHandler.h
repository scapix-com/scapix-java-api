// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_RMI_TRANSPORT_DGCACKHANDLER_FWD
#define SCAPIX_JAVA_API_SUN_RMI_TRANSPORT_DGCACKHANDLER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::rmi::transport { class DGCAckHandler; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::rmi::transport::DGCAckHandler>
{
	static constexpr fixed_string class_name = "sun/rmi/transport/DGCAckHandler";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_RMI_TRANSPORT_DGCACKHANDLER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_RMI_TRANSPORT_DGCACKHANDLER)
#define SCAPIX_JAVA_API_SUN_RMI_TRANSPORT_DGCACKHANDLER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/rmi/server/UID.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::rmi::transport::DGCAckHandler : public jni::object_base<"sun/rmi/transport/DGCAckHandler",
	java::lang::Object>
{
public:

	static void received(jni::ref<java::rmi::server::UID> p1) { return call_static_method<"received", void>(p1); }

protected:

	DGCAckHandler(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_RMI_TRANSPORT_DGCACKHANDLER
