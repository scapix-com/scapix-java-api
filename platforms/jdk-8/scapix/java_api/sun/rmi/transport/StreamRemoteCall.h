// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/rmi/server/RemoteCall.h>

#ifndef SCAPIX_JAVA_API_SUN_RMI_TRANSPORT_STREAMREMOTECALL_FWD
#define SCAPIX_JAVA_API_SUN_RMI_TRANSPORT_STREAMREMOTECALL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::rmi::transport { class StreamRemoteCall; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::rmi::transport::StreamRemoteCall>
{
	static constexpr fixed_string class_name = "sun/rmi/transport/StreamRemoteCall";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::rmi::server::RemoteCall>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_RMI_TRANSPORT_STREAMREMOTECALL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_RMI_TRANSPORT_STREAMREMOTECALL)
#define SCAPIX_JAVA_API_SUN_RMI_TRANSPORT_STREAMREMOTECALL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/ObjectInput.h>
#include <scapix/java_api/java/io/ObjectOutput.h>
#include <scapix/java_api/java/lang/Exception.h>
#include <scapix/java_api/java/rmi/server/ObjID.h>
#include <scapix/java_api/sun/misc/ObjectInputFilter.h>
#include <scapix/java_api/sun/rmi/transport/Connection.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::rmi::transport::StreamRemoteCall : public jni::object_base<"sun/rmi/transport/StreamRemoteCall",
	java::lang::Object,
	java::rmi::server::RemoteCall>
{
public:

	static jni::ref<sun::rmi::transport::StreamRemoteCall> new_object(jni::ref<sun::rmi::transport::Connection> p1) { return base_::new_object(p1); }
	static jni::ref<sun::rmi::transport::StreamRemoteCall> new_object(jni::ref<sun::rmi::transport::Connection> p1, jni::ref<java::rmi::server::ObjID> p2, jint p3, jlong p4) { return base_::new_object(p1, p2, p3, p4); }
	jni::ref<sun::rmi::transport::Connection> getConnection() { return call_method<"getConnection", jni::ref<sun::rmi::transport::Connection>>(); }
	jni::ref<java::io::ObjectOutput> getOutputStream() { return call_method<"getOutputStream", jni::ref<java::io::ObjectOutput>>(); }
	void releaseOutputStream() { return call_method<"releaseOutputStream", void>(); }
	void setObjectInputFilter(jni::ref<sun::misc::ObjectInputFilter> p1) { return call_method<"setObjectInputFilter", void>(p1); }
	jni::ref<java::io::ObjectInput> getInputStream() { return call_method<"getInputStream", jni::ref<java::io::ObjectInput>>(); }
	void releaseInputStream() { return call_method<"releaseInputStream", void>(); }
	void discardPendingRefs() { return call_method<"discardPendingRefs", void>(); }
	jni::ref<java::io::ObjectOutput> getResultStream(jboolean p1) { return call_method<"getResultStream", jni::ref<java::io::ObjectOutput>>(p1); }
	void executeCall() { return call_method<"executeCall", void>(); }
	jni::ref<java::lang::Exception> getServerException() { return call_method<"getServerException", jni::ref<java::lang::Exception>>(); }
	void done() { return call_method<"done", void>(); }

protected:

	StreamRemoteCall(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_RMI_TRANSPORT_STREAMREMOTECALL
