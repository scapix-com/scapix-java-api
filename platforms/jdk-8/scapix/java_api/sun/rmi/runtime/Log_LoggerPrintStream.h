// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/io/PrintStream.h>

#ifndef SCAPIX_JAVA_API_SUN_RMI_RUNTIME_LOG_LOGGERPRINTSTREAM_FWD
#define SCAPIX_JAVA_API_SUN_RMI_RUNTIME_LOG_LOGGERPRINTSTREAM_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::rmi::runtime { class Log_LoggerPrintStream; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::rmi::runtime::Log_LoggerPrintStream>
{
	static constexpr fixed_string class_name = "sun/rmi/runtime/Log$LoggerPrintStream";
	using base_classes = std::tuple<scapix::java_api::java::io::PrintStream>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_RMI_RUNTIME_LOG_LOGGERPRINTSTREAM_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_RMI_RUNTIME_LOG_LOGGERPRINTSTREAM)
#define SCAPIX_JAVA_API_SUN_RMI_RUNTIME_LOG_LOGGERPRINTSTREAM

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::rmi::runtime::Log_LoggerPrintStream : public jni::object_base<"sun/rmi/runtime/Log$LoggerPrintStream",
	java::io::PrintStream>
{
public:

	void write(jint p1) { return call_method<"write", void>(p1); }
	void write(jni::ref<jni::array<jbyte>> p1, jint p2, jint p3) { return call_method<"write", void>(p1, p2, p3); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	Log_LoggerPrintStream(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_RMI_RUNTIME_LOG_LOGGERPRINTSTREAM
