// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Enum.h>

#ifndef SCAPIX_JAVA_API_SUN_AWT_OSINFO_OSTYPE_FWD
#define SCAPIX_JAVA_API_SUN_AWT_OSINFO_OSTYPE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::awt { class OSInfo_OSType; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::awt::OSInfo_OSType>
{
	static constexpr fixed_string class_name = "sun/awt/OSInfo$OSType";
	using base_classes = std::tuple<scapix::java_api::java::lang::Enum>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_OSINFO_OSTYPE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_AWT_OSINFO_OSTYPE)
#define SCAPIX_JAVA_API_SUN_AWT_OSINFO_OSTYPE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::awt::OSInfo_OSType : public jni::object_base<"sun/awt/OSInfo$OSType",
	java::lang::Enum>
{
public:

	static jni::ref<sun::awt::OSInfo_OSType> WINDOWS() { return get_static_field<"WINDOWS", jni::ref<sun::awt::OSInfo_OSType>>(); }
	static jni::ref<sun::awt::OSInfo_OSType> LINUX() { return get_static_field<"LINUX", jni::ref<sun::awt::OSInfo_OSType>>(); }
	static jni::ref<sun::awt::OSInfo_OSType> SOLARIS() { return get_static_field<"SOLARIS", jni::ref<sun::awt::OSInfo_OSType>>(); }
	static jni::ref<sun::awt::OSInfo_OSType> MACOSX() { return get_static_field<"MACOSX", jni::ref<sun::awt::OSInfo_OSType>>(); }
	static jni::ref<sun::awt::OSInfo_OSType> UNKNOWN() { return get_static_field<"UNKNOWN", jni::ref<sun::awt::OSInfo_OSType>>(); }

	static jni::ref<jni::array<sun::awt::OSInfo_OSType>> values() { return call_static_method<"values", jni::ref<jni::array<sun::awt::OSInfo_OSType>>>(); }
	static jni::ref<sun::awt::OSInfo_OSType> valueOf(jni::ref<java::lang::String> p1) { return call_static_method<"valueOf", jni::ref<sun::awt::OSInfo_OSType>>(p1); }

protected:

	OSInfo_OSType(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_OSINFO_OSTYPE
