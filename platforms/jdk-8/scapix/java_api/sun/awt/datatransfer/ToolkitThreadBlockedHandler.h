// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_AWT_DATATRANSFER_TOOLKITTHREADBLOCKEDHANDLER_FWD
#define SCAPIX_JAVA_API_SUN_AWT_DATATRANSFER_TOOLKITTHREADBLOCKEDHANDLER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::awt::datatransfer { class ToolkitThreadBlockedHandler; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::awt::datatransfer::ToolkitThreadBlockedHandler>
{
	static constexpr fixed_string class_name = "sun/awt/datatransfer/ToolkitThreadBlockedHandler";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_DATATRANSFER_TOOLKITTHREADBLOCKEDHANDLER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_AWT_DATATRANSFER_TOOLKITTHREADBLOCKEDHANDLER)
#define SCAPIX_JAVA_API_SUN_AWT_DATATRANSFER_TOOLKITTHREADBLOCKEDHANDLER

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::awt::datatransfer::ToolkitThreadBlockedHandler : public jni::object_base<"sun/awt/datatransfer/ToolkitThreadBlockedHandler",
	java::lang::Object>
{
public:

	void lock() { return call_method<"lock", void>(); }
	void unlock() { return call_method<"unlock", void>(); }
	void enter() { return call_method<"enter", void>(); }
	void exit() { return call_method<"exit", void>(); }

protected:

	ToolkitThreadBlockedHandler(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_DATATRANSFER_TOOLKITTHREADBLOCKEDHANDLER
