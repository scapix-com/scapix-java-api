// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_AWT_AWTACCESSOR_WINDOWACCESSOR_FWD
#define SCAPIX_JAVA_API_SUN_AWT_AWTACCESSOR_WINDOWACCESSOR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::awt { class AWTAccessor_WindowAccessor; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::awt::AWTAccessor_WindowAccessor>
{
	static constexpr fixed_string class_name = "sun/awt/AWTAccessor$WindowAccessor";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_AWTACCESSOR_WINDOWACCESSOR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_AWT_AWTACCESSOR_WINDOWACCESSOR)
#define SCAPIX_JAVA_API_SUN_AWT_AWTACCESSOR_WINDOWACCESSOR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Dimension.h>
#include <scapix/java_api/java/awt/Shape.h>
#include <scapix/java_api/java/awt/Window.h>
#include <scapix/java_api/java/awt/geom/Point2D.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::awt::AWTAccessor_WindowAccessor : public jni::object_base<"sun/awt/AWTAccessor$WindowAccessor",
	java::lang::Object>
{
public:

	jfloat getOpacity(jni::ref<java::awt::Window> p1) { return call_method<"getOpacity", jfloat>(p1); }
	void setOpacity(jni::ref<java::awt::Window> p1, jfloat p2) { return call_method<"setOpacity", void>(p1, p2); }
	jni::ref<java::awt::Shape> getShape(jni::ref<java::awt::Window> p1) { return call_method<"getShape", jni::ref<java::awt::Shape>>(p1); }
	void setShape(jni::ref<java::awt::Window> p1, jni::ref<java::awt::Shape> p2) { return call_method<"setShape", void>(p1, p2); }
	void setOpaque(jni::ref<java::awt::Window> p1, jboolean p2) { return call_method<"setOpaque", void>(p1, p2); }
	void updateWindow(jni::ref<java::awt::Window> p1) { return call_method<"updateWindow", void>(p1); }
	jni::ref<java::awt::Dimension> getSecurityWarningSize(jni::ref<java::awt::Window> p1) { return call_method<"getSecurityWarningSize", jni::ref<java::awt::Dimension>>(p1); }
	void setSecurityWarningSize(jni::ref<java::awt::Window> p1, jint p2, jint p3) { return call_method<"setSecurityWarningSize", void>(p1, p2, p3); }
	void setSecurityWarningPosition(jni::ref<java::awt::Window> p1, jni::ref<java::awt::geom::Point2D> p2, jfloat p3, jfloat p4) { return call_method<"setSecurityWarningPosition", void>(p1, p2, p3, p4); }
	jni::ref<java::awt::geom::Point2D> calculateSecurityWarningPosition(jni::ref<java::awt::Window> p1, jdouble p2, jdouble p3, jdouble p4, jdouble p5) { return call_method<"calculateSecurityWarningPosition", jni::ref<java::awt::geom::Point2D>>(p1, p2, p3, p4, p5); }
	void setLWRequestStatus(jni::ref<java::awt::Window> p1, jboolean p2) { return call_method<"setLWRequestStatus", void>(p1, p2); }
	jboolean isAutoRequestFocus(jni::ref<java::awt::Window> p1) { return call_method<"isAutoRequestFocus", jboolean>(p1); }
	jboolean isTrayIconWindow(jni::ref<java::awt::Window> p1) { return call_method<"isTrayIconWindow", jboolean>(p1); }
	void setTrayIconWindow(jni::ref<java::awt::Window> p1, jboolean p2) { return call_method<"setTrayIconWindow", void>(p1, p2); }
	jni::ref<jni::array<java::awt::Window>> getOwnedWindows(jni::ref<java::awt::Window> p1) { return call_method<"getOwnedWindows", jni::ref<jni::array<java::awt::Window>>>(p1); }

protected:

	AWTAccessor_WindowAccessor(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_AWTACCESSOR_WINDOWACCESSOR
