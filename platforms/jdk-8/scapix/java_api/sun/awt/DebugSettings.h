// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_AWT_DEBUGSETTINGS_FWD
#define SCAPIX_JAVA_API_SUN_AWT_DEBUGSETTINGS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::awt { class DebugSettings; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::awt::DebugSettings>
{
	static constexpr fixed_string class_name = "sun/awt/DebugSettings";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_DEBUGSETTINGS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_AWT_DEBUGSETTINGS)
#define SCAPIX_JAVA_API_SUN_AWT_DEBUGSETTINGS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::awt::DebugSettings : public jni::object_base<"sun/awt/DebugSettings",
	java::lang::Object>
{
public:

	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jboolean getBoolean(jni::ref<java::lang::String> p1, jboolean p2) { return call_method<"getBoolean", jboolean>(p1, p2); }
	jint getInt(jni::ref<java::lang::String> p1, jint p2) { return call_method<"getInt", jint>(p1, p2); }
	jni::ref<java::lang::String> getString(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return call_method<"getString", jni::ref<java::lang::String>>(p1, p2); }

protected:

	DebugSettings(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_DEBUGSETTINGS
