// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_AWT_PAINTEVENTDISPATCHER_FWD
#define SCAPIX_JAVA_API_SUN_AWT_PAINTEVENTDISPATCHER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::awt { class PaintEventDispatcher; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::awt::PaintEventDispatcher>
{
	static constexpr fixed_string class_name = "sun/awt/PaintEventDispatcher";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_PAINTEVENTDISPATCHER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_AWT_PAINTEVENTDISPATCHER)
#define SCAPIX_JAVA_API_SUN_AWT_PAINTEVENTDISPATCHER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Component.h>
#include <scapix/java_api/java/awt/event/PaintEvent.h>
#include <scapix/java_api/java/lang/Runnable.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::awt::PaintEventDispatcher : public jni::object_base<"sun/awt/PaintEventDispatcher",
	java::lang::Object>
{
public:

	static jni::ref<sun::awt::PaintEventDispatcher> new_object() { return base_::new_object(); }
	static void setPaintEventDispatcher(jni::ref<sun::awt::PaintEventDispatcher> p1) { return call_static_method<"setPaintEventDispatcher", void>(p1); }
	static jni::ref<sun::awt::PaintEventDispatcher> getPaintEventDispatcher() { return call_static_method<"getPaintEventDispatcher", jni::ref<sun::awt::PaintEventDispatcher>>(); }
	jni::ref<java::awt::event::PaintEvent> createPaintEvent(jni::ref<java::awt::Component> p1, jint p2, jint p3, jint p4, jint p5) { return call_method<"createPaintEvent", jni::ref<java::awt::event::PaintEvent>>(p1, p2, p3, p4, p5); }
	jboolean shouldDoNativeBackgroundErase(jni::ref<java::awt::Component> p1) { return call_method<"shouldDoNativeBackgroundErase", jboolean>(p1); }
	jboolean queueSurfaceDataReplacing(jni::ref<java::awt::Component> p1, jni::ref<java::lang::Runnable> p2) { return call_method<"queueSurfaceDataReplacing", jboolean>(p1, p2); }

protected:

	PaintEventDispatcher(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_PAINTEVENTDISPATCHER
