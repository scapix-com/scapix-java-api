// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/awt/image/VolatileImage.h>
#include <scapix/java_api/sun/java2d/DestSurfaceProvider.h>

#ifndef SCAPIX_JAVA_API_SUN_AWT_IMAGE_SUNVOLATILEIMAGE_FWD
#define SCAPIX_JAVA_API_SUN_AWT_IMAGE_SUNVOLATILEIMAGE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::awt::image { class SunVolatileImage; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::awt::image::SunVolatileImage>
{
	static constexpr fixed_string class_name = "sun/awt/image/SunVolatileImage";
	using base_classes = std::tuple<scapix::java_api::java::awt::image::VolatileImage, scapix::java_api::sun::java2d::DestSurfaceProvider>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_IMAGE_SUNVOLATILEIMAGE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_AWT_IMAGE_SUNVOLATILEIMAGE)
#define SCAPIX_JAVA_API_SUN_AWT_IMAGE_SUNVOLATILEIMAGE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Component.h>
#include <scapix/java_api/java/awt/Graphics2D.h>
#include <scapix/java_api/java/awt/GraphicsConfiguration.h>
#include <scapix/java_api/java/awt/ImageCapabilities.h>
#include <scapix/java_api/java/awt/image/BufferedImage.h>
#include <scapix/java_api/java/awt/image/ImageObserver.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/sun/java2d/Surface.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::awt::image::SunVolatileImage : public jni::object_base<"sun/awt/image/SunVolatileImage",
	java::awt::image::VolatileImage,
	sun::java2d::DestSurfaceProvider>
{
public:

	static jni::ref<sun::awt::image::SunVolatileImage> new_object(jni::ref<java::awt::Component> p1, jint p2, jint p3) { return base_::new_object(p1, p2, p3); }
	static jni::ref<sun::awt::image::SunVolatileImage> new_object(jni::ref<java::awt::Component> p1, jint p2, jint p3, jni::ref<java::lang::Object> p4) { return base_::new_object(p1, p2, p3, p4); }
	static jni::ref<sun::awt::image::SunVolatileImage> new_object(jni::ref<java::awt::GraphicsConfiguration> p1, jint p2, jint p3, jint p4, jni::ref<java::awt::ImageCapabilities> p5) { return base_::new_object(p1, p2, p3, p4, p5); }
	jint getWidth() { return call_method<"getWidth", jint>(); }
	jint getHeight() { return call_method<"getHeight", jint>(); }
	jni::ref<java::awt::GraphicsConfiguration> getGraphicsConfig() { return call_method<"getGraphicsConfig", jni::ref<java::awt::GraphicsConfiguration>>(); }
	void updateGraphicsConfig() { return call_method<"updateGraphicsConfig", void>(); }
	jni::ref<java::awt::Component> getComponent() { return call_method<"getComponent", jni::ref<java::awt::Component>>(); }
	jint getForcedAccelSurfaceType() { return call_method<"getForcedAccelSurfaceType", jint>(); }
	jni::ref<java::awt::Graphics2D> createGraphics() { return call_method<"createGraphics", jni::ref<java::awt::Graphics2D>>(); }
	jni::ref<java::lang::Object> getProperty(jni::ref<java::lang::String> p1, jni::ref<java::awt::image::ImageObserver> p2) { return call_method<"getProperty", jni::ref<java::lang::Object>>(p1, p2); }
	jint getWidth(jni::ref<java::awt::image::ImageObserver> p1) { return call_method<"getWidth", jint>(p1); }
	jint getHeight(jni::ref<java::awt::image::ImageObserver> p1) { return call_method<"getHeight", jint>(p1); }
	jni::ref<java::awt::image::BufferedImage> getBackupImage() { return call_method<"getBackupImage", jni::ref<java::awt::image::BufferedImage>>(); }
	jni::ref<java::awt::image::BufferedImage> getSnapshot() { return call_method<"getSnapshot", jni::ref<java::awt::image::BufferedImage>>(); }
	jint validate(jni::ref<java::awt::GraphicsConfiguration> p1) { return call_method<"validate", jint>(p1); }
	jboolean contentsLost() { return call_method<"contentsLost", jboolean>(); }
	jni::ref<java::awt::ImageCapabilities> getCapabilities() { return call_method<"getCapabilities", jni::ref<java::awt::ImageCapabilities>>(); }
	jni::ref<sun::java2d::Surface> getDestSurface() { return call_method<"getDestSurface", jni::ref<sun::java2d::Surface>>(); }

protected:

	SunVolatileImage(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_IMAGE_SUNVOLATILEIMAGE
