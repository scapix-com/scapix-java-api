// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_AWT_IMAGE_IMAGEWATCHED_LINK_FWD
#define SCAPIX_JAVA_API_SUN_AWT_IMAGE_IMAGEWATCHED_LINK_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::awt::image { class ImageWatched_Link; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::awt::image::ImageWatched_Link>
{
	static constexpr fixed_string class_name = "sun/awt/image/ImageWatched$Link";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_IMAGE_IMAGEWATCHED_LINK_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_AWT_IMAGE_IMAGEWATCHED_LINK)
#define SCAPIX_JAVA_API_SUN_AWT_IMAGE_IMAGEWATCHED_LINK

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Image.h>
#include <scapix/java_api/java/awt/image/ImageObserver.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::awt::image::ImageWatched_Link : public jni::object_base<"sun/awt/image/ImageWatched$Link",
	java::lang::Object>
{
public:

	static jni::ref<sun::awt::image::ImageWatched_Link> new_object() { return base_::new_object(); }
	jboolean isWatcher(jni::ref<java::awt::image::ImageObserver> p1) { return call_method<"isWatcher", jboolean>(p1); }
	jni::ref<sun::awt::image::ImageWatched_Link> removeWatcher(jni::ref<java::awt::image::ImageObserver> p1) { return call_method<"removeWatcher", jni::ref<sun::awt::image::ImageWatched_Link>>(p1); }
	jboolean newInfo(jni::ref<java::awt::Image> p1, jint p2, jint p3, jint p4, jint p5, jint p6) { return call_method<"newInfo", jboolean>(p1, p2, p3, p4, p5, p6); }

protected:

	ImageWatched_Link(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_IMAGE_IMAGEWATCHED_LINK
