// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Thread.h>

#ifndef SCAPIX_JAVA_API_SUN_AWT_IMAGE_IMAGEFETCHER_FWD
#define SCAPIX_JAVA_API_SUN_AWT_IMAGE_IMAGEFETCHER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::awt::image { class ImageFetcher; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::awt::image::ImageFetcher>
{
	static constexpr fixed_string class_name = "sun/awt/image/ImageFetcher";
	using base_classes = std::tuple<scapix::java_api::java::lang::Thread>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_IMAGE_IMAGEFETCHER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_AWT_IMAGE_IMAGEFETCHER)
#define SCAPIX_JAVA_API_SUN_AWT_IMAGE_IMAGEFETCHER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/sun/awt/image/ImageFetchable.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::awt::image::ImageFetcher : public jni::object_base<"sun/awt/image/ImageFetcher",
	java::lang::Thread>
{
public:

	static jboolean add(jni::ref<sun::awt::image::ImageFetchable> p1) { return call_static_method<"add", jboolean>(p1); }
	static void remove(jni::ref<sun::awt::image::ImageFetchable> p1) { return call_static_method<"remove", void>(p1); }
	static jboolean isFetcher(jni::ref<java::lang::Thread> p1) { return call_static_method<"isFetcher", jboolean>(p1); }
	static jboolean amFetcher() { return call_static_method<"amFetcher", jboolean>(); }
	void run() { return call_method<"run", void>(); }

protected:

	ImageFetcher(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_IMAGE_IMAGEFETCHER
