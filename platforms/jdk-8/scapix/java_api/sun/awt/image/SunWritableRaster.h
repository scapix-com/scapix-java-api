// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/awt/image/WritableRaster.h>

#ifndef SCAPIX_JAVA_API_SUN_AWT_IMAGE_SUNWRITABLERASTER_FWD
#define SCAPIX_JAVA_API_SUN_AWT_IMAGE_SUNWRITABLERASTER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::awt::image { class SunWritableRaster; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::awt::image::SunWritableRaster>
{
	static constexpr fixed_string class_name = "sun/awt/image/SunWritableRaster";
	using base_classes = std::tuple<scapix::java_api::java::awt::image::WritableRaster>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_IMAGE_SUNWRITABLERASTER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_AWT_IMAGE_SUNWRITABLERASTER)
#define SCAPIX_JAVA_API_SUN_AWT_IMAGE_SUNWRITABLERASTER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Image.h>
#include <scapix/java_api/java/awt/Point.h>
#include <scapix/java_api/java/awt/Rectangle.h>
#include <scapix/java_api/java/awt/image/DataBuffer.h>
#include <scapix/java_api/java/awt/image/DataBufferByte.h>
#include <scapix/java_api/java/awt/image/DataBufferInt.h>
#include <scapix/java_api/java/awt/image/DataBufferUShort.h>
#include <scapix/java_api/java/awt/image/SampleModel.h>
#include <scapix/java_api/sun/awt/image/SunWritableRaster_DataStealer.h>
#include <scapix/java_api/sun/java2d/StateTrackableDelegate.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::awt::image::SunWritableRaster : public jni::object_base<"sun/awt/image/SunWritableRaster",
	java::awt::image::WritableRaster>
{
public:

	using DataStealer = SunWritableRaster_DataStealer;

	static void setDataStealer(jni::ref<sun::awt::image::SunWritableRaster_DataStealer> p1) { return call_static_method<"setDataStealer", void>(p1); }
	static jni::ref<jni::array<jbyte>> stealData(jni::ref<java::awt::image::DataBufferByte> p1, jint p2) { return call_static_method<"stealData", jni::ref<jni::array<jbyte>>>(p1, p2); }
	static jni::ref<jni::array<jshort>> stealData(jni::ref<java::awt::image::DataBufferUShort> p1, jint p2) { return call_static_method<"stealData", jni::ref<jni::array<jshort>>>(p1, p2); }
	static jni::ref<jni::array<jint>> stealData(jni::ref<java::awt::image::DataBufferInt> p1, jint p2) { return call_static_method<"stealData", jni::ref<jni::array<jint>>>(p1, p2); }
	static jni::ref<sun::java2d::StateTrackableDelegate> stealTrackable(jni::ref<java::awt::image::DataBuffer> p1) { return call_static_method<"stealTrackable", jni::ref<sun::java2d::StateTrackableDelegate>>(p1); }
	static void setTrackable(jni::ref<java::awt::image::DataBuffer> p1, jni::ref<sun::java2d::StateTrackableDelegate> p2) { return call_static_method<"setTrackable", void>(p1, p2); }
	static void makeTrackable(jni::ref<java::awt::image::DataBuffer> p1) { return call_static_method<"makeTrackable", void>(p1); }
	static void markDirty(jni::ref<java::awt::image::DataBuffer> p1) { return call_static_method<"markDirty", void>(p1); }
	static void markDirty(jni::ref<java::awt::image::WritableRaster> p1) { return call_static_method<"markDirty", void>(p1); }
	static void markDirty(jni::ref<java::awt::Image> p1) { return call_static_method<"markDirty", void>(p1); }
	static jni::ref<sun::awt::image::SunWritableRaster> new_object(jni::ref<java::awt::image::SampleModel> p1, jni::ref<java::awt::Point> p2) { return base_::new_object(p1, p2); }
	static jni::ref<sun::awt::image::SunWritableRaster> new_object(jni::ref<java::awt::image::SampleModel> p1, jni::ref<java::awt::image::DataBuffer> p2, jni::ref<java::awt::Point> p3) { return base_::new_object(p1, p2, p3); }
	static jni::ref<sun::awt::image::SunWritableRaster> new_object(jni::ref<java::awt::image::SampleModel> p1, jni::ref<java::awt::image::DataBuffer> p2, jni::ref<java::awt::Rectangle> p3, jni::ref<java::awt::Point> p4, jni::ref<java::awt::image::WritableRaster> p5) { return base_::new_object(p1, p2, p3, p4, p5); }
	void markDirty() { return call_method<"markDirty", void>(); }

protected:

	SunWritableRaster(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_IMAGE_SUNWRITABLERASTER
