// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/sun/awt/image/ToolkitImage.h>
#include <scapix/java_api/sun/awt/image/MultiResolutionImage.h>

#ifndef SCAPIX_JAVA_API_SUN_AWT_IMAGE_MULTIRESOLUTIONTOOLKITIMAGE_FWD
#define SCAPIX_JAVA_API_SUN_AWT_IMAGE_MULTIRESOLUTIONTOOLKITIMAGE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::awt::image { class MultiResolutionToolkitImage; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::awt::image::MultiResolutionToolkitImage>
{
	static constexpr fixed_string class_name = "sun/awt/image/MultiResolutionToolkitImage";
	using base_classes = std::tuple<scapix::java_api::sun::awt::image::ToolkitImage, scapix::java_api::sun::awt::image::MultiResolutionImage>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_IMAGE_MULTIRESOLUTIONTOOLKITIMAGE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_AWT_IMAGE_MULTIRESOLUTIONTOOLKITIMAGE)
#define SCAPIX_JAVA_API_SUN_AWT_IMAGE_MULTIRESOLUTIONTOOLKITIMAGE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Image.h>
#include <scapix/java_api/java/awt/image/ImageObserver.h>
#include <scapix/java_api/java/util/List.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::awt::image::MultiResolutionToolkitImage : public jni::object_base<"sun/awt/image/MultiResolutionToolkitImage",
	sun::awt::image::ToolkitImage,
	sun::awt::image::MultiResolutionImage>
{
public:

	static jni::ref<sun::awt::image::MultiResolutionToolkitImage> new_object(jni::ref<java::awt::Image> p1, jni::ref<java::awt::Image> p2) { return base_::new_object(p1, p2); }
	jni::ref<java::awt::Image> getResolutionVariant(jint p1, jint p2) { return call_method<"getResolutionVariant", jni::ref<java::awt::Image>>(p1, p2); }
	jni::ref<java::awt::Image> getResolutionVariant() { return call_method<"getResolutionVariant", jni::ref<java::awt::Image>>(); }
	jni::ref<java::util::List> getResolutionVariants() { return call_method<"getResolutionVariants", jni::ref<java::util::List>>(); }
	static jni::ref<java::awt::image::ImageObserver> getResolutionVariantObserver(jni::ref<java::awt::Image> p1, jni::ref<java::awt::image::ImageObserver> p2, jint p3, jint p4, jint p5, jint p6) { return call_static_method<"getResolutionVariantObserver", jni::ref<java::awt::image::ImageObserver>>(p1, p2, p3, p4, p5, p6); }
	static jni::ref<java::awt::image::ImageObserver> getResolutionVariantObserver(jni::ref<java::awt::Image> p1, jni::ref<java::awt::image::ImageObserver> p2, jint p3, jint p4, jint p5, jint p6, jboolean p7) { return call_static_method<"getResolutionVariantObserver", jni::ref<java::awt::image::ImageObserver>>(p1, p2, p3, p4, p5, p6, p7); }

protected:

	MultiResolutionToolkitImage(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_IMAGE_MULTIRESOLUTIONTOOLKITIMAGE
