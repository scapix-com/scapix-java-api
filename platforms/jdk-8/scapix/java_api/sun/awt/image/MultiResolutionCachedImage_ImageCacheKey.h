// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/sun/awt/image/ImageCache_PixelsKey.h>

#ifndef SCAPIX_JAVA_API_SUN_AWT_IMAGE_MULTIRESOLUTIONCACHEDIMAGE_IMAGECACHEKEY_FWD
#define SCAPIX_JAVA_API_SUN_AWT_IMAGE_MULTIRESOLUTIONCACHEDIMAGE_IMAGECACHEKEY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::awt::image { class MultiResolutionCachedImage_ImageCacheKey; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::awt::image::MultiResolutionCachedImage_ImageCacheKey>
{
	static constexpr fixed_string class_name = "sun/awt/image/MultiResolutionCachedImage$ImageCacheKey";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::sun::awt::image::ImageCache_PixelsKey>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_IMAGE_MULTIRESOLUTIONCACHEDIMAGE_IMAGECACHEKEY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_AWT_IMAGE_MULTIRESOLUTIONCACHEDIMAGE_IMAGECACHEKEY)
#define SCAPIX_JAVA_API_SUN_AWT_IMAGE_MULTIRESOLUTIONCACHEDIMAGE_IMAGECACHEKEY

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::awt::image::MultiResolutionCachedImage_ImageCacheKey : public jni::object_base<"sun/awt/image/MultiResolutionCachedImage$ImageCacheKey",
	java::lang::Object,
	sun::awt::image::ImageCache_PixelsKey>
{
public:

	jint getPixelCount() { return call_method<"getPixelCount", jint>(); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jboolean equals(jni::ref<java::lang::Object> p1) { return call_method<"equals", jboolean>(p1); }

protected:

	MultiResolutionCachedImage_ImageCacheKey(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_IMAGE_MULTIRESOLUTIONCACHEDIMAGE_IMAGECACHEKEY
