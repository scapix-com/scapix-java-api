// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/sun/java2d/SurfaceData.h>

#ifndef SCAPIX_JAVA_API_SUN_AWT_IMAGE_BUFIMGSURFACEDATA_FWD
#define SCAPIX_JAVA_API_SUN_AWT_IMAGE_BUFIMGSURFACEDATA_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::awt::image { class BufImgSurfaceData; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::awt::image::BufImgSurfaceData>
{
	static constexpr fixed_string class_name = "sun/awt/image/BufImgSurfaceData";
	using base_classes = std::tuple<scapix::java_api::sun::java2d::SurfaceData>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_IMAGE_BUFIMGSURFACEDATA_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_AWT_IMAGE_BUFIMGSURFACEDATA)
#define SCAPIX_JAVA_API_SUN_AWT_IMAGE_BUFIMGSURFACEDATA

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/GraphicsConfiguration.h>
#include <scapix/java_api/java/awt/Rectangle.h>
#include <scapix/java_api/java/awt/image/BufferedImage.h>
#include <scapix/java_api/java/awt/image/ColorModel.h>
#include <scapix/java_api/java/awt/image/DataBuffer.h>
#include <scapix/java_api/java/awt/image/IndexColorModel.h>
#include <scapix/java_api/java/awt/image/Raster.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/sun/java2d/SunGraphics2D.h>
#include <scapix/java_api/sun/java2d/loops/RenderLoops.h>
#include <scapix/java_api/sun/java2d/loops/SurfaceType.h>
#include <scapix/java_api/sun/awt/image/BufImgSurfaceData_ICMColorData.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::awt::image::BufImgSurfaceData : public jni::object_base<"sun/awt/image/BufImgSurfaceData",
	sun::java2d::SurfaceData>
{
public:

	using ICMColorData = BufImgSurfaceData_ICMColorData;

	static jni::ref<sun::java2d::SurfaceData> createData(jni::ref<java::awt::image::BufferedImage> p1) { return call_static_method<"createData", jni::ref<sun::java2d::SurfaceData>>(p1); }
	static jni::ref<sun::java2d::SurfaceData> createData(jni::ref<java::awt::image::Raster> p1, jni::ref<java::awt::image::ColorModel> p2) { return call_static_method<"createData", jni::ref<sun::java2d::SurfaceData>>(p1, p2); }
	static jni::ref<sun::java2d::SurfaceData> createDataIC(jni::ref<java::awt::image::BufferedImage> p1, jni::ref<sun::java2d::loops::SurfaceType> p2) { return call_static_method<"createDataIC", jni::ref<sun::java2d::SurfaceData>>(p1, p2); }
	static jni::ref<sun::java2d::SurfaceData> createDataSC(jni::ref<java::awt::image::BufferedImage> p1, jni::ref<sun::java2d::loops::SurfaceType> p2, jni::ref<java::awt::image::IndexColorModel> p3) { return call_static_method<"createDataSC", jni::ref<sun::java2d::SurfaceData>>(p1, p2, p3); }
	static jni::ref<sun::java2d::SurfaceData> createDataBC(jni::ref<java::awt::image::BufferedImage> p1, jni::ref<sun::java2d::loops::SurfaceType> p2, jint p3) { return call_static_method<"createDataBC", jni::ref<sun::java2d::SurfaceData>>(p1, p2, p3); }
	static jni::ref<sun::java2d::SurfaceData> createDataBP(jni::ref<java::awt::image::BufferedImage> p1, jni::ref<sun::java2d::loops::SurfaceType> p2) { return call_static_method<"createDataBP", jni::ref<sun::java2d::SurfaceData>>(p1, p2); }
	jni::ref<sun::java2d::loops::RenderLoops> getRenderLoops(jni::ref<sun::java2d::SunGraphics2D> p1) { return call_method<"getRenderLoops", jni::ref<sun::java2d::loops::RenderLoops>>(p1); }
	jni::ref<java::awt::image::Raster> getRaster(jint p1, jint p2, jint p3, jint p4) { return call_method<"getRaster", jni::ref<java::awt::image::Raster>>(p1, p2, p3, p4); }
	static jni::ref<sun::awt::image::BufImgSurfaceData> new_object(jni::ref<java::awt::image::DataBuffer> p1, jni::ref<java::awt::image::BufferedImage> p2, jni::ref<sun::java2d::loops::SurfaceType> p3) { return base_::new_object(p1, p2, p3); }
	void initSolidLoops() { return call_method<"initSolidLoops", void>(); }
	static jni::ref<sun::java2d::loops::RenderLoops> getSolidLoops(jni::ref<sun::java2d::loops::SurfaceType> p1) { return call_static_method<"getSolidLoops", jni::ref<sun::java2d::loops::RenderLoops>>(p1); }
	jni::ref<sun::java2d::SurfaceData> getReplacement() { return call_method<"getReplacement", jni::ref<sun::java2d::SurfaceData>>(); }
	jni::ref<java::awt::GraphicsConfiguration> getDeviceConfiguration() { return call_method<"getDeviceConfiguration", jni::ref<java::awt::GraphicsConfiguration>>(); }
	jni::ref<java::awt::Rectangle> getBounds() { return call_method<"getBounds", jni::ref<java::awt::Rectangle>>(); }
	jni::ref<java::lang::Object> getDestination() { return call_method<"getDestination", jni::ref<java::lang::Object>>(); }

protected:

	BufImgSurfaceData(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_IMAGE_BUFIMGSURFACEDATA
