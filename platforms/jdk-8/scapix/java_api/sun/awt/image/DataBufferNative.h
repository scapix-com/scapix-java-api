// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/awt/image/DataBuffer.h>

#ifndef SCAPIX_JAVA_API_SUN_AWT_IMAGE_DATABUFFERNATIVE_FWD
#define SCAPIX_JAVA_API_SUN_AWT_IMAGE_DATABUFFERNATIVE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::awt::image { class DataBufferNative; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::awt::image::DataBufferNative>
{
	static constexpr fixed_string class_name = "sun/awt/image/DataBufferNative";
	using base_classes = std::tuple<scapix::java_api::java::awt::image::DataBuffer>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_IMAGE_DATABUFFERNATIVE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_AWT_IMAGE_DATABUFFERNATIVE)
#define SCAPIX_JAVA_API_SUN_AWT_IMAGE_DATABUFFERNATIVE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/sun/java2d/SurfaceData.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::awt::image::DataBufferNative : public jni::object_base<"sun/awt/image/DataBufferNative",
	java::awt::image::DataBuffer>
{
public:

	static jni::ref<sun::awt::image::DataBufferNative> new_object(jni::ref<sun::java2d::SurfaceData> p1, jint p2, jint p3, jint p4) { return base_::new_object(p1, p2, p3, p4); }
	jint getElem(jint p1, jint p2) { return call_method<"getElem", jint>(p1, p2); }
	void setElem(jint p1, jint p2, jint p3) { return call_method<"setElem", void>(p1, p2, p3); }

protected:

	DataBufferNative(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_IMAGE_DATABUFFERNATIVE
