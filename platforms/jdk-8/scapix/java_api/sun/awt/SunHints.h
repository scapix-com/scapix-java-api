// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_AWT_SUNHINTS_FWD
#define SCAPIX_JAVA_API_SUN_AWT_SUNHINTS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::awt { class SunHints; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::awt::SunHints>
{
	static constexpr fixed_string class_name = "sun/awt/SunHints";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_SUNHINTS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_AWT_SUNHINTS)
#define SCAPIX_JAVA_API_SUN_AWT_SUNHINTS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/RenderingHints_Key.h>
#include <scapix/java_api/sun/awt/SunHints_Key.h>
#include <scapix/java_api/sun/awt/SunHints_Value.h>
#include <scapix/java_api/sun/awt/SunHints_LCDContrastKey.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::awt::SunHints : public jni::object_base<"sun/awt/SunHints",
	java::lang::Object>
{
public:

	using Key = SunHints_Key;
	using Value = SunHints_Value;
	using LCDContrastKey = SunHints_LCDContrastKey;

	static jint INTKEY_RENDERING() { return get_static_field<"INTKEY_RENDERING", jint>(); }
	static jint INTVAL_RENDER_DEFAULT() { return get_static_field<"INTVAL_RENDER_DEFAULT", jint>(); }
	static jint INTVAL_RENDER_SPEED() { return get_static_field<"INTVAL_RENDER_SPEED", jint>(); }
	static jint INTVAL_RENDER_QUALITY() { return get_static_field<"INTVAL_RENDER_QUALITY", jint>(); }
	static jint INTKEY_ANTIALIASING() { return get_static_field<"INTKEY_ANTIALIASING", jint>(); }
	static jint INTVAL_ANTIALIAS_DEFAULT() { return get_static_field<"INTVAL_ANTIALIAS_DEFAULT", jint>(); }
	static jint INTVAL_ANTIALIAS_OFF() { return get_static_field<"INTVAL_ANTIALIAS_OFF", jint>(); }
	static jint INTVAL_ANTIALIAS_ON() { return get_static_field<"INTVAL_ANTIALIAS_ON", jint>(); }
	static jint INTKEY_TEXT_ANTIALIASING() { return get_static_field<"INTKEY_TEXT_ANTIALIASING", jint>(); }
	static jint INTVAL_TEXT_ANTIALIAS_DEFAULT() { return get_static_field<"INTVAL_TEXT_ANTIALIAS_DEFAULT", jint>(); }
	static jint INTVAL_TEXT_ANTIALIAS_OFF() { return get_static_field<"INTVAL_TEXT_ANTIALIAS_OFF", jint>(); }
	static jint INTVAL_TEXT_ANTIALIAS_ON() { return get_static_field<"INTVAL_TEXT_ANTIALIAS_ON", jint>(); }
	static jint INTVAL_TEXT_ANTIALIAS_GASP() { return get_static_field<"INTVAL_TEXT_ANTIALIAS_GASP", jint>(); }
	static jint INTVAL_TEXT_ANTIALIAS_LCD_HRGB() { return get_static_field<"INTVAL_TEXT_ANTIALIAS_LCD_HRGB", jint>(); }
	static jint INTVAL_TEXT_ANTIALIAS_LCD_HBGR() { return get_static_field<"INTVAL_TEXT_ANTIALIAS_LCD_HBGR", jint>(); }
	static jint INTVAL_TEXT_ANTIALIAS_LCD_VRGB() { return get_static_field<"INTVAL_TEXT_ANTIALIAS_LCD_VRGB", jint>(); }
	static jint INTVAL_TEXT_ANTIALIAS_LCD_VBGR() { return get_static_field<"INTVAL_TEXT_ANTIALIAS_LCD_VBGR", jint>(); }
	static jint INTKEY_FRACTIONALMETRICS() { return get_static_field<"INTKEY_FRACTIONALMETRICS", jint>(); }
	static jint INTVAL_FRACTIONALMETRICS_DEFAULT() { return get_static_field<"INTVAL_FRACTIONALMETRICS_DEFAULT", jint>(); }
	static jint INTVAL_FRACTIONALMETRICS_OFF() { return get_static_field<"INTVAL_FRACTIONALMETRICS_OFF", jint>(); }
	static jint INTVAL_FRACTIONALMETRICS_ON() { return get_static_field<"INTVAL_FRACTIONALMETRICS_ON", jint>(); }
	static jint INTKEY_DITHERING() { return get_static_field<"INTKEY_DITHERING", jint>(); }
	static jint INTVAL_DITHER_DEFAULT() { return get_static_field<"INTVAL_DITHER_DEFAULT", jint>(); }
	static jint INTVAL_DITHER_DISABLE() { return get_static_field<"INTVAL_DITHER_DISABLE", jint>(); }
	static jint INTVAL_DITHER_ENABLE() { return get_static_field<"INTVAL_DITHER_ENABLE", jint>(); }
	static jint INTKEY_INTERPOLATION() { return get_static_field<"INTKEY_INTERPOLATION", jint>(); }
	static jint INTVAL_INTERPOLATION_NEAREST_NEIGHBOR() { return get_static_field<"INTVAL_INTERPOLATION_NEAREST_NEIGHBOR", jint>(); }
	static jint INTVAL_INTERPOLATION_BILINEAR() { return get_static_field<"INTVAL_INTERPOLATION_BILINEAR", jint>(); }
	static jint INTVAL_INTERPOLATION_BICUBIC() { return get_static_field<"INTVAL_INTERPOLATION_BICUBIC", jint>(); }
	static jint INTKEY_ALPHA_INTERPOLATION() { return get_static_field<"INTKEY_ALPHA_INTERPOLATION", jint>(); }
	static jint INTVAL_ALPHA_INTERPOLATION_DEFAULT() { return get_static_field<"INTVAL_ALPHA_INTERPOLATION_DEFAULT", jint>(); }
	static jint INTVAL_ALPHA_INTERPOLATION_SPEED() { return get_static_field<"INTVAL_ALPHA_INTERPOLATION_SPEED", jint>(); }
	static jint INTVAL_ALPHA_INTERPOLATION_QUALITY() { return get_static_field<"INTVAL_ALPHA_INTERPOLATION_QUALITY", jint>(); }
	static jint INTKEY_COLOR_RENDERING() { return get_static_field<"INTKEY_COLOR_RENDERING", jint>(); }
	static jint INTVAL_COLOR_RENDER_DEFAULT() { return get_static_field<"INTVAL_COLOR_RENDER_DEFAULT", jint>(); }
	static jint INTVAL_COLOR_RENDER_SPEED() { return get_static_field<"INTVAL_COLOR_RENDER_SPEED", jint>(); }
	static jint INTVAL_COLOR_RENDER_QUALITY() { return get_static_field<"INTVAL_COLOR_RENDER_QUALITY", jint>(); }
	static jint INTKEY_STROKE_CONTROL() { return get_static_field<"INTKEY_STROKE_CONTROL", jint>(); }
	static jint INTVAL_STROKE_DEFAULT() { return get_static_field<"INTVAL_STROKE_DEFAULT", jint>(); }
	static jint INTVAL_STROKE_NORMALIZE() { return get_static_field<"INTVAL_STROKE_NORMALIZE", jint>(); }
	static jint INTVAL_STROKE_PURE() { return get_static_field<"INTVAL_STROKE_PURE", jint>(); }
	static jint INTKEY_RESOLUTION_VARIANT() { return get_static_field<"INTKEY_RESOLUTION_VARIANT", jint>(); }
	static jint INTVAL_RESOLUTION_VARIANT_DEFAULT() { return get_static_field<"INTVAL_RESOLUTION_VARIANT_DEFAULT", jint>(); }
	static jint INTVAL_RESOLUTION_VARIANT_OFF() { return get_static_field<"INTVAL_RESOLUTION_VARIANT_OFF", jint>(); }
	static jint INTVAL_RESOLUTION_VARIANT_ON() { return get_static_field<"INTVAL_RESOLUTION_VARIANT_ON", jint>(); }
	static jint INTKEY_AATEXT_LCD_CONTRAST() { return get_static_field<"INTKEY_AATEXT_LCD_CONTRAST", jint>(); }
	static jni::ref<sun::awt::SunHints_Key> KEY_RENDERING() { return get_static_field<"KEY_RENDERING", jni::ref<sun::awt::SunHints_Key>>(); }
	static jni::ref<java::lang::Object> VALUE_RENDER_SPEED() { return get_static_field<"VALUE_RENDER_SPEED", jni::ref<java::lang::Object>>(); }
	static jni::ref<java::lang::Object> VALUE_RENDER_QUALITY() { return get_static_field<"VALUE_RENDER_QUALITY", jni::ref<java::lang::Object>>(); }
	static jni::ref<java::lang::Object> VALUE_RENDER_DEFAULT() { return get_static_field<"VALUE_RENDER_DEFAULT", jni::ref<java::lang::Object>>(); }
	static jni::ref<sun::awt::SunHints_Key> KEY_ANTIALIASING() { return get_static_field<"KEY_ANTIALIASING", jni::ref<sun::awt::SunHints_Key>>(); }
	static jni::ref<java::lang::Object> VALUE_ANTIALIAS_ON() { return get_static_field<"VALUE_ANTIALIAS_ON", jni::ref<java::lang::Object>>(); }
	static jni::ref<java::lang::Object> VALUE_ANTIALIAS_OFF() { return get_static_field<"VALUE_ANTIALIAS_OFF", jni::ref<java::lang::Object>>(); }
	static jni::ref<java::lang::Object> VALUE_ANTIALIAS_DEFAULT() { return get_static_field<"VALUE_ANTIALIAS_DEFAULT", jni::ref<java::lang::Object>>(); }
	static jni::ref<sun::awt::SunHints_Key> KEY_TEXT_ANTIALIASING() { return get_static_field<"KEY_TEXT_ANTIALIASING", jni::ref<sun::awt::SunHints_Key>>(); }
	static jni::ref<java::lang::Object> VALUE_TEXT_ANTIALIAS_ON() { return get_static_field<"VALUE_TEXT_ANTIALIAS_ON", jni::ref<java::lang::Object>>(); }
	static jni::ref<java::lang::Object> VALUE_TEXT_ANTIALIAS_OFF() { return get_static_field<"VALUE_TEXT_ANTIALIAS_OFF", jni::ref<java::lang::Object>>(); }
	static jni::ref<java::lang::Object> VALUE_TEXT_ANTIALIAS_DEFAULT() { return get_static_field<"VALUE_TEXT_ANTIALIAS_DEFAULT", jni::ref<java::lang::Object>>(); }
	static jni::ref<java::lang::Object> VALUE_TEXT_ANTIALIAS_GASP() { return get_static_field<"VALUE_TEXT_ANTIALIAS_GASP", jni::ref<java::lang::Object>>(); }
	static jni::ref<java::lang::Object> VALUE_TEXT_ANTIALIAS_LCD_HRGB() { return get_static_field<"VALUE_TEXT_ANTIALIAS_LCD_HRGB", jni::ref<java::lang::Object>>(); }
	static jni::ref<java::lang::Object> VALUE_TEXT_ANTIALIAS_LCD_HBGR() { return get_static_field<"VALUE_TEXT_ANTIALIAS_LCD_HBGR", jni::ref<java::lang::Object>>(); }
	static jni::ref<java::lang::Object> VALUE_TEXT_ANTIALIAS_LCD_VRGB() { return get_static_field<"VALUE_TEXT_ANTIALIAS_LCD_VRGB", jni::ref<java::lang::Object>>(); }
	static jni::ref<java::lang::Object> VALUE_TEXT_ANTIALIAS_LCD_VBGR() { return get_static_field<"VALUE_TEXT_ANTIALIAS_LCD_VBGR", jni::ref<java::lang::Object>>(); }
	static jni::ref<sun::awt::SunHints_Key> KEY_FRACTIONALMETRICS() { return get_static_field<"KEY_FRACTIONALMETRICS", jni::ref<sun::awt::SunHints_Key>>(); }
	static jni::ref<java::lang::Object> VALUE_FRACTIONALMETRICS_ON() { return get_static_field<"VALUE_FRACTIONALMETRICS_ON", jni::ref<java::lang::Object>>(); }
	static jni::ref<java::lang::Object> VALUE_FRACTIONALMETRICS_OFF() { return get_static_field<"VALUE_FRACTIONALMETRICS_OFF", jni::ref<java::lang::Object>>(); }
	static jni::ref<java::lang::Object> VALUE_FRACTIONALMETRICS_DEFAULT() { return get_static_field<"VALUE_FRACTIONALMETRICS_DEFAULT", jni::ref<java::lang::Object>>(); }
	static jni::ref<sun::awt::SunHints_Key> KEY_DITHERING() { return get_static_field<"KEY_DITHERING", jni::ref<sun::awt::SunHints_Key>>(); }
	static jni::ref<java::lang::Object> VALUE_DITHER_ENABLE() { return get_static_field<"VALUE_DITHER_ENABLE", jni::ref<java::lang::Object>>(); }
	static jni::ref<java::lang::Object> VALUE_DITHER_DISABLE() { return get_static_field<"VALUE_DITHER_DISABLE", jni::ref<java::lang::Object>>(); }
	static jni::ref<java::lang::Object> VALUE_DITHER_DEFAULT() { return get_static_field<"VALUE_DITHER_DEFAULT", jni::ref<java::lang::Object>>(); }
	static jni::ref<sun::awt::SunHints_Key> KEY_INTERPOLATION() { return get_static_field<"KEY_INTERPOLATION", jni::ref<sun::awt::SunHints_Key>>(); }
	static jni::ref<java::lang::Object> VALUE_INTERPOLATION_NEAREST_NEIGHBOR() { return get_static_field<"VALUE_INTERPOLATION_NEAREST_NEIGHBOR", jni::ref<java::lang::Object>>(); }
	static jni::ref<java::lang::Object> VALUE_INTERPOLATION_BILINEAR() { return get_static_field<"VALUE_INTERPOLATION_BILINEAR", jni::ref<java::lang::Object>>(); }
	static jni::ref<java::lang::Object> VALUE_INTERPOLATION_BICUBIC() { return get_static_field<"VALUE_INTERPOLATION_BICUBIC", jni::ref<java::lang::Object>>(); }
	static jni::ref<sun::awt::SunHints_Key> KEY_ALPHA_INTERPOLATION() { return get_static_field<"KEY_ALPHA_INTERPOLATION", jni::ref<sun::awt::SunHints_Key>>(); }
	static jni::ref<java::lang::Object> VALUE_ALPHA_INTERPOLATION_SPEED() { return get_static_field<"VALUE_ALPHA_INTERPOLATION_SPEED", jni::ref<java::lang::Object>>(); }
	static jni::ref<java::lang::Object> VALUE_ALPHA_INTERPOLATION_QUALITY() { return get_static_field<"VALUE_ALPHA_INTERPOLATION_QUALITY", jni::ref<java::lang::Object>>(); }
	static jni::ref<java::lang::Object> VALUE_ALPHA_INTERPOLATION_DEFAULT() { return get_static_field<"VALUE_ALPHA_INTERPOLATION_DEFAULT", jni::ref<java::lang::Object>>(); }
	static jni::ref<sun::awt::SunHints_Key> KEY_COLOR_RENDERING() { return get_static_field<"KEY_COLOR_RENDERING", jni::ref<sun::awt::SunHints_Key>>(); }
	static jni::ref<java::lang::Object> VALUE_COLOR_RENDER_SPEED() { return get_static_field<"VALUE_COLOR_RENDER_SPEED", jni::ref<java::lang::Object>>(); }
	static jni::ref<java::lang::Object> VALUE_COLOR_RENDER_QUALITY() { return get_static_field<"VALUE_COLOR_RENDER_QUALITY", jni::ref<java::lang::Object>>(); }
	static jni::ref<java::lang::Object> VALUE_COLOR_RENDER_DEFAULT() { return get_static_field<"VALUE_COLOR_RENDER_DEFAULT", jni::ref<java::lang::Object>>(); }
	static jni::ref<sun::awt::SunHints_Key> KEY_STROKE_CONTROL() { return get_static_field<"KEY_STROKE_CONTROL", jni::ref<sun::awt::SunHints_Key>>(); }
	static jni::ref<java::lang::Object> VALUE_STROKE_DEFAULT() { return get_static_field<"VALUE_STROKE_DEFAULT", jni::ref<java::lang::Object>>(); }
	static jni::ref<java::lang::Object> VALUE_STROKE_NORMALIZE() { return get_static_field<"VALUE_STROKE_NORMALIZE", jni::ref<java::lang::Object>>(); }
	static jni::ref<java::lang::Object> VALUE_STROKE_PURE() { return get_static_field<"VALUE_STROKE_PURE", jni::ref<java::lang::Object>>(); }
	static jni::ref<sun::awt::SunHints_Key> KEY_RESOLUTION_VARIANT() { return get_static_field<"KEY_RESOLUTION_VARIANT", jni::ref<sun::awt::SunHints_Key>>(); }
	static jni::ref<java::lang::Object> VALUE_RESOLUTION_VARIANT_DEFAULT() { return get_static_field<"VALUE_RESOLUTION_VARIANT_DEFAULT", jni::ref<java::lang::Object>>(); }
	static jni::ref<java::lang::Object> VALUE_RESOLUTION_VARIANT_OFF() { return get_static_field<"VALUE_RESOLUTION_VARIANT_OFF", jni::ref<java::lang::Object>>(); }
	static jni::ref<java::lang::Object> VALUE_RESOLUTION_VARIANT_ON() { return get_static_field<"VALUE_RESOLUTION_VARIANT_ON", jni::ref<java::lang::Object>>(); }
	static jni::ref<java::awt::RenderingHints_Key> KEY_TEXT_ANTIALIAS_LCD_CONTRAST() { return get_static_field<"KEY_TEXT_ANTIALIAS_LCD_CONTRAST", jni::ref<java::awt::RenderingHints_Key>>(); }

	static jni::ref<sun::awt::SunHints> new_object() { return base_::new_object(); }

protected:

	SunHints(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_SUNHINTS
