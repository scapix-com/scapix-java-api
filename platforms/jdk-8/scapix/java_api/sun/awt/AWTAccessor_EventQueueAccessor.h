// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_AWT_AWTACCESSOR_EVENTQUEUEACCESSOR_FWD
#define SCAPIX_JAVA_API_SUN_AWT_AWTACCESSOR_EVENTQUEUEACCESSOR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::awt { class AWTAccessor_EventQueueAccessor; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::awt::AWTAccessor_EventQueueAccessor>
{
	static constexpr fixed_string class_name = "sun/awt/AWTAccessor$EventQueueAccessor";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_AWTACCESSOR_EVENTQUEUEACCESSOR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_AWT_AWTACCESSOR_EVENTQUEUEACCESSOR)
#define SCAPIX_JAVA_API_SUN_AWT_AWTACCESSOR_EVENTQUEUEACCESSOR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/EventQueue.h>
#include <scapix/java_api/java/lang/Runnable.h>
#include <scapix/java_api/java/lang/Thread.h>
#include <scapix/java_api/sun/awt/FwDispatcher.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::awt::AWTAccessor_EventQueueAccessor : public jni::object_base<"sun/awt/AWTAccessor$EventQueueAccessor",
	java::lang::Object>
{
public:

	jni::ref<java::lang::Thread> getDispatchThread(jni::ref<java::awt::EventQueue> p1) { return call_method<"getDispatchThread", jni::ref<java::lang::Thread>>(p1); }
	jboolean isDispatchThreadImpl(jni::ref<java::awt::EventQueue> p1) { return call_method<"isDispatchThreadImpl", jboolean>(p1); }
	void removeSourceEvents(jni::ref<java::awt::EventQueue> p1, jni::ref<java::lang::Object> p2, jboolean p3) { return call_method<"removeSourceEvents", void>(p1, p2, p3); }
	jboolean noEvents(jni::ref<java::awt::EventQueue> p1) { return call_method<"noEvents", jboolean>(p1); }
	void wakeup(jni::ref<java::awt::EventQueue> p1, jboolean p2) { return call_method<"wakeup", void>(p1, p2); }
	void invokeAndWait(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Runnable> p2) { return call_method<"invokeAndWait", void>(p1, p2); }
	void setFwDispatcher(jni::ref<java::awt::EventQueue> p1, jni::ref<sun::awt::FwDispatcher> p2) { return call_method<"setFwDispatcher", void>(p1, p2); }
	jlong getMostRecentEventTime(jni::ref<java::awt::EventQueue> p1) { return call_method<"getMostRecentEventTime", jlong>(p1); }

protected:

	AWTAccessor_EventQueueAccessor(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_AWTACCESSOR_EVENTQUEUEACCESSOR
