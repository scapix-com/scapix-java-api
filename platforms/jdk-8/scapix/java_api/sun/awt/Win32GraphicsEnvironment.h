// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/sun/java2d/SunGraphicsEnvironment.h>

#ifndef SCAPIX_JAVA_API_SUN_AWT_WIN32GRAPHICSENVIRONMENT_FWD
#define SCAPIX_JAVA_API_SUN_AWT_WIN32GRAPHICSENVIRONMENT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::awt { class Win32GraphicsEnvironment; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::awt::Win32GraphicsEnvironment>
{
	static constexpr fixed_string class_name = "sun/awt/Win32GraphicsEnvironment";
	using base_classes = std::tuple<scapix::java_api::sun::java2d::SunGraphicsEnvironment>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_WIN32GRAPHICSENVIRONMENT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_AWT_WIN32GRAPHICSENVIRONMENT)
#define SCAPIX_JAVA_API_SUN_AWT_WIN32GRAPHICSENVIRONMENT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/GraphicsDevice.h>
#include <scapix/java_api/java/awt/peer/ComponentPeer.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::awt::Win32GraphicsEnvironment : public jni::object_base<"sun/awt/Win32GraphicsEnvironment",
	sun::java2d::SunGraphicsEnvironment>
{
public:

	static void initDisplayWrapper() { return call_static_method<"initDisplayWrapper", void>(); }
	static jni::ref<sun::awt::Win32GraphicsEnvironment> new_object() { return base_::new_object(); }
	jni::ref<java::awt::GraphicsDevice> getDefaultScreenDevice() { return call_method<"getDefaultScreenDevice", jni::ref<java::awt::GraphicsDevice>>(); }
	jint getXResolution() { return call_method<"getXResolution", jint>(); }
	jint getYResolution() { return call_method<"getYResolution", jint>(); }
	void displayChanged() { return call_method<"displayChanged", void>(); }
	jboolean isDisplayLocal() { return call_method<"isDisplayLocal", jboolean>(); }
	jboolean isFlipStrategyPreferred(jni::ref<java::awt::peer::ComponentPeer> p1) { return call_method<"isFlipStrategyPreferred", jboolean>(p1); }
	static jboolean isDWMCompositionEnabled() { return call_static_method<"isDWMCompositionEnabled", jboolean>(); }
	static jboolean isVistaOS() { return call_static_method<"isVistaOS", jboolean>(); }

protected:

	Win32GraphicsEnvironment(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_WIN32GRAPHICSENVIRONMENT
