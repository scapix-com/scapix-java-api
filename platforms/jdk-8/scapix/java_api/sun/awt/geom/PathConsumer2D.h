// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_AWT_GEOM_PATHCONSUMER2D_FWD
#define SCAPIX_JAVA_API_SUN_AWT_GEOM_PATHCONSUMER2D_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::awt::geom { class PathConsumer2D; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::awt::geom::PathConsumer2D>
{
	static constexpr fixed_string class_name = "sun/awt/geom/PathConsumer2D";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_GEOM_PATHCONSUMER2D_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_AWT_GEOM_PATHCONSUMER2D)
#define SCAPIX_JAVA_API_SUN_AWT_GEOM_PATHCONSUMER2D

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::awt::geom::PathConsumer2D : public jni::object_base<"sun/awt/geom/PathConsumer2D",
	java::lang::Object>
{
public:

	void moveTo(jfloat p1, jfloat p2) { return call_method<"moveTo", void>(p1, p2); }
	void lineTo(jfloat p1, jfloat p2) { return call_method<"lineTo", void>(p1, p2); }
	void quadTo(jfloat p1, jfloat p2, jfloat p3, jfloat p4) { return call_method<"quadTo", void>(p1, p2, p3, p4); }
	void curveTo(jfloat p1, jfloat p2, jfloat p3, jfloat p4, jfloat p5, jfloat p6) { return call_method<"curveTo", void>(p1, p2, p3, p4, p5, p6); }
	void closePath() { return call_method<"closePath", void>(); }
	void pathDone() { return call_method<"pathDone", void>(); }
	jlong getNativeConsumer() { return call_method<"getNativeConsumer", jlong>(); }

protected:

	PathConsumer2D(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_GEOM_PATHCONSUMER2D
