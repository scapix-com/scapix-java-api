// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/sun/awt/geom/Curve.h>

#ifndef SCAPIX_JAVA_API_SUN_AWT_GEOM_ORDER0_FWD
#define SCAPIX_JAVA_API_SUN_AWT_GEOM_ORDER0_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::awt::geom { class Order0; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::awt::geom::Order0>
{
	static constexpr fixed_string class_name = "sun/awt/geom/Order0";
	using base_classes = std::tuple<scapix::java_api::sun::awt::geom::Curve>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_GEOM_ORDER0_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_AWT_GEOM_ORDER0)
#define SCAPIX_JAVA_API_SUN_AWT_GEOM_ORDER0

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/geom/Rectangle2D.h>
#include <scapix/java_api/sun/awt/geom/Crossings.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::awt::geom::Order0 : public jni::object_base<"sun/awt/geom/Order0",
	sun::awt::geom::Curve>
{
public:

	static jni::ref<sun::awt::geom::Order0> new_object(jdouble p1, jdouble p2) { return base_::new_object(p1, p2); }
	jint getOrder() { return call_method<"getOrder", jint>(); }
	jdouble getXTop() { return call_method<"getXTop", jdouble>(); }
	jdouble getYTop() { return call_method<"getYTop", jdouble>(); }
	jdouble getXBot() { return call_method<"getXBot", jdouble>(); }
	jdouble getYBot() { return call_method<"getYBot", jdouble>(); }
	jdouble getXMin() { return call_method<"getXMin", jdouble>(); }
	jdouble getXMax() { return call_method<"getXMax", jdouble>(); }
	jdouble getX0() { return call_method<"getX0", jdouble>(); }
	jdouble getY0() { return call_method<"getY0", jdouble>(); }
	jdouble getX1() { return call_method<"getX1", jdouble>(); }
	jdouble getY1() { return call_method<"getY1", jdouble>(); }
	jdouble XforY(jdouble p1) { return call_method<"XforY", jdouble>(p1); }
	jdouble TforY(jdouble p1) { return call_method<"TforY", jdouble>(p1); }
	jdouble XforT(jdouble p1) { return call_method<"XforT", jdouble>(p1); }
	jdouble YforT(jdouble p1) { return call_method<"YforT", jdouble>(p1); }
	jdouble dXforT(jdouble p1, jint p2) { return call_method<"dXforT", jdouble>(p1, p2); }
	jdouble dYforT(jdouble p1, jint p2) { return call_method<"dYforT", jdouble>(p1, p2); }
	jdouble nextVertical(jdouble p1, jdouble p2) { return call_method<"nextVertical", jdouble>(p1, p2); }
	jint crossingsFor(jdouble p1, jdouble p2) { return call_method<"crossingsFor", jint>(p1, p2); }
	jboolean accumulateCrossings(jni::ref<sun::awt::geom::Crossings> p1) { return call_method<"accumulateCrossings", jboolean>(p1); }
	void enlarge(jni::ref<java::awt::geom::Rectangle2D> p1) { return call_method<"enlarge", void>(p1); }
	jni::ref<sun::awt::geom::Curve> getSubCurve(jdouble p1, jdouble p2, jint p3) { return call_method<"getSubCurve", jni::ref<sun::awt::geom::Curve>>(p1, p2, p3); }
	jni::ref<sun::awt::geom::Curve> getReversedCurve() { return call_method<"getReversedCurve", jni::ref<sun::awt::geom::Curve>>(); }
	jint getSegment(jni::ref<jni::array<jdouble>> p1) { return call_method<"getSegment", jint>(p1); }

protected:

	Order0(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_GEOM_ORDER0
