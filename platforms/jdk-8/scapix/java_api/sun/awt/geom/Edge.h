// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_AWT_GEOM_EDGE_FWD
#define SCAPIX_JAVA_API_SUN_AWT_GEOM_EDGE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::awt::geom { class Edge; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::awt::geom::Edge>
{
	static constexpr fixed_string class_name = "sun/awt/geom/Edge";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_GEOM_EDGE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_AWT_GEOM_EDGE)
#define SCAPIX_JAVA_API_SUN_AWT_GEOM_EDGE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/sun/awt/geom/Curve.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::awt::geom::Edge : public jni::object_base<"sun/awt/geom/Edge",
	java::lang::Object>
{
public:

	static jni::ref<sun::awt::geom::Edge> new_object(jni::ref<sun::awt::geom::Curve> p1, jint p2) { return base_::new_object(p1, p2); }
	static jni::ref<sun::awt::geom::Edge> new_object(jni::ref<sun::awt::geom::Curve> p1, jint p2, jint p3) { return base_::new_object(p1, p2, p3); }
	jni::ref<sun::awt::geom::Curve> getCurve() { return call_method<"getCurve", jni::ref<sun::awt::geom::Curve>>(); }
	jint getCurveTag() { return call_method<"getCurveTag", jint>(); }
	jint getEdgeTag() { return call_method<"getEdgeTag", jint>(); }
	void setEdgeTag(jint p1) { return call_method<"setEdgeTag", void>(p1); }
	jint getEquivalence() { return call_method<"getEquivalence", jint>(); }
	void setEquivalence(jint p1) { return call_method<"setEquivalence", void>(p1); }
	jint compareTo(jni::ref<sun::awt::geom::Edge> p1, jni::ref<jni::array<jdouble>> p2) { return call_method<"compareTo", jint>(p1, p2); }
	void record(jdouble p1, jint p2) { return call_method<"record", void>(p1, p2); }
	jboolean isActiveFor(jdouble p1, jint p2) { return call_method<"isActiveFor", jboolean>(p1, p2); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	Edge(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_GEOM_EDGE
