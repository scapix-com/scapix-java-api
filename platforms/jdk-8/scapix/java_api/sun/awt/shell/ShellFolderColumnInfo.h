// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_AWT_SHELL_SHELLFOLDERCOLUMNINFO_FWD
#define SCAPIX_JAVA_API_SUN_AWT_SHELL_SHELLFOLDERCOLUMNINFO_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::awt::shell { class ShellFolderColumnInfo; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::awt::shell::ShellFolderColumnInfo>
{
	static constexpr fixed_string class_name = "sun/awt/shell/ShellFolderColumnInfo";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_SHELL_SHELLFOLDERCOLUMNINFO_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_AWT_SHELL_SHELLFOLDERCOLUMNINFO)
#define SCAPIX_JAVA_API_SUN_AWT_SHELL_SHELLFOLDERCOLUMNINFO

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Integer.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Comparator.h>
#include <scapix/java_api/javax/swing/SortOrder.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::awt::shell::ShellFolderColumnInfo : public jni::object_base<"sun/awt/shell/ShellFolderColumnInfo",
	java::lang::Object>
{
public:

	static jni::ref<sun::awt::shell::ShellFolderColumnInfo> new_object(jni::ref<java::lang::String> p1, jni::ref<java::lang::Integer> p2, jni::ref<java::lang::Integer> p3, jboolean p4, jni::ref<javax::swing::SortOrder> p5, jni::ref<java::util::Comparator> p6, jboolean p7) { return base_::new_object(p1, p2, p3, p4, p5, p6, p7); }
	static jni::ref<sun::awt::shell::ShellFolderColumnInfo> new_object(jni::ref<java::lang::String> p1, jni::ref<java::lang::Integer> p2, jni::ref<java::lang::Integer> p3, jboolean p4, jni::ref<javax::swing::SortOrder> p5, jni::ref<java::util::Comparator> p6) { return base_::new_object(p1, p2, p3, p4, p5, p6); }
	static jni::ref<sun::awt::shell::ShellFolderColumnInfo> new_object(jni::ref<java::lang::String> p1, jint p2, jint p3, jboolean p4) { return base_::new_object(p1, p2, p3, p4); }
	jni::ref<java::lang::String> getTitle() { return call_method<"getTitle", jni::ref<java::lang::String>>(); }
	void setTitle(jni::ref<java::lang::String> p1) { return call_method<"setTitle", void>(p1); }
	jni::ref<java::lang::Integer> getWidth() { return call_method<"getWidth", jni::ref<java::lang::Integer>>(); }
	void setWidth(jni::ref<java::lang::Integer> p1) { return call_method<"setWidth", void>(p1); }
	jni::ref<java::lang::Integer> getAlignment() { return call_method<"getAlignment", jni::ref<java::lang::Integer>>(); }
	void setAlignment(jni::ref<java::lang::Integer> p1) { return call_method<"setAlignment", void>(p1); }
	jboolean isVisible() { return call_method<"isVisible", jboolean>(); }
	void setVisible(jboolean p1) { return call_method<"setVisible", void>(p1); }
	jni::ref<javax::swing::SortOrder> getSortOrder() { return call_method<"getSortOrder", jni::ref<javax::swing::SortOrder>>(); }
	void setSortOrder(jni::ref<javax::swing::SortOrder> p1) { return call_method<"setSortOrder", void>(p1); }
	jni::ref<java::util::Comparator> getComparator() { return call_method<"getComparator", jni::ref<java::util::Comparator>>(); }
	void setComparator(jni::ref<java::util::Comparator> p1) { return call_method<"setComparator", void>(p1); }
	jboolean isCompareByColumn() { return call_method<"isCompareByColumn", jboolean>(); }
	void setCompareByColumn(jboolean p1) { return call_method<"setCompareByColumn", void>(p1); }

protected:

	ShellFolderColumnInfo(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_SHELL_SHELLFOLDERCOLUMNINFO
