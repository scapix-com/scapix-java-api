// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_AWT_WINDOWS_TRANSLUCENTWINDOWPAINTER_FWD
#define SCAPIX_JAVA_API_SUN_AWT_WINDOWS_TRANSLUCENTWINDOWPAINTER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::awt::windows { class TranslucentWindowPainter; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::awt::windows::TranslucentWindowPainter>
{
	static constexpr fixed_string class_name = "sun/awt/windows/TranslucentWindowPainter";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_WINDOWS_TRANSLUCENTWINDOWPAINTER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_AWT_WINDOWS_TRANSLUCENTWINDOWPAINTER)
#define SCAPIX_JAVA_API_SUN_AWT_WINDOWS_TRANSLUCENTWINDOWPAINTER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/sun/awt/windows/WWindowPeer.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::awt::windows::TranslucentWindowPainter : public jni::object_base<"sun/awt/windows/TranslucentWindowPainter",
	java::lang::Object>
{
public:

	static jni::ref<sun::awt::windows::TranslucentWindowPainter> createInstance(jni::ref<sun::awt::windows::WWindowPeer> p1) { return call_static_method<"createInstance", jni::ref<sun::awt::windows::TranslucentWindowPainter>>(p1); }
	void flush() { return call_method<"flush", void>(); }
	void updateWindow(jboolean p1) { return call_method<"updateWindow", void>(p1); }

protected:

	TranslucentWindowPainter(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_WINDOWS_TRANSLUCENTWINDOWPAINTER
