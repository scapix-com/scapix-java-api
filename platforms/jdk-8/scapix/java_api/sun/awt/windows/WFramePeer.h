// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/sun/awt/windows/WWindowPeer.h>
#include <scapix/java_api/java/awt/peer/FramePeer.h>

#ifndef SCAPIX_JAVA_API_SUN_AWT_WINDOWS_WFRAMEPEER_FWD
#define SCAPIX_JAVA_API_SUN_AWT_WINDOWS_WFRAMEPEER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::awt::windows { class WFramePeer; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::awt::windows::WFramePeer>
{
	static constexpr fixed_string class_name = "sun/awt/windows/WFramePeer";
	using base_classes = std::tuple<scapix::java_api::sun::awt::windows::WWindowPeer, scapix::java_api::java::awt::peer::FramePeer>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_WINDOWS_WFRAMEPEER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_AWT_WINDOWS_WFRAMEPEER)
#define SCAPIX_JAVA_API_SUN_AWT_WINDOWS_WFRAMEPEER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Dimension.h>
#include <scapix/java_api/java/awt/GraphicsConfiguration.h>
#include <scapix/java_api/java/awt/MenuBar.h>
#include <scapix/java_api/java/awt/Rectangle.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::awt::windows::WFramePeer : public jni::object_base<"sun/awt/windows/WFramePeer",
	sun::awt::windows::WWindowPeer,
	java::awt::peer::FramePeer>
{
public:

	void setState(jint p1) { return call_method<"setState", void>(p1); }
	jint getState() { return call_method<"getState", jint>(); }
	void setExtendedState(jint p1) { return call_method<"setExtendedState", void>(p1); }
	jint getExtendedState() { return call_method<"getExtendedState", jint>(); }
	void setMaximizedBounds(jni::ref<java::awt::Rectangle> p1) { return call_method<"setMaximizedBounds", void>(p1); }
	jboolean updateGraphicsData(jni::ref<java::awt::GraphicsConfiguration> p1) { return call_method<"updateGraphicsData", jboolean>(p1); }
	void reshape(jint p1, jint p2, jint p3, jint p4) { return call_method<"reshape", void>(p1, p2, p3, p4); }
	jni::ref<java::awt::Dimension> getMinimumSize() { return call_method<"getMinimumSize", jni::ref<java::awt::Dimension>>(); }
	void setMenuBar(jni::ref<java::awt::MenuBar> p1) { return call_method<"setMenuBar", void>(p1); }
	void setBoundsPrivate(jint p1, jint p2, jint p3, jint p4) { return call_method<"setBoundsPrivate", void>(p1, p2, p3, p4); }
	jni::ref<java::awt::Rectangle> getBoundsPrivate() { return call_method<"getBoundsPrivate", jni::ref<java::awt::Rectangle>>(); }
	void emulateActivation(jboolean p1) { return call_method<"emulateActivation", void>(p1); }

protected:

	WFramePeer(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_WINDOWS_WFRAMEPEER
