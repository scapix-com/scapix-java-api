// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/sun/awt/windows/WComponentPeer.h>
#include <scapix/java_api/java/awt/peer/ChoicePeer.h>

#ifndef SCAPIX_JAVA_API_SUN_AWT_WINDOWS_WCHOICEPEER_FWD
#define SCAPIX_JAVA_API_SUN_AWT_WINDOWS_WCHOICEPEER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::awt::windows { class WChoicePeer; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::awt::windows::WChoicePeer>
{
	static constexpr fixed_string class_name = "sun/awt/windows/WChoicePeer";
	using base_classes = std::tuple<scapix::java_api::sun::awt::windows::WComponentPeer, scapix::java_api::java::awt::peer::ChoicePeer>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_WINDOWS_WCHOICEPEER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_AWT_WINDOWS_WCHOICEPEER)
#define SCAPIX_JAVA_API_SUN_AWT_WINDOWS_WCHOICEPEER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Dimension.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::awt::windows::WChoicePeer : public jni::object_base<"sun/awt/windows/WChoicePeer",
	sun::awt::windows::WComponentPeer,
	java::awt::peer::ChoicePeer>
{
public:

	jni::ref<java::awt::Dimension> getMinimumSize() { return call_method<"getMinimumSize", jni::ref<java::awt::Dimension>>(); }
	jboolean isFocusable() { return call_method<"isFocusable", jboolean>(); }
	void select(jint p1) { return call_method<"select", void>(p1); }
	void add(jni::ref<java::lang::String> p1, jint p2) { return call_method<"add", void>(p1, p2); }
	jboolean shouldClearRectBeforePaint() { return call_method<"shouldClearRectBeforePaint", jboolean>(); }
	void removeAll() { return call_method<"removeAll", void>(); }
	void remove(jint p1) { return call_method<"remove", void>(p1); }
	void addItem(jni::ref<java::lang::String> p1, jint p2) { return call_method<"addItem", void>(p1, p2); }
	void addItems(jni::ref<jni::array<java::lang::String>> p1, jint p2) { return call_method<"addItems", void>(p1, p2); }
	void reshape(jint p1, jint p2, jint p3, jint p4) { return call_method<"reshape", void>(p1, p2, p3, p4); }

protected:

	WChoicePeer(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_WINDOWS_WCHOICEPEER
