// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/awt/dnd/peer/DragSourceContextPeer.h>

#ifndef SCAPIX_JAVA_API_SUN_AWT_DND_SUNDRAGSOURCECONTEXTPEER_FWD
#define SCAPIX_JAVA_API_SUN_AWT_DND_SUNDRAGSOURCECONTEXTPEER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::awt::dnd { class SunDragSourceContextPeer; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::awt::dnd::SunDragSourceContextPeer>
{
	static constexpr fixed_string class_name = "sun/awt/dnd/SunDragSourceContextPeer";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::awt::dnd::peer::DragSourceContextPeer>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_DND_SUNDRAGSOURCECONTEXTPEER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_AWT_DND_SUNDRAGSOURCECONTEXTPEER)
#define SCAPIX_JAVA_API_SUN_AWT_DND_SUNDRAGSOURCECONTEXTPEER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/AWTEvent.h>
#include <scapix/java_api/java/awt/Cursor.h>
#include <scapix/java_api/java/awt/Image.h>
#include <scapix/java_api/java/awt/Point.h>
#include <scapix/java_api/java/awt/dnd/DragGestureEvent.h>
#include <scapix/java_api/java/awt/dnd/DragSourceContext.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::awt::dnd::SunDragSourceContextPeer : public jni::object_base<"sun/awt/dnd/SunDragSourceContextPeer",
	java::lang::Object,
	java::awt::dnd::peer::DragSourceContextPeer>
{
public:

	static jni::ref<sun::awt::dnd::SunDragSourceContextPeer> new_object(jni::ref<java::awt::dnd::DragGestureEvent> p1) { return base_::new_object(p1); }
	void startSecondaryEventLoop() { return call_method<"startSecondaryEventLoop", void>(); }
	void quitSecondaryEventLoop() { return call_method<"quitSecondaryEventLoop", void>(); }
	void startDrag(jni::ref<java::awt::dnd::DragSourceContext> p1, jni::ref<java::awt::Cursor> p2, jni::ref<java::awt::Image> p3, jni::ref<java::awt::Point> p4) { return call_method<"startDrag", void>(p1, p2, p3, p4); }
	void setCursor(jni::ref<java::awt::Cursor> p1) { return call_method<"setCursor", void>(p1); }
	jni::ref<java::awt::Cursor> getCursor() { return call_method<"getCursor", jni::ref<java::awt::Cursor>>(); }
	jni::ref<java::awt::Image> getDragImage() { return call_method<"getDragImage", jni::ref<java::awt::Image>>(); }
	jni::ref<java::awt::Point> getDragImageOffset() { return call_method<"getDragImageOffset", jni::ref<java::awt::Point>>(); }
	void transferablesFlavorsChanged() { return call_method<"transferablesFlavorsChanged", void>(); }
	static void setDragDropInProgress(jboolean p1) { return call_static_method<"setDragDropInProgress", void>(p1); }
	static jboolean checkEvent(jni::ref<java::awt::AWTEvent> p1) { return call_static_method<"checkEvent", jboolean>(p1); }
	static void checkDragDropInProgress() { return call_static_method<"checkDragDropInProgress", void>(); }
	static jboolean isDragDropInProgress() { return call_static_method<"isDragDropInProgress", jboolean>(); }
	static jint convertModifiersToDropAction(jint p1, jint p2) { return call_static_method<"convertModifiersToDropAction", jint>(p1, p2); }

protected:

	SunDragSourceContextPeer(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AWT_DND_SUNDRAGSOURCECONTEXTPEER
