// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_REFLECT_CONSTANTPOOL_FWD
#define SCAPIX_JAVA_API_SUN_REFLECT_CONSTANTPOOL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::reflect { class ConstantPool; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::reflect::ConstantPool>
{
	static constexpr fixed_string class_name = "sun/reflect/ConstantPool";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_REFLECT_CONSTANTPOOL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_REFLECT_CONSTANTPOOL)
#define SCAPIX_JAVA_API_SUN_REFLECT_CONSTANTPOOL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/reflect/Field.h>
#include <scapix/java_api/java/lang/reflect/Member.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::reflect::ConstantPool : public jni::object_base<"sun/reflect/ConstantPool",
	java::lang::Object>
{
public:

	static jni::ref<sun::reflect::ConstantPool> new_object() { return base_::new_object(); }
	jint getSize() { return call_method<"getSize", jint>(); }
	jni::ref<java::lang::Class> getClassAt(jint p1) { return call_method<"getClassAt", jni::ref<java::lang::Class>>(p1); }
	jni::ref<java::lang::Class> getClassAtIfLoaded(jint p1) { return call_method<"getClassAtIfLoaded", jni::ref<java::lang::Class>>(p1); }
	jni::ref<java::lang::reflect::Member> getMethodAt(jint p1) { return call_method<"getMethodAt", jni::ref<java::lang::reflect::Member>>(p1); }
	jni::ref<java::lang::reflect::Member> getMethodAtIfLoaded(jint p1) { return call_method<"getMethodAtIfLoaded", jni::ref<java::lang::reflect::Member>>(p1); }
	jni::ref<java::lang::reflect::Field> getFieldAt(jint p1) { return call_method<"getFieldAt", jni::ref<java::lang::reflect::Field>>(p1); }
	jni::ref<java::lang::reflect::Field> getFieldAtIfLoaded(jint p1) { return call_method<"getFieldAtIfLoaded", jni::ref<java::lang::reflect::Field>>(p1); }
	jni::ref<jni::array<java::lang::String>> getMemberRefInfoAt(jint p1) { return call_method<"getMemberRefInfoAt", jni::ref<jni::array<java::lang::String>>>(p1); }
	jint getIntAt(jint p1) { return call_method<"getIntAt", jint>(p1); }
	jlong getLongAt(jint p1) { return call_method<"getLongAt", jlong>(p1); }
	jfloat getFloatAt(jint p1) { return call_method<"getFloatAt", jfloat>(p1); }
	jdouble getDoubleAt(jint p1) { return call_method<"getDoubleAt", jdouble>(p1); }
	jni::ref<java::lang::String> getStringAt(jint p1) { return call_method<"getStringAt", jni::ref<java::lang::String>>(p1); }
	jni::ref<java::lang::String> getUTF8At(jint p1) { return call_method<"getUTF8At", jni::ref<java::lang::String>>(p1); }

protected:

	ConstantPool(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_REFLECT_CONSTANTPOOL
