// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Enum.h>

#ifndef SCAPIX_JAVA_API_SUN_NET_FTP_FTPREPLYCODE_FWD
#define SCAPIX_JAVA_API_SUN_NET_FTP_FTPREPLYCODE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::net::ftp { class FtpReplyCode; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::net::ftp::FtpReplyCode>
{
	static constexpr fixed_string class_name = "sun/net/ftp/FtpReplyCode";
	using base_classes = std::tuple<scapix::java_api::java::lang::Enum>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NET_FTP_FTPREPLYCODE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_NET_FTP_FTPREPLYCODE)
#define SCAPIX_JAVA_API_SUN_NET_FTP_FTPREPLYCODE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::net::ftp::FtpReplyCode : public jni::object_base<"sun/net/ftp/FtpReplyCode",
	java::lang::Enum>
{
public:

	static jni::ref<sun::net::ftp::FtpReplyCode> RESTART_MARKER() { return get_static_field<"RESTART_MARKER", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> SERVICE_READY_IN() { return get_static_field<"SERVICE_READY_IN", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> DATA_CONNECTION_ALREADY_OPEN() { return get_static_field<"DATA_CONNECTION_ALREADY_OPEN", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> FILE_STATUS_OK() { return get_static_field<"FILE_STATUS_OK", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> COMMAND_OK() { return get_static_field<"COMMAND_OK", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> NOT_IMPLEMENTED() { return get_static_field<"NOT_IMPLEMENTED", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> SYSTEM_STATUS() { return get_static_field<"SYSTEM_STATUS", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> DIRECTORY_STATUS() { return get_static_field<"DIRECTORY_STATUS", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> FILE_STATUS() { return get_static_field<"FILE_STATUS", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> HELP_MESSAGE() { return get_static_field<"HELP_MESSAGE", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> NAME_SYSTEM_TYPE() { return get_static_field<"NAME_SYSTEM_TYPE", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> SERVICE_READY() { return get_static_field<"SERVICE_READY", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> SERVICE_CLOSING() { return get_static_field<"SERVICE_CLOSING", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> DATA_CONNECTION_OPEN() { return get_static_field<"DATA_CONNECTION_OPEN", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> CLOSING_DATA_CONNECTION() { return get_static_field<"CLOSING_DATA_CONNECTION", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> ENTERING_PASSIVE_MODE() { return get_static_field<"ENTERING_PASSIVE_MODE", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> ENTERING_EXT_PASSIVE_MODE() { return get_static_field<"ENTERING_EXT_PASSIVE_MODE", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> LOGGED_IN() { return get_static_field<"LOGGED_IN", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> SECURELY_LOGGED_IN() { return get_static_field<"SECURELY_LOGGED_IN", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> SECURITY_EXCHANGE_OK() { return get_static_field<"SECURITY_EXCHANGE_OK", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> SECURITY_EXCHANGE_COMPLETE() { return get_static_field<"SECURITY_EXCHANGE_COMPLETE", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> FILE_ACTION_OK() { return get_static_field<"FILE_ACTION_OK", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> PATHNAME_CREATED() { return get_static_field<"PATHNAME_CREATED", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> NEED_PASSWORD() { return get_static_field<"NEED_PASSWORD", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> NEED_ACCOUNT() { return get_static_field<"NEED_ACCOUNT", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> NEED_ADAT() { return get_static_field<"NEED_ADAT", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> NEED_MORE_ADAT() { return get_static_field<"NEED_MORE_ADAT", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> FILE_ACTION_PENDING() { return get_static_field<"FILE_ACTION_PENDING", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> SERVICE_NOT_AVAILABLE() { return get_static_field<"SERVICE_NOT_AVAILABLE", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> CANT_OPEN_DATA_CONNECTION() { return get_static_field<"CANT_OPEN_DATA_CONNECTION", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> CONNECTION_CLOSED() { return get_static_field<"CONNECTION_CLOSED", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> NEED_SECURITY_RESOURCE() { return get_static_field<"NEED_SECURITY_RESOURCE", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> FILE_ACTION_NOT_TAKEN() { return get_static_field<"FILE_ACTION_NOT_TAKEN", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> ACTION_ABORTED() { return get_static_field<"ACTION_ABORTED", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> INSUFFICIENT_STORAGE() { return get_static_field<"INSUFFICIENT_STORAGE", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> COMMAND_UNRECOGNIZED() { return get_static_field<"COMMAND_UNRECOGNIZED", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> INVALID_PARAMETER() { return get_static_field<"INVALID_PARAMETER", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> BAD_SEQUENCE() { return get_static_field<"BAD_SEQUENCE", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> NOT_IMPLEMENTED_FOR_PARAMETER() { return get_static_field<"NOT_IMPLEMENTED_FOR_PARAMETER", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> NOT_LOGGED_IN() { return get_static_field<"NOT_LOGGED_IN", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> NEED_ACCOUNT_FOR_STORING() { return get_static_field<"NEED_ACCOUNT_FOR_STORING", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> PROT_LEVEL_DENIED() { return get_static_field<"PROT_LEVEL_DENIED", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> REQUEST_DENIED() { return get_static_field<"REQUEST_DENIED", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> FAILED_SECURITY_CHECK() { return get_static_field<"FAILED_SECURITY_CHECK", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> UNSUPPORTED_PROT_LEVEL() { return get_static_field<"UNSUPPORTED_PROT_LEVEL", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> PROT_LEVEL_NOT_SUPPORTED_BY_SECURITY() { return get_static_field<"PROT_LEVEL_NOT_SUPPORTED_BY_SECURITY", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> FILE_UNAVAILABLE() { return get_static_field<"FILE_UNAVAILABLE", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> PAGE_TYPE_UNKNOWN() { return get_static_field<"PAGE_TYPE_UNKNOWN", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> EXCEEDED_STORAGE() { return get_static_field<"EXCEEDED_STORAGE", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> FILE_NAME_NOT_ALLOWED() { return get_static_field<"FILE_NAME_NOT_ALLOWED", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> PROTECTED_REPLY() { return get_static_field<"PROTECTED_REPLY", jni::ref<sun::net::ftp::FtpReplyCode>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> UNKNOWN_ERROR() { return get_static_field<"UNKNOWN_ERROR", jni::ref<sun::net::ftp::FtpReplyCode>>(); }

	static jni::ref<jni::array<sun::net::ftp::FtpReplyCode>> values() { return call_static_method<"values", jni::ref<jni::array<sun::net::ftp::FtpReplyCode>>>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> valueOf(jni::ref<java::lang::String> p1) { return call_static_method<"valueOf", jni::ref<sun::net::ftp::FtpReplyCode>>(p1); }
	jint getValue() { return call_method<"getValue", jint>(); }
	jboolean isPositivePreliminary() { return call_method<"isPositivePreliminary", jboolean>(); }
	jboolean isPositiveCompletion() { return call_method<"isPositiveCompletion", jboolean>(); }
	jboolean isPositiveIntermediate() { return call_method<"isPositiveIntermediate", jboolean>(); }
	jboolean isTransientNegative() { return call_method<"isTransientNegative", jboolean>(); }
	jboolean isPermanentNegative() { return call_method<"isPermanentNegative", jboolean>(); }
	jboolean isProtectedReply() { return call_method<"isProtectedReply", jboolean>(); }
	jboolean isSyntax() { return call_method<"isSyntax", jboolean>(); }
	jboolean isInformation() { return call_method<"isInformation", jboolean>(); }
	jboolean isConnection() { return call_method<"isConnection", jboolean>(); }
	jboolean isAuthentication() { return call_method<"isAuthentication", jboolean>(); }
	jboolean isUnspecified() { return call_method<"isUnspecified", jboolean>(); }
	jboolean isFileSystem() { return call_method<"isFileSystem", jboolean>(); }
	static jni::ref<sun::net::ftp::FtpReplyCode> find(jint p1) { return call_static_method<"find", jni::ref<sun::net::ftp::FtpReplyCode>>(p1); }

protected:

	FtpReplyCode(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NET_FTP_FTPREPLYCODE
