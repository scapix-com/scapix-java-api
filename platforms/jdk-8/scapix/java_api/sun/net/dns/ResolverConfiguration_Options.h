// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_NET_DNS_RESOLVERCONFIGURATION_OPTIONS_FWD
#define SCAPIX_JAVA_API_SUN_NET_DNS_RESOLVERCONFIGURATION_OPTIONS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::net::dns { class ResolverConfiguration_Options; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::net::dns::ResolverConfiguration_Options>
{
	static constexpr fixed_string class_name = "sun/net/dns/ResolverConfiguration$Options";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NET_DNS_RESOLVERCONFIGURATION_OPTIONS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_NET_DNS_RESOLVERCONFIGURATION_OPTIONS)
#define SCAPIX_JAVA_API_SUN_NET_DNS_RESOLVERCONFIGURATION_OPTIONS

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::net::dns::ResolverConfiguration_Options : public jni::object_base<"sun/net/dns/ResolverConfiguration$Options",
	java::lang::Object>
{
public:

	static jni::ref<sun::net::dns::ResolverConfiguration_Options> new_object() { return base_::new_object(); }
	jint attempts() { return call_method<"attempts", jint>(); }
	jint retrans() { return call_method<"retrans", jint>(); }

protected:

	ResolverConfiguration_Options(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NET_DNS_RESOLVERCONFIGURATION_OPTIONS
