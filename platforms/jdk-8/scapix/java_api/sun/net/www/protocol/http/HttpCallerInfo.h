// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_NET_WWW_PROTOCOL_HTTP_HTTPCALLERINFO_FWD
#define SCAPIX_JAVA_API_SUN_NET_WWW_PROTOCOL_HTTP_HTTPCALLERINFO_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::net::www::protocol::http { class HttpCallerInfo; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::net::www::protocol::http::HttpCallerInfo>
{
	static constexpr fixed_string class_name = "sun/net/www/protocol/http/HttpCallerInfo";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NET_WWW_PROTOCOL_HTTP_HTTPCALLERINFO_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_NET_WWW_PROTOCOL_HTTP_HTTPCALLERINFO)
#define SCAPIX_JAVA_API_SUN_NET_WWW_PROTOCOL_HTTP_HTTPCALLERINFO

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/net/Authenticator_RequestorType.h>
#include <scapix/java_api/java/net/InetAddress.h>
#include <scapix/java_api/java/net/URL.h>
#include <scapix/java_api/java/security/cert/X509Certificate.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::net::www::protocol::http::HttpCallerInfo : public jni::object_base<"sun/net/www/protocol/http/HttpCallerInfo",
	java::lang::Object>
{
public:

	jni::ref<java::net::URL> url() { return get_field<"url", jni::ref<java::net::URL>>(); }
	jni::ref<java::lang::String> host() { return get_field<"host", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> protocol() { return get_field<"protocol", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> prompt() { return get_field<"prompt", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> scheme() { return get_field<"scheme", jni::ref<java::lang::String>>(); }
	jint port() { return get_field<"port", jint>(); }
	jni::ref<java::net::InetAddress> addr() { return get_field<"addr", jni::ref<java::net::InetAddress>>(); }
	jni::ref<java::net::Authenticator_RequestorType> authType() { return get_field<"authType", jni::ref<java::net::Authenticator_RequestorType>>(); }
	jni::ref<java::security::cert::X509Certificate> serverCert() { return get_field<"serverCert", jni::ref<java::security::cert::X509Certificate>>(); }

	static jni::ref<sun::net::www::protocol::http::HttpCallerInfo> new_object(jni::ref<sun::net::www::protocol::http::HttpCallerInfo> p1, jni::ref<java::lang::String> p2) { return base_::new_object(p1, p2); }
	static jni::ref<sun::net::www::protocol::http::HttpCallerInfo> new_object(jni::ref<java::net::URL> p1) { return base_::new_object(p1); }
	static jni::ref<sun::net::www::protocol::http::HttpCallerInfo> new_object(jni::ref<java::net::URL> p1, jni::ref<java::security::cert::X509Certificate> p2) { return base_::new_object(p1, p2); }
	static jni::ref<sun::net::www::protocol::http::HttpCallerInfo> new_object(jni::ref<java::net::URL> p1, jni::ref<java::lang::String> p2, jint p3) { return base_::new_object(p1, p2, p3); }
	static jni::ref<sun::net::www::protocol::http::HttpCallerInfo> new_object(jni::ref<java::net::URL> p1, jni::ref<java::lang::String> p2, jint p3, jni::ref<java::security::cert::X509Certificate> p4) { return base_::new_object(p1, p2, p3, p4); }

protected:

	HttpCallerInfo(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NET_WWW_PROTOCOL_HTTP_HTTPCALLERINFO
