// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/awt/CompositeContext.h>

#ifndef SCAPIX_JAVA_API_SUN_JAVA2D_SUNCOMPOSITECONTEXT_FWD
#define SCAPIX_JAVA_API_SUN_JAVA2D_SUNCOMPOSITECONTEXT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::java2d { class SunCompositeContext; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::java2d::SunCompositeContext>
{
	static constexpr fixed_string class_name = "sun/java2d/SunCompositeContext";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::awt::CompositeContext>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_JAVA2D_SUNCOMPOSITECONTEXT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_JAVA2D_SUNCOMPOSITECONTEXT)
#define SCAPIX_JAVA_API_SUN_JAVA2D_SUNCOMPOSITECONTEXT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/AlphaComposite.h>
#include <scapix/java_api/java/awt/image/ColorModel.h>
#include <scapix/java_api/java/awt/image/Raster.h>
#include <scapix/java_api/java/awt/image/WritableRaster.h>
#include <scapix/java_api/sun/java2d/loops/XORComposite.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::java2d::SunCompositeContext : public jni::object_base<"sun/java2d/SunCompositeContext",
	java::lang::Object,
	java::awt::CompositeContext>
{
public:

	static jni::ref<sun::java2d::SunCompositeContext> new_object(jni::ref<java::awt::AlphaComposite> p1, jni::ref<java::awt::image::ColorModel> p2, jni::ref<java::awt::image::ColorModel> p3) { return base_::new_object(p1, p2, p3); }
	static jni::ref<sun::java2d::SunCompositeContext> new_object(jni::ref<sun::java2d::loops::XORComposite> p1, jni::ref<java::awt::image::ColorModel> p2, jni::ref<java::awt::image::ColorModel> p3) { return base_::new_object(p1, p2, p3); }
	void dispose() { return call_method<"dispose", void>(); }
	void compose(jni::ref<java::awt::image::Raster> p1, jni::ref<java::awt::image::Raster> p2, jni::ref<java::awt::image::WritableRaster> p3) { return call_method<"compose", void>(p1, p2, p3); }

protected:

	SunCompositeContext(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_JAVA2D_SUNCOMPOSITECONTEXT
