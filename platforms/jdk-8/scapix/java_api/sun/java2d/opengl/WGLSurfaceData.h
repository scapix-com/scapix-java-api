// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/sun/java2d/opengl/OGLSurfaceData.h>

#ifndef SCAPIX_JAVA_API_SUN_JAVA2D_OPENGL_WGLSURFACEDATA_FWD
#define SCAPIX_JAVA_API_SUN_JAVA2D_OPENGL_WGLSURFACEDATA_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::java2d::opengl { class WGLSurfaceData; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::java2d::opengl::WGLSurfaceData>
{
	static constexpr fixed_string class_name = "sun/java2d/opengl/WGLSurfaceData";
	using base_classes = std::tuple<scapix::java_api::sun::java2d::opengl::OGLSurfaceData>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_JAVA2D_OPENGL_WGLSURFACEDATA_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_JAVA2D_OPENGL_WGLSURFACEDATA)
#define SCAPIX_JAVA_API_SUN_JAVA2D_OPENGL_WGLSURFACEDATA

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/GraphicsConfiguration.h>
#include <scapix/java_api/java/awt/Image.h>
#include <scapix/java_api/java/awt/image/ColorModel.h>
#include <scapix/java_api/sun/awt/windows/WComponentPeer.h>
#include <scapix/java_api/sun/java2d/opengl/WGLGraphicsConfig.h>
#include <scapix/java_api/sun/java2d/opengl/WGLSurfaceData_WGLOffScreenSurfaceData.h>
#include <scapix/java_api/sun/java2d/opengl/WGLSurfaceData_WGLWindowSurfaceData.h>
#include <scapix/java_api/sun/java2d/opengl/WGLSurfaceData_WGLVSyncOffScreenSurfaceData.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::java2d::opengl::WGLSurfaceData : public jni::object_base<"sun/java2d/opengl/WGLSurfaceData",
	sun::java2d::opengl::OGLSurfaceData>
{
public:

	using WGLWindowSurfaceData = WGLSurfaceData_WGLWindowSurfaceData;
	using WGLVSyncOffScreenSurfaceData = WGLSurfaceData_WGLVSyncOffScreenSurfaceData;
	using WGLOffScreenSurfaceData = WGLSurfaceData_WGLOffScreenSurfaceData;

	jni::ref<java::awt::GraphicsConfiguration> getDeviceConfiguration() { return call_method<"getDeviceConfiguration", jni::ref<java::awt::GraphicsConfiguration>>(); }
	static jni::ref<sun::java2d::opengl::WGLSurfaceData_WGLWindowSurfaceData> createData(jni::ref<sun::awt::windows::WComponentPeer> p1) { return call_static_method<"createData", jni::ref<sun::java2d::opengl::WGLSurfaceData_WGLWindowSurfaceData>>(p1); }
	static jni::ref<sun::java2d::opengl::WGLSurfaceData_WGLOffScreenSurfaceData> createData(jni::ref<sun::awt::windows::WComponentPeer> p1, jni::ref<java::awt::Image> p2, jint p3) { return call_static_method<"createData", jni::ref<sun::java2d::opengl::WGLSurfaceData_WGLOffScreenSurfaceData>>(p1, p2, p3); }
	static jni::ref<sun::java2d::opengl::WGLSurfaceData_WGLOffScreenSurfaceData> createData(jni::ref<sun::java2d::opengl::WGLGraphicsConfig> p1, jint p2, jint p3, jni::ref<java::awt::image::ColorModel> p4, jni::ref<java::awt::Image> p5, jint p6) { return call_static_method<"createData", jni::ref<sun::java2d::opengl::WGLSurfaceData_WGLOffScreenSurfaceData>>(p1, p2, p3, p4, p5, p6); }
	static jni::ref<sun::java2d::opengl::WGLGraphicsConfig> getGC(jni::ref<sun::awt::windows::WComponentPeer> p1) { return call_static_method<"getGC", jni::ref<sun::java2d::opengl::WGLGraphicsConfig>>(p1); }
	static jboolean updateWindowAccelImpl(jlong p1, jni::ref<sun::awt::windows::WComponentPeer> p2, jint p3, jint p4) { return call_static_method<"updateWindowAccelImpl", jboolean>(p1, p2, p3, p4); }

protected:

	WGLSurfaceData(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_JAVA2D_OPENGL_WGLSURFACEDATA
