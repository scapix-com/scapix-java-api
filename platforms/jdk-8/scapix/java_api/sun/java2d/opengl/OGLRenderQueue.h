// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/sun/java2d/pipe/RenderQueue.h>

#ifndef SCAPIX_JAVA_API_SUN_JAVA2D_OPENGL_OGLRENDERQUEUE_FWD
#define SCAPIX_JAVA_API_SUN_JAVA2D_OPENGL_OGLRENDERQUEUE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::java2d::opengl { class OGLRenderQueue; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::java2d::opengl::OGLRenderQueue>
{
	static constexpr fixed_string class_name = "sun/java2d/opengl/OGLRenderQueue";
	using base_classes = std::tuple<scapix::java_api::sun::java2d::pipe::RenderQueue>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_JAVA2D_OPENGL_OGLRENDERQUEUE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_JAVA2D_OPENGL_OGLRENDERQUEUE)
#define SCAPIX_JAVA_API_SUN_JAVA2D_OPENGL_OGLRENDERQUEUE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Runnable.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::java2d::opengl::OGLRenderQueue : public jni::object_base<"sun/java2d/opengl/OGLRenderQueue",
	sun::java2d::pipe::RenderQueue>
{
public:

	static jni::ref<sun::java2d::opengl::OGLRenderQueue> getInstance() { return call_static_method<"getInstance", jni::ref<sun::java2d::opengl::OGLRenderQueue>>(); }
	static void sync() { return call_static_method<"sync", void>(); }
	static void disposeGraphicsConfig(jlong p1) { return call_static_method<"disposeGraphicsConfig", void>(p1); }
	static jboolean isQueueFlusherThread() { return call_static_method<"isQueueFlusherThread", jboolean>(); }
	void flushNow() { return call_method<"flushNow", void>(); }
	void flushAndInvokeNow(jni::ref<java::lang::Runnable> p1) { return call_method<"flushAndInvokeNow", void>(p1); }

protected:

	OGLRenderQueue(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_JAVA2D_OPENGL_OGLRENDERQUEUE
