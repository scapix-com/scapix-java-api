// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/sun/java2d/opengl/OGLRenderer.h>

#ifndef SCAPIX_JAVA_API_SUN_JAVA2D_OPENGL_OGLRENDERER_TRACER_FWD
#define SCAPIX_JAVA_API_SUN_JAVA2D_OPENGL_OGLRENDERER_TRACER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::java2d::opengl { class OGLRenderer_Tracer; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::java2d::opengl::OGLRenderer_Tracer>
{
	static constexpr fixed_string class_name = "sun/java2d/opengl/OGLRenderer$Tracer";
	using base_classes = std::tuple<scapix::java_api::sun::java2d::opengl::OGLRenderer>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_JAVA2D_OPENGL_OGLRENDERER_TRACER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_JAVA2D_OPENGL_OGLRENDERER_TRACER)
#define SCAPIX_JAVA_API_SUN_JAVA2D_OPENGL_OGLRENDERER_TRACER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/sun/java2d/SunGraphics2D.h>
#include <scapix/java_api/sun/java2d/pipe/ParallelogramPipe.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::java2d::opengl::OGLRenderer_Tracer : public jni::object_base<"sun/java2d/opengl/OGLRenderer$Tracer",
	sun::java2d::opengl::OGLRenderer>
{
public:

	jni::ref<sun::java2d::pipe::ParallelogramPipe> getAAParallelogramPipe() { return call_method<"getAAParallelogramPipe", jni::ref<sun::java2d::pipe::ParallelogramPipe>>(); }
	void drawLine(jni::ref<sun::java2d::SunGraphics2D> p1, jint p2, jint p3, jint p4, jint p5) { return call_method<"drawLine", void>(p1, p2, p3, p4, p5); }
	void drawRect(jni::ref<sun::java2d::SunGraphics2D> p1, jint p2, jint p3, jint p4, jint p5) { return call_method<"drawRect", void>(p1, p2, p3, p4, p5); }
	void fillRect(jni::ref<sun::java2d::SunGraphics2D> p1, jint p2, jint p3, jint p4, jint p5) { return call_method<"fillRect", void>(p1, p2, p3, p4, p5); }
	void fillParallelogram(jni::ref<sun::java2d::SunGraphics2D> p1, jdouble p2, jdouble p3, jdouble p4, jdouble p5, jdouble p6, jdouble p7, jdouble p8, jdouble p9, jdouble p10, jdouble p11) { return call_method<"fillParallelogram", void>(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11); }
	void drawParallelogram(jni::ref<sun::java2d::SunGraphics2D> p1, jdouble p2, jdouble p3, jdouble p4, jdouble p5, jdouble p6, jdouble p7, jdouble p8, jdouble p9, jdouble p10, jdouble p11, jdouble p12, jdouble p13) { return call_method<"drawParallelogram", void>(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13); }
	void copyArea(jni::ref<sun::java2d::SunGraphics2D> p1, jint p2, jint p3, jint p4, jint p5, jint p6, jint p7) { return call_method<"copyArea", void>(p1, p2, p3, p4, p5, p6, p7); }

protected:

	OGLRenderer_Tracer(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_JAVA2D_OPENGL_OGLRENDERER_TRACER
