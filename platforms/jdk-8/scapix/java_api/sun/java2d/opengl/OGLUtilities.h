// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_JAVA2D_OPENGL_OGLUTILITIES_FWD
#define SCAPIX_JAVA_API_SUN_JAVA2D_OPENGL_OGLUTILITIES_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::java2d::opengl { class OGLUtilities; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::java2d::opengl::OGLUtilities>
{
	static constexpr fixed_string class_name = "sun/java2d/opengl/OGLUtilities";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_JAVA2D_OPENGL_OGLUTILITIES_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_JAVA2D_OPENGL_OGLUTILITIES)
#define SCAPIX_JAVA_API_SUN_JAVA2D_OPENGL_OGLUTILITIES

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Graphics.h>
#include <scapix/java_api/java/awt/GraphicsConfiguration.h>
#include <scapix/java_api/java/awt/Rectangle.h>
#include <scapix/java_api/java/lang/Runnable.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::java2d::opengl::OGLUtilities : public jni::object_base<"sun/java2d/opengl/OGLUtilities",
	java::lang::Object>
{
public:

	static jint UNDEFINED() { return get_static_field<"UNDEFINED", jint>(); }
	static jint WINDOW() { return get_static_field<"WINDOW", jint>(); }
	static jint TEXTURE() { return get_static_field<"TEXTURE", jint>(); }
	static jint FLIP_BACKBUFFER() { return get_static_field<"FLIP_BACKBUFFER", jint>(); }
	static jint FBOBJECT() { return get_static_field<"FBOBJECT", jint>(); }

	static jboolean isQueueFlusherThread() { return call_static_method<"isQueueFlusherThread", jboolean>(); }
	static jboolean invokeWithOGLContextCurrent(jni::ref<java::awt::Graphics> p1, jni::ref<java::lang::Runnable> p2) { return call_static_method<"invokeWithOGLContextCurrent", jboolean>(p1, p2); }
	static jboolean invokeWithOGLSharedContextCurrent(jni::ref<java::awt::GraphicsConfiguration> p1, jni::ref<java::lang::Runnable> p2) { return call_static_method<"invokeWithOGLSharedContextCurrent", jboolean>(p1, p2); }
	static jni::ref<java::awt::Rectangle> getOGLViewport(jni::ref<java::awt::Graphics> p1, jint p2, jint p3) { return call_static_method<"getOGLViewport", jni::ref<java::awt::Rectangle>>(p1, p2, p3); }
	static jni::ref<java::awt::Rectangle> getOGLScissorBox(jni::ref<java::awt::Graphics> p1) { return call_static_method<"getOGLScissorBox", jni::ref<java::awt::Rectangle>>(p1); }
	static jni::ref<java::lang::Object> getOGLSurfaceIdentifier(jni::ref<java::awt::Graphics> p1) { return call_static_method<"getOGLSurfaceIdentifier", jni::ref<java::lang::Object>>(p1); }
	static jint getOGLSurfaceType(jni::ref<java::awt::Graphics> p1) { return call_static_method<"getOGLSurfaceType", jint>(p1); }
	static jint getOGLTextureType(jni::ref<java::awt::Graphics> p1) { return call_static_method<"getOGLTextureType", jint>(p1); }

protected:

	OGLUtilities(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_JAVA2D_OPENGL_OGLUTILITIES
