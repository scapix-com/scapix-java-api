// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/sun/java2d/SurfaceDataProxy.h>

#ifndef SCAPIX_JAVA_API_SUN_JAVA2D_OPENGL_OGLSURFACEDATAPROXY_FWD
#define SCAPIX_JAVA_API_SUN_JAVA2D_OPENGL_OGLSURFACEDATAPROXY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::java2d::opengl { class OGLSurfaceDataProxy; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::java2d::opengl::OGLSurfaceDataProxy>
{
	static constexpr fixed_string class_name = "sun/java2d/opengl/OGLSurfaceDataProxy";
	using base_classes = std::tuple<scapix::java_api::sun::java2d::SurfaceDataProxy>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_JAVA2D_OPENGL_OGLSURFACEDATAPROXY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_JAVA2D_OPENGL_OGLSURFACEDATAPROXY)
#define SCAPIX_JAVA_API_SUN_JAVA2D_OPENGL_OGLSURFACEDATAPROXY

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Color.h>
#include <scapix/java_api/sun/java2d/SurfaceData.h>
#include <scapix/java_api/sun/java2d/loops/CompositeType.h>
#include <scapix/java_api/sun/java2d/opengl/OGLGraphicsConfig.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::java2d::opengl::OGLSurfaceDataProxy : public jni::object_base<"sun/java2d/opengl/OGLSurfaceDataProxy",
	sun::java2d::SurfaceDataProxy>
{
public:

	static jni::ref<sun::java2d::SurfaceDataProxy> createProxy(jni::ref<sun::java2d::SurfaceData> p1, jni::ref<sun::java2d::opengl::OGLGraphicsConfig> p2) { return call_static_method<"createProxy", jni::ref<sun::java2d::SurfaceDataProxy>>(p1, p2); }
	static jni::ref<sun::java2d::opengl::OGLSurfaceDataProxy> new_object(jni::ref<sun::java2d::opengl::OGLGraphicsConfig> p1, jint p2) { return base_::new_object(p1, p2); }
	jni::ref<sun::java2d::SurfaceData> validateSurfaceData(jni::ref<sun::java2d::SurfaceData> p1, jni::ref<sun::java2d::SurfaceData> p2, jint p3, jint p4) { return call_method<"validateSurfaceData", jni::ref<sun::java2d::SurfaceData>>(p1, p2, p3, p4); }
	jboolean isSupportedOperation(jni::ref<sun::java2d::SurfaceData> p1, jint p2, jni::ref<sun::java2d::loops::CompositeType> p3, jni::ref<java::awt::Color> p4) { return call_method<"isSupportedOperation", jboolean>(p1, p2, p3, p4); }

protected:

	OGLSurfaceDataProxy(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_JAVA2D_OPENGL_OGLSURFACEDATAPROXY
