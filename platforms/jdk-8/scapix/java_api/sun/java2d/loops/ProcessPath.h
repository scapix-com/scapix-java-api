// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_JAVA2D_LOOPS_PROCESSPATH_FWD
#define SCAPIX_JAVA_API_SUN_JAVA2D_LOOPS_PROCESSPATH_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::java2d::loops { class ProcessPath; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::java2d::loops::ProcessPath>
{
	static constexpr fixed_string class_name = "sun/java2d/loops/ProcessPath";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_JAVA2D_LOOPS_PROCESSPATH_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_JAVA2D_LOOPS_PROCESSPATH)
#define SCAPIX_JAVA_API_SUN_JAVA2D_LOOPS_PROCESSPATH

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/geom/Path2D_Float.h>
#include <scapix/java_api/sun/java2d/loops/ProcessPath_DrawHandler.h>
#include <scapix/java_api/sun/java2d/loops/ProcessPath_EndSubPathHandler.h>
#include <scapix/java_api/sun/java2d/loops/ProcessPath_ProcessHandler.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::java2d::loops::ProcessPath : public jni::object_base<"sun/java2d/loops/ProcessPath",
	java::lang::Object>
{
public:

	using DrawHandler = ProcessPath_DrawHandler;
	using EndSubPathHandler = ProcessPath_EndSubPathHandler;
	using ProcessHandler = ProcessPath_ProcessHandler;

	static jint PH_MODE_DRAW_CLIP() { return get_static_field<"PH_MODE_DRAW_CLIP", jint>(); }
	static jint PH_MODE_FILL_CLIP() { return get_static_field<"PH_MODE_FILL_CLIP", jint>(); }
	static jni::ref<sun::java2d::loops::ProcessPath_EndSubPathHandler> noopEndSubPathHandler() { return get_static_field<"noopEndSubPathHandler", jni::ref<sun::java2d::loops::ProcessPath_EndSubPathHandler>>(); }
	static void noopEndSubPathHandler(jni::ref<sun::java2d::loops::ProcessPath_EndSubPathHandler> v) { set_static_field<"noopEndSubPathHandler", jni::ref<sun::java2d::loops::ProcessPath_EndSubPathHandler>>(v); }
	static jint EPSFX() { return get_static_field<"EPSFX", jint>(); }
	static jfloat EPSF() { return get_static_field<"EPSF", jfloat>(); }

	static jni::ref<sun::java2d::loops::ProcessPath> new_object() { return base_::new_object(); }
	static jboolean fillPath(jni::ref<sun::java2d::loops::ProcessPath_DrawHandler> p1, jni::ref<java::awt::geom::Path2D_Float> p2, jint p3, jint p4) { return call_static_method<"fillPath", jboolean>(p1, p2, p3, p4); }
	static jboolean drawPath(jni::ref<sun::java2d::loops::ProcessPath_DrawHandler> p1, jni::ref<sun::java2d::loops::ProcessPath_EndSubPathHandler> p2, jni::ref<java::awt::geom::Path2D_Float> p3, jint p4, jint p5) { return call_static_method<"drawPath", jboolean>(p1, p2, p3, p4, p5); }
	static jboolean drawPath(jni::ref<sun::java2d::loops::ProcessPath_DrawHandler> p1, jni::ref<java::awt::geom::Path2D_Float> p2, jint p3, jint p4) { return call_static_method<"drawPath", jboolean>(p1, p2, p3, p4); }

protected:

	ProcessPath(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_JAVA2D_LOOPS_PROCESSPATH
