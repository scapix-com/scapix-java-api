// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/sun/java2d/SurfaceData.h>

#ifndef SCAPIX_JAVA_API_SUN_JAVA2D_NULLSURFACEDATA_FWD
#define SCAPIX_JAVA_API_SUN_JAVA2D_NULLSURFACEDATA_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::java2d { class NullSurfaceData; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::java2d::NullSurfaceData>
{
	static constexpr fixed_string class_name = "sun/java2d/NullSurfaceData";
	using base_classes = std::tuple<scapix::java_api::sun::java2d::SurfaceData>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_JAVA2D_NULLSURFACEDATA_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_JAVA2D_NULLSURFACEDATA)
#define SCAPIX_JAVA_API_SUN_JAVA2D_NULLSURFACEDATA

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/GraphicsConfiguration.h>
#include <scapix/java_api/java/awt/Rectangle.h>
#include <scapix/java_api/java/awt/image/Raster.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/sun/java2d/SunGraphics2D.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::java2d::NullSurfaceData : public jni::object_base<"sun/java2d/NullSurfaceData",
	sun::java2d::SurfaceData>
{
public:

	static jni::ref<sun::java2d::SurfaceData> theInstance() { return get_static_field<"theInstance", jni::ref<sun::java2d::SurfaceData>>(); }

	void invalidate() { return call_method<"invalidate", void>(); }
	jni::ref<sun::java2d::SurfaceData> getReplacement() { return call_method<"getReplacement", jni::ref<sun::java2d::SurfaceData>>(); }
	void validatePipe(jni::ref<sun::java2d::SunGraphics2D> p1) { return call_method<"validatePipe", void>(p1); }
	jni::ref<java::awt::GraphicsConfiguration> getDeviceConfiguration() { return call_method<"getDeviceConfiguration", jni::ref<java::awt::GraphicsConfiguration>>(); }
	jni::ref<java::awt::image::Raster> getRaster(jint p1, jint p2, jint p3, jint p4) { return call_method<"getRaster", jni::ref<java::awt::image::Raster>>(p1, p2, p3, p4); }
	jboolean useTightBBoxes() { return call_method<"useTightBBoxes", jboolean>(); }
	jint pixelFor(jint p1) { return call_method<"pixelFor", jint>(p1); }
	jint rgbFor(jint p1) { return call_method<"rgbFor", jint>(p1); }
	jni::ref<java::awt::Rectangle> getBounds() { return call_method<"getBounds", jni::ref<java::awt::Rectangle>>(); }
	jboolean copyArea(jni::ref<sun::java2d::SunGraphics2D> p1, jint p2, jint p3, jint p4, jint p5, jint p6, jint p7) { return call_method<"copyArea", jboolean>(p1, p2, p3, p4, p5, p6, p7); }
	jni::ref<java::lang::Object> getDestination() { return call_method<"getDestination", jni::ref<java::lang::Object>>(); }

protected:

	NullSurfaceData(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_JAVA2D_NULLSURFACEDATA
