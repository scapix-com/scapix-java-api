// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Enum.h>

#ifndef SCAPIX_JAVA_API_SUN_FONT_EATTRIBUTE_FWD
#define SCAPIX_JAVA_API_SUN_FONT_EATTRIBUTE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::font { class EAttribute; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::font::EAttribute>
{
	static constexpr fixed_string class_name = "sun/font/EAttribute";
	using base_classes = std::tuple<scapix::java_api::java::lang::Enum>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_FONT_EATTRIBUTE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_FONT_EATTRIBUTE)
#define SCAPIX_JAVA_API_SUN_FONT_EATTRIBUTE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/text/AttributedCharacterIterator_Attribute.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::font::EAttribute : public jni::object_base<"sun/font/EAttribute",
	java::lang::Enum>
{
public:

	static jni::ref<sun::font::EAttribute> EFAMILY() { return get_static_field<"EFAMILY", jni::ref<sun::font::EAttribute>>(); }
	static jni::ref<sun::font::EAttribute> EWEIGHT() { return get_static_field<"EWEIGHT", jni::ref<sun::font::EAttribute>>(); }
	static jni::ref<sun::font::EAttribute> EWIDTH() { return get_static_field<"EWIDTH", jni::ref<sun::font::EAttribute>>(); }
	static jni::ref<sun::font::EAttribute> EPOSTURE() { return get_static_field<"EPOSTURE", jni::ref<sun::font::EAttribute>>(); }
	static jni::ref<sun::font::EAttribute> ESIZE() { return get_static_field<"ESIZE", jni::ref<sun::font::EAttribute>>(); }
	static jni::ref<sun::font::EAttribute> ETRANSFORM() { return get_static_field<"ETRANSFORM", jni::ref<sun::font::EAttribute>>(); }
	static jni::ref<sun::font::EAttribute> ESUPERSCRIPT() { return get_static_field<"ESUPERSCRIPT", jni::ref<sun::font::EAttribute>>(); }
	static jni::ref<sun::font::EAttribute> EFONT() { return get_static_field<"EFONT", jni::ref<sun::font::EAttribute>>(); }
	static jni::ref<sun::font::EAttribute> ECHAR_REPLACEMENT() { return get_static_field<"ECHAR_REPLACEMENT", jni::ref<sun::font::EAttribute>>(); }
	static jni::ref<sun::font::EAttribute> EFOREGROUND() { return get_static_field<"EFOREGROUND", jni::ref<sun::font::EAttribute>>(); }
	static jni::ref<sun::font::EAttribute> EBACKGROUND() { return get_static_field<"EBACKGROUND", jni::ref<sun::font::EAttribute>>(); }
	static jni::ref<sun::font::EAttribute> EUNDERLINE() { return get_static_field<"EUNDERLINE", jni::ref<sun::font::EAttribute>>(); }
	static jni::ref<sun::font::EAttribute> ESTRIKETHROUGH() { return get_static_field<"ESTRIKETHROUGH", jni::ref<sun::font::EAttribute>>(); }
	static jni::ref<sun::font::EAttribute> ERUN_DIRECTION() { return get_static_field<"ERUN_DIRECTION", jni::ref<sun::font::EAttribute>>(); }
	static jni::ref<sun::font::EAttribute> EBIDI_EMBEDDING() { return get_static_field<"EBIDI_EMBEDDING", jni::ref<sun::font::EAttribute>>(); }
	static jni::ref<sun::font::EAttribute> EJUSTIFICATION() { return get_static_field<"EJUSTIFICATION", jni::ref<sun::font::EAttribute>>(); }
	static jni::ref<sun::font::EAttribute> EINPUT_METHOD_HIGHLIGHT() { return get_static_field<"EINPUT_METHOD_HIGHLIGHT", jni::ref<sun::font::EAttribute>>(); }
	static jni::ref<sun::font::EAttribute> EINPUT_METHOD_UNDERLINE() { return get_static_field<"EINPUT_METHOD_UNDERLINE", jni::ref<sun::font::EAttribute>>(); }
	static jni::ref<sun::font::EAttribute> ESWAP_COLORS() { return get_static_field<"ESWAP_COLORS", jni::ref<sun::font::EAttribute>>(); }
	static jni::ref<sun::font::EAttribute> ENUMERIC_SHAPING() { return get_static_field<"ENUMERIC_SHAPING", jni::ref<sun::font::EAttribute>>(); }
	static jni::ref<sun::font::EAttribute> EKERNING() { return get_static_field<"EKERNING", jni::ref<sun::font::EAttribute>>(); }
	static jni::ref<sun::font::EAttribute> ELIGATURES() { return get_static_field<"ELIGATURES", jni::ref<sun::font::EAttribute>>(); }
	static jni::ref<sun::font::EAttribute> ETRACKING() { return get_static_field<"ETRACKING", jni::ref<sun::font::EAttribute>>(); }
	static jni::ref<sun::font::EAttribute> EBASELINE_TRANSFORM() { return get_static_field<"EBASELINE_TRANSFORM", jni::ref<sun::font::EAttribute>>(); }

	static jni::ref<jni::array<sun::font::EAttribute>> values() { return call_static_method<"values", jni::ref<jni::array<sun::font::EAttribute>>>(); }
	static jni::ref<sun::font::EAttribute> valueOf(jni::ref<java::lang::String> p1) { return call_static_method<"valueOf", jni::ref<sun::font::EAttribute>>(p1); }
	static jni::ref<sun::font::EAttribute> forAttribute(jni::ref<java::text::AttributedCharacterIterator_Attribute> p1) { return call_static_method<"forAttribute", jni::ref<sun::font::EAttribute>>(p1); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	EAttribute(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_FONT_EATTRIBUTE
