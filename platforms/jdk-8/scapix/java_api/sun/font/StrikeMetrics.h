// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_FONT_STRIKEMETRICS_FWD
#define SCAPIX_JAVA_API_SUN_FONT_STRIKEMETRICS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::font { class StrikeMetrics; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::font::StrikeMetrics>
{
	static constexpr fixed_string class_name = "sun/font/StrikeMetrics";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_FONT_STRIKEMETRICS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_FONT_STRIKEMETRICS)
#define SCAPIX_JAVA_API_SUN_FONT_STRIKEMETRICS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::font::StrikeMetrics : public jni::object_base<"sun/font/StrikeMetrics",
	java::lang::Object>
{
public:

	jfloat ascentX() { return get_field<"ascentX", jfloat>(); }
	void ascentX(jfloat v) { set_field<"ascentX", jfloat>(v); }
	jfloat ascentY() { return get_field<"ascentY", jfloat>(); }
	void ascentY(jfloat v) { set_field<"ascentY", jfloat>(v); }
	jfloat descentX() { return get_field<"descentX", jfloat>(); }
	void descentX(jfloat v) { set_field<"descentX", jfloat>(v); }
	jfloat descentY() { return get_field<"descentY", jfloat>(); }
	void descentY(jfloat v) { set_field<"descentY", jfloat>(v); }
	jfloat baselineX() { return get_field<"baselineX", jfloat>(); }
	void baselineX(jfloat v) { set_field<"baselineX", jfloat>(v); }
	jfloat baselineY() { return get_field<"baselineY", jfloat>(); }
	void baselineY(jfloat v) { set_field<"baselineY", jfloat>(v); }
	jfloat leadingX() { return get_field<"leadingX", jfloat>(); }
	void leadingX(jfloat v) { set_field<"leadingX", jfloat>(v); }
	jfloat leadingY() { return get_field<"leadingY", jfloat>(); }
	void leadingY(jfloat v) { set_field<"leadingY", jfloat>(v); }
	jfloat maxAdvanceX() { return get_field<"maxAdvanceX", jfloat>(); }
	void maxAdvanceX(jfloat v) { set_field<"maxAdvanceX", jfloat>(v); }
	jfloat maxAdvanceY() { return get_field<"maxAdvanceY", jfloat>(); }
	void maxAdvanceY(jfloat v) { set_field<"maxAdvanceY", jfloat>(v); }

	jfloat getAscent() { return call_method<"getAscent", jfloat>(); }
	jfloat getDescent() { return call_method<"getDescent", jfloat>(); }
	jfloat getLeading() { return call_method<"getLeading", jfloat>(); }
	jfloat getMaxAdvance() { return call_method<"getMaxAdvance", jfloat>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	StrikeMetrics(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_FONT_STRIKEMETRICS
