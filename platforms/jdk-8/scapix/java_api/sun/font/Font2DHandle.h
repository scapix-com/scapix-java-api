// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_FONT_FONT2DHANDLE_FWD
#define SCAPIX_JAVA_API_SUN_FONT_FONT2DHANDLE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::font { class Font2DHandle; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::font::Font2DHandle>
{
	static constexpr fixed_string class_name = "sun/font/Font2DHandle";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_FONT_FONT2DHANDLE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_FONT_FONT2DHANDLE)
#define SCAPIX_JAVA_API_SUN_FONT_FONT2DHANDLE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/sun/font/Font2D.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::font::Font2DHandle : public jni::object_base<"sun/font/Font2DHandle",
	java::lang::Object>
{
public:

	jni::ref<sun::font::Font2D> font2D() { return get_field<"font2D", jni::ref<sun::font::Font2D>>(); }
	void font2D(jni::ref<sun::font::Font2D> v) { set_field<"font2D", jni::ref<sun::font::Font2D>>(v); }

	static jni::ref<sun::font::Font2DHandle> new_object(jni::ref<sun::font::Font2D> p1) { return base_::new_object(p1); }

protected:

	Font2DHandle(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_FONT_FONT2DHANDLE
