// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/ref/SoftReference.h>
#include <scapix/java_api/sun/font/StrikeCache_DisposableStrike.h>

#ifndef SCAPIX_JAVA_API_SUN_FONT_STRIKECACHE_SOFTDISPOSERREF_FWD
#define SCAPIX_JAVA_API_SUN_FONT_STRIKECACHE_SOFTDISPOSERREF_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::font { class StrikeCache_SoftDisposerRef; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::font::StrikeCache_SoftDisposerRef>
{
	static constexpr fixed_string class_name = "sun/font/StrikeCache$SoftDisposerRef";
	using base_classes = std::tuple<scapix::java_api::java::lang::ref::SoftReference, scapix::java_api::sun::font::StrikeCache_DisposableStrike>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_FONT_STRIKECACHE_SOFTDISPOSERREF_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_FONT_STRIKECACHE_SOFTDISPOSERREF)
#define SCAPIX_JAVA_API_SUN_FONT_STRIKECACHE_SOFTDISPOSERREF

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/sun/font/FontStrikeDisposer.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::font::StrikeCache_SoftDisposerRef : public jni::object_base<"sun/font/StrikeCache$SoftDisposerRef",
	java::lang::ref::SoftReference,
	sun::font::StrikeCache_DisposableStrike>
{
public:

	jni::ref<sun::font::FontStrikeDisposer> getDisposer() { return call_method<"getDisposer", jni::ref<sun::font::FontStrikeDisposer>>(); }

protected:

	StrikeCache_SoftDisposerRef(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_FONT_STRIKECACHE_SOFTDISPOSERREF
