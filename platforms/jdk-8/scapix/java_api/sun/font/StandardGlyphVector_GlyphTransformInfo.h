// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_FONT_STANDARDGLYPHVECTOR_GLYPHTRANSFORMINFO_FWD
#define SCAPIX_JAVA_API_SUN_FONT_STANDARDGLYPHVECTOR_GLYPHTRANSFORMINFO_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::font { class StandardGlyphVector_GlyphTransformInfo; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::font::StandardGlyphVector_GlyphTransformInfo>
{
	static constexpr fixed_string class_name = "sun/font/StandardGlyphVector$GlyphTransformInfo";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_FONT_STANDARDGLYPHVECTOR_GLYPHTRANSFORMINFO_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_FONT_STANDARDGLYPHVECTOR_GLYPHTRANSFORMINFO)
#define SCAPIX_JAVA_API_SUN_FONT_STANDARDGLYPHVECTOR_GLYPHTRANSFORMINFO

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::font::StandardGlyphVector_GlyphTransformInfo : public jni::object_base<"sun/font/StandardGlyphVector$GlyphTransformInfo",
	java::lang::Object>
{
public:

	jboolean equals(jni::ref<sun::font::StandardGlyphVector_GlyphTransformInfo> p1) { return call_method<"equals", jboolean>(p1); }

protected:

	StandardGlyphVector_GlyphTransformInfo(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_FONT_STANDARDGLYPHVECTOR_GLYPHTRANSFORMINFO
