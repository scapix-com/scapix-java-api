// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/sun/font/CharToGlyphMapper.h>

#ifndef SCAPIX_JAVA_API_SUN_FONT_TYPE1GLYPHMAPPER_FWD
#define SCAPIX_JAVA_API_SUN_FONT_TYPE1GLYPHMAPPER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::font { class Type1GlyphMapper; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::font::Type1GlyphMapper>
{
	static constexpr fixed_string class_name = "sun/font/Type1GlyphMapper";
	using base_classes = std::tuple<scapix::java_api::sun::font::CharToGlyphMapper>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_FONT_TYPE1GLYPHMAPPER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_FONT_TYPE1GLYPHMAPPER)
#define SCAPIX_JAVA_API_SUN_FONT_TYPE1GLYPHMAPPER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/sun/font/Type1Font.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::font::Type1GlyphMapper : public jni::object_base<"sun/font/Type1GlyphMapper",
	sun::font::CharToGlyphMapper>
{
public:

	static jni::ref<sun::font::Type1GlyphMapper> new_object(jni::ref<sun::font::Type1Font> p1) { return base_::new_object(p1); }
	jint getNumGlyphs() { return call_method<"getNumGlyphs", jint>(); }
	jint getMissingGlyphCode() { return call_method<"getMissingGlyphCode", jint>(); }
	jboolean canDisplay(jchar p1) { return call_method<"canDisplay", jboolean>(p1); }
	jint charToGlyph(jchar p1) { return call_method<"charToGlyph", jint>(p1); }
	jint charToGlyph(jint p1) { return call_method<"charToGlyph", jint>(p1); }
	void charsToGlyphs(jint p1, jni::ref<jni::array<jchar>> p2, jni::ref<jni::array<jint>> p3) { return call_method<"charsToGlyphs", void>(p1, p2, p3); }
	void charsToGlyphs(jint p1, jni::ref<jni::array<jint>> p2, jni::ref<jni::array<jint>> p3) { return call_method<"charsToGlyphs", void>(p1, p2, p3); }
	jboolean charsToGlyphsNS(jint p1, jni::ref<jni::array<jchar>> p2, jni::ref<jni::array<jint>> p3) { return call_method<"charsToGlyphsNS", jboolean>(p1, p2, p3); }

protected:

	Type1GlyphMapper(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_FONT_TYPE1GLYPHMAPPER
