// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/sun/java2d/DisposerRecord.h>
#include <scapix/java_api/sun/java2d/Disposer_PollDisposable.h>

#ifndef SCAPIX_JAVA_API_SUN_FONT_FONTSTRIKEDISPOSER_FWD
#define SCAPIX_JAVA_API_SUN_FONT_FONTSTRIKEDISPOSER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::font { class FontStrikeDisposer; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::font::FontStrikeDisposer>
{
	static constexpr fixed_string class_name = "sun/font/FontStrikeDisposer";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::sun::java2d::DisposerRecord, scapix::java_api::sun::java2d::Disposer_PollDisposable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_FONT_FONTSTRIKEDISPOSER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_FONT_FONTSTRIKEDISPOSER)
#define SCAPIX_JAVA_API_SUN_FONT_FONTSTRIKEDISPOSER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/sun/font/Font2D.h>
#include <scapix/java_api/sun/font/FontStrikeDesc.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::font::FontStrikeDisposer : public jni::object_base<"sun/font/FontStrikeDisposer",
	java::lang::Object,
	sun::java2d::DisposerRecord,
	sun::java2d::Disposer_PollDisposable>
{
public:

	static jni::ref<sun::font::FontStrikeDisposer> new_object(jni::ref<sun::font::Font2D> p1, jni::ref<sun::font::FontStrikeDesc> p2, jlong p3, jni::ref<jni::array<jint>> p4) { return base_::new_object(p1, p2, p3, p4); }
	static jni::ref<sun::font::FontStrikeDisposer> new_object(jni::ref<sun::font::Font2D> p1, jni::ref<sun::font::FontStrikeDesc> p2, jlong p3, jni::ref<jni::array<jlong>> p4) { return base_::new_object(p1, p2, p3, p4); }
	static jni::ref<sun::font::FontStrikeDisposer> new_object(jni::ref<sun::font::Font2D> p1, jni::ref<sun::font::FontStrikeDesc> p2, jlong p3) { return base_::new_object(p1, p2, p3); }
	static jni::ref<sun::font::FontStrikeDisposer> new_object(jni::ref<sun::font::Font2D> p1, jni::ref<sun::font::FontStrikeDesc> p2) { return base_::new_object(p1, p2); }
	void dispose() { return call_method<"dispose", void>(); }

protected:

	FontStrikeDisposer(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_FONT_FONTSTRIKEDISPOSER
