// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_FONT_BIDIUTILS_FWD
#define SCAPIX_JAVA_API_SUN_FONT_BIDIUTILS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::font { class BidiUtils; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::font::BidiUtils>
{
	static constexpr fixed_string class_name = "sun/font/BidiUtils";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_FONT_BIDIUTILS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_FONT_BIDIUTILS)
#define SCAPIX_JAVA_API_SUN_FONT_BIDIUTILS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/text/Bidi.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::font::BidiUtils : public jni::object_base<"sun/font/BidiUtils",
	java::lang::Object>
{
public:

	static jni::ref<sun::font::BidiUtils> new_object() { return base_::new_object(); }
	static void getLevels(jni::ref<java::text::Bidi> p1, jni::ref<jni::array<jbyte>> p2, jint p3) { return call_static_method<"getLevels", void>(p1, p2, p3); }
	static jni::ref<jni::array<jbyte>> getLevels(jni::ref<java::text::Bidi> p1) { return call_static_method<"getLevels", jni::ref<jni::array<jbyte>>>(p1); }
	static jni::ref<jni::array<jint>> createVisualToLogicalMap(jni::ref<jni::array<jbyte>> p1) { return call_static_method<"createVisualToLogicalMap", jni::ref<jni::array<jint>>>(p1); }
	static jni::ref<jni::array<jint>> createInverseMap(jni::ref<jni::array<jint>> p1) { return call_static_method<"createInverseMap", jni::ref<jni::array<jint>>>(p1); }
	static jni::ref<jni::array<jint>> createContiguousOrder(jni::ref<jni::array<jint>> p1) { return call_static_method<"createContiguousOrder", jni::ref<jni::array<jint>>>(p1); }
	static jni::ref<jni::array<jint>> createNormalizedMap(jni::ref<jni::array<jint>> p1, jni::ref<jni::array<jbyte>> p2, jint p3, jint p4) { return call_static_method<"createNormalizedMap", jni::ref<jni::array<jint>>>(p1, p2, p3, p4); }
	static void reorderVisually(jni::ref<jni::array<jbyte>> p1, jni::ref<jni::array<java::lang::Object>> p2) { return call_static_method<"reorderVisually", void>(p1, p2); }

protected:

	BidiUtils(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_FONT_BIDIUTILS
