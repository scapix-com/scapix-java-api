// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_FONT_COREMETRICS_FWD
#define SCAPIX_JAVA_API_SUN_FONT_COREMETRICS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::font { class CoreMetrics; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::font::CoreMetrics>
{
	static constexpr fixed_string class_name = "sun/font/CoreMetrics";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_FONT_COREMETRICS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_FONT_COREMETRICS)
#define SCAPIX_JAVA_API_SUN_FONT_COREMETRICS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/font/LineMetrics.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::font::CoreMetrics : public jni::object_base<"sun/font/CoreMetrics",
	java::lang::Object>
{
public:

	jfloat ascent() { return get_field<"ascent", jfloat>(); }
	jfloat descent() { return get_field<"descent", jfloat>(); }
	jfloat leading() { return get_field<"leading", jfloat>(); }
	jfloat height() { return get_field<"height", jfloat>(); }
	jint baselineIndex() { return get_field<"baselineIndex", jint>(); }
	jni::ref<jni::array<jfloat>> baselineOffsets() { return get_field<"baselineOffsets", jni::ref<jni::array<jfloat>>>(); }
	jfloat strikethroughOffset() { return get_field<"strikethroughOffset", jfloat>(); }
	jfloat strikethroughThickness() { return get_field<"strikethroughThickness", jfloat>(); }
	jfloat underlineOffset() { return get_field<"underlineOffset", jfloat>(); }
	jfloat underlineThickness() { return get_field<"underlineThickness", jfloat>(); }
	jfloat ssOffset() { return get_field<"ssOffset", jfloat>(); }
	jfloat italicAngle() { return get_field<"italicAngle", jfloat>(); }

	static jni::ref<sun::font::CoreMetrics> new_object(jfloat p1, jfloat p2, jfloat p3, jfloat p4, jint p5, jni::ref<jni::array<jfloat>> p6, jfloat p7, jfloat p8, jfloat p9, jfloat p10, jfloat p11, jfloat p12) { return base_::new_object(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12); }
	static jni::ref<sun::font::CoreMetrics> get(jni::ref<java::awt::font::LineMetrics> p1) { return call_static_method<"get", jni::ref<sun::font::CoreMetrics>>(p1); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jboolean equals(jni::ref<java::lang::Object> p1) { return call_method<"equals", jboolean>(p1); }
	jboolean equals(jni::ref<sun::font::CoreMetrics> p1) { return call_method<"equals", jboolean>(p1); }
	jfloat effectiveBaselineOffset(jni::ref<jni::array<jfloat>> p1) { return call_method<"effectiveBaselineOffset", jfloat>(p1); }

protected:

	CoreMetrics(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_FONT_COREMETRICS
