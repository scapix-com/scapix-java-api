// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_FONT_FONTMANAGERFACTORY_FWD
#define SCAPIX_JAVA_API_SUN_FONT_FONTMANAGERFACTORY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::font { class FontManagerFactory; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::font::FontManagerFactory>
{
	static constexpr fixed_string class_name = "sun/font/FontManagerFactory";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_FONT_FONTMANAGERFACTORY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_FONT_FONTMANAGERFACTORY)
#define SCAPIX_JAVA_API_SUN_FONT_FONTMANAGERFACTORY

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/sun/font/FontManager.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::font::FontManagerFactory : public jni::object_base<"sun/font/FontManagerFactory",
	java::lang::Object>
{
public:

	static jni::ref<sun::font::FontManagerFactory> new_object() { return base_::new_object(); }
	static jni::ref<sun::font::FontManager> getInstance() { return call_static_method<"getInstance", jni::ref<sun::font::FontManager>>(); }

protected:

	FontManagerFactory(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_FONT_FONTMANAGERFACTORY
