// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/sun/font/GlyphLayout_LayoutEngine.h>
#include <scapix/java_api/sun/font/GlyphLayout_LayoutEngineFactory.h>

#ifndef SCAPIX_JAVA_API_SUN_FONT_SUNLAYOUTENGINE_FWD
#define SCAPIX_JAVA_API_SUN_FONT_SUNLAYOUTENGINE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::font { class SunLayoutEngine; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::font::SunLayoutEngine>
{
	static constexpr fixed_string class_name = "sun/font/SunLayoutEngine";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::sun::font::GlyphLayout_LayoutEngine, scapix::java_api::sun::font::GlyphLayout_LayoutEngineFactory>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_FONT_SUNLAYOUTENGINE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_FONT_SUNLAYOUTENGINE)
#define SCAPIX_JAVA_API_SUN_FONT_SUNLAYOUTENGINE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/geom/Point2D_Float.h>
#include <scapix/java_api/sun/font/Font2D.h>
#include <scapix/java_api/sun/font/FontStrikeDesc.h>
#include <scapix/java_api/sun/font/GlyphLayout_GVData.h>
#include <scapix/java_api/sun/font/GlyphLayout_LayoutEngineKey.h>
#include <scapix/java_api/sun/font/TextRecord.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::font::SunLayoutEngine : public jni::object_base<"sun/font/SunLayoutEngine",
	java::lang::Object,
	sun::font::GlyphLayout_LayoutEngine,
	sun::font::GlyphLayout_LayoutEngineFactory>
{
public:

	static jni::ref<sun::font::GlyphLayout_LayoutEngineFactory> instance() { return call_static_method<"instance", jni::ref<sun::font::GlyphLayout_LayoutEngineFactory>>(); }
	jni::ref<sun::font::GlyphLayout_LayoutEngine> getEngine(jni::ref<sun::font::Font2D> p1, jint p2, jint p3) { return call_method<"getEngine", jni::ref<sun::font::GlyphLayout_LayoutEngine>>(p1, p2, p3); }
	jni::ref<sun::font::GlyphLayout_LayoutEngine> getEngine(jni::ref<sun::font::GlyphLayout_LayoutEngineKey> p1) { return call_method<"getEngine", jni::ref<sun::font::GlyphLayout_LayoutEngine>>(p1); }
	void layout(jni::ref<sun::font::FontStrikeDesc> p1, jni::ref<jni::array<jfloat>> p2, jint p3, jint p4, jni::ref<sun::font::TextRecord> p5, jint p6, jni::ref<java::awt::geom::Point2D_Float> p7, jni::ref<sun::font::GlyphLayout_GVData> p8) { return call_method<"layout", void>(p1, p2, p3, p4, p5, p6, p7, p8); }

protected:

	SunLayoutEngine(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_FONT_SUNLAYOUTENGINE
