// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_SWING_MENUITEMLAYOUTHELPER_FWD
#define SCAPIX_JAVA_API_SUN_SWING_MENUITEMLAYOUTHELPER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::swing { class MenuItemLayoutHelper; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::swing::MenuItemLayoutHelper>
{
	static constexpr fixed_string class_name = "sun/swing/MenuItemLayoutHelper";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SWING_MENUITEMLAYOUTHELPER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SWING_MENUITEMLAYOUTHELPER)
#define SCAPIX_JAVA_API_SUN_SWING_MENUITEMLAYOUTHELPER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Dimension.h>
#include <scapix/java_api/java/awt/Font.h>
#include <scapix/java_api/java/awt/FontMetrics.h>
#include <scapix/java_api/java/awt/Rectangle.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/swing/Icon.h>
#include <scapix/java_api/javax/swing/JComponent.h>
#include <scapix/java_api/javax/swing/JMenuItem.h>
#include <scapix/java_api/javax/swing/text/View.h>
#include <scapix/java_api/sun/swing/MenuItemLayoutHelper_ColumnAlignment.h>
#include <scapix/java_api/sun/swing/MenuItemLayoutHelper_LayoutResult.h>
#include <scapix/java_api/sun/swing/MenuItemLayoutHelper_RectSize.h>
#include <scapix/java_api/sun/swing/StringUIClientPropertyKey.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::swing::MenuItemLayoutHelper : public jni::object_base<"sun/swing/MenuItemLayoutHelper",
	java::lang::Object>
{
public:

	using LayoutResult = MenuItemLayoutHelper_LayoutResult;
	using ColumnAlignment = MenuItemLayoutHelper_ColumnAlignment;
	using RectSize = MenuItemLayoutHelper_RectSize;

	static jni::ref<sun::swing::StringUIClientPropertyKey> MAX_ARROW_WIDTH() { return get_static_field<"MAX_ARROW_WIDTH", jni::ref<sun::swing::StringUIClientPropertyKey>>(); }
	static jni::ref<sun::swing::StringUIClientPropertyKey> MAX_CHECK_WIDTH() { return get_static_field<"MAX_CHECK_WIDTH", jni::ref<sun::swing::StringUIClientPropertyKey>>(); }
	static jni::ref<sun::swing::StringUIClientPropertyKey> MAX_ICON_WIDTH() { return get_static_field<"MAX_ICON_WIDTH", jni::ref<sun::swing::StringUIClientPropertyKey>>(); }
	static jni::ref<sun::swing::StringUIClientPropertyKey> MAX_TEXT_WIDTH() { return get_static_field<"MAX_TEXT_WIDTH", jni::ref<sun::swing::StringUIClientPropertyKey>>(); }
	static jni::ref<sun::swing::StringUIClientPropertyKey> MAX_ACC_WIDTH() { return get_static_field<"MAX_ACC_WIDTH", jni::ref<sun::swing::StringUIClientPropertyKey>>(); }
	static jni::ref<sun::swing::StringUIClientPropertyKey> MAX_LABEL_WIDTH() { return get_static_field<"MAX_LABEL_WIDTH", jni::ref<sun::swing::StringUIClientPropertyKey>>(); }

	static jni::ref<sun::swing::MenuItemLayoutHelper> new_object(jni::ref<javax::swing::JMenuItem> p1, jni::ref<javax::swing::Icon> p2, jni::ref<javax::swing::Icon> p3, jni::ref<java::awt::Rectangle> p4, jint p5, jni::ref<java::lang::String> p6, jboolean p7, jni::ref<java::awt::Font> p8, jni::ref<java::awt::Font> p9, jboolean p10, jni::ref<java::lang::String> p11) { return base_::new_object(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11); }
	static jboolean isColumnLayout(jboolean p1, jni::ref<javax::swing::JMenuItem> p2) { return call_static_method<"isColumnLayout", jboolean>(p1, p2); }
	static jboolean isColumnLayout(jboolean p1, jint p2, jint p3, jint p4) { return call_static_method<"isColumnLayout", jboolean>(p1, p2, p3, p4); }
	jni::ref<sun::swing::MenuItemLayoutHelper_LayoutResult> layoutMenuItem() { return call_method<"layoutMenuItem", jni::ref<sun::swing::MenuItemLayoutHelper_LayoutResult>>(); }
	jni::ref<sun::swing::MenuItemLayoutHelper_ColumnAlignment> getLTRColumnAlignment() { return call_method<"getLTRColumnAlignment", jni::ref<sun::swing::MenuItemLayoutHelper_ColumnAlignment>>(); }
	jni::ref<sun::swing::MenuItemLayoutHelper_ColumnAlignment> getRTLColumnAlignment() { return call_method<"getRTLColumnAlignment", jni::ref<sun::swing::MenuItemLayoutHelper_ColumnAlignment>>(); }
	static jni::ref<javax::swing::JComponent> getMenuItemParent(jni::ref<javax::swing::JMenuItem> p1) { return call_static_method<"getMenuItemParent", jni::ref<javax::swing::JComponent>>(p1); }
	static void clearUsedParentClientProperties(jni::ref<javax::swing::JMenuItem> p1) { return call_static_method<"clearUsedParentClientProperties", void>(p1); }
	static void clearUsedClientProperties(jni::ref<javax::swing::JComponent> p1) { return call_static_method<"clearUsedClientProperties", void>(p1); }
	static jint max(jni::ref<jni::array<jint>> p1) { return call_static_method<"max", jint>(p1); }
	static jni::ref<java::awt::Rectangle> createMaxRect() { return call_static_method<"createMaxRect", jni::ref<java::awt::Rectangle>>(); }
	static void addMaxWidth(jni::ref<sun::swing::MenuItemLayoutHelper_RectSize> p1, jint p2, jni::ref<java::awt::Dimension> p3) { return call_static_method<"addMaxWidth", void>(p1, p2, p3); }
	static void addWidth(jint p1, jint p2, jni::ref<java::awt::Dimension> p3) { return call_static_method<"addWidth", void>(p1, p2, p3); }
	jni::ref<javax::swing::JMenuItem> getMenuItem() { return call_method<"getMenuItem", jni::ref<javax::swing::JMenuItem>>(); }
	jni::ref<javax::swing::JComponent> getMenuItemParent() { return call_method<"getMenuItemParent", jni::ref<javax::swing::JComponent>>(); }
	jni::ref<java::awt::Font> getFont() { return call_method<"getFont", jni::ref<java::awt::Font>>(); }
	jni::ref<java::awt::Font> getAccFont() { return call_method<"getAccFont", jni::ref<java::awt::Font>>(); }
	jni::ref<java::awt::FontMetrics> getFontMetrics() { return call_method<"getFontMetrics", jni::ref<java::awt::FontMetrics>>(); }
	jni::ref<java::awt::FontMetrics> getAccFontMetrics() { return call_method<"getAccFontMetrics", jni::ref<java::awt::FontMetrics>>(); }
	jni::ref<javax::swing::Icon> getIcon() { return call_method<"getIcon", jni::ref<javax::swing::Icon>>(); }
	jni::ref<javax::swing::Icon> getCheckIcon() { return call_method<"getCheckIcon", jni::ref<javax::swing::Icon>>(); }
	jni::ref<javax::swing::Icon> getArrowIcon() { return call_method<"getArrowIcon", jni::ref<javax::swing::Icon>>(); }
	jni::ref<java::lang::String> getText() { return call_method<"getText", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getAccText() { return call_method<"getAccText", jni::ref<java::lang::String>>(); }
	jboolean isColumnLayout() { return call_method<"isColumnLayout", jboolean>(); }
	jboolean useCheckAndArrow() { return call_method<"useCheckAndArrow", jboolean>(); }
	jboolean isLeftToRight() { return call_method<"isLeftToRight", jboolean>(); }
	jboolean isTopLevelMenu() { return call_method<"isTopLevelMenu", jboolean>(); }
	jni::ref<javax::swing::text::View> getHtmlView() { return call_method<"getHtmlView", jni::ref<javax::swing::text::View>>(); }
	jint getVerticalAlignment() { return call_method<"getVerticalAlignment", jint>(); }
	jint getHorizontalAlignment() { return call_method<"getHorizontalAlignment", jint>(); }
	jint getVerticalTextPosition() { return call_method<"getVerticalTextPosition", jint>(); }
	jint getHorizontalTextPosition() { return call_method<"getHorizontalTextPosition", jint>(); }
	jint getGap() { return call_method<"getGap", jint>(); }
	jint getLeadingGap() { return call_method<"getLeadingGap", jint>(); }
	jint getAfterCheckIconGap() { return call_method<"getAfterCheckIconGap", jint>(); }
	jint getMinTextOffset() { return call_method<"getMinTextOffset", jint>(); }
	jni::ref<java::awt::Rectangle> getViewRect() { return call_method<"getViewRect", jni::ref<java::awt::Rectangle>>(); }
	jni::ref<sun::swing::MenuItemLayoutHelper_RectSize> getIconSize() { return call_method<"getIconSize", jni::ref<sun::swing::MenuItemLayoutHelper_RectSize>>(); }
	jni::ref<sun::swing::MenuItemLayoutHelper_RectSize> getTextSize() { return call_method<"getTextSize", jni::ref<sun::swing::MenuItemLayoutHelper_RectSize>>(); }
	jni::ref<sun::swing::MenuItemLayoutHelper_RectSize> getAccSize() { return call_method<"getAccSize", jni::ref<sun::swing::MenuItemLayoutHelper_RectSize>>(); }
	jni::ref<sun::swing::MenuItemLayoutHelper_RectSize> getCheckSize() { return call_method<"getCheckSize", jni::ref<sun::swing::MenuItemLayoutHelper_RectSize>>(); }
	jni::ref<sun::swing::MenuItemLayoutHelper_RectSize> getArrowSize() { return call_method<"getArrowSize", jni::ref<sun::swing::MenuItemLayoutHelper_RectSize>>(); }
	jni::ref<sun::swing::MenuItemLayoutHelper_RectSize> getLabelSize() { return call_method<"getLabelSize", jni::ref<sun::swing::MenuItemLayoutHelper_RectSize>>(); }
	jint getLeftTextExtraWidth() { return call_method<"getLeftTextExtraWidth", jint>(); }
	static jboolean useCheckAndArrow(jni::ref<javax::swing::JMenuItem> p1) { return call_static_method<"useCheckAndArrow", jboolean>(p1); }

protected:

	MenuItemLayoutHelper(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SWING_MENUITEMLAYOUTHELPER
