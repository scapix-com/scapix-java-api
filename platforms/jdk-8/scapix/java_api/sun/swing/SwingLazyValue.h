// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/javax/swing/UIDefaults_LazyValue.h>

#ifndef SCAPIX_JAVA_API_SUN_SWING_SWINGLAZYVALUE_FWD
#define SCAPIX_JAVA_API_SUN_SWING_SWINGLAZYVALUE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::swing { class SwingLazyValue; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::swing::SwingLazyValue>
{
	static constexpr fixed_string class_name = "sun/swing/SwingLazyValue";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::javax::swing::UIDefaults_LazyValue>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SWING_SWINGLAZYVALUE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SWING_SWINGLAZYVALUE)
#define SCAPIX_JAVA_API_SUN_SWING_SWINGLAZYVALUE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/swing/UIDefaults.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::swing::SwingLazyValue : public jni::object_base<"sun/swing/SwingLazyValue",
	java::lang::Object,
	javax::swing::UIDefaults_LazyValue>
{
public:

	static jni::ref<sun::swing::SwingLazyValue> new_object(jni::ref<java::lang::String> p1) { return base_::new_object(p1); }
	static jni::ref<sun::swing::SwingLazyValue> new_object(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return base_::new_object(p1, p2); }
	static jni::ref<sun::swing::SwingLazyValue> new_object(jni::ref<java::lang::String> p1, jni::ref<jni::array<java::lang::Object>> p2) { return base_::new_object(p1, p2); }
	static jni::ref<sun::swing::SwingLazyValue> new_object(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2, jni::ref<jni::array<java::lang::Object>> p3) { return base_::new_object(p1, p2, p3); }
	jni::ref<java::lang::Object> createValue(jni::ref<javax::swing::UIDefaults> p1) { return call_method<"createValue", jni::ref<java::lang::Object>>(p1); }

protected:

	SwingLazyValue(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SWING_SWINGLAZYVALUE
