// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/sun/swing/CachedPainter.h>

#ifndef SCAPIX_JAVA_API_SUN_SWING_PLAF_SYNTH_PAINT9PAINTER_FWD
#define SCAPIX_JAVA_API_SUN_SWING_PLAF_SYNTH_PAINT9PAINTER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::swing::plaf::synth { class Paint9Painter; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::swing::plaf::synth::Paint9Painter>
{
	static constexpr fixed_string class_name = "sun/swing/plaf/synth/Paint9Painter";
	using base_classes = std::tuple<scapix::java_api::sun::swing::CachedPainter>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SWING_PLAF_SYNTH_PAINT9PAINTER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SWING_PLAF_SYNTH_PAINT9PAINTER)
#define SCAPIX_JAVA_API_SUN_SWING_PLAF_SYNTH_PAINT9PAINTER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Component.h>
#include <scapix/java_api/java/awt/Graphics.h>
#include <scapix/java_api/java/awt/Image.h>
#include <scapix/java_api/java/awt/Insets.h>
#include <scapix/java_api/sun/swing/plaf/synth/Paint9Painter_PaintType.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::swing::plaf::synth::Paint9Painter : public jni::object_base<"sun/swing/plaf/synth/Paint9Painter",
	sun::swing::CachedPainter>
{
public:

	using PaintType = Paint9Painter_PaintType;

	static jint PAINT_TOP_LEFT() { return get_static_field<"PAINT_TOP_LEFT", jint>(); }
	static jint PAINT_TOP() { return get_static_field<"PAINT_TOP", jint>(); }
	static jint PAINT_TOP_RIGHT() { return get_static_field<"PAINT_TOP_RIGHT", jint>(); }
	static jint PAINT_LEFT() { return get_static_field<"PAINT_LEFT", jint>(); }
	static jint PAINT_CENTER() { return get_static_field<"PAINT_CENTER", jint>(); }
	static jint PAINT_RIGHT() { return get_static_field<"PAINT_RIGHT", jint>(); }
	static jint PAINT_BOTTOM_RIGHT() { return get_static_field<"PAINT_BOTTOM_RIGHT", jint>(); }
	static jint PAINT_BOTTOM() { return get_static_field<"PAINT_BOTTOM", jint>(); }
	static jint PAINT_BOTTOM_LEFT() { return get_static_field<"PAINT_BOTTOM_LEFT", jint>(); }
	static jint PAINT_ALL() { return get_static_field<"PAINT_ALL", jint>(); }

	static jboolean validImage(jni::ref<java::awt::Image> p1) { return call_static_method<"validImage", jboolean>(p1); }
	static jni::ref<sun::swing::plaf::synth::Paint9Painter> new_object(jint p1) { return base_::new_object(p1); }
	void paint(jni::ref<java::awt::Component> p1, jni::ref<java::awt::Graphics> p2, jint p3, jint p4, jint p5, jint p6, jni::ref<java::awt::Image> p7, jni::ref<java::awt::Insets> p8, jni::ref<java::awt::Insets> p9, jni::ref<sun::swing::plaf::synth::Paint9Painter_PaintType> p10, jint p11) { return call_method<"paint", void>(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11); }

protected:

	Paint9Painter(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SWING_PLAF_SYNTH_PAINT9PAINTER
