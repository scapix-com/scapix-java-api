// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/javax/swing/Icon.h>

#ifndef SCAPIX_JAVA_API_SUN_SWING_PLAF_SYNTH_SYNTHICON_FWD
#define SCAPIX_JAVA_API_SUN_SWING_PLAF_SYNTH_SYNTHICON_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::swing::plaf::synth { class SynthIcon; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::swing::plaf::synth::SynthIcon>
{
	static constexpr fixed_string class_name = "sun/swing/plaf/synth/SynthIcon";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::javax::swing::Icon>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SWING_PLAF_SYNTH_SYNTHICON_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SWING_PLAF_SYNTH_SYNTHICON)
#define SCAPIX_JAVA_API_SUN_SWING_PLAF_SYNTH_SYNTHICON

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Component.h>
#include <scapix/java_api/java/awt/Graphics.h>
#include <scapix/java_api/javax/swing/plaf/synth/SynthContext.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::swing::plaf::synth::SynthIcon : public jni::object_base<"sun/swing/plaf/synth/SynthIcon",
	java::lang::Object,
	javax::swing::Icon>
{
public:

	static jni::ref<sun::swing::plaf::synth::SynthIcon> new_object() { return base_::new_object(); }
	static jint getIconWidth(jni::ref<javax::swing::Icon> p1, jni::ref<javax::swing::plaf::synth::SynthContext> p2) { return call_static_method<"getIconWidth", jint>(p1, p2); }
	static jint getIconHeight(jni::ref<javax::swing::Icon> p1, jni::ref<javax::swing::plaf::synth::SynthContext> p2) { return call_static_method<"getIconHeight", jint>(p1, p2); }
	static void paintIcon(jni::ref<javax::swing::Icon> p1, jni::ref<javax::swing::plaf::synth::SynthContext> p2, jni::ref<java::awt::Graphics> p3, jint p4, jint p5, jint p6, jint p7) { return call_static_method<"paintIcon", void>(p1, p2, p3, p4, p5, p6, p7); }
	void paintIcon(jni::ref<javax::swing::plaf::synth::SynthContext> p1, jni::ref<java::awt::Graphics> p2, jint p3, jint p4, jint p5, jint p6) { return call_method<"paintIcon", void>(p1, p2, p3, p4, p5, p6); }
	jint getIconWidth(jni::ref<javax::swing::plaf::synth::SynthContext> p1) { return call_method<"getIconWidth", jint>(p1); }
	jint getIconHeight(jni::ref<javax::swing::plaf::synth::SynthContext> p1) { return call_method<"getIconHeight", jint>(p1); }
	void paintIcon(jni::ref<java::awt::Component> p1, jni::ref<java::awt::Graphics> p2, jint p3, jint p4) { return call_method<"paintIcon", void>(p1, p2, p3, p4); }
	jint getIconWidth() { return call_method<"getIconWidth", jint>(); }
	jint getIconHeight() { return call_method<"getIconHeight", jint>(); }

protected:

	SynthIcon(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SWING_PLAF_SYNTH_SYNTHICON
