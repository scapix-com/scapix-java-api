// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/sun/awt/LightweightFrame.h>
#include <scapix/java_api/javax/swing/RootPaneContainer.h>

#ifndef SCAPIX_JAVA_API_SUN_SWING_JLIGHTWEIGHTFRAME_FWD
#define SCAPIX_JAVA_API_SUN_SWING_JLIGHTWEIGHTFRAME_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::swing { class JLightweightFrame; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::swing::JLightweightFrame>
{
	static constexpr fixed_string class_name = "sun/swing/JLightweightFrame";
	using base_classes = std::tuple<scapix::java_api::sun::awt::LightweightFrame, scapix::java_api::javax::swing::RootPaneContainer>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SWING_JLIGHTWEIGHTFRAME_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SWING_JLIGHTWEIGHTFRAME)
#define SCAPIX_JAVA_API_SUN_SWING_JLIGHTWEIGHTFRAME

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Component.h>
#include <scapix/java_api/java/awt/Container.h>
#include <scapix/java_api/java/awt/Graphics.h>
#include <scapix/java_api/java/awt/dnd/DragGestureEvent.h>
#include <scapix/java_api/java/awt/dnd/DragGestureListener.h>
#include <scapix/java_api/java/awt/dnd/DragGestureRecognizer.h>
#include <scapix/java_api/java/awt/dnd/DragSource.h>
#include <scapix/java_api/java/awt/dnd/DropTarget.h>
#include <scapix/java_api/java/awt/dnd/peer/DragSourceContextPeer.h>
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/Runnable.h>
#include <scapix/java_api/javax/swing/JLayeredPane.h>
#include <scapix/java_api/javax/swing/JRootPane.h>
#include <scapix/java_api/sun/swing/LightweightContent.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::swing::JLightweightFrame : public jni::object_base<"sun/swing/JLightweightFrame",
	sun::awt::LightweightFrame,
	javax::swing::RootPaneContainer>
{
public:

	static jni::ref<sun::swing::JLightweightFrame> new_object() { return base_::new_object(); }
	void dispose() { return call_method<"dispose", void>(); }
	void setContent(jni::ref<sun::swing::LightweightContent> p1) { return call_method<"setContent", void>(p1); }
	jni::ref<java::awt::Graphics> getGraphics() { return call_method<"getGraphics", jni::ref<java::awt::Graphics>>(); }
	void grabFocus() { return call_method<"grabFocus", void>(); }
	void ungrabFocus() { return call_method<"ungrabFocus", void>(); }
	jint getScaleFactor() { return call_method<"getScaleFactor", jint>(); }
	void notifyDisplayChanged(jint p1) { return call_method<"notifyDisplayChanged", void>(p1); }
	void addNotify() { return call_method<"addNotify", void>(); }
	void reshape(jint p1, jint p2, jint p3, jint p4) { return call_method<"reshape", void>(p1, p2, p3, p4); }
	jni::ref<javax::swing::JRootPane> getRootPane() { return call_method<"getRootPane", jni::ref<javax::swing::JRootPane>>(); }
	void setContentPane(jni::ref<java::awt::Container> p1) { return call_method<"setContentPane", void>(p1); }
	jni::ref<java::awt::Container> getContentPane() { return call_method<"getContentPane", jni::ref<java::awt::Container>>(); }
	void setLayeredPane(jni::ref<javax::swing::JLayeredPane> p1) { return call_method<"setLayeredPane", void>(p1); }
	jni::ref<javax::swing::JLayeredPane> getLayeredPane() { return call_method<"getLayeredPane", jni::ref<javax::swing::JLayeredPane>>(); }
	void setGlassPane(jni::ref<java::awt::Component> p1) { return call_method<"setGlassPane", void>(p1); }
	jni::ref<java::awt::Component> getGlassPane() { return call_method<"getGlassPane", jni::ref<java::awt::Component>>(); }
	void overrideNativeWindowHandle(jlong p1, jni::ref<java::lang::Runnable> p2) { return call_method<"overrideNativeWindowHandle", void>(p1, p2); }
	jni::ref<java::awt::dnd::DragGestureRecognizer> createDragGestureRecognizer(jni::ref<java::lang::Class> p1, jni::ref<java::awt::dnd::DragSource> p2, jni::ref<java::awt::Component> p3, jint p4, jni::ref<java::awt::dnd::DragGestureListener> p5) { return call_method<"createDragGestureRecognizer", jni::ref<java::awt::dnd::DragGestureRecognizer>>(p1, p2, p3, p4, p5); }
	jni::ref<java::awt::dnd::peer::DragSourceContextPeer> createDragSourceContextPeer(jni::ref<java::awt::dnd::DragGestureEvent> p1) { return call_method<"createDragSourceContextPeer", jni::ref<java::awt::dnd::peer::DragSourceContextPeer>>(p1); }
	void addDropTarget(jni::ref<java::awt::dnd::DropTarget> p1) { return call_method<"addDropTarget", void>(p1); }
	void removeDropTarget(jni::ref<java::awt::dnd::DropTarget> p1) { return call_method<"removeDropTarget", void>(p1); }

protected:

	JLightweightFrame(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SWING_JLIGHTWEIGHTFRAME
