// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_UTIL_LOCALE_LOCALEEXTENSIONS_FWD
#define SCAPIX_JAVA_API_SUN_UTIL_LOCALE_LOCALEEXTENSIONS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::util::locale { class LocaleExtensions; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::util::locale::LocaleExtensions>
{
	static constexpr fixed_string class_name = "sun/util/locale/LocaleExtensions";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_UTIL_LOCALE_LOCALEEXTENSIONS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_UTIL_LOCALE_LOCALEEXTENSIONS)
#define SCAPIX_JAVA_API_SUN_UTIL_LOCALE_LOCALEEXTENSIONS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Character.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Set.h>
#include <scapix/java_api/sun/util/locale/Extension.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::util::locale::LocaleExtensions : public jni::object_base<"sun/util/locale/LocaleExtensions",
	java::lang::Object>
{
public:

	static jni::ref<sun::util::locale::LocaleExtensions> CALENDAR_JAPANESE() { return get_static_field<"CALENDAR_JAPANESE", jni::ref<sun::util::locale::LocaleExtensions>>(); }
	static jni::ref<sun::util::locale::LocaleExtensions> NUMBER_THAI() { return get_static_field<"NUMBER_THAI", jni::ref<sun::util::locale::LocaleExtensions>>(); }

	jni::ref<java::util::Set> getKeys() { return call_method<"getKeys", jni::ref<java::util::Set>>(); }
	jni::ref<sun::util::locale::Extension> getExtension(jni::ref<java::lang::Character> p1) { return call_method<"getExtension", jni::ref<sun::util::locale::Extension>>(p1); }
	jni::ref<java::lang::String> getExtensionValue(jni::ref<java::lang::Character> p1) { return call_method<"getExtensionValue", jni::ref<java::lang::String>>(p1); }
	jni::ref<java::util::Set> getUnicodeLocaleAttributes() { return call_method<"getUnicodeLocaleAttributes", jni::ref<java::util::Set>>(); }
	jni::ref<java::util::Set> getUnicodeLocaleKeys() { return call_method<"getUnicodeLocaleKeys", jni::ref<java::util::Set>>(); }
	jni::ref<java::lang::String> getUnicodeLocaleType(jni::ref<java::lang::String> p1) { return call_method<"getUnicodeLocaleType", jni::ref<java::lang::String>>(p1); }
	jboolean isEmpty() { return call_method<"isEmpty", jboolean>(); }
	static jboolean isValidKey(jchar p1) { return call_static_method<"isValidKey", jboolean>(p1); }
	static jboolean isValidUnicodeLocaleKey(jni::ref<java::lang::String> p1) { return call_static_method<"isValidUnicodeLocaleKey", jboolean>(p1); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getID() { return call_method<"getID", jni::ref<java::lang::String>>(); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jboolean equals(jni::ref<java::lang::Object> p1) { return call_method<"equals", jboolean>(p1); }

protected:

	LocaleExtensions(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_UTIL_LOCALE_LOCALEEXTENSIONS
