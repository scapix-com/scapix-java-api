// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_UTIL_LOCALE_INTERNALLOCALEBUILDER_FWD
#define SCAPIX_JAVA_API_SUN_UTIL_LOCALE_INTERNALLOCALEBUILDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::util::locale { class InternalLocaleBuilder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::util::locale::InternalLocaleBuilder>
{
	static constexpr fixed_string class_name = "sun/util/locale/InternalLocaleBuilder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_UTIL_LOCALE_INTERNALLOCALEBUILDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_UTIL_LOCALE_INTERNALLOCALEBUILDER)
#define SCAPIX_JAVA_API_SUN_UTIL_LOCALE_INTERNALLOCALEBUILDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/sun/util/locale/BaseLocale.h>
#include <scapix/java_api/sun/util/locale/LanguageTag.h>
#include <scapix/java_api/sun/util/locale/LocaleExtensions.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::util::locale::InternalLocaleBuilder : public jni::object_base<"sun/util/locale/InternalLocaleBuilder",
	java::lang::Object>
{
public:

	static jni::ref<sun::util::locale::InternalLocaleBuilder> new_object() { return base_::new_object(); }
	jni::ref<sun::util::locale::InternalLocaleBuilder> setLanguage(jni::ref<java::lang::String> p1) { return call_method<"setLanguage", jni::ref<sun::util::locale::InternalLocaleBuilder>>(p1); }
	jni::ref<sun::util::locale::InternalLocaleBuilder> setScript(jni::ref<java::lang::String> p1) { return call_method<"setScript", jni::ref<sun::util::locale::InternalLocaleBuilder>>(p1); }
	jni::ref<sun::util::locale::InternalLocaleBuilder> setRegion(jni::ref<java::lang::String> p1) { return call_method<"setRegion", jni::ref<sun::util::locale::InternalLocaleBuilder>>(p1); }
	jni::ref<sun::util::locale::InternalLocaleBuilder> setVariant(jni::ref<java::lang::String> p1) { return call_method<"setVariant", jni::ref<sun::util::locale::InternalLocaleBuilder>>(p1); }
	jni::ref<sun::util::locale::InternalLocaleBuilder> addUnicodeLocaleAttribute(jni::ref<java::lang::String> p1) { return call_method<"addUnicodeLocaleAttribute", jni::ref<sun::util::locale::InternalLocaleBuilder>>(p1); }
	jni::ref<sun::util::locale::InternalLocaleBuilder> removeUnicodeLocaleAttribute(jni::ref<java::lang::String> p1) { return call_method<"removeUnicodeLocaleAttribute", jni::ref<sun::util::locale::InternalLocaleBuilder>>(p1); }
	jni::ref<sun::util::locale::InternalLocaleBuilder> setUnicodeLocaleKeyword(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return call_method<"setUnicodeLocaleKeyword", jni::ref<sun::util::locale::InternalLocaleBuilder>>(p1, p2); }
	jni::ref<sun::util::locale::InternalLocaleBuilder> setExtension(jchar p1, jni::ref<java::lang::String> p2) { return call_method<"setExtension", jni::ref<sun::util::locale::InternalLocaleBuilder>>(p1, p2); }
	jni::ref<sun::util::locale::InternalLocaleBuilder> setExtensions(jni::ref<java::lang::String> p1) { return call_method<"setExtensions", jni::ref<sun::util::locale::InternalLocaleBuilder>>(p1); }
	jni::ref<sun::util::locale::InternalLocaleBuilder> setLanguageTag(jni::ref<sun::util::locale::LanguageTag> p1) { return call_method<"setLanguageTag", jni::ref<sun::util::locale::InternalLocaleBuilder>>(p1); }
	jni::ref<sun::util::locale::InternalLocaleBuilder> setLocale(jni::ref<sun::util::locale::BaseLocale> p1, jni::ref<sun::util::locale::LocaleExtensions> p2) { return call_method<"setLocale", jni::ref<sun::util::locale::InternalLocaleBuilder>>(p1, p2); }
	jni::ref<sun::util::locale::InternalLocaleBuilder> clear() { return call_method<"clear", jni::ref<sun::util::locale::InternalLocaleBuilder>>(); }
	jni::ref<sun::util::locale::InternalLocaleBuilder> clearExtensions() { return call_method<"clearExtensions", jni::ref<sun::util::locale::InternalLocaleBuilder>>(); }
	jni::ref<sun::util::locale::BaseLocale> getBaseLocale() { return call_method<"getBaseLocale", jni::ref<sun::util::locale::BaseLocale>>(); }
	jni::ref<sun::util::locale::LocaleExtensions> getLocaleExtensions() { return call_method<"getLocaleExtensions", jni::ref<sun::util::locale::LocaleExtensions>>(); }

protected:

	InternalLocaleBuilder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_UTIL_LOCALE_INTERNALLOCALEBUILDER
