// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/sun/util/locale/Extension.h>

#ifndef SCAPIX_JAVA_API_SUN_UTIL_LOCALE_UNICODELOCALEEXTENSION_FWD
#define SCAPIX_JAVA_API_SUN_UTIL_LOCALE_UNICODELOCALEEXTENSION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::util::locale { class UnicodeLocaleExtension; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::util::locale::UnicodeLocaleExtension>
{
	static constexpr fixed_string class_name = "sun/util/locale/UnicodeLocaleExtension";
	using base_classes = std::tuple<scapix::java_api::sun::util::locale::Extension>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_UTIL_LOCALE_UNICODELOCALEEXTENSION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_UTIL_LOCALE_UNICODELOCALEEXTENSION)
#define SCAPIX_JAVA_API_SUN_UTIL_LOCALE_UNICODELOCALEEXTENSION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Set.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::util::locale::UnicodeLocaleExtension : public jni::object_base<"sun/util/locale/UnicodeLocaleExtension",
	sun::util::locale::Extension>
{
public:

	static jchar SINGLETON() { return get_static_field<"SINGLETON", jchar>(); }
	static jni::ref<sun::util::locale::UnicodeLocaleExtension> CA_JAPANESE() { return get_static_field<"CA_JAPANESE", jni::ref<sun::util::locale::UnicodeLocaleExtension>>(); }
	static jni::ref<sun::util::locale::UnicodeLocaleExtension> NU_THAI() { return get_static_field<"NU_THAI", jni::ref<sun::util::locale::UnicodeLocaleExtension>>(); }

	jni::ref<java::util::Set> getUnicodeLocaleAttributes() { return call_method<"getUnicodeLocaleAttributes", jni::ref<java::util::Set>>(); }
	jni::ref<java::util::Set> getUnicodeLocaleKeys() { return call_method<"getUnicodeLocaleKeys", jni::ref<java::util::Set>>(); }
	jni::ref<java::lang::String> getUnicodeLocaleType(jni::ref<java::lang::String> p1) { return call_method<"getUnicodeLocaleType", jni::ref<java::lang::String>>(p1); }
	static jboolean isSingletonChar(jchar p1) { return call_static_method<"isSingletonChar", jboolean>(p1); }
	static jboolean isAttribute(jni::ref<java::lang::String> p1) { return call_static_method<"isAttribute", jboolean>(p1); }
	static jboolean isKey(jni::ref<java::lang::String> p1) { return call_static_method<"isKey", jboolean>(p1); }
	static jboolean isTypeSubtag(jni::ref<java::lang::String> p1) { return call_static_method<"isTypeSubtag", jboolean>(p1); }

protected:

	UnicodeLocaleExtension(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_UTIL_LOCALE_UNICODELOCALEEXTENSION
