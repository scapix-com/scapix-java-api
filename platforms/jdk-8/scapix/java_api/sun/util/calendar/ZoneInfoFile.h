// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_UTIL_CALENDAR_ZONEINFOFILE_FWD
#define SCAPIX_JAVA_API_SUN_UTIL_CALENDAR_ZONEINFOFILE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::util::calendar { class ZoneInfoFile; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::util::calendar::ZoneInfoFile>
{
	static constexpr fixed_string class_name = "sun/util/calendar/ZoneInfoFile";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_UTIL_CALENDAR_ZONEINFOFILE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_UTIL_CALENDAR_ZONEINFOFILE)
#define SCAPIX_JAVA_API_SUN_UTIL_CALENDAR_ZONEINFOFILE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/DataInput.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Map.h>
#include <scapix/java_api/sun/util/calendar/ZoneInfo.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::util::calendar::ZoneInfoFile : public jni::object_base<"sun/util/calendar/ZoneInfoFile",
	java::lang::Object>
{
public:

	static jni::ref<jni::array<java::lang::String>> getZoneIds() { return call_static_method<"getZoneIds", jni::ref<jni::array<java::lang::String>>>(); }
	static jni::ref<jni::array<java::lang::String>> getZoneIds(jint p1) { return call_static_method<"getZoneIds", jni::ref<jni::array<java::lang::String>>>(p1); }
	static jni::ref<sun::util::calendar::ZoneInfo> getZoneInfo(jni::ref<java::lang::String> p1) { return call_static_method<"getZoneInfo", jni::ref<sun::util::calendar::ZoneInfo>>(p1); }
	static jni::ref<java::util::Map> getAliasMap() { return call_static_method<"getAliasMap", jni::ref<java::util::Map>>(); }
	static jni::ref<java::lang::String> getVersion() { return call_static_method<"getVersion", jni::ref<java::lang::String>>(); }
	static jni::ref<sun::util::calendar::ZoneInfo> getCustomTimeZone(jni::ref<java::lang::String> p1, jint p2) { return call_static_method<"getCustomTimeZone", jni::ref<sun::util::calendar::ZoneInfo>>(p1, p2); }
	static jni::ref<java::lang::String> toCustomID(jint p1) { return call_static_method<"toCustomID", jni::ref<java::lang::String>>(p1); }
	static jboolean useOldMapping() { return call_static_method<"useOldMapping", jboolean>(); }
	static jni::ref<sun::util::calendar::ZoneInfo> getZoneInfo(jni::ref<java::io::DataInput> p1, jni::ref<java::lang::String> p2) { return call_static_method<"getZoneInfo", jni::ref<sun::util::calendar::ZoneInfo>>(p1, p2); }
	static jint readOffset(jni::ref<java::io::DataInput> p1) { return call_static_method<"readOffset", jint>(p1); }

protected:

	ZoneInfoFile(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_UTIL_CALENDAR_ZONEINFOFILE
