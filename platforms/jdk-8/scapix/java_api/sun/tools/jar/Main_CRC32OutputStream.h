// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/io/OutputStream.h>

#ifndef SCAPIX_JAVA_API_SUN_TOOLS_JAR_MAIN_CRC32OUTPUTSTREAM_FWD
#define SCAPIX_JAVA_API_SUN_TOOLS_JAR_MAIN_CRC32OUTPUTSTREAM_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::tools::jar { class Main_CRC32OutputStream; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::tools::jar::Main_CRC32OutputStream>
{
	static constexpr fixed_string class_name = "sun/tools/jar/Main$CRC32OutputStream";
	using base_classes = std::tuple<scapix::java_api::java::io::OutputStream>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_TOOLS_JAR_MAIN_CRC32OUTPUTSTREAM_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_TOOLS_JAR_MAIN_CRC32OUTPUTSTREAM)
#define SCAPIX_JAVA_API_SUN_TOOLS_JAR_MAIN_CRC32OUTPUTSTREAM

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/util/zip/ZipEntry.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::tools::jar::Main_CRC32OutputStream : public jni::object_base<"sun/tools/jar/Main$CRC32OutputStream",
	java::io::OutputStream>
{
public:

	void write(jint p1) { return call_method<"write", void>(p1); }
	void write(jni::ref<jni::array<jbyte>> p1, jint p2, jint p3) { return call_method<"write", void>(p1, p2, p3); }
	void updateEntry(jni::ref<java::util::zip::ZipEntry> p1) { return call_method<"updateEntry", void>(p1); }

protected:

	Main_CRC32OutputStream(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_TOOLS_JAR_MAIN_CRC32OUTPUTSTREAM
