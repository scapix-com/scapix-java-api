// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_MANAGEMENT_DIAGNOSTICCOMMANDIMPL_WRAPPER_FWD
#define SCAPIX_JAVA_API_SUN_MANAGEMENT_DIAGNOSTICCOMMANDIMPL_WRAPPER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::management { class DiagnosticCommandImpl_Wrapper; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::management::DiagnosticCommandImpl_Wrapper>
{
	static constexpr fixed_string class_name = "sun/management/DiagnosticCommandImpl$Wrapper";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MANAGEMENT_DIAGNOSTICCOMMANDIMPL_WRAPPER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_MANAGEMENT_DIAGNOSTICCOMMANDIMPL_WRAPPER)
#define SCAPIX_JAVA_API_SUN_MANAGEMENT_DIAGNOSTICCOMMANDIMPL_WRAPPER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::management::DiagnosticCommandImpl_Wrapper : public jni::object_base<"sun/management/DiagnosticCommandImpl$Wrapper",
	java::lang::Object>
{
public:

	jni::ref<java::lang::String> execute(jni::ref<jni::array<java::lang::String>> p1) { return call_method<"execute", jni::ref<java::lang::String>>(p1); }

protected:

	DiagnosticCommandImpl_Wrapper(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MANAGEMENT_DIAGNOSTICCOMMANDIMPL_WRAPPER
