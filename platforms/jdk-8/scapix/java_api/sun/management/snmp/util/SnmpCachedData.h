// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/sun/management/snmp/util/SnmpTableHandler.h>

#ifndef SCAPIX_JAVA_API_SUN_MANAGEMENT_SNMP_UTIL_SNMPCACHEDDATA_FWD
#define SCAPIX_JAVA_API_SUN_MANAGEMENT_SNMP_UTIL_SNMPCACHEDDATA_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::management::snmp::util { class SnmpCachedData; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::management::snmp::util::SnmpCachedData>
{
	static constexpr fixed_string class_name = "sun/management/snmp/util/SnmpCachedData";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::sun::management::snmp::util::SnmpTableHandler>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MANAGEMENT_SNMP_UTIL_SNMPCACHEDDATA_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_MANAGEMENT_SNMP_UTIL_SNMPCACHEDDATA)
#define SCAPIX_JAVA_API_SUN_MANAGEMENT_SNMP_UTIL_SNMPCACHEDDATA

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/jmx/snmp/SnmpOid.h>
#include <scapix/java_api/java/util/Comparator.h>
#include <scapix/java_api/java/util/TreeMap.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::management::snmp::util::SnmpCachedData : public jni::object_base<"sun/management/snmp/util/SnmpCachedData",
	java::lang::Object,
	sun::management::snmp::util::SnmpTableHandler>
{
public:

	static jni::ref<java::util::Comparator> oidComparator() { return get_static_field<"oidComparator", jni::ref<java::util::Comparator>>(); }
	jlong lastUpdated() { return get_field<"lastUpdated", jlong>(); }
	jni::ref<jni::array<com::sun::jmx::snmp::SnmpOid>> indexes() { return get_field<"indexes", jni::ref<jni::array<com::sun::jmx::snmp::SnmpOid>>>(); }
	jni::ref<jni::array<java::lang::Object>> datas() { return get_field<"datas", jni::ref<jni::array<java::lang::Object>>>(); }

	static jni::ref<sun::management::snmp::util::SnmpCachedData> new_object(jlong p1, jni::ref<jni::array<com::sun::jmx::snmp::SnmpOid>> p2, jni::ref<jni::array<java::lang::Object>> p3) { return base_::new_object(p1, p2, p3); }
	static jni::ref<sun::management::snmp::util::SnmpCachedData> new_object(jlong p1, jni::ref<java::util::TreeMap> p2) { return base_::new_object(p1, p2); }
	static jni::ref<sun::management::snmp::util::SnmpCachedData> new_object(jlong p1, jni::ref<java::util::TreeMap> p2, jboolean p3) { return base_::new_object(p1, p2, p3); }
	jint find(jni::ref<com::sun::jmx::snmp::SnmpOid> p1) { return call_method<"find", jint>(p1); }
	jni::ref<java::lang::Object> getData(jni::ref<com::sun::jmx::snmp::SnmpOid> p1) { return call_method<"getData", jni::ref<java::lang::Object>>(p1); }
	jni::ref<com::sun::jmx::snmp::SnmpOid> getNext(jni::ref<com::sun::jmx::snmp::SnmpOid> p1) { return call_method<"getNext", jni::ref<com::sun::jmx::snmp::SnmpOid>>(p1); }
	jboolean contains(jni::ref<com::sun::jmx::snmp::SnmpOid> p1) { return call_method<"contains", jboolean>(p1); }

protected:

	SnmpCachedData(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MANAGEMENT_SNMP_UTIL_SNMPCACHEDDATA
