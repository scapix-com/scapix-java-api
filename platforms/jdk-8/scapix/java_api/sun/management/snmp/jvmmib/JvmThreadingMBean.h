// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_MANAGEMENT_SNMP_JVMMIB_JVMTHREADINGMBEAN_FWD
#define SCAPIX_JAVA_API_SUN_MANAGEMENT_SNMP_JVMMIB_JVMTHREADINGMBEAN_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::management::snmp::jvmmib { class JvmThreadingMBean; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::management::snmp::jvmmib::JvmThreadingMBean>
{
	static constexpr fixed_string class_name = "sun/management/snmp/jvmmib/JvmThreadingMBean";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MANAGEMENT_SNMP_JVMMIB_JVMTHREADINGMBEAN_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_MANAGEMENT_SNMP_JVMMIB_JVMTHREADINGMBEAN)
#define SCAPIX_JAVA_API_SUN_MANAGEMENT_SNMP_JVMMIB_JVMTHREADINGMBEAN

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Long.h>
#include <scapix/java_api/sun/management/snmp/jvmmib/EnumJvmThreadContentionMonitoring.h>
#include <scapix/java_api/sun/management/snmp/jvmmib/EnumJvmThreadCpuTimeMonitoring.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::management::snmp::jvmmib::JvmThreadingMBean : public jni::object_base<"sun/management/snmp/jvmmib/JvmThreadingMBean",
	java::lang::Object>
{
public:

	jni::ref<sun::management::snmp::jvmmib::EnumJvmThreadCpuTimeMonitoring> getJvmThreadCpuTimeMonitoring() { return call_method<"getJvmThreadCpuTimeMonitoring", jni::ref<sun::management::snmp::jvmmib::EnumJvmThreadCpuTimeMonitoring>>(); }
	void setJvmThreadCpuTimeMonitoring(jni::ref<sun::management::snmp::jvmmib::EnumJvmThreadCpuTimeMonitoring> p1) { return call_method<"setJvmThreadCpuTimeMonitoring", void>(p1); }
	void checkJvmThreadCpuTimeMonitoring(jni::ref<sun::management::snmp::jvmmib::EnumJvmThreadCpuTimeMonitoring> p1) { return call_method<"checkJvmThreadCpuTimeMonitoring", void>(p1); }
	jni::ref<sun::management::snmp::jvmmib::EnumJvmThreadContentionMonitoring> getJvmThreadContentionMonitoring() { return call_method<"getJvmThreadContentionMonitoring", jni::ref<sun::management::snmp::jvmmib::EnumJvmThreadContentionMonitoring>>(); }
	void setJvmThreadContentionMonitoring(jni::ref<sun::management::snmp::jvmmib::EnumJvmThreadContentionMonitoring> p1) { return call_method<"setJvmThreadContentionMonitoring", void>(p1); }
	void checkJvmThreadContentionMonitoring(jni::ref<sun::management::snmp::jvmmib::EnumJvmThreadContentionMonitoring> p1) { return call_method<"checkJvmThreadContentionMonitoring", void>(p1); }
	jni::ref<java::lang::Long> getJvmThreadTotalStartedCount() { return call_method<"getJvmThreadTotalStartedCount", jni::ref<java::lang::Long>>(); }
	jni::ref<java::lang::Long> getJvmThreadPeakCount() { return call_method<"getJvmThreadPeakCount", jni::ref<java::lang::Long>>(); }
	jni::ref<java::lang::Long> getJvmThreadDaemonCount() { return call_method<"getJvmThreadDaemonCount", jni::ref<java::lang::Long>>(); }
	jni::ref<java::lang::Long> getJvmThreadCount() { return call_method<"getJvmThreadCount", jni::ref<java::lang::Long>>(); }
	jni::ref<java::lang::Long> getJvmThreadPeakCountReset() { return call_method<"getJvmThreadPeakCountReset", jni::ref<java::lang::Long>>(); }
	void setJvmThreadPeakCountReset(jni::ref<java::lang::Long> p1) { return call_method<"setJvmThreadPeakCountReset", void>(p1); }
	void checkJvmThreadPeakCountReset(jni::ref<java::lang::Long> p1) { return call_method<"checkJvmThreadPeakCountReset", void>(p1); }

protected:

	JvmThreadingMBean(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MANAGEMENT_SNMP_JVMMIB_JVMTHREADINGMBEAN
