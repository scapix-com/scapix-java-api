// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_MANAGEMENT_SNMP_JVMINSTR_JVMTHREADINSTANCEENTRYIMPL_THREADSTATEMAP_BYTE0_FWD
#define SCAPIX_JAVA_API_SUN_MANAGEMENT_SNMP_JVMINSTR_JVMTHREADINSTANCEENTRYIMPL_THREADSTATEMAP_BYTE0_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::management::snmp::jvminstr { class JvmThreadInstanceEntryImpl_ThreadStateMap_Byte0; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::management::snmp::jvminstr::JvmThreadInstanceEntryImpl_ThreadStateMap_Byte0>
{
	static constexpr fixed_string class_name = "sun/management/snmp/jvminstr/JvmThreadInstanceEntryImpl$ThreadStateMap$Byte0";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MANAGEMENT_SNMP_JVMINSTR_JVMTHREADINSTANCEENTRYIMPL_THREADSTATEMAP_BYTE0_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_MANAGEMENT_SNMP_JVMINSTR_JVMTHREADINSTANCEENTRYIMPL_THREADSTATEMAP_BYTE0)
#define SCAPIX_JAVA_API_SUN_MANAGEMENT_SNMP_JVMINSTR_JVMTHREADINSTANCEENTRYIMPL_THREADSTATEMAP_BYTE0

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::management::snmp::jvminstr::JvmThreadInstanceEntryImpl_ThreadStateMap_Byte0 : public jni::object_base<"sun/management/snmp/jvminstr/JvmThreadInstanceEntryImpl$ThreadStateMap$Byte0",
	java::lang::Object>
{
public:

	static jbyte inNative() { return get_static_field<"inNative", jbyte>(); }
	static jbyte suspended() { return get_static_field<"suspended", jbyte>(); }
	static jbyte newThread() { return get_static_field<"newThread", jbyte>(); }
	static jbyte runnable() { return get_static_field<"runnable", jbyte>(); }
	static jbyte blocked() { return get_static_field<"blocked", jbyte>(); }
	static jbyte terminated() { return get_static_field<"terminated", jbyte>(); }
	static jbyte waiting() { return get_static_field<"waiting", jbyte>(); }
	static jbyte timedWaiting() { return get_static_field<"timedWaiting", jbyte>(); }

	static jni::ref<sun::management::snmp::jvminstr::JvmThreadInstanceEntryImpl_ThreadStateMap_Byte0> new_object() { return base_::new_object(); }

protected:

	JvmThreadInstanceEntryImpl_ThreadStateMap_Byte0(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MANAGEMENT_SNMP_JVMINSTR_JVMTHREADINSTANCEENTRYIMPL_THREADSTATEMAP_BYTE0
