// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/sun/management/snmp/jvmmib/JvmMemPoolEntryMBean.h>

#ifndef SCAPIX_JAVA_API_SUN_MANAGEMENT_SNMP_JVMINSTR_JVMMEMPOOLENTRYIMPL_FWD
#define SCAPIX_JAVA_API_SUN_MANAGEMENT_SNMP_JVMINSTR_JVMMEMPOOLENTRYIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::management::snmp::jvminstr { class JvmMemPoolEntryImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::management::snmp::jvminstr::JvmMemPoolEntryImpl>
{
	static constexpr fixed_string class_name = "sun/management/snmp/jvminstr/JvmMemPoolEntryImpl";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::sun::management::snmp::jvmmib::JvmMemPoolEntryMBean>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MANAGEMENT_SNMP_JVMINSTR_JVMMEMPOOLENTRYIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_MANAGEMENT_SNMP_JVMINSTR_JVMMEMPOOLENTRYIMPL)
#define SCAPIX_JAVA_API_SUN_MANAGEMENT_SNMP_JVMINSTR_JVMMEMPOOLENTRYIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Integer.h>
#include <scapix/java_api/java/lang/Long.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/management/MemoryPoolMXBean.h>
#include <scapix/java_api/java/lang/management/MemoryType.h>
#include <scapix/java_api/sun/management/snmp/jvmmib/EnumJvmMemPoolCollectThreshdSupport.h>
#include <scapix/java_api/sun/management/snmp/jvmmib/EnumJvmMemPoolState.h>
#include <scapix/java_api/sun/management/snmp/jvmmib/EnumJvmMemPoolThreshdSupport.h>
#include <scapix/java_api/sun/management/snmp/jvmmib/EnumJvmMemPoolType.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::management::snmp::jvminstr::JvmMemPoolEntryImpl : public jni::object_base<"sun/management/snmp/jvminstr/JvmMemPoolEntryImpl",
	java::lang::Object,
	sun::management::snmp::jvmmib::JvmMemPoolEntryMBean>
{
public:

	static jni::ref<sun::management::snmp::jvminstr::JvmMemPoolEntryImpl> new_object(jni::ref<java::lang::management::MemoryPoolMXBean> p1, jint p2) { return base_::new_object(p1, p2); }
	jni::ref<java::lang::Long> getJvmMemPoolMaxSize() { return call_method<"getJvmMemPoolMaxSize", jni::ref<java::lang::Long>>(); }
	jni::ref<java::lang::Long> getJvmMemPoolUsed() { return call_method<"getJvmMemPoolUsed", jni::ref<java::lang::Long>>(); }
	jni::ref<java::lang::Long> getJvmMemPoolInitSize() { return call_method<"getJvmMemPoolInitSize", jni::ref<java::lang::Long>>(); }
	jni::ref<java::lang::Long> getJvmMemPoolCommitted() { return call_method<"getJvmMemPoolCommitted", jni::ref<java::lang::Long>>(); }
	jni::ref<java::lang::Long> getJvmMemPoolPeakMaxSize() { return call_method<"getJvmMemPoolPeakMaxSize", jni::ref<java::lang::Long>>(); }
	jni::ref<java::lang::Long> getJvmMemPoolPeakUsed() { return call_method<"getJvmMemPoolPeakUsed", jni::ref<java::lang::Long>>(); }
	jni::ref<java::lang::Long> getJvmMemPoolPeakCommitted() { return call_method<"getJvmMemPoolPeakCommitted", jni::ref<java::lang::Long>>(); }
	jni::ref<java::lang::Long> getJvmMemPoolCollectMaxSize() { return call_method<"getJvmMemPoolCollectMaxSize", jni::ref<java::lang::Long>>(); }
	jni::ref<java::lang::Long> getJvmMemPoolCollectUsed() { return call_method<"getJvmMemPoolCollectUsed", jni::ref<java::lang::Long>>(); }
	jni::ref<java::lang::Long> getJvmMemPoolCollectCommitted() { return call_method<"getJvmMemPoolCollectCommitted", jni::ref<java::lang::Long>>(); }
	jni::ref<java::lang::Long> getJvmMemPoolThreshold() { return call_method<"getJvmMemPoolThreshold", jni::ref<java::lang::Long>>(); }
	void setJvmMemPoolThreshold(jni::ref<java::lang::Long> p1) { return call_method<"setJvmMemPoolThreshold", void>(p1); }
	void checkJvmMemPoolThreshold(jni::ref<java::lang::Long> p1) { return call_method<"checkJvmMemPoolThreshold", void>(p1); }
	jni::ref<sun::management::snmp::jvmmib::EnumJvmMemPoolThreshdSupport> getJvmMemPoolThreshdSupport() { return call_method<"getJvmMemPoolThreshdSupport", jni::ref<sun::management::snmp::jvmmib::EnumJvmMemPoolThreshdSupport>>(); }
	jni::ref<java::lang::Long> getJvmMemPoolThreshdCount() { return call_method<"getJvmMemPoolThreshdCount", jni::ref<java::lang::Long>>(); }
	jni::ref<java::lang::Long> getJvmMemPoolCollectThreshold() { return call_method<"getJvmMemPoolCollectThreshold", jni::ref<java::lang::Long>>(); }
	void setJvmMemPoolCollectThreshold(jni::ref<java::lang::Long> p1) { return call_method<"setJvmMemPoolCollectThreshold", void>(p1); }
	void checkJvmMemPoolCollectThreshold(jni::ref<java::lang::Long> p1) { return call_method<"checkJvmMemPoolCollectThreshold", void>(p1); }
	jni::ref<sun::management::snmp::jvmmib::EnumJvmMemPoolCollectThreshdSupport> getJvmMemPoolCollectThreshdSupport() { return call_method<"getJvmMemPoolCollectThreshdSupport", jni::ref<sun::management::snmp::jvmmib::EnumJvmMemPoolCollectThreshdSupport>>(); }
	jni::ref<java::lang::Long> getJvmMemPoolCollectThreshdCount() { return call_method<"getJvmMemPoolCollectThreshdCount", jni::ref<java::lang::Long>>(); }
	static jni::ref<sun::management::snmp::jvmmib::EnumJvmMemPoolType> jvmMemPoolType(jni::ref<java::lang::management::MemoryType> p1) { return call_static_method<"jvmMemPoolType", jni::ref<sun::management::snmp::jvmmib::EnumJvmMemPoolType>>(p1); }
	jni::ref<sun::management::snmp::jvmmib::EnumJvmMemPoolType> getJvmMemPoolType() { return call_method<"getJvmMemPoolType", jni::ref<sun::management::snmp::jvmmib::EnumJvmMemPoolType>>(); }
	jni::ref<java::lang::String> getJvmMemPoolName() { return call_method<"getJvmMemPoolName", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::Integer> getJvmMemPoolIndex() { return call_method<"getJvmMemPoolIndex", jni::ref<java::lang::Integer>>(); }
	jni::ref<sun::management::snmp::jvmmib::EnumJvmMemPoolState> getJvmMemPoolState() { return call_method<"getJvmMemPoolState", jni::ref<sun::management::snmp::jvmmib::EnumJvmMemPoolState>>(); }
	jni::ref<java::lang::Long> getJvmMemPoolPeakReset() { return call_method<"getJvmMemPoolPeakReset", jni::ref<java::lang::Long>>(); }
	void setJvmMemPoolPeakReset(jni::ref<java::lang::Long> p1) { return call_method<"setJvmMemPoolPeakReset", void>(p1); }
	void checkJvmMemPoolPeakReset(jni::ref<java::lang::Long> p1) { return call_method<"checkJvmMemPoolPeakReset", void>(p1); }

protected:

	JvmMemPoolEntryImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MANAGEMENT_SNMP_JVMINSTR_JVMMEMPOOLENTRYIMPL
