// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_MANAGEMENT_NOTIFICATIONEMITTERSUPPORT_LISTENERINFO_FWD
#define SCAPIX_JAVA_API_SUN_MANAGEMENT_NOTIFICATIONEMITTERSUPPORT_LISTENERINFO_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::management { class NotificationEmitterSupport_ListenerInfo; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::management::NotificationEmitterSupport_ListenerInfo>
{
	static constexpr fixed_string class_name = "sun/management/NotificationEmitterSupport$ListenerInfo";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MANAGEMENT_NOTIFICATIONEMITTERSUPPORT_LISTENERINFO_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_MANAGEMENT_NOTIFICATIONEMITTERSUPPORT_LISTENERINFO)
#define SCAPIX_JAVA_API_SUN_MANAGEMENT_NOTIFICATIONEMITTERSUPPORT_LISTENERINFO

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/javax/management/NotificationFilter.h>
#include <scapix/java_api/javax/management/NotificationListener.h>
#include <scapix/java_api/sun/management/NotificationEmitterSupport.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::management::NotificationEmitterSupport_ListenerInfo : public jni::object_base<"sun/management/NotificationEmitterSupport$ListenerInfo",
	java::lang::Object>
{
public:

	jni::ref<javax::management::NotificationListener> listener() { return get_field<"listener", jni::ref<javax::management::NotificationListener>>(); }
	void listener(jni::ref<javax::management::NotificationListener> v) { set_field<"listener", jni::ref<javax::management::NotificationListener>>(v); }

	static jni::ref<sun::management::NotificationEmitterSupport_ListenerInfo> new_object(jni::ref<sun::management::NotificationEmitterSupport> p1, jni::ref<javax::management::NotificationListener> p2, jni::ref<javax::management::NotificationFilter> p3, jni::ref<java::lang::Object> p4) { return base_::new_object(p1, p2, p3, p4); }

protected:

	NotificationEmitterSupport_ListenerInfo(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MANAGEMENT_NOTIFICATIONEMITTERSUPPORT_LISTENERINFO
