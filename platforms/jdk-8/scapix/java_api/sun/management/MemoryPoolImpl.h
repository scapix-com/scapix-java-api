// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/management/MemoryPoolMXBean.h>

#ifndef SCAPIX_JAVA_API_SUN_MANAGEMENT_MEMORYPOOLIMPL_FWD
#define SCAPIX_JAVA_API_SUN_MANAGEMENT_MEMORYPOOLIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::management { class MemoryPoolImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::management::MemoryPoolImpl>
{
	static constexpr fixed_string class_name = "sun/management/MemoryPoolImpl";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::lang::management::MemoryPoolMXBean>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MANAGEMENT_MEMORYPOOLIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_MANAGEMENT_MEMORYPOOLIMPL)
#define SCAPIX_JAVA_API_SUN_MANAGEMENT_MEMORYPOOLIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/management/MemoryType.h>
#include <scapix/java_api/java/lang/management/MemoryUsage.h>
#include <scapix/java_api/javax/management/ObjectName.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::management::MemoryPoolImpl : public jni::object_base<"sun/management/MemoryPoolImpl",
	java::lang::Object,
	java::lang::management::MemoryPoolMXBean>
{
public:

	jni::ref<java::lang::String> getName() { return call_method<"getName", jni::ref<java::lang::String>>(); }
	jboolean isValid() { return call_method<"isValid", jboolean>(); }
	jni::ref<java::lang::management::MemoryType> getType() { return call_method<"getType", jni::ref<java::lang::management::MemoryType>>(); }
	jni::ref<java::lang::management::MemoryUsage> getUsage() { return call_method<"getUsage", jni::ref<java::lang::management::MemoryUsage>>(); }
	jni::ref<java::lang::management::MemoryUsage> getPeakUsage() { return call_method<"getPeakUsage", jni::ref<java::lang::management::MemoryUsage>>(); }
	jlong getUsageThreshold() { return call_method<"getUsageThreshold", jlong>(); }
	void setUsageThreshold(jlong p1) { return call_method<"setUsageThreshold", void>(p1); }
	jni::ref<jni::array<java::lang::String>> getMemoryManagerNames() { return call_method<"getMemoryManagerNames", jni::ref<jni::array<java::lang::String>>>(); }
	void resetPeakUsage() { return call_method<"resetPeakUsage", void>(); }
	jboolean isUsageThresholdExceeded() { return call_method<"isUsageThresholdExceeded", jboolean>(); }
	jlong getUsageThresholdCount() { return call_method<"getUsageThresholdCount", jlong>(); }
	jboolean isUsageThresholdSupported() { return call_method<"isUsageThresholdSupported", jboolean>(); }
	jlong getCollectionUsageThreshold() { return call_method<"getCollectionUsageThreshold", jlong>(); }
	void setCollectionUsageThreshold(jlong p1) { return call_method<"setCollectionUsageThreshold", void>(p1); }
	jboolean isCollectionUsageThresholdExceeded() { return call_method<"isCollectionUsageThresholdExceeded", jboolean>(); }
	jlong getCollectionUsageThresholdCount() { return call_method<"getCollectionUsageThresholdCount", jlong>(); }
	jni::ref<java::lang::management::MemoryUsage> getCollectionUsage() { return call_method<"getCollectionUsage", jni::ref<java::lang::management::MemoryUsage>>(); }
	jboolean isCollectionUsageThresholdSupported() { return call_method<"isCollectionUsageThresholdSupported", jboolean>(); }
	jni::ref<javax::management::ObjectName> getObjectName() { return call_method<"getObjectName", jni::ref<javax::management::ObjectName>>(); }

protected:

	MemoryPoolImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MANAGEMENT_MEMORYPOOLIMPL
