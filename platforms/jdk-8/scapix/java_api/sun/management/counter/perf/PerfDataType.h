// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_MANAGEMENT_COUNTER_PERF_PERFDATATYPE_FWD
#define SCAPIX_JAVA_API_SUN_MANAGEMENT_COUNTER_PERF_PERFDATATYPE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::management::counter::perf { class PerfDataType; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::management::counter::perf::PerfDataType>
{
	static constexpr fixed_string class_name = "sun/management/counter/perf/PerfDataType";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MANAGEMENT_COUNTER_PERF_PERFDATATYPE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_MANAGEMENT_COUNTER_PERF_PERFDATATYPE)
#define SCAPIX_JAVA_API_SUN_MANAGEMENT_COUNTER_PERF_PERFDATATYPE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::management::counter::perf::PerfDataType : public jni::object_base<"sun/management/counter/perf/PerfDataType",
	java::lang::Object>
{
public:

	static jni::ref<sun::management::counter::perf::PerfDataType> BOOLEAN() { return get_static_field<"BOOLEAN", jni::ref<sun::management::counter::perf::PerfDataType>>(); }
	static jni::ref<sun::management::counter::perf::PerfDataType> CHAR() { return get_static_field<"CHAR", jni::ref<sun::management::counter::perf::PerfDataType>>(); }
	static jni::ref<sun::management::counter::perf::PerfDataType> FLOAT() { return get_static_field<"FLOAT", jni::ref<sun::management::counter::perf::PerfDataType>>(); }
	static jni::ref<sun::management::counter::perf::PerfDataType> DOUBLE() { return get_static_field<"DOUBLE", jni::ref<sun::management::counter::perf::PerfDataType>>(); }
	static jni::ref<sun::management::counter::perf::PerfDataType> BYTE() { return get_static_field<"BYTE", jni::ref<sun::management::counter::perf::PerfDataType>>(); }
	static jni::ref<sun::management::counter::perf::PerfDataType> SHORT() { return get_static_field<"SHORT", jni::ref<sun::management::counter::perf::PerfDataType>>(); }
	static jni::ref<sun::management::counter::perf::PerfDataType> INT() { return get_static_field<"INT", jni::ref<sun::management::counter::perf::PerfDataType>>(); }
	static jni::ref<sun::management::counter::perf::PerfDataType> LONG() { return get_static_field<"LONG", jni::ref<sun::management::counter::perf::PerfDataType>>(); }
	static jni::ref<sun::management::counter::perf::PerfDataType> ILLEGAL() { return get_static_field<"ILLEGAL", jni::ref<sun::management::counter::perf::PerfDataType>>(); }

	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jbyte byteValue() { return call_method<"byteValue", jbyte>(); }
	jint size() { return call_method<"size", jint>(); }
	static jni::ref<sun::management::counter::perf::PerfDataType> toPerfDataType(jbyte p1) { return call_static_method<"toPerfDataType", jni::ref<sun::management::counter::perf::PerfDataType>>(p1); }

protected:

	PerfDataType(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MANAGEMENT_COUNTER_PERF_PERFDATATYPE
