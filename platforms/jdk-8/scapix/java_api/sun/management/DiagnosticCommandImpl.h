// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/sun/management/NotificationEmitterSupport.h>
#include <scapix/java_api/com/sun/management/DiagnosticCommandMBean.h>

#ifndef SCAPIX_JAVA_API_SUN_MANAGEMENT_DIAGNOSTICCOMMANDIMPL_FWD
#define SCAPIX_JAVA_API_SUN_MANAGEMENT_DIAGNOSTICCOMMANDIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::management { class DiagnosticCommandImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::management::DiagnosticCommandImpl>
{
	static constexpr fixed_string class_name = "sun/management/DiagnosticCommandImpl";
	using base_classes = std::tuple<scapix::java_api::sun::management::NotificationEmitterSupport, scapix::java_api::com::sun::management::DiagnosticCommandMBean>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MANAGEMENT_DIAGNOSTICCOMMANDIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_MANAGEMENT_DIAGNOSTICCOMMANDIMPL)
#define SCAPIX_JAVA_API_SUN_MANAGEMENT_DIAGNOSTICCOMMANDIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/management/Attribute.h>
#include <scapix/java_api/javax/management/AttributeList.h>
#include <scapix/java_api/javax/management/MBeanInfo.h>
#include <scapix/java_api/javax/management/MBeanNotificationInfo.h>
#include <scapix/java_api/javax/management/NotificationFilter.h>
#include <scapix/java_api/javax/management/NotificationListener.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::management::DiagnosticCommandImpl : public jni::object_base<"sun/management/DiagnosticCommandImpl",
	sun::management::NotificationEmitterSupport,
	com::sun::management::DiagnosticCommandMBean>
{
public:

	jni::ref<java::lang::Object> getAttribute(jni::ref<java::lang::String> p1) { return call_method<"getAttribute", jni::ref<java::lang::Object>>(p1); }
	void setAttribute(jni::ref<javax::management::Attribute> p1) { return call_method<"setAttribute", void>(p1); }
	jni::ref<javax::management::AttributeList> getAttributes(jni::ref<jni::array<java::lang::String>> p1) { return call_method<"getAttributes", jni::ref<javax::management::AttributeList>>(p1); }
	jni::ref<javax::management::AttributeList> setAttributes(jni::ref<javax::management::AttributeList> p1) { return call_method<"setAttributes", jni::ref<javax::management::AttributeList>>(p1); }
	jni::ref<javax::management::MBeanInfo> getMBeanInfo() { return call_method<"getMBeanInfo", jni::ref<javax::management::MBeanInfo>>(); }
	jni::ref<java::lang::Object> invoke(jni::ref<java::lang::String> p1, jni::ref<jni::array<java::lang::Object>> p2, jni::ref<jni::array<java::lang::String>> p3) { return call_method<"invoke", jni::ref<java::lang::Object>>(p1, p2, p3); }
	jni::ref<jni::array<javax::management::MBeanNotificationInfo>> getNotificationInfo() { return call_method<"getNotificationInfo", jni::ref<jni::array<javax::management::MBeanNotificationInfo>>>(); }
	void addNotificationListener(jni::ref<javax::management::NotificationListener> p1, jni::ref<javax::management::NotificationFilter> p2, jni::ref<java::lang::Object> p3) { return call_method<"addNotificationListener", void>(p1, p2, p3); }
	void removeNotificationListener(jni::ref<javax::management::NotificationListener> p1) { return call_method<"removeNotificationListener", void>(p1); }
	void removeNotificationListener(jni::ref<javax::management::NotificationListener> p1, jni::ref<javax::management::NotificationFilter> p2, jni::ref<java::lang::Object> p3) { return call_method<"removeNotificationListener", void>(p1, p2, p3); }

protected:

	DiagnosticCommandImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MANAGEMENT_DIAGNOSTICCOMMANDIMPL
