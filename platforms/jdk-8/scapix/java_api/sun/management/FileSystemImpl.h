// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/sun/management/FileSystem.h>

#ifndef SCAPIX_JAVA_API_SUN_MANAGEMENT_FILESYSTEMIMPL_FWD
#define SCAPIX_JAVA_API_SUN_MANAGEMENT_FILESYSTEMIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::management { class FileSystemImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::management::FileSystemImpl>
{
	static constexpr fixed_string class_name = "sun/management/FileSystemImpl";
	using base_classes = std::tuple<scapix::java_api::sun::management::FileSystem>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MANAGEMENT_FILESYSTEMIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_MANAGEMENT_FILESYSTEMIMPL)
#define SCAPIX_JAVA_API_SUN_MANAGEMENT_FILESYSTEMIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/File.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::management::FileSystemImpl : public jni::object_base<"sun/management/FileSystemImpl",
	sun::management::FileSystem>
{
public:

	static jni::ref<sun::management::FileSystemImpl> new_object() { return base_::new_object(); }
	jboolean supportsFileSecurity(jni::ref<java::io::File> p1) { return call_method<"supportsFileSecurity", jboolean>(p1); }
	jboolean isAccessUserOnly(jni::ref<java::io::File> p1) { return call_method<"isAccessUserOnly", jboolean>(p1); }

protected:

	FileSystemImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MANAGEMENT_FILESYSTEMIMPL
