// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/util/EventObject.h>

#ifndef SCAPIX_JAVA_API_SUN_APPLET_APPLETEVENT_FWD
#define SCAPIX_JAVA_API_SUN_APPLET_APPLETEVENT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::applet { class AppletEvent; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::applet::AppletEvent>
{
	static constexpr fixed_string class_name = "sun/applet/AppletEvent";
	using base_classes = std::tuple<scapix::java_api::java::util::EventObject>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_APPLET_APPLETEVENT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_APPLET_APPLETEVENT)
#define SCAPIX_JAVA_API_SUN_APPLET_APPLETEVENT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::applet::AppletEvent : public jni::object_base<"sun/applet/AppletEvent",
	java::util::EventObject>
{
public:

	static jni::ref<sun::applet::AppletEvent> new_object(jni::ref<java::lang::Object> p1, jint p2, jni::ref<java::lang::Object> p3) { return base_::new_object(p1, p2, p3); }
	jint getID() { return call_method<"getID", jint>(); }
	jni::ref<java::lang::Object> getArgument() { return call_method<"getArgument", jni::ref<java::lang::Object>>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	AppletEvent(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_APPLET_APPLETEVENT
