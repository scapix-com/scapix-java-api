// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/javax/print/attribute/PrintRequestAttribute.h>

#ifndef SCAPIX_JAVA_API_SUN_PRINT_SUNALTERNATEMEDIA_FWD
#define SCAPIX_JAVA_API_SUN_PRINT_SUNALTERNATEMEDIA_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::print { class SunAlternateMedia; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::print::SunAlternateMedia>
{
	static constexpr fixed_string class_name = "sun/print/SunAlternateMedia";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::javax::print::attribute::PrintRequestAttribute>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_PRINT_SUNALTERNATEMEDIA_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_PRINT_SUNALTERNATEMEDIA)
#define SCAPIX_JAVA_API_SUN_PRINT_SUNALTERNATEMEDIA

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/print/attribute/standard/Media.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::print::SunAlternateMedia : public jni::object_base<"sun/print/SunAlternateMedia",
	java::lang::Object,
	javax::print::attribute::PrintRequestAttribute>
{
public:

	static jni::ref<sun::print::SunAlternateMedia> new_object(jni::ref<javax::print::attribute::standard::Media> p1) { return base_::new_object(p1); }
	jni::ref<javax::print::attribute::standard::Media> getMedia() { return call_method<"getMedia", jni::ref<javax::print::attribute::standard::Media>>(); }
	jni::ref<java::lang::Class> getCategory() { return call_method<"getCategory", jni::ref<java::lang::Class>>(); }
	jni::ref<java::lang::String> getName() { return call_method<"getName", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jint hashCode() { return call_method<"hashCode", jint>(); }

protected:

	SunAlternateMedia(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_PRINT_SUNALTERNATEMEDIA
