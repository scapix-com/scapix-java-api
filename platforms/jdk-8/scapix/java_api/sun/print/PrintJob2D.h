// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/awt/PrintJob.h>
#include <scapix/java_api/java/awt/print/Printable.h>
#include <scapix/java_api/java/lang/Runnable.h>

#ifndef SCAPIX_JAVA_API_SUN_PRINT_PRINTJOB2D_FWD
#define SCAPIX_JAVA_API_SUN_PRINT_PRINTJOB2D_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::print { class PrintJob2D; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::print::PrintJob2D>
{
	static constexpr fixed_string class_name = "sun/print/PrintJob2D";
	using base_classes = std::tuple<scapix::java_api::java::awt::PrintJob, scapix::java_api::java::awt::print::Printable, scapix::java_api::java::lang::Runnable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_PRINT_PRINTJOB2D_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_PRINT_PRINTJOB2D)
#define SCAPIX_JAVA_API_SUN_PRINT_PRINTJOB2D

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Dimension.h>
#include <scapix/java_api/java/awt/Frame.h>
#include <scapix/java_api/java/awt/Graphics.h>
#include <scapix/java_api/java/awt/JobAttributes.h>
#include <scapix/java_api/java/awt/PageAttributes.h>
#include <scapix/java_api/java/awt/PageAttributes_MediaType.h>
#include <scapix/java_api/java/awt/print/PageFormat.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Properties.h>
#include <scapix/java_api/javax/print/attribute/standard/MediaSizeName.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::print::PrintJob2D : public jni::object_base<"sun/print/PrintJob2D",
	java::awt::PrintJob,
	java::awt::print::Printable,
	java::lang::Runnable>
{
public:

	static jni::ref<sun::print::PrintJob2D> new_object(jni::ref<java::awt::Frame> p1, jni::ref<java::lang::String> p2, jni::ref<java::util::Properties> p3) { return base_::new_object(p1, p2, p3); }
	static jni::ref<sun::print::PrintJob2D> new_object(jni::ref<java::awt::Frame> p1, jni::ref<java::lang::String> p2, jni::ref<java::awt::JobAttributes> p3, jni::ref<java::awt::PageAttributes> p4) { return base_::new_object(p1, p2, p3, p4); }
	jboolean printDialog() { return call_method<"printDialog", jboolean>(); }
	jni::ref<java::awt::Graphics> getGraphics() { return call_method<"getGraphics", jni::ref<java::awt::Graphics>>(); }
	jni::ref<java::awt::Dimension> getPageDimension() { return call_method<"getPageDimension", jni::ref<java::awt::Dimension>>(); }
	jint getPageResolution() { return call_method<"getPageResolution", jint>(); }
	jboolean lastPageFirst() { return call_method<"lastPageFirst", jboolean>(); }
	void end() { return call_method<"end", void>(); }
	void finalize() { return call_method<"finalize", void>(); }
	jint print(jni::ref<java::awt::Graphics> p1, jni::ref<java::awt::print::PageFormat> p2, jint p3) { return call_method<"print", jint>(p1, p2, p3); }
	void run() { return call_method<"run", void>(); }
	static jni::ref<javax::print::attribute::standard::MediaSizeName> mapMedia(jni::ref<java::awt::PageAttributes_MediaType> p1) { return call_static_method<"mapMedia", jni::ref<javax::print::attribute::standard::MediaSizeName>>(p1); }
	static jni::ref<java::awt::PageAttributes_MediaType> unMapMedia(jni::ref<javax::print::attribute::standard::MediaSizeName> p1) { return call_static_method<"unMapMedia", jni::ref<java::awt::PageAttributes_MediaType>>(p1); }

protected:

	PrintJob2D(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_PRINT_PRINTJOB2D
