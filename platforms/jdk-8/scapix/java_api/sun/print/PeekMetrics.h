// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_PRINT_PEEKMETRICS_FWD
#define SCAPIX_JAVA_API_SUN_PRINT_PEEKMETRICS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::print { class PeekMetrics; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::print::PeekMetrics>
{
	static constexpr fixed_string class_name = "sun/print/PeekMetrics";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_PRINT_PEEKMETRICS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_PRINT_PEEKMETRICS)
#define SCAPIX_JAVA_API_SUN_PRINT_PEEKMETRICS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Graphics2D.h>
#include <scapix/java_api/java/awt/Image.h>
#include <scapix/java_api/java/awt/font/TextLayout.h>
#include <scapix/java_api/java/awt/image/RenderedImage.h>
#include <scapix/java_api/java/awt/image/renderable/RenderableImage.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::print::PeekMetrics : public jni::object_base<"sun/print/PeekMetrics",
	java::lang::Object>
{
public:

	static jni::ref<sun::print::PeekMetrics> new_object() { return base_::new_object(); }
	jboolean hasNonSolidColors() { return call_method<"hasNonSolidColors", jboolean>(); }
	jboolean hasCompositing() { return call_method<"hasCompositing", jboolean>(); }
	jboolean hasText() { return call_method<"hasText", jboolean>(); }
	jboolean hasImages() { return call_method<"hasImages", jboolean>(); }
	void fill(jni::ref<java::awt::Graphics2D> p1) { return call_method<"fill", void>(p1); }
	void draw(jni::ref<java::awt::Graphics2D> p1) { return call_method<"draw", void>(p1); }
	void clear(jni::ref<java::awt::Graphics2D> p1) { return call_method<"clear", void>(p1); }
	void drawText(jni::ref<java::awt::Graphics2D> p1) { return call_method<"drawText", void>(p1); }
	void drawText(jni::ref<java::awt::Graphics2D> p1, jni::ref<java::awt::font::TextLayout> p2) { return call_method<"drawText", void>(p1, p2); }
	void drawImage(jni::ref<java::awt::Graphics2D> p1, jni::ref<java::awt::Image> p2) { return call_method<"drawImage", void>(p1, p2); }
	void drawImage(jni::ref<java::awt::Graphics2D> p1, jni::ref<java::awt::image::RenderedImage> p2) { return call_method<"drawImage", void>(p1, p2); }
	void drawImage(jni::ref<java::awt::Graphics2D> p1, jni::ref<java::awt::image::renderable::RenderableImage> p2) { return call_method<"drawImage", void>(p1, p2); }

protected:

	PeekMetrics(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_PRINT_PEEKMETRICS
