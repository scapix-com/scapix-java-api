// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/ref/PhantomReference.h>

#ifndef SCAPIX_JAVA_API_SUN_MISC_CLEANER_FWD
#define SCAPIX_JAVA_API_SUN_MISC_CLEANER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::misc { class Cleaner; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::misc::Cleaner>
{
	static constexpr fixed_string class_name = "sun/misc/Cleaner";
	using base_classes = std::tuple<scapix::java_api::java::lang::ref::PhantomReference>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MISC_CLEANER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_MISC_CLEANER)
#define SCAPIX_JAVA_API_SUN_MISC_CLEANER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/Runnable.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::misc::Cleaner : public jni::object_base<"sun/misc/Cleaner",
	java::lang::ref::PhantomReference>
{
public:

	static jni::ref<sun::misc::Cleaner> create(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Runnable> p2) { return call_static_method<"create", jni::ref<sun::misc::Cleaner>>(p1, p2); }
	void clean() { return call_method<"clean", void>(); }

protected:

	Cleaner(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MISC_CLEANER
