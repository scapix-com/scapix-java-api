// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/sun/misc/FloatingDecimal_BinaryToASCIIConverter.h>

#ifndef SCAPIX_JAVA_API_SUN_MISC_FLOATINGDECIMAL_BINARYTOASCIIBUFFER_FWD
#define SCAPIX_JAVA_API_SUN_MISC_FLOATINGDECIMAL_BINARYTOASCIIBUFFER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::misc { class FloatingDecimal_BinaryToASCIIBuffer; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::misc::FloatingDecimal_BinaryToASCIIBuffer>
{
	static constexpr fixed_string class_name = "sun/misc/FloatingDecimal$BinaryToASCIIBuffer";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::sun::misc::FloatingDecimal_BinaryToASCIIConverter>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MISC_FLOATINGDECIMAL_BINARYTOASCIIBUFFER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_MISC_FLOATINGDECIMAL_BINARYTOASCIIBUFFER)
#define SCAPIX_JAVA_API_SUN_MISC_FLOATINGDECIMAL_BINARYTOASCIIBUFFER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Appendable.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::misc::FloatingDecimal_BinaryToASCIIBuffer : public jni::object_base<"sun/misc/FloatingDecimal$BinaryToASCIIBuffer",
	java::lang::Object,
	sun::misc::FloatingDecimal_BinaryToASCIIConverter>
{
public:

	jni::ref<java::lang::String> toJavaFormatString() { return call_method<"toJavaFormatString", jni::ref<java::lang::String>>(); }
	void appendTo(jni::ref<java::lang::Appendable> p1) { return call_method<"appendTo", void>(p1); }
	jint getDecimalExponent() { return call_method<"getDecimalExponent", jint>(); }
	jint getDigits(jni::ref<jni::array<jchar>> p1) { return call_method<"getDigits", jint>(p1); }
	jboolean isNegative() { return call_method<"isNegative", jboolean>(); }
	jboolean isExceptional() { return call_method<"isExceptional", jboolean>(); }
	jboolean digitsRoundedUp() { return call_method<"digitsRoundedUp", jboolean>(); }
	jboolean decimalDigitsExact() { return call_method<"decimalDigitsExact", jboolean>(); }

protected:

	FloatingDecimal_BinaryToASCIIBuffer(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MISC_FLOATINGDECIMAL_BINARYTOASCIIBUFFER
