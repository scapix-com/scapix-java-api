// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_MISC_PERFORMANCELOGGER_FWD
#define SCAPIX_JAVA_API_SUN_MISC_PERFORMANCELOGGER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::misc { class PerformanceLogger; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::misc::PerformanceLogger>
{
	static constexpr fixed_string class_name = "sun/misc/PerformanceLogger";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MISC_PERFORMANCELOGGER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_MISC_PERFORMANCELOGGER)
#define SCAPIX_JAVA_API_SUN_MISC_PERFORMANCELOGGER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/Writer.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::misc::PerformanceLogger : public jni::object_base<"sun/misc/PerformanceLogger",
	java::lang::Object>
{
public:

	static jni::ref<sun::misc::PerformanceLogger> new_object() { return base_::new_object(); }
	static jboolean loggingEnabled() { return call_static_method<"loggingEnabled", jboolean>(); }
	static void setStartTime(jni::ref<java::lang::String> p1) { return call_static_method<"setStartTime", void>(p1); }
	static void setBaseTime(jlong p1) { return call_static_method<"setBaseTime", void>(p1); }
	static void setStartTime(jni::ref<java::lang::String> p1, jlong p2) { return call_static_method<"setStartTime", void>(p1, p2); }
	static jlong getStartTime() { return call_static_method<"getStartTime", jlong>(); }
	static jint setTime(jni::ref<java::lang::String> p1) { return call_static_method<"setTime", jint>(p1); }
	static jint setTime(jni::ref<java::lang::String> p1, jlong p2) { return call_static_method<"setTime", jint>(p1, p2); }
	static jlong getTimeAtIndex(jint p1) { return call_static_method<"getTimeAtIndex", jlong>(p1); }
	static jni::ref<java::lang::String> getMessageAtIndex(jint p1) { return call_static_method<"getMessageAtIndex", jni::ref<java::lang::String>>(p1); }
	static void outputLog(jni::ref<java::io::Writer> p1) { return call_static_method<"outputLog", void>(p1); }
	static void outputLog() { return call_static_method<"outputLog", void>(); }

protected:

	PerformanceLogger(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MISC_PERFORMANCELOGGER
