// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_MISC_GC_FWD
#define SCAPIX_JAVA_API_SUN_MISC_GC_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::misc { class GC; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::misc::GC>
{
	static constexpr fixed_string class_name = "sun/misc/GC";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MISC_GC_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_MISC_GC)
#define SCAPIX_JAVA_API_SUN_MISC_GC

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/sun/misc/GC_LatencyRequest.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::misc::GC : public jni::object_base<"sun/misc/GC",
	java::lang::Object>
{
public:

	using LatencyRequest = GC_LatencyRequest;

	static jlong maxObjectInspectionAge() { return call_static_method<"maxObjectInspectionAge", jlong>(); }
	static jni::ref<sun::misc::GC_LatencyRequest> requestLatency(jlong p1) { return call_static_method<"requestLatency", jni::ref<sun::misc::GC_LatencyRequest>>(p1); }
	static jlong currentLatencyTarget() { return call_static_method<"currentLatencyTarget", jlong>(); }

protected:

	GC(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MISC_GC
