// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_MISC_DOUBLECONSTS_FWD
#define SCAPIX_JAVA_API_SUN_MISC_DOUBLECONSTS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::misc { class DoubleConsts; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::misc::DoubleConsts>
{
	static constexpr fixed_string class_name = "sun/misc/DoubleConsts";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MISC_DOUBLECONSTS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_MISC_DOUBLECONSTS)
#define SCAPIX_JAVA_API_SUN_MISC_DOUBLECONSTS

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::misc::DoubleConsts : public jni::object_base<"sun/misc/DoubleConsts",
	java::lang::Object>
{
public:

	static jdouble POSITIVE_INFINITY() { return get_static_field<"POSITIVE_INFINITY", jdouble>(); }
	static jdouble NEGATIVE_INFINITY() { return get_static_field<"NEGATIVE_INFINITY", jdouble>(); }
	static jdouble NaN() { return get_static_field<"NaN", jdouble>(); }
	static jdouble MAX_VALUE() { return get_static_field<"MAX_VALUE", jdouble>(); }
	static jdouble MIN_VALUE() { return get_static_field<"MIN_VALUE", jdouble>(); }
	static jdouble MIN_NORMAL() { return get_static_field<"MIN_NORMAL", jdouble>(); }
	static jint SIGNIFICAND_WIDTH() { return get_static_field<"SIGNIFICAND_WIDTH", jint>(); }
	static jint MAX_EXPONENT() { return get_static_field<"MAX_EXPONENT", jint>(); }
	static jint MIN_EXPONENT() { return get_static_field<"MIN_EXPONENT", jint>(); }
	static jint MIN_SUB_EXPONENT() { return get_static_field<"MIN_SUB_EXPONENT", jint>(); }
	static jint EXP_BIAS() { return get_static_field<"EXP_BIAS", jint>(); }
	static jlong SIGN_BIT_MASK() { return get_static_field<"SIGN_BIT_MASK", jlong>(); }
	static jlong EXP_BIT_MASK() { return get_static_field<"EXP_BIT_MASK", jlong>(); }
	static jlong SIGNIF_BIT_MASK() { return get_static_field<"SIGNIF_BIT_MASK", jlong>(); }


protected:

	DoubleConsts(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MISC_DOUBLECONSTS
