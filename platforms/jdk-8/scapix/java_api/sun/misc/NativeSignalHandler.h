// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/sun/misc/SignalHandler.h>

#ifndef SCAPIX_JAVA_API_SUN_MISC_NATIVESIGNALHANDLER_FWD
#define SCAPIX_JAVA_API_SUN_MISC_NATIVESIGNALHANDLER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::misc { class NativeSignalHandler; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::misc::NativeSignalHandler>
{
	static constexpr fixed_string class_name = "sun/misc/NativeSignalHandler";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::sun::misc::SignalHandler>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MISC_NATIVESIGNALHANDLER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_MISC_NATIVESIGNALHANDLER)
#define SCAPIX_JAVA_API_SUN_MISC_NATIVESIGNALHANDLER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/sun/misc/Signal.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::misc::NativeSignalHandler : public jni::object_base<"sun/misc/NativeSignalHandler",
	java::lang::Object,
	sun::misc::SignalHandler>
{
public:

	void handle(jni::ref<sun::misc::Signal> p1) { return call_method<"handle", void>(p1); }

protected:

	NativeSignalHandler(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MISC_NATIVESIGNALHANDLER
