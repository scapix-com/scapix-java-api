// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_MISC_VERSION_FWD
#define SCAPIX_JAVA_API_SUN_MISC_VERSION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::misc { class Version; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::misc::Version>
{
	static constexpr fixed_string class_name = "sun/misc/Version";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MISC_VERSION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_MISC_VERSION)
#define SCAPIX_JAVA_API_SUN_MISC_VERSION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/PrintStream.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::misc::Version : public jni::object_base<"sun/misc/Version",
	java::lang::Object>
{
public:

	static jni::ref<sun::misc::Version> new_object() { return base_::new_object(); }
	static void init() { return call_static_method<"init", void>(); }
	static void print() { return call_static_method<"print", void>(); }
	static void println() { return call_static_method<"println", void>(); }
	static void print(jni::ref<java::io::PrintStream> p1) { return call_static_method<"print", void>(p1); }
	static jint jvmMajorVersion() { return call_static_method<"jvmMajorVersion", jint>(); }
	static jint jvmMinorVersion() { return call_static_method<"jvmMinorVersion", jint>(); }
	static jint jvmMicroVersion() { return call_static_method<"jvmMicroVersion", jint>(); }
	static jint jvmUpdateVersion() { return call_static_method<"jvmUpdateVersion", jint>(); }
	static jni::ref<java::lang::String> jvmSpecialVersion() { return call_static_method<"jvmSpecialVersion", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> getJvmSpecialVersion() { return call_static_method<"getJvmSpecialVersion", jni::ref<java::lang::String>>(); }
	static jint jvmBuildNumber() { return call_static_method<"jvmBuildNumber", jint>(); }
	static jint jdkMajorVersion() { return call_static_method<"jdkMajorVersion", jint>(); }
	static jint jdkMinorVersion() { return call_static_method<"jdkMinorVersion", jint>(); }
	static jint jdkMicroVersion() { return call_static_method<"jdkMicroVersion", jint>(); }
	static jint jdkUpdateVersion() { return call_static_method<"jdkUpdateVersion", jint>(); }
	static jni::ref<java::lang::String> jdkSpecialVersion() { return call_static_method<"jdkSpecialVersion", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> getJdkSpecialVersion() { return call_static_method<"getJdkSpecialVersion", jni::ref<java::lang::String>>(); }
	static jint jdkBuildNumber() { return call_static_method<"jdkBuildNumber", jint>(); }

protected:

	Version(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MISC_VERSION
