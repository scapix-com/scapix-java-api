// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/sun/misc/CharacterDecoder.h>

#ifndef SCAPIX_JAVA_API_SUN_MISC_UUDECODER_FWD
#define SCAPIX_JAVA_API_SUN_MISC_UUDECODER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::misc { class UUDecoder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::misc::UUDecoder>
{
	static constexpr fixed_string class_name = "sun/misc/UUDecoder";
	using base_classes = std::tuple<scapix::java_api::sun::misc::CharacterDecoder>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MISC_UUDECODER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_MISC_UUDECODER)
#define SCAPIX_JAVA_API_SUN_MISC_UUDECODER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::misc::UUDecoder : public jni::object_base<"sun/misc/UUDecoder",
	sun::misc::CharacterDecoder>
{
public:

	jni::ref<java::lang::String> bufferName() { return get_field<"bufferName", jni::ref<java::lang::String>>(); }
	void bufferName(jni::ref<java::lang::String> v) { set_field<"bufferName", jni::ref<java::lang::String>>(v); }
	jint mode() { return get_field<"mode", jint>(); }
	void mode(jint v) { set_field<"mode", jint>(v); }

	static jni::ref<sun::misc::UUDecoder> new_object() { return base_::new_object(); }

protected:

	UUDecoder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MISC_UUDECODER
