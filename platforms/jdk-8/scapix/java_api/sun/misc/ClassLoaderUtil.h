// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_MISC_CLASSLOADERUTIL_FWD
#define SCAPIX_JAVA_API_SUN_MISC_CLASSLOADERUTIL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::misc { class ClassLoaderUtil; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::misc::ClassLoaderUtil>
{
	static constexpr fixed_string class_name = "sun/misc/ClassLoaderUtil";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MISC_CLASSLOADERUTIL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_MISC_CLASSLOADERUTIL)
#define SCAPIX_JAVA_API_SUN_MISC_CLASSLOADERUTIL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/net/URLClassLoader.h>
#include <scapix/java_api/java/util/List.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::misc::ClassLoaderUtil : public jni::object_base<"sun/misc/ClassLoaderUtil",
	java::lang::Object>
{
public:

	static jni::ref<sun::misc::ClassLoaderUtil> new_object() { return base_::new_object(); }
	static void releaseLoader(jni::ref<java::net::URLClassLoader> p1) { return call_static_method<"releaseLoader", void>(p1); }
	static jni::ref<java::util::List> releaseLoader(jni::ref<java::net::URLClassLoader> p1, jni::ref<java::util::List> p2) { return call_static_method<"releaseLoader", jni::ref<java::util::List>>(p1, p2); }

protected:

	ClassLoaderUtil(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MISC_CLASSLOADERUTIL
