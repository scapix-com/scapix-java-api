// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_MISC_JARINDEX_FWD
#define SCAPIX_JAVA_API_SUN_MISC_JARINDEX_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::misc { class JarIndex; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::misc::JarIndex>
{
	static constexpr fixed_string class_name = "sun/misc/JarIndex";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MISC_JARINDEX_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_MISC_JARINDEX)
#define SCAPIX_JAVA_API_SUN_MISC_JARINDEX

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/io/OutputStream.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/LinkedList.h>
#include <scapix/java_api/java/util/jar/JarFile.h>
#include <scapix/java_api/sun/misc/MetaIndex.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::misc::JarIndex : public jni::object_base<"sun/misc/JarIndex",
	java::lang::Object>
{
public:

	static jni::ref<java::lang::String> INDEX_NAME() { return get_static_field<"INDEX_NAME", jni::ref<java::lang::String>>(); }

	static jni::ref<sun::misc::JarIndex> new_object() { return base_::new_object(); }
	static jni::ref<sun::misc::JarIndex> new_object(jni::ref<java::io::InputStream> p1) { return base_::new_object(p1); }
	static jni::ref<sun::misc::JarIndex> new_object(jni::ref<jni::array<java::lang::String>> p1) { return base_::new_object(p1); }
	static jni::ref<sun::misc::JarIndex> getJarIndex(jni::ref<java::util::jar::JarFile> p1) { return call_static_method<"getJarIndex", jni::ref<sun::misc::JarIndex>>(p1); }
	static jni::ref<sun::misc::JarIndex> getJarIndex(jni::ref<java::util::jar::JarFile> p1, jni::ref<sun::misc::MetaIndex> p2) { return call_static_method<"getJarIndex", jni::ref<sun::misc::JarIndex>>(p1, p2); }
	jni::ref<jni::array<java::lang::String>> getJarFiles() { return call_method<"getJarFiles", jni::ref<jni::array<java::lang::String>>>(); }
	jni::ref<java::util::LinkedList> get(jni::ref<java::lang::String> p1) { return call_method<"get", jni::ref<java::util::LinkedList>>(p1); }
	void add(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return call_method<"add", void>(p1, p2); }
	void write(jni::ref<java::io::OutputStream> p1) { return call_method<"write", void>(p1); }
	void read(jni::ref<java::io::InputStream> p1) { return call_method<"read", void>(p1); }
	void merge(jni::ref<sun::misc::JarIndex> p1, jni::ref<java::lang::String> p2) { return call_method<"merge", void>(p1, p2); }

protected:

	JarIndex(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MISC_JARINDEX
