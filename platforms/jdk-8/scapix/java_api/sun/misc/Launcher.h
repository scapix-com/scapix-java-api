// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_MISC_LAUNCHER_FWD
#define SCAPIX_JAVA_API_SUN_MISC_LAUNCHER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::misc { class Launcher; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::misc::Launcher>
{
	static constexpr fixed_string class_name = "sun/misc/Launcher";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MISC_LAUNCHER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_MISC_LAUNCHER)
#define SCAPIX_JAVA_API_SUN_MISC_LAUNCHER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/ClassLoader.h>
#include <scapix/java_api/sun/misc/URLClassPath.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::misc::Launcher : public jni::object_base<"sun/misc/Launcher",
	java::lang::Object>
{
public:

	static jni::ref<sun::misc::Launcher> getLauncher() { return call_static_method<"getLauncher", jni::ref<sun::misc::Launcher>>(); }
	static jni::ref<sun::misc::Launcher> new_object() { return base_::new_object(); }
	jni::ref<java::lang::ClassLoader> getClassLoader() { return call_method<"getClassLoader", jni::ref<java::lang::ClassLoader>>(); }
	static jni::ref<sun::misc::URLClassPath> getBootstrapClassPath() { return call_static_method<"getBootstrapClassPath", jni::ref<sun::misc::URLClassPath>>(); }

protected:

	Launcher(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MISC_LAUNCHER
