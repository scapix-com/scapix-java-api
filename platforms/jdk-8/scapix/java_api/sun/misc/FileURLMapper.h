// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_MISC_FILEURLMAPPER_FWD
#define SCAPIX_JAVA_API_SUN_MISC_FILEURLMAPPER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::misc { class FileURLMapper; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::misc::FileURLMapper>
{
	static constexpr fixed_string class_name = "sun/misc/FileURLMapper";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MISC_FILEURLMAPPER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_MISC_FILEURLMAPPER)
#define SCAPIX_JAVA_API_SUN_MISC_FILEURLMAPPER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/net/URL.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::misc::FileURLMapper : public jni::object_base<"sun/misc/FileURLMapper",
	java::lang::Object>
{
public:

	static jni::ref<sun::misc::FileURLMapper> new_object(jni::ref<java::net::URL> p1) { return base_::new_object(p1); }
	jni::ref<java::lang::String> getPath() { return call_method<"getPath", jni::ref<java::lang::String>>(); }
	jboolean exists() { return call_method<"exists", jboolean>(); }

protected:

	FileURLMapper(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_MISC_FILEURLMAPPER
