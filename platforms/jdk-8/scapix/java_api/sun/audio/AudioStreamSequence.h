// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/io/SequenceInputStream.h>

#ifndef SCAPIX_JAVA_API_SUN_AUDIO_AUDIOSTREAMSEQUENCE_FWD
#define SCAPIX_JAVA_API_SUN_AUDIO_AUDIOSTREAMSEQUENCE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::audio { class AudioStreamSequence; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::audio::AudioStreamSequence>
{
	static constexpr fixed_string class_name = "sun/audio/AudioStreamSequence";
	using base_classes = std::tuple<scapix::java_api::java::io::SequenceInputStream>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AUDIO_AUDIOSTREAMSEQUENCE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_AUDIO_AUDIOSTREAMSEQUENCE)
#define SCAPIX_JAVA_API_SUN_AUDIO_AUDIOSTREAMSEQUENCE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/util/Enumeration.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::audio::AudioStreamSequence : public jni::object_base<"sun/audio/AudioStreamSequence",
	java::io::SequenceInputStream>
{
public:

	static jni::ref<sun::audio::AudioStreamSequence> new_object(jni::ref<java::util::Enumeration> p1) { return base_::new_object(p1); }

protected:

	AudioStreamSequence(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AUDIO_AUDIOSTREAMSEQUENCE
