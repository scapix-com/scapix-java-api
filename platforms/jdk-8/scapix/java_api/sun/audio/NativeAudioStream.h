// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/io/FilterInputStream.h>

#ifndef SCAPIX_JAVA_API_SUN_AUDIO_NATIVEAUDIOSTREAM_FWD
#define SCAPIX_JAVA_API_SUN_AUDIO_NATIVEAUDIOSTREAM_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::audio { class NativeAudioStream; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::audio::NativeAudioStream>
{
	static constexpr fixed_string class_name = "sun/audio/NativeAudioStream";
	using base_classes = std::tuple<scapix::java_api::java::io::FilterInputStream>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AUDIO_NATIVEAUDIOSTREAM_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_AUDIO_NATIVEAUDIOSTREAM)
#define SCAPIX_JAVA_API_SUN_AUDIO_NATIVEAUDIOSTREAM

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/InputStream.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::audio::NativeAudioStream : public jni::object_base<"sun/audio/NativeAudioStream",
	java::io::FilterInputStream>
{
public:

	static jni::ref<sun::audio::NativeAudioStream> new_object(jni::ref<java::io::InputStream> p1) { return base_::new_object(p1); }
	jint getLength() { return call_method<"getLength", jint>(); }

protected:

	NativeAudioStream(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AUDIO_NATIVEAUDIOSTREAM
