// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Thread.h>

#ifndef SCAPIX_JAVA_API_SUN_AUDIO_AUDIOPLAYER_FWD
#define SCAPIX_JAVA_API_SUN_AUDIO_AUDIOPLAYER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::audio { class AudioPlayer; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::audio::AudioPlayer>
{
	static constexpr fixed_string class_name = "sun/audio/AudioPlayer";
	using base_classes = std::tuple<scapix::java_api::java::lang::Thread>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AUDIO_AUDIOPLAYER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_AUDIO_AUDIOPLAYER)
#define SCAPIX_JAVA_API_SUN_AUDIO_AUDIOPLAYER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/InputStream.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::audio::AudioPlayer : public jni::object_base<"sun/audio/AudioPlayer",
	java::lang::Thread>
{
public:

	static jni::ref<sun::audio::AudioPlayer> player() { return get_static_field<"player", jni::ref<sun::audio::AudioPlayer>>(); }

	void start(jni::ref<java::io::InputStream> p1) { return call_method<"start", void>(p1); }
	void stop(jni::ref<java::io::InputStream> p1) { return call_method<"stop", void>(p1); }
	void run() { return call_method<"run", void>(); }

protected:

	AudioPlayer(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_AUDIO_AUDIOPLAYER
