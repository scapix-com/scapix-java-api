// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_JGSS_KRB5_MESSAGETOKEN_MESSAGETOKENHEADER_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_JGSS_KRB5_MESSAGETOKEN_MESSAGETOKENHEADER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::jgss::krb5 { class MessageToken_MessageTokenHeader; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::jgss::krb5::MessageToken_MessageTokenHeader>
{
	static constexpr fixed_string class_name = "sun/security/jgss/krb5/MessageToken$MessageTokenHeader";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_JGSS_KRB5_MESSAGETOKEN_MESSAGETOKENHEADER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_JGSS_KRB5_MESSAGETOKEN_MESSAGETOKENHEADER)
#define SCAPIX_JAVA_API_SUN_SECURITY_JGSS_KRB5_MESSAGETOKEN_MESSAGETOKENHEADER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/io/OutputStream.h>
#include <scapix/java_api/org/ietf/jgss/MessageProp.h>
#include <scapix/java_api/sun/security/jgss/krb5/MessageToken.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::security::jgss::krb5::MessageToken_MessageTokenHeader : public jni::object_base<"sun/security/jgss/krb5/MessageToken$MessageTokenHeader",
	java::lang::Object>
{
public:

	static jni::ref<sun::security::jgss::krb5::MessageToken_MessageTokenHeader> new_object(jni::ref<sun::security::jgss::krb5::MessageToken> p1, jint p2, jboolean p3, jint p4) { return base_::new_object(p1, p2, p3, p4); }
	static jni::ref<sun::security::jgss::krb5::MessageToken_MessageTokenHeader> new_object(jni::ref<sun::security::jgss::krb5::MessageToken> p1, jni::ref<java::io::InputStream> p2, jni::ref<org::ietf::jgss::MessageProp> p3) { return base_::new_object(p1, p2, p3); }
	void encode(jni::ref<java::io::OutputStream> p1) { return call_method<"encode", void>(p1); }
	jint getTokenId() { return call_method<"getTokenId", jint>(); }
	jint getSignAlg() { return call_method<"getSignAlg", jint>(); }
	jint getSealAlg() { return call_method<"getSealAlg", jint>(); }
	jni::ref<jni::array<jbyte>> getBytes() { return call_method<"getBytes", jni::ref<jni::array<jbyte>>>(); }

protected:

	MessageToken_MessageTokenHeader(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_JGSS_KRB5_MESSAGETOKEN_MESSAGETOKENHEADER
