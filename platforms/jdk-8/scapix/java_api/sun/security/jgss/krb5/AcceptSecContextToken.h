// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/sun/security/jgss/krb5/InitialToken.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_JGSS_KRB5_ACCEPTSECCONTEXTTOKEN_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_JGSS_KRB5_ACCEPTSECCONTEXTTOKEN_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::jgss::krb5 { class AcceptSecContextToken; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::jgss::krb5::AcceptSecContextToken>
{
	static constexpr fixed_string class_name = "sun/security/jgss/krb5/AcceptSecContextToken";
	using base_classes = std::tuple<scapix::java_api::sun::security::jgss::krb5::InitialToken>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_JGSS_KRB5_ACCEPTSECCONTEXTTOKEN_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_JGSS_KRB5_ACCEPTSECCONTEXTTOKEN)
#define SCAPIX_JAVA_API_SUN_SECURITY_JGSS_KRB5_ACCEPTSECCONTEXTTOKEN

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/sun/security/jgss/krb5/Krb5Context.h>
#include <scapix/java_api/sun/security/krb5/Credentials.h>
#include <scapix/java_api/sun/security/krb5/KrbApReq.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::security::jgss::krb5::AcceptSecContextToken : public jni::object_base<"sun/security/jgss/krb5/AcceptSecContextToken",
	sun::security::jgss::krb5::InitialToken>
{
public:

	static jni::ref<sun::security::jgss::krb5::AcceptSecContextToken> new_object(jni::ref<sun::security::jgss::krb5::Krb5Context> p1, jni::ref<sun::security::krb5::KrbApReq> p2) { return base_::new_object(p1, p2); }
	static jni::ref<sun::security::jgss::krb5::AcceptSecContextToken> new_object(jni::ref<sun::security::jgss::krb5::Krb5Context> p1, jni::ref<sun::security::krb5::Credentials> p2, jni::ref<sun::security::krb5::KrbApReq> p3, jni::ref<java::io::InputStream> p4) { return base_::new_object(p1, p2, p3, p4); }
	jni::ref<jni::array<jbyte>> encode() { return call_method<"encode", jni::ref<jni::array<jbyte>>>(); }

protected:

	AcceptSecContextToken(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_JGSS_KRB5_ACCEPTSECCONTEXTTOKEN
