// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/sun/security/krb5/KrbAppMessage.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_KRB5_KRBSAFE_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_KRB5_KRBSAFE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::krb5 { class KrbSafe; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::krb5::KrbSafe>
{
	static constexpr fixed_string class_name = "sun/security/krb5/KrbSafe";
	using base_classes = std::tuple<scapix::java_api::sun::security::krb5::KrbAppMessage>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_KRB5_KRBSAFE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_KRB5_KRBSAFE)
#define SCAPIX_JAVA_API_SUN_SECURITY_KRB5_KRBSAFE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/sun/security/krb5/Credentials.h>
#include <scapix/java_api/sun/security/krb5/EncryptionKey.h>
#include <scapix/java_api/sun/security/krb5/internal/HostAddress.h>
#include <scapix/java_api/sun/security/krb5/internal/KerberosTime.h>
#include <scapix/java_api/sun/security/krb5/internal/SeqNumber.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::security::krb5::KrbSafe : public jni::object_base<"sun/security/krb5/KrbSafe",
	sun::security::krb5::KrbAppMessage>
{
public:

	static jni::ref<sun::security::krb5::KrbSafe> new_object(jni::ref<jni::array<jbyte>> p1, jni::ref<sun::security::krb5::Credentials> p2, jni::ref<sun::security::krb5::EncryptionKey> p3, jni::ref<sun::security::krb5::internal::KerberosTime> p4, jni::ref<sun::security::krb5::internal::SeqNumber> p5, jni::ref<sun::security::krb5::internal::HostAddress> p6, jni::ref<sun::security::krb5::internal::HostAddress> p7) { return base_::new_object(p1, p2, p3, p4, p5, p6, p7); }
	static jni::ref<sun::security::krb5::KrbSafe> new_object(jni::ref<jni::array<jbyte>> p1, jni::ref<sun::security::krb5::Credentials> p2, jni::ref<sun::security::krb5::EncryptionKey> p3, jni::ref<sun::security::krb5::internal::SeqNumber> p4, jni::ref<sun::security::krb5::internal::HostAddress> p5, jni::ref<sun::security::krb5::internal::HostAddress> p6, jboolean p7, jboolean p8) { return base_::new_object(p1, p2, p3, p4, p5, p6, p7, p8); }
	jni::ref<jni::array<jbyte>> getMessage() { return call_method<"getMessage", jni::ref<jni::array<jbyte>>>(); }
	jni::ref<jni::array<jbyte>> getData() { return call_method<"getData", jni::ref<jni::array<jbyte>>>(); }

protected:

	KrbSafe(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_KRB5_KRBSAFE
