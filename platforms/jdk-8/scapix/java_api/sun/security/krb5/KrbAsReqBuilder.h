// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_KRB5_KRBASREQBUILDER_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_KRB5_KRBASREQBUILDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::krb5 { class KrbAsReqBuilder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::krb5::KrbAsReqBuilder>
{
	static constexpr fixed_string class_name = "sun/security/krb5/KrbAsReqBuilder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_KRB5_KRBASREQBUILDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_KRB5_KRBASREQBUILDER)
#define SCAPIX_JAVA_API_SUN_SECURITY_KRB5_KRBASREQBUILDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/javax/security/auth/kerberos/KeyTab.h>
#include <scapix/java_api/sun/security/krb5/Credentials.h>
#include <scapix/java_api/sun/security/krb5/EncryptionKey.h>
#include <scapix/java_api/sun/security/krb5/PrincipalName.h>
#include <scapix/java_api/sun/security/krb5/internal/HostAddresses.h>
#include <scapix/java_api/sun/security/krb5/internal/KDCOptions.h>
#include <scapix/java_api/sun/security/krb5/internal/ccache/Credentials.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::security::krb5::KrbAsReqBuilder : public jni::object_base<"sun/security/krb5/KrbAsReqBuilder",
	java::lang::Object>
{
public:

	static jni::ref<sun::security::krb5::KrbAsReqBuilder> new_object(jni::ref<sun::security::krb5::PrincipalName> p1, jni::ref<javax::security::auth::kerberos::KeyTab> p2) { return base_::new_object(p1, p2); }
	static jni::ref<sun::security::krb5::KrbAsReqBuilder> new_object(jni::ref<sun::security::krb5::PrincipalName> p1, jni::ref<jni::array<jchar>> p2) { return base_::new_object(p1, p2); }
	jni::ref<jni::array<sun::security::krb5::EncryptionKey>> getKeys(jboolean p1) { return call_method<"getKeys", jni::ref<jni::array<sun::security::krb5::EncryptionKey>>>(p1); }
	void setOptions(jni::ref<sun::security::krb5::internal::KDCOptions> p1) { return call_method<"setOptions", void>(p1); }
	void setTarget(jni::ref<sun::security::krb5::PrincipalName> p1) { return call_method<"setTarget", void>(p1); }
	void setAddresses(jni::ref<sun::security::krb5::internal::HostAddresses> p1) { return call_method<"setAddresses", void>(p1); }
	jni::ref<sun::security::krb5::KrbAsReqBuilder> action() { return call_method<"action", jni::ref<sun::security::krb5::KrbAsReqBuilder>>(); }
	jni::ref<sun::security::krb5::Credentials> getCreds() { return call_method<"getCreds", jni::ref<sun::security::krb5::Credentials>>(); }
	jni::ref<sun::security::krb5::internal::ccache::Credentials> getCCreds() { return call_method<"getCCreds", jni::ref<sun::security::krb5::internal::ccache::Credentials>>(); }
	void destroy() { return call_method<"destroy", void>(); }

protected:

	KrbAsReqBuilder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_KRB5_KRBASREQBUILDER
