// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_KERBEROSTIME_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_KERBEROSTIME_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::krb5::internal { class KerberosTime; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::krb5::internal::KerberosTime>
{
	static constexpr fixed_string class_name = "sun/security/krb5/internal/KerberosTime";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_KERBEROSTIME_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_KERBEROSTIME)
#define SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_KERBEROSTIME

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Date.h>
#include <scapix/java_api/sun/security/util/DerInputStream.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::security::krb5::internal::KerberosTime : public jni::object_base<"sun/security/krb5/internal/KerberosTime",
	java::lang::Object>
{
public:

	static jni::ref<sun::security::krb5::internal::KerberosTime> new_object(jlong p1) { return base_::new_object(p1); }
	static jni::ref<sun::security::krb5::internal::KerberosTime> new_object(jni::ref<java::lang::String> p1) { return base_::new_object(p1); }
	static jni::ref<sun::security::krb5::internal::KerberosTime> new_object(jni::ref<java::util::Date> p1) { return base_::new_object(p1); }
	static jni::ref<sun::security::krb5::internal::KerberosTime> now() { return call_static_method<"now", jni::ref<sun::security::krb5::internal::KerberosTime>>(); }
	jni::ref<java::lang::String> toGeneralizedTimeString() { return call_method<"toGeneralizedTimeString", jni::ref<java::lang::String>>(); }
	jni::ref<jni::array<jbyte>> asn1Encode() { return call_method<"asn1Encode", jni::ref<jni::array<jbyte>>>(); }
	jlong getTime() { return call_method<"getTime", jlong>(); }
	jni::ref<java::util::Date> toDate() { return call_method<"toDate", jni::ref<java::util::Date>>(); }
	jint getMicroSeconds() { return call_method<"getMicroSeconds", jint>(); }
	jni::ref<sun::security::krb5::internal::KerberosTime> withMicroSeconds(jint p1) { return call_method<"withMicroSeconds", jni::ref<sun::security::krb5::internal::KerberosTime>>(p1); }
	jboolean inClockSkew() { return call_method<"inClockSkew", jboolean>(); }
	jboolean greaterThanWRTClockSkew(jni::ref<sun::security::krb5::internal::KerberosTime> p1, jint p2) { return call_method<"greaterThanWRTClockSkew", jboolean>(p1, p2); }
	jboolean greaterThanWRTClockSkew(jni::ref<sun::security::krb5::internal::KerberosTime> p1) { return call_method<"greaterThanWRTClockSkew", jboolean>(p1); }
	jboolean greaterThan(jni::ref<sun::security::krb5::internal::KerberosTime> p1) { return call_method<"greaterThan", jboolean>(p1); }
	jboolean equals(jni::ref<java::lang::Object> p1) { return call_method<"equals", jboolean>(p1); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jboolean isZero() { return call_method<"isZero", jboolean>(); }
	jint getSeconds() { return call_method<"getSeconds", jint>(); }
	static jni::ref<sun::security::krb5::internal::KerberosTime> parse(jni::ref<sun::security::util::DerInputStream> p1, jbyte p2, jboolean p3) { return call_static_method<"parse", jni::ref<sun::security::krb5::internal::KerberosTime>>(p1, p2, p3); }
	static jint getDefaultSkew() { return call_static_method<"getDefaultSkew", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	KerberosTime(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_KERBEROSTIME
