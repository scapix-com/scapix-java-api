// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_TOOLS_KINITOPTIONS_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_TOOLS_KINITOPTIONS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::krb5::internal::tools { class KinitOptions; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::krb5::internal::tools::KinitOptions>
{
	static constexpr fixed_string class_name = "sun/security/krb5/internal/tools/KinitOptions";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_TOOLS_KINITOPTIONS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_TOOLS_KINITOPTIONS)
#define SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_TOOLS_KINITOPTIONS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/sun/security/krb5/PrincipalName.h>
#include <scapix/java_api/sun/security/krb5/internal/KerberosTime.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::security::krb5::internal::tools::KinitOptions : public jni::object_base<"sun/security/krb5/internal/tools/KinitOptions",
	java::lang::Object>
{
public:

	jboolean validate() { return get_field<"validate", jboolean>(); }
	void validate(jboolean v) { set_field<"validate", jboolean>(v); }
	jshort forwardable() { return get_field<"forwardable", jshort>(); }
	void forwardable(jshort v) { set_field<"forwardable", jshort>(v); }
	jshort proxiable() { return get_field<"proxiable", jshort>(); }
	void proxiable(jshort v) { set_field<"proxiable", jshort>(v); }
	jboolean renew() { return get_field<"renew", jboolean>(); }
	void renew(jboolean v) { set_field<"renew", jboolean>(v); }
	jni::ref<sun::security::krb5::internal::KerberosTime> lifetime() { return get_field<"lifetime", jni::ref<sun::security::krb5::internal::KerberosTime>>(); }
	void lifetime(jni::ref<sun::security::krb5::internal::KerberosTime> v) { set_field<"lifetime", jni::ref<sun::security::krb5::internal::KerberosTime>>(v); }
	jni::ref<sun::security::krb5::internal::KerberosTime> renewable_lifetime() { return get_field<"renewable_lifetime", jni::ref<sun::security::krb5::internal::KerberosTime>>(); }
	void renewable_lifetime(jni::ref<sun::security::krb5::internal::KerberosTime> v) { set_field<"renewable_lifetime", jni::ref<sun::security::krb5::internal::KerberosTime>>(v); }
	jni::ref<java::lang::String> target_service() { return get_field<"target_service", jni::ref<java::lang::String>>(); }
	void target_service(jni::ref<java::lang::String> v) { set_field<"target_service", jni::ref<java::lang::String>>(v); }
	jni::ref<java::lang::String> keytab_file() { return get_field<"keytab_file", jni::ref<java::lang::String>>(); }
	void keytab_file(jni::ref<java::lang::String> v) { set_field<"keytab_file", jni::ref<java::lang::String>>(v); }
	jni::ref<java::lang::String> cachename() { return get_field<"cachename", jni::ref<java::lang::String>>(); }
	void cachename(jni::ref<java::lang::String> v) { set_field<"cachename", jni::ref<java::lang::String>>(v); }
	jni::ref<java::lang::String> realm() { return get_field<"realm", jni::ref<java::lang::String>>(); }
	void realm(jni::ref<java::lang::String> v) { set_field<"realm", jni::ref<java::lang::String>>(v); }
	jboolean keytab() { return get_field<"keytab", jboolean>(); }
	void keytab(jboolean v) { set_field<"keytab", jboolean>(v); }

	static jni::ref<sun::security::krb5::internal::tools::KinitOptions> new_object() { return base_::new_object(); }
	void setKDCRealm(jni::ref<java::lang::String> p1) { return call_method<"setKDCRealm", void>(p1); }
	jni::ref<java::lang::String> getKDCRealm() { return call_method<"getKDCRealm", jni::ref<java::lang::String>>(); }
	static jni::ref<sun::security::krb5::internal::tools::KinitOptions> new_object(jni::ref<jni::array<java::lang::String>> p1) { return base_::new_object(p1); }
	jboolean getAddressOption() { return call_method<"getAddressOption", jboolean>(); }
	jboolean useKeytabFile() { return call_method<"useKeytabFile", jboolean>(); }
	jni::ref<java::lang::String> keytabFileName() { return call_method<"keytabFileName", jni::ref<java::lang::String>>(); }
	jni::ref<sun::security::krb5::PrincipalName> getPrincipal() { return call_method<"getPrincipal", jni::ref<sun::security::krb5::PrincipalName>>(); }

protected:

	KinitOptions(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_TOOLS_KINITOPTIONS
