// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_KRBERROR_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_KRBERROR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::krb5::internal { class KRBError; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::krb5::internal::KRBError>
{
	static constexpr fixed_string class_name = "sun/security/krb5/internal/KRBError";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::io::Serializable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_KRBERROR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_KRBERROR)
#define SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_KRBERROR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Integer.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/sun/security/krb5/Checksum.h>
#include <scapix/java_api/sun/security/krb5/PrincipalName.h>
#include <scapix/java_api/sun/security/krb5/Realm.h>
#include <scapix/java_api/sun/security/krb5/internal/APOptions.h>
#include <scapix/java_api/sun/security/krb5/internal/KerberosTime.h>
#include <scapix/java_api/sun/security/krb5/internal/PAData.h>
#include <scapix/java_api/sun/security/util/DerValue.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::security::krb5::internal::KRBError : public jni::object_base<"sun/security/krb5/internal/KRBError",
	java::lang::Object,
	java::io::Serializable>
{
public:

	static jni::ref<sun::security::krb5::internal::KRBError> new_object(jni::ref<sun::security::krb5::internal::APOptions> p1, jni::ref<sun::security::krb5::internal::KerberosTime> p2, jni::ref<java::lang::Integer> p3, jni::ref<sun::security::krb5::internal::KerberosTime> p4, jni::ref<java::lang::Integer> p5, jint p6, jni::ref<sun::security::krb5::PrincipalName> p7, jni::ref<sun::security::krb5::PrincipalName> p8, jni::ref<java::lang::String> p9, jni::ref<jni::array<jbyte>> p10) { return base_::new_object(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10); }
	static jni::ref<sun::security::krb5::internal::KRBError> new_object(jni::ref<sun::security::krb5::internal::APOptions> p1, jni::ref<sun::security::krb5::internal::KerberosTime> p2, jni::ref<java::lang::Integer> p3, jni::ref<sun::security::krb5::internal::KerberosTime> p4, jni::ref<java::lang::Integer> p5, jint p6, jni::ref<sun::security::krb5::PrincipalName> p7, jni::ref<sun::security::krb5::PrincipalName> p8, jni::ref<java::lang::String> p9, jni::ref<jni::array<jbyte>> p10, jni::ref<sun::security::krb5::Checksum> p11) { return base_::new_object(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11); }
	static jni::ref<sun::security::krb5::internal::KRBError> new_object(jni::ref<jni::array<jbyte>> p1) { return base_::new_object(p1); }
	static jni::ref<sun::security::krb5::internal::KRBError> new_object(jni::ref<sun::security::util::DerValue> p1) { return base_::new_object(p1); }
	jni::ref<sun::security::krb5::Realm> getClientRealm() { return call_method<"getClientRealm", jni::ref<sun::security::krb5::Realm>>(); }
	jni::ref<sun::security::krb5::internal::KerberosTime> getServerTime() { return call_method<"getServerTime", jni::ref<sun::security::krb5::internal::KerberosTime>>(); }
	jni::ref<sun::security::krb5::internal::KerberosTime> getClientTime() { return call_method<"getClientTime", jni::ref<sun::security::krb5::internal::KerberosTime>>(); }
	jni::ref<java::lang::Integer> getServerMicroSeconds() { return call_method<"getServerMicroSeconds", jni::ref<java::lang::Integer>>(); }
	jni::ref<java::lang::Integer> getClientMicroSeconds() { return call_method<"getClientMicroSeconds", jni::ref<java::lang::Integer>>(); }
	jint getErrorCode() { return call_method<"getErrorCode", jint>(); }
	jni::ref<jni::array<sun::security::krb5::internal::PAData>> getPA() { return call_method<"getPA", jni::ref<jni::array<sun::security::krb5::internal::PAData>>>(); }
	jni::ref<java::lang::String> getErrorString() { return call_method<"getErrorString", jni::ref<java::lang::String>>(); }
	jni::ref<jni::array<jbyte>> asn1Encode() { return call_method<"asn1Encode", jni::ref<jni::array<jbyte>>>(); }
	jboolean equals(jni::ref<java::lang::Object> p1) { return call_method<"equals", jboolean>(p1); }
	jint hashCode() { return call_method<"hashCode", jint>(); }

protected:

	KRBError(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_KRBERROR
