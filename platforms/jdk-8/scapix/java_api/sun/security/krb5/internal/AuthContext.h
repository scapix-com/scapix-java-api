// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_AUTHCONTEXT_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_AUTHCONTEXT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::krb5::internal { class AuthContext; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::krb5::internal::AuthContext>
{
	static constexpr fixed_string class_name = "sun/security/krb5/internal/AuthContext";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_AUTHCONTEXT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_AUTHCONTEXT)
#define SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_AUTHCONTEXT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/util/BitSet.h>
#include <scapix/java_api/sun/security/krb5/EncryptionKey.h>
#include <scapix/java_api/sun/security/krb5/internal/Authenticator.h>
#include <scapix/java_api/sun/security/krb5/internal/HostAddress.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::security::krb5::internal::AuthContext : public jni::object_base<"sun/security/krb5/internal/AuthContext",
	java::lang::Object>
{
public:

	jni::ref<sun::security::krb5::internal::HostAddress> remoteAddress() { return get_field<"remoteAddress", jni::ref<sun::security::krb5::internal::HostAddress>>(); }
	void remoteAddress(jni::ref<sun::security::krb5::internal::HostAddress> v) { set_field<"remoteAddress", jni::ref<sun::security::krb5::internal::HostAddress>>(v); }
	jint remotePort() { return get_field<"remotePort", jint>(); }
	void remotePort(jint v) { set_field<"remotePort", jint>(v); }
	jni::ref<sun::security::krb5::internal::HostAddress> localAddress() { return get_field<"localAddress", jni::ref<sun::security::krb5::internal::HostAddress>>(); }
	void localAddress(jni::ref<sun::security::krb5::internal::HostAddress> v) { set_field<"localAddress", jni::ref<sun::security::krb5::internal::HostAddress>>(v); }
	jint localPort() { return get_field<"localPort", jint>(); }
	void localPort(jint v) { set_field<"localPort", jint>(v); }
	jni::ref<sun::security::krb5::EncryptionKey> keyBlock() { return get_field<"keyBlock", jni::ref<sun::security::krb5::EncryptionKey>>(); }
	void keyBlock(jni::ref<sun::security::krb5::EncryptionKey> v) { set_field<"keyBlock", jni::ref<sun::security::krb5::EncryptionKey>>(v); }
	jni::ref<sun::security::krb5::EncryptionKey> localSubkey() { return get_field<"localSubkey", jni::ref<sun::security::krb5::EncryptionKey>>(); }
	void localSubkey(jni::ref<sun::security::krb5::EncryptionKey> v) { set_field<"localSubkey", jni::ref<sun::security::krb5::EncryptionKey>>(v); }
	jni::ref<sun::security::krb5::EncryptionKey> remoteSubkey() { return get_field<"remoteSubkey", jni::ref<sun::security::krb5::EncryptionKey>>(); }
	void remoteSubkey(jni::ref<sun::security::krb5::EncryptionKey> v) { set_field<"remoteSubkey", jni::ref<sun::security::krb5::EncryptionKey>>(v); }
	jni::ref<java::util::BitSet> authContextFlags() { return get_field<"authContextFlags", jni::ref<java::util::BitSet>>(); }
	void authContextFlags(jni::ref<java::util::BitSet> v) { set_field<"authContextFlags", jni::ref<java::util::BitSet>>(v); }
	jint remoteSeqNumber() { return get_field<"remoteSeqNumber", jint>(); }
	void remoteSeqNumber(jint v) { set_field<"remoteSeqNumber", jint>(v); }
	jint localSeqNumber() { return get_field<"localSeqNumber", jint>(); }
	void localSeqNumber(jint v) { set_field<"localSeqNumber", jint>(v); }
	jni::ref<sun::security::krb5::internal::Authenticator> authenticator() { return get_field<"authenticator", jni::ref<sun::security::krb5::internal::Authenticator>>(); }
	void authenticator(jni::ref<sun::security::krb5::internal::Authenticator> v) { set_field<"authenticator", jni::ref<sun::security::krb5::internal::Authenticator>>(v); }
	jint reqCksumType() { return get_field<"reqCksumType", jint>(); }
	void reqCksumType(jint v) { set_field<"reqCksumType", jint>(v); }
	jint safeCksumType() { return get_field<"safeCksumType", jint>(); }
	void safeCksumType(jint v) { set_field<"safeCksumType", jint>(v); }
	jni::ref<jni::array<jbyte>> initializationVector() { return get_field<"initializationVector", jni::ref<jni::array<jbyte>>>(); }
	void initializationVector(jni::ref<jni::array<jbyte>> v) { set_field<"initializationVector", jni::ref<jni::array<jbyte>>>(v); }

	static jni::ref<sun::security::krb5::internal::AuthContext> new_object() { return base_::new_object(); }

protected:

	AuthContext(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_AUTHCONTEXT
