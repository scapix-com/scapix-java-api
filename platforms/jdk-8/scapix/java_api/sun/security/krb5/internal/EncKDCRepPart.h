// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_ENCKDCREPPART_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_ENCKDCREPPART_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::krb5::internal { class EncKDCRepPart; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::krb5::internal::EncKDCRepPart>
{
	static constexpr fixed_string class_name = "sun/security/krb5/internal/EncKDCRepPart";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_ENCKDCREPPART_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_ENCKDCREPPART)
#define SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_ENCKDCREPPART

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/sun/security/krb5/EncryptionKey.h>
#include <scapix/java_api/sun/security/krb5/PrincipalName.h>
#include <scapix/java_api/sun/security/krb5/internal/HostAddresses.h>
#include <scapix/java_api/sun/security/krb5/internal/KerberosTime.h>
#include <scapix/java_api/sun/security/krb5/internal/LastReq.h>
#include <scapix/java_api/sun/security/krb5/internal/PAData.h>
#include <scapix/java_api/sun/security/krb5/internal/TicketFlags.h>
#include <scapix/java_api/sun/security/util/DerValue.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::security::krb5::internal::EncKDCRepPart : public jni::object_base<"sun/security/krb5/internal/EncKDCRepPart",
	java::lang::Object>
{
public:

	jni::ref<sun::security::krb5::EncryptionKey> key() { return get_field<"key", jni::ref<sun::security::krb5::EncryptionKey>>(); }
	void key(jni::ref<sun::security::krb5::EncryptionKey> v) { set_field<"key", jni::ref<sun::security::krb5::EncryptionKey>>(v); }
	jni::ref<sun::security::krb5::internal::LastReq> lastReq() { return get_field<"lastReq", jni::ref<sun::security::krb5::internal::LastReq>>(); }
	void lastReq(jni::ref<sun::security::krb5::internal::LastReq> v) { set_field<"lastReq", jni::ref<sun::security::krb5::internal::LastReq>>(v); }
	jint nonce() { return get_field<"nonce", jint>(); }
	void nonce(jint v) { set_field<"nonce", jint>(v); }
	jni::ref<sun::security::krb5::internal::KerberosTime> keyExpiration() { return get_field<"keyExpiration", jni::ref<sun::security::krb5::internal::KerberosTime>>(); }
	void keyExpiration(jni::ref<sun::security::krb5::internal::KerberosTime> v) { set_field<"keyExpiration", jni::ref<sun::security::krb5::internal::KerberosTime>>(v); }
	jni::ref<sun::security::krb5::internal::TicketFlags> flags() { return get_field<"flags", jni::ref<sun::security::krb5::internal::TicketFlags>>(); }
	void flags(jni::ref<sun::security::krb5::internal::TicketFlags> v) { set_field<"flags", jni::ref<sun::security::krb5::internal::TicketFlags>>(v); }
	jni::ref<sun::security::krb5::internal::KerberosTime> authtime() { return get_field<"authtime", jni::ref<sun::security::krb5::internal::KerberosTime>>(); }
	void authtime(jni::ref<sun::security::krb5::internal::KerberosTime> v) { set_field<"authtime", jni::ref<sun::security::krb5::internal::KerberosTime>>(v); }
	jni::ref<sun::security::krb5::internal::KerberosTime> starttime() { return get_field<"starttime", jni::ref<sun::security::krb5::internal::KerberosTime>>(); }
	void starttime(jni::ref<sun::security::krb5::internal::KerberosTime> v) { set_field<"starttime", jni::ref<sun::security::krb5::internal::KerberosTime>>(v); }
	jni::ref<sun::security::krb5::internal::KerberosTime> endtime() { return get_field<"endtime", jni::ref<sun::security::krb5::internal::KerberosTime>>(); }
	void endtime(jni::ref<sun::security::krb5::internal::KerberosTime> v) { set_field<"endtime", jni::ref<sun::security::krb5::internal::KerberosTime>>(v); }
	jni::ref<sun::security::krb5::internal::KerberosTime> renewTill() { return get_field<"renewTill", jni::ref<sun::security::krb5::internal::KerberosTime>>(); }
	void renewTill(jni::ref<sun::security::krb5::internal::KerberosTime> v) { set_field<"renewTill", jni::ref<sun::security::krb5::internal::KerberosTime>>(v); }
	jni::ref<sun::security::krb5::PrincipalName> sname() { return get_field<"sname", jni::ref<sun::security::krb5::PrincipalName>>(); }
	void sname(jni::ref<sun::security::krb5::PrincipalName> v) { set_field<"sname", jni::ref<sun::security::krb5::PrincipalName>>(v); }
	jni::ref<sun::security::krb5::internal::HostAddresses> caddr() { return get_field<"caddr", jni::ref<sun::security::krb5::internal::HostAddresses>>(); }
	void caddr(jni::ref<sun::security::krb5::internal::HostAddresses> v) { set_field<"caddr", jni::ref<sun::security::krb5::internal::HostAddresses>>(v); }
	jni::ref<jni::array<sun::security::krb5::internal::PAData>> pAData() { return get_field<"pAData", jni::ref<jni::array<sun::security::krb5::internal::PAData>>>(); }
	void pAData(jni::ref<jni::array<sun::security::krb5::internal::PAData>> v) { set_field<"pAData", jni::ref<jni::array<sun::security::krb5::internal::PAData>>>(v); }
	jint msgType() { return get_field<"msgType", jint>(); }
	void msgType(jint v) { set_field<"msgType", jint>(v); }

	static jni::ref<sun::security::krb5::internal::EncKDCRepPart> new_object(jni::ref<sun::security::krb5::EncryptionKey> p1, jni::ref<sun::security::krb5::internal::LastReq> p2, jint p3, jni::ref<sun::security::krb5::internal::KerberosTime> p4, jni::ref<sun::security::krb5::internal::TicketFlags> p5, jni::ref<sun::security::krb5::internal::KerberosTime> p6, jni::ref<sun::security::krb5::internal::KerberosTime> p7, jni::ref<sun::security::krb5::internal::KerberosTime> p8, jni::ref<sun::security::krb5::internal::KerberosTime> p9, jni::ref<sun::security::krb5::PrincipalName> p10, jni::ref<sun::security::krb5::internal::HostAddresses> p11, jni::ref<jni::array<sun::security::krb5::internal::PAData>> p12, jint p13) { return base_::new_object(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13); }
	static jni::ref<sun::security::krb5::internal::EncKDCRepPart> new_object() { return base_::new_object(); }
	static jni::ref<sun::security::krb5::internal::EncKDCRepPart> new_object(jni::ref<jni::array<jbyte>> p1, jint p2) { return base_::new_object(p1, p2); }
	static jni::ref<sun::security::krb5::internal::EncKDCRepPart> new_object(jni::ref<sun::security::util::DerValue> p1, jint p2) { return base_::new_object(p1, p2); }
	jni::ref<jni::array<jbyte>> asn1Encode(jint p1) { return call_method<"asn1Encode", jni::ref<jni::array<jbyte>>>(p1); }

protected:

	EncKDCRepPart(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_ENCKDCREPPART
