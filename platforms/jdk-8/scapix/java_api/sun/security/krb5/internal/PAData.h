// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_PADATA_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_PADATA_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::krb5::internal { class PAData; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::krb5::internal::PAData>
{
	static constexpr fixed_string class_name = "sun/security/krb5/internal/PAData";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_PADATA_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_PADATA)
#define SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_PADATA

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/sun/security/krb5/internal/PAData_SaltAndParams.h>
#include <scapix/java_api/sun/security/util/DerInputStream.h>
#include <scapix/java_api/sun/security/util/DerValue.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::security::krb5::internal::PAData : public jni::object_base<"sun/security/krb5/internal/PAData",
	java::lang::Object>
{
public:

	using SaltAndParams = PAData_SaltAndParams;

	static jni::ref<sun::security::krb5::internal::PAData> new_object(jint p1, jni::ref<jni::array<jbyte>> p2) { return base_::new_object(p1, p2); }
	jni::ref<java::lang::Object> clone() { return call_method<"clone", jni::ref<java::lang::Object>>(); }
	static jni::ref<sun::security::krb5::internal::PAData> new_object(jni::ref<sun::security::util::DerValue> p1) { return base_::new_object(p1); }
	jni::ref<jni::array<jbyte>> asn1Encode() { return call_method<"asn1Encode", jni::ref<jni::array<jbyte>>>(); }
	jint getType() { return call_method<"getType", jint>(); }
	jni::ref<jni::array<jbyte>> getValue() { return call_method<"getValue", jni::ref<jni::array<jbyte>>>(); }
	static jni::ref<jni::array<sun::security::krb5::internal::PAData>> parseSequence(jni::ref<sun::security::util::DerInputStream> p1, jbyte p2, jboolean p3) { return call_static_method<"parseSequence", jni::ref<jni::array<sun::security::krb5::internal::PAData>>>(p1, p2, p3); }
	static jint getPreferredEType(jni::ref<jni::array<sun::security::krb5::internal::PAData>> p1, jint p2) { return call_static_method<"getPreferredEType", jint>(p1, p2); }
	static jni::ref<sun::security::krb5::internal::PAData_SaltAndParams> getSaltAndParams(jint p1, jni::ref<jni::array<sun::security::krb5::internal::PAData>> p2) { return call_static_method<"getSaltAndParams", jni::ref<sun::security::krb5::internal::PAData_SaltAndParams>>(p1, p2); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	PAData(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_PADATA
