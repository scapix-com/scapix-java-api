// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_PAFORUSERENC_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_PAFORUSERENC_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::krb5::internal { class PAForUserEnc; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::krb5::internal::PAForUserEnc>
{
	static constexpr fixed_string class_name = "sun/security/krb5/internal/PAForUserEnc";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_PAFORUSERENC_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_PAFORUSERENC)
#define SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_PAFORUSERENC

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/sun/security/krb5/EncryptionKey.h>
#include <scapix/java_api/sun/security/krb5/PrincipalName.h>
#include <scapix/java_api/sun/security/util/DerValue.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::security::krb5::internal::PAForUserEnc : public jni::object_base<"sun/security/krb5/internal/PAForUserEnc",
	java::lang::Object>
{
public:

	jni::ref<sun::security::krb5::PrincipalName> name() { return get_field<"name", jni::ref<sun::security::krb5::PrincipalName>>(); }
	static jni::ref<java::lang::String> AUTH_PACKAGE() { return get_static_field<"AUTH_PACKAGE", jni::ref<java::lang::String>>(); }

	static jni::ref<sun::security::krb5::internal::PAForUserEnc> new_object(jni::ref<sun::security::krb5::PrincipalName> p1, jni::ref<sun::security::krb5::EncryptionKey> p2) { return base_::new_object(p1, p2); }
	static jni::ref<sun::security::krb5::internal::PAForUserEnc> new_object(jni::ref<sun::security::util::DerValue> p1, jni::ref<sun::security::krb5::EncryptionKey> p2) { return base_::new_object(p1, p2); }
	jni::ref<jni::array<jbyte>> asn1Encode() { return call_method<"asn1Encode", jni::ref<jni::array<jbyte>>>(); }
	jni::ref<jni::array<jbyte>> getS4UByteArray() { return call_method<"getS4UByteArray", jni::ref<jni::array<jbyte>>>(); }
	jni::ref<sun::security::krb5::PrincipalName> getName() { return call_method<"getName", jni::ref<sun::security::krb5::PrincipalName>>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	PAForUserEnc(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_PAFORUSERENC
