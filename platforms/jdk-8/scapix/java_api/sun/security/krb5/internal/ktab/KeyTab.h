// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/sun/security/krb5/internal/ktab/KeyTabConstants.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_KTAB_KEYTAB_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_KTAB_KEYTAB_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::krb5::internal::ktab { class KeyTab; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::krb5::internal::ktab::KeyTab>
{
	static constexpr fixed_string class_name = "sun/security/krb5/internal/ktab/KeyTab";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::sun::security::krb5::internal::ktab::KeyTabConstants>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_KTAB_KEYTAB_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_KTAB_KEYTAB)
#define SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_KTAB_KEYTAB

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/File.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/sun/security/krb5/EncryptionKey.h>
#include <scapix/java_api/sun/security/krb5/PrincipalName.h>
#include <scapix/java_api/sun/security/krb5/internal/ktab/KeyTabEntry.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::security::krb5::internal::ktab::KeyTab : public jni::object_base<"sun/security/krb5/internal/ktab/KeyTab",
	java::lang::Object,
	sun::security::krb5::internal::ktab::KeyTabConstants>
{
public:

	static jni::ref<sun::security::krb5::internal::ktab::KeyTab> getInstance(jni::ref<java::lang::String> p1) { return call_static_method<"getInstance", jni::ref<sun::security::krb5::internal::ktab::KeyTab>>(p1); }
	static jni::ref<sun::security::krb5::internal::ktab::KeyTab> getInstance(jni::ref<java::io::File> p1) { return call_static_method<"getInstance", jni::ref<sun::security::krb5::internal::ktab::KeyTab>>(p1); }
	static jni::ref<sun::security::krb5::internal::ktab::KeyTab> getInstance() { return call_static_method<"getInstance", jni::ref<sun::security::krb5::internal::ktab::KeyTab>>(); }
	jboolean isMissing() { return call_method<"isMissing", jboolean>(); }
	jboolean isValid() { return call_method<"isValid", jboolean>(); }
	static jni::ref<java::lang::String> normalize(jni::ref<java::lang::String> p1) { return call_static_method<"normalize", jni::ref<java::lang::String>>(p1); }
	jni::ref<sun::security::krb5::PrincipalName> getOneName() { return call_method<"getOneName", jni::ref<sun::security::krb5::PrincipalName>>(); }
	jni::ref<jni::array<sun::security::krb5::EncryptionKey>> readServiceKeys(jni::ref<sun::security::krb5::PrincipalName> p1) { return call_method<"readServiceKeys", jni::ref<jni::array<sun::security::krb5::EncryptionKey>>>(p1); }
	jboolean findServiceEntry(jni::ref<sun::security::krb5::PrincipalName> p1) { return call_method<"findServiceEntry", jboolean>(p1); }
	jni::ref<java::lang::String> tabName() { return call_method<"tabName", jni::ref<java::lang::String>>(); }
	void addEntry(jni::ref<sun::security::krb5::PrincipalName> p1, jni::ref<jni::array<jchar>> p2, jint p3, jboolean p4) { return call_method<"addEntry", void>(p1, p2, p3, p4); }
	void addEntry(jni::ref<sun::security::krb5::PrincipalName> p1, jni::ref<java::lang::String> p2, jni::ref<jni::array<jchar>> p3, jint p4, jboolean p5) { return call_method<"addEntry", void>(p1, p2, p3, p4, p5); }
	jni::ref<jni::array<sun::security::krb5::internal::ktab::KeyTabEntry>> getEntries() { return call_method<"getEntries", jni::ref<jni::array<sun::security::krb5::internal::ktab::KeyTabEntry>>>(); }
	static jni::ref<sun::security::krb5::internal::ktab::KeyTab> create() { return call_static_method<"create", jni::ref<sun::security::krb5::internal::ktab::KeyTab>>(); }
	static jni::ref<sun::security::krb5::internal::ktab::KeyTab> create(jni::ref<java::lang::String> p1) { return call_static_method<"create", jni::ref<sun::security::krb5::internal::ktab::KeyTab>>(p1); }
	void save() { return call_method<"save", void>(); }
	jint deleteEntries(jni::ref<sun::security::krb5::PrincipalName> p1, jint p2, jint p3) { return call_method<"deleteEntries", jint>(p1, p2, p3); }
	void createVersion(jni::ref<java::io::File> p1) { return call_method<"createVersion", void>(p1); }

protected:

	KeyTab(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_KTAB_KEYTAB
