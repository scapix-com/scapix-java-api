// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/sun/security/krb5/internal/util/KerberosFlags.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_KDCOPTIONS_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_KDCOPTIONS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::krb5::internal { class KDCOptions; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::krb5::internal::KDCOptions>
{
	static constexpr fixed_string class_name = "sun/security/krb5/internal/KDCOptions";
	using base_classes = std::tuple<scapix::java_api::sun::security::krb5::internal::util::KerberosFlags>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_KDCOPTIONS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_KDCOPTIONS)
#define SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_KDCOPTIONS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/sun/security/util/DerInputStream.h>
#include <scapix/java_api/sun/security/util/DerValue.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::security::krb5::internal::KDCOptions : public jni::object_base<"sun/security/krb5/internal/KDCOptions",
	sun::security::krb5::internal::util::KerberosFlags>
{
public:

	static jint RESERVED() { return get_static_field<"RESERVED", jint>(); }
	static jint FORWARDABLE() { return get_static_field<"FORWARDABLE", jint>(); }
	static jint FORWARDED() { return get_static_field<"FORWARDED", jint>(); }
	static jint PROXIABLE() { return get_static_field<"PROXIABLE", jint>(); }
	static jint PROXY() { return get_static_field<"PROXY", jint>(); }
	static jint ALLOW_POSTDATE() { return get_static_field<"ALLOW_POSTDATE", jint>(); }
	static jint POSTDATED() { return get_static_field<"POSTDATED", jint>(); }
	static jint UNUSED7() { return get_static_field<"UNUSED7", jint>(); }
	static jint RENEWABLE() { return get_static_field<"RENEWABLE", jint>(); }
	static jint UNUSED9() { return get_static_field<"UNUSED9", jint>(); }
	static jint UNUSED10() { return get_static_field<"UNUSED10", jint>(); }
	static jint UNUSED11() { return get_static_field<"UNUSED11", jint>(); }
	static jint CNAME_IN_ADDL_TKT() { return get_static_field<"CNAME_IN_ADDL_TKT", jint>(); }
	static jint CANONICALIZE() { return get_static_field<"CANONICALIZE", jint>(); }
	static jint RENEWABLE_OK() { return get_static_field<"RENEWABLE_OK", jint>(); }
	static jint ENC_TKT_IN_SKEY() { return get_static_field<"ENC_TKT_IN_SKEY", jint>(); }
	static jint RENEW() { return get_static_field<"RENEW", jint>(); }
	static jint VALIDATE() { return get_static_field<"VALIDATE", jint>(); }

	static jni::ref<sun::security::krb5::internal::KDCOptions> with(jni::ref<jni::array<jint>> p1) { return call_static_method<"with", jni::ref<sun::security::krb5::internal::KDCOptions>>(p1); }
	static jni::ref<sun::security::krb5::internal::KDCOptions> new_object() { return base_::new_object(); }
	static jni::ref<sun::security::krb5::internal::KDCOptions> new_object(jint p1, jni::ref<jni::array<jbyte>> p2) { return base_::new_object(p1, p2); }
	static jni::ref<sun::security::krb5::internal::KDCOptions> new_object(jni::ref<jni::array<jboolean>> p1) { return base_::new_object(p1); }
	static jni::ref<sun::security::krb5::internal::KDCOptions> new_object(jni::ref<sun::security::util::DerValue> p1) { return base_::new_object(p1); }
	static jni::ref<sun::security::krb5::internal::KDCOptions> new_object(jni::ref<jni::array<jbyte>> p1) { return base_::new_object(p1); }
	static jni::ref<sun::security::krb5::internal::KDCOptions> parse(jni::ref<sun::security::util::DerInputStream> p1, jbyte p2, jboolean p3) { return call_static_method<"parse", jni::ref<sun::security::krb5::internal::KDCOptions>>(p1, p2, p3); }
	void set(jint p1, jboolean p2) { return call_method<"set", void>(p1, p2); }
	jboolean get(jint p1) { return call_method<"get", jboolean>(p1); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	KDCOptions(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_KRB5_INTERNAL_KDCOPTIONS
