// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_KRB5_CHECKSUM_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_KRB5_CHECKSUM_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::krb5 { class Checksum; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::krb5::Checksum>
{
	static constexpr fixed_string class_name = "sun/security/krb5/Checksum";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_KRB5_CHECKSUM_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_KRB5_CHECKSUM)
#define SCAPIX_JAVA_API_SUN_SECURITY_KRB5_CHECKSUM

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/sun/security/krb5/EncryptionKey.h>
#include <scapix/java_api/sun/security/util/DerInputStream.h>
#include <scapix/java_api/sun/security/util/DerValue.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::security::krb5::Checksum : public jni::object_base<"sun/security/krb5/Checksum",
	java::lang::Object>
{
public:

	static jint CKSUMTYPE_NULL() { return get_static_field<"CKSUMTYPE_NULL", jint>(); }
	static jint CKSUMTYPE_CRC32() { return get_static_field<"CKSUMTYPE_CRC32", jint>(); }
	static jint CKSUMTYPE_RSA_MD4() { return get_static_field<"CKSUMTYPE_RSA_MD4", jint>(); }
	static jint CKSUMTYPE_RSA_MD4_DES() { return get_static_field<"CKSUMTYPE_RSA_MD4_DES", jint>(); }
	static jint CKSUMTYPE_DES_MAC() { return get_static_field<"CKSUMTYPE_DES_MAC", jint>(); }
	static jint CKSUMTYPE_DES_MAC_K() { return get_static_field<"CKSUMTYPE_DES_MAC_K", jint>(); }
	static jint CKSUMTYPE_RSA_MD4_DES_K() { return get_static_field<"CKSUMTYPE_RSA_MD4_DES_K", jint>(); }
	static jint CKSUMTYPE_RSA_MD5() { return get_static_field<"CKSUMTYPE_RSA_MD5", jint>(); }
	static jint CKSUMTYPE_RSA_MD5_DES() { return get_static_field<"CKSUMTYPE_RSA_MD5_DES", jint>(); }
	static jint CKSUMTYPE_HMAC_SHA1_DES3_KD() { return get_static_field<"CKSUMTYPE_HMAC_SHA1_DES3_KD", jint>(); }
	static jint CKSUMTYPE_HMAC_SHA1_96_AES128() { return get_static_field<"CKSUMTYPE_HMAC_SHA1_96_AES128", jint>(); }
	static jint CKSUMTYPE_HMAC_SHA1_96_AES256() { return get_static_field<"CKSUMTYPE_HMAC_SHA1_96_AES256", jint>(); }
	static jint CKSUMTYPE_HMAC_MD5_ARCFOUR() { return get_static_field<"CKSUMTYPE_HMAC_MD5_ARCFOUR", jint>(); }

	static void initStatic() { return call_static_method<"initStatic", void>(); }
	static jni::ref<sun::security::krb5::Checksum> new_object(jni::ref<jni::array<jbyte>> p1, jint p2) { return base_::new_object(p1, p2); }
	jboolean verifyAnyChecksum(jni::ref<jni::array<jbyte>> p1, jni::ref<sun::security::krb5::EncryptionKey> p2, jint p3) { return call_method<"verifyAnyChecksum", jboolean>(p1, p2, p3); }
	static jni::ref<sun::security::krb5::Checksum> new_object(jint p1, jni::ref<jni::array<jbyte>> p2, jni::ref<sun::security::krb5::EncryptionKey> p3, jint p4) { return base_::new_object(p1, p2, p3, p4); }
	jboolean verifyKeyedChecksum(jni::ref<jni::array<jbyte>> p1, jni::ref<sun::security::krb5::EncryptionKey> p2, jint p3) { return call_method<"verifyKeyedChecksum", jboolean>(p1, p2, p3); }
	static jni::ref<sun::security::krb5::Checksum> new_object(jni::ref<sun::security::util::DerValue> p1) { return base_::new_object(p1); }
	jni::ref<jni::array<jbyte>> asn1Encode() { return call_method<"asn1Encode", jni::ref<jni::array<jbyte>>>(); }
	static jni::ref<sun::security::krb5::Checksum> parse(jni::ref<sun::security::util::DerInputStream> p1, jbyte p2, jboolean p3) { return call_static_method<"parse", jni::ref<sun::security::krb5::Checksum>>(p1, p2, p3); }
	jni::ref<jni::array<jbyte>> getBytes() { return call_method<"getBytes", jni::ref<jni::array<jbyte>>>(); }
	jint getType() { return call_method<"getType", jint>(); }
	jboolean equals(jni::ref<java::lang::Object> p1) { return call_method<"equals", jboolean>(p1); }
	jint hashCode() { return call_method<"hashCode", jint>(); }

protected:

	Checksum(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_KRB5_CHECKSUM
