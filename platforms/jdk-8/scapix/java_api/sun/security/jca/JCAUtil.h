// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_JCA_JCAUTIL_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_JCA_JCAUTIL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::jca { class JCAUtil; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::jca::JCAUtil>
{
	static constexpr fixed_string class_name = "sun/security/jca/JCAUtil";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_JCA_JCAUTIL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_JCA_JCAUTIL)
#define SCAPIX_JAVA_API_SUN_SECURITY_JCA_JCAUTIL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/security/SecureRandom.h>
#include <scapix/java_api/java/security/cert/Certificate.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::security::jca::JCAUtil : public jni::object_base<"sun/security/jca/JCAUtil",
	java::lang::Object>
{
public:

	static jint getTempArraySize(jint p1) { return call_static_method<"getTempArraySize", jint>(p1); }
	static jni::ref<java::security::SecureRandom> getSecureRandom() { return call_static_method<"getSecureRandom", jni::ref<java::security::SecureRandom>>(); }
	static jni::ref<java::security::SecureRandom> getDefSecureRandom() { return call_static_method<"getDefSecureRandom", jni::ref<java::security::SecureRandom>>(); }
	static void tryCommitCertEvent(jni::ref<java::security::cert::Certificate> p1) { return call_static_method<"tryCommitCertEvent", void>(p1); }

protected:

	JCAUtil(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_JCA_JCAUTIL
