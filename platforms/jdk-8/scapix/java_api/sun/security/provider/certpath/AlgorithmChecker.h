// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/security/cert/PKIXCertPathChecker.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_PROVIDER_CERTPATH_ALGORITHMCHECKER_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_PROVIDER_CERTPATH_ALGORITHMCHECKER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::provider::certpath { class AlgorithmChecker; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::provider::certpath::AlgorithmChecker>
{
	static constexpr fixed_string class_name = "sun/security/provider/certpath/AlgorithmChecker";
	using base_classes = std::tuple<scapix::java_api::java::security::cert::PKIXCertPathChecker>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_PROVIDER_CERTPATH_ALGORITHMCHECKER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_PROVIDER_CERTPATH_ALGORITHMCHECKER)
#define SCAPIX_JAVA_API_SUN_SECURITY_PROVIDER_CERTPATH_ALGORITHMCHECKER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/security/AlgorithmConstraints.h>
#include <scapix/java_api/java/security/cert/Certificate.h>
#include <scapix/java_api/java/security/cert/TrustAnchor.h>
#include <scapix/java_api/java/util/Collection.h>
#include <scapix/java_api/java/util/Date.h>
#include <scapix/java_api/java/util/Set.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::security::provider::certpath::AlgorithmChecker : public jni::object_base<"sun/security/provider/certpath/AlgorithmChecker",
	java::security::cert::PKIXCertPathChecker>
{
public:

	static jni::ref<sun::security::provider::certpath::AlgorithmChecker> new_object(jni::ref<java::security::cert::TrustAnchor> p1, jni::ref<java::lang::String> p2) { return base_::new_object(p1, p2); }
	static jni::ref<sun::security::provider::certpath::AlgorithmChecker> new_object(jni::ref<java::security::AlgorithmConstraints> p1, jni::ref<java::lang::String> p2) { return base_::new_object(p1, p2); }
	static jni::ref<sun::security::provider::certpath::AlgorithmChecker> new_object(jni::ref<java::security::cert::TrustAnchor> p1, jni::ref<java::security::AlgorithmConstraints> p2, jni::ref<java::util::Date> p3, jni::ref<java::lang::String> p4) { return base_::new_object(p1, p2, p3, p4); }
	static jni::ref<sun::security::provider::certpath::AlgorithmChecker> new_object(jni::ref<java::security::cert::TrustAnchor> p1, jni::ref<java::util::Date> p2, jni::ref<java::lang::String> p3) { return base_::new_object(p1, p2, p3); }
	void init(jboolean p1) { return call_method<"init", void>(p1); }
	jboolean isForwardCheckingSupported() { return call_method<"isForwardCheckingSupported", jboolean>(); }
	jni::ref<java::util::Set> getSupportedExtensions() { return call_method<"getSupportedExtensions", jni::ref<java::util::Set>>(); }
	void check(jni::ref<java::security::cert::Certificate> p1, jni::ref<java::util::Collection> p2) { return call_method<"check", void>(p1, p2); }

protected:

	AlgorithmChecker(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_PROVIDER_CERTPATH_ALGORITHMCHECKER
