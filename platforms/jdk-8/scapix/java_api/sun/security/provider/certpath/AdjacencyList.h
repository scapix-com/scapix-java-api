// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_PROVIDER_CERTPATH_ADJACENCYLIST_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_PROVIDER_CERTPATH_ADJACENCYLIST_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::provider::certpath { class AdjacencyList; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::provider::certpath::AdjacencyList>
{
	static constexpr fixed_string class_name = "sun/security/provider/certpath/AdjacencyList";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_PROVIDER_CERTPATH_ADJACENCYLIST_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_PROVIDER_CERTPATH_ADJACENCYLIST)
#define SCAPIX_JAVA_API_SUN_SECURITY_PROVIDER_CERTPATH_ADJACENCYLIST

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Iterator.h>
#include <scapix/java_api/java/util/List.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::security::provider::certpath::AdjacencyList : public jni::object_base<"sun/security/provider/certpath/AdjacencyList",
	java::lang::Object>
{
public:

	static jni::ref<sun::security::provider::certpath::AdjacencyList> new_object(jni::ref<java::util::List> p1) { return base_::new_object(p1); }
	jni::ref<java::util::Iterator> iterator() { return call_method<"iterator", jni::ref<java::util::Iterator>>(); }
	jint numAttemptedPaths() { return call_method<"numAttemptedPaths", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	AdjacencyList(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_PROVIDER_CERTPATH_ADJACENCYLIST
