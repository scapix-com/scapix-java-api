// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_PROVIDER_CERTPATH_RESPONDERID_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_PROVIDER_CERTPATH_RESPONDERID_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::provider::certpath { class ResponderId; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::provider::certpath::ResponderId>
{
	static constexpr fixed_string class_name = "sun/security/provider/certpath/ResponderId";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_PROVIDER_CERTPATH_RESPONDERID_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_PROVIDER_CERTPATH_RESPONDERID)
#define SCAPIX_JAVA_API_SUN_SECURITY_PROVIDER_CERTPATH_RESPONDERID

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/security/PublicKey.h>
#include <scapix/java_api/javax/security/auth/x500/X500Principal.h>
#include <scapix/java_api/sun/security/provider/certpath/ResponderId_Type.h>
#include <scapix/java_api/sun/security/x509/KeyIdentifier.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::security::provider::certpath::ResponderId : public jni::object_base<"sun/security/provider/certpath/ResponderId",
	java::lang::Object>
{
public:

	using Type = ResponderId_Type;

	static jni::ref<sun::security::provider::certpath::ResponderId> new_object(jni::ref<javax::security::auth::x500::X500Principal> p1) { return base_::new_object(p1); }
	static jni::ref<sun::security::provider::certpath::ResponderId> new_object(jni::ref<java::security::PublicKey> p1) { return base_::new_object(p1); }
	static jni::ref<sun::security::provider::certpath::ResponderId> new_object(jni::ref<jni::array<jbyte>> p1) { return base_::new_object(p1); }
	jni::ref<jni::array<jbyte>> getEncoded() { return call_method<"getEncoded", jni::ref<jni::array<jbyte>>>(); }
	jni::ref<sun::security::provider::certpath::ResponderId_Type> getType() { return call_method<"getType", jni::ref<sun::security::provider::certpath::ResponderId_Type>>(); }
	jint length() { return call_method<"length", jint>(); }
	jni::ref<javax::security::auth::x500::X500Principal> getResponderName() { return call_method<"getResponderName", jni::ref<javax::security::auth::x500::X500Principal>>(); }
	jni::ref<sun::security::x509::KeyIdentifier> getKeyIdentifier() { return call_method<"getKeyIdentifier", jni::ref<sun::security::x509::KeyIdentifier>>(); }
	jboolean equals(jni::ref<java::lang::Object> p1) { return call_method<"equals", jboolean>(p1); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	ResponderId(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_PROVIDER_CERTPATH_RESPONDERID
