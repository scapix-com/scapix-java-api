// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_PROVIDER_KEYPROTECTOR_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_PROVIDER_KEYPROTECTOR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::provider { class KeyProtector; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::provider::KeyProtector>
{
	static constexpr fixed_string class_name = "sun/security/provider/KeyProtector";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_PROVIDER_KEYPROTECTOR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_PROVIDER_KEYPROTECTOR)
#define SCAPIX_JAVA_API_SUN_SECURITY_PROVIDER_KEYPROTECTOR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/security/Key.h>
#include <scapix/java_api/sun/security/pkcs/EncryptedPrivateKeyInfo.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::security::provider::KeyProtector : public jni::object_base<"sun/security/provider/KeyProtector",
	java::lang::Object>
{
public:

	static jni::ref<sun::security::provider::KeyProtector> new_object(jni::ref<jni::array<jbyte>> p1) { return base_::new_object(p1); }
	jni::ref<jni::array<jbyte>> protect(jni::ref<java::security::Key> p1) { return call_method<"protect", jni::ref<jni::array<jbyte>>>(p1); }
	jni::ref<java::security::Key> recover(jni::ref<sun::security::pkcs::EncryptedPrivateKeyInfo> p1) { return call_method<"recover", jni::ref<java::security::Key>>(p1); }

protected:

	KeyProtector(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_PROVIDER_KEYPROTECTOR
