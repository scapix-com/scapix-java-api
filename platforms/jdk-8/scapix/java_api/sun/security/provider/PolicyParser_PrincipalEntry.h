// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/security/Principal.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_PROVIDER_POLICYPARSER_PRINCIPALENTRY_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_PROVIDER_POLICYPARSER_PRINCIPALENTRY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::provider { class PolicyParser_PrincipalEntry; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::provider::PolicyParser_PrincipalEntry>
{
	static constexpr fixed_string class_name = "sun/security/provider/PolicyParser$PrincipalEntry";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::security::Principal>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_PROVIDER_POLICYPARSER_PRINCIPALENTRY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_PROVIDER_POLICYPARSER_PRINCIPALENTRY)
#define SCAPIX_JAVA_API_SUN_SECURITY_PROVIDER_POLICYPARSER_PRINCIPALENTRY

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/PrintWriter.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::security::provider::PolicyParser_PrincipalEntry : public jni::object_base<"sun/security/provider/PolicyParser$PrincipalEntry",
	java::lang::Object,
	java::security::Principal>
{
public:

	static jni::ref<java::lang::String> WILDCARD_CLASS() { return get_static_field<"WILDCARD_CLASS", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> WILDCARD_NAME() { return get_static_field<"WILDCARD_NAME", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> REPLACE_NAME() { return get_static_field<"REPLACE_NAME", jni::ref<java::lang::String>>(); }

	static jni::ref<sun::security::provider::PolicyParser_PrincipalEntry> new_object(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return base_::new_object(p1, p2); }
	jni::ref<java::lang::String> getPrincipalClass() { return call_method<"getPrincipalClass", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getPrincipalName() { return call_method<"getPrincipalName", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getDisplayClass() { return call_method<"getDisplayClass", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getDisplayName() { return call_method<"getDisplayName", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getDisplayName(jboolean p1) { return call_method<"getDisplayName", jni::ref<java::lang::String>>(p1); }
	jni::ref<java::lang::String> getName() { return call_method<"getName", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jboolean equals(jni::ref<java::lang::Object> p1) { return call_method<"equals", jboolean>(p1); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	void write(jni::ref<java::io::PrintWriter> p1) { return call_method<"write", void>(p1); }

protected:

	PolicyParser_PrincipalEntry(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_PROVIDER_POLICYPARSER_PRINCIPALENTRY
