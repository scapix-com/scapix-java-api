// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/sun/security/util/DerEncoder.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_PKCS_SIGNERINFO_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_PKCS_SIGNERINFO_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::pkcs { class SignerInfo; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::pkcs::SignerInfo>
{
	static constexpr fixed_string class_name = "sun/security/pkcs/SignerInfo";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::sun::security::util::DerEncoder>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_PKCS_SIGNERINFO_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_PKCS_SIGNERINFO)
#define SCAPIX_JAVA_API_SUN_SECURITY_PKCS_SIGNERINFO

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/OutputStream.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/math/BigInteger.h>
#include <scapix/java_api/java/security/Timestamp.h>
#include <scapix/java_api/java/security/cert/X509Certificate.h>
#include <scapix/java_api/java/util/ArrayList.h>
#include <scapix/java_api/java/util/Set.h>
#include <scapix/java_api/sun/security/pkcs/PKCS7.h>
#include <scapix/java_api/sun/security/pkcs/PKCS9Attributes.h>
#include <scapix/java_api/sun/security/util/DerInputStream.h>
#include <scapix/java_api/sun/security/util/DerOutputStream.h>
#include <scapix/java_api/sun/security/util/JarConstraintsParameters.h>
#include <scapix/java_api/sun/security/x509/AlgorithmId.h>
#include <scapix/java_api/sun/security/x509/X500Name.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::security::pkcs::SignerInfo : public jni::object_base<"sun/security/pkcs/SignerInfo",
	java::lang::Object,
	sun::security::util::DerEncoder>
{
public:

	static jni::ref<sun::security::pkcs::SignerInfo> new_object(jni::ref<sun::security::x509::X500Name> p1, jni::ref<java::math::BigInteger> p2, jni::ref<sun::security::x509::AlgorithmId> p3, jni::ref<sun::security::x509::AlgorithmId> p4, jni::ref<jni::array<jbyte>> p5) { return base_::new_object(p1, p2, p3, p4, p5); }
	static jni::ref<sun::security::pkcs::SignerInfo> new_object(jni::ref<sun::security::x509::X500Name> p1, jni::ref<java::math::BigInteger> p2, jni::ref<sun::security::x509::AlgorithmId> p3, jni::ref<sun::security::pkcs::PKCS9Attributes> p4, jni::ref<sun::security::x509::AlgorithmId> p5, jni::ref<jni::array<jbyte>> p6, jni::ref<sun::security::pkcs::PKCS9Attributes> p7) { return base_::new_object(p1, p2, p3, p4, p5, p6, p7); }
	static jni::ref<sun::security::pkcs::SignerInfo> new_object(jni::ref<sun::security::util::DerInputStream> p1) { return base_::new_object(p1); }
	static jni::ref<sun::security::pkcs::SignerInfo> new_object(jni::ref<sun::security::util::DerInputStream> p1, jboolean p2) { return base_::new_object(p1, p2); }
	void encode(jni::ref<sun::security::util::DerOutputStream> p1) { return call_method<"encode", void>(p1); }
	void derEncode(jni::ref<java::io::OutputStream> p1) { return call_method<"derEncode", void>(p1); }
	jni::ref<java::security::cert::X509Certificate> getCertificate(jni::ref<sun::security::pkcs::PKCS7> p1) { return call_method<"getCertificate", jni::ref<java::security::cert::X509Certificate>>(p1); }
	jni::ref<java::util::ArrayList> getCertificateChain(jni::ref<sun::security::pkcs::PKCS7> p1) { return call_method<"getCertificateChain", jni::ref<java::util::ArrayList>>(p1); }
	jni::ref<java::math::BigInteger> getVersion() { return call_method<"getVersion", jni::ref<java::math::BigInteger>>(); }
	jni::ref<sun::security::x509::X500Name> getIssuerName() { return call_method<"getIssuerName", jni::ref<sun::security::x509::X500Name>>(); }
	jni::ref<java::math::BigInteger> getCertificateSerialNumber() { return call_method<"getCertificateSerialNumber", jni::ref<java::math::BigInteger>>(); }
	jni::ref<sun::security::x509::AlgorithmId> getDigestAlgorithmId() { return call_method<"getDigestAlgorithmId", jni::ref<sun::security::x509::AlgorithmId>>(); }
	jni::ref<sun::security::pkcs::PKCS9Attributes> getAuthenticatedAttributes() { return call_method<"getAuthenticatedAttributes", jni::ref<sun::security::pkcs::PKCS9Attributes>>(); }
	jni::ref<sun::security::x509::AlgorithmId> getDigestEncryptionAlgorithmId() { return call_method<"getDigestEncryptionAlgorithmId", jni::ref<sun::security::x509::AlgorithmId>>(); }
	jni::ref<jni::array<jbyte>> getEncryptedDigest() { return call_method<"getEncryptedDigest", jni::ref<jni::array<jbyte>>>(); }
	jni::ref<sun::security::pkcs::PKCS9Attributes> getUnauthenticatedAttributes() { return call_method<"getUnauthenticatedAttributes", jni::ref<sun::security::pkcs::PKCS9Attributes>>(); }
	jni::ref<sun::security::pkcs::PKCS7> getTsToken() { return call_method<"getTsToken", jni::ref<sun::security::pkcs::PKCS7>>(); }
	jni::ref<java::security::Timestamp> getTimestamp() { return call_method<"getTimestamp", jni::ref<java::security::Timestamp>>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	static jni::ref<java::util::Set> verifyAlgorithms(jni::ref<jni::array<sun::security::pkcs::SignerInfo>> p1, jni::ref<sun::security::util::JarConstraintsParameters> p2, jni::ref<java::lang::String> p3) { return call_static_method<"verifyAlgorithms", jni::ref<java::util::Set>>(p1, p2, p3); }

protected:

	SignerInfo(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_PKCS_SIGNERINFO
