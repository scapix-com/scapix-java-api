// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_PKCS_PKCS7_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_PKCS_PKCS7_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::pkcs { class PKCS7; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::pkcs::PKCS7>
{
	static constexpr fixed_string class_name = "sun/security/pkcs/PKCS7";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_PKCS_PKCS7_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_PKCS_PKCS7)
#define SCAPIX_JAVA_API_SUN_SECURITY_PKCS_PKCS7

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/io/OutputStream.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/math/BigInteger.h>
#include <scapix/java_api/java/net/URI.h>
#include <scapix/java_api/java/security/cert/X509CRL.h>
#include <scapix/java_api/java/security/cert/X509Certificate.h>
#include <scapix/java_api/sun/security/pkcs/ContentInfo.h>
#include <scapix/java_api/sun/security/pkcs/SignerInfo.h>
#include <scapix/java_api/sun/security/util/DerInputStream.h>
#include <scapix/java_api/sun/security/util/DerOutputStream.h>
#include <scapix/java_api/sun/security/x509/AlgorithmId.h>
#include <scapix/java_api/sun/security/x509/X500Name.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::security::pkcs::PKCS7 : public jni::object_base<"sun/security/pkcs/PKCS7",
	java::lang::Object>
{
public:

	static jni::ref<sun::security::pkcs::PKCS7> new_object(jni::ref<java::io::InputStream> p1) { return base_::new_object(p1); }
	static jni::ref<sun::security::pkcs::PKCS7> new_object(jni::ref<sun::security::util::DerInputStream> p1) { return base_::new_object(p1); }
	static jni::ref<sun::security::pkcs::PKCS7> new_object(jni::ref<jni::array<jbyte>> p1) { return base_::new_object(p1); }
	static jni::ref<sun::security::pkcs::PKCS7> new_object(jni::ref<jni::array<sun::security::x509::AlgorithmId>> p1, jni::ref<sun::security::pkcs::ContentInfo> p2, jni::ref<jni::array<java::security::cert::X509Certificate>> p3, jni::ref<jni::array<java::security::cert::X509CRL>> p4, jni::ref<jni::array<sun::security::pkcs::SignerInfo>> p5) { return base_::new_object(p1, p2, p3, p4, p5); }
	static jni::ref<sun::security::pkcs::PKCS7> new_object(jni::ref<jni::array<sun::security::x509::AlgorithmId>> p1, jni::ref<sun::security::pkcs::ContentInfo> p2, jni::ref<jni::array<java::security::cert::X509Certificate>> p3, jni::ref<jni::array<sun::security::pkcs::SignerInfo>> p4) { return base_::new_object(p1, p2, p3, p4); }
	void encodeSignedData(jni::ref<java::io::OutputStream> p1) { return call_method<"encodeSignedData", void>(p1); }
	void encodeSignedData(jni::ref<sun::security::util::DerOutputStream> p1) { return call_method<"encodeSignedData", void>(p1); }
	jni::ref<sun::security::pkcs::SignerInfo> verify(jni::ref<sun::security::pkcs::SignerInfo> p1, jni::ref<jni::array<jbyte>> p2) { return call_method<"verify", jni::ref<sun::security::pkcs::SignerInfo>>(p1, p2); }
	jni::ref<jni::array<sun::security::pkcs::SignerInfo>> verify(jni::ref<jni::array<jbyte>> p1) { return call_method<"verify", jni::ref<jni::array<sun::security::pkcs::SignerInfo>>>(p1); }
	jni::ref<jni::array<sun::security::pkcs::SignerInfo>> verify() { return call_method<"verify", jni::ref<jni::array<sun::security::pkcs::SignerInfo>>>(); }
	jni::ref<java::math::BigInteger> getVersion() { return call_method<"getVersion", jni::ref<java::math::BigInteger>>(); }
	jni::ref<jni::array<sun::security::x509::AlgorithmId>> getDigestAlgorithmIds() { return call_method<"getDigestAlgorithmIds", jni::ref<jni::array<sun::security::x509::AlgorithmId>>>(); }
	jni::ref<sun::security::pkcs::ContentInfo> getContentInfo() { return call_method<"getContentInfo", jni::ref<sun::security::pkcs::ContentInfo>>(); }
	jni::ref<jni::array<java::security::cert::X509Certificate>> getCertificates() { return call_method<"getCertificates", jni::ref<jni::array<java::security::cert::X509Certificate>>>(); }
	jni::ref<jni::array<java::security::cert::X509CRL>> getCRLs() { return call_method<"getCRLs", jni::ref<jni::array<java::security::cert::X509CRL>>>(); }
	jni::ref<jni::array<sun::security::pkcs::SignerInfo>> getSignerInfos() { return call_method<"getSignerInfos", jni::ref<jni::array<sun::security::pkcs::SignerInfo>>>(); }
	jni::ref<java::security::cert::X509Certificate> getCertificate(jni::ref<java::math::BigInteger> p1, jni::ref<sun::security::x509::X500Name> p2) { return call_method<"getCertificate", jni::ref<java::security::cert::X509Certificate>>(p1, p2); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jboolean isOldStyle() { return call_method<"isOldStyle", jboolean>(); }
	static jni::ref<jni::array<jbyte>> generateSignedData(jni::ref<jni::array<jbyte>> p1, jni::ref<jni::array<java::security::cert::X509Certificate>> p2, jni::ref<jni::array<jbyte>> p3, jni::ref<java::lang::String> p4, jni::ref<java::net::URI> p5, jni::ref<java::lang::String> p6, jni::ref<java::lang::String> p7) { return call_static_method<"generateSignedData", jni::ref<jni::array<jbyte>>>(p1, p2, p3, p4, p5, p6, p7); }

protected:

	PKCS7(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_PKCS_PKCS7
