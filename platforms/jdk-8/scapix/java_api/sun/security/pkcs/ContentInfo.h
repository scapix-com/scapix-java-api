// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_PKCS_CONTENTINFO_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_PKCS_CONTENTINFO_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::pkcs { class ContentInfo; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::pkcs::ContentInfo>
{
	static constexpr fixed_string class_name = "sun/security/pkcs/ContentInfo";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_PKCS_CONTENTINFO_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_PKCS_CONTENTINFO)
#define SCAPIX_JAVA_API_SUN_SECURITY_PKCS_CONTENTINFO

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/sun/security/util/DerInputStream.h>
#include <scapix/java_api/sun/security/util/DerOutputStream.h>
#include <scapix/java_api/sun/security/util/DerValue.h>
#include <scapix/java_api/sun/security/util/ObjectIdentifier.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::security::pkcs::ContentInfo : public jni::object_base<"sun/security/pkcs/ContentInfo",
	java::lang::Object>
{
public:

	static jni::ref<sun::security::util::ObjectIdentifier> PKCS7_OID() { return get_static_field<"PKCS7_OID", jni::ref<sun::security::util::ObjectIdentifier>>(); }
	static void PKCS7_OID(jni::ref<sun::security::util::ObjectIdentifier> v) { set_static_field<"PKCS7_OID", jni::ref<sun::security::util::ObjectIdentifier>>(v); }
	static jni::ref<sun::security::util::ObjectIdentifier> DATA_OID() { return get_static_field<"DATA_OID", jni::ref<sun::security::util::ObjectIdentifier>>(); }
	static void DATA_OID(jni::ref<sun::security::util::ObjectIdentifier> v) { set_static_field<"DATA_OID", jni::ref<sun::security::util::ObjectIdentifier>>(v); }
	static jni::ref<sun::security::util::ObjectIdentifier> SIGNED_DATA_OID() { return get_static_field<"SIGNED_DATA_OID", jni::ref<sun::security::util::ObjectIdentifier>>(); }
	static void SIGNED_DATA_OID(jni::ref<sun::security::util::ObjectIdentifier> v) { set_static_field<"SIGNED_DATA_OID", jni::ref<sun::security::util::ObjectIdentifier>>(v); }
	static jni::ref<sun::security::util::ObjectIdentifier> ENVELOPED_DATA_OID() { return get_static_field<"ENVELOPED_DATA_OID", jni::ref<sun::security::util::ObjectIdentifier>>(); }
	static void ENVELOPED_DATA_OID(jni::ref<sun::security::util::ObjectIdentifier> v) { set_static_field<"ENVELOPED_DATA_OID", jni::ref<sun::security::util::ObjectIdentifier>>(v); }
	static jni::ref<sun::security::util::ObjectIdentifier> SIGNED_AND_ENVELOPED_DATA_OID() { return get_static_field<"SIGNED_AND_ENVELOPED_DATA_OID", jni::ref<sun::security::util::ObjectIdentifier>>(); }
	static void SIGNED_AND_ENVELOPED_DATA_OID(jni::ref<sun::security::util::ObjectIdentifier> v) { set_static_field<"SIGNED_AND_ENVELOPED_DATA_OID", jni::ref<sun::security::util::ObjectIdentifier>>(v); }
	static jni::ref<sun::security::util::ObjectIdentifier> DIGESTED_DATA_OID() { return get_static_field<"DIGESTED_DATA_OID", jni::ref<sun::security::util::ObjectIdentifier>>(); }
	static void DIGESTED_DATA_OID(jni::ref<sun::security::util::ObjectIdentifier> v) { set_static_field<"DIGESTED_DATA_OID", jni::ref<sun::security::util::ObjectIdentifier>>(v); }
	static jni::ref<sun::security::util::ObjectIdentifier> ENCRYPTED_DATA_OID() { return get_static_field<"ENCRYPTED_DATA_OID", jni::ref<sun::security::util::ObjectIdentifier>>(); }
	static void ENCRYPTED_DATA_OID(jni::ref<sun::security::util::ObjectIdentifier> v) { set_static_field<"ENCRYPTED_DATA_OID", jni::ref<sun::security::util::ObjectIdentifier>>(v); }
	static jni::ref<sun::security::util::ObjectIdentifier> OLD_SIGNED_DATA_OID() { return get_static_field<"OLD_SIGNED_DATA_OID", jni::ref<sun::security::util::ObjectIdentifier>>(); }
	static void OLD_SIGNED_DATA_OID(jni::ref<sun::security::util::ObjectIdentifier> v) { set_static_field<"OLD_SIGNED_DATA_OID", jni::ref<sun::security::util::ObjectIdentifier>>(v); }
	static jni::ref<sun::security::util::ObjectIdentifier> OLD_DATA_OID() { return get_static_field<"OLD_DATA_OID", jni::ref<sun::security::util::ObjectIdentifier>>(); }
	static void OLD_DATA_OID(jni::ref<sun::security::util::ObjectIdentifier> v) { set_static_field<"OLD_DATA_OID", jni::ref<sun::security::util::ObjectIdentifier>>(v); }
	static jni::ref<sun::security::util::ObjectIdentifier> NETSCAPE_CERT_SEQUENCE_OID() { return get_static_field<"NETSCAPE_CERT_SEQUENCE_OID", jni::ref<sun::security::util::ObjectIdentifier>>(); }
	static void NETSCAPE_CERT_SEQUENCE_OID(jni::ref<sun::security::util::ObjectIdentifier> v) { set_static_field<"NETSCAPE_CERT_SEQUENCE_OID", jni::ref<sun::security::util::ObjectIdentifier>>(v); }
	static jni::ref<sun::security::util::ObjectIdentifier> TIMESTAMP_TOKEN_INFO_OID() { return get_static_field<"TIMESTAMP_TOKEN_INFO_OID", jni::ref<sun::security::util::ObjectIdentifier>>(); }
	static void TIMESTAMP_TOKEN_INFO_OID(jni::ref<sun::security::util::ObjectIdentifier> v) { set_static_field<"TIMESTAMP_TOKEN_INFO_OID", jni::ref<sun::security::util::ObjectIdentifier>>(v); }

	static jni::ref<sun::security::pkcs::ContentInfo> new_object(jni::ref<sun::security::util::ObjectIdentifier> p1, jni::ref<sun::security::util::DerValue> p2) { return base_::new_object(p1, p2); }
	static jni::ref<sun::security::pkcs::ContentInfo> new_object(jni::ref<jni::array<jbyte>> p1) { return base_::new_object(p1); }
	static jni::ref<sun::security::pkcs::ContentInfo> new_object(jni::ref<sun::security::util::DerInputStream> p1) { return base_::new_object(p1); }
	static jni::ref<sun::security::pkcs::ContentInfo> new_object(jni::ref<sun::security::util::DerInputStream> p1, jboolean p2) { return base_::new_object(p1, p2); }
	jni::ref<sun::security::util::DerValue> getContent() { return call_method<"getContent", jni::ref<sun::security::util::DerValue>>(); }
	jni::ref<sun::security::util::ObjectIdentifier> getContentType() { return call_method<"getContentType", jni::ref<sun::security::util::ObjectIdentifier>>(); }
	jni::ref<jni::array<jbyte>> getData() { return call_method<"getData", jni::ref<jni::array<jbyte>>>(); }
	void encode(jni::ref<sun::security::util::DerOutputStream> p1) { return call_method<"encode", void>(p1); }
	jni::ref<jni::array<jbyte>> getContentBytes() { return call_method<"getContentBytes", jni::ref<jni::array<jbyte>>>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	ContentInfo(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_PKCS_CONTENTINFO
