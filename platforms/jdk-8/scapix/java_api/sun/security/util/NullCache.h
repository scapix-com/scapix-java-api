// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/sun/security/util/Cache.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_UTIL_NULLCACHE_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_UTIL_NULLCACHE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::util { class NullCache; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::util::NullCache>
{
	static constexpr fixed_string class_name = "sun/security/util/NullCache";
	using base_classes = std::tuple<scapix::java_api::sun::security::util::Cache>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_UTIL_NULLCACHE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_UTIL_NULLCACHE)
#define SCAPIX_JAVA_API_SUN_SECURITY_UTIL_NULLCACHE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/sun/security/util/Cache_CacheVisitor.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::security::util::NullCache : public jni::object_base<"sun/security/util/NullCache",
	sun::security::util::Cache>
{
public:

	jint size() { return call_method<"size", jint>(); }
	void clear() { return call_method<"clear", void>(); }
	void put(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2) { return call_method<"put", void>(p1, p2); }
	jni::ref<java::lang::Object> get(jni::ref<java::lang::Object> p1) { return call_method<"get", jni::ref<java::lang::Object>>(p1); }
	void remove(jni::ref<java::lang::Object> p1) { return call_method<"remove", void>(p1); }
	jni::ref<java::lang::Object> pull(jni::ref<java::lang::Object> p1) { return call_method<"pull", jni::ref<java::lang::Object>>(p1); }
	void setCapacity(jint p1) { return call_method<"setCapacity", void>(p1); }
	void setTimeout(jint p1) { return call_method<"setTimeout", void>(p1); }
	void accept(jni::ref<sun::security::util::Cache_CacheVisitor> p1) { return call_method<"accept", void>(p1); }

protected:

	NullCache(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_UTIL_NULLCACHE
