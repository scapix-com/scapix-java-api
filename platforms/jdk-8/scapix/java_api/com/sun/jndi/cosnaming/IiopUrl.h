// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_JNDI_COSNAMING_IIOPURL_FWD
#define SCAPIX_JAVA_API_COM_SUN_JNDI_COSNAMING_IIOPURL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::jndi::cosnaming { class IiopUrl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::jndi::cosnaming::IiopUrl>
{
	static constexpr fixed_string class_name = "com/sun/jndi/cosnaming/IiopUrl";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JNDI_COSNAMING_IIOPURL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_JNDI_COSNAMING_IIOPURL)
#define SCAPIX_JAVA_API_COM_SUN_JNDI_COSNAMING_IIOPURL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/jndi/toolkit/url/Uri_ParseMode.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Vector.h>
#include <scapix/java_api/javax/naming/Name.h>
#include <scapix/java_api/com/sun/jndi/cosnaming/IiopUrl_Address.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::jndi::cosnaming::IiopUrl : public jni::object_base<"com/sun/jndi/cosnaming/IiopUrl",
	java::lang::Object>
{
public:

	using Address = IiopUrl_Address;

	static jni::ref<com::sun::jndi::toolkit::url::Uri_ParseMode> PARSE_MODE() { return get_static_field<"PARSE_MODE", jni::ref<com::sun::jndi::toolkit::url::Uri_ParseMode>>(); }

	jni::ref<java::util::Vector> getAddresses() { return call_method<"getAddresses", jni::ref<java::util::Vector>>(); }
	jni::ref<java::lang::String> getStringName() { return call_method<"getStringName", jni::ref<java::lang::String>>(); }
	jni::ref<javax::naming::Name> getCosName() { return call_method<"getCosName", jni::ref<javax::naming::Name>>(); }
	static jni::ref<com::sun::jndi::cosnaming::IiopUrl> new_object(jni::ref<java::lang::String> p1) { return base_::new_object(p1); }

protected:

	IiopUrl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JNDI_COSNAMING_IIOPURL
