// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/jndi/ldap/Ber.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_JNDI_LDAP_BERENCODER_FWD
#define SCAPIX_JAVA_API_COM_SUN_JNDI_LDAP_BERENCODER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::jndi::ldap { class BerEncoder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::jndi::ldap::BerEncoder>
{
	static constexpr fixed_string class_name = "com/sun/jndi/ldap/BerEncoder";
	using base_classes = std::tuple<scapix::java_api::com::sun::jndi::ldap::Ber>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JNDI_LDAP_BERENCODER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_JNDI_LDAP_BERENCODER)
#define SCAPIX_JAVA_API_COM_SUN_JNDI_LDAP_BERENCODER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::jndi::ldap::BerEncoder : public jni::object_base<"com/sun/jndi/ldap/BerEncoder",
	com::sun::jndi::ldap::Ber>
{
public:

	static jni::ref<com::sun::jndi::ldap::BerEncoder> new_object() { return base_::new_object(); }
	static jni::ref<com::sun::jndi::ldap::BerEncoder> new_object(jint p1) { return base_::new_object(p1); }
	void reset() { return call_method<"reset", void>(); }
	jint getDataLen() { return call_method<"getDataLen", jint>(); }
	jni::ref<jni::array<jbyte>> getBuf() { return call_method<"getBuf", jni::ref<jni::array<jbyte>>>(); }
	jni::ref<jni::array<jbyte>> getTrimmedBuf() { return call_method<"getTrimmedBuf", jni::ref<jni::array<jbyte>>>(); }
	void beginSeq(jint p1) { return call_method<"beginSeq", void>(p1); }
	void endSeq() { return call_method<"endSeq", void>(); }
	void encodeByte(jint p1) { return call_method<"encodeByte", void>(p1); }
	void encodeInt(jint p1) { return call_method<"encodeInt", void>(p1); }
	void encodeInt(jint p1, jint p2) { return call_method<"encodeInt", void>(p1, p2); }
	void encodeBoolean(jboolean p1) { return call_method<"encodeBoolean", void>(p1); }
	void encodeBoolean(jboolean p1, jint p2) { return call_method<"encodeBoolean", void>(p1, p2); }
	void encodeString(jni::ref<java::lang::String> p1, jboolean p2) { return call_method<"encodeString", void>(p1, p2); }
	void encodeString(jni::ref<java::lang::String> p1, jint p2, jboolean p3) { return call_method<"encodeString", void>(p1, p2, p3); }
	void encodeOctetString(jni::ref<jni::array<jbyte>> p1, jint p2, jint p3, jint p4) { return call_method<"encodeOctetString", void>(p1, p2, p3, p4); }
	void encodeOctetString(jni::ref<jni::array<jbyte>> p1, jint p2) { return call_method<"encodeOctetString", void>(p1, p2); }
	void encodeStringArray(jni::ref<jni::array<java::lang::String>> p1, jboolean p2) { return call_method<"encodeStringArray", void>(p1, p2); }

protected:

	BerEncoder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JNDI_LDAP_BERENCODER
