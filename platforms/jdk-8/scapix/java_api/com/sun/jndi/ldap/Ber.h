// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_JNDI_LDAP_BER_FWD
#define SCAPIX_JAVA_API_COM_SUN_JNDI_LDAP_BER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::jndi::ldap { class Ber; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::jndi::ldap::Ber>
{
	static constexpr fixed_string class_name = "com/sun/jndi/ldap/Ber";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JNDI_LDAP_BER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_JNDI_LDAP_BER)
#define SCAPIX_JAVA_API_COM_SUN_JNDI_LDAP_BER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/OutputStream.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::jndi::ldap::Ber : public jni::object_base<"com/sun/jndi/ldap/Ber",
	java::lang::Object>
{
public:

	static jint ASN_BOOLEAN() { return get_static_field<"ASN_BOOLEAN", jint>(); }
	static jint ASN_INTEGER() { return get_static_field<"ASN_INTEGER", jint>(); }
	static jint ASN_BIT_STRING() { return get_static_field<"ASN_BIT_STRING", jint>(); }
	static jint ASN_SIMPLE_STRING() { return get_static_field<"ASN_SIMPLE_STRING", jint>(); }
	static jint ASN_OCTET_STR() { return get_static_field<"ASN_OCTET_STR", jint>(); }
	static jint ASN_NULL() { return get_static_field<"ASN_NULL", jint>(); }
	static jint ASN_OBJECT_ID() { return get_static_field<"ASN_OBJECT_ID", jint>(); }
	static jint ASN_SEQUENCE() { return get_static_field<"ASN_SEQUENCE", jint>(); }
	static jint ASN_SET() { return get_static_field<"ASN_SET", jint>(); }
	static jint ASN_PRIMITIVE() { return get_static_field<"ASN_PRIMITIVE", jint>(); }
	static jint ASN_UNIVERSAL() { return get_static_field<"ASN_UNIVERSAL", jint>(); }
	static jint ASN_CONSTRUCTOR() { return get_static_field<"ASN_CONSTRUCTOR", jint>(); }
	static jint ASN_APPLICATION() { return get_static_field<"ASN_APPLICATION", jint>(); }
	static jint ASN_CONTEXT() { return get_static_field<"ASN_CONTEXT", jint>(); }
	static jint ASN_PRIVATE() { return get_static_field<"ASN_PRIVATE", jint>(); }
	static jint ASN_ENUMERATED() { return get_static_field<"ASN_ENUMERATED", jint>(); }

	static void dumpBER(jni::ref<java::io::OutputStream> p1, jni::ref<java::lang::String> p2, jni::ref<jni::array<jbyte>> p3, jint p4, jint p5) { return call_static_method<"dumpBER", void>(p1, p2, p3, p4, p5); }

protected:

	Ber(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JNDI_LDAP_BER
