// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/com/sun/jndi/ldap/pool/PooledConnectionFactory.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_JNDI_LDAP_LDAPCLIENTFACTORY_FWD
#define SCAPIX_JAVA_API_COM_SUN_JNDI_LDAP_LDAPCLIENTFACTORY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::jndi::ldap { class LdapClientFactory; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::jndi::ldap::LdapClientFactory>
{
	static constexpr fixed_string class_name = "com/sun/jndi/ldap/LdapClientFactory";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::com::sun::jndi::ldap::pool::PooledConnectionFactory>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JNDI_LDAP_LDAPCLIENTFACTORY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_JNDI_LDAP_LDAPCLIENTFACTORY)
#define SCAPIX_JAVA_API_COM_SUN_JNDI_LDAP_LDAPCLIENTFACTORY

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/jndi/ldap/pool/PoolCallback.h>
#include <scapix/java_api/com/sun/jndi/ldap/pool/PooledConnection.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class com::sun::jndi::ldap::LdapClientFactory : public jni::object_base<"com/sun/jndi/ldap/LdapClientFactory",
	java::lang::Object,
	com::sun::jndi::ldap::pool::PooledConnectionFactory>
{
public:

	jni::ref<com::sun::jndi::ldap::pool::PooledConnection> createPooledConnection(jni::ref<com::sun::jndi::ldap::pool::PoolCallback> p1) { return call_method<"createPooledConnection", jni::ref<com::sun::jndi::ldap::pool::PooledConnection>>(p1); }
	jni::ref<com::sun::jndi::ldap::pool::PooledConnection> createPooledConnection(jni::ref<com::sun::jndi::ldap::pool::PoolCallback> p1, jlong p2) { return call_method<"createPooledConnection", jni::ref<com::sun::jndi::ldap::pool::PooledConnection>>(p1, p2); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	LdapClientFactory(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JNDI_LDAP_LDAPCLIENTFACTORY
