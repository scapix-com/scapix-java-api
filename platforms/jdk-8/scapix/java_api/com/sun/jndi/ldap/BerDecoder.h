// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/jndi/ldap/Ber.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_JNDI_LDAP_BERDECODER_FWD
#define SCAPIX_JAVA_API_COM_SUN_JNDI_LDAP_BERDECODER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::jndi::ldap { class BerDecoder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::jndi::ldap::BerDecoder>
{
	static constexpr fixed_string class_name = "com/sun/jndi/ldap/BerDecoder";
	using base_classes = std::tuple<scapix::java_api::com::sun::jndi::ldap::Ber>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JNDI_LDAP_BERDECODER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_JNDI_LDAP_BERDECODER)
#define SCAPIX_JAVA_API_COM_SUN_JNDI_LDAP_BERDECODER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::jndi::ldap::BerDecoder : public jni::object_base<"com/sun/jndi/ldap/BerDecoder",
	com::sun::jndi::ldap::Ber>
{
public:

	static jni::ref<com::sun::jndi::ldap::BerDecoder> new_object(jni::ref<jni::array<jbyte>> p1, jint p2, jint p3) { return base_::new_object(p1, p2, p3); }
	void reset() { return call_method<"reset", void>(); }
	jint getParsePosition() { return call_method<"getParsePosition", jint>(); }
	jint parseLength() { return call_method<"parseLength", jint>(); }
	jint parseSeq(jni::ref<jni::array<jint>> p1) { return call_method<"parseSeq", jint>(p1); }
	jint parseByte() { return call_method<"parseByte", jint>(); }
	jint peekByte() { return call_method<"peekByte", jint>(); }
	jboolean parseBoolean() { return call_method<"parseBoolean", jboolean>(); }
	jint parseEnumeration() { return call_method<"parseEnumeration", jint>(); }
	jint parseInt() { return call_method<"parseInt", jint>(); }
	jni::ref<java::lang::String> parseString(jboolean p1) { return call_method<"parseString", jni::ref<java::lang::String>>(p1); }
	jni::ref<java::lang::String> parseStringWithTag(jint p1, jboolean p2, jni::ref<jni::array<jint>> p3) { return call_method<"parseStringWithTag", jni::ref<java::lang::String>>(p1, p2, p3); }
	jni::ref<jni::array<jbyte>> parseOctetString(jint p1, jni::ref<jni::array<jint>> p2) { return call_method<"parseOctetString", jni::ref<jni::array<jbyte>>>(p1, p2); }
	jint bytesLeft() { return call_method<"bytesLeft", jint>(); }

protected:

	BerDecoder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JNDI_LDAP_BERDECODER
