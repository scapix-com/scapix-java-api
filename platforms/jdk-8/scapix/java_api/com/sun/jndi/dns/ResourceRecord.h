// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_JNDI_DNS_RESOURCERECORD_FWD
#define SCAPIX_JAVA_API_COM_SUN_JNDI_DNS_RESOURCERECORD_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::jndi::dns { class ResourceRecord; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::jndi::dns::ResourceRecord>
{
	static constexpr fixed_string class_name = "com/sun/jndi/dns/ResourceRecord";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JNDI_DNS_RESOURCERECORD_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_JNDI_DNS_RESOURCERECORD)
#define SCAPIX_JAVA_API_COM_SUN_JNDI_DNS_RESOURCERECORD

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/jndi/dns/DnsName.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::jndi::dns::ResourceRecord : public jni::object_base<"com/sun/jndi/dns/ResourceRecord",
	java::lang::Object>
{
public:

	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jni::ref<com::sun::jndi::dns::DnsName> getName() { return call_method<"getName", jni::ref<com::sun::jndi::dns::DnsName>>(); }
	jint size() { return call_method<"size", jint>(); }
	jint getType() { return call_method<"getType", jint>(); }
	jint getRrclass() { return call_method<"getRrclass", jint>(); }
	jni::ref<java::lang::Object> getRdata() { return call_method<"getRdata", jni::ref<java::lang::Object>>(); }
	static jni::ref<java::lang::String> getTypeName(jint p1) { return call_static_method<"getTypeName", jni::ref<java::lang::String>>(p1); }
	static jint getType(jni::ref<java::lang::String> p1) { return call_static_method<"getType", jint>(p1); }
	static jni::ref<java::lang::String> getRrclassName(jint p1) { return call_static_method<"getRrclassName", jni::ref<java::lang::String>>(p1); }
	static jint getRrclass(jni::ref<java::lang::String> p1) { return call_static_method<"getRrclass", jint>(p1); }
	static jint compareSerialNumbers(jlong p1, jlong p2) { return call_static_method<"compareSerialNumbers", jint>(p1, p2); }

protected:

	ResourceRecord(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JNDI_DNS_RESOURCERECORD
