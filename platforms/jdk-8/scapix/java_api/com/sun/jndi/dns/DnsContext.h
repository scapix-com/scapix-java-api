// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/jndi/toolkit/ctx/ComponentDirContext.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_JNDI_DNS_DNSCONTEXT_FWD
#define SCAPIX_JAVA_API_COM_SUN_JNDI_DNS_DNSCONTEXT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::jndi::dns { class DnsContext; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::jndi::dns::DnsContext>
{
	static constexpr fixed_string class_name = "com/sun/jndi/dns/DnsContext";
	using base_classes = std::tuple<scapix::java_api::com::sun::jndi::toolkit::ctx::ComponentDirContext>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JNDI_DNS_DNSCONTEXT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_JNDI_DNS_DNSCONTEXT)
#define SCAPIX_JAVA_API_COM_SUN_JNDI_DNS_DNSCONTEXT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/jndi/toolkit/ctx/Continuation.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Hashtable.h>
#include <scapix/java_api/javax/naming/Context.h>
#include <scapix/java_api/javax/naming/Name.h>
#include <scapix/java_api/javax/naming/NameParser.h>
#include <scapix/java_api/javax/naming/NamingEnumeration.h>
#include <scapix/java_api/javax/naming/directory/Attributes.h>
#include <scapix/java_api/javax/naming/directory/DirContext.h>
#include <scapix/java_api/javax/naming/directory/ModificationItem.h>
#include <scapix/java_api/javax/naming/directory/SearchControls.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::jndi::dns::DnsContext : public jni::object_base<"com/sun/jndi/dns/DnsContext",
	com::sun::jndi::toolkit::ctx::ComponentDirContext>
{
public:

	static jni::ref<com::sun::jndi::dns::DnsContext> new_object(jni::ref<java::lang::String> p1, jni::ref<jni::array<java::lang::String>> p2, jni::ref<java::util::Hashtable> p3) { return base_::new_object(p1, p2, p3); }
	void close() { return call_method<"close", void>(); }
	jni::ref<java::util::Hashtable> getEnvironment() { return call_method<"getEnvironment", jni::ref<java::util::Hashtable>>(); }
	jni::ref<java::lang::Object> addToEnvironment(jni::ref<java::lang::String> p1, jni::ref<java::lang::Object> p2) { return call_method<"addToEnvironment", jni::ref<java::lang::Object>>(p1, p2); }
	jni::ref<java::lang::Object> removeFromEnvironment(jni::ref<java::lang::String> p1) { return call_method<"removeFromEnvironment", jni::ref<java::lang::Object>>(p1); }
	jni::ref<java::lang::Object> c_lookup(jni::ref<javax::naming::Name> p1, jni::ref<com::sun::jndi::toolkit::ctx::Continuation> p2) { return call_method<"c_lookup", jni::ref<java::lang::Object>>(p1, p2); }
	jni::ref<java::lang::Object> c_lookupLink(jni::ref<javax::naming::Name> p1, jni::ref<com::sun::jndi::toolkit::ctx::Continuation> p2) { return call_method<"c_lookupLink", jni::ref<java::lang::Object>>(p1, p2); }
	jni::ref<javax::naming::NamingEnumeration> c_list(jni::ref<javax::naming::Name> p1, jni::ref<com::sun::jndi::toolkit::ctx::Continuation> p2) { return call_method<"c_list", jni::ref<javax::naming::NamingEnumeration>>(p1, p2); }
	jni::ref<javax::naming::NamingEnumeration> c_listBindings(jni::ref<javax::naming::Name> p1, jni::ref<com::sun::jndi::toolkit::ctx::Continuation> p2) { return call_method<"c_listBindings", jni::ref<javax::naming::NamingEnumeration>>(p1, p2); }
	void c_bind(jni::ref<javax::naming::Name> p1, jni::ref<java::lang::Object> p2, jni::ref<com::sun::jndi::toolkit::ctx::Continuation> p3) { return call_method<"c_bind", void>(p1, p2, p3); }
	void c_rebind(jni::ref<javax::naming::Name> p1, jni::ref<java::lang::Object> p2, jni::ref<com::sun::jndi::toolkit::ctx::Continuation> p3) { return call_method<"c_rebind", void>(p1, p2, p3); }
	void c_unbind(jni::ref<javax::naming::Name> p1, jni::ref<com::sun::jndi::toolkit::ctx::Continuation> p2) { return call_method<"c_unbind", void>(p1, p2); }
	void c_rename(jni::ref<javax::naming::Name> p1, jni::ref<javax::naming::Name> p2, jni::ref<com::sun::jndi::toolkit::ctx::Continuation> p3) { return call_method<"c_rename", void>(p1, p2, p3); }
	jni::ref<javax::naming::Context> c_createSubcontext(jni::ref<javax::naming::Name> p1, jni::ref<com::sun::jndi::toolkit::ctx::Continuation> p2) { return call_method<"c_createSubcontext", jni::ref<javax::naming::Context>>(p1, p2); }
	void c_destroySubcontext(jni::ref<javax::naming::Name> p1, jni::ref<com::sun::jndi::toolkit::ctx::Continuation> p2) { return call_method<"c_destroySubcontext", void>(p1, p2); }
	jni::ref<javax::naming::NameParser> c_getNameParser(jni::ref<javax::naming::Name> p1, jni::ref<com::sun::jndi::toolkit::ctx::Continuation> p2) { return call_method<"c_getNameParser", jni::ref<javax::naming::NameParser>>(p1, p2); }
	void c_bind(jni::ref<javax::naming::Name> p1, jni::ref<java::lang::Object> p2, jni::ref<javax::naming::directory::Attributes> p3, jni::ref<com::sun::jndi::toolkit::ctx::Continuation> p4) { return call_method<"c_bind", void>(p1, p2, p3, p4); }
	void c_rebind(jni::ref<javax::naming::Name> p1, jni::ref<java::lang::Object> p2, jni::ref<javax::naming::directory::Attributes> p3, jni::ref<com::sun::jndi::toolkit::ctx::Continuation> p4) { return call_method<"c_rebind", void>(p1, p2, p3, p4); }
	jni::ref<javax::naming::directory::DirContext> c_createSubcontext(jni::ref<javax::naming::Name> p1, jni::ref<javax::naming::directory::Attributes> p2, jni::ref<com::sun::jndi::toolkit::ctx::Continuation> p3) { return call_method<"c_createSubcontext", jni::ref<javax::naming::directory::DirContext>>(p1, p2, p3); }
	jni::ref<javax::naming::directory::Attributes> c_getAttributes(jni::ref<javax::naming::Name> p1, jni::ref<jni::array<java::lang::String>> p2, jni::ref<com::sun::jndi::toolkit::ctx::Continuation> p3) { return call_method<"c_getAttributes", jni::ref<javax::naming::directory::Attributes>>(p1, p2, p3); }
	void c_modifyAttributes(jni::ref<javax::naming::Name> p1, jint p2, jni::ref<javax::naming::directory::Attributes> p3, jni::ref<com::sun::jndi::toolkit::ctx::Continuation> p4) { return call_method<"c_modifyAttributes", void>(p1, p2, p3, p4); }
	void c_modifyAttributes(jni::ref<javax::naming::Name> p1, jni::ref<jni::array<javax::naming::directory::ModificationItem>> p2, jni::ref<com::sun::jndi::toolkit::ctx::Continuation> p3) { return call_method<"c_modifyAttributes", void>(p1, p2, p3); }
	jni::ref<javax::naming::NamingEnumeration> c_search(jni::ref<javax::naming::Name> p1, jni::ref<javax::naming::directory::Attributes> p2, jni::ref<jni::array<java::lang::String>> p3, jni::ref<com::sun::jndi::toolkit::ctx::Continuation> p4) { return call_method<"c_search", jni::ref<javax::naming::NamingEnumeration>>(p1, p2, p3, p4); }
	jni::ref<javax::naming::NamingEnumeration> c_search(jni::ref<javax::naming::Name> p1, jni::ref<java::lang::String> p2, jni::ref<javax::naming::directory::SearchControls> p3, jni::ref<com::sun::jndi::toolkit::ctx::Continuation> p4) { return call_method<"c_search", jni::ref<javax::naming::NamingEnumeration>>(p1, p2, p3, p4); }
	jni::ref<javax::naming::NamingEnumeration> c_search(jni::ref<javax::naming::Name> p1, jni::ref<java::lang::String> p2, jni::ref<jni::array<java::lang::Object>> p3, jni::ref<javax::naming::directory::SearchControls> p4, jni::ref<com::sun::jndi::toolkit::ctx::Continuation> p5) { return call_method<"c_search", jni::ref<javax::naming::NamingEnumeration>>(p1, p2, p3, p4, p5); }
	jni::ref<javax::naming::directory::DirContext> c_getSchema(jni::ref<javax::naming::Name> p1, jni::ref<com::sun::jndi::toolkit::ctx::Continuation> p2) { return call_method<"c_getSchema", jni::ref<javax::naming::directory::DirContext>>(p1, p2); }
	jni::ref<javax::naming::directory::DirContext> c_getSchemaClassDefinition(jni::ref<javax::naming::Name> p1, jni::ref<com::sun::jndi::toolkit::ctx::Continuation> p2) { return call_method<"c_getSchemaClassDefinition", jni::ref<javax::naming::directory::DirContext>>(p1, p2); }
	jni::ref<java::lang::String> getNameInNamespace() { return call_method<"getNameInNamespace", jni::ref<java::lang::String>>(); }
	jni::ref<javax::naming::Name> composeName(jni::ref<javax::naming::Name> p1, jni::ref<javax::naming::Name> p2) { return call_method<"composeName", jni::ref<javax::naming::Name>>(p1, p2); }

protected:

	DnsContext(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JNDI_DNS_DNSCONTEXT
