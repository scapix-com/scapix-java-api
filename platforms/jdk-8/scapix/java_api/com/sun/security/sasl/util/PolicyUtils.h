// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_SECURITY_SASL_UTIL_POLICYUTILS_FWD
#define SCAPIX_JAVA_API_COM_SUN_SECURITY_SASL_UTIL_POLICYUTILS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::security::sasl::util { class PolicyUtils; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::security::sasl::util::PolicyUtils>
{
	static constexpr fixed_string class_name = "com/sun/security/sasl/util/PolicyUtils";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_SECURITY_SASL_UTIL_POLICYUTILS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_SECURITY_SASL_UTIL_POLICYUTILS)
#define SCAPIX_JAVA_API_COM_SUN_SECURITY_SASL_UTIL_POLICYUTILS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Map.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::security::sasl::util::PolicyUtils : public jni::object_base<"com/sun/security/sasl/util/PolicyUtils",
	java::lang::Object>
{
public:

	static jint NOPLAINTEXT() { return get_static_field<"NOPLAINTEXT", jint>(); }
	static jint NOACTIVE() { return get_static_field<"NOACTIVE", jint>(); }
	static jint NODICTIONARY() { return get_static_field<"NODICTIONARY", jint>(); }
	static jint FORWARD_SECRECY() { return get_static_field<"FORWARD_SECRECY", jint>(); }
	static jint NOANONYMOUS() { return get_static_field<"NOANONYMOUS", jint>(); }
	static jint PASS_CREDENTIALS() { return get_static_field<"PASS_CREDENTIALS", jint>(); }

	static jboolean checkPolicy(jint p1, jni::ref<java::util::Map> p2) { return call_static_method<"checkPolicy", jboolean>(p1, p2); }
	static jni::ref<jni::array<java::lang::String>> filterMechs(jni::ref<jni::array<java::lang::String>> p1, jni::ref<jni::array<jint>> p2, jni::ref<java::util::Map> p3) { return call_static_method<"filterMechs", jni::ref<jni::array<java::lang::String>>>(p1, p2, p3); }

protected:

	PolicyUtils(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_SECURITY_SASL_UTIL_POLICYUTILS
