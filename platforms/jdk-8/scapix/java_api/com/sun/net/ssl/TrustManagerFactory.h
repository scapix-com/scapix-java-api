// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_NET_SSL_TRUSTMANAGERFACTORY_FWD
#define SCAPIX_JAVA_API_COM_SUN_NET_SSL_TRUSTMANAGERFACTORY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::net::ssl { class TrustManagerFactory; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::net::ssl::TrustManagerFactory>
{
	static constexpr fixed_string class_name = "com/sun/net/ssl/TrustManagerFactory";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_NET_SSL_TRUSTMANAGERFACTORY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_NET_SSL_TRUSTMANAGERFACTORY)
#define SCAPIX_JAVA_API_COM_SUN_NET_SSL_TRUSTMANAGERFACTORY

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/net/ssl/TrustManager.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/security/KeyStore.h>
#include <scapix/java_api/java/security/Provider.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::net::ssl::TrustManagerFactory : public jni::object_base<"com/sun/net/ssl/TrustManagerFactory",
	java::lang::Object>
{
public:

	static jni::ref<java::lang::String> getDefaultAlgorithm() { return call_static_method<"getDefaultAlgorithm", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getAlgorithm() { return call_method<"getAlgorithm", jni::ref<java::lang::String>>(); }
	static jni::ref<com::sun::net::ssl::TrustManagerFactory> getInstance(jni::ref<java::lang::String> p1) { return call_static_method<"getInstance", jni::ref<com::sun::net::ssl::TrustManagerFactory>>(p1); }
	static jni::ref<com::sun::net::ssl::TrustManagerFactory> getInstance(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return call_static_method<"getInstance", jni::ref<com::sun::net::ssl::TrustManagerFactory>>(p1, p2); }
	static jni::ref<com::sun::net::ssl::TrustManagerFactory> getInstance(jni::ref<java::lang::String> p1, jni::ref<java::security::Provider> p2) { return call_static_method<"getInstance", jni::ref<com::sun::net::ssl::TrustManagerFactory>>(p1, p2); }
	jni::ref<java::security::Provider> getProvider() { return call_method<"getProvider", jni::ref<java::security::Provider>>(); }
	void init(jni::ref<java::security::KeyStore> p1) { return call_method<"init", void>(p1); }
	jni::ref<jni::array<com::sun::net::ssl::TrustManager>> getTrustManagers() { return call_method<"getTrustManagers", jni::ref<jni::array<com::sun::net::ssl::TrustManager>>>(); }

protected:

	TrustManagerFactory(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_NET_SSL_TRUSTMANAGERFACTORY
