// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/security/Principal.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_NET_HTTPSERVER_HTTPPRINCIPAL_FWD
#define SCAPIX_JAVA_API_COM_SUN_NET_HTTPSERVER_HTTPPRINCIPAL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::net::httpserver { class HttpPrincipal; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::net::httpserver::HttpPrincipal>
{
	static constexpr fixed_string class_name = "com/sun/net/httpserver/HttpPrincipal";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::security::Principal>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_NET_HTTPSERVER_HTTPPRINCIPAL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_NET_HTTPSERVER_HTTPPRINCIPAL)
#define SCAPIX_JAVA_API_COM_SUN_NET_HTTPSERVER_HTTPPRINCIPAL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::net::httpserver::HttpPrincipal : public jni::object_base<"com/sun/net/httpserver/HttpPrincipal",
	java::lang::Object,
	java::security::Principal>
{
public:

	static jni::ref<com::sun::net::httpserver::HttpPrincipal> new_object(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return base_::new_object(p1, p2); }
	jboolean equals(jni::ref<java::lang::Object> p1) { return call_method<"equals", jboolean>(p1); }
	jni::ref<java::lang::String> getName() { return call_method<"getName", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getUsername() { return call_method<"getUsername", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getRealm() { return call_method<"getRealm", jni::ref<java::lang::String>>(); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	HttpPrincipal(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_NET_HTTPSERVER_HTTPPRINCIPAL
