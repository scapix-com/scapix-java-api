// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_JMX_REMOTE_INTERNAL_SERVERNOTIFFORWARDER_FWD
#define SCAPIX_JAVA_API_COM_SUN_JMX_REMOTE_INTERNAL_SERVERNOTIFFORWARDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::jmx::remote::internal { class ServerNotifForwarder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::jmx::remote::internal::ServerNotifForwarder>
{
	static constexpr fixed_string class_name = "com/sun/jmx/remote/internal/ServerNotifForwarder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_REMOTE_INTERNAL_SERVERNOTIFFORWARDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_JMX_REMOTE_INTERNAL_SERVERNOTIFFORWARDER)
#define SCAPIX_JAVA_API_COM_SUN_JMX_REMOTE_INTERNAL_SERVERNOTIFFORWARDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/jmx/remote/internal/NotificationBuffer.h>
#include <scapix/java_api/java/lang/Integer.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Map.h>
#include <scapix/java_api/javax/management/MBeanServer.h>
#include <scapix/java_api/javax/management/NotificationFilter.h>
#include <scapix/java_api/javax/management/ObjectName.h>
#include <scapix/java_api/javax/management/remote/NotificationResult.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::jmx::remote::internal::ServerNotifForwarder : public jni::object_base<"com/sun/jmx/remote/internal/ServerNotifForwarder",
	java::lang::Object>
{
public:

	static jni::ref<com::sun::jmx::remote::internal::ServerNotifForwarder> new_object(jni::ref<javax::management::MBeanServer> p1, jni::ref<java::util::Map> p2, jni::ref<com::sun::jmx::remote::internal::NotificationBuffer> p3, jni::ref<java::lang::String> p4) { return base_::new_object(p1, p2, p3, p4); }
	jni::ref<java::lang::Integer> addNotificationListener(jni::ref<javax::management::ObjectName> p1, jni::ref<javax::management::NotificationFilter> p2) { return call_method<"addNotificationListener", jni::ref<java::lang::Integer>>(p1, p2); }
	void removeNotificationListener(jni::ref<javax::management::ObjectName> p1, jni::ref<jni::array<java::lang::Integer>> p2) { return call_method<"removeNotificationListener", void>(p1, p2); }
	void removeNotificationListener(jni::ref<javax::management::ObjectName> p1, jni::ref<java::lang::Integer> p2) { return call_method<"removeNotificationListener", void>(p1, p2); }
	jni::ref<javax::management::remote::NotificationResult> fetchNotifs(jlong p1, jlong p2, jint p3) { return call_method<"fetchNotifs", jni::ref<javax::management::remote::NotificationResult>>(p1, p2, p3); }
	void terminate() { return call_method<"terminate", void>(); }
	void checkMBeanPermission(jni::ref<javax::management::ObjectName> p1, jni::ref<java::lang::String> p2) { return call_method<"checkMBeanPermission", void>(p1, p2); }

protected:

	ServerNotifForwarder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_REMOTE_INTERNAL_SERVERNOTIFFORWARDER
