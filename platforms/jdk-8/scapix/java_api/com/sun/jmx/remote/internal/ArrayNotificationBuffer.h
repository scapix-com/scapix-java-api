// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/com/sun/jmx/remote/internal/NotificationBuffer.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_JMX_REMOTE_INTERNAL_ARRAYNOTIFICATIONBUFFER_FWD
#define SCAPIX_JAVA_API_COM_SUN_JMX_REMOTE_INTERNAL_ARRAYNOTIFICATIONBUFFER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::jmx::remote::internal { class ArrayNotificationBuffer; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::jmx::remote::internal::ArrayNotificationBuffer>
{
	static constexpr fixed_string class_name = "com/sun/jmx/remote/internal/ArrayNotificationBuffer";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::com::sun::jmx::remote::internal::NotificationBuffer>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_REMOTE_INTERNAL_ARRAYNOTIFICATIONBUFFER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_JMX_REMOTE_INTERNAL_ARRAYNOTIFICATIONBUFFER)
#define SCAPIX_JAVA_API_COM_SUN_JMX_REMOTE_INTERNAL_ARRAYNOTIFICATIONBUFFER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/jmx/remote/internal/NotificationBufferFilter.h>
#include <scapix/java_api/java/util/Map.h>
#include <scapix/java_api/javax/management/MBeanServer.h>
#include <scapix/java_api/javax/management/remote/NotificationResult.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::jmx::remote::internal::ArrayNotificationBuffer : public jni::object_base<"com/sun/jmx/remote/internal/ArrayNotificationBuffer",
	java::lang::Object,
	com::sun::jmx::remote::internal::NotificationBuffer>
{
public:

	static jni::ref<com::sun::jmx::remote::internal::NotificationBuffer> getNotificationBuffer(jni::ref<javax::management::MBeanServer> p1, jni::ref<java::util::Map> p2) { return call_static_method<"getNotificationBuffer", jni::ref<com::sun::jmx::remote::internal::NotificationBuffer>>(p1, p2); }
	void dispose() { return call_method<"dispose", void>(); }
	jni::ref<javax::management::remote::NotificationResult> fetchNotifications(jni::ref<com::sun::jmx::remote::internal::NotificationBufferFilter> p1, jlong p2, jlong p3, jint p4) { return call_method<"fetchNotifications", jni::ref<javax::management::remote::NotificationResult>>(p1, p2, p3, p4); }

protected:

	ArrayNotificationBuffer(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_REMOTE_INTERNAL_ARRAYNOTIFICATIONBUFFER
