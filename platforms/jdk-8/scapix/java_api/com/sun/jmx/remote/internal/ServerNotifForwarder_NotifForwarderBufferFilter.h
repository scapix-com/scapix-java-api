// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/com/sun/jmx/remote/internal/NotificationBufferFilter.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_JMX_REMOTE_INTERNAL_SERVERNOTIFFORWARDER_NOTIFFORWARDERBUFFERFILTER_FWD
#define SCAPIX_JAVA_API_COM_SUN_JMX_REMOTE_INTERNAL_SERVERNOTIFFORWARDER_NOTIFFORWARDERBUFFERFILTER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::jmx::remote::internal { class ServerNotifForwarder_NotifForwarderBufferFilter; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::jmx::remote::internal::ServerNotifForwarder_NotifForwarderBufferFilter>
{
	static constexpr fixed_string class_name = "com/sun/jmx/remote/internal/ServerNotifForwarder$NotifForwarderBufferFilter";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::com::sun::jmx::remote::internal::NotificationBufferFilter>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_REMOTE_INTERNAL_SERVERNOTIFFORWARDER_NOTIFFORWARDERBUFFERFILTER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_JMX_REMOTE_INTERNAL_SERVERNOTIFFORWARDER_NOTIFFORWARDERBUFFERFILTER)
#define SCAPIX_JAVA_API_COM_SUN_JMX_REMOTE_INTERNAL_SERVERNOTIFFORWARDER_NOTIFFORWARDERBUFFERFILTER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/javax/management/Notification.h>
#include <scapix/java_api/javax/management/ObjectName.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class com::sun::jmx::remote::internal::ServerNotifForwarder_NotifForwarderBufferFilter : public jni::object_base<"com/sun/jmx/remote/internal/ServerNotifForwarder$NotifForwarderBufferFilter",
	java::lang::Object,
	com::sun::jmx::remote::internal::NotificationBufferFilter>
{
public:

	void apply(jni::ref<java::util::List> p1, jni::ref<javax::management::ObjectName> p2, jni::ref<javax::management::Notification> p3) { return call_method<"apply", void>(p1, p2, p3); }

protected:

	ServerNotifForwarder_NotifForwarderBufferFilter(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_REMOTE_INTERNAL_SERVERNOTIFFORWARDER_NOTIFFORWARDERBUFFERFILTER
