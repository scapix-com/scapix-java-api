// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_JMX_MBEANSERVER_MXBEANMAPPING_FWD
#define SCAPIX_JAVA_API_COM_SUN_JMX_MBEANSERVER_MXBEANMAPPING_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::jmx::mbeanserver { class MXBeanMapping; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::jmx::mbeanserver::MXBeanMapping>
{
	static constexpr fixed_string class_name = "com/sun/jmx/mbeanserver/MXBeanMapping";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_MBEANSERVER_MXBEANMAPPING_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_JMX_MBEANSERVER_MXBEANMAPPING)
#define SCAPIX_JAVA_API_COM_SUN_JMX_MBEANSERVER_MXBEANMAPPING

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/reflect/Type.h>
#include <scapix/java_api/javax/management/openmbean/OpenType.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::jmx::mbeanserver::MXBeanMapping : public jni::object_base<"com/sun/jmx/mbeanserver/MXBeanMapping",
	java::lang::Object>
{
public:

	jni::ref<java::lang::reflect::Type> getJavaType() { return call_method<"getJavaType", jni::ref<java::lang::reflect::Type>>(); }
	jni::ref<javax::management::openmbean::OpenType> getOpenType() { return call_method<"getOpenType", jni::ref<javax::management::openmbean::OpenType>>(); }
	jni::ref<java::lang::Class> getOpenClass() { return call_method<"getOpenClass", jni::ref<java::lang::Class>>(); }
	jni::ref<java::lang::Object> fromOpenValue(jni::ref<java::lang::Object> p1) { return call_method<"fromOpenValue", jni::ref<java::lang::Object>>(p1); }
	jni::ref<java::lang::Object> toOpenValue(jni::ref<java::lang::Object> p1) { return call_method<"toOpenValue", jni::ref<java::lang::Object>>(p1); }
	void checkReconstructible() { return call_method<"checkReconstructible", void>(); }

protected:

	MXBeanMapping(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_MBEANSERVER_MXBEANMAPPING
