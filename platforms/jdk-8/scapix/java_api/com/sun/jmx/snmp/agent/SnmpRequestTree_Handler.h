// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_AGENT_SNMPREQUESTTREE_HANDLER_FWD
#define SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_AGENT_SNMPREQUESTTREE_HANDLER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::jmx::snmp::agent { class SnmpRequestTree_Handler; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::jmx::snmp::agent::SnmpRequestTree_Handler>
{
	static constexpr fixed_string class_name = "com/sun/jmx/snmp/agent/SnmpRequestTree$Handler";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_AGENT_SNMPREQUESTTREE_HANDLER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_AGENT_SNMPREQUESTTREE_HANDLER)
#define SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_AGENT_SNMPREQUESTTREE_HANDLER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/jmx/snmp/SnmpOid.h>
#include <scapix/java_api/com/sun/jmx/snmp/SnmpVarBind.h>
#include <scapix/java_api/java/util/Iterator.h>
#include <scapix/java_api/java/util/Vector.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class com::sun::jmx::snmp::agent::SnmpRequestTree_Handler : public jni::object_base<"com/sun/jmx/snmp/agent/SnmpRequestTree$Handler",
	java::lang::Object>
{
public:

	static jni::ref<com::sun::jmx::snmp::agent::SnmpRequestTree_Handler> new_object(jint p1) { return base_::new_object(p1); }
	void addVarbind(jni::ref<com::sun::jmx::snmp::SnmpVarBind> p1) { return call_method<"addVarbind", void>(p1); }
	void addVarbind(jni::ref<com::sun::jmx::snmp::SnmpVarBind> p1, jni::ref<com::sun::jmx::snmp::SnmpOid> p2, jboolean p3, jni::ref<com::sun::jmx::snmp::SnmpVarBind> p4) { return call_method<"addVarbind", void>(p1, p2, p3, p4); }
	jint getSubReqCount() { return call_method<"getSubReqCount", jint>(); }
	jni::ref<java::util::Vector> getSubList() { return call_method<"getSubList", jni::ref<java::util::Vector>>(); }
	jint getEntryPos(jni::ref<com::sun::jmx::snmp::SnmpOid> p1) { return call_method<"getEntryPos", jint>(p1); }
	jni::ref<com::sun::jmx::snmp::SnmpOid> getEntryOid(jint p1) { return call_method<"getEntryOid", jni::ref<com::sun::jmx::snmp::SnmpOid>>(p1); }
	jboolean isNewEntry(jint p1) { return call_method<"isNewEntry", jboolean>(p1); }
	jni::ref<com::sun::jmx::snmp::SnmpVarBind> getRowStatusVarBind(jint p1) { return call_method<"getRowStatusVarBind", jni::ref<com::sun::jmx::snmp::SnmpVarBind>>(p1); }
	jni::ref<java::util::Vector> getEntrySubList(jint p1) { return call_method<"getEntrySubList", jni::ref<java::util::Vector>>(p1); }
	jni::ref<java::util::Iterator> getEntryOids() { return call_method<"getEntryOids", jni::ref<java::util::Iterator>>(); }
	jint getEntryCount() { return call_method<"getEntryCount", jint>(); }

protected:

	SnmpRequestTree_Handler(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_AGENT_SNMPREQUESTTREE_HANDLER
