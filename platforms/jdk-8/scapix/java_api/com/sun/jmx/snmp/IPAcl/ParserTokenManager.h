// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/com/sun/jmx/snmp/IPAcl/ParserConstants.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_IPACL_PARSERTOKENMANAGER_FWD
#define SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_IPACL_PARSERTOKENMANAGER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::jmx::snmp::IPAcl { class ParserTokenManager; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::jmx::snmp::IPAcl::ParserTokenManager>
{
	static constexpr fixed_string class_name = "com/sun/jmx/snmp/IPAcl/ParserTokenManager";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::com::sun::jmx::snmp::IPAcl::ParserConstants>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_IPACL_PARSERTOKENMANAGER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_IPACL_PARSERTOKENMANAGER)
#define SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_IPACL_PARSERTOKENMANAGER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/jmx/snmp/IPAcl/ASCII_CharStream.h>
#include <scapix/java_api/com/sun/jmx/snmp/IPAcl/Token.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class com::sun::jmx::snmp::IPAcl::ParserTokenManager : public jni::object_base<"com/sun/jmx/snmp/IPAcl/ParserTokenManager",
	java::lang::Object,
	com::sun::jmx::snmp::IPAcl::ParserConstants>
{
public:

	static jni::ref<jni::array<java::lang::String>> jjstrLiteralImages() { return get_static_field<"jjstrLiteralImages", jni::ref<jni::array<java::lang::String>>>(); }
	static jni::ref<jni::array<java::lang::String>> lexStateNames() { return get_static_field<"lexStateNames", jni::ref<jni::array<java::lang::String>>>(); }

	static jni::ref<com::sun::jmx::snmp::IPAcl::ParserTokenManager> new_object(jni::ref<com::sun::jmx::snmp::IPAcl::ASCII_CharStream> p1) { return base_::new_object(p1); }
	static jni::ref<com::sun::jmx::snmp::IPAcl::ParserTokenManager> new_object(jni::ref<com::sun::jmx::snmp::IPAcl::ASCII_CharStream> p1, jint p2) { return base_::new_object(p1, p2); }
	void ReInit(jni::ref<com::sun::jmx::snmp::IPAcl::ASCII_CharStream> p1) { return call_method<"ReInit", void>(p1); }
	void ReInit(jni::ref<com::sun::jmx::snmp::IPAcl::ASCII_CharStream> p1, jint p2) { return call_method<"ReInit", void>(p1, p2); }
	void SwitchTo(jint p1) { return call_method<"SwitchTo", void>(p1); }
	jni::ref<com::sun::jmx::snmp::IPAcl::Token> getNextToken() { return call_method<"getNextToken", jni::ref<com::sun::jmx::snmp::IPAcl::Token>>(); }

protected:

	ParserTokenManager(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_IPACL_PARSERTOKENMANAGER
