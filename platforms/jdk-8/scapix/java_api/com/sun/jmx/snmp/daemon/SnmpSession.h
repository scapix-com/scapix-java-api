// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/com/sun/jmx/snmp/SnmpDefinitions.h>
#include <scapix/java_api/java/lang/Runnable.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_DAEMON_SNMPSESSION_FWD
#define SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_DAEMON_SNMPSESSION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::jmx::snmp::daemon { class SnmpSession; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::jmx::snmp::daemon::SnmpSession>
{
	static constexpr fixed_string class_name = "com/sun/jmx/snmp/daemon/SnmpSession";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::com::sun::jmx::snmp::SnmpDefinitions, scapix::java_api::java::lang::Runnable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_DAEMON_SNMPSESSION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_DAEMON_SNMPSESSION)
#define SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_DAEMON_SNMPSESSION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/jmx/snmp/daemon/SnmpAdaptorServer.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class com::sun::jmx::snmp::daemon::SnmpSession : public jni::object_base<"com/sun/jmx/snmp/daemon/SnmpSession",
	java::lang::Object,
	com::sun::jmx::snmp::SnmpDefinitions,
	java::lang::Runnable>
{
public:

	static jni::ref<com::sun::jmx::snmp::daemon::SnmpSession> new_object(jni::ref<com::sun::jmx::snmp::daemon::SnmpAdaptorServer> p1) { return base_::new_object(p1); }
	static jni::ref<com::sun::jmx::snmp::daemon::SnmpSession> new_object() { return base_::new_object(); }
	void run() { return call_method<"run", void>(); }

protected:

	SnmpSession(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_DAEMON_SNMPSESSION
