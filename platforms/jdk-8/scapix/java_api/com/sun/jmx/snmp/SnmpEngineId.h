// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_SNMPENGINEID_FWD
#define SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_SNMPENGINEID_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::jmx::snmp { class SnmpEngineId; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::jmx::snmp::SnmpEngineId>
{
	static constexpr fixed_string class_name = "com/sun/jmx/snmp/SnmpEngineId";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::io::Serializable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_SNMPENGINEID_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_SNMPENGINEID)
#define SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_SNMPENGINEID

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/jmx/snmp/SnmpOid.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/net/InetAddress.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::jmx::snmp::SnmpEngineId : public jni::object_base<"com/sun/jmx/snmp/SnmpEngineId",
	java::lang::Object,
	java::io::Serializable>
{
public:

	jni::ref<java::lang::String> getReadableId() { return call_method<"getReadableId", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jni::ref<jni::array<jbyte>> getBytes() { return call_method<"getBytes", jni::ref<jni::array<jbyte>>>(); }
	static jni::ref<com::sun::jmx::snmp::SnmpEngineId> createEngineId(jni::ref<jni::array<jbyte>> p1) { return call_static_method<"createEngineId", jni::ref<com::sun::jmx::snmp::SnmpEngineId>>(p1); }
	static jni::ref<com::sun::jmx::snmp::SnmpEngineId> createEngineId() { return call_static_method<"createEngineId", jni::ref<com::sun::jmx::snmp::SnmpEngineId>>(); }
	jni::ref<com::sun::jmx::snmp::SnmpOid> toOid() { return call_method<"toOid", jni::ref<com::sun::jmx::snmp::SnmpOid>>(); }
	static jni::ref<com::sun::jmx::snmp::SnmpEngineId> createEngineId(jni::ref<java::lang::String> p1) { return call_static_method<"createEngineId", jni::ref<com::sun::jmx::snmp::SnmpEngineId>>(p1); }
	static jni::ref<com::sun::jmx::snmp::SnmpEngineId> createEngineId(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return call_static_method<"createEngineId", jni::ref<com::sun::jmx::snmp::SnmpEngineId>>(p1, p2); }
	static jni::ref<com::sun::jmx::snmp::SnmpEngineId> createEngineId(jint p1) { return call_static_method<"createEngineId", jni::ref<com::sun::jmx::snmp::SnmpEngineId>>(p1); }
	static jni::ref<com::sun::jmx::snmp::SnmpEngineId> createEngineId(jni::ref<java::net::InetAddress> p1, jint p2) { return call_static_method<"createEngineId", jni::ref<com::sun::jmx::snmp::SnmpEngineId>>(p1, p2); }
	static jni::ref<com::sun::jmx::snmp::SnmpEngineId> createEngineId(jint p1, jint p2) { return call_static_method<"createEngineId", jni::ref<com::sun::jmx::snmp::SnmpEngineId>>(p1, p2); }
	static jni::ref<com::sun::jmx::snmp::SnmpEngineId> createEngineId(jni::ref<java::net::InetAddress> p1, jint p2, jint p3) { return call_static_method<"createEngineId", jni::ref<com::sun::jmx::snmp::SnmpEngineId>>(p1, p2, p3); }
	static jni::ref<com::sun::jmx::snmp::SnmpEngineId> createEngineId(jint p1, jni::ref<java::net::InetAddress> p2) { return call_static_method<"createEngineId", jni::ref<com::sun::jmx::snmp::SnmpEngineId>>(p1, p2); }
	static jni::ref<com::sun::jmx::snmp::SnmpEngineId> createEngineId(jni::ref<java::net::InetAddress> p1) { return call_static_method<"createEngineId", jni::ref<com::sun::jmx::snmp::SnmpEngineId>>(p1); }
	jboolean equals(jni::ref<java::lang::Object> p1) { return call_method<"equals", jboolean>(p1); }
	jint hashCode() { return call_method<"hashCode", jint>(); }

protected:

	SnmpEngineId(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_SNMPENGINEID
