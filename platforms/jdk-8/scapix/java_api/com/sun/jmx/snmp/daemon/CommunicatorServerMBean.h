// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_DAEMON_COMMUNICATORSERVERMBEAN_FWD
#define SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_DAEMON_COMMUNICATORSERVERMBEAN_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::jmx::snmp::daemon { class CommunicatorServerMBean; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::jmx::snmp::daemon::CommunicatorServerMBean>
{
	static constexpr fixed_string class_name = "com/sun/jmx/snmp/daemon/CommunicatorServerMBean";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_DAEMON_COMMUNICATORSERVERMBEAN_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_DAEMON_COMMUNICATORSERVERMBEAN)
#define SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_DAEMON_COMMUNICATORSERVERMBEAN

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::jmx::snmp::daemon::CommunicatorServerMBean : public jni::object_base<"com/sun/jmx/snmp/daemon/CommunicatorServerMBean",
	java::lang::Object>
{
public:

	void start() { return call_method<"start", void>(); }
	void stop() { return call_method<"stop", void>(); }
	jboolean isActive() { return call_method<"isActive", jboolean>(); }
	jboolean waitState(jint p1, jlong p2) { return call_method<"waitState", jboolean>(p1, p2); }
	jint getState() { return call_method<"getState", jint>(); }
	jni::ref<java::lang::String> getStateString() { return call_method<"getStateString", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getHost() { return call_method<"getHost", jni::ref<java::lang::String>>(); }
	jint getPort() { return call_method<"getPort", jint>(); }
	void setPort(jint p1) { return call_method<"setPort", void>(p1); }
	jni::ref<java::lang::String> getProtocol() { return call_method<"getProtocol", jni::ref<java::lang::String>>(); }

protected:

	CommunicatorServerMBean(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_DAEMON_COMMUNICATORSERVERMBEAN
