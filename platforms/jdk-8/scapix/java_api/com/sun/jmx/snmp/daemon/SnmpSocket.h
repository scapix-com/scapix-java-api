// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/Runnable.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_DAEMON_SNMPSOCKET_FWD
#define SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_DAEMON_SNMPSOCKET_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::jmx::snmp::daemon { class SnmpSocket; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::jmx::snmp::daemon::SnmpSocket>
{
	static constexpr fixed_string class_name = "com/sun/jmx/snmp/daemon/SnmpSocket";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::lang::Runnable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_DAEMON_SNMPSOCKET_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_DAEMON_SNMPSOCKET)
#define SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_DAEMON_SNMPSOCKET

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/jmx/snmp/daemon/SnmpResponseHandler.h>
#include <scapix/java_api/java/net/DatagramPacket.h>
#include <scapix/java_api/java/net/InetAddress.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class com::sun::jmx::snmp::daemon::SnmpSocket : public jni::object_base<"com/sun/jmx/snmp/daemon/SnmpSocket",
	java::lang::Object,
	java::lang::Runnable>
{
public:

	static jni::ref<com::sun::jmx::snmp::daemon::SnmpSocket> new_object(jni::ref<com::sun::jmx::snmp::daemon::SnmpResponseHandler> p1, jni::ref<java::net::InetAddress> p2, jint p3) { return base_::new_object(p1, p2, p3); }
	void sendPacket(jni::ref<jni::array<jbyte>> p1, jint p2, jni::ref<java::net::InetAddress> p3, jint p4) { return call_method<"sendPacket", void>(p1, p2, p3, p4); }
	void sendPacket(jni::ref<java::net::DatagramPacket> p1) { return call_method<"sendPacket", void>(p1); }
	jboolean isValid() { return call_method<"isValid", jboolean>(); }
	void close() { return call_method<"close", void>(); }
	void run() { return call_method<"run", void>(); }

protected:

	SnmpSocket(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_DAEMON_SNMPSOCKET
