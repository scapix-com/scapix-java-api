// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/security/acl/AclEntry.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_IPACL_ACLENTRYIMPL_FWD
#define SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_IPACL_ACLENTRYIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::jmx::snmp::IPAcl { class AclEntryImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::jmx::snmp::IPAcl::AclEntryImpl>
{
	static constexpr fixed_string class_name = "com/sun/jmx/snmp/IPAcl/AclEntryImpl";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::security::acl::AclEntry, scapix::java_api::java::io::Serializable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_IPACL_ACLENTRYIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_IPACL_ACLENTRYIMPL)
#define SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_IPACL_ACLENTRYIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/security/Principal.h>
#include <scapix/java_api/java/security/acl/Permission.h>
#include <scapix/java_api/java/util/Enumeration.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class com::sun::jmx::snmp::IPAcl::AclEntryImpl : public jni::object_base<"com/sun/jmx/snmp/IPAcl/AclEntryImpl",
	java::lang::Object,
	java::security::acl::AclEntry,
	java::io::Serializable>
{
public:

	static jni::ref<com::sun::jmx::snmp::IPAcl::AclEntryImpl> new_object() { return base_::new_object(); }
	static jni::ref<com::sun::jmx::snmp::IPAcl::AclEntryImpl> new_object(jni::ref<java::security::Principal> p1) { return base_::new_object(p1); }
	jni::ref<java::lang::Object> clone() { return call_method<"clone", jni::ref<java::lang::Object>>(); }
	jboolean isNegative() { return call_method<"isNegative", jboolean>(); }
	jboolean addPermission(jni::ref<java::security::acl::Permission> p1) { return call_method<"addPermission", jboolean>(p1); }
	jboolean removePermission(jni::ref<java::security::acl::Permission> p1) { return call_method<"removePermission", jboolean>(p1); }
	jboolean checkPermission(jni::ref<java::security::acl::Permission> p1) { return call_method<"checkPermission", jboolean>(p1); }
	jni::ref<java::util::Enumeration> permissions() { return call_method<"permissions", jni::ref<java::util::Enumeration>>(); }
	void setNegativePermissions() { return call_method<"setNegativePermissions", void>(); }
	jni::ref<java::security::Principal> getPrincipal() { return call_method<"getPrincipal", jni::ref<java::security::Principal>>(); }
	jboolean setPrincipal(jni::ref<java::security::Principal> p1) { return call_method<"setPrincipal", jboolean>(p1); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jni::ref<java::util::Enumeration> communities() { return call_method<"communities", jni::ref<java::util::Enumeration>>(); }
	jboolean addCommunity(jni::ref<java::lang::String> p1) { return call_method<"addCommunity", jboolean>(p1); }
	jboolean removeCommunity(jni::ref<java::lang::String> p1) { return call_method<"removeCommunity", jboolean>(p1); }
	jboolean checkCommunity(jni::ref<java::lang::String> p1) { return call_method<"checkCommunity", jboolean>(p1); }

protected:

	AclEntryImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_IPACL_ACLENTRYIMPL
