// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/jmx/snmp/SnmpString.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_SNMPOPAQUE_FWD
#define SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_SNMPOPAQUE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::jmx::snmp { class SnmpOpaque; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::jmx::snmp::SnmpOpaque>
{
	static constexpr fixed_string class_name = "com/sun/jmx/snmp/SnmpOpaque";
	using base_classes = std::tuple<scapix::java_api::com::sun::jmx::snmp::SnmpString>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_SNMPOPAQUE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_SNMPOPAQUE)
#define SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_SNMPOPAQUE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Byte.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::jmx::snmp::SnmpOpaque : public jni::object_base<"com/sun/jmx/snmp/SnmpOpaque",
	com::sun::jmx::snmp::SnmpString>
{
public:

	static jni::ref<com::sun::jmx::snmp::SnmpOpaque> new_object(jni::ref<jni::array<jbyte>> p1) { return base_::new_object(p1); }
	static jni::ref<com::sun::jmx::snmp::SnmpOpaque> new_object(jni::ref<jni::array<java::lang::Byte>> p1) { return base_::new_object(p1); }
	static jni::ref<com::sun::jmx::snmp::SnmpOpaque> new_object(jni::ref<java::lang::String> p1) { return base_::new_object(p1); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getTypeName() { return call_method<"getTypeName", jni::ref<java::lang::String>>(); }

protected:

	SnmpOpaque(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_SNMPOPAQUE
