// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/jmx/snmp/SnmpUnsignedInt.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_SNMPTIMETICKS_FWD
#define SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_SNMPTIMETICKS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::jmx::snmp { class SnmpTimeticks; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::jmx::snmp::SnmpTimeticks>
{
	static constexpr fixed_string class_name = "com/sun/jmx/snmp/SnmpTimeticks";
	using base_classes = std::tuple<scapix::java_api::com::sun::jmx::snmp::SnmpUnsignedInt>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_SNMPTIMETICKS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_SNMPTIMETICKS)
#define SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_SNMPTIMETICKS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Integer.h>
#include <scapix/java_api/java/lang/Long.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::jmx::snmp::SnmpTimeticks : public jni::object_base<"com/sun/jmx/snmp/SnmpTimeticks",
	com::sun::jmx::snmp::SnmpUnsignedInt>
{
public:

	static jni::ref<com::sun::jmx::snmp::SnmpTimeticks> new_object(jint p1) { return base_::new_object(p1); }
	static jni::ref<com::sun::jmx::snmp::SnmpTimeticks> new_object(jni::ref<java::lang::Integer> p1) { return base_::new_object(p1); }
	static jni::ref<com::sun::jmx::snmp::SnmpTimeticks> new_object(jlong p1) { return base_::new_object(p1); }
	static jni::ref<com::sun::jmx::snmp::SnmpTimeticks> new_object(jni::ref<java::lang::Long> p1) { return base_::new_object(p1); }
	static jni::ref<java::lang::String> printTimeTicks(jlong p1) { return call_static_method<"printTimeTicks", jni::ref<java::lang::String>>(p1); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getTypeName() { return call_method<"getTypeName", jni::ref<java::lang::String>>(); }

protected:

	SnmpTimeticks(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_SNMPTIMETICKS
