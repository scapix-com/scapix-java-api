// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/jmx/snmp/SnmpMsg.h>
#include <scapix/java_api/com/sun/jmx/snmp/SnmpDefinitions.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_SNMPMESSAGE_FWD
#define SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_SNMPMESSAGE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::jmx::snmp { class SnmpMessage; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::jmx::snmp::SnmpMessage>
{
	static constexpr fixed_string class_name = "com/sun/jmx/snmp/SnmpMessage";
	using base_classes = std::tuple<scapix::java_api::com::sun::jmx::snmp::SnmpMsg, scapix::java_api::com::sun::jmx::snmp::SnmpDefinitions>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_SNMPMESSAGE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_SNMPMESSAGE)
#define SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_SNMPMESSAGE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/jmx/snmp/SnmpPdu.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::jmx::snmp::SnmpMessage : public jni::object_base<"com/sun/jmx/snmp/SnmpMessage",
	com::sun::jmx::snmp::SnmpMsg,
	com::sun::jmx::snmp::SnmpDefinitions>
{
public:

	jni::ref<jni::array<jbyte>> community() { return get_field<"community", jni::ref<jni::array<jbyte>>>(); }
	void community(jni::ref<jni::array<jbyte>> v) { set_field<"community", jni::ref<jni::array<jbyte>>>(v); }

	static jni::ref<com::sun::jmx::snmp::SnmpMessage> new_object() { return base_::new_object(); }
	jint encodeMessage(jni::ref<jni::array<jbyte>> p1) { return call_method<"encodeMessage", jint>(p1); }
	jint getRequestId(jni::ref<jni::array<jbyte>> p1) { return call_method<"getRequestId", jint>(p1); }
	void decodeMessage(jni::ref<jni::array<jbyte>> p1, jint p2) { return call_method<"decodeMessage", void>(p1, p2); }
	void encodeSnmpPdu(jni::ref<com::sun::jmx::snmp::SnmpPdu> p1, jint p2) { return call_method<"encodeSnmpPdu", void>(p1, p2); }
	jni::ref<com::sun::jmx::snmp::SnmpPdu> decodeSnmpPdu() { return call_method<"decodeSnmpPdu", jni::ref<com::sun::jmx::snmp::SnmpPdu>>(); }
	jni::ref<java::lang::String> printMessage() { return call_method<"printMessage", jni::ref<java::lang::String>>(); }

protected:

	SnmpMessage(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_SNMPMESSAGE
