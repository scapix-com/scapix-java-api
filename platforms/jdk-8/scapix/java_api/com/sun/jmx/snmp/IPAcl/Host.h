// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/jmx/snmp/IPAcl/SimpleNode.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_IPACL_HOST_FWD
#define SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_IPACL_HOST_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::jmx::snmp::IPAcl { class Host; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::jmx::snmp::IPAcl::Host>
{
	static constexpr fixed_string class_name = "com/sun/jmx/snmp/IPAcl/Host";
	using base_classes = std::tuple<scapix::java_api::com::sun::jmx::snmp::IPAcl::SimpleNode, scapix::java_api::java::io::Serializable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_IPACL_HOST_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_IPACL_HOST)
#define SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_IPACL_HOST

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/jmx/snmp/IPAcl/AclImpl.h>
#include <scapix/java_api/com/sun/jmx/snmp/IPAcl/Parser.h>
#include <scapix/java_api/com/sun/jmx/snmp/IPAcl/PrincipalImpl.h>
#include <scapix/java_api/java/util/Hashtable.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class com::sun::jmx::snmp::IPAcl::Host : public jni::object_base<"com/sun/jmx/snmp/IPAcl/Host",
	com::sun::jmx::snmp::IPAcl::SimpleNode,
	java::io::Serializable>
{
public:

	static jni::ref<com::sun::jmx::snmp::IPAcl::Host> new_object(jint p1) { return base_::new_object(p1); }
	static jni::ref<com::sun::jmx::snmp::IPAcl::Host> new_object(jni::ref<com::sun::jmx::snmp::IPAcl::Parser> p1, jint p2) { return base_::new_object(p1, p2); }
	void buildAclEntries(jni::ref<com::sun::jmx::snmp::IPAcl::PrincipalImpl> p1, jni::ref<com::sun::jmx::snmp::IPAcl::AclImpl> p2) { return call_method<"buildAclEntries", void>(p1, p2); }
	void buildTrapEntries(jni::ref<java::util::Hashtable> p1) { return call_method<"buildTrapEntries", void>(p1); }
	void buildInformEntries(jni::ref<java::util::Hashtable> p1) { return call_method<"buildInformEntries", void>(p1); }

protected:

	Host(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_IPACL_HOST
