// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/com/sun/jmx/snmp/agent/SnmpMibSubRequest.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_AGENT_SNMPREQUESTTREE_SNMPMIBSUBREQUESTIMPL_FWD
#define SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_AGENT_SNMPREQUESTTREE_SNMPMIBSUBREQUESTIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::jmx::snmp::agent { class SnmpRequestTree_SnmpMibSubRequestImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::jmx::snmp::agent::SnmpRequestTree_SnmpMibSubRequestImpl>
{
	static constexpr fixed_string class_name = "com/sun/jmx/snmp/agent/SnmpRequestTree$SnmpMibSubRequestImpl";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::com::sun::jmx::snmp::agent::SnmpMibSubRequest>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_AGENT_SNMPREQUESTTREE_SNMPMIBSUBREQUESTIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_AGENT_SNMPREQUESTTREE_SNMPMIBSUBREQUESTIMPL)
#define SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_AGENT_SNMPREQUESTTREE_SNMPMIBSUBREQUESTIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/jmx/snmp/SnmpEngine.h>
#include <scapix/java_api/com/sun/jmx/snmp/SnmpOid.h>
#include <scapix/java_api/com/sun/jmx/snmp/SnmpPdu.h>
#include <scapix/java_api/com/sun/jmx/snmp/SnmpStatusException.h>
#include <scapix/java_api/com/sun/jmx/snmp/SnmpVarBind.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Enumeration.h>
#include <scapix/java_api/java/util/Vector.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class com::sun::jmx::snmp::agent::SnmpRequestTree_SnmpMibSubRequestImpl : public jni::object_base<"com/sun/jmx/snmp/agent/SnmpRequestTree$SnmpMibSubRequestImpl",
	java::lang::Object,
	com::sun::jmx::snmp::agent::SnmpMibSubRequest>
{
public:

	jni::ref<java::util::Enumeration> getElements() { return call_method<"getElements", jni::ref<java::util::Enumeration>>(); }
	jni::ref<java::util::Vector> getSubList() { return call_method<"getSubList", jni::ref<java::util::Vector>>(); }
	jint getSize() { return call_method<"getSize", jint>(); }
	void addVarBind(jni::ref<com::sun::jmx::snmp::SnmpVarBind> p1) { return call_method<"addVarBind", void>(p1); }
	jboolean isNewEntry() { return call_method<"isNewEntry", jboolean>(); }
	jni::ref<com::sun::jmx::snmp::SnmpOid> getEntryOid() { return call_method<"getEntryOid", jni::ref<com::sun::jmx::snmp::SnmpOid>>(); }
	jint getVarIndex(jni::ref<com::sun::jmx::snmp::SnmpVarBind> p1) { return call_method<"getVarIndex", jint>(p1); }
	jni::ref<java::lang::Object> getUserData() { return call_method<"getUserData", jni::ref<java::lang::Object>>(); }
	void registerGetException(jni::ref<com::sun::jmx::snmp::SnmpVarBind> p1, jni::ref<com::sun::jmx::snmp::SnmpStatusException> p2) { return call_method<"registerGetException", void>(p1, p2); }
	void registerSetException(jni::ref<com::sun::jmx::snmp::SnmpVarBind> p1, jni::ref<com::sun::jmx::snmp::SnmpStatusException> p2) { return call_method<"registerSetException", void>(p1, p2); }
	void registerCheckException(jni::ref<com::sun::jmx::snmp::SnmpVarBind> p1, jni::ref<com::sun::jmx::snmp::SnmpStatusException> p2) { return call_method<"registerCheckException", void>(p1, p2); }
	jint getVersion() { return call_method<"getVersion", jint>(); }
	jni::ref<com::sun::jmx::snmp::SnmpVarBind> getRowStatusVarBind() { return call_method<"getRowStatusVarBind", jni::ref<com::sun::jmx::snmp::SnmpVarBind>>(); }
	jni::ref<com::sun::jmx::snmp::SnmpPdu> getPdu() { return call_method<"getPdu", jni::ref<com::sun::jmx::snmp::SnmpPdu>>(); }
	jint getRequestPduVersion() { return call_method<"getRequestPduVersion", jint>(); }
	jni::ref<com::sun::jmx::snmp::SnmpEngine> getEngine() { return call_method<"getEngine", jni::ref<com::sun::jmx::snmp::SnmpEngine>>(); }
	jni::ref<java::lang::String> getPrincipal() { return call_method<"getPrincipal", jni::ref<java::lang::String>>(); }
	jint getSecurityLevel() { return call_method<"getSecurityLevel", jint>(); }
	jint getSecurityModel() { return call_method<"getSecurityModel", jint>(); }
	jni::ref<jni::array<jbyte>> getContextName() { return call_method<"getContextName", jni::ref<jni::array<jbyte>>>(); }
	jni::ref<jni::array<jbyte>> getAccessContextName() { return call_method<"getAccessContextName", jni::ref<jni::array<jbyte>>>(); }

protected:

	SnmpRequestTree_SnmpMibSubRequestImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_AGENT_SNMPREQUESTTREE_SNMPMIBSUBREQUESTIMPL
