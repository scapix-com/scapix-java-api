// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_AGENT_SNMPGENERICMETASERVER_FWD
#define SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_AGENT_SNMPGENERICMETASERVER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::jmx::snmp::agent { class SnmpGenericMetaServer; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::jmx::snmp::agent::SnmpGenericMetaServer>
{
	static constexpr fixed_string class_name = "com/sun/jmx/snmp/agent/SnmpGenericMetaServer";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_AGENT_SNMPGENERICMETASERVER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_AGENT_SNMPGENERICMETASERVER)
#define SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_AGENT_SNMPGENERICMETASERVER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/jmx/snmp/SnmpValue.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::jmx::snmp::agent::SnmpGenericMetaServer : public jni::object_base<"com/sun/jmx/snmp/agent/SnmpGenericMetaServer",
	java::lang::Object>
{
public:

	jni::ref<java::lang::Object> buildAttributeValue(jlong p1, jni::ref<com::sun::jmx::snmp::SnmpValue> p2) { return call_method<"buildAttributeValue", jni::ref<java::lang::Object>>(p1, p2); }
	jni::ref<com::sun::jmx::snmp::SnmpValue> buildSnmpValue(jlong p1, jni::ref<java::lang::Object> p2) { return call_method<"buildSnmpValue", jni::ref<com::sun::jmx::snmp::SnmpValue>>(p1, p2); }
	jni::ref<java::lang::String> getAttributeName(jlong p1) { return call_method<"getAttributeName", jni::ref<java::lang::String>>(p1); }
	void checkSetAccess(jni::ref<com::sun::jmx::snmp::SnmpValue> p1, jlong p2, jni::ref<java::lang::Object> p3) { return call_method<"checkSetAccess", void>(p1, p2, p3); }
	void checkGetAccess(jlong p1, jni::ref<java::lang::Object> p2) { return call_method<"checkGetAccess", void>(p1, p2); }

protected:

	SnmpGenericMetaServer(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_AGENT_SNMPGENERICMETASERVER
