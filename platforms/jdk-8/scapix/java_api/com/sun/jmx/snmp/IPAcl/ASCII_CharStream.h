// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_IPACL_ASCII_CHARSTREAM_FWD
#define SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_IPACL_ASCII_CHARSTREAM_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::jmx::snmp::IPAcl { class ASCII_CharStream; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::jmx::snmp::IPAcl::ASCII_CharStream>
{
	static constexpr fixed_string class_name = "com/sun/jmx/snmp/IPAcl/ASCII_CharStream";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_IPACL_ASCII_CHARSTREAM_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_IPACL_ASCII_CHARSTREAM)
#define SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_IPACL_ASCII_CHARSTREAM

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/io/Reader.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class com::sun::jmx::snmp::IPAcl::ASCII_CharStream : public jni::object_base<"com/sun/jmx/snmp/IPAcl/ASCII_CharStream",
	java::lang::Object>
{
public:

	static jboolean staticFlag() { return get_static_field<"staticFlag", jboolean>(); }
	jint bufpos() { return get_field<"bufpos", jint>(); }
	void bufpos(jint v) { set_field<"bufpos", jint>(v); }

	jchar BeginToken() { return call_method<"BeginToken", jchar>(); }
	jchar readChar() { return call_method<"readChar", jchar>(); }
	jint getColumn() { return call_method<"getColumn", jint>(); }
	jint getLine() { return call_method<"getLine", jint>(); }
	jint getEndColumn() { return call_method<"getEndColumn", jint>(); }
	jint getEndLine() { return call_method<"getEndLine", jint>(); }
	jint getBeginColumn() { return call_method<"getBeginColumn", jint>(); }
	jint getBeginLine() { return call_method<"getBeginLine", jint>(); }
	void backup(jint p1) { return call_method<"backup", void>(p1); }
	static jni::ref<com::sun::jmx::snmp::IPAcl::ASCII_CharStream> new_object(jni::ref<java::io::Reader> p1, jint p2, jint p3, jint p4) { return base_::new_object(p1, p2, p3, p4); }
	static jni::ref<com::sun::jmx::snmp::IPAcl::ASCII_CharStream> new_object(jni::ref<java::io::Reader> p1, jint p2, jint p3) { return base_::new_object(p1, p2, p3); }
	void ReInit(jni::ref<java::io::Reader> p1, jint p2, jint p3, jint p4) { return call_method<"ReInit", void>(p1, p2, p3, p4); }
	void ReInit(jni::ref<java::io::Reader> p1, jint p2, jint p3) { return call_method<"ReInit", void>(p1, p2, p3); }
	static jni::ref<com::sun::jmx::snmp::IPAcl::ASCII_CharStream> new_object(jni::ref<java::io::InputStream> p1, jint p2, jint p3, jint p4) { return base_::new_object(p1, p2, p3, p4); }
	static jni::ref<com::sun::jmx::snmp::IPAcl::ASCII_CharStream> new_object(jni::ref<java::io::InputStream> p1, jint p2, jint p3) { return base_::new_object(p1, p2, p3); }
	void ReInit(jni::ref<java::io::InputStream> p1, jint p2, jint p3, jint p4) { return call_method<"ReInit", void>(p1, p2, p3, p4); }
	void ReInit(jni::ref<java::io::InputStream> p1, jint p2, jint p3) { return call_method<"ReInit", void>(p1, p2, p3); }
	jni::ref<java::lang::String> GetImage() { return call_method<"GetImage", jni::ref<java::lang::String>>(); }
	jni::ref<jni::array<jchar>> GetSuffix(jint p1) { return call_method<"GetSuffix", jni::ref<jni::array<jchar>>>(p1); }
	void Done() { return call_method<"Done", void>(); }
	void adjustBeginLineColumn(jint p1, jint p2) { return call_method<"adjustBeginLineColumn", void>(p1, p2); }

protected:

	ASCII_CharStream(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_IPACL_ASCII_CHARSTREAM
