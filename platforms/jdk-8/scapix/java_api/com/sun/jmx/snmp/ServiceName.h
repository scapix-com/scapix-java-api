// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_SERVICENAME_FWD
#define SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_SERVICENAME_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::jmx::snmp { class ServiceName; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::jmx::snmp::ServiceName>
{
	static constexpr fixed_string class_name = "com/sun/jmx/snmp/ServiceName";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_SERVICENAME_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_SERVICENAME)
#define SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_SERVICENAME

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::jmx::snmp::ServiceName : public jni::object_base<"com/sun/jmx/snmp/ServiceName",
	java::lang::Object>
{
public:

	static jni::ref<java::lang::String> DELEGATE() { return get_static_field<"DELEGATE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MLET() { return get_static_field<"MLET", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> DOMAIN() { return get_static_field<"DOMAIN", jni::ref<java::lang::String>>(); }
	static jint RMI_CONNECTOR_PORT() { return get_static_field<"RMI_CONNECTOR_PORT", jint>(); }
	static jni::ref<java::lang::String> RMI_CONNECTOR_SERVER() { return get_static_field<"RMI_CONNECTOR_SERVER", jni::ref<java::lang::String>>(); }
	static jint SNMP_ADAPTOR_PORT() { return get_static_field<"SNMP_ADAPTOR_PORT", jint>(); }
	static jni::ref<java::lang::String> SNMP_ADAPTOR_SERVER() { return get_static_field<"SNMP_ADAPTOR_SERVER", jni::ref<java::lang::String>>(); }
	static jint HTTP_CONNECTOR_PORT() { return get_static_field<"HTTP_CONNECTOR_PORT", jint>(); }
	static jni::ref<java::lang::String> HTTP_CONNECTOR_SERVER() { return get_static_field<"HTTP_CONNECTOR_SERVER", jni::ref<java::lang::String>>(); }
	static jint HTTPS_CONNECTOR_PORT() { return get_static_field<"HTTPS_CONNECTOR_PORT", jint>(); }
	static jni::ref<java::lang::String> HTTPS_CONNECTOR_SERVER() { return get_static_field<"HTTPS_CONNECTOR_SERVER", jni::ref<java::lang::String>>(); }
	static jint HTML_ADAPTOR_PORT() { return get_static_field<"HTML_ADAPTOR_PORT", jint>(); }
	static jni::ref<java::lang::String> HTML_ADAPTOR_SERVER() { return get_static_field<"HTML_ADAPTOR_SERVER", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> JMX_SPEC_NAME() { return get_static_field<"JMX_SPEC_NAME", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> JMX_SPEC_VERSION() { return get_static_field<"JMX_SPEC_VERSION", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> JMX_SPEC_VENDOR() { return get_static_field<"JMX_SPEC_VENDOR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> JMX_IMPL_VENDOR() { return get_static_field<"JMX_IMPL_VENDOR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> BUILD_NUMBER() { return get_static_field<"BUILD_NUMBER", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> JMX_IMPL_VERSION() { return get_static_field<"JMX_IMPL_VERSION", jni::ref<java::lang::String>>(); }


protected:

	ServiceName(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_SERVICENAME
