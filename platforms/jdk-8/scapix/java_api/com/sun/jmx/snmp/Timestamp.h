// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_TIMESTAMP_FWD
#define SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_TIMESTAMP_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::jmx::snmp { class Timestamp; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::jmx::snmp::Timestamp>
{
	static constexpr fixed_string class_name = "com/sun/jmx/snmp/Timestamp";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::io::Serializable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_TIMESTAMP_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_TIMESTAMP)
#define SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_TIMESTAMP

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/jmx/snmp/SnmpTimeticks.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Date.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::jmx::snmp::Timestamp : public jni::object_base<"com/sun/jmx/snmp/Timestamp",
	java::lang::Object,
	java::io::Serializable>
{
public:

	static jni::ref<com::sun::jmx::snmp::Timestamp> new_object() { return base_::new_object(); }
	static jni::ref<com::sun::jmx::snmp::Timestamp> new_object(jlong p1, jlong p2) { return base_::new_object(p1, p2); }
	static jni::ref<com::sun::jmx::snmp::Timestamp> new_object(jlong p1) { return base_::new_object(p1); }
	jni::ref<com::sun::jmx::snmp::SnmpTimeticks> getTimeTicks() { return call_method<"getTimeTicks", jni::ref<com::sun::jmx::snmp::SnmpTimeticks>>(); }
	jlong getSysUpTime() { return call_method<"getSysUpTime", jlong>(); }
	jni::ref<java::util::Date> getDate() { return call_method<"getDate", jni::ref<java::util::Date>>(); }
	jlong getDateTime() { return call_method<"getDateTime", jlong>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	Timestamp(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_TIMESTAMP
