// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/jmx/snmp/agent/SnmpMibNode.h>
#include <scapix/java_api/javax/management/NotificationBroadcaster.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_AGENT_SNMPMIBTABLE_FWD
#define SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_AGENT_SNMPMIBTABLE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::jmx::snmp::agent { class SnmpMibTable; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::jmx::snmp::agent::SnmpMibTable>
{
	static constexpr fixed_string class_name = "com/sun/jmx/snmp/agent/SnmpMibTable";
	using base_classes = std::tuple<scapix::java_api::com::sun::jmx::snmp::agent::SnmpMibNode, scapix::java_api::javax::management::NotificationBroadcaster, scapix::java_api::java::io::Serializable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_AGENT_SNMPMIBTABLE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_AGENT_SNMPMIBTABLE)
#define SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_AGENT_SNMPMIBTABLE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/jmx/snmp/SnmpOid.h>
#include <scapix/java_api/com/sun/jmx/snmp/agent/SnmpMib.h>
#include <scapix/java_api/com/sun/jmx/snmp/agent/SnmpMibSubRequest.h>
#include <scapix/java_api/com/sun/jmx/snmp/agent/SnmpTableEntryFactory.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/javax/management/MBeanNotificationInfo.h>
#include <scapix/java_api/javax/management/NotificationFilter.h>
#include <scapix/java_api/javax/management/NotificationListener.h>
#include <scapix/java_api/javax/management/ObjectName.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::jmx::snmp::agent::SnmpMibTable : public jni::object_base<"com/sun/jmx/snmp/agent/SnmpMibTable",
	com::sun::jmx::snmp::agent::SnmpMibNode,
	javax::management::NotificationBroadcaster,
	java::io::Serializable>
{
public:

	static jni::ref<com::sun::jmx::snmp::agent::SnmpMibTable> new_object(jni::ref<com::sun::jmx::snmp::agent::SnmpMib> p1) { return base_::new_object(p1); }
	void createNewEntry(jni::ref<com::sun::jmx::snmp::agent::SnmpMibSubRequest> p1, jni::ref<com::sun::jmx::snmp::SnmpOid> p2, jint p3) { return call_method<"createNewEntry", void>(p1, p2, p3); }
	jboolean isRegistrationRequired() { return call_method<"isRegistrationRequired", jboolean>(); }
	jboolean isCreationEnabled() { return call_method<"isCreationEnabled", jboolean>(); }
	void setCreationEnabled(jboolean p1) { return call_method<"setCreationEnabled", void>(p1); }
	jboolean hasRowStatus() { return call_method<"hasRowStatus", jboolean>(); }
	void get(jni::ref<com::sun::jmx::snmp::agent::SnmpMibSubRequest> p1, jint p2) { return call_method<"get", void>(p1, p2); }
	void check(jni::ref<com::sun::jmx::snmp::agent::SnmpMibSubRequest> p1, jint p2) { return call_method<"check", void>(p1, p2); }
	void set(jni::ref<com::sun::jmx::snmp::agent::SnmpMibSubRequest> p1, jint p2) { return call_method<"set", void>(p1, p2); }
	void addEntry(jni::ref<com::sun::jmx::snmp::SnmpOid> p1, jni::ref<java::lang::Object> p2) { return call_method<"addEntry", void>(p1, p2); }
	void addEntry(jni::ref<com::sun::jmx::snmp::SnmpOid> p1, jni::ref<javax::management::ObjectName> p2, jni::ref<java::lang::Object> p3) { return call_method<"addEntry", void>(p1, p2, p3); }
	void removeEntry(jni::ref<com::sun::jmx::snmp::SnmpOid> p1, jni::ref<java::lang::Object> p2) { return call_method<"removeEntry", void>(p1, p2); }
	void removeEntry(jni::ref<com::sun::jmx::snmp::SnmpOid> p1) { return call_method<"removeEntry", void>(p1); }
	void removeEntry(jint p1, jni::ref<java::lang::Object> p2) { return call_method<"removeEntry", void>(p1, p2); }
	jni::ref<java::lang::Object> getEntry(jni::ref<com::sun::jmx::snmp::SnmpOid> p1) { return call_method<"getEntry", jni::ref<java::lang::Object>>(p1); }
	jni::ref<javax::management::ObjectName> getEntryName(jni::ref<com::sun::jmx::snmp::SnmpOid> p1) { return call_method<"getEntryName", jni::ref<javax::management::ObjectName>>(p1); }
	jni::ref<jni::array<java::lang::Object>> getBasicEntries() { return call_method<"getBasicEntries", jni::ref<jni::array<java::lang::Object>>>(); }
	jint getSize() { return call_method<"getSize", jint>(); }
	void addNotificationListener(jni::ref<javax::management::NotificationListener> p1, jni::ref<javax::management::NotificationFilter> p2, jni::ref<java::lang::Object> p3) { return call_method<"addNotificationListener", void>(p1, p2, p3); }
	void removeNotificationListener(jni::ref<javax::management::NotificationListener> p1) { return call_method<"removeNotificationListener", void>(p1); }
	jni::ref<jni::array<javax::management::MBeanNotificationInfo>> getNotificationInfo() { return call_method<"getNotificationInfo", jni::ref<jni::array<javax::management::MBeanNotificationInfo>>>(); }
	void registerEntryFactory(jni::ref<com::sun::jmx::snmp::agent::SnmpTableEntryFactory> p1) { return call_method<"registerEntryFactory", void>(p1); }

protected:

	SnmpMibTable(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_AGENT_SNMPMIBTABLE
