// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_IPACL_PARSERTREECONSTANTS_FWD
#define SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_IPACL_PARSERTREECONSTANTS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::jmx::snmp::IPAcl { class ParserTreeConstants; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::jmx::snmp::IPAcl::ParserTreeConstants>
{
	static constexpr fixed_string class_name = "com/sun/jmx/snmp/IPAcl/ParserTreeConstants";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_IPACL_PARSERTREECONSTANTS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_IPACL_PARSERTREECONSTANTS)
#define SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_IPACL_PARSERTREECONSTANTS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class com::sun::jmx::snmp::IPAcl::ParserTreeConstants : public jni::object_base<"com/sun/jmx/snmp/IPAcl/ParserTreeConstants",
	java::lang::Object>
{
public:

	static jint JJTSECURITYDEFS() { return get_static_field<"JJTSECURITYDEFS", jint>(); }
	static jint JJTACLBLOCK() { return get_static_field<"JJTACLBLOCK", jint>(); }
	static jint JJTACLITEM() { return get_static_field<"JJTACLITEM", jint>(); }
	static jint JJTCOMMUNITIES() { return get_static_field<"JJTCOMMUNITIES", jint>(); }
	static jint JJTCOMMUNITY() { return get_static_field<"JJTCOMMUNITY", jint>(); }
	static jint JJTACCESS() { return get_static_field<"JJTACCESS", jint>(); }
	static jint JJTMANAGERS() { return get_static_field<"JJTMANAGERS", jint>(); }
	static jint JJTHOST() { return get_static_field<"JJTHOST", jint>(); }
	static jint JJTHOSTNAME() { return get_static_field<"JJTHOSTNAME", jint>(); }
	static jint JJTIPADDRESS() { return get_static_field<"JJTIPADDRESS", jint>(); }
	static jint JJTIPV6ADDRESS() { return get_static_field<"JJTIPV6ADDRESS", jint>(); }
	static jint JJTIPMASK() { return get_static_field<"JJTIPMASK", jint>(); }
	static jint JJTNETMASK() { return get_static_field<"JJTNETMASK", jint>(); }
	static jint JJTNETMASKV6() { return get_static_field<"JJTNETMASKV6", jint>(); }
	static jint JJTTRAPBLOCK() { return get_static_field<"JJTTRAPBLOCK", jint>(); }
	static jint JJTTRAPITEM() { return get_static_field<"JJTTRAPITEM", jint>(); }
	static jint JJTTRAPCOMMUNITY() { return get_static_field<"JJTTRAPCOMMUNITY", jint>(); }
	static jint JJTTRAPINTERESTEDHOST() { return get_static_field<"JJTTRAPINTERESTEDHOST", jint>(); }
	static jint JJTHOSTTRAP() { return get_static_field<"JJTHOSTTRAP", jint>(); }
	static jint JJTENTERPRISE() { return get_static_field<"JJTENTERPRISE", jint>(); }
	static jint JJTTRAPNUM() { return get_static_field<"JJTTRAPNUM", jint>(); }
	static jint JJTINFORMBLOCK() { return get_static_field<"JJTINFORMBLOCK", jint>(); }
	static jint JJTINFORMITEM() { return get_static_field<"JJTINFORMITEM", jint>(); }
	static jint JJTINFORMCOMMUNITY() { return get_static_field<"JJTINFORMCOMMUNITY", jint>(); }
	static jint JJTINFORMINTERESTEDHOST() { return get_static_field<"JJTINFORMINTERESTEDHOST", jint>(); }
	static jint JJTHOSTINFORM() { return get_static_field<"JJTHOSTINFORM", jint>(); }
	static jni::ref<jni::array<java::lang::String>> jjtNodeName() { return get_static_field<"jjtNodeName", jni::ref<jni::array<java::lang::String>>>(); }


protected:

	ParserTreeConstants(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_IPACL_PARSERTREECONSTANTS
