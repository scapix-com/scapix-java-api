// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/com/sun/jmx/snmp/InetAddressAcl.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_IPACL_SNMPACL_FWD
#define SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_IPACL_SNMPACL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::jmx::snmp::IPAcl { class SnmpAcl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::jmx::snmp::IPAcl::SnmpAcl>
{
	static constexpr fixed_string class_name = "com/sun/jmx/snmp/IPAcl/SnmpAcl";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::com::sun::jmx::snmp::InetAddressAcl, scapix::java_api::java::io::Serializable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_IPACL_SNMPACL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_IPACL_SNMPACL)
#define SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_IPACL_SNMPACL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/jmx/snmp/IPAcl/PermissionImpl.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/net/InetAddress.h>
#include <scapix/java_api/java/util/Enumeration.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::jmx::snmp::IPAcl::SnmpAcl : public jni::object_base<"com/sun/jmx/snmp/IPAcl/SnmpAcl",
	java::lang::Object,
	com::sun::jmx::snmp::InetAddressAcl,
	java::io::Serializable>
{
public:

	static jni::ref<com::sun::jmx::snmp::IPAcl::SnmpAcl> new_object(jni::ref<java::lang::String> p1) { return base_::new_object(p1); }
	static jni::ref<com::sun::jmx::snmp::IPAcl::SnmpAcl> new_object(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return base_::new_object(p1, p2); }
	jni::ref<java::util::Enumeration> entries() { return call_method<"entries", jni::ref<java::util::Enumeration>>(); }
	jni::ref<java::util::Enumeration> communities() { return call_method<"communities", jni::ref<java::util::Enumeration>>(); }
	jni::ref<java::lang::String> getName() { return call_method<"getName", jni::ref<java::lang::String>>(); }
	static jni::ref<com::sun::jmx::snmp::IPAcl::PermissionImpl> getREAD() { return call_static_method<"getREAD", jni::ref<com::sun::jmx::snmp::IPAcl::PermissionImpl>>(); }
	static jni::ref<com::sun::jmx::snmp::IPAcl::PermissionImpl> getWRITE() { return call_static_method<"getWRITE", jni::ref<com::sun::jmx::snmp::IPAcl::PermissionImpl>>(); }
	static jni::ref<java::lang::String> getDefaultAclFileName() { return call_static_method<"getDefaultAclFileName", jni::ref<java::lang::String>>(); }
	void setAuthorizedListFile(jni::ref<java::lang::String> p1) { return call_method<"setAuthorizedListFile", void>(p1); }
	void rereadTheFile() { return call_method<"rereadTheFile", void>(); }
	jni::ref<java::lang::String> getAuthorizedListFile() { return call_method<"getAuthorizedListFile", jni::ref<java::lang::String>>(); }
	jboolean checkReadPermission(jni::ref<java::net::InetAddress> p1) { return call_method<"checkReadPermission", jboolean>(p1); }
	jboolean checkReadPermission(jni::ref<java::net::InetAddress> p1, jni::ref<java::lang::String> p2) { return call_method<"checkReadPermission", jboolean>(p1, p2); }
	jboolean checkCommunity(jni::ref<java::lang::String> p1) { return call_method<"checkCommunity", jboolean>(p1); }
	jboolean checkWritePermission(jni::ref<java::net::InetAddress> p1) { return call_method<"checkWritePermission", jboolean>(p1); }
	jboolean checkWritePermission(jni::ref<java::net::InetAddress> p1, jni::ref<java::lang::String> p2) { return call_method<"checkWritePermission", jboolean>(p1, p2); }
	jni::ref<java::util::Enumeration> getTrapDestinations() { return call_method<"getTrapDestinations", jni::ref<java::util::Enumeration>>(); }
	jni::ref<java::util::Enumeration> getTrapCommunities(jni::ref<java::net::InetAddress> p1) { return call_method<"getTrapCommunities", jni::ref<java::util::Enumeration>>(p1); }
	jni::ref<java::util::Enumeration> getInformDestinations() { return call_method<"getInformDestinations", jni::ref<java::util::Enumeration>>(); }
	jni::ref<java::util::Enumeration> getInformCommunities(jni::ref<java::net::InetAddress> p1) { return call_method<"getInformCommunities", jni::ref<java::util::Enumeration>>(p1); }

protected:

	SnmpAcl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_IPACL_SNMPACL
