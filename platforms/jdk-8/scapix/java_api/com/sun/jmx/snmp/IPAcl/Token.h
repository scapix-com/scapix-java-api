// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_IPACL_TOKEN_FWD
#define SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_IPACL_TOKEN_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::jmx::snmp::IPAcl { class Token; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::jmx::snmp::IPAcl::Token>
{
	static constexpr fixed_string class_name = "com/sun/jmx/snmp/IPAcl/Token";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_IPACL_TOKEN_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_IPACL_TOKEN)
#define SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_IPACL_TOKEN

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class com::sun::jmx::snmp::IPAcl::Token : public jni::object_base<"com/sun/jmx/snmp/IPAcl/Token",
	java::lang::Object>
{
public:

	jint kind() { return get_field<"kind", jint>(); }
	void kind(jint v) { set_field<"kind", jint>(v); }
	jint beginLine() { return get_field<"beginLine", jint>(); }
	void beginLine(jint v) { set_field<"beginLine", jint>(v); }
	jint beginColumn() { return get_field<"beginColumn", jint>(); }
	void beginColumn(jint v) { set_field<"beginColumn", jint>(v); }
	jint endLine() { return get_field<"endLine", jint>(); }
	void endLine(jint v) { set_field<"endLine", jint>(v); }
	jint endColumn() { return get_field<"endColumn", jint>(); }
	void endColumn(jint v) { set_field<"endColumn", jint>(v); }
	jni::ref<java::lang::String> image() { return get_field<"image", jni::ref<java::lang::String>>(); }
	void image(jni::ref<java::lang::String> v) { set_field<"image", jni::ref<java::lang::String>>(v); }
	jni::ref<com::sun::jmx::snmp::IPAcl::Token> next() { return get_field<"next", jni::ref<com::sun::jmx::snmp::IPAcl::Token>>(); }
	void next(jni::ref<com::sun::jmx::snmp::IPAcl::Token> v) { set_field<"next", jni::ref<com::sun::jmx::snmp::IPAcl::Token>>(v); }
	jni::ref<com::sun::jmx::snmp::IPAcl::Token> specialToken() { return get_field<"specialToken", jni::ref<com::sun::jmx::snmp::IPAcl::Token>>(); }
	void specialToken(jni::ref<com::sun::jmx::snmp::IPAcl::Token> v) { set_field<"specialToken", jni::ref<com::sun::jmx::snmp::IPAcl::Token>>(v); }

	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	static jni::ref<com::sun::jmx::snmp::IPAcl::Token> newToken(jint p1) { return call_static_method<"newToken", jni::ref<com::sun::jmx::snmp::IPAcl::Token>>(p1); }

protected:

	Token(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_IPACL_TOKEN
