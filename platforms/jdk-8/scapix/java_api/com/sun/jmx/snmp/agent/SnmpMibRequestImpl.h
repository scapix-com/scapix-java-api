// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/com/sun/jmx/snmp/agent/SnmpMibRequest.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_AGENT_SNMPMIBREQUESTIMPL_FWD
#define SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_AGENT_SNMPMIBREQUESTIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::jmx::snmp::agent { class SnmpMibRequestImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::jmx::snmp::agent::SnmpMibRequestImpl>
{
	static constexpr fixed_string class_name = "com/sun/jmx/snmp/agent/SnmpMibRequestImpl";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::com::sun::jmx::snmp::agent::SnmpMibRequest>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_AGENT_SNMPMIBREQUESTIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_AGENT_SNMPMIBREQUESTIMPL)
#define SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_AGENT_SNMPMIBREQUESTIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/jmx/snmp/SnmpEngine.h>
#include <scapix/java_api/com/sun/jmx/snmp/SnmpPdu.h>
#include <scapix/java_api/com/sun/jmx/snmp/SnmpVarBind.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Enumeration.h>
#include <scapix/java_api/java/util/Vector.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class com::sun::jmx::snmp::agent::SnmpMibRequestImpl : public jni::object_base<"com/sun/jmx/snmp/agent/SnmpMibRequestImpl",
	java::lang::Object,
	com::sun::jmx::snmp::agent::SnmpMibRequest>
{
public:

	static jni::ref<com::sun::jmx::snmp::agent::SnmpMibRequestImpl> new_object(jni::ref<com::sun::jmx::snmp::SnmpEngine> p1, jni::ref<com::sun::jmx::snmp::SnmpPdu> p2, jni::ref<java::util::Vector> p3, jint p4, jni::ref<java::lang::Object> p5, jni::ref<java::lang::String> p6, jint p7, jint p8, jni::ref<jni::array<jbyte>> p9, jni::ref<jni::array<jbyte>> p10) { return base_::new_object(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10); }
	jni::ref<com::sun::jmx::snmp::SnmpEngine> getEngine() { return call_method<"getEngine", jni::ref<com::sun::jmx::snmp::SnmpEngine>>(); }
	jni::ref<java::lang::String> getPrincipal() { return call_method<"getPrincipal", jni::ref<java::lang::String>>(); }
	jint getSecurityLevel() { return call_method<"getSecurityLevel", jint>(); }
	jint getSecurityModel() { return call_method<"getSecurityModel", jint>(); }
	jni::ref<jni::array<jbyte>> getContextName() { return call_method<"getContextName", jni::ref<jni::array<jbyte>>>(); }
	jni::ref<jni::array<jbyte>> getAccessContextName() { return call_method<"getAccessContextName", jni::ref<jni::array<jbyte>>>(); }
	jni::ref<com::sun::jmx::snmp::SnmpPdu> getPdu() { return call_method<"getPdu", jni::ref<com::sun::jmx::snmp::SnmpPdu>>(); }
	jni::ref<java::util::Enumeration> getElements() { return call_method<"getElements", jni::ref<java::util::Enumeration>>(); }
	jni::ref<java::util::Vector> getSubList() { return call_method<"getSubList", jni::ref<java::util::Vector>>(); }
	jint getSize() { return call_method<"getSize", jint>(); }
	jint getVersion() { return call_method<"getVersion", jint>(); }
	jint getRequestPduVersion() { return call_method<"getRequestPduVersion", jint>(); }
	jni::ref<java::lang::Object> getUserData() { return call_method<"getUserData", jni::ref<java::lang::Object>>(); }
	jint getVarIndex(jni::ref<com::sun::jmx::snmp::SnmpVarBind> p1) { return call_method<"getVarIndex", jint>(p1); }
	void addVarBind(jni::ref<com::sun::jmx::snmp::SnmpVarBind> p1) { return call_method<"addVarBind", void>(p1); }

protected:

	SnmpMibRequestImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JMX_SNMP_AGENT_SNMPMIBREQUESTIMPL
