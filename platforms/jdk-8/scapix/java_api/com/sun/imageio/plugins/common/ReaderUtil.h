// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_IMAGEIO_PLUGINS_COMMON_READERUTIL_FWD
#define SCAPIX_JAVA_API_COM_SUN_IMAGEIO_PLUGINS_COMMON_READERUTIL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::imageio::plugins::common { class ReaderUtil; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::imageio::plugins::common::ReaderUtil>
{
	static constexpr fixed_string class_name = "com/sun/imageio/plugins/common/ReaderUtil";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_IMAGEIO_PLUGINS_COMMON_READERUTIL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_IMAGEIO_PLUGINS_COMMON_READERUTIL)
#define SCAPIX_JAVA_API_COM_SUN_IMAGEIO_PLUGINS_COMMON_READERUTIL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Point.h>
#include <scapix/java_api/java/awt/Rectangle.h>
#include <scapix/java_api/javax/imageio/stream/ImageInputStream.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::imageio::plugins::common::ReaderUtil : public jni::object_base<"com/sun/imageio/plugins/common/ReaderUtil",
	java::lang::Object>
{
public:

	static jni::ref<com::sun::imageio::plugins::common::ReaderUtil> new_object() { return base_::new_object(); }
	static jni::ref<jni::array<jint>> computeUpdatedPixels(jni::ref<java::awt::Rectangle> p1, jni::ref<java::awt::Point> p2, jint p3, jint p4, jint p5, jint p6, jint p7, jint p8, jint p9, jint p10, jint p11, jint p12, jint p13, jint p14) { return call_static_method<"computeUpdatedPixels", jni::ref<jni::array<jint>>>(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14); }
	static jint readMultiByteInteger(jni::ref<javax::imageio::stream::ImageInputStream> p1) { return call_static_method<"readMultiByteInteger", jint>(p1); }
	static jni::ref<jni::array<jbyte>> staggeredReadByteStream(jni::ref<javax::imageio::stream::ImageInputStream> p1, jint p2) { return call_static_method<"staggeredReadByteStream", jni::ref<jni::array<jbyte>>>(p1, p2); }

protected:

	ReaderUtil(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_IMAGEIO_PLUGINS_COMMON_READERUTIL
