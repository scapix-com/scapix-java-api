// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/io/InputStream.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_IMAGEIO_PLUGINS_COMMON_INPUTSTREAMADAPTER_FWD
#define SCAPIX_JAVA_API_COM_SUN_IMAGEIO_PLUGINS_COMMON_INPUTSTREAMADAPTER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::imageio::plugins::common { class InputStreamAdapter; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::imageio::plugins::common::InputStreamAdapter>
{
	static constexpr fixed_string class_name = "com/sun/imageio/plugins/common/InputStreamAdapter";
	using base_classes = std::tuple<scapix::java_api::java::io::InputStream>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_IMAGEIO_PLUGINS_COMMON_INPUTSTREAMADAPTER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_IMAGEIO_PLUGINS_COMMON_INPUTSTREAMADAPTER)
#define SCAPIX_JAVA_API_COM_SUN_IMAGEIO_PLUGINS_COMMON_INPUTSTREAMADAPTER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/javax/imageio/stream/ImageInputStream.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::imageio::plugins::common::InputStreamAdapter : public jni::object_base<"com/sun/imageio/plugins/common/InputStreamAdapter",
	java::io::InputStream>
{
public:

	static jni::ref<com::sun::imageio::plugins::common::InputStreamAdapter> new_object(jni::ref<javax::imageio::stream::ImageInputStream> p1) { return base_::new_object(p1); }
	jint read() { return call_method<"read", jint>(); }
	jint read(jni::ref<jni::array<jbyte>> p1, jint p2, jint p3) { return call_method<"read", jint>(p1, p2, p3); }

protected:

	InputStreamAdapter(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_IMAGEIO_PLUGINS_COMMON_INPUTSTREAMADAPTER
