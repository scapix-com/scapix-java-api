// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_IMAGEIO_PLUGINS_COMMON_PALETTEBUILDER_COLORNODE_FWD
#define SCAPIX_JAVA_API_COM_SUN_IMAGEIO_PLUGINS_COMMON_PALETTEBUILDER_COLORNODE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::imageio::plugins::common { class PaletteBuilder_ColorNode; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::imageio::plugins::common::PaletteBuilder_ColorNode>
{
	static constexpr fixed_string class_name = "com/sun/imageio/plugins/common/PaletteBuilder$ColorNode";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_IMAGEIO_PLUGINS_COMMON_PALETTEBUILDER_COLORNODE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_IMAGEIO_PLUGINS_COMMON_PALETTEBUILDER_COLORNODE)
#define SCAPIX_JAVA_API_COM_SUN_IMAGEIO_PLUGINS_COMMON_PALETTEBUILDER_COLORNODE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/imageio/plugins/common/PaletteBuilder.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::imageio::plugins::common::PaletteBuilder_ColorNode : public jni::object_base<"com/sun/imageio/plugins/common/PaletteBuilder$ColorNode",
	java::lang::Object>
{
public:

	jboolean isLeaf() { return get_field<"isLeaf", jboolean>(); }
	void isLeaf(jboolean v) { set_field<"isLeaf", jboolean>(v); }
	jint childCount() { return get_field<"childCount", jint>(); }
	void childCount(jint v) { set_field<"childCount", jint>(v); }
	jint colorCount() { return get_field<"colorCount", jint>(); }
	void colorCount(jint v) { set_field<"colorCount", jint>(v); }
	jlong red() { return get_field<"red", jlong>(); }
	void red(jlong v) { set_field<"red", jlong>(v); }
	jlong blue() { return get_field<"blue", jlong>(); }
	void blue(jlong v) { set_field<"blue", jlong>(v); }
	jlong green() { return get_field<"green", jlong>(); }
	void green(jlong v) { set_field<"green", jlong>(v); }
	jint paletteIndex() { return get_field<"paletteIndex", jint>(); }
	void paletteIndex(jint v) { set_field<"paletteIndex", jint>(v); }
	jint level() { return get_field<"level", jint>(); }
	void level(jint v) { set_field<"level", jint>(v); }

	static jni::ref<com::sun::imageio::plugins::common::PaletteBuilder_ColorNode> new_object(jni::ref<com::sun::imageio::plugins::common::PaletteBuilder> p1) { return base_::new_object(p1); }
	jint getLeafChildCount() { return call_method<"getLeafChildCount", jint>(); }
	jint getRGB() { return call_method<"getRGB", jint>(); }

protected:

	PaletteBuilder_ColorNode(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_IMAGEIO_PLUGINS_COMMON_PALETTEBUILDER_COLORNODE
