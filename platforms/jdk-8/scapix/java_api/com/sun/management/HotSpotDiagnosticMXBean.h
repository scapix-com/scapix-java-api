// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/management/PlatformManagedObject.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_MANAGEMENT_HOTSPOTDIAGNOSTICMXBEAN_FWD
#define SCAPIX_JAVA_API_COM_SUN_MANAGEMENT_HOTSPOTDIAGNOSTICMXBEAN_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::management { class HotSpotDiagnosticMXBean; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::management::HotSpotDiagnosticMXBean>
{
	static constexpr fixed_string class_name = "com/sun/management/HotSpotDiagnosticMXBean";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::lang::management::PlatformManagedObject>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_MANAGEMENT_HOTSPOTDIAGNOSTICMXBEAN_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_MANAGEMENT_HOTSPOTDIAGNOSTICMXBEAN)
#define SCAPIX_JAVA_API_COM_SUN_MANAGEMENT_HOTSPOTDIAGNOSTICMXBEAN

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/management/VMOption.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::management::HotSpotDiagnosticMXBean : public jni::object_base<"com/sun/management/HotSpotDiagnosticMXBean",
	java::lang::Object,
	java::lang::management::PlatformManagedObject>
{
public:

	void dumpHeap(jni::ref<java::lang::String> p1, jboolean p2) { return call_method<"dumpHeap", void>(p1, p2); }
	jni::ref<java::util::List> getDiagnosticOptions() { return call_method<"getDiagnosticOptions", jni::ref<java::util::List>>(); }
	jni::ref<com::sun::management::VMOption> getVMOption(jni::ref<java::lang::String> p1) { return call_method<"getVMOption", jni::ref<com::sun::management::VMOption>>(p1); }
	void setVMOption(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return call_method<"setVMOption", void>(p1, p2); }

protected:

	HotSpotDiagnosticMXBean(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_MANAGEMENT_HOTSPOTDIAGNOSTICMXBEAN
