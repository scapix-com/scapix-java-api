// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/management/Notification.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_MANAGEMENT_JMX_TRACENOTIFICATION_FWD
#define SCAPIX_JAVA_API_COM_SUN_MANAGEMENT_JMX_TRACENOTIFICATION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::management::jmx { class TraceNotification; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::management::jmx::TraceNotification>
{
	static constexpr fixed_string class_name = "com/sun/management/jmx/TraceNotification";
	using base_classes = std::tuple<scapix::java_api::javax::management::Notification>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_MANAGEMENT_JMX_TRACENOTIFICATION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_MANAGEMENT_JMX_TRACENOTIFICATION)
#define SCAPIX_JAVA_API_COM_SUN_MANAGEMENT_JMX_TRACENOTIFICATION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/Throwable.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::management::jmx::TraceNotification : public jni::object_base<"com/sun/management/jmx/TraceNotification",
	javax::management::Notification>
{
public:

	jint level() { return get_field<"level", jint>(); }
	void level(jint v) { set_field<"level", jint>(v); }
	jint type() { return get_field<"type", jint>(); }
	void type(jint v) { set_field<"type", jint>(v); }
	jni::ref<java::lang::String> className() { return get_field<"className", jni::ref<java::lang::String>>(); }
	void className(jni::ref<java::lang::String> v) { set_field<"className", jni::ref<java::lang::String>>(v); }
	jni::ref<java::lang::String> methodName() { return get_field<"methodName", jni::ref<java::lang::String>>(); }
	void methodName(jni::ref<java::lang::String> v) { set_field<"methodName", jni::ref<java::lang::String>>(v); }
	jni::ref<java::lang::String> info() { return get_field<"info", jni::ref<java::lang::String>>(); }
	void info(jni::ref<java::lang::String> v) { set_field<"info", jni::ref<java::lang::String>>(v); }
	jni::ref<java::lang::Throwable> exception() { return get_field<"exception", jni::ref<java::lang::Throwable>>(); }
	void exception(jni::ref<java::lang::Throwable> v) { set_field<"exception", jni::ref<java::lang::Throwable>>(v); }
	jlong globalSequenceNumber() { return get_field<"globalSequenceNumber", jlong>(); }
	void globalSequenceNumber(jlong v) { set_field<"globalSequenceNumber", jlong>(v); }
	jlong sequenceNumber() { return get_field<"sequenceNumber", jlong>(); }
	void sequenceNumber(jlong v) { set_field<"sequenceNumber", jlong>(v); }

	static jni::ref<com::sun::management::jmx::TraceNotification> new_object(jni::ref<java::lang::Object> p1, jlong p2, jlong p3, jint p4, jint p5, jni::ref<java::lang::String> p6, jni::ref<java::lang::String> p7, jni::ref<java::lang::String> p8, jni::ref<java::lang::Throwable> p9) { return base_::new_object(p1, p2, p3, p4, p5, p6, p7, p8, p9); }

protected:

	TraceNotification(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_MANAGEMENT_JMX_TRACENOTIFICATION
