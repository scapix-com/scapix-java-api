// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/javax/management/openmbean/CompositeData.h>
#include <scapix/java_api/javax/management/openmbean/CompositeDataView.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_MANAGEMENT_GCINFO_FWD
#define SCAPIX_JAVA_API_COM_SUN_MANAGEMENT_GCINFO_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::management { class GcInfo; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::management::GcInfo>
{
	static constexpr fixed_string class_name = "com/sun/management/GcInfo";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::javax::management::openmbean::CompositeData, scapix::java_api::javax::management::openmbean::CompositeDataView>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_MANAGEMENT_GCINFO_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_MANAGEMENT_GCINFO)
#define SCAPIX_JAVA_API_COM_SUN_MANAGEMENT_GCINFO

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Collection.h>
#include <scapix/java_api/java/util/Map.h>
#include <scapix/java_api/javax/management/openmbean/CompositeType.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::management::GcInfo : public jni::object_base<"com/sun/management/GcInfo",
	java::lang::Object,
	javax::management::openmbean::CompositeData,
	javax::management::openmbean::CompositeDataView>
{
public:

	jlong getId() { return call_method<"getId", jlong>(); }
	jlong getStartTime() { return call_method<"getStartTime", jlong>(); }
	jlong getEndTime() { return call_method<"getEndTime", jlong>(); }
	jlong getDuration() { return call_method<"getDuration", jlong>(); }
	jni::ref<java::util::Map> getMemoryUsageBeforeGc() { return call_method<"getMemoryUsageBeforeGc", jni::ref<java::util::Map>>(); }
	jni::ref<java::util::Map> getMemoryUsageAfterGc() { return call_method<"getMemoryUsageAfterGc", jni::ref<java::util::Map>>(); }
	static jni::ref<com::sun::management::GcInfo> from(jni::ref<javax::management::openmbean::CompositeData> p1) { return call_static_method<"from", jni::ref<com::sun::management::GcInfo>>(p1); }
	jboolean containsKey(jni::ref<java::lang::String> p1) { return call_method<"containsKey", jboolean>(p1); }
	jboolean containsValue(jni::ref<java::lang::Object> p1) { return call_method<"containsValue", jboolean>(p1); }
	jboolean equals(jni::ref<java::lang::Object> p1) { return call_method<"equals", jboolean>(p1); }
	jni::ref<java::lang::Object> get(jni::ref<java::lang::String> p1) { return call_method<"get", jni::ref<java::lang::Object>>(p1); }
	jni::ref<jni::array<java::lang::Object>> getAll(jni::ref<jni::array<java::lang::String>> p1) { return call_method<"getAll", jni::ref<jni::array<java::lang::Object>>>(p1); }
	jni::ref<javax::management::openmbean::CompositeType> getCompositeType() { return call_method<"getCompositeType", jni::ref<javax::management::openmbean::CompositeType>>(); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jni::ref<java::util::Collection> values() { return call_method<"values", jni::ref<java::util::Collection>>(); }
	jni::ref<javax::management::openmbean::CompositeData> toCompositeData(jni::ref<javax::management::openmbean::CompositeType> p1) { return call_method<"toCompositeData", jni::ref<javax::management::openmbean::CompositeData>>(p1); }

protected:

	GcInfo(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_MANAGEMENT_GCINFO
