// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/naming/internal/VersionHelper.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_NAMING_INTERNAL_VERSIONHELPER12_FWD
#define SCAPIX_JAVA_API_COM_SUN_NAMING_INTERNAL_VERSIONHELPER12_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::naming::internal { class VersionHelper12; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::naming::internal::VersionHelper12>
{
	static constexpr fixed_string class_name = "com/sun/naming/internal/VersionHelper12";
	using base_classes = std::tuple<scapix::java_api::com::sun::naming::internal::VersionHelper>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_NAMING_INTERNAL_VERSIONHELPER12_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_NAMING_INTERNAL_VERSIONHELPER12)
#define SCAPIX_JAVA_API_COM_SUN_NAMING_INTERNAL_VERSIONHELPER12

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class com::sun::naming::internal::VersionHelper12 : public jni::object_base<"com/sun/naming/internal/VersionHelper12",
	com::sun::naming::internal::VersionHelper>
{
public:

	jni::ref<java::lang::Class> loadClass(jni::ref<java::lang::String> p1) { return call_method<"loadClass", jni::ref<java::lang::Class>>(p1); }
	jni::ref<java::lang::Class> loadClassWithoutInit(jni::ref<java::lang::String> p1) { return call_method<"loadClassWithoutInit", jni::ref<java::lang::Class>>(p1); }
	jni::ref<java::lang::Class> loadClass(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return call_method<"loadClass", jni::ref<java::lang::Class>>(p1, p2); }

protected:

	VersionHelper12(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_NAMING_INTERNAL_VERSIONHELPER12
