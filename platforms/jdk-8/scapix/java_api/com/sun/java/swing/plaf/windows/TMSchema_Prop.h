// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Enum.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_JAVA_SWING_PLAF_WINDOWS_TMSCHEMA_PROP_FWD
#define SCAPIX_JAVA_API_COM_SUN_JAVA_SWING_PLAF_WINDOWS_TMSCHEMA_PROP_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::java::swing::plaf::windows { class TMSchema_Prop; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::java::swing::plaf::windows::TMSchema_Prop>
{
	static constexpr fixed_string class_name = "com/sun/java/swing/plaf/windows/TMSchema$Prop";
	using base_classes = std::tuple<scapix::java_api::java::lang::Enum>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JAVA_SWING_PLAF_WINDOWS_TMSCHEMA_PROP_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_JAVA_SWING_PLAF_WINDOWS_TMSCHEMA_PROP)
#define SCAPIX_JAVA_API_COM_SUN_JAVA_SWING_PLAF_WINDOWS_TMSCHEMA_PROP

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::java::swing::plaf::windows::TMSchema_Prop : public jni::object_base<"com/sun/java/swing/plaf/windows/TMSchema$Prop",
	java::lang::Enum>
{
public:

	static jni::ref<com::sun::java::swing::plaf::windows::TMSchema_Prop> COLOR() { return get_static_field<"COLOR", jni::ref<com::sun::java::swing::plaf::windows::TMSchema_Prop>>(); }
	static jni::ref<com::sun::java::swing::plaf::windows::TMSchema_Prop> SIZE() { return get_static_field<"SIZE", jni::ref<com::sun::java::swing::plaf::windows::TMSchema_Prop>>(); }
	static jni::ref<com::sun::java::swing::plaf::windows::TMSchema_Prop> FLATMENUS() { return get_static_field<"FLATMENUS", jni::ref<com::sun::java::swing::plaf::windows::TMSchema_Prop>>(); }
	static jni::ref<com::sun::java::swing::plaf::windows::TMSchema_Prop> BORDERONLY() { return get_static_field<"BORDERONLY", jni::ref<com::sun::java::swing::plaf::windows::TMSchema_Prop>>(); }
	static jni::ref<com::sun::java::swing::plaf::windows::TMSchema_Prop> IMAGECOUNT() { return get_static_field<"IMAGECOUNT", jni::ref<com::sun::java::swing::plaf::windows::TMSchema_Prop>>(); }
	static jni::ref<com::sun::java::swing::plaf::windows::TMSchema_Prop> BORDERSIZE() { return get_static_field<"BORDERSIZE", jni::ref<com::sun::java::swing::plaf::windows::TMSchema_Prop>>(); }
	static jni::ref<com::sun::java::swing::plaf::windows::TMSchema_Prop> PROGRESSCHUNKSIZE() { return get_static_field<"PROGRESSCHUNKSIZE", jni::ref<com::sun::java::swing::plaf::windows::TMSchema_Prop>>(); }
	static jni::ref<com::sun::java::swing::plaf::windows::TMSchema_Prop> PROGRESSSPACESIZE() { return get_static_field<"PROGRESSSPACESIZE", jni::ref<com::sun::java::swing::plaf::windows::TMSchema_Prop>>(); }
	static jni::ref<com::sun::java::swing::plaf::windows::TMSchema_Prop> TEXTSHADOWOFFSET() { return get_static_field<"TEXTSHADOWOFFSET", jni::ref<com::sun::java::swing::plaf::windows::TMSchema_Prop>>(); }
	static jni::ref<com::sun::java::swing::plaf::windows::TMSchema_Prop> NORMALSIZE() { return get_static_field<"NORMALSIZE", jni::ref<com::sun::java::swing::plaf::windows::TMSchema_Prop>>(); }
	static jni::ref<com::sun::java::swing::plaf::windows::TMSchema_Prop> SIZINGMARGINS() { return get_static_field<"SIZINGMARGINS", jni::ref<com::sun::java::swing::plaf::windows::TMSchema_Prop>>(); }
	static jni::ref<com::sun::java::swing::plaf::windows::TMSchema_Prop> CONTENTMARGINS() { return get_static_field<"CONTENTMARGINS", jni::ref<com::sun::java::swing::plaf::windows::TMSchema_Prop>>(); }
	static jni::ref<com::sun::java::swing::plaf::windows::TMSchema_Prop> CAPTIONMARGINS() { return get_static_field<"CAPTIONMARGINS", jni::ref<com::sun::java::swing::plaf::windows::TMSchema_Prop>>(); }
	static jni::ref<com::sun::java::swing::plaf::windows::TMSchema_Prop> BORDERCOLOR() { return get_static_field<"BORDERCOLOR", jni::ref<com::sun::java::swing::plaf::windows::TMSchema_Prop>>(); }
	static jni::ref<com::sun::java::swing::plaf::windows::TMSchema_Prop> FILLCOLOR() { return get_static_field<"FILLCOLOR", jni::ref<com::sun::java::swing::plaf::windows::TMSchema_Prop>>(); }
	static jni::ref<com::sun::java::swing::plaf::windows::TMSchema_Prop> TEXTCOLOR() { return get_static_field<"TEXTCOLOR", jni::ref<com::sun::java::swing::plaf::windows::TMSchema_Prop>>(); }
	static jni::ref<com::sun::java::swing::plaf::windows::TMSchema_Prop> TEXTSHADOWCOLOR() { return get_static_field<"TEXTSHADOWCOLOR", jni::ref<com::sun::java::swing::plaf::windows::TMSchema_Prop>>(); }
	static jni::ref<com::sun::java::swing::plaf::windows::TMSchema_Prop> BGTYPE() { return get_static_field<"BGTYPE", jni::ref<com::sun::java::swing::plaf::windows::TMSchema_Prop>>(); }
	static jni::ref<com::sun::java::swing::plaf::windows::TMSchema_Prop> TEXTSHADOWTYPE() { return get_static_field<"TEXTSHADOWTYPE", jni::ref<com::sun::java::swing::plaf::windows::TMSchema_Prop>>(); }
	static jni::ref<com::sun::java::swing::plaf::windows::TMSchema_Prop> TRANSITIONDURATIONS() { return get_static_field<"TRANSITIONDURATIONS", jni::ref<com::sun::java::swing::plaf::windows::TMSchema_Prop>>(); }

	static jni::ref<jni::array<com::sun::java::swing::plaf::windows::TMSchema_Prop>> values() { return call_static_method<"values", jni::ref<jni::array<com::sun::java::swing::plaf::windows::TMSchema_Prop>>>(); }
	static jni::ref<com::sun::java::swing::plaf::windows::TMSchema_Prop> valueOf(jni::ref<java::lang::String> p1) { return call_static_method<"valueOf", jni::ref<com::sun::java::swing::plaf::windows::TMSchema_Prop>>(p1); }
	jint getValue() { return call_method<"getValue", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	TMSchema_Prop(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JAVA_SWING_PLAF_WINDOWS_TMSCHEMA_PROP
