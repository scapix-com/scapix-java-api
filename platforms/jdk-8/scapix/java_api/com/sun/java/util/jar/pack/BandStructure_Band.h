// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_JAVA_UTIL_JAR_PACK_BANDSTRUCTURE_BAND_FWD
#define SCAPIX_JAVA_API_COM_SUN_JAVA_UTIL_JAR_PACK_BANDSTRUCTURE_BAND_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::java::util::jar::pack { class BandStructure_Band; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::java::util::jar::pack::BandStructure_Band>
{
	static constexpr fixed_string class_name = "com/sun/java/util/jar/pack/BandStructure$Band";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JAVA_UTIL_JAR_PACK_BANDSTRUCTURE_BAND_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_JAVA_UTIL_JAR_PACK_BANDSTRUCTURE_BAND)
#define SCAPIX_JAVA_API_COM_SUN_JAVA_UTIL_JAR_PACK_BANDSTRUCTURE_BAND

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/java/util/jar/pack/Coding.h>
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/io/OutputStream.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class com::sun::java::util::jar::pack::BandStructure_Band : public jni::object_base<"com/sun/java/util/jar/pack/BandStructure$Band",
	java::lang::Object>
{
public:

	jni::ref<com::sun::java::util::jar::pack::Coding> regularCoding() { return get_field<"regularCoding", jni::ref<com::sun::java::util::jar::pack::Coding>>(); }
	jint seqForDebug() { return get_field<"seqForDebug", jint>(); }
	jint elementCountForDebug() { return get_field<"elementCountForDebug", jint>(); }
	void elementCountForDebug(jint v) { set_field<"elementCountForDebug", jint>(v); }

	jni::ref<com::sun::java::util::jar::pack::BandStructure_Band> init() { return call_method<"init", jni::ref<com::sun::java::util::jar::pack::BandStructure_Band>>(); }
	jint capacity() { return call_method<"capacity", jint>(); }
	jint length() { return call_method<"length", jint>(); }
	jint valuesExpected() { return call_method<"valuesExpected", jint>(); }
	void writeTo(jni::ref<java::io::OutputStream> p1) { return call_method<"writeTo", void>(p1); }
	jlong outputSize() { return call_method<"outputSize", jlong>(); }
	void readFrom(jni::ref<java::io::InputStream> p1) { return call_method<"readFrom", void>(p1); }
	void doneDisbursing() { return call_method<"doneDisbursing", void>(); }
	void doneWithUnusedBand() { return call_method<"doneWithUnusedBand", void>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	BandStructure_Band(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JAVA_UTIL_JAR_PACK_BANDSTRUCTURE_BAND
