// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/util/ListResourceBundle.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_JAVA_UTIL_JAR_PACK_DRIVERRESOURCE_FWD
#define SCAPIX_JAVA_API_COM_SUN_JAVA_UTIL_JAR_PACK_DRIVERRESOURCE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::java::util::jar::pack { class DriverResource; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::java::util::jar::pack::DriverResource>
{
	static constexpr fixed_string class_name = "com/sun/java/util/jar/pack/DriverResource";
	using base_classes = std::tuple<scapix::java_api::java::util::ListResourceBundle>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JAVA_UTIL_JAR_PACK_DRIVERRESOURCE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_JAVA_UTIL_JAR_PACK_DRIVERRESOURCE)
#define SCAPIX_JAVA_API_COM_SUN_JAVA_UTIL_JAR_PACK_DRIVERRESOURCE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::java::util::jar::pack::DriverResource : public jni::object_base<"com/sun/java/util/jar/pack/DriverResource",
	java::util::ListResourceBundle>
{
public:

	static jni::ref<java::lang::String> VERSION() { return get_static_field<"VERSION", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> BAD_ARGUMENT() { return get_static_field<"BAD_ARGUMENT", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> BAD_OPTION() { return get_static_field<"BAD_OPTION", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> BAD_REPACK_OUTPUT() { return get_static_field<"BAD_REPACK_OUTPUT", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> DETECTED_ZIP_COMMENT() { return get_static_field<"DETECTED_ZIP_COMMENT", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> SKIP_FOR_REPACKED() { return get_static_field<"SKIP_FOR_REPACKED", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> WRITE_PACK_FILE() { return get_static_field<"WRITE_PACK_FILE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> WRITE_PACKGZ_FILE() { return get_static_field<"WRITE_PACKGZ_FILE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> SKIP_FOR_MOVE_FAILED() { return get_static_field<"SKIP_FOR_MOVE_FAILED", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> PACK_HELP() { return get_static_field<"PACK_HELP", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> UNPACK_HELP() { return get_static_field<"UNPACK_HELP", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MORE_INFO() { return get_static_field<"MORE_INFO", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> DUPLICATE_OPTION() { return get_static_field<"DUPLICATE_OPTION", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> BAD_SPEC() { return get_static_field<"BAD_SPEC", jni::ref<java::lang::String>>(); }

	static jni::ref<com::sun::java::util::jar::pack::DriverResource> new_object() { return base_::new_object(); }

protected:

	DriverResource(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JAVA_UTIL_JAR_PACK_DRIVERRESOURCE
