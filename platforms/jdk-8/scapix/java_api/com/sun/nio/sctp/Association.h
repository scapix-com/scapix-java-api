// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_NIO_SCTP_ASSOCIATION_FWD
#define SCAPIX_JAVA_API_COM_SUN_NIO_SCTP_ASSOCIATION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::nio::sctp { class Association; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::nio::sctp::Association>
{
	static constexpr fixed_string class_name = "com/sun/nio/sctp/Association";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_NIO_SCTP_ASSOCIATION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_NIO_SCTP_ASSOCIATION)
#define SCAPIX_JAVA_API_COM_SUN_NIO_SCTP_ASSOCIATION

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::nio::sctp::Association : public jni::object_base<"com/sun/nio/sctp/Association",
	java::lang::Object>
{
public:

	jint associationID() { return call_method<"associationID", jint>(); }
	jint maxInboundStreams() { return call_method<"maxInboundStreams", jint>(); }
	jint maxOutboundStreams() { return call_method<"maxOutboundStreams", jint>(); }

protected:

	Association(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_NIO_SCTP_ASSOCIATION
