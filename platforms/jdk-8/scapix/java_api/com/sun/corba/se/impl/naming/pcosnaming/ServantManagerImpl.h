// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/org/omg/CORBA/LocalObject.h>
#include <scapix/java_api/org/omg/PortableServer/ServantLocator.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_NAMING_PCOSNAMING_SERVANTMANAGERIMPL_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_NAMING_PCOSNAMING_SERVANTMANAGERIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::impl::naming::pcosnaming { class ServantManagerImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::impl::naming::pcosnaming::ServantManagerImpl>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/impl/naming/pcosnaming/ServantManagerImpl";
	using base_classes = std::tuple<scapix::java_api::org::omg::CORBA::LocalObject, scapix::java_api::org::omg::PortableServer::ServantLocator>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_NAMING_PCOSNAMING_SERVANTMANAGERIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_NAMING_PCOSNAMING_SERVANTMANAGERIMPL)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_NAMING_PCOSNAMING_SERVANTMANAGERIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/corba/se/impl/naming/pcosnaming/NamingContextImpl.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/omg/PortableServer/POA.h>
#include <scapix/java_api/org/omg/PortableServer/Servant.h>
#include <scapix/java_api/org/omg/PortableServer/ServantLocatorPackage/CookieHolder.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::impl::naming::pcosnaming::ServantManagerImpl : public jni::object_base<"com/sun/corba/se/impl/naming/pcosnaming/ServantManagerImpl",
	org::omg::CORBA::LocalObject,
	org::omg::PortableServer::ServantLocator>
{
public:

	jni::ref<org::omg::PortableServer::Servant> preinvoke(jni::ref<jni::array<jbyte>> p1, jni::ref<org::omg::PortableServer::POA> p2, jni::ref<java::lang::String> p3, jni::ref<org::omg::PortableServer::ServantLocatorPackage::CookieHolder> p4) { return call_method<"preinvoke", jni::ref<org::omg::PortableServer::Servant>>(p1, p2, p3, p4); }
	void postinvoke(jni::ref<jni::array<jbyte>> p1, jni::ref<org::omg::PortableServer::POA> p2, jni::ref<java::lang::String> p3, jni::ref<java::lang::Object> p4, jni::ref<org::omg::PortableServer::Servant> p5) { return call_method<"postinvoke", void>(p1, p2, p3, p4, p5); }
	jni::ref<com::sun::corba::se::impl::naming::pcosnaming::NamingContextImpl> readInContext(jni::ref<java::lang::String> p1) { return call_method<"readInContext", jni::ref<com::sun::corba::se::impl::naming::pcosnaming::NamingContextImpl>>(p1); }
	jni::ref<com::sun::corba::se::impl::naming::pcosnaming::NamingContextImpl> addContext(jni::ref<java::lang::String> p1, jni::ref<com::sun::corba::se::impl::naming::pcosnaming::NamingContextImpl> p2) { return call_method<"addContext", jni::ref<com::sun::corba::se::impl::naming::pcosnaming::NamingContextImpl>>(p1, p2); }
	void updateContext(jni::ref<java::lang::String> p1, jni::ref<com::sun::corba::se::impl::naming::pcosnaming::NamingContextImpl> p2) { return call_method<"updateContext", void>(p1, p2); }
	static jni::ref<java::lang::String> getRootObjectKey() { return call_static_method<"getRootObjectKey", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getNewObjectKey() { return call_method<"getNewObjectKey", jni::ref<java::lang::String>>(); }

protected:

	ServantManagerImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_NAMING_PCOSNAMING_SERVANTMANAGERIMPL
