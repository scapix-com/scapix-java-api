// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/corba/se/spi/ior/IdentifiableBase.h>
#include <scapix/java_api/com/sun/corba/se/spi/ior/iiop/IIOPProfile.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_IOR_IIOP_IIOPPROFILEIMPL_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_IOR_IIOP_IIOPPROFILEIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::impl::ior::iiop { class IIOPProfileImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::impl::ior::iiop::IIOPProfileImpl>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/impl/ior/iiop/IIOPProfileImpl";
	using base_classes = std::tuple<scapix::java_api::com::sun::corba::se::spi::ior::IdentifiableBase, scapix::java_api::com::sun::corba::se::spi::ior::iiop::IIOPProfile>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_IOR_IIOP_IIOPPROFILEIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_IOR_IIOP_IIOPPROFILEIMPL)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_IOR_IIOP_IIOPPROFILEIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/corba/se/spi/ior/ObjectId.h>
#include <scapix/java_api/com/sun/corba/se/spi/ior/ObjectKey.h>
#include <scapix/java_api/com/sun/corba/se/spi/ior/ObjectKeyTemplate.h>
#include <scapix/java_api/com/sun/corba/se/spi/ior/TaggedProfile.h>
#include <scapix/java_api/com/sun/corba/se/spi/ior/TaggedProfileTemplate.h>
#include <scapix/java_api/com/sun/corba/se/spi/ior/iiop/GIOPVersion.h>
#include <scapix/java_api/com/sun/corba/se/spi/ior/iiop/IIOPProfileTemplate.h>
#include <scapix/java_api/com/sun/corba/se/spi/orb/ORB.h>
#include <scapix/java_api/com/sun/corba/se/spi/orb/ORBVersion.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/omg/CORBA_2_3/portable/InputStream.h>
#include <scapix/java_api/org/omg/CORBA_2_3/portable/OutputStream.h>
#include <scapix/java_api/org/omg/IOP/TaggedProfile.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::impl::ior::iiop::IIOPProfileImpl : public jni::object_base<"com/sun/corba/se/impl/ior/iiop/IIOPProfileImpl",
	com::sun::corba::se::spi::ior::IdentifiableBase,
	com::sun::corba::se::spi::ior::iiop::IIOPProfile>
{
public:

	jboolean equals(jni::ref<java::lang::Object> p1) { return call_method<"equals", jboolean>(p1); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jni::ref<com::sun::corba::se::spi::ior::ObjectId> getObjectId() { return call_method<"getObjectId", jni::ref<com::sun::corba::se::spi::ior::ObjectId>>(); }
	jni::ref<com::sun::corba::se::spi::ior::TaggedProfileTemplate> getTaggedProfileTemplate() { return call_method<"getTaggedProfileTemplate", jni::ref<com::sun::corba::se::spi::ior::TaggedProfileTemplate>>(); }
	jni::ref<com::sun::corba::se::spi::ior::ObjectKeyTemplate> getObjectKeyTemplate() { return call_method<"getObjectKeyTemplate", jni::ref<com::sun::corba::se::spi::ior::ObjectKeyTemplate>>(); }
	static jni::ref<com::sun::corba::se::impl::ior::iiop::IIOPProfileImpl> new_object(jni::ref<com::sun::corba::se::spi::orb::ORB> p1, jni::ref<com::sun::corba::se::spi::ior::ObjectKeyTemplate> p2, jni::ref<com::sun::corba::se::spi::ior::ObjectId> p3, jni::ref<com::sun::corba::se::spi::ior::iiop::IIOPProfileTemplate> p4) { return base_::new_object(p1, p2, p3, p4); }
	static jni::ref<com::sun::corba::se::impl::ior::iiop::IIOPProfileImpl> new_object(jni::ref<org::omg::CORBA_2_3::portable::InputStream> p1) { return base_::new_object(p1); }
	static jni::ref<com::sun::corba::se::impl::ior::iiop::IIOPProfileImpl> new_object(jni::ref<com::sun::corba::se::spi::orb::ORB> p1, jni::ref<org::omg::IOP::TaggedProfile> p2) { return base_::new_object(p1, p2); }
	void writeContents(jni::ref<org::omg::CORBA_2_3::portable::OutputStream> p1) { return call_method<"writeContents", void>(p1); }
	jint getId() { return call_method<"getId", jint>(); }
	jboolean isEquivalent(jni::ref<com::sun::corba::se::spi::ior::TaggedProfile> p1) { return call_method<"isEquivalent", jboolean>(p1); }
	jni::ref<com::sun::corba::se::spi::ior::ObjectKey> getObjectKey() { return call_method<"getObjectKey", jni::ref<com::sun::corba::se::spi::ior::ObjectKey>>(); }
	jni::ref<org::omg::IOP::TaggedProfile> getIOPProfile() { return call_method<"getIOPProfile", jni::ref<org::omg::IOP::TaggedProfile>>(); }
	jni::ref<java::lang::String> getCodebase() { return call_method<"getCodebase", jni::ref<java::lang::String>>(); }
	jni::ref<com::sun::corba::se::spi::orb::ORBVersion> getORBVersion() { return call_method<"getORBVersion", jni::ref<com::sun::corba::se::spi::orb::ORBVersion>>(); }
	jboolean isLocal() { return call_method<"isLocal", jboolean>(); }
	jni::ref<java::lang::Object> getServant() { return call_method<"getServant", jni::ref<java::lang::Object>>(); }
	jni::ref<com::sun::corba::se::spi::ior::iiop::GIOPVersion> getGIOPVersion() { return call_method<"getGIOPVersion", jni::ref<com::sun::corba::se::spi::ior::iiop::GIOPVersion>>(); }
	void makeImmutable() { return call_method<"makeImmutable", void>(); }

protected:

	IIOPProfileImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_IOR_IIOP_IIOPPROFILEIMPL
