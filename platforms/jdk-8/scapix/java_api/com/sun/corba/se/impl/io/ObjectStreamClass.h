// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_IO_OBJECTSTREAMCLASS_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_IO_OBJECTSTREAMCLASS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::impl::io { class ObjectStreamClass; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::impl::io::ObjectStreamClass>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/impl/io/ObjectStreamClass";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::io::Serializable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_IO_OBJECTSTREAMCLASS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_IO_OBJECTSTREAMCLASS)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_IO_OBJECTSTREAMCLASS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/corba/se/impl/io/ObjectStreamField.h>
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/omg/CORBA/ValueMember.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::impl::io::ObjectStreamClass : public jni::object_base<"com/sun/corba/se/impl/io/ObjectStreamClass",
	java::lang::Object,
	java::io::Serializable>
{
public:

	static jlong kDefaultUID() { return get_static_field<"kDefaultUID", jlong>(); }
	static jint CLASS_MASK() { return get_static_field<"CLASS_MASK", jint>(); }
	static jint FIELD_MASK() { return get_static_field<"FIELD_MASK", jint>(); }
	static jint METHOD_MASK() { return get_static_field<"METHOD_MASK", jint>(); }
	static jni::ref<jni::array<com::sun::corba::se::impl::io::ObjectStreamField>> NO_FIELDS() { return get_static_field<"NO_FIELDS", jni::ref<jni::array<com::sun::corba::se::impl::io::ObjectStreamField>>>(); }

	jni::ref<java::lang::String> getName() { return call_method<"getName", jni::ref<java::lang::String>>(); }
	static jlong getSerialVersionUID(jni::ref<java::lang::Class> p1) { return call_static_method<"getSerialVersionUID", jlong>(p1); }
	jlong getSerialVersionUID() { return call_method<"getSerialVersionUID", jlong>(); }
	jni::ref<java::lang::String> getSerialVersionUIDStr() { return call_method<"getSerialVersionUIDStr", jni::ref<java::lang::String>>(); }
	static jlong getActualSerialVersionUID(jni::ref<java::lang::Class> p1) { return call_static_method<"getActualSerialVersionUID", jlong>(p1); }
	jlong getActualSerialVersionUID() { return call_method<"getActualSerialVersionUID", jlong>(); }
	jni::ref<java::lang::String> getActualSerialVersionUIDStr() { return call_method<"getActualSerialVersionUIDStr", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::Class> forClass() { return call_method<"forClass", jni::ref<java::lang::Class>>(); }
	jni::ref<jni::array<com::sun::corba::se::impl::io::ObjectStreamField>> getFields() { return call_method<"getFields", jni::ref<jni::array<com::sun::corba::se::impl::io::ObjectStreamField>>>(); }
	jboolean hasField(jni::ref<org::omg::CORBA::ValueMember> p1) { return call_method<"hasField", jboolean>(p1); }
	jni::ref<com::sun::corba::se::impl::io::ObjectStreamField> getField(jni::ref<java::lang::String> p1) { return call_method<"getField", jni::ref<com::sun::corba::se::impl::io::ObjectStreamField>>(p1); }
	jni::ref<java::io::Serializable> writeReplace(jni::ref<java::io::Serializable> p1) { return call_method<"writeReplace", jni::ref<java::io::Serializable>>(p1); }
	jni::ref<java::lang::Object> readResolve(jni::ref<java::lang::Object> p1) { return call_method<"readResolve", jni::ref<java::lang::Object>>(p1); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getRMIIIOPOptionalDataRepId() { return call_method<"getRMIIIOPOptionalDataRepId", jni::ref<java::lang::String>>(); }

protected:

	ObjectStreamClass(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_IO_OBJECTSTREAMCLASS
