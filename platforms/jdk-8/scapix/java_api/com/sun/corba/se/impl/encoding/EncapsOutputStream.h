// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/corba/se/impl/encoding/CDROutputStream.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ENCODING_ENCAPSOUTPUTSTREAM_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ENCODING_ENCAPSOUTPUTSTREAM_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::impl::encoding { class EncapsOutputStream; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::impl::encoding::EncapsOutputStream>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/impl/encoding/EncapsOutputStream";
	using base_classes = std::tuple<scapix::java_api::com::sun::corba::se::impl::encoding::CDROutputStream>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ENCODING_ENCAPSOUTPUTSTREAM_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ENCODING_ENCAPSOUTPUTSTREAM)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ENCODING_ENCAPSOUTPUTSTREAM

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/corba/se/spi/ior/iiop/GIOPVersion.h>
#include <scapix/java_api/com/sun/corba/se/spi/orb/ORB.h>
#include <scapix/java_api/org/omg/CORBA/portable/InputStream.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::impl::encoding::EncapsOutputStream : public jni::object_base<"com/sun/corba/se/impl/encoding/EncapsOutputStream",
	com::sun::corba::se::impl::encoding::CDROutputStream>
{
public:

	static jni::ref<com::sun::corba::se::impl::encoding::EncapsOutputStream> new_object(jni::ref<com::sun::corba::se::spi::orb::ORB> p1) { return base_::new_object(p1); }
	static jni::ref<com::sun::corba::se::impl::encoding::EncapsOutputStream> new_object(jni::ref<com::sun::corba::se::spi::orb::ORB> p1, jni::ref<com::sun::corba::se::spi::ior::iiop::GIOPVersion> p2) { return base_::new_object(p1, p2); }
	static jni::ref<com::sun::corba::se::impl::encoding::EncapsOutputStream> new_object(jni::ref<com::sun::corba::se::spi::orb::ORB> p1, jboolean p2) { return base_::new_object(p1, p2); }
	static jni::ref<com::sun::corba::se::impl::encoding::EncapsOutputStream> new_object(jni::ref<com::sun::corba::se::spi::orb::ORB> p1, jni::ref<com::sun::corba::se::spi::ior::iiop::GIOPVersion> p2, jboolean p3) { return base_::new_object(p1, p2, p3); }
	jni::ref<org::omg::CORBA::portable::InputStream> create_input_stream() { return call_method<"create_input_stream", jni::ref<org::omg::CORBA::portable::InputStream>>(); }

protected:

	EncapsOutputStream(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ENCODING_ENCAPSOUTPUTSTREAM
