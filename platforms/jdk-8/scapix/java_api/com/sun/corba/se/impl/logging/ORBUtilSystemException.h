// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/corba/se/spi/logging/LogWrapperBase.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_LOGGING_ORBUTILSYSTEMEXCEPTION_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_LOGGING_ORBUTILSYSTEMEXCEPTION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::impl::logging { class ORBUtilSystemException; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::impl::logging::ORBUtilSystemException>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/impl/logging/ORBUtilSystemException";
	using base_classes = std::tuple<scapix::java_api::com::sun::corba::se::spi::logging::LogWrapperBase>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_LOGGING_ORBUTILSYSTEMEXCEPTION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_LOGGING_ORBUTILSYSTEMEXCEPTION)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_LOGGING_ORBUTILSYSTEMEXCEPTION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/corba/se/spi/orb/ORB.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/Throwable.h>
#include <scapix/java_api/java/util/logging/Logger.h>
#include <scapix/java_api/org/omg/CORBA/BAD_INV_ORDER.h>
#include <scapix/java_api/org/omg/CORBA/BAD_OPERATION.h>
#include <scapix/java_api/org/omg/CORBA/BAD_PARAM.h>
#include <scapix/java_api/org/omg/CORBA/BAD_TYPECODE.h>
#include <scapix/java_api/org/omg/CORBA/COMM_FAILURE.h>
#include <scapix/java_api/org/omg/CORBA/CompletionStatus.h>
#include <scapix/java_api/org/omg/CORBA/DATA_CONVERSION.h>
#include <scapix/java_api/org/omg/CORBA/INITIALIZE.h>
#include <scapix/java_api/org/omg/CORBA/INTERNAL.h>
#include <scapix/java_api/org/omg/CORBA/INV_OBJREF.h>
#include <scapix/java_api/org/omg/CORBA/MARSHAL.h>
#include <scapix/java_api/org/omg/CORBA/NO_IMPLEMENT.h>
#include <scapix/java_api/org/omg/CORBA/OBJECT_NOT_EXIST.h>
#include <scapix/java_api/org/omg/CORBA/OBJ_ADAPTER.h>
#include <scapix/java_api/org/omg/CORBA/TRANSIENT.h>
#include <scapix/java_api/org/omg/CORBA/UNKNOWN.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::impl::logging::ORBUtilSystemException : public jni::object_base<"com/sun/corba/se/impl/logging/ORBUtilSystemException",
	com::sun::corba::se::spi::logging::LogWrapperBase>
{
public:

	static jint ADAPTER_ID_NOT_AVAILABLE() { return get_static_field<"ADAPTER_ID_NOT_AVAILABLE", jint>(); }
	static jint SERVER_ID_NOT_AVAILABLE() { return get_static_field<"SERVER_ID_NOT_AVAILABLE", jint>(); }
	static jint ORB_ID_NOT_AVAILABLE() { return get_static_field<"ORB_ID_NOT_AVAILABLE", jint>(); }
	static jint OBJECT_ADAPTER_ID_NOT_AVAILABLE() { return get_static_field<"OBJECT_ADAPTER_ID_NOT_AVAILABLE", jint>(); }
	static jint CONNECTING_SERVANT() { return get_static_field<"CONNECTING_SERVANT", jint>(); }
	static jint EXTRACT_WRONG_TYPE() { return get_static_field<"EXTRACT_WRONG_TYPE", jint>(); }
	static jint EXTRACT_WRONG_TYPE_LIST() { return get_static_field<"EXTRACT_WRONG_TYPE_LIST", jint>(); }
	static jint BAD_STRING_BOUNDS() { return get_static_field<"BAD_STRING_BOUNDS", jint>(); }
	static jint INSERT_OBJECT_INCOMPATIBLE() { return get_static_field<"INSERT_OBJECT_INCOMPATIBLE", jint>(); }
	static jint INSERT_OBJECT_FAILED() { return get_static_field<"INSERT_OBJECT_FAILED", jint>(); }
	static jint EXTRACT_OBJECT_INCOMPATIBLE() { return get_static_field<"EXTRACT_OBJECT_INCOMPATIBLE", jint>(); }
	static jint FIXED_NOT_MATCH() { return get_static_field<"FIXED_NOT_MATCH", jint>(); }
	static jint FIXED_BAD_TYPECODE() { return get_static_field<"FIXED_BAD_TYPECODE", jint>(); }
	static jint SET_EXCEPTION_CALLED_NULL_ARGS() { return get_static_field<"SET_EXCEPTION_CALLED_NULL_ARGS", jint>(); }
	static jint SET_EXCEPTION_CALLED_BAD_TYPE() { return get_static_field<"SET_EXCEPTION_CALLED_BAD_TYPE", jint>(); }
	static jint CONTEXT_CALLED_OUT_OF_ORDER() { return get_static_field<"CONTEXT_CALLED_OUT_OF_ORDER", jint>(); }
	static jint BAD_ORB_CONFIGURATOR() { return get_static_field<"BAD_ORB_CONFIGURATOR", jint>(); }
	static jint ORB_CONFIGURATOR_ERROR() { return get_static_field<"ORB_CONFIGURATOR_ERROR", jint>(); }
	static jint ORB_DESTROYED() { return get_static_field<"ORB_DESTROYED", jint>(); }
	static jint NEGATIVE_BOUNDS() { return get_static_field<"NEGATIVE_BOUNDS", jint>(); }
	static jint EXTRACT_NOT_INITIALIZED() { return get_static_field<"EXTRACT_NOT_INITIALIZED", jint>(); }
	static jint EXTRACT_OBJECT_FAILED() { return get_static_field<"EXTRACT_OBJECT_FAILED", jint>(); }
	static jint METHOD_NOT_FOUND_IN_TIE() { return get_static_field<"METHOD_NOT_FOUND_IN_TIE", jint>(); }
	static jint CLASS_NOT_FOUND1() { return get_static_field<"CLASS_NOT_FOUND1", jint>(); }
	static jint CLASS_NOT_FOUND2() { return get_static_field<"CLASS_NOT_FOUND2", jint>(); }
	static jint CLASS_NOT_FOUND3() { return get_static_field<"CLASS_NOT_FOUND3", jint>(); }
	static jint GET_DELEGATE_SERVANT_NOT_ACTIVE() { return get_static_field<"GET_DELEGATE_SERVANT_NOT_ACTIVE", jint>(); }
	static jint GET_DELEGATE_WRONG_POLICY() { return get_static_field<"GET_DELEGATE_WRONG_POLICY", jint>(); }
	static jint SET_DELEGATE_REQUIRES_STUB() { return get_static_field<"SET_DELEGATE_REQUIRES_STUB", jint>(); }
	static jint GET_DELEGATE_REQUIRES_STUB() { return get_static_field<"GET_DELEGATE_REQUIRES_STUB", jint>(); }
	static jint GET_TYPE_IDS_REQUIRES_STUB() { return get_static_field<"GET_TYPE_IDS_REQUIRES_STUB", jint>(); }
	static jint GET_ORB_REQUIRES_STUB() { return get_static_field<"GET_ORB_REQUIRES_STUB", jint>(); }
	static jint CONNECT_REQUIRES_STUB() { return get_static_field<"CONNECT_REQUIRES_STUB", jint>(); }
	static jint IS_LOCAL_REQUIRES_STUB() { return get_static_field<"IS_LOCAL_REQUIRES_STUB", jint>(); }
	static jint REQUEST_REQUIRES_STUB() { return get_static_field<"REQUEST_REQUIRES_STUB", jint>(); }
	static jint BAD_ACTIVATE_TIE_CALL() { return get_static_field<"BAD_ACTIVATE_TIE_CALL", jint>(); }
	static jint IO_EXCEPTION_ON_CLOSE() { return get_static_field<"IO_EXCEPTION_ON_CLOSE", jint>(); }
	static jint NULL_PARAM() { return get_static_field<"NULL_PARAM", jint>(); }
	static jint UNABLE_FIND_VALUE_FACTORY() { return get_static_field<"UNABLE_FIND_VALUE_FACTORY", jint>(); }
	static jint ABSTRACT_FROM_NON_ABSTRACT() { return get_static_field<"ABSTRACT_FROM_NON_ABSTRACT", jint>(); }
	static jint INVALID_TAGGED_PROFILE() { return get_static_field<"INVALID_TAGGED_PROFILE", jint>(); }
	static jint OBJREF_FROM_FOREIGN_ORB() { return get_static_field<"OBJREF_FROM_FOREIGN_ORB", jint>(); }
	static jint LOCAL_OBJECT_NOT_ALLOWED() { return get_static_field<"LOCAL_OBJECT_NOT_ALLOWED", jint>(); }
	static jint NULL_OBJECT_REFERENCE() { return get_static_field<"NULL_OBJECT_REFERENCE", jint>(); }
	static jint COULD_NOT_LOAD_CLASS() { return get_static_field<"COULD_NOT_LOAD_CLASS", jint>(); }
	static jint BAD_URL() { return get_static_field<"BAD_URL", jint>(); }
	static jint FIELD_NOT_FOUND() { return get_static_field<"FIELD_NOT_FOUND", jint>(); }
	static jint ERROR_SETTING_FIELD() { return get_static_field<"ERROR_SETTING_FIELD", jint>(); }
	static jint BOUNDS_ERROR_IN_DII_REQUEST() { return get_static_field<"BOUNDS_ERROR_IN_DII_REQUEST", jint>(); }
	static jint PERSISTENT_SERVER_INIT_ERROR() { return get_static_field<"PERSISTENT_SERVER_INIT_ERROR", jint>(); }
	static jint COULD_NOT_CREATE_ARRAY() { return get_static_field<"COULD_NOT_CREATE_ARRAY", jint>(); }
	static jint COULD_NOT_SET_ARRAY() { return get_static_field<"COULD_NOT_SET_ARRAY", jint>(); }
	static jint ILLEGAL_BOOTSTRAP_OPERATION() { return get_static_field<"ILLEGAL_BOOTSTRAP_OPERATION", jint>(); }
	static jint BOOTSTRAP_RUNTIME_EXCEPTION() { return get_static_field<"BOOTSTRAP_RUNTIME_EXCEPTION", jint>(); }
	static jint BOOTSTRAP_EXCEPTION() { return get_static_field<"BOOTSTRAP_EXCEPTION", jint>(); }
	static jint STRING_EXPECTED() { return get_static_field<"STRING_EXPECTED", jint>(); }
	static jint INVALID_TYPECODE_KIND() { return get_static_field<"INVALID_TYPECODE_KIND", jint>(); }
	static jint SOCKET_FACTORY_AND_CONTACT_INFO_LIST_AT_SAME_TIME() { return get_static_field<"SOCKET_FACTORY_AND_CONTACT_INFO_LIST_AT_SAME_TIME", jint>(); }
	static jint ACCEPTORS_AND_LEGACY_SOCKET_FACTORY_AT_SAME_TIME() { return get_static_field<"ACCEPTORS_AND_LEGACY_SOCKET_FACTORY_AT_SAME_TIME", jint>(); }
	static jint BAD_ORB_FOR_SERVANT() { return get_static_field<"BAD_ORB_FOR_SERVANT", jint>(); }
	static jint INVALID_REQUEST_PARTITIONING_POLICY_VALUE() { return get_static_field<"INVALID_REQUEST_PARTITIONING_POLICY_VALUE", jint>(); }
	static jint INVALID_REQUEST_PARTITIONING_COMPONENT_VALUE() { return get_static_field<"INVALID_REQUEST_PARTITIONING_COMPONENT_VALUE", jint>(); }
	static jint INVALID_REQUEST_PARTITIONING_ID() { return get_static_field<"INVALID_REQUEST_PARTITIONING_ID", jint>(); }
	static jint ERROR_IN_SETTING_DYNAMIC_STUB_FACTORY_FACTORY() { return get_static_field<"ERROR_IN_SETTING_DYNAMIC_STUB_FACTORY_FACTORY", jint>(); }
	static jint DSIMETHOD_NOTCALLED() { return get_static_field<"DSIMETHOD_NOTCALLED", jint>(); }
	static jint ARGUMENTS_CALLED_MULTIPLE() { return get_static_field<"ARGUMENTS_CALLED_MULTIPLE", jint>(); }
	static jint ARGUMENTS_CALLED_AFTER_EXCEPTION() { return get_static_field<"ARGUMENTS_CALLED_AFTER_EXCEPTION", jint>(); }
	static jint ARGUMENTS_CALLED_NULL_ARGS() { return get_static_field<"ARGUMENTS_CALLED_NULL_ARGS", jint>(); }
	static jint ARGUMENTS_NOT_CALLED() { return get_static_field<"ARGUMENTS_NOT_CALLED", jint>(); }
	static jint SET_RESULT_CALLED_MULTIPLE() { return get_static_field<"SET_RESULT_CALLED_MULTIPLE", jint>(); }
	static jint SET_RESULT_AFTER_EXCEPTION() { return get_static_field<"SET_RESULT_AFTER_EXCEPTION", jint>(); }
	static jint SET_RESULT_CALLED_NULL_ARGS() { return get_static_field<"SET_RESULT_CALLED_NULL_ARGS", jint>(); }
	static jint BAD_REMOTE_TYPECODE() { return get_static_field<"BAD_REMOTE_TYPECODE", jint>(); }
	static jint UNRESOLVED_RECURSIVE_TYPECODE() { return get_static_field<"UNRESOLVED_RECURSIVE_TYPECODE", jint>(); }
	static jint CONNECT_FAILURE() { return get_static_field<"CONNECT_FAILURE", jint>(); }
	static jint CONNECTION_CLOSE_REBIND() { return get_static_field<"CONNECTION_CLOSE_REBIND", jint>(); }
	static jint WRITE_ERROR_SEND() { return get_static_field<"WRITE_ERROR_SEND", jint>(); }
	static jint GET_PROPERTIES_ERROR() { return get_static_field<"GET_PROPERTIES_ERROR", jint>(); }
	static jint BOOTSTRAP_SERVER_NOT_AVAIL() { return get_static_field<"BOOTSTRAP_SERVER_NOT_AVAIL", jint>(); }
	static jint INVOKE_ERROR() { return get_static_field<"INVOKE_ERROR", jint>(); }
	static jint DEFAULT_CREATE_SERVER_SOCKET_GIVEN_NON_IIOP_CLEAR_TEXT() { return get_static_field<"DEFAULT_CREATE_SERVER_SOCKET_GIVEN_NON_IIOP_CLEAR_TEXT", jint>(); }
	static jint CONNECTION_ABORT() { return get_static_field<"CONNECTION_ABORT", jint>(); }
	static jint CONNECTION_REBIND() { return get_static_field<"CONNECTION_REBIND", jint>(); }
	static jint RECV_MSG_ERROR() { return get_static_field<"RECV_MSG_ERROR", jint>(); }
	static jint IOEXCEPTION_WHEN_READING_CONNECTION() { return get_static_field<"IOEXCEPTION_WHEN_READING_CONNECTION", jint>(); }
	static jint SELECTION_KEY_INVALID() { return get_static_field<"SELECTION_KEY_INVALID", jint>(); }
	static jint EXCEPTION_IN_ACCEPT() { return get_static_field<"EXCEPTION_IN_ACCEPT", jint>(); }
	static jint SECURITY_EXCEPTION_IN_ACCEPT() { return get_static_field<"SECURITY_EXCEPTION_IN_ACCEPT", jint>(); }
	static jint TRANSPORT_READ_TIMEOUT_EXCEEDED() { return get_static_field<"TRANSPORT_READ_TIMEOUT_EXCEEDED", jint>(); }
	static jint CREATE_LISTENER_FAILED() { return get_static_field<"CREATE_LISTENER_FAILED", jint>(); }
	static jint BUFFER_READ_MANAGER_TIMEOUT() { return get_static_field<"BUFFER_READ_MANAGER_TIMEOUT", jint>(); }
	static jint BAD_STRINGIFIED_IOR_LEN() { return get_static_field<"BAD_STRINGIFIED_IOR_LEN", jint>(); }
	static jint BAD_STRINGIFIED_IOR() { return get_static_field<"BAD_STRINGIFIED_IOR", jint>(); }
	static jint BAD_MODIFIER() { return get_static_field<"BAD_MODIFIER", jint>(); }
	static jint CODESET_INCOMPATIBLE() { return get_static_field<"CODESET_INCOMPATIBLE", jint>(); }
	static jint BAD_HEX_DIGIT() { return get_static_field<"BAD_HEX_DIGIT", jint>(); }
	static jint BAD_UNICODE_PAIR() { return get_static_field<"BAD_UNICODE_PAIR", jint>(); }
	static jint BTC_RESULT_MORE_THAN_ONE_CHAR() { return get_static_field<"BTC_RESULT_MORE_THAN_ONE_CHAR", jint>(); }
	static jint BAD_CODESETS_FROM_CLIENT() { return get_static_field<"BAD_CODESETS_FROM_CLIENT", jint>(); }
	static jint INVALID_SINGLE_CHAR_CTB() { return get_static_field<"INVALID_SINGLE_CHAR_CTB", jint>(); }
	static jint BAD_GIOP_1_1_CTB() { return get_static_field<"BAD_GIOP_1_1_CTB", jint>(); }
	static jint BAD_SEQUENCE_BOUNDS() { return get_static_field<"BAD_SEQUENCE_BOUNDS", jint>(); }
	static jint ILLEGAL_SOCKET_FACTORY_TYPE() { return get_static_field<"ILLEGAL_SOCKET_FACTORY_TYPE", jint>(); }
	static jint BAD_CUSTOM_SOCKET_FACTORY() { return get_static_field<"BAD_CUSTOM_SOCKET_FACTORY", jint>(); }
	static jint FRAGMENT_SIZE_MINIMUM() { return get_static_field<"FRAGMENT_SIZE_MINIMUM", jint>(); }
	static jint FRAGMENT_SIZE_DIV() { return get_static_field<"FRAGMENT_SIZE_DIV", jint>(); }
	static jint ORB_INITIALIZER_FAILURE() { return get_static_field<"ORB_INITIALIZER_FAILURE", jint>(); }
	static jint ORB_INITIALIZER_TYPE() { return get_static_field<"ORB_INITIALIZER_TYPE", jint>(); }
	static jint ORB_INITIALREFERENCE_SYNTAX() { return get_static_field<"ORB_INITIALREFERENCE_SYNTAX", jint>(); }
	static jint ACCEPTOR_INSTANTIATION_FAILURE() { return get_static_field<"ACCEPTOR_INSTANTIATION_FAILURE", jint>(); }
	static jint ACCEPTOR_INSTANTIATION_TYPE_FAILURE() { return get_static_field<"ACCEPTOR_INSTANTIATION_TYPE_FAILURE", jint>(); }
	static jint ILLEGAL_CONTACT_INFO_LIST_FACTORY_TYPE() { return get_static_field<"ILLEGAL_CONTACT_INFO_LIST_FACTORY_TYPE", jint>(); }
	static jint BAD_CONTACT_INFO_LIST_FACTORY() { return get_static_field<"BAD_CONTACT_INFO_LIST_FACTORY", jint>(); }
	static jint ILLEGAL_IOR_TO_SOCKET_INFO_TYPE() { return get_static_field<"ILLEGAL_IOR_TO_SOCKET_INFO_TYPE", jint>(); }
	static jint BAD_CUSTOM_IOR_TO_SOCKET_INFO() { return get_static_field<"BAD_CUSTOM_IOR_TO_SOCKET_INFO", jint>(); }
	static jint ILLEGAL_IIOP_PRIMARY_TO_CONTACT_INFO_TYPE() { return get_static_field<"ILLEGAL_IIOP_PRIMARY_TO_CONTACT_INFO_TYPE", jint>(); }
	static jint BAD_CUSTOM_IIOP_PRIMARY_TO_CONTACT_INFO() { return get_static_field<"BAD_CUSTOM_IIOP_PRIMARY_TO_CONTACT_INFO", jint>(); }
	static jint BAD_CORBALOC_STRING() { return get_static_field<"BAD_CORBALOC_STRING", jint>(); }
	static jint NO_PROFILE_PRESENT() { return get_static_field<"NO_PROFILE_PRESENT", jint>(); }
	static jint CANNOT_CREATE_ORBID_DB() { return get_static_field<"CANNOT_CREATE_ORBID_DB", jint>(); }
	static jint CANNOT_READ_ORBID_DB() { return get_static_field<"CANNOT_READ_ORBID_DB", jint>(); }
	static jint CANNOT_WRITE_ORBID_DB() { return get_static_field<"CANNOT_WRITE_ORBID_DB", jint>(); }
	static jint GET_SERVER_PORT_CALLED_BEFORE_ENDPOINTS_INITIALIZED() { return get_static_field<"GET_SERVER_PORT_CALLED_BEFORE_ENDPOINTS_INITIALIZED", jint>(); }
	static jint PERSISTENT_SERVERPORT_NOT_SET() { return get_static_field<"PERSISTENT_SERVERPORT_NOT_SET", jint>(); }
	static jint PERSISTENT_SERVERID_NOT_SET() { return get_static_field<"PERSISTENT_SERVERID_NOT_SET", jint>(); }
	static jint NON_EXISTENT_ORBID() { return get_static_field<"NON_EXISTENT_ORBID", jint>(); }
	static jint NO_SERVER_SUBCONTRACT() { return get_static_field<"NO_SERVER_SUBCONTRACT", jint>(); }
	static jint SERVER_SC_TEMP_SIZE() { return get_static_field<"SERVER_SC_TEMP_SIZE", jint>(); }
	static jint NO_CLIENT_SC_CLASS() { return get_static_field<"NO_CLIENT_SC_CLASS", jint>(); }
	static jint SERVER_SC_NO_IIOP_PROFILE() { return get_static_field<"SERVER_SC_NO_IIOP_PROFILE", jint>(); }
	static jint GET_SYSTEM_EX_RETURNED_NULL() { return get_static_field<"GET_SYSTEM_EX_RETURNED_NULL", jint>(); }
	static jint PEEKSTRING_FAILED() { return get_static_field<"PEEKSTRING_FAILED", jint>(); }
	static jint GET_LOCAL_HOST_FAILED() { return get_static_field<"GET_LOCAL_HOST_FAILED", jint>(); }
	static jint BAD_LOCATE_REQUEST_STATUS() { return get_static_field<"BAD_LOCATE_REQUEST_STATUS", jint>(); }
	static jint STRINGIFY_WRITE_ERROR() { return get_static_field<"STRINGIFY_WRITE_ERROR", jint>(); }
	static jint BAD_GIOP_REQUEST_TYPE() { return get_static_field<"BAD_GIOP_REQUEST_TYPE", jint>(); }
	static jint ERROR_UNMARSHALING_USEREXC() { return get_static_field<"ERROR_UNMARSHALING_USEREXC", jint>(); }
	static jint RequestDispatcherRegistry_ERROR() { return get_static_field<"RequestDispatcherRegistry_ERROR", jint>(); }
	static jint LOCATIONFORWARD_ERROR() { return get_static_field<"LOCATIONFORWARD_ERROR", jint>(); }
	static jint WRONG_CLIENTSC() { return get_static_field<"WRONG_CLIENTSC", jint>(); }
	static jint BAD_SERVANT_READ_OBJECT() { return get_static_field<"BAD_SERVANT_READ_OBJECT", jint>(); }
	static jint MULT_IIOP_PROF_NOT_SUPPORTED() { return get_static_field<"MULT_IIOP_PROF_NOT_SUPPORTED", jint>(); }
	static jint GIOP_MAGIC_ERROR() { return get_static_field<"GIOP_MAGIC_ERROR", jint>(); }
	static jint GIOP_VERSION_ERROR() { return get_static_field<"GIOP_VERSION_ERROR", jint>(); }
	static jint ILLEGAL_REPLY_STATUS() { return get_static_field<"ILLEGAL_REPLY_STATUS", jint>(); }
	static jint ILLEGAL_GIOP_MSG_TYPE() { return get_static_field<"ILLEGAL_GIOP_MSG_TYPE", jint>(); }
	static jint FRAGMENTATION_DISALLOWED() { return get_static_field<"FRAGMENTATION_DISALLOWED", jint>(); }
	static jint BAD_REPLYSTATUS() { return get_static_field<"BAD_REPLYSTATUS", jint>(); }
	static jint CTB_CONVERTER_FAILURE() { return get_static_field<"CTB_CONVERTER_FAILURE", jint>(); }
	static jint BTC_CONVERTER_FAILURE() { return get_static_field<"BTC_CONVERTER_FAILURE", jint>(); }
	static jint WCHAR_ARRAY_UNSUPPORTED_ENCODING() { return get_static_field<"WCHAR_ARRAY_UNSUPPORTED_ENCODING", jint>(); }
	static jint ILLEGAL_TARGET_ADDRESS_DISPOSITION() { return get_static_field<"ILLEGAL_TARGET_ADDRESS_DISPOSITION", jint>(); }
	static jint NULL_REPLY_IN_GET_ADDR_DISPOSITION() { return get_static_field<"NULL_REPLY_IN_GET_ADDR_DISPOSITION", jint>(); }
	static jint ORB_TARGET_ADDR_PREFERENCE_IN_EXTRACT_OBJECTKEY_INVALID() { return get_static_field<"ORB_TARGET_ADDR_PREFERENCE_IN_EXTRACT_OBJECTKEY_INVALID", jint>(); }
	static jint INVALID_ISSTREAMED_TCKIND() { return get_static_field<"INVALID_ISSTREAMED_TCKIND", jint>(); }
	static jint INVALID_JDK1_3_1_PATCH_LEVEL() { return get_static_field<"INVALID_JDK1_3_1_PATCH_LEVEL", jint>(); }
	static jint SVCCTX_UNMARSHAL_ERROR() { return get_static_field<"SVCCTX_UNMARSHAL_ERROR", jint>(); }
	static jint NULL_IOR() { return get_static_field<"NULL_IOR", jint>(); }
	static jint UNSUPPORTED_GIOP_VERSION() { return get_static_field<"UNSUPPORTED_GIOP_VERSION", jint>(); }
	static jint APPLICATION_EXCEPTION_IN_SPECIAL_METHOD() { return get_static_field<"APPLICATION_EXCEPTION_IN_SPECIAL_METHOD", jint>(); }
	static jint STATEMENT_NOT_REACHABLE1() { return get_static_field<"STATEMENT_NOT_REACHABLE1", jint>(); }
	static jint STATEMENT_NOT_REACHABLE2() { return get_static_field<"STATEMENT_NOT_REACHABLE2", jint>(); }
	static jint STATEMENT_NOT_REACHABLE3() { return get_static_field<"STATEMENT_NOT_REACHABLE3", jint>(); }
	static jint STATEMENT_NOT_REACHABLE4() { return get_static_field<"STATEMENT_NOT_REACHABLE4", jint>(); }
	static jint STATEMENT_NOT_REACHABLE5() { return get_static_field<"STATEMENT_NOT_REACHABLE5", jint>(); }
	static jint STATEMENT_NOT_REACHABLE6() { return get_static_field<"STATEMENT_NOT_REACHABLE6", jint>(); }
	static jint UNEXPECTED_DII_EXCEPTION() { return get_static_field<"UNEXPECTED_DII_EXCEPTION", jint>(); }
	static jint METHOD_SHOULD_NOT_BE_CALLED() { return get_static_field<"METHOD_SHOULD_NOT_BE_CALLED", jint>(); }
	static jint CANCEL_NOT_SUPPORTED() { return get_static_field<"CANCEL_NOT_SUPPORTED", jint>(); }
	static jint EMPTY_STACK_RUN_SERVANT_POST_INVOKE() { return get_static_field<"EMPTY_STACK_RUN_SERVANT_POST_INVOKE", jint>(); }
	static jint PROBLEM_WITH_EXCEPTION_TYPECODE() { return get_static_field<"PROBLEM_WITH_EXCEPTION_TYPECODE", jint>(); }
	static jint ILLEGAL_SUBCONTRACT_ID() { return get_static_field<"ILLEGAL_SUBCONTRACT_ID", jint>(); }
	static jint BAD_SYSTEM_EXCEPTION_IN_LOCATE_REPLY() { return get_static_field<"BAD_SYSTEM_EXCEPTION_IN_LOCATE_REPLY", jint>(); }
	static jint BAD_SYSTEM_EXCEPTION_IN_REPLY() { return get_static_field<"BAD_SYSTEM_EXCEPTION_IN_REPLY", jint>(); }
	static jint BAD_COMPLETION_STATUS_IN_LOCATE_REPLY() { return get_static_field<"BAD_COMPLETION_STATUS_IN_LOCATE_REPLY", jint>(); }
	static jint BAD_COMPLETION_STATUS_IN_REPLY() { return get_static_field<"BAD_COMPLETION_STATUS_IN_REPLY", jint>(); }
	static jint BADKIND_CANNOT_OCCUR() { return get_static_field<"BADKIND_CANNOT_OCCUR", jint>(); }
	static jint ERROR_RESOLVING_ALIAS() { return get_static_field<"ERROR_RESOLVING_ALIAS", jint>(); }
	static jint TK_LONG_DOUBLE_NOT_SUPPORTED() { return get_static_field<"TK_LONG_DOUBLE_NOT_SUPPORTED", jint>(); }
	static jint TYPECODE_NOT_SUPPORTED() { return get_static_field<"TYPECODE_NOT_SUPPORTED", jint>(); }
	static jint BOUNDS_CANNOT_OCCUR() { return get_static_field<"BOUNDS_CANNOT_OCCUR", jint>(); }
	static jint NUM_INVOCATIONS_ALREADY_ZERO() { return get_static_field<"NUM_INVOCATIONS_ALREADY_ZERO", jint>(); }
	static jint ERROR_INIT_BADSERVERIDHANDLER() { return get_static_field<"ERROR_INIT_BADSERVERIDHANDLER", jint>(); }
	static jint NO_TOA() { return get_static_field<"NO_TOA", jint>(); }
	static jint NO_POA() { return get_static_field<"NO_POA", jint>(); }
	static jint INVOCATION_INFO_STACK_EMPTY() { return get_static_field<"INVOCATION_INFO_STACK_EMPTY", jint>(); }
	static jint BAD_CODE_SET_STRING() { return get_static_field<"BAD_CODE_SET_STRING", jint>(); }
	static jint UNKNOWN_NATIVE_CODESET() { return get_static_field<"UNKNOWN_NATIVE_CODESET", jint>(); }
	static jint UNKNOWN_CONVERSION_CODE_SET() { return get_static_field<"UNKNOWN_CONVERSION_CODE_SET", jint>(); }
	static jint INVALID_CODE_SET_NUMBER() { return get_static_field<"INVALID_CODE_SET_NUMBER", jint>(); }
	static jint INVALID_CODE_SET_STRING() { return get_static_field<"INVALID_CODE_SET_STRING", jint>(); }
	static jint INVALID_CTB_CONVERTER_NAME() { return get_static_field<"INVALID_CTB_CONVERTER_NAME", jint>(); }
	static jint INVALID_BTC_CONVERTER_NAME() { return get_static_field<"INVALID_BTC_CONVERTER_NAME", jint>(); }
	static jint COULD_NOT_DUPLICATE_CDR_INPUT_STREAM() { return get_static_field<"COULD_NOT_DUPLICATE_CDR_INPUT_STREAM", jint>(); }
	static jint BOOTSTRAP_APPLICATION_EXCEPTION() { return get_static_field<"BOOTSTRAP_APPLICATION_EXCEPTION", jint>(); }
	static jint DUPLICATE_INDIRECTION_OFFSET() { return get_static_field<"DUPLICATE_INDIRECTION_OFFSET", jint>(); }
	static jint BAD_MESSAGE_TYPE_FOR_CANCEL() { return get_static_field<"BAD_MESSAGE_TYPE_FOR_CANCEL", jint>(); }
	static jint DUPLICATE_EXCEPTION_DETAIL_MESSAGE() { return get_static_field<"DUPLICATE_EXCEPTION_DETAIL_MESSAGE", jint>(); }
	static jint BAD_EXCEPTION_DETAIL_MESSAGE_SERVICE_CONTEXT_TYPE() { return get_static_field<"BAD_EXCEPTION_DETAIL_MESSAGE_SERVICE_CONTEXT_TYPE", jint>(); }
	static jint UNEXPECTED_DIRECT_BYTE_BUFFER_WITH_NON_CHANNEL_SOCKET() { return get_static_field<"UNEXPECTED_DIRECT_BYTE_BUFFER_WITH_NON_CHANNEL_SOCKET", jint>(); }
	static jint UNEXPECTED_NON_DIRECT_BYTE_BUFFER_WITH_CHANNEL_SOCKET() { return get_static_field<"UNEXPECTED_NON_DIRECT_BYTE_BUFFER_WITH_CHANNEL_SOCKET", jint>(); }
	static jint INVALID_CONTACT_INFO_LIST_ITERATOR_FAILURE_EXCEPTION() { return get_static_field<"INVALID_CONTACT_INFO_LIST_ITERATOR_FAILURE_EXCEPTION", jint>(); }
	static jint REMARSHAL_WITH_NOWHERE_TO_GO() { return get_static_field<"REMARSHAL_WITH_NOWHERE_TO_GO", jint>(); }
	static jint EXCEPTION_WHEN_SENDING_CLOSE_CONNECTION() { return get_static_field<"EXCEPTION_WHEN_SENDING_CLOSE_CONNECTION", jint>(); }
	static jint INVOCATION_ERROR_IN_REFLECTIVE_TIE() { return get_static_field<"INVOCATION_ERROR_IN_REFLECTIVE_TIE", jint>(); }
	static jint BAD_HELPER_WRITE_METHOD() { return get_static_field<"BAD_HELPER_WRITE_METHOD", jint>(); }
	static jint BAD_HELPER_READ_METHOD() { return get_static_field<"BAD_HELPER_READ_METHOD", jint>(); }
	static jint BAD_HELPER_ID_METHOD() { return get_static_field<"BAD_HELPER_ID_METHOD", jint>(); }
	static jint WRITE_UNDECLARED_EXCEPTION() { return get_static_field<"WRITE_UNDECLARED_EXCEPTION", jint>(); }
	static jint READ_UNDECLARED_EXCEPTION() { return get_static_field<"READ_UNDECLARED_EXCEPTION", jint>(); }
	static jint UNABLE_TO_SET_SOCKET_FACTORY_ORB() { return get_static_field<"UNABLE_TO_SET_SOCKET_FACTORY_ORB", jint>(); }
	static jint UNEXPECTED_EXCEPTION() { return get_static_field<"UNEXPECTED_EXCEPTION", jint>(); }
	static jint NO_INVOCATION_HANDLER() { return get_static_field<"NO_INVOCATION_HANDLER", jint>(); }
	static jint INVALID_BUFF_MGR_STRATEGY() { return get_static_field<"INVALID_BUFF_MGR_STRATEGY", jint>(); }
	static jint JAVA_STREAM_INIT_FAILED() { return get_static_field<"JAVA_STREAM_INIT_FAILED", jint>(); }
	static jint DUPLICATE_ORB_VERSION_SERVICE_CONTEXT() { return get_static_field<"DUPLICATE_ORB_VERSION_SERVICE_CONTEXT", jint>(); }
	static jint DUPLICATE_SENDING_CONTEXT_SERVICE_CONTEXT() { return get_static_field<"DUPLICATE_SENDING_CONTEXT_SERVICE_CONTEXT", jint>(); }
	static jint WORK_QUEUE_THREAD_INTERRUPTED() { return get_static_field<"WORK_QUEUE_THREAD_INTERRUPTED", jint>(); }
	static jint WORKER_THREAD_CREATED() { return get_static_field<"WORKER_THREAD_CREATED", jint>(); }
	static jint WORKER_THREAD_THROWABLE_FROM_REQUEST_WORK() { return get_static_field<"WORKER_THREAD_THROWABLE_FROM_REQUEST_WORK", jint>(); }
	static jint WORKER_THREAD_NOT_NEEDED() { return get_static_field<"WORKER_THREAD_NOT_NEEDED", jint>(); }
	static jint WORKER_THREAD_DO_WORK_THROWABLE() { return get_static_field<"WORKER_THREAD_DO_WORK_THROWABLE", jint>(); }
	static jint WORKER_THREAD_CAUGHT_UNEXPECTED_THROWABLE() { return get_static_field<"WORKER_THREAD_CAUGHT_UNEXPECTED_THROWABLE", jint>(); }
	static jint WORKER_THREAD_CREATION_FAILURE() { return get_static_field<"WORKER_THREAD_CREATION_FAILURE", jint>(); }
	static jint WORKER_THREAD_SET_NAME_FAILURE() { return get_static_field<"WORKER_THREAD_SET_NAME_FAILURE", jint>(); }
	static jint WORK_QUEUE_REQUEST_WORK_NO_WORK_FOUND() { return get_static_field<"WORK_QUEUE_REQUEST_WORK_NO_WORK_FOUND", jint>(); }
	static jint THREAD_POOL_CLOSE_ERROR() { return get_static_field<"THREAD_POOL_CLOSE_ERROR", jint>(); }
	static jint THREAD_GROUP_IS_DESTROYED() { return get_static_field<"THREAD_GROUP_IS_DESTROYED", jint>(); }
	static jint THREAD_GROUP_HAS_ACTIVE_THREADS_IN_CLOSE() { return get_static_field<"THREAD_GROUP_HAS_ACTIVE_THREADS_IN_CLOSE", jint>(); }
	static jint THREAD_GROUP_HAS_SUB_GROUPS_IN_CLOSE() { return get_static_field<"THREAD_GROUP_HAS_SUB_GROUPS_IN_CLOSE", jint>(); }
	static jint THREAD_GROUP_DESTROY_FAILED() { return get_static_field<"THREAD_GROUP_DESTROY_FAILED", jint>(); }
	static jint INTERRUPTED_JOIN_CALL_WHILE_CLOSING_THREAD_POOL() { return get_static_field<"INTERRUPTED_JOIN_CALL_WHILE_CLOSING_THREAD_POOL", jint>(); }
	static jint CHUNK_OVERFLOW() { return get_static_field<"CHUNK_OVERFLOW", jint>(); }
	static jint UNEXPECTED_EOF() { return get_static_field<"UNEXPECTED_EOF", jint>(); }
	static jint READ_OBJECT_EXCEPTION() { return get_static_field<"READ_OBJECT_EXCEPTION", jint>(); }
	static jint CHARACTER_OUTOFRANGE() { return get_static_field<"CHARACTER_OUTOFRANGE", jint>(); }
	static jint DSI_RESULT_EXCEPTION() { return get_static_field<"DSI_RESULT_EXCEPTION", jint>(); }
	static jint IIOPINPUTSTREAM_GROW() { return get_static_field<"IIOPINPUTSTREAM_GROW", jint>(); }
	static jint END_OF_STREAM() { return get_static_field<"END_OF_STREAM", jint>(); }
	static jint INVALID_OBJECT_KEY() { return get_static_field<"INVALID_OBJECT_KEY", jint>(); }
	static jint MALFORMED_URL() { return get_static_field<"MALFORMED_URL", jint>(); }
	static jint VALUEHANDLER_READ_ERROR() { return get_static_field<"VALUEHANDLER_READ_ERROR", jint>(); }
	static jint VALUEHANDLER_READ_EXCEPTION() { return get_static_field<"VALUEHANDLER_READ_EXCEPTION", jint>(); }
	static jint BAD_KIND() { return get_static_field<"BAD_KIND", jint>(); }
	static jint CNFE_READ_CLASS() { return get_static_field<"CNFE_READ_CLASS", jint>(); }
	static jint BAD_REP_ID_INDIRECTION() { return get_static_field<"BAD_REP_ID_INDIRECTION", jint>(); }
	static jint BAD_CODEBASE_INDIRECTION() { return get_static_field<"BAD_CODEBASE_INDIRECTION", jint>(); }
	static jint UNKNOWN_CODESET() { return get_static_field<"UNKNOWN_CODESET", jint>(); }
	static jint WCHAR_DATA_IN_GIOP_1_0() { return get_static_field<"WCHAR_DATA_IN_GIOP_1_0", jint>(); }
	static jint NEGATIVE_STRING_LENGTH() { return get_static_field<"NEGATIVE_STRING_LENGTH", jint>(); }
	static jint EXPECTED_TYPE_NULL_AND_NO_REP_ID() { return get_static_field<"EXPECTED_TYPE_NULL_AND_NO_REP_ID", jint>(); }
	static jint READ_VALUE_AND_NO_REP_ID() { return get_static_field<"READ_VALUE_AND_NO_REP_ID", jint>(); }
	static jint UNEXPECTED_ENCLOSING_VALUETYPE() { return get_static_field<"UNEXPECTED_ENCLOSING_VALUETYPE", jint>(); }
	static jint POSITIVE_END_TAG() { return get_static_field<"POSITIVE_END_TAG", jint>(); }
	static jint NULL_OUT_CALL() { return get_static_field<"NULL_OUT_CALL", jint>(); }
	static jint WRITE_LOCAL_OBJECT() { return get_static_field<"WRITE_LOCAL_OBJECT", jint>(); }
	static jint BAD_INSERTOBJ_PARAM() { return get_static_field<"BAD_INSERTOBJ_PARAM", jint>(); }
	static jint CUSTOM_WRAPPER_WITH_CODEBASE() { return get_static_field<"CUSTOM_WRAPPER_WITH_CODEBASE", jint>(); }
	static jint CUSTOM_WRAPPER_INDIRECTION() { return get_static_field<"CUSTOM_WRAPPER_INDIRECTION", jint>(); }
	static jint CUSTOM_WRAPPER_NOT_SINGLE_REPID() { return get_static_field<"CUSTOM_WRAPPER_NOT_SINGLE_REPID", jint>(); }
	static jint BAD_VALUE_TAG() { return get_static_field<"BAD_VALUE_TAG", jint>(); }
	static jint BAD_TYPECODE_FOR_CUSTOM_VALUE() { return get_static_field<"BAD_TYPECODE_FOR_CUSTOM_VALUE", jint>(); }
	static jint ERROR_INVOKING_HELPER_WRITE() { return get_static_field<"ERROR_INVOKING_HELPER_WRITE", jint>(); }
	static jint BAD_DIGIT_IN_FIXED() { return get_static_field<"BAD_DIGIT_IN_FIXED", jint>(); }
	static jint REF_TYPE_INDIR_TYPE() { return get_static_field<"REF_TYPE_INDIR_TYPE", jint>(); }
	static jint BAD_RESERVED_LENGTH() { return get_static_field<"BAD_RESERVED_LENGTH", jint>(); }
	static jint NULL_NOT_ALLOWED() { return get_static_field<"NULL_NOT_ALLOWED", jint>(); }
	static jint UNION_DISCRIMINATOR_ERROR() { return get_static_field<"UNION_DISCRIMINATOR_ERROR", jint>(); }
	static jint CANNOT_MARSHAL_NATIVE() { return get_static_field<"CANNOT_MARSHAL_NATIVE", jint>(); }
	static jint CANNOT_MARSHAL_BAD_TCKIND() { return get_static_field<"CANNOT_MARSHAL_BAD_TCKIND", jint>(); }
	static jint INVALID_INDIRECTION() { return get_static_field<"INVALID_INDIRECTION", jint>(); }
	static jint INDIRECTION_NOT_FOUND() { return get_static_field<"INDIRECTION_NOT_FOUND", jint>(); }
	static jint RECURSIVE_TYPECODE_ERROR() { return get_static_field<"RECURSIVE_TYPECODE_ERROR", jint>(); }
	static jint INVALID_SIMPLE_TYPECODE() { return get_static_field<"INVALID_SIMPLE_TYPECODE", jint>(); }
	static jint INVALID_COMPLEX_TYPECODE() { return get_static_field<"INVALID_COMPLEX_TYPECODE", jint>(); }
	static jint INVALID_TYPECODE_KIND_MARSHAL() { return get_static_field<"INVALID_TYPECODE_KIND_MARSHAL", jint>(); }
	static jint UNEXPECTED_UNION_DEFAULT() { return get_static_field<"UNEXPECTED_UNION_DEFAULT", jint>(); }
	static jint ILLEGAL_UNION_DISCRIMINATOR_TYPE() { return get_static_field<"ILLEGAL_UNION_DISCRIMINATOR_TYPE", jint>(); }
	static jint COULD_NOT_SKIP_BYTES() { return get_static_field<"COULD_NOT_SKIP_BYTES", jint>(); }
	static jint BAD_CHUNK_LENGTH() { return get_static_field<"BAD_CHUNK_LENGTH", jint>(); }
	static jint UNABLE_TO_LOCATE_REP_ID_ARRAY() { return get_static_field<"UNABLE_TO_LOCATE_REP_ID_ARRAY", jint>(); }
	static jint BAD_FIXED() { return get_static_field<"BAD_FIXED", jint>(); }
	static jint READ_OBJECT_LOAD_CLASS_FAILURE() { return get_static_field<"READ_OBJECT_LOAD_CLASS_FAILURE", jint>(); }
	static jint COULD_NOT_INSTANTIATE_HELPER() { return get_static_field<"COULD_NOT_INSTANTIATE_HELPER", jint>(); }
	static jint BAD_TOA_OAID() { return get_static_field<"BAD_TOA_OAID", jint>(); }
	static jint COULD_NOT_INVOKE_HELPER_READ_METHOD() { return get_static_field<"COULD_NOT_INVOKE_HELPER_READ_METHOD", jint>(); }
	static jint COULD_NOT_FIND_CLASS() { return get_static_field<"COULD_NOT_FIND_CLASS", jint>(); }
	static jint BAD_ARGUMENTS_NVLIST() { return get_static_field<"BAD_ARGUMENTS_NVLIST", jint>(); }
	static jint STUB_CREATE_ERROR() { return get_static_field<"STUB_CREATE_ERROR", jint>(); }
	static jint JAVA_SERIALIZATION_EXCEPTION() { return get_static_field<"JAVA_SERIALIZATION_EXCEPTION", jint>(); }
	static jint GENERIC_NO_IMPL() { return get_static_field<"GENERIC_NO_IMPL", jint>(); }
	static jint CONTEXT_NOT_IMPLEMENTED() { return get_static_field<"CONTEXT_NOT_IMPLEMENTED", jint>(); }
	static jint GETINTERFACE_NOT_IMPLEMENTED() { return get_static_field<"GETINTERFACE_NOT_IMPLEMENTED", jint>(); }
	static jint SEND_DEFERRED_NOTIMPLEMENTED() { return get_static_field<"SEND_DEFERRED_NOTIMPLEMENTED", jint>(); }
	static jint LONG_DOUBLE_NOT_IMPLEMENTED() { return get_static_field<"LONG_DOUBLE_NOT_IMPLEMENTED", jint>(); }
	static jint NO_SERVER_SC_IN_DISPATCH() { return get_static_field<"NO_SERVER_SC_IN_DISPATCH", jint>(); }
	static jint ORB_CONNECT_ERROR() { return get_static_field<"ORB_CONNECT_ERROR", jint>(); }
	static jint ADAPTER_INACTIVE_IN_ACTIVATION() { return get_static_field<"ADAPTER_INACTIVE_IN_ACTIVATION", jint>(); }
	static jint LOCATE_UNKNOWN_OBJECT() { return get_static_field<"LOCATE_UNKNOWN_OBJECT", jint>(); }
	static jint BAD_SERVER_ID() { return get_static_field<"BAD_SERVER_ID", jint>(); }
	static jint BAD_SKELETON() { return get_static_field<"BAD_SKELETON", jint>(); }
	static jint SERVANT_NOT_FOUND() { return get_static_field<"SERVANT_NOT_FOUND", jint>(); }
	static jint NO_OBJECT_ADAPTER_FACTORY() { return get_static_field<"NO_OBJECT_ADAPTER_FACTORY", jint>(); }
	static jint BAD_ADAPTER_ID() { return get_static_field<"BAD_ADAPTER_ID", jint>(); }
	static jint DYN_ANY_DESTROYED() { return get_static_field<"DYN_ANY_DESTROYED", jint>(); }
	static jint REQUEST_CANCELED() { return get_static_field<"REQUEST_CANCELED", jint>(); }
	static jint UNKNOWN_CORBA_EXC() { return get_static_field<"UNKNOWN_CORBA_EXC", jint>(); }
	static jint RUNTIMEEXCEPTION() { return get_static_field<"RUNTIMEEXCEPTION", jint>(); }
	static jint UNKNOWN_SERVER_ERROR() { return get_static_field<"UNKNOWN_SERVER_ERROR", jint>(); }
	static jint UNKNOWN_DSI_SYSEX() { return get_static_field<"UNKNOWN_DSI_SYSEX", jint>(); }
	static jint UNKNOWN_SYSEX() { return get_static_field<"UNKNOWN_SYSEX", jint>(); }
	static jint WRONG_INTERFACE_DEF() { return get_static_field<"WRONG_INTERFACE_DEF", jint>(); }
	static jint NO_INTERFACE_DEF_STUB() { return get_static_field<"NO_INTERFACE_DEF_STUB", jint>(); }
	static jint UNKNOWN_EXCEPTION_IN_DISPATCH() { return get_static_field<"UNKNOWN_EXCEPTION_IN_DISPATCH", jint>(); }

	static jni::ref<com::sun::corba::se::impl::logging::ORBUtilSystemException> new_object(jni::ref<java::util::logging::Logger> p1) { return base_::new_object(p1); }
	static jni::ref<com::sun::corba::se::impl::logging::ORBUtilSystemException> get(jni::ref<com::sun::corba::se::spi::orb::ORB> p1, jni::ref<java::lang::String> p2) { return call_static_method<"get", jni::ref<com::sun::corba::se::impl::logging::ORBUtilSystemException>>(p1, p2); }
	static jni::ref<com::sun::corba::se::impl::logging::ORBUtilSystemException> get(jni::ref<java::lang::String> p1) { return call_static_method<"get", jni::ref<com::sun::corba::se::impl::logging::ORBUtilSystemException>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> adapterIdNotAvailable(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"adapterIdNotAvailable", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> adapterIdNotAvailable(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"adapterIdNotAvailable", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> adapterIdNotAvailable(jni::ref<java::lang::Throwable> p1) { return call_method<"adapterIdNotAvailable", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> adapterIdNotAvailable() { return call_method<"adapterIdNotAvailable", jni::ref<org::omg::CORBA::BAD_OPERATION>>(); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> serverIdNotAvailable(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"serverIdNotAvailable", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> serverIdNotAvailable(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"serverIdNotAvailable", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> serverIdNotAvailable(jni::ref<java::lang::Throwable> p1) { return call_method<"serverIdNotAvailable", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> serverIdNotAvailable() { return call_method<"serverIdNotAvailable", jni::ref<org::omg::CORBA::BAD_OPERATION>>(); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> orbIdNotAvailable(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"orbIdNotAvailable", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> orbIdNotAvailable(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"orbIdNotAvailable", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> orbIdNotAvailable(jni::ref<java::lang::Throwable> p1) { return call_method<"orbIdNotAvailable", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> orbIdNotAvailable() { return call_method<"orbIdNotAvailable", jni::ref<org::omg::CORBA::BAD_OPERATION>>(); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> objectAdapterIdNotAvailable(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"objectAdapterIdNotAvailable", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> objectAdapterIdNotAvailable(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"objectAdapterIdNotAvailable", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> objectAdapterIdNotAvailable(jni::ref<java::lang::Throwable> p1) { return call_method<"objectAdapterIdNotAvailable", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> objectAdapterIdNotAvailable() { return call_method<"objectAdapterIdNotAvailable", jni::ref<org::omg::CORBA::BAD_OPERATION>>(); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> connectingServant(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"connectingServant", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> connectingServant(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"connectingServant", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> connectingServant(jni::ref<java::lang::Throwable> p1) { return call_method<"connectingServant", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> connectingServant() { return call_method<"connectingServant", jni::ref<org::omg::CORBA::BAD_OPERATION>>(); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> extractWrongType(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"extractWrongType", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> extractWrongType(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"extractWrongType", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> extractWrongType(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"extractWrongType", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> extractWrongType(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2) { return call_method<"extractWrongType", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> extractWrongTypeList(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"extractWrongTypeList", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> extractWrongTypeList(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"extractWrongTypeList", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> extractWrongTypeList(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"extractWrongTypeList", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> extractWrongTypeList(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2) { return call_method<"extractWrongTypeList", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> badStringBounds(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"badStringBounds", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> badStringBounds(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"badStringBounds", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> badStringBounds(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"badStringBounds", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> badStringBounds(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2) { return call_method<"badStringBounds", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> insertObjectIncompatible(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"insertObjectIncompatible", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> insertObjectIncompatible(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"insertObjectIncompatible", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> insertObjectIncompatible(jni::ref<java::lang::Throwable> p1) { return call_method<"insertObjectIncompatible", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> insertObjectIncompatible() { return call_method<"insertObjectIncompatible", jni::ref<org::omg::CORBA::BAD_OPERATION>>(); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> insertObjectFailed(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"insertObjectFailed", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> insertObjectFailed(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"insertObjectFailed", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> insertObjectFailed(jni::ref<java::lang::Throwable> p1) { return call_method<"insertObjectFailed", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> insertObjectFailed() { return call_method<"insertObjectFailed", jni::ref<org::omg::CORBA::BAD_OPERATION>>(); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> extractObjectIncompatible(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"extractObjectIncompatible", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> extractObjectIncompatible(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"extractObjectIncompatible", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> extractObjectIncompatible(jni::ref<java::lang::Throwable> p1) { return call_method<"extractObjectIncompatible", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> extractObjectIncompatible() { return call_method<"extractObjectIncompatible", jni::ref<org::omg::CORBA::BAD_OPERATION>>(); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> fixedNotMatch(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"fixedNotMatch", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> fixedNotMatch(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"fixedNotMatch", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> fixedNotMatch(jni::ref<java::lang::Throwable> p1) { return call_method<"fixedNotMatch", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> fixedNotMatch() { return call_method<"fixedNotMatch", jni::ref<org::omg::CORBA::BAD_OPERATION>>(); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> fixedBadTypecode(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"fixedBadTypecode", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> fixedBadTypecode(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"fixedBadTypecode", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> fixedBadTypecode(jni::ref<java::lang::Throwable> p1) { return call_method<"fixedBadTypecode", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> fixedBadTypecode() { return call_method<"fixedBadTypecode", jni::ref<org::omg::CORBA::BAD_OPERATION>>(); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> setExceptionCalledNullArgs(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"setExceptionCalledNullArgs", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> setExceptionCalledNullArgs(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"setExceptionCalledNullArgs", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> setExceptionCalledNullArgs(jni::ref<java::lang::Throwable> p1) { return call_method<"setExceptionCalledNullArgs", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> setExceptionCalledNullArgs() { return call_method<"setExceptionCalledNullArgs", jni::ref<org::omg::CORBA::BAD_OPERATION>>(); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> setExceptionCalledBadType(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"setExceptionCalledBadType", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> setExceptionCalledBadType(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"setExceptionCalledBadType", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> setExceptionCalledBadType(jni::ref<java::lang::Throwable> p1) { return call_method<"setExceptionCalledBadType", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> setExceptionCalledBadType() { return call_method<"setExceptionCalledBadType", jni::ref<org::omg::CORBA::BAD_OPERATION>>(); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> contextCalledOutOfOrder(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"contextCalledOutOfOrder", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> contextCalledOutOfOrder(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"contextCalledOutOfOrder", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> contextCalledOutOfOrder(jni::ref<java::lang::Throwable> p1) { return call_method<"contextCalledOutOfOrder", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> contextCalledOutOfOrder() { return call_method<"contextCalledOutOfOrder", jni::ref<org::omg::CORBA::BAD_OPERATION>>(); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> badOrbConfigurator(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"badOrbConfigurator", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> badOrbConfigurator(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"badOrbConfigurator", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> badOrbConfigurator(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"badOrbConfigurator", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> badOrbConfigurator(jni::ref<java::lang::Object> p1) { return call_method<"badOrbConfigurator", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> orbConfiguratorError(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"orbConfiguratorError", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> orbConfiguratorError(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"orbConfiguratorError", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> orbConfiguratorError(jni::ref<java::lang::Throwable> p1) { return call_method<"orbConfiguratorError", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> orbConfiguratorError() { return call_method<"orbConfiguratorError", jni::ref<org::omg::CORBA::BAD_OPERATION>>(); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> orbDestroyed(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"orbDestroyed", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> orbDestroyed(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"orbDestroyed", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> orbDestroyed(jni::ref<java::lang::Throwable> p1) { return call_method<"orbDestroyed", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> orbDestroyed() { return call_method<"orbDestroyed", jni::ref<org::omg::CORBA::BAD_OPERATION>>(); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> negativeBounds(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"negativeBounds", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> negativeBounds(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"negativeBounds", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> negativeBounds(jni::ref<java::lang::Throwable> p1) { return call_method<"negativeBounds", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> negativeBounds() { return call_method<"negativeBounds", jni::ref<org::omg::CORBA::BAD_OPERATION>>(); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> extractNotInitialized(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"extractNotInitialized", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> extractNotInitialized(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"extractNotInitialized", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> extractNotInitialized(jni::ref<java::lang::Throwable> p1) { return call_method<"extractNotInitialized", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> extractNotInitialized() { return call_method<"extractNotInitialized", jni::ref<org::omg::CORBA::BAD_OPERATION>>(); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> extractObjectFailed(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"extractObjectFailed", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> extractObjectFailed(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"extractObjectFailed", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> extractObjectFailed(jni::ref<java::lang::Throwable> p1) { return call_method<"extractObjectFailed", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> extractObjectFailed() { return call_method<"extractObjectFailed", jni::ref<org::omg::CORBA::BAD_OPERATION>>(); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> methodNotFoundInTie(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"methodNotFoundInTie", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> methodNotFoundInTie(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"methodNotFoundInTie", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> methodNotFoundInTie(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"methodNotFoundInTie", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> methodNotFoundInTie(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2) { return call_method<"methodNotFoundInTie", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> classNotFound1(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"classNotFound1", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> classNotFound1(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"classNotFound1", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> classNotFound1(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"classNotFound1", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> classNotFound1(jni::ref<java::lang::Object> p1) { return call_method<"classNotFound1", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> classNotFound2(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"classNotFound2", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> classNotFound2(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"classNotFound2", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> classNotFound2(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"classNotFound2", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> classNotFound2(jni::ref<java::lang::Object> p1) { return call_method<"classNotFound2", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> classNotFound3(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"classNotFound3", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> classNotFound3(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"classNotFound3", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> classNotFound3(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"classNotFound3", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> classNotFound3(jni::ref<java::lang::Object> p1) { return call_method<"classNotFound3", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> getDelegateServantNotActive(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"getDelegateServantNotActive", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> getDelegateServantNotActive(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"getDelegateServantNotActive", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> getDelegateServantNotActive(jni::ref<java::lang::Throwable> p1) { return call_method<"getDelegateServantNotActive", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> getDelegateServantNotActive() { return call_method<"getDelegateServantNotActive", jni::ref<org::omg::CORBA::BAD_OPERATION>>(); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> getDelegateWrongPolicy(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"getDelegateWrongPolicy", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> getDelegateWrongPolicy(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"getDelegateWrongPolicy", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> getDelegateWrongPolicy(jni::ref<java::lang::Throwable> p1) { return call_method<"getDelegateWrongPolicy", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> getDelegateWrongPolicy() { return call_method<"getDelegateWrongPolicy", jni::ref<org::omg::CORBA::BAD_OPERATION>>(); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> setDelegateRequiresStub(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"setDelegateRequiresStub", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> setDelegateRequiresStub(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"setDelegateRequiresStub", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> setDelegateRequiresStub(jni::ref<java::lang::Throwable> p1) { return call_method<"setDelegateRequiresStub", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> setDelegateRequiresStub() { return call_method<"setDelegateRequiresStub", jni::ref<org::omg::CORBA::BAD_OPERATION>>(); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> getDelegateRequiresStub(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"getDelegateRequiresStub", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> getDelegateRequiresStub(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"getDelegateRequiresStub", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> getDelegateRequiresStub(jni::ref<java::lang::Throwable> p1) { return call_method<"getDelegateRequiresStub", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> getDelegateRequiresStub() { return call_method<"getDelegateRequiresStub", jni::ref<org::omg::CORBA::BAD_OPERATION>>(); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> getTypeIdsRequiresStub(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"getTypeIdsRequiresStub", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> getTypeIdsRequiresStub(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"getTypeIdsRequiresStub", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> getTypeIdsRequiresStub(jni::ref<java::lang::Throwable> p1) { return call_method<"getTypeIdsRequiresStub", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> getTypeIdsRequiresStub() { return call_method<"getTypeIdsRequiresStub", jni::ref<org::omg::CORBA::BAD_OPERATION>>(); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> getOrbRequiresStub(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"getOrbRequiresStub", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> getOrbRequiresStub(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"getOrbRequiresStub", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> getOrbRequiresStub(jni::ref<java::lang::Throwable> p1) { return call_method<"getOrbRequiresStub", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> getOrbRequiresStub() { return call_method<"getOrbRequiresStub", jni::ref<org::omg::CORBA::BAD_OPERATION>>(); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> connectRequiresStub(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"connectRequiresStub", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> connectRequiresStub(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"connectRequiresStub", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> connectRequiresStub(jni::ref<java::lang::Throwable> p1) { return call_method<"connectRequiresStub", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> connectRequiresStub() { return call_method<"connectRequiresStub", jni::ref<org::omg::CORBA::BAD_OPERATION>>(); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> isLocalRequiresStub(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"isLocalRequiresStub", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> isLocalRequiresStub(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"isLocalRequiresStub", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> isLocalRequiresStub(jni::ref<java::lang::Throwable> p1) { return call_method<"isLocalRequiresStub", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> isLocalRequiresStub() { return call_method<"isLocalRequiresStub", jni::ref<org::omg::CORBA::BAD_OPERATION>>(); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> requestRequiresStub(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"requestRequiresStub", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> requestRequiresStub(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"requestRequiresStub", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> requestRequiresStub(jni::ref<java::lang::Throwable> p1) { return call_method<"requestRequiresStub", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> requestRequiresStub() { return call_method<"requestRequiresStub", jni::ref<org::omg::CORBA::BAD_OPERATION>>(); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> badActivateTieCall(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"badActivateTieCall", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> badActivateTieCall(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"badActivateTieCall", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> badActivateTieCall(jni::ref<java::lang::Throwable> p1) { return call_method<"badActivateTieCall", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> badActivateTieCall() { return call_method<"badActivateTieCall", jni::ref<org::omg::CORBA::BAD_OPERATION>>(); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> ioExceptionOnClose(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"ioExceptionOnClose", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> ioExceptionOnClose(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"ioExceptionOnClose", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> ioExceptionOnClose(jni::ref<java::lang::Throwable> p1) { return call_method<"ioExceptionOnClose", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> ioExceptionOnClose() { return call_method<"ioExceptionOnClose", jni::ref<org::omg::CORBA::BAD_OPERATION>>(); }
	jni::ref<org::omg::CORBA::BAD_PARAM> nullParam(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"nullParam", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_PARAM> nullParam(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"nullParam", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> nullParam(jni::ref<java::lang::Throwable> p1) { return call_method<"nullParam", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> nullParam() { return call_method<"nullParam", jni::ref<org::omg::CORBA::BAD_PARAM>>(); }
	jni::ref<org::omg::CORBA::BAD_PARAM> unableFindValueFactory(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"unableFindValueFactory", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_PARAM> unableFindValueFactory(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"unableFindValueFactory", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> unableFindValueFactory(jni::ref<java::lang::Throwable> p1) { return call_method<"unableFindValueFactory", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> unableFindValueFactory() { return call_method<"unableFindValueFactory", jni::ref<org::omg::CORBA::BAD_PARAM>>(); }
	jni::ref<org::omg::CORBA::BAD_PARAM> abstractFromNonAbstract(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"abstractFromNonAbstract", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_PARAM> abstractFromNonAbstract(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"abstractFromNonAbstract", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> abstractFromNonAbstract(jni::ref<java::lang::Throwable> p1) { return call_method<"abstractFromNonAbstract", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> abstractFromNonAbstract() { return call_method<"abstractFromNonAbstract", jni::ref<org::omg::CORBA::BAD_PARAM>>(); }
	jni::ref<org::omg::CORBA::BAD_PARAM> invalidTaggedProfile(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"invalidTaggedProfile", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_PARAM> invalidTaggedProfile(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"invalidTaggedProfile", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> invalidTaggedProfile(jni::ref<java::lang::Throwable> p1) { return call_method<"invalidTaggedProfile", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> invalidTaggedProfile() { return call_method<"invalidTaggedProfile", jni::ref<org::omg::CORBA::BAD_PARAM>>(); }
	jni::ref<org::omg::CORBA::BAD_PARAM> objrefFromForeignOrb(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"objrefFromForeignOrb", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_PARAM> objrefFromForeignOrb(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"objrefFromForeignOrb", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> objrefFromForeignOrb(jni::ref<java::lang::Throwable> p1) { return call_method<"objrefFromForeignOrb", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> objrefFromForeignOrb() { return call_method<"objrefFromForeignOrb", jni::ref<org::omg::CORBA::BAD_PARAM>>(); }
	jni::ref<org::omg::CORBA::BAD_PARAM> localObjectNotAllowed(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"localObjectNotAllowed", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_PARAM> localObjectNotAllowed(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"localObjectNotAllowed", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> localObjectNotAllowed(jni::ref<java::lang::Throwable> p1) { return call_method<"localObjectNotAllowed", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> localObjectNotAllowed() { return call_method<"localObjectNotAllowed", jni::ref<org::omg::CORBA::BAD_PARAM>>(); }
	jni::ref<org::omg::CORBA::BAD_PARAM> nullObjectReference(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"nullObjectReference", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_PARAM> nullObjectReference(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"nullObjectReference", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> nullObjectReference(jni::ref<java::lang::Throwable> p1) { return call_method<"nullObjectReference", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> nullObjectReference() { return call_method<"nullObjectReference", jni::ref<org::omg::CORBA::BAD_PARAM>>(); }
	jni::ref<org::omg::CORBA::BAD_PARAM> couldNotLoadClass(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"couldNotLoadClass", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::BAD_PARAM> couldNotLoadClass(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"couldNotLoadClass", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_PARAM> couldNotLoadClass(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"couldNotLoadClass", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_PARAM> couldNotLoadClass(jni::ref<java::lang::Object> p1) { return call_method<"couldNotLoadClass", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> badUrl(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"badUrl", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::BAD_PARAM> badUrl(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"badUrl", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_PARAM> badUrl(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"badUrl", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_PARAM> badUrl(jni::ref<java::lang::Object> p1) { return call_method<"badUrl", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> fieldNotFound(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"fieldNotFound", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::BAD_PARAM> fieldNotFound(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"fieldNotFound", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_PARAM> fieldNotFound(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"fieldNotFound", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_PARAM> fieldNotFound(jni::ref<java::lang::Object> p1) { return call_method<"fieldNotFound", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> errorSettingField(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"errorSettingField", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::BAD_PARAM> errorSettingField(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"errorSettingField", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::BAD_PARAM> errorSettingField(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"errorSettingField", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::BAD_PARAM> errorSettingField(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2) { return call_method<"errorSettingField", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_PARAM> boundsErrorInDiiRequest(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"boundsErrorInDiiRequest", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_PARAM> boundsErrorInDiiRequest(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"boundsErrorInDiiRequest", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> boundsErrorInDiiRequest(jni::ref<java::lang::Throwable> p1) { return call_method<"boundsErrorInDiiRequest", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> boundsErrorInDiiRequest() { return call_method<"boundsErrorInDiiRequest", jni::ref<org::omg::CORBA::BAD_PARAM>>(); }
	jni::ref<org::omg::CORBA::BAD_PARAM> persistentServerInitError(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"persistentServerInitError", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_PARAM> persistentServerInitError(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"persistentServerInitError", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> persistentServerInitError(jni::ref<java::lang::Throwable> p1) { return call_method<"persistentServerInitError", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> persistentServerInitError() { return call_method<"persistentServerInitError", jni::ref<org::omg::CORBA::BAD_PARAM>>(); }
	jni::ref<org::omg::CORBA::BAD_PARAM> couldNotCreateArray(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4, jni::ref<java::lang::Object> p5) { return call_method<"couldNotCreateArray", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2, p3, p4, p5); }
	jni::ref<org::omg::CORBA::BAD_PARAM> couldNotCreateArray(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"couldNotCreateArray", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::BAD_PARAM> couldNotCreateArray(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"couldNotCreateArray", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::BAD_PARAM> couldNotCreateArray(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"couldNotCreateArray", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::BAD_PARAM> couldNotSetArray(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4, jni::ref<java::lang::Object> p5, jni::ref<java::lang::Object> p6, jni::ref<java::lang::Object> p7) { return call_method<"couldNotSetArray", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2, p3, p4, p5, p6, p7); }
	jni::ref<org::omg::CORBA::BAD_PARAM> couldNotSetArray(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4, jni::ref<java::lang::Object> p5, jni::ref<java::lang::Object> p6) { return call_method<"couldNotSetArray", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2, p3, p4, p5, p6); }
	jni::ref<org::omg::CORBA::BAD_PARAM> couldNotSetArray(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4, jni::ref<java::lang::Object> p5, jni::ref<java::lang::Object> p6) { return call_method<"couldNotSetArray", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2, p3, p4, p5, p6); }
	jni::ref<org::omg::CORBA::BAD_PARAM> couldNotSetArray(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4, jni::ref<java::lang::Object> p5) { return call_method<"couldNotSetArray", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2, p3, p4, p5); }
	jni::ref<org::omg::CORBA::BAD_PARAM> illegalBootstrapOperation(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"illegalBootstrapOperation", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::BAD_PARAM> illegalBootstrapOperation(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"illegalBootstrapOperation", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_PARAM> illegalBootstrapOperation(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"illegalBootstrapOperation", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_PARAM> illegalBootstrapOperation(jni::ref<java::lang::Object> p1) { return call_method<"illegalBootstrapOperation", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> bootstrapRuntimeException(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"bootstrapRuntimeException", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_PARAM> bootstrapRuntimeException(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"bootstrapRuntimeException", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> bootstrapRuntimeException(jni::ref<java::lang::Throwable> p1) { return call_method<"bootstrapRuntimeException", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> bootstrapRuntimeException() { return call_method<"bootstrapRuntimeException", jni::ref<org::omg::CORBA::BAD_PARAM>>(); }
	jni::ref<org::omg::CORBA::BAD_PARAM> bootstrapException(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"bootstrapException", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_PARAM> bootstrapException(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"bootstrapException", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> bootstrapException(jni::ref<java::lang::Throwable> p1) { return call_method<"bootstrapException", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> bootstrapException() { return call_method<"bootstrapException", jni::ref<org::omg::CORBA::BAD_PARAM>>(); }
	jni::ref<org::omg::CORBA::BAD_PARAM> stringExpected(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"stringExpected", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_PARAM> stringExpected(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"stringExpected", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> stringExpected(jni::ref<java::lang::Throwable> p1) { return call_method<"stringExpected", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> stringExpected() { return call_method<"stringExpected", jni::ref<org::omg::CORBA::BAD_PARAM>>(); }
	jni::ref<org::omg::CORBA::BAD_PARAM> invalidTypecodeKind(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"invalidTypecodeKind", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::BAD_PARAM> invalidTypecodeKind(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"invalidTypecodeKind", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_PARAM> invalidTypecodeKind(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"invalidTypecodeKind", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_PARAM> invalidTypecodeKind(jni::ref<java::lang::Object> p1) { return call_method<"invalidTypecodeKind", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> socketFactoryAndContactInfoListAtSameTime(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"socketFactoryAndContactInfoListAtSameTime", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_PARAM> socketFactoryAndContactInfoListAtSameTime(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"socketFactoryAndContactInfoListAtSameTime", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> socketFactoryAndContactInfoListAtSameTime(jni::ref<java::lang::Throwable> p1) { return call_method<"socketFactoryAndContactInfoListAtSameTime", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> socketFactoryAndContactInfoListAtSameTime() { return call_method<"socketFactoryAndContactInfoListAtSameTime", jni::ref<org::omg::CORBA::BAD_PARAM>>(); }
	jni::ref<org::omg::CORBA::BAD_PARAM> acceptorsAndLegacySocketFactoryAtSameTime(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"acceptorsAndLegacySocketFactoryAtSameTime", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_PARAM> acceptorsAndLegacySocketFactoryAtSameTime(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"acceptorsAndLegacySocketFactoryAtSameTime", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> acceptorsAndLegacySocketFactoryAtSameTime(jni::ref<java::lang::Throwable> p1) { return call_method<"acceptorsAndLegacySocketFactoryAtSameTime", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> acceptorsAndLegacySocketFactoryAtSameTime() { return call_method<"acceptorsAndLegacySocketFactoryAtSameTime", jni::ref<org::omg::CORBA::BAD_PARAM>>(); }
	jni::ref<org::omg::CORBA::BAD_PARAM> badOrbForServant(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"badOrbForServant", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_PARAM> badOrbForServant(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"badOrbForServant", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> badOrbForServant(jni::ref<java::lang::Throwable> p1) { return call_method<"badOrbForServant", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> badOrbForServant() { return call_method<"badOrbForServant", jni::ref<org::omg::CORBA::BAD_PARAM>>(); }
	jni::ref<org::omg::CORBA::BAD_PARAM> invalidRequestPartitioningPolicyValue(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4, jni::ref<java::lang::Object> p5) { return call_method<"invalidRequestPartitioningPolicyValue", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2, p3, p4, p5); }
	jni::ref<org::omg::CORBA::BAD_PARAM> invalidRequestPartitioningPolicyValue(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"invalidRequestPartitioningPolicyValue", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::BAD_PARAM> invalidRequestPartitioningPolicyValue(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"invalidRequestPartitioningPolicyValue", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::BAD_PARAM> invalidRequestPartitioningPolicyValue(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"invalidRequestPartitioningPolicyValue", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::BAD_PARAM> invalidRequestPartitioningComponentValue(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4, jni::ref<java::lang::Object> p5) { return call_method<"invalidRequestPartitioningComponentValue", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2, p3, p4, p5); }
	jni::ref<org::omg::CORBA::BAD_PARAM> invalidRequestPartitioningComponentValue(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"invalidRequestPartitioningComponentValue", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::BAD_PARAM> invalidRequestPartitioningComponentValue(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"invalidRequestPartitioningComponentValue", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::BAD_PARAM> invalidRequestPartitioningComponentValue(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"invalidRequestPartitioningComponentValue", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::BAD_PARAM> invalidRequestPartitioningId(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4, jni::ref<java::lang::Object> p5) { return call_method<"invalidRequestPartitioningId", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2, p3, p4, p5); }
	jni::ref<org::omg::CORBA::BAD_PARAM> invalidRequestPartitioningId(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"invalidRequestPartitioningId", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::BAD_PARAM> invalidRequestPartitioningId(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"invalidRequestPartitioningId", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::BAD_PARAM> invalidRequestPartitioningId(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"invalidRequestPartitioningId", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::BAD_PARAM> errorInSettingDynamicStubFactoryFactory(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"errorInSettingDynamicStubFactoryFactory", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::BAD_PARAM> errorInSettingDynamicStubFactoryFactory(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"errorInSettingDynamicStubFactoryFactory", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_PARAM> errorInSettingDynamicStubFactoryFactory(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"errorInSettingDynamicStubFactoryFactory", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_PARAM> errorInSettingDynamicStubFactoryFactory(jni::ref<java::lang::Object> p1) { return call_method<"errorInSettingDynamicStubFactoryFactory", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_INV_ORDER> dsimethodNotcalled(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"dsimethodNotcalled", jni::ref<org::omg::CORBA::BAD_INV_ORDER>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_INV_ORDER> dsimethodNotcalled(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"dsimethodNotcalled", jni::ref<org::omg::CORBA::BAD_INV_ORDER>>(p1); }
	jni::ref<org::omg::CORBA::BAD_INV_ORDER> dsimethodNotcalled(jni::ref<java::lang::Throwable> p1) { return call_method<"dsimethodNotcalled", jni::ref<org::omg::CORBA::BAD_INV_ORDER>>(p1); }
	jni::ref<org::omg::CORBA::BAD_INV_ORDER> dsimethodNotcalled() { return call_method<"dsimethodNotcalled", jni::ref<org::omg::CORBA::BAD_INV_ORDER>>(); }
	jni::ref<org::omg::CORBA::BAD_INV_ORDER> argumentsCalledMultiple(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"argumentsCalledMultiple", jni::ref<org::omg::CORBA::BAD_INV_ORDER>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_INV_ORDER> argumentsCalledMultiple(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"argumentsCalledMultiple", jni::ref<org::omg::CORBA::BAD_INV_ORDER>>(p1); }
	jni::ref<org::omg::CORBA::BAD_INV_ORDER> argumentsCalledMultiple(jni::ref<java::lang::Throwable> p1) { return call_method<"argumentsCalledMultiple", jni::ref<org::omg::CORBA::BAD_INV_ORDER>>(p1); }
	jni::ref<org::omg::CORBA::BAD_INV_ORDER> argumentsCalledMultiple() { return call_method<"argumentsCalledMultiple", jni::ref<org::omg::CORBA::BAD_INV_ORDER>>(); }
	jni::ref<org::omg::CORBA::BAD_INV_ORDER> argumentsCalledAfterException(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"argumentsCalledAfterException", jni::ref<org::omg::CORBA::BAD_INV_ORDER>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_INV_ORDER> argumentsCalledAfterException(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"argumentsCalledAfterException", jni::ref<org::omg::CORBA::BAD_INV_ORDER>>(p1); }
	jni::ref<org::omg::CORBA::BAD_INV_ORDER> argumentsCalledAfterException(jni::ref<java::lang::Throwable> p1) { return call_method<"argumentsCalledAfterException", jni::ref<org::omg::CORBA::BAD_INV_ORDER>>(p1); }
	jni::ref<org::omg::CORBA::BAD_INV_ORDER> argumentsCalledAfterException() { return call_method<"argumentsCalledAfterException", jni::ref<org::omg::CORBA::BAD_INV_ORDER>>(); }
	jni::ref<org::omg::CORBA::BAD_INV_ORDER> argumentsCalledNullArgs(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"argumentsCalledNullArgs", jni::ref<org::omg::CORBA::BAD_INV_ORDER>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_INV_ORDER> argumentsCalledNullArgs(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"argumentsCalledNullArgs", jni::ref<org::omg::CORBA::BAD_INV_ORDER>>(p1); }
	jni::ref<org::omg::CORBA::BAD_INV_ORDER> argumentsCalledNullArgs(jni::ref<java::lang::Throwable> p1) { return call_method<"argumentsCalledNullArgs", jni::ref<org::omg::CORBA::BAD_INV_ORDER>>(p1); }
	jni::ref<org::omg::CORBA::BAD_INV_ORDER> argumentsCalledNullArgs() { return call_method<"argumentsCalledNullArgs", jni::ref<org::omg::CORBA::BAD_INV_ORDER>>(); }
	jni::ref<org::omg::CORBA::BAD_INV_ORDER> argumentsNotCalled(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"argumentsNotCalled", jni::ref<org::omg::CORBA::BAD_INV_ORDER>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_INV_ORDER> argumentsNotCalled(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"argumentsNotCalled", jni::ref<org::omg::CORBA::BAD_INV_ORDER>>(p1); }
	jni::ref<org::omg::CORBA::BAD_INV_ORDER> argumentsNotCalled(jni::ref<java::lang::Throwable> p1) { return call_method<"argumentsNotCalled", jni::ref<org::omg::CORBA::BAD_INV_ORDER>>(p1); }
	jni::ref<org::omg::CORBA::BAD_INV_ORDER> argumentsNotCalled() { return call_method<"argumentsNotCalled", jni::ref<org::omg::CORBA::BAD_INV_ORDER>>(); }
	jni::ref<org::omg::CORBA::BAD_INV_ORDER> setResultCalledMultiple(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"setResultCalledMultiple", jni::ref<org::omg::CORBA::BAD_INV_ORDER>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_INV_ORDER> setResultCalledMultiple(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"setResultCalledMultiple", jni::ref<org::omg::CORBA::BAD_INV_ORDER>>(p1); }
	jni::ref<org::omg::CORBA::BAD_INV_ORDER> setResultCalledMultiple(jni::ref<java::lang::Throwable> p1) { return call_method<"setResultCalledMultiple", jni::ref<org::omg::CORBA::BAD_INV_ORDER>>(p1); }
	jni::ref<org::omg::CORBA::BAD_INV_ORDER> setResultCalledMultiple() { return call_method<"setResultCalledMultiple", jni::ref<org::omg::CORBA::BAD_INV_ORDER>>(); }
	jni::ref<org::omg::CORBA::BAD_INV_ORDER> setResultAfterException(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"setResultAfterException", jni::ref<org::omg::CORBA::BAD_INV_ORDER>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_INV_ORDER> setResultAfterException(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"setResultAfterException", jni::ref<org::omg::CORBA::BAD_INV_ORDER>>(p1); }
	jni::ref<org::omg::CORBA::BAD_INV_ORDER> setResultAfterException(jni::ref<java::lang::Throwable> p1) { return call_method<"setResultAfterException", jni::ref<org::omg::CORBA::BAD_INV_ORDER>>(p1); }
	jni::ref<org::omg::CORBA::BAD_INV_ORDER> setResultAfterException() { return call_method<"setResultAfterException", jni::ref<org::omg::CORBA::BAD_INV_ORDER>>(); }
	jni::ref<org::omg::CORBA::BAD_INV_ORDER> setResultCalledNullArgs(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"setResultCalledNullArgs", jni::ref<org::omg::CORBA::BAD_INV_ORDER>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_INV_ORDER> setResultCalledNullArgs(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"setResultCalledNullArgs", jni::ref<org::omg::CORBA::BAD_INV_ORDER>>(p1); }
	jni::ref<org::omg::CORBA::BAD_INV_ORDER> setResultCalledNullArgs(jni::ref<java::lang::Throwable> p1) { return call_method<"setResultCalledNullArgs", jni::ref<org::omg::CORBA::BAD_INV_ORDER>>(p1); }
	jni::ref<org::omg::CORBA::BAD_INV_ORDER> setResultCalledNullArgs() { return call_method<"setResultCalledNullArgs", jni::ref<org::omg::CORBA::BAD_INV_ORDER>>(); }
	jni::ref<org::omg::CORBA::BAD_TYPECODE> badRemoteTypecode(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"badRemoteTypecode", jni::ref<org::omg::CORBA::BAD_TYPECODE>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_TYPECODE> badRemoteTypecode(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"badRemoteTypecode", jni::ref<org::omg::CORBA::BAD_TYPECODE>>(p1); }
	jni::ref<org::omg::CORBA::BAD_TYPECODE> badRemoteTypecode(jni::ref<java::lang::Throwable> p1) { return call_method<"badRemoteTypecode", jni::ref<org::omg::CORBA::BAD_TYPECODE>>(p1); }
	jni::ref<org::omg::CORBA::BAD_TYPECODE> badRemoteTypecode() { return call_method<"badRemoteTypecode", jni::ref<org::omg::CORBA::BAD_TYPECODE>>(); }
	jni::ref<org::omg::CORBA::BAD_TYPECODE> unresolvedRecursiveTypecode(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"unresolvedRecursiveTypecode", jni::ref<org::omg::CORBA::BAD_TYPECODE>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_TYPECODE> unresolvedRecursiveTypecode(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"unresolvedRecursiveTypecode", jni::ref<org::omg::CORBA::BAD_TYPECODE>>(p1); }
	jni::ref<org::omg::CORBA::BAD_TYPECODE> unresolvedRecursiveTypecode(jni::ref<java::lang::Throwable> p1) { return call_method<"unresolvedRecursiveTypecode", jni::ref<org::omg::CORBA::BAD_TYPECODE>>(p1); }
	jni::ref<org::omg::CORBA::BAD_TYPECODE> unresolvedRecursiveTypecode() { return call_method<"unresolvedRecursiveTypecode", jni::ref<org::omg::CORBA::BAD_TYPECODE>>(); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> connectFailure(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4, jni::ref<java::lang::Object> p5) { return call_method<"connectFailure", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1, p2, p3, p4, p5); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> connectFailure(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"connectFailure", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> connectFailure(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"connectFailure", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> connectFailure(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"connectFailure", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> connectionCloseRebind(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"connectionCloseRebind", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1, p2); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> connectionCloseRebind(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"connectionCloseRebind", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> connectionCloseRebind(jni::ref<java::lang::Throwable> p1) { return call_method<"connectionCloseRebind", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> connectionCloseRebind() { return call_method<"connectionCloseRebind", jni::ref<org::omg::CORBA::COMM_FAILURE>>(); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> writeErrorSend(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"writeErrorSend", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1, p2); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> writeErrorSend(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"writeErrorSend", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> writeErrorSend(jni::ref<java::lang::Throwable> p1) { return call_method<"writeErrorSend", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> writeErrorSend() { return call_method<"writeErrorSend", jni::ref<org::omg::CORBA::COMM_FAILURE>>(); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> getPropertiesError(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"getPropertiesError", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1, p2); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> getPropertiesError(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"getPropertiesError", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> getPropertiesError(jni::ref<java::lang::Throwable> p1) { return call_method<"getPropertiesError", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> getPropertiesError() { return call_method<"getPropertiesError", jni::ref<org::omg::CORBA::COMM_FAILURE>>(); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> bootstrapServerNotAvail(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"bootstrapServerNotAvail", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1, p2); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> bootstrapServerNotAvail(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"bootstrapServerNotAvail", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> bootstrapServerNotAvail(jni::ref<java::lang::Throwable> p1) { return call_method<"bootstrapServerNotAvail", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> bootstrapServerNotAvail() { return call_method<"bootstrapServerNotAvail", jni::ref<org::omg::CORBA::COMM_FAILURE>>(); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> invokeError(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"invokeError", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1, p2); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> invokeError(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"invokeError", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> invokeError(jni::ref<java::lang::Throwable> p1) { return call_method<"invokeError", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> invokeError() { return call_method<"invokeError", jni::ref<org::omg::CORBA::COMM_FAILURE>>(); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> defaultCreateServerSocketGivenNonIiopClearText(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"defaultCreateServerSocketGivenNonIiopClearText", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> defaultCreateServerSocketGivenNonIiopClearText(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"defaultCreateServerSocketGivenNonIiopClearText", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1, p2); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> defaultCreateServerSocketGivenNonIiopClearText(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"defaultCreateServerSocketGivenNonIiopClearText", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1, p2); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> defaultCreateServerSocketGivenNonIiopClearText(jni::ref<java::lang::Object> p1) { return call_method<"defaultCreateServerSocketGivenNonIiopClearText", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> connectionAbort(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"connectionAbort", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1, p2); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> connectionAbort(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"connectionAbort", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> connectionAbort(jni::ref<java::lang::Throwable> p1) { return call_method<"connectionAbort", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> connectionAbort() { return call_method<"connectionAbort", jni::ref<org::omg::CORBA::COMM_FAILURE>>(); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> connectionRebind(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"connectionRebind", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1, p2); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> connectionRebind(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"connectionRebind", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> connectionRebind(jni::ref<java::lang::Throwable> p1) { return call_method<"connectionRebind", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> connectionRebind() { return call_method<"connectionRebind", jni::ref<org::omg::CORBA::COMM_FAILURE>>(); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> recvMsgError(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"recvMsgError", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1, p2); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> recvMsgError(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"recvMsgError", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> recvMsgError(jni::ref<java::lang::Throwable> p1) { return call_method<"recvMsgError", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> recvMsgError() { return call_method<"recvMsgError", jni::ref<org::omg::CORBA::COMM_FAILURE>>(); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> ioexceptionWhenReadingConnection(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"ioexceptionWhenReadingConnection", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1, p2); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> ioexceptionWhenReadingConnection(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"ioexceptionWhenReadingConnection", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> ioexceptionWhenReadingConnection(jni::ref<java::lang::Throwable> p1) { return call_method<"ioexceptionWhenReadingConnection", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> ioexceptionWhenReadingConnection() { return call_method<"ioexceptionWhenReadingConnection", jni::ref<org::omg::CORBA::COMM_FAILURE>>(); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> selectionKeyInvalid(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"selectionKeyInvalid", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> selectionKeyInvalid(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"selectionKeyInvalid", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1, p2); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> selectionKeyInvalid(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"selectionKeyInvalid", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1, p2); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> selectionKeyInvalid(jni::ref<java::lang::Object> p1) { return call_method<"selectionKeyInvalid", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> exceptionInAccept(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"exceptionInAccept", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> exceptionInAccept(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"exceptionInAccept", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1, p2); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> exceptionInAccept(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"exceptionInAccept", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1, p2); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> exceptionInAccept(jni::ref<java::lang::Object> p1) { return call_method<"exceptionInAccept", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> securityExceptionInAccept(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"securityExceptionInAccept", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> securityExceptionInAccept(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"securityExceptionInAccept", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> securityExceptionInAccept(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"securityExceptionInAccept", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> securityExceptionInAccept(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2) { return call_method<"securityExceptionInAccept", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1, p2); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> transportReadTimeoutExceeded(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4, jni::ref<java::lang::Object> p5, jni::ref<java::lang::Object> p6) { return call_method<"transportReadTimeoutExceeded", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1, p2, p3, p4, p5, p6); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> transportReadTimeoutExceeded(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4, jni::ref<java::lang::Object> p5) { return call_method<"transportReadTimeoutExceeded", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1, p2, p3, p4, p5); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> transportReadTimeoutExceeded(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4, jni::ref<java::lang::Object> p5) { return call_method<"transportReadTimeoutExceeded", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1, p2, p3, p4, p5); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> transportReadTimeoutExceeded(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"transportReadTimeoutExceeded", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> createListenerFailed(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"createListenerFailed", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> createListenerFailed(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"createListenerFailed", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1, p2); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> createListenerFailed(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"createListenerFailed", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1, p2); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> createListenerFailed(jni::ref<java::lang::Object> p1) { return call_method<"createListenerFailed", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> bufferReadManagerTimeout(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"bufferReadManagerTimeout", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1, p2); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> bufferReadManagerTimeout(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"bufferReadManagerTimeout", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> bufferReadManagerTimeout(jni::ref<java::lang::Throwable> p1) { return call_method<"bufferReadManagerTimeout", jni::ref<org::omg::CORBA::COMM_FAILURE>>(p1); }
	jni::ref<org::omg::CORBA::COMM_FAILURE> bufferReadManagerTimeout() { return call_method<"bufferReadManagerTimeout", jni::ref<org::omg::CORBA::COMM_FAILURE>>(); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badStringifiedIorLen(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"badStringifiedIorLen", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badStringifiedIorLen(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"badStringifiedIorLen", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badStringifiedIorLen(jni::ref<java::lang::Throwable> p1) { return call_method<"badStringifiedIorLen", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badStringifiedIorLen() { return call_method<"badStringifiedIorLen", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badStringifiedIor(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"badStringifiedIor", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badStringifiedIor(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"badStringifiedIor", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badStringifiedIor(jni::ref<java::lang::Throwable> p1) { return call_method<"badStringifiedIor", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badStringifiedIor() { return call_method<"badStringifiedIor", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badModifier(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"badModifier", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badModifier(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"badModifier", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badModifier(jni::ref<java::lang::Throwable> p1) { return call_method<"badModifier", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badModifier() { return call_method<"badModifier", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> codesetIncompatible(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"codesetIncompatible", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> codesetIncompatible(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"codesetIncompatible", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> codesetIncompatible(jni::ref<java::lang::Throwable> p1) { return call_method<"codesetIncompatible", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> codesetIncompatible() { return call_method<"codesetIncompatible", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badHexDigit(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"badHexDigit", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badHexDigit(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"badHexDigit", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badHexDigit(jni::ref<java::lang::Throwable> p1) { return call_method<"badHexDigit", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badHexDigit() { return call_method<"badHexDigit", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badUnicodePair(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"badUnicodePair", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badUnicodePair(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"badUnicodePair", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badUnicodePair(jni::ref<java::lang::Throwable> p1) { return call_method<"badUnicodePair", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badUnicodePair() { return call_method<"badUnicodePair", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> btcResultMoreThanOneChar(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"btcResultMoreThanOneChar", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> btcResultMoreThanOneChar(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"btcResultMoreThanOneChar", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> btcResultMoreThanOneChar(jni::ref<java::lang::Throwable> p1) { return call_method<"btcResultMoreThanOneChar", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> btcResultMoreThanOneChar() { return call_method<"btcResultMoreThanOneChar", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badCodesetsFromClient(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"badCodesetsFromClient", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badCodesetsFromClient(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"badCodesetsFromClient", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badCodesetsFromClient(jni::ref<java::lang::Throwable> p1) { return call_method<"badCodesetsFromClient", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badCodesetsFromClient() { return call_method<"badCodesetsFromClient", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> invalidSingleCharCtb(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"invalidSingleCharCtb", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> invalidSingleCharCtb(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"invalidSingleCharCtb", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> invalidSingleCharCtb(jni::ref<java::lang::Throwable> p1) { return call_method<"invalidSingleCharCtb", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> invalidSingleCharCtb() { return call_method<"invalidSingleCharCtb", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badGiop11Ctb(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"badGiop11Ctb", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badGiop11Ctb(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"badGiop11Ctb", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badGiop11Ctb(jni::ref<java::lang::Throwable> p1) { return call_method<"badGiop11Ctb", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badGiop11Ctb() { return call_method<"badGiop11Ctb", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badSequenceBounds(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"badSequenceBounds", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badSequenceBounds(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"badSequenceBounds", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badSequenceBounds(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"badSequenceBounds", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badSequenceBounds(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2) { return call_method<"badSequenceBounds", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> illegalSocketFactoryType(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"illegalSocketFactoryType", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> illegalSocketFactoryType(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"illegalSocketFactoryType", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> illegalSocketFactoryType(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"illegalSocketFactoryType", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> illegalSocketFactoryType(jni::ref<java::lang::Object> p1) { return call_method<"illegalSocketFactoryType", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badCustomSocketFactory(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"badCustomSocketFactory", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badCustomSocketFactory(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"badCustomSocketFactory", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badCustomSocketFactory(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"badCustomSocketFactory", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badCustomSocketFactory(jni::ref<java::lang::Object> p1) { return call_method<"badCustomSocketFactory", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> fragmentSizeMinimum(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"fragmentSizeMinimum", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> fragmentSizeMinimum(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"fragmentSizeMinimum", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> fragmentSizeMinimum(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"fragmentSizeMinimum", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> fragmentSizeMinimum(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2) { return call_method<"fragmentSizeMinimum", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> fragmentSizeDiv(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"fragmentSizeDiv", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> fragmentSizeDiv(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"fragmentSizeDiv", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> fragmentSizeDiv(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"fragmentSizeDiv", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> fragmentSizeDiv(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2) { return call_method<"fragmentSizeDiv", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> orbInitializerFailure(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"orbInitializerFailure", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> orbInitializerFailure(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"orbInitializerFailure", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> orbInitializerFailure(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"orbInitializerFailure", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> orbInitializerFailure(jni::ref<java::lang::Object> p1) { return call_method<"orbInitializerFailure", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> orbInitializerType(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"orbInitializerType", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> orbInitializerType(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"orbInitializerType", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> orbInitializerType(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"orbInitializerType", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> orbInitializerType(jni::ref<java::lang::Object> p1) { return call_method<"orbInitializerType", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> orbInitialreferenceSyntax(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"orbInitialreferenceSyntax", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> orbInitialreferenceSyntax(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"orbInitialreferenceSyntax", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> orbInitialreferenceSyntax(jni::ref<java::lang::Throwable> p1) { return call_method<"orbInitialreferenceSyntax", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> orbInitialreferenceSyntax() { return call_method<"orbInitialreferenceSyntax", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> acceptorInstantiationFailure(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"acceptorInstantiationFailure", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> acceptorInstantiationFailure(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"acceptorInstantiationFailure", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> acceptorInstantiationFailure(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"acceptorInstantiationFailure", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> acceptorInstantiationFailure(jni::ref<java::lang::Object> p1) { return call_method<"acceptorInstantiationFailure", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> acceptorInstantiationTypeFailure(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"acceptorInstantiationTypeFailure", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> acceptorInstantiationTypeFailure(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"acceptorInstantiationTypeFailure", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> acceptorInstantiationTypeFailure(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"acceptorInstantiationTypeFailure", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> acceptorInstantiationTypeFailure(jni::ref<java::lang::Object> p1) { return call_method<"acceptorInstantiationTypeFailure", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> illegalContactInfoListFactoryType(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"illegalContactInfoListFactoryType", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> illegalContactInfoListFactoryType(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"illegalContactInfoListFactoryType", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> illegalContactInfoListFactoryType(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"illegalContactInfoListFactoryType", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> illegalContactInfoListFactoryType(jni::ref<java::lang::Object> p1) { return call_method<"illegalContactInfoListFactoryType", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badContactInfoListFactory(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"badContactInfoListFactory", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badContactInfoListFactory(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"badContactInfoListFactory", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badContactInfoListFactory(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"badContactInfoListFactory", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badContactInfoListFactory(jni::ref<java::lang::Object> p1) { return call_method<"badContactInfoListFactory", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> illegalIorToSocketInfoType(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"illegalIorToSocketInfoType", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> illegalIorToSocketInfoType(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"illegalIorToSocketInfoType", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> illegalIorToSocketInfoType(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"illegalIorToSocketInfoType", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> illegalIorToSocketInfoType(jni::ref<java::lang::Object> p1) { return call_method<"illegalIorToSocketInfoType", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badCustomIorToSocketInfo(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"badCustomIorToSocketInfo", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badCustomIorToSocketInfo(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"badCustomIorToSocketInfo", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badCustomIorToSocketInfo(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"badCustomIorToSocketInfo", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badCustomIorToSocketInfo(jni::ref<java::lang::Object> p1) { return call_method<"badCustomIorToSocketInfo", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> illegalIiopPrimaryToContactInfoType(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"illegalIiopPrimaryToContactInfoType", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> illegalIiopPrimaryToContactInfoType(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"illegalIiopPrimaryToContactInfoType", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> illegalIiopPrimaryToContactInfoType(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"illegalIiopPrimaryToContactInfoType", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> illegalIiopPrimaryToContactInfoType(jni::ref<java::lang::Object> p1) { return call_method<"illegalIiopPrimaryToContactInfoType", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badCustomIiopPrimaryToContactInfo(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"badCustomIiopPrimaryToContactInfo", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badCustomIiopPrimaryToContactInfo(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"badCustomIiopPrimaryToContactInfo", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badCustomIiopPrimaryToContactInfo(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"badCustomIiopPrimaryToContactInfo", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badCustomIiopPrimaryToContactInfo(jni::ref<java::lang::Object> p1) { return call_method<"badCustomIiopPrimaryToContactInfo", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1); }
	jni::ref<org::omg::CORBA::INV_OBJREF> badCorbalocString(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"badCorbalocString", jni::ref<org::omg::CORBA::INV_OBJREF>>(p1, p2); }
	jni::ref<org::omg::CORBA::INV_OBJREF> badCorbalocString(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"badCorbalocString", jni::ref<org::omg::CORBA::INV_OBJREF>>(p1); }
	jni::ref<org::omg::CORBA::INV_OBJREF> badCorbalocString(jni::ref<java::lang::Throwable> p1) { return call_method<"badCorbalocString", jni::ref<org::omg::CORBA::INV_OBJREF>>(p1); }
	jni::ref<org::omg::CORBA::INV_OBJREF> badCorbalocString() { return call_method<"badCorbalocString", jni::ref<org::omg::CORBA::INV_OBJREF>>(); }
	jni::ref<org::omg::CORBA::INV_OBJREF> noProfilePresent(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"noProfilePresent", jni::ref<org::omg::CORBA::INV_OBJREF>>(p1, p2); }
	jni::ref<org::omg::CORBA::INV_OBJREF> noProfilePresent(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"noProfilePresent", jni::ref<org::omg::CORBA::INV_OBJREF>>(p1); }
	jni::ref<org::omg::CORBA::INV_OBJREF> noProfilePresent(jni::ref<java::lang::Throwable> p1) { return call_method<"noProfilePresent", jni::ref<org::omg::CORBA::INV_OBJREF>>(p1); }
	jni::ref<org::omg::CORBA::INV_OBJREF> noProfilePresent() { return call_method<"noProfilePresent", jni::ref<org::omg::CORBA::INV_OBJREF>>(); }
	jni::ref<org::omg::CORBA::INITIALIZE> cannotCreateOrbidDb(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"cannotCreateOrbidDb", jni::ref<org::omg::CORBA::INITIALIZE>>(p1, p2); }
	jni::ref<org::omg::CORBA::INITIALIZE> cannotCreateOrbidDb(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"cannotCreateOrbidDb", jni::ref<org::omg::CORBA::INITIALIZE>>(p1); }
	jni::ref<org::omg::CORBA::INITIALIZE> cannotCreateOrbidDb(jni::ref<java::lang::Throwable> p1) { return call_method<"cannotCreateOrbidDb", jni::ref<org::omg::CORBA::INITIALIZE>>(p1); }
	jni::ref<org::omg::CORBA::INITIALIZE> cannotCreateOrbidDb() { return call_method<"cannotCreateOrbidDb", jni::ref<org::omg::CORBA::INITIALIZE>>(); }
	jni::ref<org::omg::CORBA::INITIALIZE> cannotReadOrbidDb(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"cannotReadOrbidDb", jni::ref<org::omg::CORBA::INITIALIZE>>(p1, p2); }
	jni::ref<org::omg::CORBA::INITIALIZE> cannotReadOrbidDb(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"cannotReadOrbidDb", jni::ref<org::omg::CORBA::INITIALIZE>>(p1); }
	jni::ref<org::omg::CORBA::INITIALIZE> cannotReadOrbidDb(jni::ref<java::lang::Throwable> p1) { return call_method<"cannotReadOrbidDb", jni::ref<org::omg::CORBA::INITIALIZE>>(p1); }
	jni::ref<org::omg::CORBA::INITIALIZE> cannotReadOrbidDb() { return call_method<"cannotReadOrbidDb", jni::ref<org::omg::CORBA::INITIALIZE>>(); }
	jni::ref<org::omg::CORBA::INITIALIZE> cannotWriteOrbidDb(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"cannotWriteOrbidDb", jni::ref<org::omg::CORBA::INITIALIZE>>(p1, p2); }
	jni::ref<org::omg::CORBA::INITIALIZE> cannotWriteOrbidDb(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"cannotWriteOrbidDb", jni::ref<org::omg::CORBA::INITIALIZE>>(p1); }
	jni::ref<org::omg::CORBA::INITIALIZE> cannotWriteOrbidDb(jni::ref<java::lang::Throwable> p1) { return call_method<"cannotWriteOrbidDb", jni::ref<org::omg::CORBA::INITIALIZE>>(p1); }
	jni::ref<org::omg::CORBA::INITIALIZE> cannotWriteOrbidDb() { return call_method<"cannotWriteOrbidDb", jni::ref<org::omg::CORBA::INITIALIZE>>(); }
	jni::ref<org::omg::CORBA::INITIALIZE> getServerPortCalledBeforeEndpointsInitialized(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"getServerPortCalledBeforeEndpointsInitialized", jni::ref<org::omg::CORBA::INITIALIZE>>(p1, p2); }
	jni::ref<org::omg::CORBA::INITIALIZE> getServerPortCalledBeforeEndpointsInitialized(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"getServerPortCalledBeforeEndpointsInitialized", jni::ref<org::omg::CORBA::INITIALIZE>>(p1); }
	jni::ref<org::omg::CORBA::INITIALIZE> getServerPortCalledBeforeEndpointsInitialized(jni::ref<java::lang::Throwable> p1) { return call_method<"getServerPortCalledBeforeEndpointsInitialized", jni::ref<org::omg::CORBA::INITIALIZE>>(p1); }
	jni::ref<org::omg::CORBA::INITIALIZE> getServerPortCalledBeforeEndpointsInitialized() { return call_method<"getServerPortCalledBeforeEndpointsInitialized", jni::ref<org::omg::CORBA::INITIALIZE>>(); }
	jni::ref<org::omg::CORBA::INITIALIZE> persistentServerportNotSet(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"persistentServerportNotSet", jni::ref<org::omg::CORBA::INITIALIZE>>(p1, p2); }
	jni::ref<org::omg::CORBA::INITIALIZE> persistentServerportNotSet(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"persistentServerportNotSet", jni::ref<org::omg::CORBA::INITIALIZE>>(p1); }
	jni::ref<org::omg::CORBA::INITIALIZE> persistentServerportNotSet(jni::ref<java::lang::Throwable> p1) { return call_method<"persistentServerportNotSet", jni::ref<org::omg::CORBA::INITIALIZE>>(p1); }
	jni::ref<org::omg::CORBA::INITIALIZE> persistentServerportNotSet() { return call_method<"persistentServerportNotSet", jni::ref<org::omg::CORBA::INITIALIZE>>(); }
	jni::ref<org::omg::CORBA::INITIALIZE> persistentServeridNotSet(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"persistentServeridNotSet", jni::ref<org::omg::CORBA::INITIALIZE>>(p1, p2); }
	jni::ref<org::omg::CORBA::INITIALIZE> persistentServeridNotSet(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"persistentServeridNotSet", jni::ref<org::omg::CORBA::INITIALIZE>>(p1); }
	jni::ref<org::omg::CORBA::INITIALIZE> persistentServeridNotSet(jni::ref<java::lang::Throwable> p1) { return call_method<"persistentServeridNotSet", jni::ref<org::omg::CORBA::INITIALIZE>>(p1); }
	jni::ref<org::omg::CORBA::INITIALIZE> persistentServeridNotSet() { return call_method<"persistentServeridNotSet", jni::ref<org::omg::CORBA::INITIALIZE>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> nonExistentOrbid(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"nonExistentOrbid", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> nonExistentOrbid(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"nonExistentOrbid", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> nonExistentOrbid(jni::ref<java::lang::Throwable> p1) { return call_method<"nonExistentOrbid", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> nonExistentOrbid() { return call_method<"nonExistentOrbid", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> noServerSubcontract(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"noServerSubcontract", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> noServerSubcontract(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"noServerSubcontract", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> noServerSubcontract(jni::ref<java::lang::Throwable> p1) { return call_method<"noServerSubcontract", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> noServerSubcontract() { return call_method<"noServerSubcontract", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> serverScTempSize(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"serverScTempSize", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> serverScTempSize(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"serverScTempSize", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> serverScTempSize(jni::ref<java::lang::Throwable> p1) { return call_method<"serverScTempSize", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> serverScTempSize() { return call_method<"serverScTempSize", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> noClientScClass(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"noClientScClass", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> noClientScClass(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"noClientScClass", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> noClientScClass(jni::ref<java::lang::Throwable> p1) { return call_method<"noClientScClass", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> noClientScClass() { return call_method<"noClientScClass", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> serverScNoIiopProfile(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"serverScNoIiopProfile", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> serverScNoIiopProfile(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"serverScNoIiopProfile", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> serverScNoIiopProfile(jni::ref<java::lang::Throwable> p1) { return call_method<"serverScNoIiopProfile", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> serverScNoIiopProfile() { return call_method<"serverScNoIiopProfile", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> getSystemExReturnedNull(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"getSystemExReturnedNull", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> getSystemExReturnedNull(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"getSystemExReturnedNull", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> getSystemExReturnedNull(jni::ref<java::lang::Throwable> p1) { return call_method<"getSystemExReturnedNull", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> getSystemExReturnedNull() { return call_method<"getSystemExReturnedNull", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> peekstringFailed(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"peekstringFailed", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> peekstringFailed(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"peekstringFailed", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> peekstringFailed(jni::ref<java::lang::Throwable> p1) { return call_method<"peekstringFailed", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> peekstringFailed() { return call_method<"peekstringFailed", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> getLocalHostFailed(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"getLocalHostFailed", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> getLocalHostFailed(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"getLocalHostFailed", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> getLocalHostFailed(jni::ref<java::lang::Throwable> p1) { return call_method<"getLocalHostFailed", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> getLocalHostFailed() { return call_method<"getLocalHostFailed", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> badLocateRequestStatus(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"badLocateRequestStatus", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> badLocateRequestStatus(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"badLocateRequestStatus", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> badLocateRequestStatus(jni::ref<java::lang::Throwable> p1) { return call_method<"badLocateRequestStatus", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> badLocateRequestStatus() { return call_method<"badLocateRequestStatus", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> stringifyWriteError(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"stringifyWriteError", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> stringifyWriteError(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"stringifyWriteError", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> stringifyWriteError(jni::ref<java::lang::Throwable> p1) { return call_method<"stringifyWriteError", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> stringifyWriteError() { return call_method<"stringifyWriteError", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> badGiopRequestType(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"badGiopRequestType", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> badGiopRequestType(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"badGiopRequestType", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> badGiopRequestType(jni::ref<java::lang::Throwable> p1) { return call_method<"badGiopRequestType", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> badGiopRequestType() { return call_method<"badGiopRequestType", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> errorUnmarshalingUserexc(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"errorUnmarshalingUserexc", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> errorUnmarshalingUserexc(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"errorUnmarshalingUserexc", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> errorUnmarshalingUserexc(jni::ref<java::lang::Throwable> p1) { return call_method<"errorUnmarshalingUserexc", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> errorUnmarshalingUserexc() { return call_method<"errorUnmarshalingUserexc", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> requestdispatcherregistryError(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"requestdispatcherregistryError", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> requestdispatcherregistryError(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"requestdispatcherregistryError", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> requestdispatcherregistryError(jni::ref<java::lang::Throwable> p1) { return call_method<"requestdispatcherregistryError", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> requestdispatcherregistryError() { return call_method<"requestdispatcherregistryError", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> locationforwardError(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"locationforwardError", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> locationforwardError(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"locationforwardError", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> locationforwardError(jni::ref<java::lang::Throwable> p1) { return call_method<"locationforwardError", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> locationforwardError() { return call_method<"locationforwardError", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> wrongClientsc(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"wrongClientsc", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> wrongClientsc(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"wrongClientsc", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> wrongClientsc(jni::ref<java::lang::Throwable> p1) { return call_method<"wrongClientsc", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> wrongClientsc() { return call_method<"wrongClientsc", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> badServantReadObject(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"badServantReadObject", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> badServantReadObject(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"badServantReadObject", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> badServantReadObject(jni::ref<java::lang::Throwable> p1) { return call_method<"badServantReadObject", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> badServantReadObject() { return call_method<"badServantReadObject", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> multIiopProfNotSupported(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"multIiopProfNotSupported", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> multIiopProfNotSupported(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"multIiopProfNotSupported", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> multIiopProfNotSupported(jni::ref<java::lang::Throwable> p1) { return call_method<"multIiopProfNotSupported", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> multIiopProfNotSupported() { return call_method<"multIiopProfNotSupported", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> giopMagicError(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"giopMagicError", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> giopMagicError(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"giopMagicError", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> giopMagicError(jni::ref<java::lang::Throwable> p1) { return call_method<"giopMagicError", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> giopMagicError() { return call_method<"giopMagicError", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> giopVersionError(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"giopVersionError", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> giopVersionError(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"giopVersionError", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> giopVersionError(jni::ref<java::lang::Throwable> p1) { return call_method<"giopVersionError", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> giopVersionError() { return call_method<"giopVersionError", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> illegalReplyStatus(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"illegalReplyStatus", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> illegalReplyStatus(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"illegalReplyStatus", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> illegalReplyStatus(jni::ref<java::lang::Throwable> p1) { return call_method<"illegalReplyStatus", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> illegalReplyStatus() { return call_method<"illegalReplyStatus", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> illegalGiopMsgType(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"illegalGiopMsgType", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> illegalGiopMsgType(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"illegalGiopMsgType", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> illegalGiopMsgType(jni::ref<java::lang::Throwable> p1) { return call_method<"illegalGiopMsgType", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> illegalGiopMsgType() { return call_method<"illegalGiopMsgType", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> fragmentationDisallowed(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"fragmentationDisallowed", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> fragmentationDisallowed(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"fragmentationDisallowed", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> fragmentationDisallowed(jni::ref<java::lang::Throwable> p1) { return call_method<"fragmentationDisallowed", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> fragmentationDisallowed() { return call_method<"fragmentationDisallowed", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> badReplystatus(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"badReplystatus", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> badReplystatus(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"badReplystatus", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> badReplystatus(jni::ref<java::lang::Throwable> p1) { return call_method<"badReplystatus", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> badReplystatus() { return call_method<"badReplystatus", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> ctbConverterFailure(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"ctbConverterFailure", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> ctbConverterFailure(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"ctbConverterFailure", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> ctbConverterFailure(jni::ref<java::lang::Throwable> p1) { return call_method<"ctbConverterFailure", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> ctbConverterFailure() { return call_method<"ctbConverterFailure", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> btcConverterFailure(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"btcConverterFailure", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> btcConverterFailure(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"btcConverterFailure", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> btcConverterFailure(jni::ref<java::lang::Throwable> p1) { return call_method<"btcConverterFailure", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> btcConverterFailure() { return call_method<"btcConverterFailure", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> wcharArrayUnsupportedEncoding(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"wcharArrayUnsupportedEncoding", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> wcharArrayUnsupportedEncoding(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"wcharArrayUnsupportedEncoding", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> wcharArrayUnsupportedEncoding(jni::ref<java::lang::Throwable> p1) { return call_method<"wcharArrayUnsupportedEncoding", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> wcharArrayUnsupportedEncoding() { return call_method<"wcharArrayUnsupportedEncoding", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> illegalTargetAddressDisposition(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"illegalTargetAddressDisposition", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> illegalTargetAddressDisposition(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"illegalTargetAddressDisposition", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> illegalTargetAddressDisposition(jni::ref<java::lang::Throwable> p1) { return call_method<"illegalTargetAddressDisposition", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> illegalTargetAddressDisposition() { return call_method<"illegalTargetAddressDisposition", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> nullReplyInGetAddrDisposition(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"nullReplyInGetAddrDisposition", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> nullReplyInGetAddrDisposition(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"nullReplyInGetAddrDisposition", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> nullReplyInGetAddrDisposition(jni::ref<java::lang::Throwable> p1) { return call_method<"nullReplyInGetAddrDisposition", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> nullReplyInGetAddrDisposition() { return call_method<"nullReplyInGetAddrDisposition", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> orbTargetAddrPreferenceInExtractObjectkeyInvalid(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"orbTargetAddrPreferenceInExtractObjectkeyInvalid", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> orbTargetAddrPreferenceInExtractObjectkeyInvalid(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"orbTargetAddrPreferenceInExtractObjectkeyInvalid", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> orbTargetAddrPreferenceInExtractObjectkeyInvalid(jni::ref<java::lang::Throwable> p1) { return call_method<"orbTargetAddrPreferenceInExtractObjectkeyInvalid", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> orbTargetAddrPreferenceInExtractObjectkeyInvalid() { return call_method<"orbTargetAddrPreferenceInExtractObjectkeyInvalid", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> invalidIsstreamedTckind(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"invalidIsstreamedTckind", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> invalidIsstreamedTckind(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"invalidIsstreamedTckind", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> invalidIsstreamedTckind(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"invalidIsstreamedTckind", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> invalidIsstreamedTckind(jni::ref<java::lang::Object> p1) { return call_method<"invalidIsstreamedTckind", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> invalidJdk131PatchLevel(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"invalidJdk131PatchLevel", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> invalidJdk131PatchLevel(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"invalidJdk131PatchLevel", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> invalidJdk131PatchLevel(jni::ref<java::lang::Throwable> p1) { return call_method<"invalidJdk131PatchLevel", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> invalidJdk131PatchLevel() { return call_method<"invalidJdk131PatchLevel", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> svcctxUnmarshalError(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"svcctxUnmarshalError", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> svcctxUnmarshalError(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"svcctxUnmarshalError", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> svcctxUnmarshalError(jni::ref<java::lang::Throwable> p1) { return call_method<"svcctxUnmarshalError", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> svcctxUnmarshalError() { return call_method<"svcctxUnmarshalError", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> nullIor(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"nullIor", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> nullIor(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"nullIor", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> nullIor(jni::ref<java::lang::Throwable> p1) { return call_method<"nullIor", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> nullIor() { return call_method<"nullIor", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> unsupportedGiopVersion(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"unsupportedGiopVersion", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> unsupportedGiopVersion(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"unsupportedGiopVersion", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> unsupportedGiopVersion(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"unsupportedGiopVersion", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> unsupportedGiopVersion(jni::ref<java::lang::Object> p1) { return call_method<"unsupportedGiopVersion", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> applicationExceptionInSpecialMethod(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"applicationExceptionInSpecialMethod", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> applicationExceptionInSpecialMethod(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"applicationExceptionInSpecialMethod", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> applicationExceptionInSpecialMethod(jni::ref<java::lang::Throwable> p1) { return call_method<"applicationExceptionInSpecialMethod", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> applicationExceptionInSpecialMethod() { return call_method<"applicationExceptionInSpecialMethod", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> statementNotReachable1(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"statementNotReachable1", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> statementNotReachable1(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"statementNotReachable1", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> statementNotReachable1(jni::ref<java::lang::Throwable> p1) { return call_method<"statementNotReachable1", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> statementNotReachable1() { return call_method<"statementNotReachable1", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> statementNotReachable2(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"statementNotReachable2", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> statementNotReachable2(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"statementNotReachable2", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> statementNotReachable2(jni::ref<java::lang::Throwable> p1) { return call_method<"statementNotReachable2", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> statementNotReachable2() { return call_method<"statementNotReachable2", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> statementNotReachable3(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"statementNotReachable3", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> statementNotReachable3(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"statementNotReachable3", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> statementNotReachable3(jni::ref<java::lang::Throwable> p1) { return call_method<"statementNotReachable3", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> statementNotReachable3() { return call_method<"statementNotReachable3", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> statementNotReachable4(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"statementNotReachable4", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> statementNotReachable4(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"statementNotReachable4", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> statementNotReachable4(jni::ref<java::lang::Throwable> p1) { return call_method<"statementNotReachable4", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> statementNotReachable4() { return call_method<"statementNotReachable4", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> statementNotReachable5(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"statementNotReachable5", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> statementNotReachable5(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"statementNotReachable5", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> statementNotReachable5(jni::ref<java::lang::Throwable> p1) { return call_method<"statementNotReachable5", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> statementNotReachable5() { return call_method<"statementNotReachable5", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> statementNotReachable6(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"statementNotReachable6", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> statementNotReachable6(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"statementNotReachable6", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> statementNotReachable6(jni::ref<java::lang::Throwable> p1) { return call_method<"statementNotReachable6", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> statementNotReachable6() { return call_method<"statementNotReachable6", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> unexpectedDiiException(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"unexpectedDiiException", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> unexpectedDiiException(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"unexpectedDiiException", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> unexpectedDiiException(jni::ref<java::lang::Throwable> p1) { return call_method<"unexpectedDiiException", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> unexpectedDiiException() { return call_method<"unexpectedDiiException", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> methodShouldNotBeCalled(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"methodShouldNotBeCalled", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> methodShouldNotBeCalled(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"methodShouldNotBeCalled", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> methodShouldNotBeCalled(jni::ref<java::lang::Throwable> p1) { return call_method<"methodShouldNotBeCalled", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> methodShouldNotBeCalled() { return call_method<"methodShouldNotBeCalled", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> cancelNotSupported(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"cancelNotSupported", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> cancelNotSupported(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"cancelNotSupported", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> cancelNotSupported(jni::ref<java::lang::Throwable> p1) { return call_method<"cancelNotSupported", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> cancelNotSupported() { return call_method<"cancelNotSupported", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> emptyStackRunServantPostInvoke(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"emptyStackRunServantPostInvoke", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> emptyStackRunServantPostInvoke(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"emptyStackRunServantPostInvoke", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> emptyStackRunServantPostInvoke(jni::ref<java::lang::Throwable> p1) { return call_method<"emptyStackRunServantPostInvoke", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> emptyStackRunServantPostInvoke() { return call_method<"emptyStackRunServantPostInvoke", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> problemWithExceptionTypecode(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"problemWithExceptionTypecode", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> problemWithExceptionTypecode(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"problemWithExceptionTypecode", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> problemWithExceptionTypecode(jni::ref<java::lang::Throwable> p1) { return call_method<"problemWithExceptionTypecode", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> problemWithExceptionTypecode() { return call_method<"problemWithExceptionTypecode", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> illegalSubcontractId(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"illegalSubcontractId", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> illegalSubcontractId(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"illegalSubcontractId", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> illegalSubcontractId(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"illegalSubcontractId", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> illegalSubcontractId(jni::ref<java::lang::Object> p1) { return call_method<"illegalSubcontractId", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> badSystemExceptionInLocateReply(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"badSystemExceptionInLocateReply", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> badSystemExceptionInLocateReply(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"badSystemExceptionInLocateReply", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> badSystemExceptionInLocateReply(jni::ref<java::lang::Throwable> p1) { return call_method<"badSystemExceptionInLocateReply", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> badSystemExceptionInLocateReply() { return call_method<"badSystemExceptionInLocateReply", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> badSystemExceptionInReply(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"badSystemExceptionInReply", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> badSystemExceptionInReply(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"badSystemExceptionInReply", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> badSystemExceptionInReply(jni::ref<java::lang::Throwable> p1) { return call_method<"badSystemExceptionInReply", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> badSystemExceptionInReply() { return call_method<"badSystemExceptionInReply", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> badCompletionStatusInLocateReply(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"badCompletionStatusInLocateReply", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> badCompletionStatusInLocateReply(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"badCompletionStatusInLocateReply", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> badCompletionStatusInLocateReply(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"badCompletionStatusInLocateReply", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> badCompletionStatusInLocateReply(jni::ref<java::lang::Object> p1) { return call_method<"badCompletionStatusInLocateReply", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> badCompletionStatusInReply(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"badCompletionStatusInReply", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> badCompletionStatusInReply(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"badCompletionStatusInReply", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> badCompletionStatusInReply(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"badCompletionStatusInReply", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> badCompletionStatusInReply(jni::ref<java::lang::Object> p1) { return call_method<"badCompletionStatusInReply", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> badkindCannotOccur(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"badkindCannotOccur", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> badkindCannotOccur(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"badkindCannotOccur", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> badkindCannotOccur(jni::ref<java::lang::Throwable> p1) { return call_method<"badkindCannotOccur", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> badkindCannotOccur() { return call_method<"badkindCannotOccur", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> errorResolvingAlias(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"errorResolvingAlias", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> errorResolvingAlias(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"errorResolvingAlias", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> errorResolvingAlias(jni::ref<java::lang::Throwable> p1) { return call_method<"errorResolvingAlias", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> errorResolvingAlias() { return call_method<"errorResolvingAlias", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> tkLongDoubleNotSupported(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"tkLongDoubleNotSupported", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> tkLongDoubleNotSupported(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"tkLongDoubleNotSupported", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> tkLongDoubleNotSupported(jni::ref<java::lang::Throwable> p1) { return call_method<"tkLongDoubleNotSupported", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> tkLongDoubleNotSupported() { return call_method<"tkLongDoubleNotSupported", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> typecodeNotSupported(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"typecodeNotSupported", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> typecodeNotSupported(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"typecodeNotSupported", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> typecodeNotSupported(jni::ref<java::lang::Throwable> p1) { return call_method<"typecodeNotSupported", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> typecodeNotSupported() { return call_method<"typecodeNotSupported", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> boundsCannotOccur(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"boundsCannotOccur", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> boundsCannotOccur(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"boundsCannotOccur", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> boundsCannotOccur(jni::ref<java::lang::Throwable> p1) { return call_method<"boundsCannotOccur", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> boundsCannotOccur() { return call_method<"boundsCannotOccur", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> numInvocationsAlreadyZero(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"numInvocationsAlreadyZero", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> numInvocationsAlreadyZero(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"numInvocationsAlreadyZero", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> numInvocationsAlreadyZero(jni::ref<java::lang::Throwable> p1) { return call_method<"numInvocationsAlreadyZero", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> numInvocationsAlreadyZero() { return call_method<"numInvocationsAlreadyZero", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> errorInitBadserveridhandler(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"errorInitBadserveridhandler", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> errorInitBadserveridhandler(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"errorInitBadserveridhandler", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> errorInitBadserveridhandler(jni::ref<java::lang::Throwable> p1) { return call_method<"errorInitBadserveridhandler", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> errorInitBadserveridhandler() { return call_method<"errorInitBadserveridhandler", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> noToa(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"noToa", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> noToa(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"noToa", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> noToa(jni::ref<java::lang::Throwable> p1) { return call_method<"noToa", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> noToa() { return call_method<"noToa", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> noPoa(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"noPoa", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> noPoa(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"noPoa", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> noPoa(jni::ref<java::lang::Throwable> p1) { return call_method<"noPoa", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> noPoa() { return call_method<"noPoa", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> invocationInfoStackEmpty(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"invocationInfoStackEmpty", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> invocationInfoStackEmpty(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"invocationInfoStackEmpty", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> invocationInfoStackEmpty(jni::ref<java::lang::Throwable> p1) { return call_method<"invocationInfoStackEmpty", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> invocationInfoStackEmpty() { return call_method<"invocationInfoStackEmpty", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> badCodeSetString(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"badCodeSetString", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> badCodeSetString(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"badCodeSetString", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> badCodeSetString(jni::ref<java::lang::Throwable> p1) { return call_method<"badCodeSetString", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> badCodeSetString() { return call_method<"badCodeSetString", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> unknownNativeCodeset(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"unknownNativeCodeset", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> unknownNativeCodeset(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"unknownNativeCodeset", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> unknownNativeCodeset(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"unknownNativeCodeset", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> unknownNativeCodeset(jni::ref<java::lang::Object> p1) { return call_method<"unknownNativeCodeset", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> unknownConversionCodeSet(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"unknownConversionCodeSet", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> unknownConversionCodeSet(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"unknownConversionCodeSet", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> unknownConversionCodeSet(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"unknownConversionCodeSet", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> unknownConversionCodeSet(jni::ref<java::lang::Object> p1) { return call_method<"unknownConversionCodeSet", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> invalidCodeSetNumber(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"invalidCodeSetNumber", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> invalidCodeSetNumber(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"invalidCodeSetNumber", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> invalidCodeSetNumber(jni::ref<java::lang::Throwable> p1) { return call_method<"invalidCodeSetNumber", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> invalidCodeSetNumber() { return call_method<"invalidCodeSetNumber", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> invalidCodeSetString(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"invalidCodeSetString", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> invalidCodeSetString(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"invalidCodeSetString", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> invalidCodeSetString(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"invalidCodeSetString", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> invalidCodeSetString(jni::ref<java::lang::Object> p1) { return call_method<"invalidCodeSetString", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> invalidCtbConverterName(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"invalidCtbConverterName", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> invalidCtbConverterName(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"invalidCtbConverterName", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> invalidCtbConverterName(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"invalidCtbConverterName", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> invalidCtbConverterName(jni::ref<java::lang::Object> p1) { return call_method<"invalidCtbConverterName", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> invalidBtcConverterName(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"invalidBtcConverterName", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> invalidBtcConverterName(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"invalidBtcConverterName", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> invalidBtcConverterName(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"invalidBtcConverterName", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> invalidBtcConverterName(jni::ref<java::lang::Object> p1) { return call_method<"invalidBtcConverterName", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> couldNotDuplicateCdrInputStream(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"couldNotDuplicateCdrInputStream", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> couldNotDuplicateCdrInputStream(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"couldNotDuplicateCdrInputStream", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> couldNotDuplicateCdrInputStream(jni::ref<java::lang::Throwable> p1) { return call_method<"couldNotDuplicateCdrInputStream", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> couldNotDuplicateCdrInputStream() { return call_method<"couldNotDuplicateCdrInputStream", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> bootstrapApplicationException(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"bootstrapApplicationException", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> bootstrapApplicationException(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"bootstrapApplicationException", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> bootstrapApplicationException(jni::ref<java::lang::Throwable> p1) { return call_method<"bootstrapApplicationException", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> bootstrapApplicationException() { return call_method<"bootstrapApplicationException", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> duplicateIndirectionOffset(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"duplicateIndirectionOffset", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> duplicateIndirectionOffset(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"duplicateIndirectionOffset", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> duplicateIndirectionOffset(jni::ref<java::lang::Throwable> p1) { return call_method<"duplicateIndirectionOffset", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> duplicateIndirectionOffset() { return call_method<"duplicateIndirectionOffset", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> badMessageTypeForCancel(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"badMessageTypeForCancel", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> badMessageTypeForCancel(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"badMessageTypeForCancel", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> badMessageTypeForCancel(jni::ref<java::lang::Throwable> p1) { return call_method<"badMessageTypeForCancel", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> badMessageTypeForCancel() { return call_method<"badMessageTypeForCancel", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> duplicateExceptionDetailMessage(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"duplicateExceptionDetailMessage", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> duplicateExceptionDetailMessage(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"duplicateExceptionDetailMessage", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> duplicateExceptionDetailMessage(jni::ref<java::lang::Throwable> p1) { return call_method<"duplicateExceptionDetailMessage", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> duplicateExceptionDetailMessage() { return call_method<"duplicateExceptionDetailMessage", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> badExceptionDetailMessageServiceContextType(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"badExceptionDetailMessageServiceContextType", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> badExceptionDetailMessageServiceContextType(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"badExceptionDetailMessageServiceContextType", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> badExceptionDetailMessageServiceContextType(jni::ref<java::lang::Throwable> p1) { return call_method<"badExceptionDetailMessageServiceContextType", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> badExceptionDetailMessageServiceContextType() { return call_method<"badExceptionDetailMessageServiceContextType", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> unexpectedDirectByteBufferWithNonChannelSocket(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"unexpectedDirectByteBufferWithNonChannelSocket", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> unexpectedDirectByteBufferWithNonChannelSocket(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"unexpectedDirectByteBufferWithNonChannelSocket", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> unexpectedDirectByteBufferWithNonChannelSocket(jni::ref<java::lang::Throwable> p1) { return call_method<"unexpectedDirectByteBufferWithNonChannelSocket", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> unexpectedDirectByteBufferWithNonChannelSocket() { return call_method<"unexpectedDirectByteBufferWithNonChannelSocket", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> unexpectedNonDirectByteBufferWithChannelSocket(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"unexpectedNonDirectByteBufferWithChannelSocket", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> unexpectedNonDirectByteBufferWithChannelSocket(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"unexpectedNonDirectByteBufferWithChannelSocket", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> unexpectedNonDirectByteBufferWithChannelSocket(jni::ref<java::lang::Throwable> p1) { return call_method<"unexpectedNonDirectByteBufferWithChannelSocket", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> unexpectedNonDirectByteBufferWithChannelSocket() { return call_method<"unexpectedNonDirectByteBufferWithChannelSocket", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> invalidContactInfoListIteratorFailureException(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"invalidContactInfoListIteratorFailureException", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> invalidContactInfoListIteratorFailureException(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"invalidContactInfoListIteratorFailureException", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> invalidContactInfoListIteratorFailureException(jni::ref<java::lang::Throwable> p1) { return call_method<"invalidContactInfoListIteratorFailureException", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> invalidContactInfoListIteratorFailureException() { return call_method<"invalidContactInfoListIteratorFailureException", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> remarshalWithNowhereToGo(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"remarshalWithNowhereToGo", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> remarshalWithNowhereToGo(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"remarshalWithNowhereToGo", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> remarshalWithNowhereToGo(jni::ref<java::lang::Throwable> p1) { return call_method<"remarshalWithNowhereToGo", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> remarshalWithNowhereToGo() { return call_method<"remarshalWithNowhereToGo", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> exceptionWhenSendingCloseConnection(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"exceptionWhenSendingCloseConnection", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> exceptionWhenSendingCloseConnection(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"exceptionWhenSendingCloseConnection", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> exceptionWhenSendingCloseConnection(jni::ref<java::lang::Throwable> p1) { return call_method<"exceptionWhenSendingCloseConnection", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> exceptionWhenSendingCloseConnection() { return call_method<"exceptionWhenSendingCloseConnection", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> invocationErrorInReflectiveTie(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"invocationErrorInReflectiveTie", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::INTERNAL> invocationErrorInReflectiveTie(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"invocationErrorInReflectiveTie", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> invocationErrorInReflectiveTie(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"invocationErrorInReflectiveTie", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> invocationErrorInReflectiveTie(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2) { return call_method<"invocationErrorInReflectiveTie", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> badHelperWriteMethod(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"badHelperWriteMethod", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> badHelperWriteMethod(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"badHelperWriteMethod", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> badHelperWriteMethod(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"badHelperWriteMethod", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> badHelperWriteMethod(jni::ref<java::lang::Object> p1) { return call_method<"badHelperWriteMethod", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> badHelperReadMethod(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"badHelperReadMethod", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> badHelperReadMethod(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"badHelperReadMethod", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> badHelperReadMethod(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"badHelperReadMethod", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> badHelperReadMethod(jni::ref<java::lang::Object> p1) { return call_method<"badHelperReadMethod", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> badHelperIdMethod(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"badHelperIdMethod", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> badHelperIdMethod(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"badHelperIdMethod", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> badHelperIdMethod(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"badHelperIdMethod", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> badHelperIdMethod(jni::ref<java::lang::Object> p1) { return call_method<"badHelperIdMethod", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> writeUndeclaredException(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"writeUndeclaredException", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> writeUndeclaredException(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"writeUndeclaredException", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> writeUndeclaredException(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"writeUndeclaredException", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> writeUndeclaredException(jni::ref<java::lang::Object> p1) { return call_method<"writeUndeclaredException", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> readUndeclaredException(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"readUndeclaredException", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> readUndeclaredException(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"readUndeclaredException", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> readUndeclaredException(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"readUndeclaredException", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> readUndeclaredException(jni::ref<java::lang::Object> p1) { return call_method<"readUndeclaredException", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> unableToSetSocketFactoryOrb(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"unableToSetSocketFactoryOrb", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> unableToSetSocketFactoryOrb(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"unableToSetSocketFactoryOrb", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> unableToSetSocketFactoryOrb(jni::ref<java::lang::Throwable> p1) { return call_method<"unableToSetSocketFactoryOrb", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> unableToSetSocketFactoryOrb() { return call_method<"unableToSetSocketFactoryOrb", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> unexpectedException(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"unexpectedException", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> unexpectedException(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"unexpectedException", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> unexpectedException(jni::ref<java::lang::Throwable> p1) { return call_method<"unexpectedException", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> unexpectedException() { return call_method<"unexpectedException", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> noInvocationHandler(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"noInvocationHandler", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> noInvocationHandler(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"noInvocationHandler", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> noInvocationHandler(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"noInvocationHandler", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> noInvocationHandler(jni::ref<java::lang::Object> p1) { return call_method<"noInvocationHandler", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> invalidBuffMgrStrategy(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"invalidBuffMgrStrategy", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> invalidBuffMgrStrategy(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"invalidBuffMgrStrategy", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> invalidBuffMgrStrategy(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"invalidBuffMgrStrategy", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> invalidBuffMgrStrategy(jni::ref<java::lang::Object> p1) { return call_method<"invalidBuffMgrStrategy", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> javaStreamInitFailed(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"javaStreamInitFailed", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> javaStreamInitFailed(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"javaStreamInitFailed", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> javaStreamInitFailed(jni::ref<java::lang::Throwable> p1) { return call_method<"javaStreamInitFailed", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> javaStreamInitFailed() { return call_method<"javaStreamInitFailed", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> duplicateOrbVersionServiceContext(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"duplicateOrbVersionServiceContext", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> duplicateOrbVersionServiceContext(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"duplicateOrbVersionServiceContext", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> duplicateOrbVersionServiceContext(jni::ref<java::lang::Throwable> p1) { return call_method<"duplicateOrbVersionServiceContext", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> duplicateOrbVersionServiceContext() { return call_method<"duplicateOrbVersionServiceContext", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> duplicateSendingContextServiceContext(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"duplicateSendingContextServiceContext", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> duplicateSendingContextServiceContext(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"duplicateSendingContextServiceContext", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> duplicateSendingContextServiceContext(jni::ref<java::lang::Throwable> p1) { return call_method<"duplicateSendingContextServiceContext", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> duplicateSendingContextServiceContext() { return call_method<"duplicateSendingContextServiceContext", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> workQueueThreadInterrupted(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"workQueueThreadInterrupted", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::INTERNAL> workQueueThreadInterrupted(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"workQueueThreadInterrupted", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> workQueueThreadInterrupted(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"workQueueThreadInterrupted", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> workQueueThreadInterrupted(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2) { return call_method<"workQueueThreadInterrupted", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> workerThreadCreated(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"workerThreadCreated", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::INTERNAL> workerThreadCreated(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"workerThreadCreated", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> workerThreadCreated(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"workerThreadCreated", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> workerThreadCreated(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2) { return call_method<"workerThreadCreated", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> workerThreadThrowableFromRequestWork(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4, jni::ref<java::lang::Object> p5) { return call_method<"workerThreadThrowableFromRequestWork", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4, p5); }
	jni::ref<org::omg::CORBA::INTERNAL> workerThreadThrowableFromRequestWork(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"workerThreadThrowableFromRequestWork", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::INTERNAL> workerThreadThrowableFromRequestWork(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"workerThreadThrowableFromRequestWork", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::INTERNAL> workerThreadThrowableFromRequestWork(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"workerThreadThrowableFromRequestWork", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> workerThreadNotNeeded(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4, jni::ref<java::lang::Object> p5) { return call_method<"workerThreadNotNeeded", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4, p5); }
	jni::ref<org::omg::CORBA::INTERNAL> workerThreadNotNeeded(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"workerThreadNotNeeded", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::INTERNAL> workerThreadNotNeeded(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"workerThreadNotNeeded", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::INTERNAL> workerThreadNotNeeded(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"workerThreadNotNeeded", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> workerThreadDoWorkThrowable(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"workerThreadDoWorkThrowable", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::INTERNAL> workerThreadDoWorkThrowable(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"workerThreadDoWorkThrowable", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> workerThreadDoWorkThrowable(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"workerThreadDoWorkThrowable", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> workerThreadDoWorkThrowable(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2) { return call_method<"workerThreadDoWorkThrowable", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> workerThreadCaughtUnexpectedThrowable(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"workerThreadCaughtUnexpectedThrowable", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::INTERNAL> workerThreadCaughtUnexpectedThrowable(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"workerThreadCaughtUnexpectedThrowable", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> workerThreadCaughtUnexpectedThrowable(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"workerThreadCaughtUnexpectedThrowable", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> workerThreadCaughtUnexpectedThrowable(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2) { return call_method<"workerThreadCaughtUnexpectedThrowable", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> workerThreadCreationFailure(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"workerThreadCreationFailure", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> workerThreadCreationFailure(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"workerThreadCreationFailure", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> workerThreadCreationFailure(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"workerThreadCreationFailure", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> workerThreadCreationFailure(jni::ref<java::lang::Object> p1) { return call_method<"workerThreadCreationFailure", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> workerThreadSetNameFailure(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4, jni::ref<java::lang::Object> p5) { return call_method<"workerThreadSetNameFailure", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4, p5); }
	jni::ref<org::omg::CORBA::INTERNAL> workerThreadSetNameFailure(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"workerThreadSetNameFailure", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::INTERNAL> workerThreadSetNameFailure(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"workerThreadSetNameFailure", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::INTERNAL> workerThreadSetNameFailure(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"workerThreadSetNameFailure", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> workQueueRequestWorkNoWorkFound(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"workQueueRequestWorkNoWorkFound", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::INTERNAL> workQueueRequestWorkNoWorkFound(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"workQueueRequestWorkNoWorkFound", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> workQueueRequestWorkNoWorkFound(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"workQueueRequestWorkNoWorkFound", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> workQueueRequestWorkNoWorkFound(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2) { return call_method<"workQueueRequestWorkNoWorkFound", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> threadPoolCloseError(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"threadPoolCloseError", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> threadPoolCloseError(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"threadPoolCloseError", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> threadPoolCloseError(jni::ref<java::lang::Throwable> p1) { return call_method<"threadPoolCloseError", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> threadPoolCloseError() { return call_method<"threadPoolCloseError", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> threadGroupIsDestroyed(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"threadGroupIsDestroyed", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> threadGroupIsDestroyed(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"threadGroupIsDestroyed", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> threadGroupIsDestroyed(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"threadGroupIsDestroyed", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> threadGroupIsDestroyed(jni::ref<java::lang::Object> p1) { return call_method<"threadGroupIsDestroyed", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> threadGroupHasActiveThreadsInClose(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"threadGroupHasActiveThreadsInClose", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::INTERNAL> threadGroupHasActiveThreadsInClose(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"threadGroupHasActiveThreadsInClose", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> threadGroupHasActiveThreadsInClose(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"threadGroupHasActiveThreadsInClose", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> threadGroupHasActiveThreadsInClose(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2) { return call_method<"threadGroupHasActiveThreadsInClose", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> threadGroupHasSubGroupsInClose(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"threadGroupHasSubGroupsInClose", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::INTERNAL> threadGroupHasSubGroupsInClose(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"threadGroupHasSubGroupsInClose", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> threadGroupHasSubGroupsInClose(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"threadGroupHasSubGroupsInClose", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> threadGroupHasSubGroupsInClose(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2) { return call_method<"threadGroupHasSubGroupsInClose", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> threadGroupDestroyFailed(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"threadGroupDestroyFailed", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> threadGroupDestroyFailed(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"threadGroupDestroyFailed", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> threadGroupDestroyFailed(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"threadGroupDestroyFailed", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> threadGroupDestroyFailed(jni::ref<java::lang::Object> p1) { return call_method<"threadGroupDestroyFailed", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> interruptedJoinCallWhileClosingThreadPool(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"interruptedJoinCallWhileClosingThreadPool", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::INTERNAL> interruptedJoinCallWhileClosingThreadPool(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"interruptedJoinCallWhileClosingThreadPool", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> interruptedJoinCallWhileClosingThreadPool(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"interruptedJoinCallWhileClosingThreadPool", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> interruptedJoinCallWhileClosingThreadPool(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2) { return call_method<"interruptedJoinCallWhileClosingThreadPool", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> chunkOverflow(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"chunkOverflow", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> chunkOverflow(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"chunkOverflow", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> chunkOverflow(jni::ref<java::lang::Throwable> p1) { return call_method<"chunkOverflow", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> chunkOverflow() { return call_method<"chunkOverflow", jni::ref<org::omg::CORBA::MARSHAL>>(); }
	jni::ref<org::omg::CORBA::MARSHAL> unexpectedEof(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"unexpectedEof", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> unexpectedEof(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"unexpectedEof", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> unexpectedEof(jni::ref<java::lang::Throwable> p1) { return call_method<"unexpectedEof", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> unexpectedEof() { return call_method<"unexpectedEof", jni::ref<org::omg::CORBA::MARSHAL>>(); }
	jni::ref<org::omg::CORBA::MARSHAL> readObjectException(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"readObjectException", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> readObjectException(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"readObjectException", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> readObjectException(jni::ref<java::lang::Throwable> p1) { return call_method<"readObjectException", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> readObjectException() { return call_method<"readObjectException", jni::ref<org::omg::CORBA::MARSHAL>>(); }
	jni::ref<org::omg::CORBA::MARSHAL> characterOutofrange(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"characterOutofrange", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> characterOutofrange(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"characterOutofrange", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> characterOutofrange(jni::ref<java::lang::Throwable> p1) { return call_method<"characterOutofrange", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> characterOutofrange() { return call_method<"characterOutofrange", jni::ref<org::omg::CORBA::MARSHAL>>(); }
	jni::ref<org::omg::CORBA::MARSHAL> dsiResultException(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"dsiResultException", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> dsiResultException(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"dsiResultException", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> dsiResultException(jni::ref<java::lang::Throwable> p1) { return call_method<"dsiResultException", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> dsiResultException() { return call_method<"dsiResultException", jni::ref<org::omg::CORBA::MARSHAL>>(); }
	jni::ref<org::omg::CORBA::MARSHAL> iiopinputstreamGrow(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"iiopinputstreamGrow", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> iiopinputstreamGrow(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"iiopinputstreamGrow", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> iiopinputstreamGrow(jni::ref<java::lang::Throwable> p1) { return call_method<"iiopinputstreamGrow", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> iiopinputstreamGrow() { return call_method<"iiopinputstreamGrow", jni::ref<org::omg::CORBA::MARSHAL>>(); }
	jni::ref<org::omg::CORBA::MARSHAL> endOfStream(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"endOfStream", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> endOfStream(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"endOfStream", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> endOfStream(jni::ref<java::lang::Throwable> p1) { return call_method<"endOfStream", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> endOfStream() { return call_method<"endOfStream", jni::ref<org::omg::CORBA::MARSHAL>>(); }
	jni::ref<org::omg::CORBA::MARSHAL> invalidObjectKey(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"invalidObjectKey", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> invalidObjectKey(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"invalidObjectKey", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> invalidObjectKey(jni::ref<java::lang::Throwable> p1) { return call_method<"invalidObjectKey", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> invalidObjectKey() { return call_method<"invalidObjectKey", jni::ref<org::omg::CORBA::MARSHAL>>(); }
	jni::ref<org::omg::CORBA::MARSHAL> malformedUrl(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"malformedUrl", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::MARSHAL> malformedUrl(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"malformedUrl", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::MARSHAL> malformedUrl(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"malformedUrl", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::MARSHAL> malformedUrl(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2) { return call_method<"malformedUrl", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> valuehandlerReadError(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"valuehandlerReadError", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> valuehandlerReadError(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"valuehandlerReadError", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> valuehandlerReadError(jni::ref<java::lang::Throwable> p1) { return call_method<"valuehandlerReadError", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> valuehandlerReadError() { return call_method<"valuehandlerReadError", jni::ref<org::omg::CORBA::MARSHAL>>(); }
	jni::ref<org::omg::CORBA::MARSHAL> valuehandlerReadException(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"valuehandlerReadException", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> valuehandlerReadException(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"valuehandlerReadException", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> valuehandlerReadException(jni::ref<java::lang::Throwable> p1) { return call_method<"valuehandlerReadException", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> valuehandlerReadException() { return call_method<"valuehandlerReadException", jni::ref<org::omg::CORBA::MARSHAL>>(); }
	jni::ref<org::omg::CORBA::MARSHAL> badKind(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"badKind", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> badKind(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"badKind", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> badKind(jni::ref<java::lang::Throwable> p1) { return call_method<"badKind", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> badKind() { return call_method<"badKind", jni::ref<org::omg::CORBA::MARSHAL>>(); }
	jni::ref<org::omg::CORBA::MARSHAL> cnfeReadClass(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"cnfeReadClass", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::MARSHAL> cnfeReadClass(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"cnfeReadClass", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> cnfeReadClass(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"cnfeReadClass", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> cnfeReadClass(jni::ref<java::lang::Object> p1) { return call_method<"cnfeReadClass", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> badRepIdIndirection(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"badRepIdIndirection", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::MARSHAL> badRepIdIndirection(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"badRepIdIndirection", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> badRepIdIndirection(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"badRepIdIndirection", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> badRepIdIndirection(jni::ref<java::lang::Object> p1) { return call_method<"badRepIdIndirection", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> badCodebaseIndirection(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"badCodebaseIndirection", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::MARSHAL> badCodebaseIndirection(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"badCodebaseIndirection", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> badCodebaseIndirection(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"badCodebaseIndirection", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> badCodebaseIndirection(jni::ref<java::lang::Object> p1) { return call_method<"badCodebaseIndirection", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> unknownCodeset(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"unknownCodeset", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::MARSHAL> unknownCodeset(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"unknownCodeset", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> unknownCodeset(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"unknownCodeset", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> unknownCodeset(jni::ref<java::lang::Object> p1) { return call_method<"unknownCodeset", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> wcharDataInGiop10(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"wcharDataInGiop10", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> wcharDataInGiop10(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"wcharDataInGiop10", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> wcharDataInGiop10(jni::ref<java::lang::Throwable> p1) { return call_method<"wcharDataInGiop10", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> wcharDataInGiop10() { return call_method<"wcharDataInGiop10", jni::ref<org::omg::CORBA::MARSHAL>>(); }
	jni::ref<org::omg::CORBA::MARSHAL> negativeStringLength(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"negativeStringLength", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::MARSHAL> negativeStringLength(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"negativeStringLength", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> negativeStringLength(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"negativeStringLength", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> negativeStringLength(jni::ref<java::lang::Object> p1) { return call_method<"negativeStringLength", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> expectedTypeNullAndNoRepId(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"expectedTypeNullAndNoRepId", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> expectedTypeNullAndNoRepId(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"expectedTypeNullAndNoRepId", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> expectedTypeNullAndNoRepId(jni::ref<java::lang::Throwable> p1) { return call_method<"expectedTypeNullAndNoRepId", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> expectedTypeNullAndNoRepId() { return call_method<"expectedTypeNullAndNoRepId", jni::ref<org::omg::CORBA::MARSHAL>>(); }
	jni::ref<org::omg::CORBA::MARSHAL> readValueAndNoRepId(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"readValueAndNoRepId", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> readValueAndNoRepId(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"readValueAndNoRepId", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> readValueAndNoRepId(jni::ref<java::lang::Throwable> p1) { return call_method<"readValueAndNoRepId", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> readValueAndNoRepId() { return call_method<"readValueAndNoRepId", jni::ref<org::omg::CORBA::MARSHAL>>(); }
	jni::ref<org::omg::CORBA::MARSHAL> unexpectedEnclosingValuetype(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"unexpectedEnclosingValuetype", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::MARSHAL> unexpectedEnclosingValuetype(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"unexpectedEnclosingValuetype", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::MARSHAL> unexpectedEnclosingValuetype(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"unexpectedEnclosingValuetype", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::MARSHAL> unexpectedEnclosingValuetype(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2) { return call_method<"unexpectedEnclosingValuetype", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> positiveEndTag(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"positiveEndTag", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::MARSHAL> positiveEndTag(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"positiveEndTag", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::MARSHAL> positiveEndTag(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"positiveEndTag", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::MARSHAL> positiveEndTag(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2) { return call_method<"positiveEndTag", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> nullOutCall(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"nullOutCall", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> nullOutCall(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"nullOutCall", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> nullOutCall(jni::ref<java::lang::Throwable> p1) { return call_method<"nullOutCall", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> nullOutCall() { return call_method<"nullOutCall", jni::ref<org::omg::CORBA::MARSHAL>>(); }
	jni::ref<org::omg::CORBA::MARSHAL> writeLocalObject(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"writeLocalObject", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> writeLocalObject(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"writeLocalObject", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> writeLocalObject(jni::ref<java::lang::Throwable> p1) { return call_method<"writeLocalObject", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> writeLocalObject() { return call_method<"writeLocalObject", jni::ref<org::omg::CORBA::MARSHAL>>(); }
	jni::ref<org::omg::CORBA::MARSHAL> badInsertobjParam(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"badInsertobjParam", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::MARSHAL> badInsertobjParam(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"badInsertobjParam", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> badInsertobjParam(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"badInsertobjParam", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> badInsertobjParam(jni::ref<java::lang::Object> p1) { return call_method<"badInsertobjParam", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> customWrapperWithCodebase(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"customWrapperWithCodebase", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> customWrapperWithCodebase(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"customWrapperWithCodebase", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> customWrapperWithCodebase(jni::ref<java::lang::Throwable> p1) { return call_method<"customWrapperWithCodebase", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> customWrapperWithCodebase() { return call_method<"customWrapperWithCodebase", jni::ref<org::omg::CORBA::MARSHAL>>(); }
	jni::ref<org::omg::CORBA::MARSHAL> customWrapperIndirection(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"customWrapperIndirection", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> customWrapperIndirection(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"customWrapperIndirection", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> customWrapperIndirection(jni::ref<java::lang::Throwable> p1) { return call_method<"customWrapperIndirection", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> customWrapperIndirection() { return call_method<"customWrapperIndirection", jni::ref<org::omg::CORBA::MARSHAL>>(); }
	jni::ref<org::omg::CORBA::MARSHAL> customWrapperNotSingleRepid(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"customWrapperNotSingleRepid", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> customWrapperNotSingleRepid(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"customWrapperNotSingleRepid", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> customWrapperNotSingleRepid(jni::ref<java::lang::Throwable> p1) { return call_method<"customWrapperNotSingleRepid", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> customWrapperNotSingleRepid() { return call_method<"customWrapperNotSingleRepid", jni::ref<org::omg::CORBA::MARSHAL>>(); }
	jni::ref<org::omg::CORBA::MARSHAL> badValueTag(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"badValueTag", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::MARSHAL> badValueTag(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"badValueTag", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> badValueTag(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"badValueTag", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> badValueTag(jni::ref<java::lang::Object> p1) { return call_method<"badValueTag", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> badTypecodeForCustomValue(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"badTypecodeForCustomValue", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> badTypecodeForCustomValue(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"badTypecodeForCustomValue", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> badTypecodeForCustomValue(jni::ref<java::lang::Throwable> p1) { return call_method<"badTypecodeForCustomValue", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> badTypecodeForCustomValue() { return call_method<"badTypecodeForCustomValue", jni::ref<org::omg::CORBA::MARSHAL>>(); }
	jni::ref<org::omg::CORBA::MARSHAL> errorInvokingHelperWrite(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"errorInvokingHelperWrite", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> errorInvokingHelperWrite(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"errorInvokingHelperWrite", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> errorInvokingHelperWrite(jni::ref<java::lang::Throwable> p1) { return call_method<"errorInvokingHelperWrite", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> errorInvokingHelperWrite() { return call_method<"errorInvokingHelperWrite", jni::ref<org::omg::CORBA::MARSHAL>>(); }
	jni::ref<org::omg::CORBA::MARSHAL> badDigitInFixed(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"badDigitInFixed", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> badDigitInFixed(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"badDigitInFixed", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> badDigitInFixed(jni::ref<java::lang::Throwable> p1) { return call_method<"badDigitInFixed", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> badDigitInFixed() { return call_method<"badDigitInFixed", jni::ref<org::omg::CORBA::MARSHAL>>(); }
	jni::ref<org::omg::CORBA::MARSHAL> refTypeIndirType(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"refTypeIndirType", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> refTypeIndirType(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"refTypeIndirType", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> refTypeIndirType(jni::ref<java::lang::Throwable> p1) { return call_method<"refTypeIndirType", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> refTypeIndirType() { return call_method<"refTypeIndirType", jni::ref<org::omg::CORBA::MARSHAL>>(); }
	jni::ref<org::omg::CORBA::MARSHAL> badReservedLength(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"badReservedLength", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> badReservedLength(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"badReservedLength", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> badReservedLength(jni::ref<java::lang::Throwable> p1) { return call_method<"badReservedLength", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> badReservedLength() { return call_method<"badReservedLength", jni::ref<org::omg::CORBA::MARSHAL>>(); }
	jni::ref<org::omg::CORBA::MARSHAL> nullNotAllowed(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"nullNotAllowed", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> nullNotAllowed(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"nullNotAllowed", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> nullNotAllowed(jni::ref<java::lang::Throwable> p1) { return call_method<"nullNotAllowed", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> nullNotAllowed() { return call_method<"nullNotAllowed", jni::ref<org::omg::CORBA::MARSHAL>>(); }
	jni::ref<org::omg::CORBA::MARSHAL> unionDiscriminatorError(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"unionDiscriminatorError", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> unionDiscriminatorError(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"unionDiscriminatorError", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> unionDiscriminatorError(jni::ref<java::lang::Throwable> p1) { return call_method<"unionDiscriminatorError", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> unionDiscriminatorError() { return call_method<"unionDiscriminatorError", jni::ref<org::omg::CORBA::MARSHAL>>(); }
	jni::ref<org::omg::CORBA::MARSHAL> cannotMarshalNative(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"cannotMarshalNative", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> cannotMarshalNative(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"cannotMarshalNative", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> cannotMarshalNative(jni::ref<java::lang::Throwable> p1) { return call_method<"cannotMarshalNative", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> cannotMarshalNative() { return call_method<"cannotMarshalNative", jni::ref<org::omg::CORBA::MARSHAL>>(); }
	jni::ref<org::omg::CORBA::MARSHAL> cannotMarshalBadTckind(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"cannotMarshalBadTckind", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> cannotMarshalBadTckind(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"cannotMarshalBadTckind", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> cannotMarshalBadTckind(jni::ref<java::lang::Throwable> p1) { return call_method<"cannotMarshalBadTckind", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> cannotMarshalBadTckind() { return call_method<"cannotMarshalBadTckind", jni::ref<org::omg::CORBA::MARSHAL>>(); }
	jni::ref<org::omg::CORBA::MARSHAL> invalidIndirection(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"invalidIndirection", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::MARSHAL> invalidIndirection(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"invalidIndirection", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> invalidIndirection(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"invalidIndirection", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> invalidIndirection(jni::ref<java::lang::Object> p1) { return call_method<"invalidIndirection", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> indirectionNotFound(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"indirectionNotFound", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::MARSHAL> indirectionNotFound(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"indirectionNotFound", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> indirectionNotFound(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"indirectionNotFound", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> indirectionNotFound(jni::ref<java::lang::Object> p1) { return call_method<"indirectionNotFound", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> recursiveTypecodeError(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"recursiveTypecodeError", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> recursiveTypecodeError(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"recursiveTypecodeError", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> recursiveTypecodeError(jni::ref<java::lang::Throwable> p1) { return call_method<"recursiveTypecodeError", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> recursiveTypecodeError() { return call_method<"recursiveTypecodeError", jni::ref<org::omg::CORBA::MARSHAL>>(); }
	jni::ref<org::omg::CORBA::MARSHAL> invalidSimpleTypecode(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"invalidSimpleTypecode", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> invalidSimpleTypecode(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"invalidSimpleTypecode", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> invalidSimpleTypecode(jni::ref<java::lang::Throwable> p1) { return call_method<"invalidSimpleTypecode", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> invalidSimpleTypecode() { return call_method<"invalidSimpleTypecode", jni::ref<org::omg::CORBA::MARSHAL>>(); }
	jni::ref<org::omg::CORBA::MARSHAL> invalidComplexTypecode(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"invalidComplexTypecode", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> invalidComplexTypecode(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"invalidComplexTypecode", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> invalidComplexTypecode(jni::ref<java::lang::Throwable> p1) { return call_method<"invalidComplexTypecode", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> invalidComplexTypecode() { return call_method<"invalidComplexTypecode", jni::ref<org::omg::CORBA::MARSHAL>>(); }
	jni::ref<org::omg::CORBA::MARSHAL> invalidTypecodeKindMarshal(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"invalidTypecodeKindMarshal", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> invalidTypecodeKindMarshal(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"invalidTypecodeKindMarshal", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> invalidTypecodeKindMarshal(jni::ref<java::lang::Throwable> p1) { return call_method<"invalidTypecodeKindMarshal", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> invalidTypecodeKindMarshal() { return call_method<"invalidTypecodeKindMarshal", jni::ref<org::omg::CORBA::MARSHAL>>(); }
	jni::ref<org::omg::CORBA::MARSHAL> unexpectedUnionDefault(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"unexpectedUnionDefault", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> unexpectedUnionDefault(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"unexpectedUnionDefault", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> unexpectedUnionDefault(jni::ref<java::lang::Throwable> p1) { return call_method<"unexpectedUnionDefault", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> unexpectedUnionDefault() { return call_method<"unexpectedUnionDefault", jni::ref<org::omg::CORBA::MARSHAL>>(); }
	jni::ref<org::omg::CORBA::MARSHAL> illegalUnionDiscriminatorType(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"illegalUnionDiscriminatorType", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> illegalUnionDiscriminatorType(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"illegalUnionDiscriminatorType", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> illegalUnionDiscriminatorType(jni::ref<java::lang::Throwable> p1) { return call_method<"illegalUnionDiscriminatorType", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> illegalUnionDiscriminatorType() { return call_method<"illegalUnionDiscriminatorType", jni::ref<org::omg::CORBA::MARSHAL>>(); }
	jni::ref<org::omg::CORBA::MARSHAL> couldNotSkipBytes(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"couldNotSkipBytes", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::MARSHAL> couldNotSkipBytes(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"couldNotSkipBytes", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::MARSHAL> couldNotSkipBytes(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"couldNotSkipBytes", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::MARSHAL> couldNotSkipBytes(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2) { return call_method<"couldNotSkipBytes", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> badChunkLength(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"badChunkLength", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::MARSHAL> badChunkLength(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"badChunkLength", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::MARSHAL> badChunkLength(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"badChunkLength", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::MARSHAL> badChunkLength(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2) { return call_method<"badChunkLength", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> unableToLocateRepIdArray(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"unableToLocateRepIdArray", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::MARSHAL> unableToLocateRepIdArray(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"unableToLocateRepIdArray", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> unableToLocateRepIdArray(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"unableToLocateRepIdArray", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> unableToLocateRepIdArray(jni::ref<java::lang::Object> p1) { return call_method<"unableToLocateRepIdArray", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> badFixed(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"badFixed", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::MARSHAL> badFixed(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"badFixed", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::MARSHAL> badFixed(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"badFixed", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::MARSHAL> badFixed(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2) { return call_method<"badFixed", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> readObjectLoadClassFailure(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"readObjectLoadClassFailure", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::MARSHAL> readObjectLoadClassFailure(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"readObjectLoadClassFailure", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::MARSHAL> readObjectLoadClassFailure(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"readObjectLoadClassFailure", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::MARSHAL> readObjectLoadClassFailure(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2) { return call_method<"readObjectLoadClassFailure", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> couldNotInstantiateHelper(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"couldNotInstantiateHelper", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::MARSHAL> couldNotInstantiateHelper(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"couldNotInstantiateHelper", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> couldNotInstantiateHelper(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"couldNotInstantiateHelper", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> couldNotInstantiateHelper(jni::ref<java::lang::Object> p1) { return call_method<"couldNotInstantiateHelper", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> badToaOaid(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"badToaOaid", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> badToaOaid(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"badToaOaid", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> badToaOaid(jni::ref<java::lang::Throwable> p1) { return call_method<"badToaOaid", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> badToaOaid() { return call_method<"badToaOaid", jni::ref<org::omg::CORBA::MARSHAL>>(); }
	jni::ref<org::omg::CORBA::MARSHAL> couldNotInvokeHelperReadMethod(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"couldNotInvokeHelperReadMethod", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::MARSHAL> couldNotInvokeHelperReadMethod(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"couldNotInvokeHelperReadMethod", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> couldNotInvokeHelperReadMethod(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"couldNotInvokeHelperReadMethod", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> couldNotInvokeHelperReadMethod(jni::ref<java::lang::Object> p1) { return call_method<"couldNotInvokeHelperReadMethod", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> couldNotFindClass(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"couldNotFindClass", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> couldNotFindClass(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"couldNotFindClass", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> couldNotFindClass(jni::ref<java::lang::Throwable> p1) { return call_method<"couldNotFindClass", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> couldNotFindClass() { return call_method<"couldNotFindClass", jni::ref<org::omg::CORBA::MARSHAL>>(); }
	jni::ref<org::omg::CORBA::MARSHAL> badArgumentsNvlist(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"badArgumentsNvlist", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> badArgumentsNvlist(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"badArgumentsNvlist", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> badArgumentsNvlist(jni::ref<java::lang::Throwable> p1) { return call_method<"badArgumentsNvlist", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> badArgumentsNvlist() { return call_method<"badArgumentsNvlist", jni::ref<org::omg::CORBA::MARSHAL>>(); }
	jni::ref<org::omg::CORBA::MARSHAL> stubCreateError(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"stubCreateError", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> stubCreateError(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"stubCreateError", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> stubCreateError(jni::ref<java::lang::Throwable> p1) { return call_method<"stubCreateError", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> stubCreateError() { return call_method<"stubCreateError", jni::ref<org::omg::CORBA::MARSHAL>>(); }
	jni::ref<org::omg::CORBA::MARSHAL> javaSerializationException(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"javaSerializationException", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::MARSHAL> javaSerializationException(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"javaSerializationException", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> javaSerializationException(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"javaSerializationException", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> javaSerializationException(jni::ref<java::lang::Object> p1) { return call_method<"javaSerializationException", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::NO_IMPLEMENT> genericNoImpl(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"genericNoImpl", jni::ref<org::omg::CORBA::NO_IMPLEMENT>>(p1, p2); }
	jni::ref<org::omg::CORBA::NO_IMPLEMENT> genericNoImpl(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"genericNoImpl", jni::ref<org::omg::CORBA::NO_IMPLEMENT>>(p1); }
	jni::ref<org::omg::CORBA::NO_IMPLEMENT> genericNoImpl(jni::ref<java::lang::Throwable> p1) { return call_method<"genericNoImpl", jni::ref<org::omg::CORBA::NO_IMPLEMENT>>(p1); }
	jni::ref<org::omg::CORBA::NO_IMPLEMENT> genericNoImpl() { return call_method<"genericNoImpl", jni::ref<org::omg::CORBA::NO_IMPLEMENT>>(); }
	jni::ref<org::omg::CORBA::NO_IMPLEMENT> contextNotImplemented(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"contextNotImplemented", jni::ref<org::omg::CORBA::NO_IMPLEMENT>>(p1, p2); }
	jni::ref<org::omg::CORBA::NO_IMPLEMENT> contextNotImplemented(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"contextNotImplemented", jni::ref<org::omg::CORBA::NO_IMPLEMENT>>(p1); }
	jni::ref<org::omg::CORBA::NO_IMPLEMENT> contextNotImplemented(jni::ref<java::lang::Throwable> p1) { return call_method<"contextNotImplemented", jni::ref<org::omg::CORBA::NO_IMPLEMENT>>(p1); }
	jni::ref<org::omg::CORBA::NO_IMPLEMENT> contextNotImplemented() { return call_method<"contextNotImplemented", jni::ref<org::omg::CORBA::NO_IMPLEMENT>>(); }
	jni::ref<org::omg::CORBA::NO_IMPLEMENT> getinterfaceNotImplemented(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"getinterfaceNotImplemented", jni::ref<org::omg::CORBA::NO_IMPLEMENT>>(p1, p2); }
	jni::ref<org::omg::CORBA::NO_IMPLEMENT> getinterfaceNotImplemented(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"getinterfaceNotImplemented", jni::ref<org::omg::CORBA::NO_IMPLEMENT>>(p1); }
	jni::ref<org::omg::CORBA::NO_IMPLEMENT> getinterfaceNotImplemented(jni::ref<java::lang::Throwable> p1) { return call_method<"getinterfaceNotImplemented", jni::ref<org::omg::CORBA::NO_IMPLEMENT>>(p1); }
	jni::ref<org::omg::CORBA::NO_IMPLEMENT> getinterfaceNotImplemented() { return call_method<"getinterfaceNotImplemented", jni::ref<org::omg::CORBA::NO_IMPLEMENT>>(); }
	jni::ref<org::omg::CORBA::NO_IMPLEMENT> sendDeferredNotimplemented(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"sendDeferredNotimplemented", jni::ref<org::omg::CORBA::NO_IMPLEMENT>>(p1, p2); }
	jni::ref<org::omg::CORBA::NO_IMPLEMENT> sendDeferredNotimplemented(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"sendDeferredNotimplemented", jni::ref<org::omg::CORBA::NO_IMPLEMENT>>(p1); }
	jni::ref<org::omg::CORBA::NO_IMPLEMENT> sendDeferredNotimplemented(jni::ref<java::lang::Throwable> p1) { return call_method<"sendDeferredNotimplemented", jni::ref<org::omg::CORBA::NO_IMPLEMENT>>(p1); }
	jni::ref<org::omg::CORBA::NO_IMPLEMENT> sendDeferredNotimplemented() { return call_method<"sendDeferredNotimplemented", jni::ref<org::omg::CORBA::NO_IMPLEMENT>>(); }
	jni::ref<org::omg::CORBA::NO_IMPLEMENT> longDoubleNotImplemented(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"longDoubleNotImplemented", jni::ref<org::omg::CORBA::NO_IMPLEMENT>>(p1, p2); }
	jni::ref<org::omg::CORBA::NO_IMPLEMENT> longDoubleNotImplemented(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"longDoubleNotImplemented", jni::ref<org::omg::CORBA::NO_IMPLEMENT>>(p1); }
	jni::ref<org::omg::CORBA::NO_IMPLEMENT> longDoubleNotImplemented(jni::ref<java::lang::Throwable> p1) { return call_method<"longDoubleNotImplemented", jni::ref<org::omg::CORBA::NO_IMPLEMENT>>(p1); }
	jni::ref<org::omg::CORBA::NO_IMPLEMENT> longDoubleNotImplemented() { return call_method<"longDoubleNotImplemented", jni::ref<org::omg::CORBA::NO_IMPLEMENT>>(); }
	jni::ref<org::omg::CORBA::OBJ_ADAPTER> noServerScInDispatch(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"noServerScInDispatch", jni::ref<org::omg::CORBA::OBJ_ADAPTER>>(p1, p2); }
	jni::ref<org::omg::CORBA::OBJ_ADAPTER> noServerScInDispatch(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"noServerScInDispatch", jni::ref<org::omg::CORBA::OBJ_ADAPTER>>(p1); }
	jni::ref<org::omg::CORBA::OBJ_ADAPTER> noServerScInDispatch(jni::ref<java::lang::Throwable> p1) { return call_method<"noServerScInDispatch", jni::ref<org::omg::CORBA::OBJ_ADAPTER>>(p1); }
	jni::ref<org::omg::CORBA::OBJ_ADAPTER> noServerScInDispatch() { return call_method<"noServerScInDispatch", jni::ref<org::omg::CORBA::OBJ_ADAPTER>>(); }
	jni::ref<org::omg::CORBA::OBJ_ADAPTER> orbConnectError(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"orbConnectError", jni::ref<org::omg::CORBA::OBJ_ADAPTER>>(p1, p2); }
	jni::ref<org::omg::CORBA::OBJ_ADAPTER> orbConnectError(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"orbConnectError", jni::ref<org::omg::CORBA::OBJ_ADAPTER>>(p1); }
	jni::ref<org::omg::CORBA::OBJ_ADAPTER> orbConnectError(jni::ref<java::lang::Throwable> p1) { return call_method<"orbConnectError", jni::ref<org::omg::CORBA::OBJ_ADAPTER>>(p1); }
	jni::ref<org::omg::CORBA::OBJ_ADAPTER> orbConnectError() { return call_method<"orbConnectError", jni::ref<org::omg::CORBA::OBJ_ADAPTER>>(); }
	jni::ref<org::omg::CORBA::OBJ_ADAPTER> adapterInactiveInActivation(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"adapterInactiveInActivation", jni::ref<org::omg::CORBA::OBJ_ADAPTER>>(p1, p2); }
	jni::ref<org::omg::CORBA::OBJ_ADAPTER> adapterInactiveInActivation(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"adapterInactiveInActivation", jni::ref<org::omg::CORBA::OBJ_ADAPTER>>(p1); }
	jni::ref<org::omg::CORBA::OBJ_ADAPTER> adapterInactiveInActivation(jni::ref<java::lang::Throwable> p1) { return call_method<"adapterInactiveInActivation", jni::ref<org::omg::CORBA::OBJ_ADAPTER>>(p1); }
	jni::ref<org::omg::CORBA::OBJ_ADAPTER> adapterInactiveInActivation() { return call_method<"adapterInactiveInActivation", jni::ref<org::omg::CORBA::OBJ_ADAPTER>>(); }
	jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST> locateUnknownObject(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"locateUnknownObject", jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST>>(p1, p2); }
	jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST> locateUnknownObject(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"locateUnknownObject", jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST>>(p1); }
	jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST> locateUnknownObject(jni::ref<java::lang::Throwable> p1) { return call_method<"locateUnknownObject", jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST>>(p1); }
	jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST> locateUnknownObject() { return call_method<"locateUnknownObject", jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST>>(); }
	jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST> badServerId(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"badServerId", jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST>>(p1, p2); }
	jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST> badServerId(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"badServerId", jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST>>(p1); }
	jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST> badServerId(jni::ref<java::lang::Throwable> p1) { return call_method<"badServerId", jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST>>(p1); }
	jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST> badServerId() { return call_method<"badServerId", jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST>>(); }
	jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST> badSkeleton(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"badSkeleton", jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST>>(p1, p2); }
	jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST> badSkeleton(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"badSkeleton", jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST>>(p1); }
	jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST> badSkeleton(jni::ref<java::lang::Throwable> p1) { return call_method<"badSkeleton", jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST>>(p1); }
	jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST> badSkeleton() { return call_method<"badSkeleton", jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST>>(); }
	jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST> servantNotFound(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"servantNotFound", jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST>>(p1, p2); }
	jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST> servantNotFound(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"servantNotFound", jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST>>(p1); }
	jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST> servantNotFound(jni::ref<java::lang::Throwable> p1) { return call_method<"servantNotFound", jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST>>(p1); }
	jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST> servantNotFound() { return call_method<"servantNotFound", jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST>>(); }
	jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST> noObjectAdapterFactory(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"noObjectAdapterFactory", jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST>>(p1, p2); }
	jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST> noObjectAdapterFactory(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"noObjectAdapterFactory", jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST>>(p1); }
	jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST> noObjectAdapterFactory(jni::ref<java::lang::Throwable> p1) { return call_method<"noObjectAdapterFactory", jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST>>(p1); }
	jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST> noObjectAdapterFactory() { return call_method<"noObjectAdapterFactory", jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST>>(); }
	jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST> badAdapterId(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"badAdapterId", jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST>>(p1, p2); }
	jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST> badAdapterId(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"badAdapterId", jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST>>(p1); }
	jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST> badAdapterId(jni::ref<java::lang::Throwable> p1) { return call_method<"badAdapterId", jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST>>(p1); }
	jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST> badAdapterId() { return call_method<"badAdapterId", jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST>>(); }
	jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST> dynAnyDestroyed(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"dynAnyDestroyed", jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST>>(p1, p2); }
	jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST> dynAnyDestroyed(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"dynAnyDestroyed", jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST>>(p1); }
	jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST> dynAnyDestroyed(jni::ref<java::lang::Throwable> p1) { return call_method<"dynAnyDestroyed", jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST>>(p1); }
	jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST> dynAnyDestroyed() { return call_method<"dynAnyDestroyed", jni::ref<org::omg::CORBA::OBJECT_NOT_EXIST>>(); }
	jni::ref<org::omg::CORBA::TRANSIENT> requestCanceled(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"requestCanceled", jni::ref<org::omg::CORBA::TRANSIENT>>(p1, p2); }
	jni::ref<org::omg::CORBA::TRANSIENT> requestCanceled(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"requestCanceled", jni::ref<org::omg::CORBA::TRANSIENT>>(p1); }
	jni::ref<org::omg::CORBA::TRANSIENT> requestCanceled(jni::ref<java::lang::Throwable> p1) { return call_method<"requestCanceled", jni::ref<org::omg::CORBA::TRANSIENT>>(p1); }
	jni::ref<org::omg::CORBA::TRANSIENT> requestCanceled() { return call_method<"requestCanceled", jni::ref<org::omg::CORBA::TRANSIENT>>(); }
	jni::ref<org::omg::CORBA::UNKNOWN> unknownCorbaExc(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"unknownCorbaExc", jni::ref<org::omg::CORBA::UNKNOWN>>(p1, p2); }
	jni::ref<org::omg::CORBA::UNKNOWN> unknownCorbaExc(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"unknownCorbaExc", jni::ref<org::omg::CORBA::UNKNOWN>>(p1); }
	jni::ref<org::omg::CORBA::UNKNOWN> unknownCorbaExc(jni::ref<java::lang::Throwable> p1) { return call_method<"unknownCorbaExc", jni::ref<org::omg::CORBA::UNKNOWN>>(p1); }
	jni::ref<org::omg::CORBA::UNKNOWN> unknownCorbaExc() { return call_method<"unknownCorbaExc", jni::ref<org::omg::CORBA::UNKNOWN>>(); }
	jni::ref<org::omg::CORBA::UNKNOWN> runtimeexception(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"runtimeexception", jni::ref<org::omg::CORBA::UNKNOWN>>(p1, p2); }
	jni::ref<org::omg::CORBA::UNKNOWN> runtimeexception(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"runtimeexception", jni::ref<org::omg::CORBA::UNKNOWN>>(p1); }
	jni::ref<org::omg::CORBA::UNKNOWN> runtimeexception(jni::ref<java::lang::Throwable> p1) { return call_method<"runtimeexception", jni::ref<org::omg::CORBA::UNKNOWN>>(p1); }
	jni::ref<org::omg::CORBA::UNKNOWN> runtimeexception() { return call_method<"runtimeexception", jni::ref<org::omg::CORBA::UNKNOWN>>(); }
	jni::ref<org::omg::CORBA::UNKNOWN> unknownServerError(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"unknownServerError", jni::ref<org::omg::CORBA::UNKNOWN>>(p1, p2); }
	jni::ref<org::omg::CORBA::UNKNOWN> unknownServerError(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"unknownServerError", jni::ref<org::omg::CORBA::UNKNOWN>>(p1); }
	jni::ref<org::omg::CORBA::UNKNOWN> unknownServerError(jni::ref<java::lang::Throwable> p1) { return call_method<"unknownServerError", jni::ref<org::omg::CORBA::UNKNOWN>>(p1); }
	jni::ref<org::omg::CORBA::UNKNOWN> unknownServerError() { return call_method<"unknownServerError", jni::ref<org::omg::CORBA::UNKNOWN>>(); }
	jni::ref<org::omg::CORBA::UNKNOWN> unknownDsiSysex(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"unknownDsiSysex", jni::ref<org::omg::CORBA::UNKNOWN>>(p1, p2); }
	jni::ref<org::omg::CORBA::UNKNOWN> unknownDsiSysex(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"unknownDsiSysex", jni::ref<org::omg::CORBA::UNKNOWN>>(p1); }
	jni::ref<org::omg::CORBA::UNKNOWN> unknownDsiSysex(jni::ref<java::lang::Throwable> p1) { return call_method<"unknownDsiSysex", jni::ref<org::omg::CORBA::UNKNOWN>>(p1); }
	jni::ref<org::omg::CORBA::UNKNOWN> unknownDsiSysex() { return call_method<"unknownDsiSysex", jni::ref<org::omg::CORBA::UNKNOWN>>(); }
	jni::ref<org::omg::CORBA::UNKNOWN> unknownSysex(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"unknownSysex", jni::ref<org::omg::CORBA::UNKNOWN>>(p1, p2); }
	jni::ref<org::omg::CORBA::UNKNOWN> unknownSysex(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"unknownSysex", jni::ref<org::omg::CORBA::UNKNOWN>>(p1); }
	jni::ref<org::omg::CORBA::UNKNOWN> unknownSysex(jni::ref<java::lang::Throwable> p1) { return call_method<"unknownSysex", jni::ref<org::omg::CORBA::UNKNOWN>>(p1); }
	jni::ref<org::omg::CORBA::UNKNOWN> unknownSysex() { return call_method<"unknownSysex", jni::ref<org::omg::CORBA::UNKNOWN>>(); }
	jni::ref<org::omg::CORBA::UNKNOWN> wrongInterfaceDef(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"wrongInterfaceDef", jni::ref<org::omg::CORBA::UNKNOWN>>(p1, p2); }
	jni::ref<org::omg::CORBA::UNKNOWN> wrongInterfaceDef(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"wrongInterfaceDef", jni::ref<org::omg::CORBA::UNKNOWN>>(p1); }
	jni::ref<org::omg::CORBA::UNKNOWN> wrongInterfaceDef(jni::ref<java::lang::Throwable> p1) { return call_method<"wrongInterfaceDef", jni::ref<org::omg::CORBA::UNKNOWN>>(p1); }
	jni::ref<org::omg::CORBA::UNKNOWN> wrongInterfaceDef() { return call_method<"wrongInterfaceDef", jni::ref<org::omg::CORBA::UNKNOWN>>(); }
	jni::ref<org::omg::CORBA::UNKNOWN> noInterfaceDefStub(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"noInterfaceDefStub", jni::ref<org::omg::CORBA::UNKNOWN>>(p1, p2); }
	jni::ref<org::omg::CORBA::UNKNOWN> noInterfaceDefStub(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"noInterfaceDefStub", jni::ref<org::omg::CORBA::UNKNOWN>>(p1); }
	jni::ref<org::omg::CORBA::UNKNOWN> noInterfaceDefStub(jni::ref<java::lang::Throwable> p1) { return call_method<"noInterfaceDefStub", jni::ref<org::omg::CORBA::UNKNOWN>>(p1); }
	jni::ref<org::omg::CORBA::UNKNOWN> noInterfaceDefStub() { return call_method<"noInterfaceDefStub", jni::ref<org::omg::CORBA::UNKNOWN>>(); }
	jni::ref<org::omg::CORBA::UNKNOWN> unknownExceptionInDispatch(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"unknownExceptionInDispatch", jni::ref<org::omg::CORBA::UNKNOWN>>(p1, p2); }
	jni::ref<org::omg::CORBA::UNKNOWN> unknownExceptionInDispatch(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"unknownExceptionInDispatch", jni::ref<org::omg::CORBA::UNKNOWN>>(p1); }
	jni::ref<org::omg::CORBA::UNKNOWN> unknownExceptionInDispatch(jni::ref<java::lang::Throwable> p1) { return call_method<"unknownExceptionInDispatch", jni::ref<org::omg::CORBA::UNKNOWN>>(p1); }
	jni::ref<org::omg::CORBA::UNKNOWN> unknownExceptionInDispatch() { return call_method<"unknownExceptionInDispatch", jni::ref<org::omg::CORBA::UNKNOWN>>(); }

protected:

	ORBUtilSystemException(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_LOGGING_ORBUTILSYSTEMEXCEPTION
