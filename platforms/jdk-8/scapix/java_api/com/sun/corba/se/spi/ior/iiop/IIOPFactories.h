// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_IOR_IIOP_IIOPFACTORIES_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_IOR_IIOP_IIOPFACTORIES_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::spi::ior::iiop { class IIOPFactories; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::spi::ior::iiop::IIOPFactories>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/spi/ior/iiop/IIOPFactories";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_IOR_IIOP_IIOPFACTORIES_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_IOR_IIOP_IIOPFACTORIES)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_IOR_IIOP_IIOPFACTORIES

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/corba/se/impl/ior/iiop/JavaSerializationComponent.h>
#include <scapix/java_api/com/sun/corba/se/spi/ior/IdentifiableFactory.h>
#include <scapix/java_api/com/sun/corba/se/spi/ior/ObjectId.h>
#include <scapix/java_api/com/sun/corba/se/spi/ior/ObjectKeyTemplate.h>
#include <scapix/java_api/com/sun/corba/se/spi/ior/iiop/AlternateIIOPAddressComponent.h>
#include <scapix/java_api/com/sun/corba/se/spi/ior/iiop/CodeSetsComponent.h>
#include <scapix/java_api/com/sun/corba/se/spi/ior/iiop/GIOPVersion.h>
#include <scapix/java_api/com/sun/corba/se/spi/ior/iiop/IIOPAddress.h>
#include <scapix/java_api/com/sun/corba/se/spi/ior/iiop/IIOPProfile.h>
#include <scapix/java_api/com/sun/corba/se/spi/ior/iiop/IIOPProfileTemplate.h>
#include <scapix/java_api/com/sun/corba/se/spi/ior/iiop/JavaCodebaseComponent.h>
#include <scapix/java_api/com/sun/corba/se/spi/ior/iiop/MaxStreamFormatVersionComponent.h>
#include <scapix/java_api/com/sun/corba/se/spi/ior/iiop/ORBTypeComponent.h>
#include <scapix/java_api/com/sun/corba/se/spi/ior/iiop/RequestPartitioningComponent.h>
#include <scapix/java_api/com/sun/corba/se/spi/orb/ORB.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/omg/CORBA_2_3/portable/InputStream.h>
#include <scapix/java_api/org/omg/IOP/TaggedProfile.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::spi::ior::iiop::IIOPFactories : public jni::object_base<"com/sun/corba/se/spi/ior/iiop/IIOPFactories",
	java::lang::Object>
{
public:

	static jni::ref<com::sun::corba::se::spi::ior::IdentifiableFactory> makeRequestPartitioningComponentFactory() { return call_static_method<"makeRequestPartitioningComponentFactory", jni::ref<com::sun::corba::se::spi::ior::IdentifiableFactory>>(); }
	static jni::ref<com::sun::corba::se::spi::ior::iiop::RequestPartitioningComponent> makeRequestPartitioningComponent(jint p1) { return call_static_method<"makeRequestPartitioningComponent", jni::ref<com::sun::corba::se::spi::ior::iiop::RequestPartitioningComponent>>(p1); }
	static jni::ref<com::sun::corba::se::spi::ior::IdentifiableFactory> makeAlternateIIOPAddressComponentFactory() { return call_static_method<"makeAlternateIIOPAddressComponentFactory", jni::ref<com::sun::corba::se::spi::ior::IdentifiableFactory>>(); }
	static jni::ref<com::sun::corba::se::spi::ior::iiop::AlternateIIOPAddressComponent> makeAlternateIIOPAddressComponent(jni::ref<com::sun::corba::se::spi::ior::iiop::IIOPAddress> p1) { return call_static_method<"makeAlternateIIOPAddressComponent", jni::ref<com::sun::corba::se::spi::ior::iiop::AlternateIIOPAddressComponent>>(p1); }
	static jni::ref<com::sun::corba::se::spi::ior::IdentifiableFactory> makeCodeSetsComponentFactory() { return call_static_method<"makeCodeSetsComponentFactory", jni::ref<com::sun::corba::se::spi::ior::IdentifiableFactory>>(); }
	static jni::ref<com::sun::corba::se::spi::ior::iiop::CodeSetsComponent> makeCodeSetsComponent(jni::ref<com::sun::corba::se::spi::orb::ORB> p1) { return call_static_method<"makeCodeSetsComponent", jni::ref<com::sun::corba::se::spi::ior::iiop::CodeSetsComponent>>(p1); }
	static jni::ref<com::sun::corba::se::spi::ior::IdentifiableFactory> makeJavaCodebaseComponentFactory() { return call_static_method<"makeJavaCodebaseComponentFactory", jni::ref<com::sun::corba::se::spi::ior::IdentifiableFactory>>(); }
	static jni::ref<com::sun::corba::se::spi::ior::iiop::JavaCodebaseComponent> makeJavaCodebaseComponent(jni::ref<java::lang::String> p1) { return call_static_method<"makeJavaCodebaseComponent", jni::ref<com::sun::corba::se::spi::ior::iiop::JavaCodebaseComponent>>(p1); }
	static jni::ref<com::sun::corba::se::spi::ior::IdentifiableFactory> makeORBTypeComponentFactory() { return call_static_method<"makeORBTypeComponentFactory", jni::ref<com::sun::corba::se::spi::ior::IdentifiableFactory>>(); }
	static jni::ref<com::sun::corba::se::spi::ior::iiop::ORBTypeComponent> makeORBTypeComponent(jint p1) { return call_static_method<"makeORBTypeComponent", jni::ref<com::sun::corba::se::spi::ior::iiop::ORBTypeComponent>>(p1); }
	static jni::ref<com::sun::corba::se::spi::ior::IdentifiableFactory> makeMaxStreamFormatVersionComponentFactory() { return call_static_method<"makeMaxStreamFormatVersionComponentFactory", jni::ref<com::sun::corba::se::spi::ior::IdentifiableFactory>>(); }
	static jni::ref<com::sun::corba::se::spi::ior::iiop::MaxStreamFormatVersionComponent> makeMaxStreamFormatVersionComponent() { return call_static_method<"makeMaxStreamFormatVersionComponent", jni::ref<com::sun::corba::se::spi::ior::iiop::MaxStreamFormatVersionComponent>>(); }
	static jni::ref<com::sun::corba::se::spi::ior::IdentifiableFactory> makeJavaSerializationComponentFactory() { return call_static_method<"makeJavaSerializationComponentFactory", jni::ref<com::sun::corba::se::spi::ior::IdentifiableFactory>>(); }
	static jni::ref<com::sun::corba::se::impl::ior::iiop::JavaSerializationComponent> makeJavaSerializationComponent() { return call_static_method<"makeJavaSerializationComponent", jni::ref<com::sun::corba::se::impl::ior::iiop::JavaSerializationComponent>>(); }
	static jni::ref<com::sun::corba::se::spi::ior::IdentifiableFactory> makeIIOPProfileFactory() { return call_static_method<"makeIIOPProfileFactory", jni::ref<com::sun::corba::se::spi::ior::IdentifiableFactory>>(); }
	static jni::ref<com::sun::corba::se::spi::ior::iiop::IIOPProfile> makeIIOPProfile(jni::ref<com::sun::corba::se::spi::orb::ORB> p1, jni::ref<com::sun::corba::se::spi::ior::ObjectKeyTemplate> p2, jni::ref<com::sun::corba::se::spi::ior::ObjectId> p3, jni::ref<com::sun::corba::se::spi::ior::iiop::IIOPProfileTemplate> p4) { return call_static_method<"makeIIOPProfile", jni::ref<com::sun::corba::se::spi::ior::iiop::IIOPProfile>>(p1, p2, p3, p4); }
	static jni::ref<com::sun::corba::se::spi::ior::iiop::IIOPProfile> makeIIOPProfile(jni::ref<com::sun::corba::se::spi::orb::ORB> p1, jni::ref<org::omg::IOP::TaggedProfile> p2) { return call_static_method<"makeIIOPProfile", jni::ref<com::sun::corba::se::spi::ior::iiop::IIOPProfile>>(p1, p2); }
	static jni::ref<com::sun::corba::se::spi::ior::IdentifiableFactory> makeIIOPProfileTemplateFactory() { return call_static_method<"makeIIOPProfileTemplateFactory", jni::ref<com::sun::corba::se::spi::ior::IdentifiableFactory>>(); }
	static jni::ref<com::sun::corba::se::spi::ior::iiop::IIOPProfileTemplate> makeIIOPProfileTemplate(jni::ref<com::sun::corba::se::spi::orb::ORB> p1, jni::ref<com::sun::corba::se::spi::ior::iiop::GIOPVersion> p2, jni::ref<com::sun::corba::se::spi::ior::iiop::IIOPAddress> p3) { return call_static_method<"makeIIOPProfileTemplate", jni::ref<com::sun::corba::se::spi::ior::iiop::IIOPProfileTemplate>>(p1, p2, p3); }
	static jni::ref<com::sun::corba::se::spi::ior::iiop::IIOPAddress> makeIIOPAddress(jni::ref<com::sun::corba::se::spi::orb::ORB> p1, jni::ref<java::lang::String> p2, jint p3) { return call_static_method<"makeIIOPAddress", jni::ref<com::sun::corba::se::spi::ior::iiop::IIOPAddress>>(p1, p2, p3); }
	static jni::ref<com::sun::corba::se::spi::ior::iiop::IIOPAddress> makeIIOPAddress(jni::ref<org::omg::CORBA_2_3::portable::InputStream> p1) { return call_static_method<"makeIIOPAddress", jni::ref<com::sun::corba::se::spi::ior::iiop::IIOPAddress>>(p1); }

protected:

	IIOPFactories(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_IOR_IIOP_IIOPFACTORIES
