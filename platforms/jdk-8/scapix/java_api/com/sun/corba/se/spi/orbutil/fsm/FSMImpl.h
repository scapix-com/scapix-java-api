// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/com/sun/corba/se/spi/orbutil/fsm/FSM.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_ORBUTIL_FSM_FSMIMPL_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_ORBUTIL_FSM_FSMIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::spi::orbutil::fsm { class FSMImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::spi::orbutil::fsm::FSMImpl>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/spi/orbutil/fsm/FSMImpl";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::com::sun::corba::se::spi::orbutil::fsm::FSM>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_ORBUTIL_FSM_FSMIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_ORBUTIL_FSM_FSMIMPL)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_ORBUTIL_FSM_FSMIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/corba/se/spi/orbutil/fsm/Input.h>
#include <scapix/java_api/com/sun/corba/se/spi/orbutil/fsm/State.h>
#include <scapix/java_api/com/sun/corba/se/spi/orbutil/fsm/StateEngine.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::spi::orbutil::fsm::FSMImpl : public jni::object_base<"com/sun/corba/se/spi/orbutil/fsm/FSMImpl",
	java::lang::Object,
	com::sun::corba::se::spi::orbutil::fsm::FSM>
{
public:

	static jni::ref<com::sun::corba::se::spi::orbutil::fsm::FSMImpl> new_object(jni::ref<com::sun::corba::se::spi::orbutil::fsm::StateEngine> p1, jni::ref<com::sun::corba::se::spi::orbutil::fsm::State> p2) { return base_::new_object(p1, p2); }
	static jni::ref<com::sun::corba::se::spi::orbutil::fsm::FSMImpl> new_object(jni::ref<com::sun::corba::se::spi::orbutil::fsm::StateEngine> p1, jni::ref<com::sun::corba::se::spi::orbutil::fsm::State> p2, jboolean p3) { return base_::new_object(p1, p2, p3); }
	jni::ref<com::sun::corba::se::spi::orbutil::fsm::State> getState() { return call_method<"getState", jni::ref<com::sun::corba::se::spi::orbutil::fsm::State>>(); }
	void doIt(jni::ref<com::sun::corba::se::spi::orbutil::fsm::Input> p1) { return call_method<"doIt", void>(p1); }
	void internalSetState(jni::ref<com::sun::corba::se::spi::orbutil::fsm::State> p1) { return call_method<"internalSetState", void>(p1); }

protected:

	FSMImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_ORBUTIL_FSM_FSMIMPL
