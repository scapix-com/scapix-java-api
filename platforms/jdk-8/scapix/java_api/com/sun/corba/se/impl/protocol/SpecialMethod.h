// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_PROTOCOL_SPECIALMETHOD_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_PROTOCOL_SPECIALMETHOD_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::impl::protocol { class SpecialMethod; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::impl::protocol::SpecialMethod>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/impl/protocol/SpecialMethod";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_PROTOCOL_SPECIALMETHOD_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_PROTOCOL_SPECIALMETHOD)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_PROTOCOL_SPECIALMETHOD

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/corba/se/spi/oa/ObjectAdapter.h>
#include <scapix/java_api/com/sun/corba/se/spi/protocol/CorbaMessageMediator.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::impl::protocol::SpecialMethod : public jni::object_base<"com/sun/corba/se/impl/protocol/SpecialMethod",
	java::lang::Object>
{
public:

	static jni::ref<com::sun::corba::se::impl::protocol::SpecialMethod> new_object() { return base_::new_object(); }
	jboolean isNonExistentMethod() { return call_method<"isNonExistentMethod", jboolean>(); }
	jni::ref<java::lang::String> getName() { return call_method<"getName", jni::ref<java::lang::String>>(); }
	jni::ref<com::sun::corba::se::spi::protocol::CorbaMessageMediator> invoke(jni::ref<java::lang::Object> p1, jni::ref<com::sun::corba::se::spi::protocol::CorbaMessageMediator> p2, jni::ref<jni::array<jbyte>> p3, jni::ref<com::sun::corba::se::spi::oa::ObjectAdapter> p4) { return call_method<"invoke", jni::ref<com::sun::corba::se::spi::protocol::CorbaMessageMediator>>(p1, p2, p3, p4); }
	static jni::ref<com::sun::corba::se::impl::protocol::SpecialMethod> getSpecialMethod(jni::ref<java::lang::String> p1) { return call_static_method<"getSpecialMethod", jni::ref<com::sun::corba::se::impl::protocol::SpecialMethod>>(p1); }

protected:

	SpecialMethod(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_PROTOCOL_SPECIALMETHOD
