// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/corba/se/impl/naming/cosnaming/NamingContextImpl.h>
#include <scapix/java_api/com/sun/corba/se/impl/naming/cosnaming/NamingContextDataStore.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_NAMING_COSNAMING_TRANSIENTNAMINGCONTEXT_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_NAMING_COSNAMING_TRANSIENTNAMINGCONTEXT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::impl::naming::cosnaming { class TransientNamingContext; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::impl::naming::cosnaming::TransientNamingContext>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/impl/naming/cosnaming/TransientNamingContext";
	using base_classes = std::tuple<scapix::java_api::com::sun::corba::se::impl::naming::cosnaming::NamingContextImpl, scapix::java_api::com::sun::corba::se::impl::naming::cosnaming::NamingContextDataStore>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_NAMING_COSNAMING_TRANSIENTNAMINGCONTEXT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_NAMING_COSNAMING_TRANSIENTNAMINGCONTEXT)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_NAMING_COSNAMING_TRANSIENTNAMINGCONTEXT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/corba/se/spi/orb/ORB.h>
#include <scapix/java_api/org/omg/CORBA/Object.h>
#include <scapix/java_api/org/omg/CosNaming/BindingIteratorHolder.h>
#include <scapix/java_api/org/omg/CosNaming/BindingListHolder.h>
#include <scapix/java_api/org/omg/CosNaming/BindingType.h>
#include <scapix/java_api/org/omg/CosNaming/BindingTypeHolder.h>
#include <scapix/java_api/org/omg/CosNaming/NameComponent.h>
#include <scapix/java_api/org/omg/CosNaming/NamingContext.h>
#include <scapix/java_api/org/omg/PortableServer/POA.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::impl::naming::cosnaming::TransientNamingContext : public jni::object_base<"com/sun/corba/se/impl/naming/cosnaming/TransientNamingContext",
	com::sun::corba::se::impl::naming::cosnaming::NamingContextImpl,
	com::sun::corba::se::impl::naming::cosnaming::NamingContextDataStore>
{
public:

	jni::ref<org::omg::CORBA::Object> localRoot() { return get_field<"localRoot", jni::ref<org::omg::CORBA::Object>>(); }
	void localRoot(jni::ref<org::omg::CORBA::Object> v) { set_field<"localRoot", jni::ref<org::omg::CORBA::Object>>(v); }

	static jni::ref<com::sun::corba::se::impl::naming::cosnaming::TransientNamingContext> new_object(jni::ref<com::sun::corba::se::spi::orb::ORB> p1, jni::ref<org::omg::CORBA::Object> p2, jni::ref<org::omg::PortableServer::POA> p3) { return base_::new_object(p1, p2, p3); }
	void Bind(jni::ref<org::omg::CosNaming::NameComponent> p1, jni::ref<org::omg::CORBA::Object> p2, jni::ref<org::omg::CosNaming::BindingType> p3) { return call_method<"Bind", void>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::Object> Resolve(jni::ref<org::omg::CosNaming::NameComponent> p1, jni::ref<org::omg::CosNaming::BindingTypeHolder> p2) { return call_method<"Resolve", jni::ref<org::omg::CORBA::Object>>(p1, p2); }
	jni::ref<org::omg::CORBA::Object> Unbind(jni::ref<org::omg::CosNaming::NameComponent> p1) { return call_method<"Unbind", jni::ref<org::omg::CORBA::Object>>(p1); }
	void List(jint p1, jni::ref<org::omg::CosNaming::BindingListHolder> p2, jni::ref<org::omg::CosNaming::BindingIteratorHolder> p3) { return call_method<"List", void>(p1, p2, p3); }
	jni::ref<org::omg::CosNaming::NamingContext> NewContext() { return call_method<"NewContext", jni::ref<org::omg::CosNaming::NamingContext>>(); }
	void Destroy() { return call_method<"Destroy", void>(); }
	jboolean IsEmpty() { return call_method<"IsEmpty", jboolean>(); }

protected:

	TransientNamingContext(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_NAMING_COSNAMING_TRANSIENTNAMINGCONTEXT
