// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/corba/se/spi/logging/LogWrapperBase.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_LOGGING_UTILSYSTEMEXCEPTION_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_LOGGING_UTILSYSTEMEXCEPTION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::impl::logging { class UtilSystemException; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::impl::logging::UtilSystemException>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/impl/logging/UtilSystemException";
	using base_classes = std::tuple<scapix::java_api::com::sun::corba::se::spi::logging::LogWrapperBase>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_LOGGING_UTILSYSTEMEXCEPTION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_LOGGING_UTILSYSTEMEXCEPTION)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_LOGGING_UTILSYSTEMEXCEPTION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/corba/se/spi/orb/ORB.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/Throwable.h>
#include <scapix/java_api/java/util/logging/Logger.h>
#include <scapix/java_api/org/omg/CORBA/BAD_OPERATION.h>
#include <scapix/java_api/org/omg/CORBA/BAD_PARAM.h>
#include <scapix/java_api/org/omg/CORBA/CompletionStatus.h>
#include <scapix/java_api/org/omg/CORBA/DATA_CONVERSION.h>
#include <scapix/java_api/org/omg/CORBA/INTERNAL.h>
#include <scapix/java_api/org/omg/CORBA/INV_OBJREF.h>
#include <scapix/java_api/org/omg/CORBA/MARSHAL.h>
#include <scapix/java_api/org/omg/CORBA/UNKNOWN.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::impl::logging::UtilSystemException : public jni::object_base<"com/sun/corba/se/impl/logging/UtilSystemException",
	com::sun::corba::se::spi::logging::LogWrapperBase>
{
public:

	static jint STUB_FACTORY_COULD_NOT_MAKE_STUB() { return get_static_field<"STUB_FACTORY_COULD_NOT_MAKE_STUB", jint>(); }
	static jint ERROR_IN_MAKE_STUB_FROM_REPOSITORY_ID() { return get_static_field<"ERROR_IN_MAKE_STUB_FROM_REPOSITORY_ID", jint>(); }
	static jint CLASS_CAST_EXCEPTION_IN_LOAD_STUB() { return get_static_field<"CLASS_CAST_EXCEPTION_IN_LOAD_STUB", jint>(); }
	static jint EXCEPTION_IN_LOAD_STUB() { return get_static_field<"EXCEPTION_IN_LOAD_STUB", jint>(); }
	static jint NO_POA() { return get_static_field<"NO_POA", jint>(); }
	static jint CONNECT_WRONG_ORB() { return get_static_field<"CONNECT_WRONG_ORB", jint>(); }
	static jint CONNECT_NO_TIE() { return get_static_field<"CONNECT_NO_TIE", jint>(); }
	static jint CONNECT_TIE_WRONG_ORB() { return get_static_field<"CONNECT_TIE_WRONG_ORB", jint>(); }
	static jint CONNECT_TIE_NO_SERVANT() { return get_static_field<"CONNECT_TIE_NO_SERVANT", jint>(); }
	static jint LOAD_TIE_FAILED() { return get_static_field<"LOAD_TIE_FAILED", jint>(); }
	static jint BAD_HEX_DIGIT() { return get_static_field<"BAD_HEX_DIGIT", jint>(); }
	static jint UNABLE_LOCATE_VALUE_HELPER() { return get_static_field<"UNABLE_LOCATE_VALUE_HELPER", jint>(); }
	static jint INVALID_INDIRECTION() { return get_static_field<"INVALID_INDIRECTION", jint>(); }
	static jint OBJECT_NOT_CONNECTED() { return get_static_field<"OBJECT_NOT_CONNECTED", jint>(); }
	static jint COULD_NOT_LOAD_STUB() { return get_static_field<"COULD_NOT_LOAD_STUB", jint>(); }
	static jint OBJECT_NOT_EXPORTED() { return get_static_field<"OBJECT_NOT_EXPORTED", jint>(); }
	static jint ERROR_SET_OBJECT_FIELD() { return get_static_field<"ERROR_SET_OBJECT_FIELD", jint>(); }
	static jint ERROR_SET_BOOLEAN_FIELD() { return get_static_field<"ERROR_SET_BOOLEAN_FIELD", jint>(); }
	static jint ERROR_SET_BYTE_FIELD() { return get_static_field<"ERROR_SET_BYTE_FIELD", jint>(); }
	static jint ERROR_SET_CHAR_FIELD() { return get_static_field<"ERROR_SET_CHAR_FIELD", jint>(); }
	static jint ERROR_SET_SHORT_FIELD() { return get_static_field<"ERROR_SET_SHORT_FIELD", jint>(); }
	static jint ERROR_SET_INT_FIELD() { return get_static_field<"ERROR_SET_INT_FIELD", jint>(); }
	static jint ERROR_SET_LONG_FIELD() { return get_static_field<"ERROR_SET_LONG_FIELD", jint>(); }
	static jint ERROR_SET_FLOAT_FIELD() { return get_static_field<"ERROR_SET_FLOAT_FIELD", jint>(); }
	static jint ERROR_SET_DOUBLE_FIELD() { return get_static_field<"ERROR_SET_DOUBLE_FIELD", jint>(); }
	static jint ILLEGAL_FIELD_ACCESS() { return get_static_field<"ILLEGAL_FIELD_ACCESS", jint>(); }
	static jint BAD_BEGIN_UNMARSHAL_CUSTOM_VALUE() { return get_static_field<"BAD_BEGIN_UNMARSHAL_CUSTOM_VALUE", jint>(); }
	static jint CLASS_NOT_FOUND() { return get_static_field<"CLASS_NOT_FOUND", jint>(); }
	static jint UNKNOWN_SYSEX() { return get_static_field<"UNKNOWN_SYSEX", jint>(); }

	static jni::ref<com::sun::corba::se::impl::logging::UtilSystemException> new_object(jni::ref<java::util::logging::Logger> p1) { return base_::new_object(p1); }
	static jni::ref<com::sun::corba::se::impl::logging::UtilSystemException> get(jni::ref<com::sun::corba::se::spi::orb::ORB> p1, jni::ref<java::lang::String> p2) { return call_static_method<"get", jni::ref<com::sun::corba::se::impl::logging::UtilSystemException>>(p1, p2); }
	static jni::ref<com::sun::corba::se::impl::logging::UtilSystemException> get(jni::ref<java::lang::String> p1) { return call_static_method<"get", jni::ref<com::sun::corba::se::impl::logging::UtilSystemException>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> stubFactoryCouldNotMakeStub(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"stubFactoryCouldNotMakeStub", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> stubFactoryCouldNotMakeStub(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"stubFactoryCouldNotMakeStub", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> stubFactoryCouldNotMakeStub(jni::ref<java::lang::Throwable> p1) { return call_method<"stubFactoryCouldNotMakeStub", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> stubFactoryCouldNotMakeStub() { return call_method<"stubFactoryCouldNotMakeStub", jni::ref<org::omg::CORBA::BAD_OPERATION>>(); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> errorInMakeStubFromRepositoryId(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"errorInMakeStubFromRepositoryId", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> errorInMakeStubFromRepositoryId(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"errorInMakeStubFromRepositoryId", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> errorInMakeStubFromRepositoryId(jni::ref<java::lang::Throwable> p1) { return call_method<"errorInMakeStubFromRepositoryId", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> errorInMakeStubFromRepositoryId() { return call_method<"errorInMakeStubFromRepositoryId", jni::ref<org::omg::CORBA::BAD_OPERATION>>(); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> classCastExceptionInLoadStub(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"classCastExceptionInLoadStub", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> classCastExceptionInLoadStub(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"classCastExceptionInLoadStub", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> classCastExceptionInLoadStub(jni::ref<java::lang::Throwable> p1) { return call_method<"classCastExceptionInLoadStub", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> classCastExceptionInLoadStub() { return call_method<"classCastExceptionInLoadStub", jni::ref<org::omg::CORBA::BAD_OPERATION>>(); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> exceptionInLoadStub(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"exceptionInLoadStub", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> exceptionInLoadStub(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"exceptionInLoadStub", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> exceptionInLoadStub(jni::ref<java::lang::Throwable> p1) { return call_method<"exceptionInLoadStub", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> exceptionInLoadStub() { return call_method<"exceptionInLoadStub", jni::ref<org::omg::CORBA::BAD_OPERATION>>(); }
	jni::ref<org::omg::CORBA::BAD_PARAM> noPoa(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"noPoa", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_PARAM> noPoa(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"noPoa", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> noPoa(jni::ref<java::lang::Throwable> p1) { return call_method<"noPoa", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> noPoa() { return call_method<"noPoa", jni::ref<org::omg::CORBA::BAD_PARAM>>(); }
	jni::ref<org::omg::CORBA::BAD_PARAM> connectWrongOrb(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"connectWrongOrb", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_PARAM> connectWrongOrb(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"connectWrongOrb", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> connectWrongOrb(jni::ref<java::lang::Throwable> p1) { return call_method<"connectWrongOrb", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> connectWrongOrb() { return call_method<"connectWrongOrb", jni::ref<org::omg::CORBA::BAD_PARAM>>(); }
	jni::ref<org::omg::CORBA::BAD_PARAM> connectNoTie(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"connectNoTie", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_PARAM> connectNoTie(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"connectNoTie", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> connectNoTie(jni::ref<java::lang::Throwable> p1) { return call_method<"connectNoTie", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> connectNoTie() { return call_method<"connectNoTie", jni::ref<org::omg::CORBA::BAD_PARAM>>(); }
	jni::ref<org::omg::CORBA::BAD_PARAM> connectTieWrongOrb(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"connectTieWrongOrb", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_PARAM> connectTieWrongOrb(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"connectTieWrongOrb", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> connectTieWrongOrb(jni::ref<java::lang::Throwable> p1) { return call_method<"connectTieWrongOrb", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> connectTieWrongOrb() { return call_method<"connectTieWrongOrb", jni::ref<org::omg::CORBA::BAD_PARAM>>(); }
	jni::ref<org::omg::CORBA::BAD_PARAM> connectTieNoServant(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"connectTieNoServant", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_PARAM> connectTieNoServant(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"connectTieNoServant", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> connectTieNoServant(jni::ref<java::lang::Throwable> p1) { return call_method<"connectTieNoServant", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> connectTieNoServant() { return call_method<"connectTieNoServant", jni::ref<org::omg::CORBA::BAD_PARAM>>(); }
	jni::ref<org::omg::CORBA::BAD_PARAM> loadTieFailed(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"loadTieFailed", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::BAD_PARAM> loadTieFailed(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"loadTieFailed", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_PARAM> loadTieFailed(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"loadTieFailed", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_PARAM> loadTieFailed(jni::ref<java::lang::Object> p1) { return call_method<"loadTieFailed", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badHexDigit(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"badHexDigit", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1, p2); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badHexDigit(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"badHexDigit", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badHexDigit(jni::ref<java::lang::Throwable> p1) { return call_method<"badHexDigit", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(p1); }
	jni::ref<org::omg::CORBA::DATA_CONVERSION> badHexDigit() { return call_method<"badHexDigit", jni::ref<org::omg::CORBA::DATA_CONVERSION>>(); }
	jni::ref<org::omg::CORBA::MARSHAL> unableLocateValueHelper(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"unableLocateValueHelper", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> unableLocateValueHelper(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"unableLocateValueHelper", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> unableLocateValueHelper(jni::ref<java::lang::Throwable> p1) { return call_method<"unableLocateValueHelper", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::MARSHAL> unableLocateValueHelper() { return call_method<"unableLocateValueHelper", jni::ref<org::omg::CORBA::MARSHAL>>(); }
	jni::ref<org::omg::CORBA::MARSHAL> invalidIndirection(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"invalidIndirection", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::MARSHAL> invalidIndirection(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"invalidIndirection", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> invalidIndirection(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"invalidIndirection", jni::ref<org::omg::CORBA::MARSHAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::MARSHAL> invalidIndirection(jni::ref<java::lang::Object> p1) { return call_method<"invalidIndirection", jni::ref<org::omg::CORBA::MARSHAL>>(p1); }
	jni::ref<org::omg::CORBA::INV_OBJREF> objectNotConnected(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"objectNotConnected", jni::ref<org::omg::CORBA::INV_OBJREF>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INV_OBJREF> objectNotConnected(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"objectNotConnected", jni::ref<org::omg::CORBA::INV_OBJREF>>(p1, p2); }
	jni::ref<org::omg::CORBA::INV_OBJREF> objectNotConnected(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"objectNotConnected", jni::ref<org::omg::CORBA::INV_OBJREF>>(p1, p2); }
	jni::ref<org::omg::CORBA::INV_OBJREF> objectNotConnected(jni::ref<java::lang::Object> p1) { return call_method<"objectNotConnected", jni::ref<org::omg::CORBA::INV_OBJREF>>(p1); }
	jni::ref<org::omg::CORBA::INV_OBJREF> couldNotLoadStub(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"couldNotLoadStub", jni::ref<org::omg::CORBA::INV_OBJREF>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INV_OBJREF> couldNotLoadStub(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"couldNotLoadStub", jni::ref<org::omg::CORBA::INV_OBJREF>>(p1, p2); }
	jni::ref<org::omg::CORBA::INV_OBJREF> couldNotLoadStub(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"couldNotLoadStub", jni::ref<org::omg::CORBA::INV_OBJREF>>(p1, p2); }
	jni::ref<org::omg::CORBA::INV_OBJREF> couldNotLoadStub(jni::ref<java::lang::Object> p1) { return call_method<"couldNotLoadStub", jni::ref<org::omg::CORBA::INV_OBJREF>>(p1); }
	jni::ref<org::omg::CORBA::INV_OBJREF> objectNotExported(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"objectNotExported", jni::ref<org::omg::CORBA::INV_OBJREF>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INV_OBJREF> objectNotExported(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"objectNotExported", jni::ref<org::omg::CORBA::INV_OBJREF>>(p1, p2); }
	jni::ref<org::omg::CORBA::INV_OBJREF> objectNotExported(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"objectNotExported", jni::ref<org::omg::CORBA::INV_OBJREF>>(p1, p2); }
	jni::ref<org::omg::CORBA::INV_OBJREF> objectNotExported(jni::ref<java::lang::Object> p1) { return call_method<"objectNotExported", jni::ref<org::omg::CORBA::INV_OBJREF>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> errorSetObjectField(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4, jni::ref<java::lang::Object> p5) { return call_method<"errorSetObjectField", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4, p5); }
	jni::ref<org::omg::CORBA::INTERNAL> errorSetObjectField(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"errorSetObjectField", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::INTERNAL> errorSetObjectField(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"errorSetObjectField", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::INTERNAL> errorSetObjectField(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"errorSetObjectField", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> errorSetBooleanField(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4, jni::ref<java::lang::Object> p5) { return call_method<"errorSetBooleanField", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4, p5); }
	jni::ref<org::omg::CORBA::INTERNAL> errorSetBooleanField(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"errorSetBooleanField", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::INTERNAL> errorSetBooleanField(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"errorSetBooleanField", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::INTERNAL> errorSetBooleanField(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"errorSetBooleanField", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> errorSetByteField(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4, jni::ref<java::lang::Object> p5) { return call_method<"errorSetByteField", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4, p5); }
	jni::ref<org::omg::CORBA::INTERNAL> errorSetByteField(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"errorSetByteField", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::INTERNAL> errorSetByteField(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"errorSetByteField", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::INTERNAL> errorSetByteField(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"errorSetByteField", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> errorSetCharField(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4, jni::ref<java::lang::Object> p5) { return call_method<"errorSetCharField", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4, p5); }
	jni::ref<org::omg::CORBA::INTERNAL> errorSetCharField(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"errorSetCharField", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::INTERNAL> errorSetCharField(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"errorSetCharField", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::INTERNAL> errorSetCharField(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"errorSetCharField", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> errorSetShortField(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4, jni::ref<java::lang::Object> p5) { return call_method<"errorSetShortField", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4, p5); }
	jni::ref<org::omg::CORBA::INTERNAL> errorSetShortField(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"errorSetShortField", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::INTERNAL> errorSetShortField(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"errorSetShortField", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::INTERNAL> errorSetShortField(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"errorSetShortField", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> errorSetIntField(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4, jni::ref<java::lang::Object> p5) { return call_method<"errorSetIntField", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4, p5); }
	jni::ref<org::omg::CORBA::INTERNAL> errorSetIntField(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"errorSetIntField", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::INTERNAL> errorSetIntField(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"errorSetIntField", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::INTERNAL> errorSetIntField(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"errorSetIntField", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> errorSetLongField(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4, jni::ref<java::lang::Object> p5) { return call_method<"errorSetLongField", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4, p5); }
	jni::ref<org::omg::CORBA::INTERNAL> errorSetLongField(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"errorSetLongField", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::INTERNAL> errorSetLongField(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"errorSetLongField", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::INTERNAL> errorSetLongField(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"errorSetLongField", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> errorSetFloatField(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4, jni::ref<java::lang::Object> p5) { return call_method<"errorSetFloatField", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4, p5); }
	jni::ref<org::omg::CORBA::INTERNAL> errorSetFloatField(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"errorSetFloatField", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::INTERNAL> errorSetFloatField(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"errorSetFloatField", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::INTERNAL> errorSetFloatField(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"errorSetFloatField", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> errorSetDoubleField(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4, jni::ref<java::lang::Object> p5) { return call_method<"errorSetDoubleField", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4, p5); }
	jni::ref<org::omg::CORBA::INTERNAL> errorSetDoubleField(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"errorSetDoubleField", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::INTERNAL> errorSetDoubleField(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3, jni::ref<java::lang::Object> p4) { return call_method<"errorSetDoubleField", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3, p4); }
	jni::ref<org::omg::CORBA::INTERNAL> errorSetDoubleField(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"errorSetDoubleField", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> illegalFieldAccess(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"illegalFieldAccess", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> illegalFieldAccess(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"illegalFieldAccess", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> illegalFieldAccess(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"illegalFieldAccess", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> illegalFieldAccess(jni::ref<java::lang::Object> p1) { return call_method<"illegalFieldAccess", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> badBeginUnmarshalCustomValue(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"badBeginUnmarshalCustomValue", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> badBeginUnmarshalCustomValue(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"badBeginUnmarshalCustomValue", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> badBeginUnmarshalCustomValue(jni::ref<java::lang::Throwable> p1) { return call_method<"badBeginUnmarshalCustomValue", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> badBeginUnmarshalCustomValue() { return call_method<"badBeginUnmarshalCustomValue", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> classNotFound(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"classNotFound", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> classNotFound(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"classNotFound", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> classNotFound(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"classNotFound", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> classNotFound(jni::ref<java::lang::Object> p1) { return call_method<"classNotFound", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::UNKNOWN> unknownSysex(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"unknownSysex", jni::ref<org::omg::CORBA::UNKNOWN>>(p1, p2); }
	jni::ref<org::omg::CORBA::UNKNOWN> unknownSysex(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"unknownSysex", jni::ref<org::omg::CORBA::UNKNOWN>>(p1); }
	jni::ref<org::omg::CORBA::UNKNOWN> unknownSysex(jni::ref<java::lang::Throwable> p1) { return call_method<"unknownSysex", jni::ref<org::omg::CORBA::UNKNOWN>>(p1); }
	jni::ref<org::omg::CORBA::UNKNOWN> unknownSysex() { return call_method<"unknownSysex", jni::ref<org::omg::CORBA::UNKNOWN>>(); }

protected:

	UtilSystemException(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_LOGGING_UTILSYSTEMEXCEPTION
