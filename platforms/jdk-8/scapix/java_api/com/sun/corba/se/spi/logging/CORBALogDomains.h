// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_LOGGING_CORBALOGDOMAINS_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_LOGGING_CORBALOGDOMAINS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::spi::logging { class CORBALogDomains; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::spi::logging::CORBALogDomains>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/spi/logging/CORBALogDomains";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_LOGGING_CORBALOGDOMAINS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_LOGGING_CORBALOGDOMAINS)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_LOGGING_CORBALOGDOMAINS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::spi::logging::CORBALogDomains : public jni::object_base<"com/sun/corba/se/spi/logging/CORBALogDomains",
	java::lang::Object>
{
public:

	static jni::ref<java::lang::String> TOP_LEVEL_DOMAIN() { return get_static_field<"TOP_LEVEL_DOMAIN", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> RPC() { return get_static_field<"RPC", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> RPC_PRESENTATION() { return get_static_field<"RPC_PRESENTATION", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> RPC_ENCODING() { return get_static_field<"RPC_ENCODING", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> RPC_PROTOCOL() { return get_static_field<"RPC_PROTOCOL", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> RPC_TRANSPORT() { return get_static_field<"RPC_TRANSPORT", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> NAMING() { return get_static_field<"NAMING", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> NAMING_LIFECYCLE() { return get_static_field<"NAMING_LIFECYCLE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> NAMING_READ() { return get_static_field<"NAMING_READ", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> NAMING_UPDATE() { return get_static_field<"NAMING_UPDATE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ORBD() { return get_static_field<"ORBD", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ORBD_LOCATOR() { return get_static_field<"ORBD_LOCATOR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ORBD_ACTIVATOR() { return get_static_field<"ORBD_ACTIVATOR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ORBD_REPOSITORY() { return get_static_field<"ORBD_REPOSITORY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ORBD_SERVERTOOL() { return get_static_field<"ORBD_SERVERTOOL", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ORB() { return get_static_field<"ORB", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ORB_LIFECYCLE() { return get_static_field<"ORB_LIFECYCLE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ORB_RESOLVER() { return get_static_field<"ORB_RESOLVER", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> OA() { return get_static_field<"OA", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> OA_LIFECYCLE() { return get_static_field<"OA_LIFECYCLE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> OA_IOR() { return get_static_field<"OA_IOR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> OA_INVOCATION() { return get_static_field<"OA_INVOCATION", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> RMIIIOP() { return get_static_field<"RMIIIOP", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> RMIIIOP_DELEGATE() { return get_static_field<"RMIIIOP_DELEGATE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> UTIL() { return get_static_field<"UTIL", jni::ref<java::lang::String>>(); }


protected:

	CORBALogDomains(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_LOGGING_CORBALOGDOMAINS
