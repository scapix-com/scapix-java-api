// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/org/omg/CORBA/portable/ServantObject.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_OA_OAINVOCATIONINFO_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_OA_OAINVOCATIONINFO_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::spi::oa { class OAInvocationInfo; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::spi::oa::OAInvocationInfo>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/spi/oa/OAInvocationInfo";
	using base_classes = std::tuple<scapix::java_api::org::omg::CORBA::portable::ServantObject>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_OA_OAINVOCATIONINFO_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_OA_OAINVOCATIONINFO)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_OA_OAINVOCATIONINFO

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/corba/se/spi/copyobject/ObjectCopierFactory.h>
#include <scapix/java_api/com/sun/corba/se/spi/oa/ObjectAdapter.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/omg/PortableServer/ServantLocatorPackage/CookieHolder.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::spi::oa::OAInvocationInfo : public jni::object_base<"com/sun/corba/se/spi/oa/OAInvocationInfo",
	org::omg::CORBA::portable::ServantObject>
{
public:

	static jni::ref<com::sun::corba::se::spi::oa::OAInvocationInfo> new_object(jni::ref<com::sun::corba::se::spi::oa::ObjectAdapter> p1, jni::ref<jni::array<jbyte>> p2) { return base_::new_object(p1, p2); }
	static jni::ref<com::sun::corba::se::spi::oa::OAInvocationInfo> new_object(jni::ref<com::sun::corba::se::spi::oa::OAInvocationInfo> p1, jni::ref<java::lang::String> p2) { return base_::new_object(p1, p2); }
	jni::ref<com::sun::corba::se::spi::oa::ObjectAdapter> oa() { return call_method<"oa", jni::ref<com::sun::corba::se::spi::oa::ObjectAdapter>>(); }
	jni::ref<jni::array<jbyte>> id() { return call_method<"id", jni::ref<jni::array<jbyte>>>(); }
	jni::ref<java::lang::Object> getServantContainer() { return call_method<"getServantContainer", jni::ref<java::lang::Object>>(); }
	jni::ref<org::omg::PortableServer::ServantLocatorPackage::CookieHolder> getCookieHolder() { return call_method<"getCookieHolder", jni::ref<org::omg::PortableServer::ServantLocatorPackage::CookieHolder>>(); }
	jni::ref<java::lang::String> getOperation() { return call_method<"getOperation", jni::ref<java::lang::String>>(); }
	jni::ref<com::sun::corba::se::spi::copyobject::ObjectCopierFactory> getCopierFactory() { return call_method<"getCopierFactory", jni::ref<com::sun::corba::se::spi::copyobject::ObjectCopierFactory>>(); }
	void setOperation(jni::ref<java::lang::String> p1) { return call_method<"setOperation", void>(p1); }
	void setCopierFactory(jni::ref<com::sun::corba::se::spi::copyobject::ObjectCopierFactory> p1) { return call_method<"setCopierFactory", void>(p1); }
	void setServant(jni::ref<java::lang::Object> p1) { return call_method<"setServant", void>(p1); }

protected:

	OAInvocationInfo(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_OA_OAINVOCATIONINFO
