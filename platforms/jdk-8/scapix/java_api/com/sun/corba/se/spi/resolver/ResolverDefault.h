// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_RESOLVER_RESOLVERDEFAULT_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_RESOLVER_RESOLVERDEFAULT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::spi::resolver { class ResolverDefault; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::spi::resolver::ResolverDefault>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/spi/resolver/ResolverDefault";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_RESOLVER_RESOLVERDEFAULT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_RESOLVER_RESOLVERDEFAULT)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_RESOLVER_RESOLVERDEFAULT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/corba/se/spi/orb/ORB.h>
#include <scapix/java_api/com/sun/corba/se/spi/orb/Operation.h>
#include <scapix/java_api/com/sun/corba/se/spi/orb/StringPair.h>
#include <scapix/java_api/com/sun/corba/se/spi/resolver/LocalResolver.h>
#include <scapix/java_api/com/sun/corba/se/spi/resolver/Resolver.h>
#include <scapix/java_api/java/io/File.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::spi::resolver::ResolverDefault : public jni::object_base<"com/sun/corba/se/spi/resolver/ResolverDefault",
	java::lang::Object>
{
public:

	static jni::ref<com::sun::corba::se::spi::resolver::ResolverDefault> new_object() { return base_::new_object(); }
	static jni::ref<com::sun::corba::se::spi::resolver::LocalResolver> makeLocalResolver() { return call_static_method<"makeLocalResolver", jni::ref<com::sun::corba::se::spi::resolver::LocalResolver>>(); }
	static jni::ref<com::sun::corba::se::spi::resolver::Resolver> makeORBInitRefResolver(jni::ref<com::sun::corba::se::spi::orb::Operation> p1, jni::ref<jni::array<com::sun::corba::se::spi::orb::StringPair>> p2) { return call_static_method<"makeORBInitRefResolver", jni::ref<com::sun::corba::se::spi::resolver::Resolver>>(p1, p2); }
	static jni::ref<com::sun::corba::se::spi::resolver::Resolver> makeORBDefaultInitRefResolver(jni::ref<com::sun::corba::se::spi::orb::Operation> p1, jni::ref<java::lang::String> p2) { return call_static_method<"makeORBDefaultInitRefResolver", jni::ref<com::sun::corba::se::spi::resolver::Resolver>>(p1, p2); }
	static jni::ref<com::sun::corba::se::spi::resolver::Resolver> makeBootstrapResolver(jni::ref<com::sun::corba::se::spi::orb::ORB> p1, jni::ref<java::lang::String> p2, jint p3) { return call_static_method<"makeBootstrapResolver", jni::ref<com::sun::corba::se::spi::resolver::Resolver>>(p1, p2, p3); }
	static jni::ref<com::sun::corba::se::spi::resolver::Resolver> makeCompositeResolver(jni::ref<com::sun::corba::se::spi::resolver::Resolver> p1, jni::ref<com::sun::corba::se::spi::resolver::Resolver> p2) { return call_static_method<"makeCompositeResolver", jni::ref<com::sun::corba::se::spi::resolver::Resolver>>(p1, p2); }
	static jni::ref<com::sun::corba::se::spi::orb::Operation> makeINSURLOperation(jni::ref<com::sun::corba::se::spi::orb::ORB> p1, jni::ref<com::sun::corba::se::spi::resolver::Resolver> p2) { return call_static_method<"makeINSURLOperation", jni::ref<com::sun::corba::se::spi::orb::Operation>>(p1, p2); }
	static jni::ref<com::sun::corba::se::spi::resolver::LocalResolver> makeSplitLocalResolver(jni::ref<com::sun::corba::se::spi::resolver::Resolver> p1, jni::ref<com::sun::corba::se::spi::resolver::LocalResolver> p2) { return call_static_method<"makeSplitLocalResolver", jni::ref<com::sun::corba::se::spi::resolver::LocalResolver>>(p1, p2); }
	static jni::ref<com::sun::corba::se::spi::resolver::Resolver> makeFileResolver(jni::ref<com::sun::corba::se::spi::orb::ORB> p1, jni::ref<java::io::File> p2) { return call_static_method<"makeFileResolver", jni::ref<com::sun::corba::se::spi::resolver::Resolver>>(p1, p2); }

protected:

	ResolverDefault(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_RESOLVER_RESOLVERDEFAULT
