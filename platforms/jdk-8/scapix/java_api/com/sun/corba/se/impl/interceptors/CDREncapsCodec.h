// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/org/omg/CORBA/LocalObject.h>
#include <scapix/java_api/org/omg/IOP/Codec.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_INTERCEPTORS_CDRENCAPSCODEC_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_INTERCEPTORS_CDRENCAPSCODEC_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::impl::interceptors { class CDREncapsCodec; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::impl::interceptors::CDREncapsCodec>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/impl/interceptors/CDREncapsCodec";
	using base_classes = std::tuple<scapix::java_api::org::omg::CORBA::LocalObject, scapix::java_api::org::omg::IOP::Codec>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_INTERCEPTORS_CDRENCAPSCODEC_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_INTERCEPTORS_CDRENCAPSCODEC)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_INTERCEPTORS_CDRENCAPSCODEC

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/org/omg/CORBA/Any.h>
#include <scapix/java_api/org/omg/CORBA/ORB.h>
#include <scapix/java_api/org/omg/CORBA/TypeCode.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::impl::interceptors::CDREncapsCodec : public jni::object_base<"com/sun/corba/se/impl/interceptors/CDREncapsCodec",
	org::omg::CORBA::LocalObject,
	org::omg::IOP::Codec>
{
public:

	static jni::ref<com::sun::corba::se::impl::interceptors::CDREncapsCodec> new_object(jni::ref<org::omg::CORBA::ORB> p1, jint p2, jint p3) { return base_::new_object(p1, p2, p3); }
	jni::ref<jni::array<jbyte>> encode(jni::ref<org::omg::CORBA::Any> p1) { return call_method<"encode", jni::ref<jni::array<jbyte>>>(p1); }
	jni::ref<org::omg::CORBA::Any> decode(jni::ref<jni::array<jbyte>> p1) { return call_method<"decode", jni::ref<org::omg::CORBA::Any>>(p1); }
	jni::ref<jni::array<jbyte>> encode_value(jni::ref<org::omg::CORBA::Any> p1) { return call_method<"encode_value", jni::ref<jni::array<jbyte>>>(p1); }
	jni::ref<org::omg::CORBA::Any> decode_value(jni::ref<jni::array<jbyte>> p1, jni::ref<org::omg::CORBA::TypeCode> p2) { return call_method<"decode_value", jni::ref<org::omg::CORBA::Any>>(p1, p2); }

protected:

	CDREncapsCodec(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_INTERCEPTORS_CDRENCAPSCODEC
