// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/corba/se/spi/oa/ObjectAdapterBase.h>
#include <scapix/java_api/com/sun/corba/se/impl/oa/toa/TOA.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_OA_TOA_TOAIMPL_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_OA_TOA_TOAIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::impl::oa::toa { class TOAImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::impl::oa::toa::TOAImpl>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/impl/oa/toa/TOAImpl";
	using base_classes = std::tuple<scapix::java_api::com::sun::corba::se::spi::oa::ObjectAdapterBase, scapix::java_api::com::sun::corba::se::impl::oa::toa::TOA>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_OA_TOA_TOAIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_OA_TOA_TOAIMPL)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_OA_TOA_TOAIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/corba/se/impl/oa/toa/TransientObjectManager.h>
#include <scapix/java_api/com/sun/corba/se/spi/copyobject/ObjectCopierFactory.h>
#include <scapix/java_api/com/sun/corba/se/spi/oa/OAInvocationInfo.h>
#include <scapix/java_api/com/sun/corba/se/spi/orb/ORB.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/omg/CORBA/Object.h>
#include <scapix/java_api/org/omg/CORBA/Policy.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::impl::oa::toa::TOAImpl : public jni::object_base<"com/sun/corba/se/impl/oa/toa/TOAImpl",
	com::sun::corba::se::spi::oa::ObjectAdapterBase,
	com::sun::corba::se::impl::oa::toa::TOA>
{
public:

	static jni::ref<com::sun::corba::se::impl::oa::toa::TOAImpl> new_object(jni::ref<com::sun::corba::se::spi::orb::ORB> p1, jni::ref<com::sun::corba::se::impl::oa::toa::TransientObjectManager> p2, jni::ref<java::lang::String> p3) { return base_::new_object(p1, p2, p3); }
	jni::ref<com::sun::corba::se::spi::copyobject::ObjectCopierFactory> getObjectCopierFactory() { return call_method<"getObjectCopierFactory", jni::ref<com::sun::corba::se::spi::copyobject::ObjectCopierFactory>>(); }
	jni::ref<org::omg::CORBA::Object> getLocalServant(jni::ref<jni::array<jbyte>> p1) { return call_method<"getLocalServant", jni::ref<org::omg::CORBA::Object>>(p1); }
	void getInvocationServant(jni::ref<com::sun::corba::se::spi::oa::OAInvocationInfo> p1) { return call_method<"getInvocationServant", void>(p1); }
	void returnServant() { return call_method<"returnServant", void>(); }
	jni::ref<jni::array<java::lang::String>> getInterfaces(jni::ref<java::lang::Object> p1, jni::ref<jni::array<jbyte>> p2) { return call_method<"getInterfaces", jni::ref<jni::array<java::lang::String>>>(p1, p2); }
	jni::ref<org::omg::CORBA::Policy> getEffectivePolicy(jint p1) { return call_method<"getEffectivePolicy", jni::ref<org::omg::CORBA::Policy>>(p1); }
	jint getManagerId() { return call_method<"getManagerId", jint>(); }
	jshort getState() { return call_method<"getState", jshort>(); }
	void enter() { return call_method<"enter", void>(); }
	void exit() { return call_method<"exit", void>(); }
	void connect(jni::ref<org::omg::CORBA::Object> p1) { return call_method<"connect", void>(p1); }
	void disconnect(jni::ref<org::omg::CORBA::Object> p1) { return call_method<"disconnect", void>(p1); }

protected:

	TOAImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_OA_TOA_TOAIMPL
