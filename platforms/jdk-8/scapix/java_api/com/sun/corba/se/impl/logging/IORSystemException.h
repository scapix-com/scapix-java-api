// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/corba/se/spi/logging/LogWrapperBase.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_LOGGING_IORSYSTEMEXCEPTION_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_LOGGING_IORSYSTEMEXCEPTION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::impl::logging { class IORSystemException; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::impl::logging::IORSystemException>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/impl/logging/IORSystemException";
	using base_classes = std::tuple<scapix::java_api::com::sun::corba::se::spi::logging::LogWrapperBase>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_LOGGING_IORSYSTEMEXCEPTION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_LOGGING_IORSYSTEMEXCEPTION)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_LOGGING_IORSYSTEMEXCEPTION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/corba/se/spi/orb/ORB.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/Throwable.h>
#include <scapix/java_api/java/util/logging/Logger.h>
#include <scapix/java_api/org/omg/CORBA/BAD_OPERATION.h>
#include <scapix/java_api/org/omg/CORBA/BAD_PARAM.h>
#include <scapix/java_api/org/omg/CORBA/CompletionStatus.h>
#include <scapix/java_api/org/omg/CORBA/INTERNAL.h>
#include <scapix/java_api/org/omg/CORBA/INV_OBJREF.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::impl::logging::IORSystemException : public jni::object_base<"com/sun/corba/se/impl/logging/IORSystemException",
	com::sun::corba::se::spi::logging::LogWrapperBase>
{
public:

	static jint ORT_NOT_INITIALIZED() { return get_static_field<"ORT_NOT_INITIALIZED", jint>(); }
	static jint NULL_POA() { return get_static_field<"NULL_POA", jint>(); }
	static jint BAD_MAGIC() { return get_static_field<"BAD_MAGIC", jint>(); }
	static jint STRINGIFY_WRITE_ERROR() { return get_static_field<"STRINGIFY_WRITE_ERROR", jint>(); }
	static jint TAGGED_PROFILE_TEMPLATE_FACTORY_NOT_FOUND() { return get_static_field<"TAGGED_PROFILE_TEMPLATE_FACTORY_NOT_FOUND", jint>(); }
	static jint INVALID_JDK1_3_1_PATCH_LEVEL() { return get_static_field<"INVALID_JDK1_3_1_PATCH_LEVEL", jint>(); }
	static jint GET_LOCAL_SERVANT_FAILURE() { return get_static_field<"GET_LOCAL_SERVANT_FAILURE", jint>(); }
	static jint ADAPTER_ID_NOT_AVAILABLE() { return get_static_field<"ADAPTER_ID_NOT_AVAILABLE", jint>(); }
	static jint SERVER_ID_NOT_AVAILABLE() { return get_static_field<"SERVER_ID_NOT_AVAILABLE", jint>(); }
	static jint ORB_ID_NOT_AVAILABLE() { return get_static_field<"ORB_ID_NOT_AVAILABLE", jint>(); }
	static jint OBJECT_ADAPTER_ID_NOT_AVAILABLE() { return get_static_field<"OBJECT_ADAPTER_ID_NOT_AVAILABLE", jint>(); }
	static jint BAD_OID_IN_IOR_TEMPLATE_LIST() { return get_static_field<"BAD_OID_IN_IOR_TEMPLATE_LIST", jint>(); }
	static jint INVALID_TAGGED_PROFILE() { return get_static_field<"INVALID_TAGGED_PROFILE", jint>(); }
	static jint BAD_IIOP_ADDRESS_PORT() { return get_static_field<"BAD_IIOP_ADDRESS_PORT", jint>(); }
	static jint IOR_MUST_HAVE_IIOP_PROFILE() { return get_static_field<"IOR_MUST_HAVE_IIOP_PROFILE", jint>(); }

	static jni::ref<com::sun::corba::se::impl::logging::IORSystemException> new_object(jni::ref<java::util::logging::Logger> p1) { return base_::new_object(p1); }
	static jni::ref<com::sun::corba::se::impl::logging::IORSystemException> get(jni::ref<com::sun::corba::se::spi::orb::ORB> p1, jni::ref<java::lang::String> p2) { return call_static_method<"get", jni::ref<com::sun::corba::se::impl::logging::IORSystemException>>(p1, p2); }
	static jni::ref<com::sun::corba::se::impl::logging::IORSystemException> get(jni::ref<java::lang::String> p1) { return call_static_method<"get", jni::ref<com::sun::corba::se::impl::logging::IORSystemException>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> ortNotInitialized(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"ortNotInitialized", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> ortNotInitialized(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"ortNotInitialized", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> ortNotInitialized(jni::ref<java::lang::Throwable> p1) { return call_method<"ortNotInitialized", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> ortNotInitialized() { return call_method<"ortNotInitialized", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> nullPoa(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"nullPoa", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> nullPoa(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"nullPoa", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> nullPoa(jni::ref<java::lang::Throwable> p1) { return call_method<"nullPoa", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> nullPoa() { return call_method<"nullPoa", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> badMagic(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"badMagic", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> badMagic(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"badMagic", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> badMagic(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"badMagic", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> badMagic(jni::ref<java::lang::Object> p1) { return call_method<"badMagic", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> stringifyWriteError(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"stringifyWriteError", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> stringifyWriteError(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"stringifyWriteError", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> stringifyWriteError(jni::ref<java::lang::Throwable> p1) { return call_method<"stringifyWriteError", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> stringifyWriteError() { return call_method<"stringifyWriteError", jni::ref<org::omg::CORBA::INTERNAL>>(); }
	jni::ref<org::omg::CORBA::INTERNAL> taggedProfileTemplateFactoryNotFound(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"taggedProfileTemplateFactoryNotFound", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> taggedProfileTemplateFactoryNotFound(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"taggedProfileTemplateFactoryNotFound", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> taggedProfileTemplateFactoryNotFound(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"taggedProfileTemplateFactoryNotFound", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> taggedProfileTemplateFactoryNotFound(jni::ref<java::lang::Object> p1) { return call_method<"taggedProfileTemplateFactoryNotFound", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> invalidJdk131PatchLevel(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"invalidJdk131PatchLevel", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> invalidJdk131PatchLevel(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"invalidJdk131PatchLevel", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> invalidJdk131PatchLevel(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"invalidJdk131PatchLevel", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> invalidJdk131PatchLevel(jni::ref<java::lang::Object> p1) { return call_method<"invalidJdk131PatchLevel", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::INTERNAL> getLocalServantFailure(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"getLocalServantFailure", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::INTERNAL> getLocalServantFailure(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"getLocalServantFailure", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> getLocalServantFailure(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"getLocalServantFailure", jni::ref<org::omg::CORBA::INTERNAL>>(p1, p2); }
	jni::ref<org::omg::CORBA::INTERNAL> getLocalServantFailure(jni::ref<java::lang::Object> p1) { return call_method<"getLocalServantFailure", jni::ref<org::omg::CORBA::INTERNAL>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> adapterIdNotAvailable(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"adapterIdNotAvailable", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> adapterIdNotAvailable(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"adapterIdNotAvailable", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> adapterIdNotAvailable(jni::ref<java::lang::Throwable> p1) { return call_method<"adapterIdNotAvailable", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> adapterIdNotAvailable() { return call_method<"adapterIdNotAvailable", jni::ref<org::omg::CORBA::BAD_OPERATION>>(); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> serverIdNotAvailable(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"serverIdNotAvailable", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> serverIdNotAvailable(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"serverIdNotAvailable", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> serverIdNotAvailable(jni::ref<java::lang::Throwable> p1) { return call_method<"serverIdNotAvailable", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> serverIdNotAvailable() { return call_method<"serverIdNotAvailable", jni::ref<org::omg::CORBA::BAD_OPERATION>>(); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> orbIdNotAvailable(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"orbIdNotAvailable", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> orbIdNotAvailable(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"orbIdNotAvailable", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> orbIdNotAvailable(jni::ref<java::lang::Throwable> p1) { return call_method<"orbIdNotAvailable", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> orbIdNotAvailable() { return call_method<"orbIdNotAvailable", jni::ref<org::omg::CORBA::BAD_OPERATION>>(); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> objectAdapterIdNotAvailable(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"objectAdapterIdNotAvailable", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> objectAdapterIdNotAvailable(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"objectAdapterIdNotAvailable", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> objectAdapterIdNotAvailable(jni::ref<java::lang::Throwable> p1) { return call_method<"objectAdapterIdNotAvailable", jni::ref<org::omg::CORBA::BAD_OPERATION>>(p1); }
	jni::ref<org::omg::CORBA::BAD_OPERATION> objectAdapterIdNotAvailable() { return call_method<"objectAdapterIdNotAvailable", jni::ref<org::omg::CORBA::BAD_OPERATION>>(); }
	jni::ref<org::omg::CORBA::BAD_PARAM> badOidInIorTemplateList(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"badOidInIorTemplateList", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_PARAM> badOidInIorTemplateList(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"badOidInIorTemplateList", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> badOidInIorTemplateList(jni::ref<java::lang::Throwable> p1) { return call_method<"badOidInIorTemplateList", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> badOidInIorTemplateList() { return call_method<"badOidInIorTemplateList", jni::ref<org::omg::CORBA::BAD_PARAM>>(); }
	jni::ref<org::omg::CORBA::BAD_PARAM> invalidTaggedProfile(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"invalidTaggedProfile", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_PARAM> invalidTaggedProfile(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"invalidTaggedProfile", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> invalidTaggedProfile(jni::ref<java::lang::Throwable> p1) { return call_method<"invalidTaggedProfile", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::BAD_PARAM> invalidTaggedProfile() { return call_method<"invalidTaggedProfile", jni::ref<org::omg::CORBA::BAD_PARAM>>(); }
	jni::ref<org::omg::CORBA::BAD_PARAM> badIiopAddressPort(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2, jni::ref<java::lang::Object> p3) { return call_method<"badIiopAddressPort", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2, p3); }
	jni::ref<org::omg::CORBA::BAD_PARAM> badIiopAddressPort(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Object> p2) { return call_method<"badIiopAddressPort", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_PARAM> badIiopAddressPort(jni::ref<java::lang::Throwable> p1, jni::ref<java::lang::Object> p2) { return call_method<"badIiopAddressPort", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1, p2); }
	jni::ref<org::omg::CORBA::BAD_PARAM> badIiopAddressPort(jni::ref<java::lang::Object> p1) { return call_method<"badIiopAddressPort", jni::ref<org::omg::CORBA::BAD_PARAM>>(p1); }
	jni::ref<org::omg::CORBA::INV_OBJREF> iorMustHaveIiopProfile(jni::ref<org::omg::CORBA::CompletionStatus> p1, jni::ref<java::lang::Throwable> p2) { return call_method<"iorMustHaveIiopProfile", jni::ref<org::omg::CORBA::INV_OBJREF>>(p1, p2); }
	jni::ref<org::omg::CORBA::INV_OBJREF> iorMustHaveIiopProfile(jni::ref<org::omg::CORBA::CompletionStatus> p1) { return call_method<"iorMustHaveIiopProfile", jni::ref<org::omg::CORBA::INV_OBJREF>>(p1); }
	jni::ref<org::omg::CORBA::INV_OBJREF> iorMustHaveIiopProfile(jni::ref<java::lang::Throwable> p1) { return call_method<"iorMustHaveIiopProfile", jni::ref<org::omg::CORBA::INV_OBJREF>>(p1); }
	jni::ref<org::omg::CORBA::INV_OBJREF> iorMustHaveIiopProfile() { return call_method<"iorMustHaveIiopProfile", jni::ref<org::omg::CORBA::INV_OBJREF>>(); }

protected:

	IORSystemException(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_LOGGING_IORSYSTEMEXCEPTION
