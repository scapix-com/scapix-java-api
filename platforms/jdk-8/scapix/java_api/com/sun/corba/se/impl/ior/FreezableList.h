// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/util/AbstractList.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_IOR_FREEZABLELIST_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_IOR_FREEZABLELIST_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::impl::ior { class FreezableList; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::impl::ior::FreezableList>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/impl/ior/FreezableList";
	using base_classes = std::tuple<scapix::java_api::java::util::AbstractList>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_IOR_FREEZABLELIST_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_IOR_FREEZABLELIST)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_IOR_FREEZABLELIST

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/util/List.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::impl::ior::FreezableList : public jni::object_base<"com/sun/corba/se/impl/ior/FreezableList",
	java::util::AbstractList>
{
public:

	jboolean equals(jni::ref<java::lang::Object> p1) { return call_method<"equals", jboolean>(p1); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	static jni::ref<com::sun::corba::se::impl::ior::FreezableList> new_object(jni::ref<java::util::List> p1, jboolean p2) { return base_::new_object(p1, p2); }
	static jni::ref<com::sun::corba::se::impl::ior::FreezableList> new_object(jni::ref<java::util::List> p1) { return base_::new_object(p1); }
	void makeImmutable() { return call_method<"makeImmutable", void>(); }
	jboolean isImmutable() { return call_method<"isImmutable", jboolean>(); }
	void makeElementsImmutable() { return call_method<"makeElementsImmutable", void>(); }
	jint size() { return call_method<"size", jint>(); }
	jni::ref<java::lang::Object> get(jint p1) { return call_method<"get", jni::ref<java::lang::Object>>(p1); }
	jni::ref<java::lang::Object> set(jint p1, jni::ref<java::lang::Object> p2) { return call_method<"set", jni::ref<java::lang::Object>>(p1, p2); }
	void add(jint p1, jni::ref<java::lang::Object> p2) { return call_method<"add", void>(p1, p2); }
	jni::ref<java::lang::Object> remove(jint p1) { return call_method<"remove", jni::ref<java::lang::Object>>(p1); }
	jni::ref<java::util::List> subList(jint p1, jint p2) { return call_method<"subList", jni::ref<java::util::List>>(p1, p2); }

protected:

	FreezableList(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_IOR_FREEZABLELIST
