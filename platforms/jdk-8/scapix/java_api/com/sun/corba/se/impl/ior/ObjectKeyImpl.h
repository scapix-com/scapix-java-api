// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/com/sun/corba/se/spi/ior/ObjectKey.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_IOR_OBJECTKEYIMPL_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_IOR_OBJECTKEYIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::impl::ior { class ObjectKeyImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::impl::ior::ObjectKeyImpl>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/impl/ior/ObjectKeyImpl";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::com::sun::corba::se::spi::ior::ObjectKey>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_IOR_OBJECTKEYIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_IOR_OBJECTKEYIMPL)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_IOR_OBJECTKEYIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/corba/se/spi/ior/ObjectId.h>
#include <scapix/java_api/com/sun/corba/se/spi/ior/ObjectKeyTemplate.h>
#include <scapix/java_api/com/sun/corba/se/spi/orb/ORB.h>
#include <scapix/java_api/com/sun/corba/se/spi/protocol/CorbaServerRequestDispatcher.h>
#include <scapix/java_api/org/omg/CORBA/ORB.h>
#include <scapix/java_api/org/omg/CORBA_2_3/portable/OutputStream.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::impl::ior::ObjectKeyImpl : public jni::object_base<"com/sun/corba/se/impl/ior/ObjectKeyImpl",
	java::lang::Object,
	com::sun::corba::se::spi::ior::ObjectKey>
{
public:

	jboolean equals(jni::ref<java::lang::Object> p1) { return call_method<"equals", jboolean>(p1); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jni::ref<com::sun::corba::se::spi::ior::ObjectKeyTemplate> getTemplate() { return call_method<"getTemplate", jni::ref<com::sun::corba::se::spi::ior::ObjectKeyTemplate>>(); }
	jni::ref<com::sun::corba::se::spi::ior::ObjectId> getId() { return call_method<"getId", jni::ref<com::sun::corba::se::spi::ior::ObjectId>>(); }
	static jni::ref<com::sun::corba::se::impl::ior::ObjectKeyImpl> new_object(jni::ref<com::sun::corba::se::spi::ior::ObjectKeyTemplate> p1, jni::ref<com::sun::corba::se::spi::ior::ObjectId> p2) { return base_::new_object(p1, p2); }
	void write(jni::ref<org::omg::CORBA_2_3::portable::OutputStream> p1) { return call_method<"write", void>(p1); }
	jni::ref<jni::array<jbyte>> getBytes(jni::ref<org::omg::CORBA::ORB> p1) { return call_method<"getBytes", jni::ref<jni::array<jbyte>>>(p1); }
	jni::ref<com::sun::corba::se::spi::protocol::CorbaServerRequestDispatcher> getServerRequestDispatcher(jni::ref<com::sun::corba::se::spi::orb::ORB> p1) { return call_method<"getServerRequestDispatcher", jni::ref<com::sun::corba::se::spi::protocol::CorbaServerRequestDispatcher>>(p1); }

protected:

	ObjectKeyImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_IOR_OBJECTKEYIMPL
