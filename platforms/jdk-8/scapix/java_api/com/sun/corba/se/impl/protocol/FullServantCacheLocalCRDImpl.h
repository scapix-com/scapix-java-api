// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/corba/se/impl/protocol/ServantCacheLocalCRDBase.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_PROTOCOL_FULLSERVANTCACHELOCALCRDIMPL_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_PROTOCOL_FULLSERVANTCACHELOCALCRDIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::impl::protocol { class FullServantCacheLocalCRDImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::impl::protocol::FullServantCacheLocalCRDImpl>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/impl/protocol/FullServantCacheLocalCRDImpl";
	using base_classes = std::tuple<scapix::java_api::com::sun::corba::se::impl::protocol::ServantCacheLocalCRDBase>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_PROTOCOL_FULLSERVANTCACHELOCALCRDIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_PROTOCOL_FULLSERVANTCACHELOCALCRDIMPL)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_PROTOCOL_FULLSERVANTCACHELOCALCRDIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/corba/se/spi/ior/IOR.h>
#include <scapix/java_api/com/sun/corba/se/spi/orb/ORB.h>
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/omg/CORBA/Object.h>
#include <scapix/java_api/org/omg/CORBA/portable/ServantObject.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::impl::protocol::FullServantCacheLocalCRDImpl : public jni::object_base<"com/sun/corba/se/impl/protocol/FullServantCacheLocalCRDImpl",
	com::sun::corba::se::impl::protocol::ServantCacheLocalCRDBase>
{
public:

	static jni::ref<com::sun::corba::se::impl::protocol::FullServantCacheLocalCRDImpl> new_object(jni::ref<com::sun::corba::se::spi::orb::ORB> p1, jint p2, jni::ref<com::sun::corba::se::spi::ior::IOR> p3) { return base_::new_object(p1, p2, p3); }
	jni::ref<org::omg::CORBA::portable::ServantObject> servant_preinvoke(jni::ref<org::omg::CORBA::Object> p1, jni::ref<java::lang::String> p2, jni::ref<java::lang::Class> p3) { return call_method<"servant_preinvoke", jni::ref<org::omg::CORBA::portable::ServantObject>>(p1, p2, p3); }
	void servant_postinvoke(jni::ref<org::omg::CORBA::Object> p1, jni::ref<org::omg::CORBA::portable::ServantObject> p2) { return call_method<"servant_postinvoke", void>(p1, p2); }

protected:

	FullServantCacheLocalCRDImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_PROTOCOL_FULLSERVANTCACHELOCALCRDIMPL
