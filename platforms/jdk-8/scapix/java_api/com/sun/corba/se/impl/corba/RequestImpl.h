// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/org/omg/CORBA/Request.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_CORBA_REQUESTIMPL_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_CORBA_REQUESTIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::impl::corba { class RequestImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::impl::corba::RequestImpl>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/impl/corba/RequestImpl";
	using base_classes = std::tuple<scapix::java_api::org::omg::CORBA::Request>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_CORBA_REQUESTIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_CORBA_REQUESTIMPL)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_CORBA_REQUESTIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/corba/se/spi/orb/ORB.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/omg/CORBA/Any.h>
#include <scapix/java_api/org/omg/CORBA/Context.h>
#include <scapix/java_api/org/omg/CORBA/ContextList.h>
#include <scapix/java_api/org/omg/CORBA/Environment.h>
#include <scapix/java_api/org/omg/CORBA/ExceptionList.h>
#include <scapix/java_api/org/omg/CORBA/NVList.h>
#include <scapix/java_api/org/omg/CORBA/NamedValue.h>
#include <scapix/java_api/org/omg/CORBA/Object.h>
#include <scapix/java_api/org/omg/CORBA/TypeCode.h>
#include <scapix/java_api/org/omg/CORBA/portable/InputStream.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::impl::corba::RequestImpl : public jni::object_base<"com/sun/corba/se/impl/corba/RequestImpl",
	org::omg::CORBA::Request>
{
public:

	static jni::ref<com::sun::corba::se::impl::corba::RequestImpl> new_object(jni::ref<com::sun::corba::se::spi::orb::ORB> p1, jni::ref<org::omg::CORBA::Object> p2, jni::ref<org::omg::CORBA::Context> p3, jni::ref<java::lang::String> p4, jni::ref<org::omg::CORBA::NVList> p5, jni::ref<org::omg::CORBA::NamedValue> p6, jni::ref<org::omg::CORBA::ExceptionList> p7, jni::ref<org::omg::CORBA::ContextList> p8) { return base_::new_object(p1, p2, p3, p4, p5, p6, p7, p8); }
	jni::ref<org::omg::CORBA::Object> target() { return call_method<"target", jni::ref<org::omg::CORBA::Object>>(); }
	jni::ref<java::lang::String> operation() { return call_method<"operation", jni::ref<java::lang::String>>(); }
	jni::ref<org::omg::CORBA::NVList> arguments() { return call_method<"arguments", jni::ref<org::omg::CORBA::NVList>>(); }
	jni::ref<org::omg::CORBA::NamedValue> result() { return call_method<"result", jni::ref<org::omg::CORBA::NamedValue>>(); }
	jni::ref<org::omg::CORBA::Environment> env() { return call_method<"env", jni::ref<org::omg::CORBA::Environment>>(); }
	jni::ref<org::omg::CORBA::ExceptionList> exceptions() { return call_method<"exceptions", jni::ref<org::omg::CORBA::ExceptionList>>(); }
	jni::ref<org::omg::CORBA::ContextList> contexts() { return call_method<"contexts", jni::ref<org::omg::CORBA::ContextList>>(); }
	jni::ref<org::omg::CORBA::Context> ctx() { return call_method<"ctx", jni::ref<org::omg::CORBA::Context>>(); }
	void ctx(jni::ref<org::omg::CORBA::Context> p1) { return call_method<"ctx", void>(p1); }
	jni::ref<org::omg::CORBA::Any> add_in_arg() { return call_method<"add_in_arg", jni::ref<org::omg::CORBA::Any>>(); }
	jni::ref<org::omg::CORBA::Any> add_named_in_arg(jni::ref<java::lang::String> p1) { return call_method<"add_named_in_arg", jni::ref<org::omg::CORBA::Any>>(p1); }
	jni::ref<org::omg::CORBA::Any> add_inout_arg() { return call_method<"add_inout_arg", jni::ref<org::omg::CORBA::Any>>(); }
	jni::ref<org::omg::CORBA::Any> add_named_inout_arg(jni::ref<java::lang::String> p1) { return call_method<"add_named_inout_arg", jni::ref<org::omg::CORBA::Any>>(p1); }
	jni::ref<org::omg::CORBA::Any> add_out_arg() { return call_method<"add_out_arg", jni::ref<org::omg::CORBA::Any>>(); }
	jni::ref<org::omg::CORBA::Any> add_named_out_arg(jni::ref<java::lang::String> p1) { return call_method<"add_named_out_arg", jni::ref<org::omg::CORBA::Any>>(p1); }
	void set_return_type(jni::ref<org::omg::CORBA::TypeCode> p1) { return call_method<"set_return_type", void>(p1); }
	jni::ref<org::omg::CORBA::Any> return_value() { return call_method<"return_value", jni::ref<org::omg::CORBA::Any>>(); }
	void add_exception(jni::ref<org::omg::CORBA::TypeCode> p1) { return call_method<"add_exception", void>(p1); }
	void invoke() { return call_method<"invoke", void>(); }
	void send_oneway() { return call_method<"send_oneway", void>(); }
	void send_deferred() { return call_method<"send_deferred", void>(); }
	jboolean poll_response() { return call_method<"poll_response", jboolean>(); }
	void get_response() { return call_method<"get_response", void>(); }
	void unmarshalReply(jni::ref<org::omg::CORBA::portable::InputStream> p1) { return call_method<"unmarshalReply", void>(p1); }

protected:

	RequestImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_CORBA_REQUESTIMPL
