// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_CORBA_TYPECODEFACTORY_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_CORBA_TYPECODEFACTORY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::impl::corba { class TypeCodeFactory; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::impl::corba::TypeCodeFactory>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/impl/corba/TypeCodeFactory";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_CORBA_TYPECODEFACTORY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_CORBA_TYPECODEFACTORY)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_CORBA_TYPECODEFACTORY

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/corba/se/impl/corba/TypeCodeImpl.h>
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::impl::corba::TypeCodeFactory : public jni::object_base<"com/sun/corba/se/impl/corba/TypeCodeFactory",
	java::lang::Object>
{
public:

	void setTypeCode(jni::ref<java::lang::String> p1, jni::ref<com::sun::corba::se::impl::corba::TypeCodeImpl> p2) { return call_method<"setTypeCode", void>(p1, p2); }
	jni::ref<com::sun::corba::se::impl::corba::TypeCodeImpl> getTypeCode(jni::ref<java::lang::String> p1) { return call_method<"getTypeCode", jni::ref<com::sun::corba::se::impl::corba::TypeCodeImpl>>(p1); }
	void setTypeCodeForClass(jni::ref<java::lang::Class> p1, jni::ref<com::sun::corba::se::impl::corba::TypeCodeImpl> p2) { return call_method<"setTypeCodeForClass", void>(p1, p2); }
	jni::ref<com::sun::corba::se::impl::corba::TypeCodeImpl> getTypeCodeForClass(jni::ref<java::lang::Class> p1) { return call_method<"getTypeCodeForClass", jni::ref<com::sun::corba::se::impl::corba::TypeCodeImpl>>(p1); }

protected:

	TypeCodeFactory(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_CORBA_TYPECODEFACTORY
