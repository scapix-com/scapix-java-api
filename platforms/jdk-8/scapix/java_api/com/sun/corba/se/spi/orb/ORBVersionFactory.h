// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_ORB_ORBVERSIONFACTORY_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_ORB_ORBVERSIONFACTORY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::spi::orb { class ORBVersionFactory; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::spi::orb::ORBVersionFactory>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/spi/orb/ORBVersionFactory";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_ORB_ORBVERSIONFACTORY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_ORB_ORBVERSIONFACTORY)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_ORB_ORBVERSIONFACTORY

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/corba/se/spi/orb/ORBVersion.h>
#include <scapix/java_api/org/omg/CORBA/portable/InputStream.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::spi::orb::ORBVersionFactory : public jni::object_base<"com/sun/corba/se/spi/orb/ORBVersionFactory",
	java::lang::Object>
{
public:

	static jni::ref<com::sun::corba::se::spi::orb::ORBVersion> getFOREIGN() { return call_static_method<"getFOREIGN", jni::ref<com::sun::corba::se::spi::orb::ORBVersion>>(); }
	static jni::ref<com::sun::corba::se::spi::orb::ORBVersion> getOLD() { return call_static_method<"getOLD", jni::ref<com::sun::corba::se::spi::orb::ORBVersion>>(); }
	static jni::ref<com::sun::corba::se::spi::orb::ORBVersion> getNEW() { return call_static_method<"getNEW", jni::ref<com::sun::corba::se::spi::orb::ORBVersion>>(); }
	static jni::ref<com::sun::corba::se::spi::orb::ORBVersion> getJDK1_3_1_01() { return call_static_method<"getJDK1_3_1_01", jni::ref<com::sun::corba::se::spi::orb::ORBVersion>>(); }
	static jni::ref<com::sun::corba::se::spi::orb::ORBVersion> getNEWER() { return call_static_method<"getNEWER", jni::ref<com::sun::corba::se::spi::orb::ORBVersion>>(); }
	static jni::ref<com::sun::corba::se::spi::orb::ORBVersion> getPEORB() { return call_static_method<"getPEORB", jni::ref<com::sun::corba::se::spi::orb::ORBVersion>>(); }
	static jni::ref<com::sun::corba::se::spi::orb::ORBVersion> getORBVersion() { return call_static_method<"getORBVersion", jni::ref<com::sun::corba::se::spi::orb::ORBVersion>>(); }
	static jni::ref<com::sun::corba::se::spi::orb::ORBVersion> create(jni::ref<org::omg::CORBA::portable::InputStream> p1) { return call_static_method<"create", jni::ref<com::sun::corba::se::spi::orb::ORBVersion>>(p1); }

protected:

	ORBVersionFactory(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_ORB_ORBVERSIONFACTORY
