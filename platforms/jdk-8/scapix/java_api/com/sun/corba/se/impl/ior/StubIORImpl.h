// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_IOR_STUBIORIMPL_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_IOR_STUBIORIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::impl::ior { class StubIORImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::impl::ior::StubIORImpl>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/impl/ior/StubIORImpl";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_IOR_STUBIORIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_IOR_STUBIORIMPL)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_IOR_STUBIORIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/ObjectInputStream.h>
#include <scapix/java_api/java/io/ObjectOutputStream.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/omg/CORBA/ORB.h>
#include <scapix/java_api/org/omg/CORBA/Object.h>
#include <scapix/java_api/org/omg/CORBA/portable/Delegate.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::impl::ior::StubIORImpl : public jni::object_base<"com/sun/corba/se/impl/ior/StubIORImpl",
	java::lang::Object>
{
public:

	static jni::ref<com::sun::corba::se::impl::ior::StubIORImpl> new_object() { return base_::new_object(); }
	jni::ref<java::lang::String> getRepositoryId() { return call_method<"getRepositoryId", jni::ref<java::lang::String>>(); }
	static jni::ref<com::sun::corba::se::impl::ior::StubIORImpl> new_object(jni::ref<org::omg::CORBA::Object> p1) { return base_::new_object(p1); }
	jni::ref<org::omg::CORBA::portable::Delegate> getDelegate(jni::ref<org::omg::CORBA::ORB> p1) { return call_method<"getDelegate", jni::ref<org::omg::CORBA::portable::Delegate>>(p1); }
	void doRead(jni::ref<java::io::ObjectInputStream> p1) { return call_method<"doRead", void>(p1); }
	void doWrite(jni::ref<java::io::ObjectOutputStream> p1) { return call_method<"doWrite", void>(p1); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jboolean equals(jni::ref<java::lang::Object> p1) { return call_method<"equals", jboolean>(p1); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	StubIORImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_IOR_STUBIORIMPL
