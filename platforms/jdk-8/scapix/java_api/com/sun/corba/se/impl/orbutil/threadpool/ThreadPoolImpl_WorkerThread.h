// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Thread.h>
#include <scapix/java_api/java/io/Closeable.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ORBUTIL_THREADPOOL_THREADPOOLIMPL_WORKERTHREAD_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ORBUTIL_THREADPOOL_THREADPOOLIMPL_WORKERTHREAD_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::impl::orbutil::threadpool { class ThreadPoolImpl_WorkerThread; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::impl::orbutil::threadpool::ThreadPoolImpl_WorkerThread>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/impl/orbutil/threadpool/ThreadPoolImpl$WorkerThread";
	using base_classes = std::tuple<scapix::java_api::java::lang::Thread, scapix::java_api::java::io::Closeable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ORBUTIL_THREADPOOL_THREADPOOLIMPL_WORKERTHREAD_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ORBUTIL_THREADPOOL_THREADPOOLIMPL_WORKERTHREAD)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ORBUTIL_THREADPOOL_THREADPOOLIMPL_WORKERTHREAD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class com::sun::corba::se::impl::orbutil::threadpool::ThreadPoolImpl_WorkerThread : public jni::object_base<"com/sun/corba/se/impl/orbutil/threadpool/ThreadPoolImpl$WorkerThread",
	java::lang::Thread,
	java::io::Closeable>
{
public:

	void close() { return call_method<"close", void>(); }
	void run() { return call_method<"run", void>(); }

protected:

	ThreadPoolImpl_WorkerThread(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ORBUTIL_THREADPOOL_THREADPOOLIMPL_WORKERTHREAD
