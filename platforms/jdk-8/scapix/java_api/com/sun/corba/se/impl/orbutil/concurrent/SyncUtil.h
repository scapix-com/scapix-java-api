// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ORBUTIL_CONCURRENT_SYNCUTIL_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ORBUTIL_CONCURRENT_SYNCUTIL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::impl::orbutil::concurrent { class SyncUtil; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::impl::orbutil::concurrent::SyncUtil>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/impl/orbutil/concurrent/SyncUtil";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ORBUTIL_CONCURRENT_SYNCUTIL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ORBUTIL_CONCURRENT_SYNCUTIL)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ORBUTIL_CONCURRENT_SYNCUTIL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/corba/se/impl/orbutil/concurrent/Sync.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::impl::orbutil::concurrent::SyncUtil : public jni::object_base<"com/sun/corba/se/impl/orbutil/concurrent/SyncUtil",
	java::lang::Object>
{
public:

	static void acquire(jni::ref<com::sun::corba::se::impl::orbutil::concurrent::Sync> p1) { return call_static_method<"acquire", void>(p1); }

protected:

	SyncUtil(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ORBUTIL_CONCURRENT_SYNCUTIL
