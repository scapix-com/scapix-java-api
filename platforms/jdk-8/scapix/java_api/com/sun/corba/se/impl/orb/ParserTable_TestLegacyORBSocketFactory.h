// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/com/sun/corba/se/spi/legacy/connection/ORBSocketFactory.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ORB_PARSERTABLE_TESTLEGACYORBSOCKETFACTORY_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ORB_PARSERTABLE_TESTLEGACYORBSOCKETFACTORY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::impl::orb { class ParserTable_TestLegacyORBSocketFactory; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::impl::orb::ParserTable_TestLegacyORBSocketFactory>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/impl/orb/ParserTable$TestLegacyORBSocketFactory";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::com::sun::corba::se::spi::legacy::connection::ORBSocketFactory>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ORB_PARSERTABLE_TESTLEGACYORBSOCKETFACTORY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ORB_PARSERTABLE_TESTLEGACYORBSOCKETFACTORY)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ORB_PARSERTABLE_TESTLEGACYORBSOCKETFACTORY

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/corba/se/spi/ior/IOR.h>
#include <scapix/java_api/com/sun/corba/se/spi/transport/SocketInfo.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/net/ServerSocket.h>
#include <scapix/java_api/java/net/Socket.h>
#include <scapix/java_api/org/omg/CORBA/ORB.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::impl::orb::ParserTable_TestLegacyORBSocketFactory : public jni::object_base<"com/sun/corba/se/impl/orb/ParserTable$TestLegacyORBSocketFactory",
	java::lang::Object,
	com::sun::corba::se::spi::legacy::connection::ORBSocketFactory>
{
public:

	static jni::ref<com::sun::corba::se::impl::orb::ParserTable_TestLegacyORBSocketFactory> new_object() { return base_::new_object(); }
	jboolean equals(jni::ref<java::lang::Object> p1) { return call_method<"equals", jboolean>(p1); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jni::ref<java::net::ServerSocket> createServerSocket(jni::ref<java::lang::String> p1, jint p2) { return call_method<"createServerSocket", jni::ref<java::net::ServerSocket>>(p1, p2); }
	jni::ref<com::sun::corba::se::spi::transport::SocketInfo> getEndPointInfo(jni::ref<org::omg::CORBA::ORB> p1, jni::ref<com::sun::corba::se::spi::ior::IOR> p2, jni::ref<com::sun::corba::se::spi::transport::SocketInfo> p3) { return call_method<"getEndPointInfo", jni::ref<com::sun::corba::se::spi::transport::SocketInfo>>(p1, p2, p3); }
	jni::ref<java::net::Socket> createSocket(jni::ref<com::sun::corba::se::spi::transport::SocketInfo> p1) { return call_method<"createSocket", jni::ref<java::net::Socket>>(p1); }

protected:

	ParserTable_TestLegacyORBSocketFactory(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ORB_PARSERTABLE_TESTLEGACYORBSOCKETFACTORY
