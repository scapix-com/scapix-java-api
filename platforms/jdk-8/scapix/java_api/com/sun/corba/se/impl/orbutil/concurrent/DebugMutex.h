// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/com/sun/corba/se/impl/orbutil/concurrent/Sync.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ORBUTIL_CONCURRENT_DEBUGMUTEX_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ORBUTIL_CONCURRENT_DEBUGMUTEX_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::impl::orbutil::concurrent { class DebugMutex; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::impl::orbutil::concurrent::DebugMutex>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/impl/orbutil/concurrent/DebugMutex";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::com::sun::corba::se::impl::orbutil::concurrent::Sync>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ORBUTIL_CONCURRENT_DEBUGMUTEX_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ORBUTIL_CONCURRENT_DEBUGMUTEX)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ORBUTIL_CONCURRENT_DEBUGMUTEX

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::impl::orbutil::concurrent::DebugMutex : public jni::object_base<"com/sun/corba/se/impl/orbutil/concurrent/DebugMutex",
	java::lang::Object,
	com::sun::corba::se::impl::orbutil::concurrent::Sync>
{
public:

	static jni::ref<com::sun::corba::se::impl::orbutil::concurrent::DebugMutex> new_object() { return base_::new_object(); }
	void acquire() { return call_method<"acquire", void>(); }
	void release() { return call_method<"release", void>(); }
	jboolean attempt(jlong p1) { return call_method<"attempt", jboolean>(p1); }

protected:

	DebugMutex(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ORBUTIL_CONCURRENT_DEBUGMUTEX
