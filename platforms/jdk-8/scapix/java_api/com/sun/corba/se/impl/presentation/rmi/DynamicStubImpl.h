// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/org/omg/CORBA_2_3/portable/ObjectImpl.h>
#include <scapix/java_api/com/sun/corba/se/spi/presentation/rmi/DynamicStub.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_PRESENTATION_RMI_DYNAMICSTUBIMPL_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_PRESENTATION_RMI_DYNAMICSTUBIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::impl::presentation::rmi { class DynamicStubImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::impl::presentation::rmi::DynamicStubImpl>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/impl/presentation/rmi/DynamicStubImpl";
	using base_classes = std::tuple<scapix::java_api::org::omg::CORBA_2_3::portable::ObjectImpl, scapix::java_api::com::sun::corba::se::spi::presentation::rmi::DynamicStub, scapix::java_api::java::io::Serializable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_PRESENTATION_RMI_DYNAMICSTUBIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_PRESENTATION_RMI_DYNAMICSTUBIMPL)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_PRESENTATION_RMI_DYNAMICSTUBIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/omg/CORBA/ORB.h>
#include <scapix/java_api/org/omg/CORBA/portable/Delegate.h>
#include <scapix/java_api/org/omg/CORBA/portable/OutputStream.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::impl::presentation::rmi::DynamicStubImpl : public jni::object_base<"com/sun/corba/se/impl/presentation/rmi/DynamicStubImpl",
	org::omg::CORBA_2_3::portable::ObjectImpl,
	com::sun::corba::se::spi::presentation::rmi::DynamicStub,
	java::io::Serializable>
{
public:

	void setSelf(jni::ref<com::sun::corba::se::spi::presentation::rmi::DynamicStub> p1) { return call_method<"setSelf", void>(p1); }
	jni::ref<com::sun::corba::se::spi::presentation::rmi::DynamicStub> getSelf() { return call_method<"getSelf", jni::ref<com::sun::corba::se::spi::presentation::rmi::DynamicStub>>(); }
	static jni::ref<com::sun::corba::se::impl::presentation::rmi::DynamicStubImpl> new_object(jni::ref<jni::array<java::lang::String>> p1) { return base_::new_object(p1); }
	void setDelegate(jni::ref<org::omg::CORBA::portable::Delegate> p1) { return call_method<"setDelegate", void>(p1); }
	jni::ref<org::omg::CORBA::portable::Delegate> getDelegate() { return call_method<"getDelegate", jni::ref<org::omg::CORBA::portable::Delegate>>(); }
	jni::ref<org::omg::CORBA::ORB> getORB() { return call_method<"getORB", jni::ref<org::omg::CORBA::ORB>>(); }
	jni::ref<jni::array<java::lang::String>> _ids() { return call_method<"_ids", jni::ref<jni::array<java::lang::String>>>(); }
	jni::ref<jni::array<java::lang::String>> getTypeIds() { return call_method<"getTypeIds", jni::ref<jni::array<java::lang::String>>>(); }
	void connect(jni::ref<org::omg::CORBA::ORB> p1) { return call_method<"connect", void>(p1); }
	jboolean isLocal() { return call_method<"isLocal", jboolean>(); }
	jni::ref<org::omg::CORBA::portable::OutputStream> request(jni::ref<java::lang::String> p1, jboolean p2) { return call_method<"request", jni::ref<org::omg::CORBA::portable::OutputStream>>(p1, p2); }
	jni::ref<java::lang::Object> readResolve() { return call_method<"readResolve", jni::ref<java::lang::Object>>(); }

protected:

	DynamicStubImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_PRESENTATION_RMI_DYNAMICSTUBIMPL
