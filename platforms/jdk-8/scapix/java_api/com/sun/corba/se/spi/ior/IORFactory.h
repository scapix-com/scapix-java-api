// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/com/sun/corba/se/spi/ior/Writeable.h>
#include <scapix/java_api/com/sun/corba/se/spi/ior/MakeImmutable.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_IOR_IORFACTORY_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_IOR_IORFACTORY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::spi::ior { class IORFactory; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::spi::ior::IORFactory>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/spi/ior/IORFactory";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::com::sun::corba::se::spi::ior::Writeable, scapix::java_api::com::sun::corba::se::spi::ior::MakeImmutable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_IOR_IORFACTORY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_IOR_IORFACTORY)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_IOR_IORFACTORY

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/corba/se/spi/ior/IOR.h>
#include <scapix/java_api/com/sun/corba/se/spi/ior/ObjectId.h>
#include <scapix/java_api/com/sun/corba/se/spi/orb/ORB.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::spi::ior::IORFactory : public jni::object_base<"com/sun/corba/se/spi/ior/IORFactory",
	java::lang::Object,
	com::sun::corba::se::spi::ior::Writeable,
	com::sun::corba::se::spi::ior::MakeImmutable>
{
public:

	jni::ref<com::sun::corba::se::spi::ior::IOR> makeIOR(jni::ref<com::sun::corba::se::spi::orb::ORB> p1, jni::ref<java::lang::String> p2, jni::ref<com::sun::corba::se::spi::ior::ObjectId> p3) { return call_method<"makeIOR", jni::ref<com::sun::corba::se::spi::ior::IOR>>(p1, p2, p3); }
	jboolean isEquivalent(jni::ref<com::sun::corba::se::spi::ior::IORFactory> p1) { return call_method<"isEquivalent", jboolean>(p1); }

protected:

	IORFactory(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_IOR_IORFACTORY
