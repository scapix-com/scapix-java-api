// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/corba/se/impl/transport/SocketOrChannelConnectionImpl.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_LEGACY_CONNECTION_SOCKETFACTORYCONNECTIONIMPL_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_LEGACY_CONNECTION_SOCKETFACTORYCONNECTIONIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::impl::legacy::connection { class SocketFactoryConnectionImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::impl::legacy::connection::SocketFactoryConnectionImpl>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/impl/legacy/connection/SocketFactoryConnectionImpl";
	using base_classes = std::tuple<scapix::java_api::com::sun::corba::se::impl::transport::SocketOrChannelConnectionImpl>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_LEGACY_CONNECTION_SOCKETFACTORYCONNECTIONIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_LEGACY_CONNECTION_SOCKETFACTORYCONNECTIONIMPL)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_LEGACY_CONNECTION_SOCKETFACTORYCONNECTIONIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/corba/se/spi/orb/ORB.h>
#include <scapix/java_api/com/sun/corba/se/spi/transport/CorbaContactInfo.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::impl::legacy::connection::SocketFactoryConnectionImpl : public jni::object_base<"com/sun/corba/se/impl/legacy/connection/SocketFactoryConnectionImpl",
	com::sun::corba::se::impl::transport::SocketOrChannelConnectionImpl>
{
public:

	static jni::ref<com::sun::corba::se::impl::legacy::connection::SocketFactoryConnectionImpl> new_object(jni::ref<com::sun::corba::se::spi::orb::ORB> p1, jni::ref<com::sun::corba::se::spi::transport::CorbaContactInfo> p2, jboolean p3, jboolean p4) { return base_::new_object(p1, p2, p3, p4); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	void dprint(jni::ref<java::lang::String> p1) { return call_method<"dprint", void>(p1); }

protected:

	SocketFactoryConnectionImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_LEGACY_CONNECTION_SOCKETFACTORYCONNECTIONIMPL
