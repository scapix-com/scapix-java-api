// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ENCODING_CODESETCONVERSION_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ENCODING_CODESETCONVERSION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::impl::encoding { class CodeSetConversion; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::impl::encoding::CodeSetConversion>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/impl/encoding/CodeSetConversion";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ENCODING_CODESETCONVERSION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ENCODING_CODESETCONVERSION)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ENCODING_CODESETCONVERSION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/corba/se/impl/encoding/CodeSetComponentInfo.h>
#include <scapix/java_api/com/sun/corba/se/impl/encoding/CodeSetComponentInfo_CodeSetContext.h>
#include <scapix/java_api/com/sun/corba/se/impl/encoding/CodeSetConversion_BTCConverter.h>
#include <scapix/java_api/com/sun/corba/se/impl/encoding/CodeSetConversion_CTBConverter.h>
#include <scapix/java_api/com/sun/corba/se/impl/encoding/OSFCodeSetRegistry_Entry.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::impl::encoding::CodeSetConversion : public jni::object_base<"com/sun/corba/se/impl/encoding/CodeSetConversion",
	java::lang::Object>
{
public:

	using CTBConverter = CodeSetConversion_CTBConverter;
	using BTCConverter = CodeSetConversion_BTCConverter;

	jni::ref<com::sun::corba::se::impl::encoding::CodeSetConversion_CTBConverter> getCTBConverter(jni::ref<com::sun::corba::se::impl::encoding::OSFCodeSetRegistry_Entry> p1) { return call_method<"getCTBConverter", jni::ref<com::sun::corba::se::impl::encoding::CodeSetConversion_CTBConverter>>(p1); }
	jni::ref<com::sun::corba::se::impl::encoding::CodeSetConversion_CTBConverter> getCTBConverter(jni::ref<com::sun::corba::se::impl::encoding::OSFCodeSetRegistry_Entry> p1, jboolean p2, jboolean p3) { return call_method<"getCTBConverter", jni::ref<com::sun::corba::se::impl::encoding::CodeSetConversion_CTBConverter>>(p1, p2, p3); }
	jni::ref<com::sun::corba::se::impl::encoding::CodeSetConversion_BTCConverter> getBTCConverter(jni::ref<com::sun::corba::se::impl::encoding::OSFCodeSetRegistry_Entry> p1) { return call_method<"getBTCConverter", jni::ref<com::sun::corba::se::impl::encoding::CodeSetConversion_BTCConverter>>(p1); }
	jni::ref<com::sun::corba::se::impl::encoding::CodeSetConversion_BTCConverter> getBTCConverter(jni::ref<com::sun::corba::se::impl::encoding::OSFCodeSetRegistry_Entry> p1, jboolean p2) { return call_method<"getBTCConverter", jni::ref<com::sun::corba::se::impl::encoding::CodeSetConversion_BTCConverter>>(p1, p2); }
	jni::ref<com::sun::corba::se::impl::encoding::CodeSetComponentInfo_CodeSetContext> negotiate(jni::ref<com::sun::corba::se::impl::encoding::CodeSetComponentInfo> p1, jni::ref<com::sun::corba::se::impl::encoding::CodeSetComponentInfo> p2) { return call_method<"negotiate", jni::ref<com::sun::corba::se::impl::encoding::CodeSetComponentInfo_CodeSetContext>>(p1, p2); }
	static jni::ref<com::sun::corba::se::impl::encoding::CodeSetConversion> impl() { return call_static_method<"impl", jni::ref<com::sun::corba::se::impl::encoding::CodeSetConversion>>(); }

protected:

	CodeSetConversion(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ENCODING_CODESETCONVERSION
