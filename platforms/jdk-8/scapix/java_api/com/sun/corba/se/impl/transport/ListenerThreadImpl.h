// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/com/sun/corba/se/pept/transport/ListenerThread.h>
#include <scapix/java_api/com/sun/corba/se/spi/orbutil/threadpool/Work.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_TRANSPORT_LISTENERTHREADIMPL_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_TRANSPORT_LISTENERTHREADIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::impl::transport { class ListenerThreadImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::impl::transport::ListenerThreadImpl>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/impl/transport/ListenerThreadImpl";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::com::sun::corba::se::pept::transport::ListenerThread, scapix::java_api::com::sun::corba::se::spi::orbutil::threadpool::Work>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_TRANSPORT_LISTENERTHREADIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_TRANSPORT_LISTENERTHREADIMPL)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_TRANSPORT_LISTENERTHREADIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/corba/se/pept/transport/Acceptor.h>
#include <scapix/java_api/com/sun/corba/se/pept/transport/Selector.h>
#include <scapix/java_api/com/sun/corba/se/spi/orb/ORB.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::impl::transport::ListenerThreadImpl : public jni::object_base<"com/sun/corba/se/impl/transport/ListenerThreadImpl",
	java::lang::Object,
	com::sun::corba::se::pept::transport::ListenerThread,
	com::sun::corba::se::spi::orbutil::threadpool::Work>
{
public:

	static jni::ref<com::sun::corba::se::impl::transport::ListenerThreadImpl> new_object(jni::ref<com::sun::corba::se::spi::orb::ORB> p1, jni::ref<com::sun::corba::se::pept::transport::Acceptor> p2, jni::ref<com::sun::corba::se::pept::transport::Selector> p3) { return base_::new_object(p1, p2, p3); }
	jni::ref<com::sun::corba::se::pept::transport::Acceptor> getAcceptor() { return call_method<"getAcceptor", jni::ref<com::sun::corba::se::pept::transport::Acceptor>>(); }
	void close() { return call_method<"close", void>(); }
	void doWork() { return call_method<"doWork", void>(); }
	void setEnqueueTime(jlong p1) { return call_method<"setEnqueueTime", void>(p1); }
	jlong getEnqueueTime() { return call_method<"getEnqueueTime", jlong>(); }
	jni::ref<java::lang::String> getName() { return call_method<"getName", jni::ref<java::lang::String>>(); }

protected:

	ListenerThreadImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_TRANSPORT_LISTENERTHREADIMPL
