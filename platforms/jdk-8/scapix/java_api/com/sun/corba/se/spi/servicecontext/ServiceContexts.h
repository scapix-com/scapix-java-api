// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_SERVICECONTEXT_SERVICECONTEXTS_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_SERVICECONTEXT_SERVICECONTEXTS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::spi::servicecontext { class ServiceContexts; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::spi::servicecontext::ServiceContexts>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/spi/servicecontext/ServiceContexts";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_SERVICECONTEXT_SERVICECONTEXTS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_SERVICECONTEXT_SERVICECONTEXTS)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_SERVICECONTEXT_SERVICECONTEXTS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/corba/se/spi/ior/iiop/GIOPVersion.h>
#include <scapix/java_api/com/sun/corba/se/spi/orb/ORB.h>
#include <scapix/java_api/com/sun/corba/se/spi/servicecontext/ServiceContext.h>
#include <scapix/java_api/java/lang/Integer.h>
#include <scapix/java_api/org/omg/CORBA_2_3/portable/InputStream.h>
#include <scapix/java_api/org/omg/CORBA_2_3/portable/OutputStream.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::spi::servicecontext::ServiceContexts : public jni::object_base<"com/sun/corba/se/spi/servicecontext/ServiceContexts",
	java::lang::Object>
{
public:

	static void writeNullServiceContext(jni::ref<org::omg::CORBA_2_3::portable::OutputStream> p1) { return call_static_method<"writeNullServiceContext", void>(p1); }
	static jni::ref<com::sun::corba::se::spi::servicecontext::ServiceContexts> new_object(jni::ref<com::sun::corba::se::spi::orb::ORB> p1) { return base_::new_object(p1); }
	static jni::ref<com::sun::corba::se::spi::servicecontext::ServiceContexts> new_object(jni::ref<org::omg::CORBA_2_3::portable::InputStream> p1) { return base_::new_object(p1); }
	void addAlignmentPadding() { return call_method<"addAlignmentPadding", void>(); }
	void write(jni::ref<org::omg::CORBA_2_3::portable::OutputStream> p1, jni::ref<com::sun::corba::se::spi::ior::iiop::GIOPVersion> p2) { return call_method<"write", void>(p1, p2); }
	void put(jni::ref<com::sun::corba::se::spi::servicecontext::ServiceContext> p1) { return call_method<"put", void>(p1); }
	void delete_(jint p1) { return call_method<"delete", void>(p1); }
	void delete_(jni::ref<java::lang::Integer> p1) { return call_method<"delete", void>(p1); }
	jni::ref<com::sun::corba::se::spi::servicecontext::ServiceContext> get(jint p1) { return call_method<"get", jni::ref<com::sun::corba::se::spi::servicecontext::ServiceContext>>(p1); }
	jni::ref<com::sun::corba::se::spi::servicecontext::ServiceContext> get(jni::ref<java::lang::Integer> p1) { return call_method<"get", jni::ref<com::sun::corba::se::spi::servicecontext::ServiceContext>>(p1); }

protected:

	ServiceContexts(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_SERVICECONTEXT_SERVICECONTEXTS
