// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_NAMING_COSNAMING_NAMINGUTILS_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_NAMING_COSNAMING_NAMINGUTILS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::impl::naming::cosnaming { class NamingUtils; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::impl::naming::cosnaming::NamingUtils>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/impl/naming/cosnaming/NamingUtils";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_NAMING_COSNAMING_NAMINGUTILS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_NAMING_COSNAMING_NAMINGUTILS)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_NAMING_COSNAMING_NAMINGUTILS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/File.h>
#include <scapix/java_api/java/io/PrintStream.h>
#include <scapix/java_api/java/lang/Exception.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::impl::naming::cosnaming::NamingUtils : public jni::object_base<"com/sun/corba/se/impl/naming/cosnaming/NamingUtils",
	java::lang::Object>
{
public:

	static jboolean debug() { return get_static_field<"debug", jboolean>(); }
	static void debug(jboolean v) { set_static_field<"debug", jboolean>(v); }
	static jni::ref<java::io::PrintStream> debugStream() { return get_static_field<"debugStream", jni::ref<java::io::PrintStream>>(); }
	static void debugStream(jni::ref<java::io::PrintStream> v) { set_static_field<"debugStream", jni::ref<java::io::PrintStream>>(v); }
	static jni::ref<java::io::PrintStream> errStream() { return get_static_field<"errStream", jni::ref<java::io::PrintStream>>(); }
	static void errStream(jni::ref<java::io::PrintStream> v) { set_static_field<"errStream", jni::ref<java::io::PrintStream>>(v); }

	static void dprint(jni::ref<java::lang::String> p1) { return call_static_method<"dprint", void>(p1); }
	static void errprint(jni::ref<java::lang::String> p1) { return call_static_method<"errprint", void>(p1); }
	static void printException(jni::ref<java::lang::Exception> p1) { return call_static_method<"printException", void>(p1); }
	static void makeDebugStream(jni::ref<java::io::File> p1) { return call_static_method<"makeDebugStream", void>(p1); }
	static void makeErrStream(jni::ref<java::io::File> p1) { return call_static_method<"makeErrStream", void>(p1); }

protected:

	NamingUtils(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_NAMING_COSNAMING_NAMINGUTILS
