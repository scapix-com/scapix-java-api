// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/com/sun/corba/se/pept/transport/ByteBufferPool.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_TRANSPORT_BYTEBUFFERPOOLIMPL_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_TRANSPORT_BYTEBUFFERPOOLIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::impl::transport { class ByteBufferPoolImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::impl::transport::ByteBufferPoolImpl>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/impl/transport/ByteBufferPoolImpl";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::com::sun::corba::se::pept::transport::ByteBufferPool>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_TRANSPORT_BYTEBUFFERPOOLIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_TRANSPORT_BYTEBUFFERPOOLIMPL)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_TRANSPORT_BYTEBUFFERPOOLIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/corba/se/spi/orb/ORB.h>
#include <scapix/java_api/java/nio/ByteBuffer.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::impl::transport::ByteBufferPoolImpl : public jni::object_base<"com/sun/corba/se/impl/transport/ByteBufferPoolImpl",
	java::lang::Object,
	com::sun::corba::se::pept::transport::ByteBufferPool>
{
public:

	static jni::ref<com::sun::corba::se::impl::transport::ByteBufferPoolImpl> new_object(jni::ref<com::sun::corba::se::spi::orb::ORB> p1) { return base_::new_object(p1); }
	jni::ref<java::nio::ByteBuffer> getByteBuffer(jint p1) { return call_method<"getByteBuffer", jni::ref<java::nio::ByteBuffer>>(p1); }
	void releaseByteBuffer(jni::ref<java::nio::ByteBuffer> p1) { return call_method<"releaseByteBuffer", void>(p1); }
	jint activeCount() { return call_method<"activeCount", jint>(); }

protected:

	ByteBufferPoolImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_TRANSPORT_BYTEBUFFERPOOLIMPL
