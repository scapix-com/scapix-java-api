// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/com/sun/corba/se/spi/ior/Writeable.h>
#include <scapix/java_api/com/sun/corba/se/spi/ior/MakeImmutable.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_IOR_IOR_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_IOR_IOR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::spi::ior { class IOR; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::spi::ior::IOR>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/spi/ior/IOR";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::util::List, scapix::java_api::com::sun::corba::se::spi::ior::Writeable, scapix::java_api::com::sun::corba::se::spi::ior::MakeImmutable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_IOR_IOR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_IOR_IOR)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_IOR_IOR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/corba/se/spi/ior/IORTemplateList.h>
#include <scapix/java_api/com/sun/corba/se/spi/ior/iiop/IIOPProfile.h>
#include <scapix/java_api/com/sun/corba/se/spi/orb/ORB.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Iterator.h>
#include <scapix/java_api/org/omg/IOP/IOR.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::spi::ior::IOR : public jni::object_base<"com/sun/corba/se/spi/ior/IOR",
	java::lang::Object,
	java::util::List,
	com::sun::corba::se::spi::ior::Writeable,
	com::sun::corba::se::spi::ior::MakeImmutable>
{
public:

	jni::ref<com::sun::corba::se::spi::orb::ORB> getORB() { return call_method<"getORB", jni::ref<com::sun::corba::se::spi::orb::ORB>>(); }
	jni::ref<java::lang::String> getTypeId() { return call_method<"getTypeId", jni::ref<java::lang::String>>(); }
	jni::ref<java::util::Iterator> iteratorById(jint p1) { return call_method<"iteratorById", jni::ref<java::util::Iterator>>(p1); }
	jni::ref<java::lang::String> stringify() { return call_method<"stringify", jni::ref<java::lang::String>>(); }
	jni::ref<org::omg::IOP::IOR> getIOPIOR() { return call_method<"getIOPIOR", jni::ref<org::omg::IOP::IOR>>(); }
	jboolean isNil() { return call_method<"isNil", jboolean>(); }
	jboolean isEquivalent(jni::ref<com::sun::corba::se::spi::ior::IOR> p1) { return call_method<"isEquivalent", jboolean>(p1); }
	jni::ref<com::sun::corba::se::spi::ior::IORTemplateList> getIORTemplates() { return call_method<"getIORTemplates", jni::ref<com::sun::corba::se::spi::ior::IORTemplateList>>(); }
	jni::ref<com::sun::corba::se::spi::ior::iiop::IIOPProfile> getProfile() { return call_method<"getProfile", jni::ref<com::sun::corba::se::spi::ior::iiop::IIOPProfile>>(); }

protected:

	IOR(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_IOR_IOR
