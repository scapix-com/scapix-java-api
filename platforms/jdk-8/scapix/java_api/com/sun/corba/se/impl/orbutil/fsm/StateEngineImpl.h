// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/com/sun/corba/se/spi/orbutil/fsm/StateEngine.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ORBUTIL_FSM_STATEENGINEIMPL_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ORBUTIL_FSM_STATEENGINEIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::impl::orbutil::fsm { class StateEngineImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::impl::orbutil::fsm::StateEngineImpl>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/impl/orbutil/fsm/StateEngineImpl";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::com::sun::corba::se::spi::orbutil::fsm::StateEngine>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ORBUTIL_FSM_STATEENGINEIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ORBUTIL_FSM_STATEENGINEIMPL)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ORBUTIL_FSM_STATEENGINEIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/corba/se/spi/orbutil/fsm/Action.h>
#include <scapix/java_api/com/sun/corba/se/spi/orbutil/fsm/FSM.h>
#include <scapix/java_api/com/sun/corba/se/spi/orbutil/fsm/Guard.h>
#include <scapix/java_api/com/sun/corba/se/spi/orbutil/fsm/Input.h>
#include <scapix/java_api/com/sun/corba/se/spi/orbutil/fsm/State.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::impl::orbutil::fsm::StateEngineImpl : public jni::object_base<"com/sun/corba/se/impl/orbutil/fsm/StateEngineImpl",
	java::lang::Object,
	com::sun::corba::se::spi::orbutil::fsm::StateEngine>
{
public:

	static jni::ref<com::sun::corba::se::impl::orbutil::fsm::StateEngineImpl> new_object() { return base_::new_object(); }
	jni::ref<com::sun::corba::se::spi::orbutil::fsm::StateEngine> add(jni::ref<com::sun::corba::se::spi::orbutil::fsm::State> p1, jni::ref<com::sun::corba::se::spi::orbutil::fsm::Input> p2, jni::ref<com::sun::corba::se::spi::orbutil::fsm::Guard> p3, jni::ref<com::sun::corba::se::spi::orbutil::fsm::Action> p4, jni::ref<com::sun::corba::se::spi::orbutil::fsm::State> p5) { return call_method<"add", jni::ref<com::sun::corba::se::spi::orbutil::fsm::StateEngine>>(p1, p2, p3, p4, p5); }
	jni::ref<com::sun::corba::se::spi::orbutil::fsm::StateEngine> add(jni::ref<com::sun::corba::se::spi::orbutil::fsm::State> p1, jni::ref<com::sun::corba::se::spi::orbutil::fsm::Input> p2, jni::ref<com::sun::corba::se::spi::orbutil::fsm::Action> p3, jni::ref<com::sun::corba::se::spi::orbutil::fsm::State> p4) { return call_method<"add", jni::ref<com::sun::corba::se::spi::orbutil::fsm::StateEngine>>(p1, p2, p3, p4); }
	jni::ref<com::sun::corba::se::spi::orbutil::fsm::StateEngine> setDefault(jni::ref<com::sun::corba::se::spi::orbutil::fsm::State> p1, jni::ref<com::sun::corba::se::spi::orbutil::fsm::Action> p2, jni::ref<com::sun::corba::se::spi::orbutil::fsm::State> p3) { return call_method<"setDefault", jni::ref<com::sun::corba::se::spi::orbutil::fsm::StateEngine>>(p1, p2, p3); }
	jni::ref<com::sun::corba::se::spi::orbutil::fsm::StateEngine> setDefault(jni::ref<com::sun::corba::se::spi::orbutil::fsm::State> p1, jni::ref<com::sun::corba::se::spi::orbutil::fsm::State> p2) { return call_method<"setDefault", jni::ref<com::sun::corba::se::spi::orbutil::fsm::StateEngine>>(p1, p2); }
	jni::ref<com::sun::corba::se::spi::orbutil::fsm::StateEngine> setDefault(jni::ref<com::sun::corba::se::spi::orbutil::fsm::State> p1) { return call_method<"setDefault", jni::ref<com::sun::corba::se::spi::orbutil::fsm::StateEngine>>(p1); }
	void done() { return call_method<"done", void>(); }
	void setDefaultAction(jni::ref<com::sun::corba::se::spi::orbutil::fsm::Action> p1) { return call_method<"setDefaultAction", void>(p1); }
	void doIt(jni::ref<com::sun::corba::se::spi::orbutil::fsm::FSM> p1, jni::ref<com::sun::corba::se::spi::orbutil::fsm::Input> p2, jboolean p3) { return call_method<"doIt", void>(p1, p2, p3); }
	jni::ref<com::sun::corba::se::spi::orbutil::fsm::FSM> makeFSM(jni::ref<com::sun::corba::se::spi::orbutil::fsm::State> p1) { return call_method<"makeFSM", jni::ref<com::sun::corba::se::spi::orbutil::fsm::FSM>>(p1); }

protected:

	StateEngineImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ORBUTIL_FSM_STATEENGINEIMPL
