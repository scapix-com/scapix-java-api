// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_PROTOCOL_REQUESTDISPATCHERREGISTRY_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_PROTOCOL_REQUESTDISPATCHERREGISTRY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::spi::protocol { class RequestDispatcherRegistry; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::spi::protocol::RequestDispatcherRegistry>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/spi/protocol/RequestDispatcherRegistry";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_PROTOCOL_REQUESTDISPATCHERREGISTRY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_PROTOCOL_REQUESTDISPATCHERREGISTRY)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_PROTOCOL_REQUESTDISPATCHERREGISTRY

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/corba/se/pept/protocol/ClientRequestDispatcher.h>
#include <scapix/java_api/com/sun/corba/se/spi/oa/ObjectAdapterFactory.h>
#include <scapix/java_api/com/sun/corba/se/spi/protocol/CorbaServerRequestDispatcher.h>
#include <scapix/java_api/com/sun/corba/se/spi/protocol/LocalClientRequestDispatcherFactory.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Set.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::spi::protocol::RequestDispatcherRegistry : public jni::object_base<"com/sun/corba/se/spi/protocol/RequestDispatcherRegistry",
	java::lang::Object>
{
public:

	void registerClientRequestDispatcher(jni::ref<com::sun::corba::se::pept::protocol::ClientRequestDispatcher> p1, jint p2) { return call_method<"registerClientRequestDispatcher", void>(p1, p2); }
	jni::ref<com::sun::corba::se::pept::protocol::ClientRequestDispatcher> getClientRequestDispatcher(jint p1) { return call_method<"getClientRequestDispatcher", jni::ref<com::sun::corba::se::pept::protocol::ClientRequestDispatcher>>(p1); }
	void registerLocalClientRequestDispatcherFactory(jni::ref<com::sun::corba::se::spi::protocol::LocalClientRequestDispatcherFactory> p1, jint p2) { return call_method<"registerLocalClientRequestDispatcherFactory", void>(p1, p2); }
	jni::ref<com::sun::corba::se::spi::protocol::LocalClientRequestDispatcherFactory> getLocalClientRequestDispatcherFactory(jint p1) { return call_method<"getLocalClientRequestDispatcherFactory", jni::ref<com::sun::corba::se::spi::protocol::LocalClientRequestDispatcherFactory>>(p1); }
	void registerServerRequestDispatcher(jni::ref<com::sun::corba::se::spi::protocol::CorbaServerRequestDispatcher> p1, jint p2) { return call_method<"registerServerRequestDispatcher", void>(p1, p2); }
	jni::ref<com::sun::corba::se::spi::protocol::CorbaServerRequestDispatcher> getServerRequestDispatcher(jint p1) { return call_method<"getServerRequestDispatcher", jni::ref<com::sun::corba::se::spi::protocol::CorbaServerRequestDispatcher>>(p1); }
	void registerServerRequestDispatcher(jni::ref<com::sun::corba::se::spi::protocol::CorbaServerRequestDispatcher> p1, jni::ref<java::lang::String> p2) { return call_method<"registerServerRequestDispatcher", void>(p1, p2); }
	jni::ref<com::sun::corba::se::spi::protocol::CorbaServerRequestDispatcher> getServerRequestDispatcher(jni::ref<java::lang::String> p1) { return call_method<"getServerRequestDispatcher", jni::ref<com::sun::corba::se::spi::protocol::CorbaServerRequestDispatcher>>(p1); }
	void registerObjectAdapterFactory(jni::ref<com::sun::corba::se::spi::oa::ObjectAdapterFactory> p1, jint p2) { return call_method<"registerObjectAdapterFactory", void>(p1, p2); }
	jni::ref<com::sun::corba::se::spi::oa::ObjectAdapterFactory> getObjectAdapterFactory(jint p1) { return call_method<"getObjectAdapterFactory", jni::ref<com::sun::corba::se::spi::oa::ObjectAdapterFactory>>(p1); }
	jni::ref<java::util::Set> getObjectAdapterFactories() { return call_method<"getObjectAdapterFactories", jni::ref<java::util::Set>>(); }

protected:

	RequestDispatcherRegistry(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_SPI_PROTOCOL_REQUESTDISPATCHERREGISTRY
