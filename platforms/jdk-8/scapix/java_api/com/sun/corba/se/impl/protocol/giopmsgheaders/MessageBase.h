// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/com/sun/corba/se/impl/protocol/giopmsgheaders/Message.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_PROTOCOL_GIOPMSGHEADERS_MESSAGEBASE_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_PROTOCOL_GIOPMSGHEADERS_MESSAGEBASE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::impl::protocol::giopmsgheaders { class MessageBase; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::impl::protocol::giopmsgheaders::MessageBase>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/impl/protocol/giopmsgheaders/MessageBase";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::com::sun::corba::se::impl::protocol::giopmsgheaders::Message>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_PROTOCOL_GIOPMSGHEADERS_MESSAGEBASE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_PROTOCOL_GIOPMSGHEADERS_MESSAGEBASE)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_PROTOCOL_GIOPMSGHEADERS_MESSAGEBASE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/corba/se/impl/protocol/giopmsgheaders/CancelRequestMessage.h>
#include <scapix/java_api/com/sun/corba/se/impl/protocol/giopmsgheaders/FragmentMessage.h>
#include <scapix/java_api/com/sun/corba/se/impl/protocol/giopmsgheaders/LocateReplyMessage.h>
#include <scapix/java_api/com/sun/corba/se/impl/protocol/giopmsgheaders/LocateRequestMessage.h>
#include <scapix/java_api/com/sun/corba/se/impl/protocol/giopmsgheaders/MessageHandler.h>
#include <scapix/java_api/com/sun/corba/se/impl/protocol/giopmsgheaders/ReplyMessage.h>
#include <scapix/java_api/com/sun/corba/se/impl/protocol/giopmsgheaders/RequestMessage.h>
#include <scapix/java_api/com/sun/corba/se/spi/ior/IOR.h>
#include <scapix/java_api/com/sun/corba/se/spi/ior/iiop/GIOPVersion.h>
#include <scapix/java_api/com/sun/corba/se/spi/orb/ORB.h>
#include <scapix/java_api/com/sun/corba/se/spi/servicecontext/ServiceContexts.h>
#include <scapix/java_api/com/sun/corba/se/spi/transport/CorbaConnection.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/nio/ByteBuffer.h>
#include <scapix/java_api/org/omg/CORBA/Principal.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::impl::protocol::giopmsgheaders::MessageBase : public jni::object_base<"com/sun/corba/se/impl/protocol/giopmsgheaders/MessageBase",
	java::lang::Object,
	com::sun::corba::se::impl::protocol::giopmsgheaders::Message>
{
public:

	jni::ref<jni::array<jbyte>> giopHeader() { return get_field<"giopHeader", jni::ref<jni::array<jbyte>>>(); }
	void giopHeader(jni::ref<jni::array<jbyte>> v) { set_field<"giopHeader", jni::ref<jni::array<jbyte>>>(v); }

	static jni::ref<com::sun::corba::se::impl::protocol::giopmsgheaders::MessageBase> new_object() { return base_::new_object(); }
	static jni::ref<java::lang::String> typeToString(jint p1) { return call_static_method<"typeToString", jni::ref<java::lang::String>>(p1); }
	static jni::ref<java::lang::String> typeToString(jbyte p1) { return call_static_method<"typeToString", jni::ref<java::lang::String>>(p1); }
	static jni::ref<com::sun::corba::se::impl::protocol::giopmsgheaders::MessageBase> readGIOPMessage(jni::ref<com::sun::corba::se::spi::orb::ORB> p1, jni::ref<com::sun::corba::se::spi::transport::CorbaConnection> p2) { return call_static_method<"readGIOPMessage", jni::ref<com::sun::corba::se::impl::protocol::giopmsgheaders::MessageBase>>(p1, p2); }
	static jni::ref<com::sun::corba::se::impl::protocol::giopmsgheaders::MessageBase> readGIOPHeader(jni::ref<com::sun::corba::se::spi::orb::ORB> p1, jni::ref<com::sun::corba::se::spi::transport::CorbaConnection> p2) { return call_static_method<"readGIOPHeader", jni::ref<com::sun::corba::se::impl::protocol::giopmsgheaders::MessageBase>>(p1, p2); }
	static jni::ref<com::sun::corba::se::impl::protocol::giopmsgheaders::Message> readGIOPBody(jni::ref<com::sun::corba::se::spi::orb::ORB> p1, jni::ref<com::sun::corba::se::spi::transport::CorbaConnection> p2, jni::ref<com::sun::corba::se::impl::protocol::giopmsgheaders::Message> p3) { return call_static_method<"readGIOPBody", jni::ref<com::sun::corba::se::impl::protocol::giopmsgheaders::Message>>(p1, p2, p3); }
	static jni::ref<com::sun::corba::se::impl::protocol::giopmsgheaders::RequestMessage> createRequest(jni::ref<com::sun::corba::se::spi::orb::ORB> p1, jni::ref<com::sun::corba::se::spi::ior::iiop::GIOPVersion> p2, jbyte p3, jint p4, jboolean p5, jni::ref<com::sun::corba::se::spi::ior::IOR> p6, jshort p7, jni::ref<java::lang::String> p8, jni::ref<com::sun::corba::se::spi::servicecontext::ServiceContexts> p9, jni::ref<org::omg::CORBA::Principal> p10) { return call_static_method<"createRequest", jni::ref<com::sun::corba::se::impl::protocol::giopmsgheaders::RequestMessage>>(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10); }
	static jni::ref<com::sun::corba::se::impl::protocol::giopmsgheaders::ReplyMessage> createReply(jni::ref<com::sun::corba::se::spi::orb::ORB> p1, jni::ref<com::sun::corba::se::spi::ior::iiop::GIOPVersion> p2, jbyte p3, jint p4, jint p5, jni::ref<com::sun::corba::se::spi::servicecontext::ServiceContexts> p6, jni::ref<com::sun::corba::se::spi::ior::IOR> p7) { return call_static_method<"createReply", jni::ref<com::sun::corba::se::impl::protocol::giopmsgheaders::ReplyMessage>>(p1, p2, p3, p4, p5, p6, p7); }
	static jni::ref<com::sun::corba::se::impl::protocol::giopmsgheaders::LocateRequestMessage> createLocateRequest(jni::ref<com::sun::corba::se::spi::orb::ORB> p1, jni::ref<com::sun::corba::se::spi::ior::iiop::GIOPVersion> p2, jbyte p3, jint p4, jni::ref<jni::array<jbyte>> p5) { return call_static_method<"createLocateRequest", jni::ref<com::sun::corba::se::impl::protocol::giopmsgheaders::LocateRequestMessage>>(p1, p2, p3, p4, p5); }
	static jni::ref<com::sun::corba::se::impl::protocol::giopmsgheaders::LocateReplyMessage> createLocateReply(jni::ref<com::sun::corba::se::spi::orb::ORB> p1, jni::ref<com::sun::corba::se::spi::ior::iiop::GIOPVersion> p2, jbyte p3, jint p4, jint p5, jni::ref<com::sun::corba::se::spi::ior::IOR> p6) { return call_static_method<"createLocateReply", jni::ref<com::sun::corba::se::impl::protocol::giopmsgheaders::LocateReplyMessage>>(p1, p2, p3, p4, p5, p6); }
	static jni::ref<com::sun::corba::se::impl::protocol::giopmsgheaders::CancelRequestMessage> createCancelRequest(jni::ref<com::sun::corba::se::spi::ior::iiop::GIOPVersion> p1, jint p2) { return call_static_method<"createCancelRequest", jni::ref<com::sun::corba::se::impl::protocol::giopmsgheaders::CancelRequestMessage>>(p1, p2); }
	static jni::ref<com::sun::corba::se::impl::protocol::giopmsgheaders::Message> createCloseConnection(jni::ref<com::sun::corba::se::spi::ior::iiop::GIOPVersion> p1) { return call_static_method<"createCloseConnection", jni::ref<com::sun::corba::se::impl::protocol::giopmsgheaders::Message>>(p1); }
	static jni::ref<com::sun::corba::se::impl::protocol::giopmsgheaders::Message> createMessageError(jni::ref<com::sun::corba::se::spi::ior::iiop::GIOPVersion> p1) { return call_static_method<"createMessageError", jni::ref<com::sun::corba::se::impl::protocol::giopmsgheaders::Message>>(p1); }
	static jni::ref<com::sun::corba::se::impl::protocol::giopmsgheaders::FragmentMessage> createFragmentMessage(jni::ref<com::sun::corba::se::spi::ior::iiop::GIOPVersion> p1) { return call_static_method<"createFragmentMessage", jni::ref<com::sun::corba::se::impl::protocol::giopmsgheaders::FragmentMessage>>(p1); }
	static jint getRequestId(jni::ref<com::sun::corba::se::impl::protocol::giopmsgheaders::Message> p1) { return call_static_method<"getRequestId", jint>(p1); }
	static void setFlag(jni::ref<java::nio::ByteBuffer> p1, jint p2) { return call_static_method<"setFlag", void>(p1, p2); }
	static void clearFlag(jni::ref<jni::array<jbyte>> p1, jint p2) { return call_static_method<"clearFlag", void>(p1, p2); }
	void callback(jni::ref<com::sun::corba::se::impl::protocol::giopmsgheaders::MessageHandler> p1) { return call_method<"callback", void>(p1); }
	jni::ref<java::nio::ByteBuffer> getByteBuffer() { return call_method<"getByteBuffer", jni::ref<java::nio::ByteBuffer>>(); }
	void setByteBuffer(jni::ref<java::nio::ByteBuffer> p1) { return call_method<"setByteBuffer", void>(p1); }
	jint getThreadPoolToUse() { return call_method<"getThreadPoolToUse", jint>(); }
	jbyte getEncodingVersion() { return call_method<"getEncodingVersion", jbyte>(); }
	void setEncodingVersion(jbyte p1) { return call_method<"setEncodingVersion", void>(p1); }

protected:

	MessageBase(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_PROTOCOL_GIOPMSGHEADERS_MESSAGEBASE
