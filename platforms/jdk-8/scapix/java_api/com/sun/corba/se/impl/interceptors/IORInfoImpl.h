// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/org/omg/CORBA/LocalObject.h>
#include <scapix/java_api/org/omg/PortableInterceptor/IORInfo.h>
#include <scapix/java_api/com/sun/corba/se/spi/legacy/interceptor/IORInfoExt.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_INTERCEPTORS_IORINFOIMPL_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_INTERCEPTORS_IORINFOIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::impl::interceptors { class IORInfoImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::impl::interceptors::IORInfoImpl>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/impl/interceptors/IORInfoImpl";
	using base_classes = std::tuple<scapix::java_api::org::omg::CORBA::LocalObject, scapix::java_api::org::omg::PortableInterceptor::IORInfo, scapix::java_api::com::sun::corba::se::spi::legacy::interceptor::IORInfoExt>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_INTERCEPTORS_IORINFOIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_INTERCEPTORS_IORINFOIMPL)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_INTERCEPTORS_IORINFOIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/corba/se/spi/oa/ObjectAdapter.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/omg/CORBA/Policy.h>
#include <scapix/java_api/org/omg/IOP/TaggedComponent.h>
#include <scapix/java_api/org/omg/PortableInterceptor/ObjectReferenceFactory.h>
#include <scapix/java_api/org/omg/PortableInterceptor/ObjectReferenceTemplate.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::impl::interceptors::IORInfoImpl : public jni::object_base<"com/sun/corba/se/impl/interceptors/IORInfoImpl",
	org::omg::CORBA::LocalObject,
	org::omg::PortableInterceptor::IORInfo,
	com::sun::corba::se::spi::legacy::interceptor::IORInfoExt>
{
public:

	jni::ref<org::omg::CORBA::Policy> get_effective_policy(jint p1) { return call_method<"get_effective_policy", jni::ref<org::omg::CORBA::Policy>>(p1); }
	void add_ior_component(jni::ref<org::omg::IOP::TaggedComponent> p1) { return call_method<"add_ior_component", void>(p1); }
	void add_ior_component_to_profile(jni::ref<org::omg::IOP::TaggedComponent> p1, jint p2) { return call_method<"add_ior_component_to_profile", void>(p1, p2); }
	jint getServerPort(jni::ref<java::lang::String> p1) { return call_method<"getServerPort", jint>(p1); }
	jni::ref<com::sun::corba::se::spi::oa::ObjectAdapter> getObjectAdapter() { return call_method<"getObjectAdapter", jni::ref<com::sun::corba::se::spi::oa::ObjectAdapter>>(); }
	jint manager_id() { return call_method<"manager_id", jint>(); }
	jshort state() { return call_method<"state", jshort>(); }
	jni::ref<org::omg::PortableInterceptor::ObjectReferenceTemplate> adapter_template() { return call_method<"adapter_template", jni::ref<org::omg::PortableInterceptor::ObjectReferenceTemplate>>(); }
	jni::ref<org::omg::PortableInterceptor::ObjectReferenceFactory> current_factory() { return call_method<"current_factory", jni::ref<org::omg::PortableInterceptor::ObjectReferenceFactory>>(); }
	void current_factory(jni::ref<org::omg::PortableInterceptor::ObjectReferenceFactory> p1) { return call_method<"current_factory", void>(p1); }

protected:

	IORInfoImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_INTERCEPTORS_IORINFOIMPL
