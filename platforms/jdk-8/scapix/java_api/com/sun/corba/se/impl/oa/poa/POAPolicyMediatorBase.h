// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/com/sun/corba/se/impl/oa/poa/POAPolicyMediator.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_OA_POA_POAPOLICYMEDIATORBASE_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_OA_POA_POAPOLICYMEDIATORBASE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::impl::oa::poa { class POAPolicyMediatorBase; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::impl::oa::poa::POAPolicyMediatorBase>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/impl/oa/poa/POAPolicyMediatorBase";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::com::sun::corba::se::impl::oa::poa::POAPolicyMediator>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_OA_POA_POAPOLICYMEDIATORBASE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_OA_POA_POAPOLICYMEDIATORBASE)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_OA_POA_POAPOLICYMEDIATORBASE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/corba/se/impl/oa/poa/Policies.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::impl::oa::poa::POAPolicyMediatorBase : public jni::object_base<"com/sun/corba/se/impl/oa/poa/POAPolicyMediatorBase",
	java::lang::Object,
	com::sun::corba::se::impl::oa::poa::POAPolicyMediator>
{
public:

	jni::ref<com::sun::corba::se::impl::oa::poa::Policies> getPolicies() { return call_method<"getPolicies", jni::ref<com::sun::corba::se::impl::oa::poa::Policies>>(); }
	jint getScid() { return call_method<"getScid", jint>(); }
	jint getServerId() { return call_method<"getServerId", jint>(); }
	jni::ref<java::lang::Object> getInvocationServant(jni::ref<jni::array<jbyte>> p1, jni::ref<java::lang::String> p2) { return call_method<"getInvocationServant", jni::ref<java::lang::Object>>(p1, p2); }
	jni::ref<jni::array<jbyte>> newSystemId() { return call_method<"newSystemId", jni::ref<jni::array<jbyte>>>(); }

protected:

	POAPolicyMediatorBase(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_OA_POA_POAPOLICYMEDIATORBASE
