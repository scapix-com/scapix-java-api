// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/org/omg/CORBA/ServerRequest.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_CORBA_SERVERREQUESTIMPL_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_CORBA_SERVERREQUESTIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::impl::corba { class ServerRequestImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::impl::corba::ServerRequestImpl>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/impl/corba/ServerRequestImpl";
	using base_classes = std::tuple<scapix::java_api::org::omg::CORBA::ServerRequest>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_CORBA_SERVERREQUESTIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_CORBA_SERVERREQUESTIMPL)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_CORBA_SERVERREQUESTIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/corba/se/spi/orb/ORB.h>
#include <scapix/java_api/com/sun/corba/se/spi/protocol/CorbaMessageMediator.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/omg/CORBA/Any.h>
#include <scapix/java_api/org/omg/CORBA/Context.h>
#include <scapix/java_api/org/omg/CORBA/NVList.h>
#include <scapix/java_api/org/omg/CORBA/portable/OutputStream.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::impl::corba::ServerRequestImpl : public jni::object_base<"com/sun/corba/se/impl/corba/ServerRequestImpl",
	org::omg::CORBA::ServerRequest>
{
public:

	static jni::ref<com::sun::corba::se::impl::corba::ServerRequestImpl> new_object(jni::ref<com::sun::corba::se::spi::protocol::CorbaMessageMediator> p1, jni::ref<com::sun::corba::se::spi::orb::ORB> p2) { return base_::new_object(p1, p2); }
	jni::ref<java::lang::String> operation() { return call_method<"operation", jni::ref<java::lang::String>>(); }
	void arguments(jni::ref<org::omg::CORBA::NVList> p1) { return call_method<"arguments", void>(p1); }
	void set_result(jni::ref<org::omg::CORBA::Any> p1) { return call_method<"set_result", void>(p1); }
	void set_exception(jni::ref<org::omg::CORBA::Any> p1) { return call_method<"set_exception", void>(p1); }
	jni::ref<org::omg::CORBA::Any> checkResultCalled() { return call_method<"checkResultCalled", jni::ref<org::omg::CORBA::Any>>(); }
	void marshalReplyParams(jni::ref<org::omg::CORBA::portable::OutputStream> p1) { return call_method<"marshalReplyParams", void>(p1); }
	jni::ref<org::omg::CORBA::Context> ctx() { return call_method<"ctx", jni::ref<org::omg::CORBA::Context>>(); }

protected:

	ServerRequestImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_CORBA_SERVERREQUESTIMPL
