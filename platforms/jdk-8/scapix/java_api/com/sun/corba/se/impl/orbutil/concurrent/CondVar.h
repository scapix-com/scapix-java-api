// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ORBUTIL_CONCURRENT_CONDVAR_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ORBUTIL_CONCURRENT_CONDVAR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::impl::orbutil::concurrent { class CondVar; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::impl::orbutil::concurrent::CondVar>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/impl/orbutil/concurrent/CondVar";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ORBUTIL_CONCURRENT_CONDVAR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ORBUTIL_CONCURRENT_CONDVAR)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ORBUTIL_CONCURRENT_CONDVAR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/corba/se/impl/orbutil/concurrent/Sync.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::impl::orbutil::concurrent::CondVar : public jni::object_base<"com/sun/corba/se/impl/orbutil/concurrent/CondVar",
	java::lang::Object>
{
public:

	static jni::ref<com::sun::corba::se::impl::orbutil::concurrent::CondVar> new_object(jni::ref<com::sun::corba::se::impl::orbutil::concurrent::Sync> p1, jboolean p2) { return base_::new_object(p1, p2); }
	static jni::ref<com::sun::corba::se::impl::orbutil::concurrent::CondVar> new_object(jni::ref<com::sun::corba::se::impl::orbutil::concurrent::Sync> p1) { return base_::new_object(p1); }
	void await() { return call_method<"await", void>(); }
	jboolean timedwait(jlong p1) { return call_method<"timedwait", jboolean>(p1); }
	void signal() { return call_method<"signal", void>(); }
	void broadcast() { return call_method<"broadcast", void>(); }

protected:

	CondVar(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_ORBUTIL_CONCURRENT_CONDVAR
