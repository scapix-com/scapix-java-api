// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/corba/se/impl/interceptors/RequestInfoImpl.h>
#include <scapix/java_api/org/omg/PortableInterceptor/ClientRequestInfo.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_INTERCEPTORS_CLIENTREQUESTINFOIMPL_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_INTERCEPTORS_CLIENTREQUESTINFOIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::impl::interceptors { class ClientRequestInfoImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::impl::interceptors::ClientRequestInfoImpl>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/impl/interceptors/ClientRequestInfoImpl";
	using base_classes = std::tuple<scapix::java_api::com::sun::corba::se::impl::interceptors::RequestInfoImpl, scapix::java_api::org::omg::PortableInterceptor::ClientRequestInfo>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_INTERCEPTORS_CLIENTREQUESTINFOIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_INTERCEPTORS_CLIENTREQUESTINFOIMPL)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_INTERCEPTORS_CLIENTREQUESTINFOIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/corba/se/spi/legacy/connection/Connection.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/omg/CORBA/Any.h>
#include <scapix/java_api/org/omg/CORBA/Object.h>
#include <scapix/java_api/org/omg/CORBA/Policy.h>
#include <scapix/java_api/org/omg/CORBA/TypeCode.h>
#include <scapix/java_api/org/omg/Dynamic/Parameter.h>
#include <scapix/java_api/org/omg/IOP/ServiceContext.h>
#include <scapix/java_api/org/omg/IOP/TaggedComponent.h>
#include <scapix/java_api/org/omg/IOP/TaggedProfile.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::impl::interceptors::ClientRequestInfoImpl : public jni::object_base<"com/sun/corba/se/impl/interceptors/ClientRequestInfoImpl",
	com::sun::corba::se::impl::interceptors::RequestInfoImpl,
	org::omg::PortableInterceptor::ClientRequestInfo>
{
public:

	jni::ref<org::omg::CORBA::Object> target() { return call_method<"target", jni::ref<org::omg::CORBA::Object>>(); }
	jni::ref<org::omg::CORBA::Object> effective_target() { return call_method<"effective_target", jni::ref<org::omg::CORBA::Object>>(); }
	jni::ref<org::omg::IOP::TaggedProfile> effective_profile() { return call_method<"effective_profile", jni::ref<org::omg::IOP::TaggedProfile>>(); }
	jni::ref<org::omg::CORBA::Any> received_exception() { return call_method<"received_exception", jni::ref<org::omg::CORBA::Any>>(); }
	jni::ref<java::lang::String> received_exception_id() { return call_method<"received_exception_id", jni::ref<java::lang::String>>(); }
	jni::ref<org::omg::IOP::TaggedComponent> get_effective_component(jint p1) { return call_method<"get_effective_component", jni::ref<org::omg::IOP::TaggedComponent>>(p1); }
	jni::ref<jni::array<org::omg::IOP::TaggedComponent>> get_effective_components(jint p1) { return call_method<"get_effective_components", jni::ref<jni::array<org::omg::IOP::TaggedComponent>>>(p1); }
	jni::ref<org::omg::CORBA::Policy> get_request_policy(jint p1) { return call_method<"get_request_policy", jni::ref<org::omg::CORBA::Policy>>(p1); }
	void add_request_service_context(jni::ref<org::omg::IOP::ServiceContext> p1, jboolean p2) { return call_method<"add_request_service_context", void>(p1, p2); }
	jint request_id() { return call_method<"request_id", jint>(); }
	jni::ref<java::lang::String> operation() { return call_method<"operation", jni::ref<java::lang::String>>(); }
	jni::ref<jni::array<org::omg::Dynamic::Parameter>> arguments() { return call_method<"arguments", jni::ref<jni::array<org::omg::Dynamic::Parameter>>>(); }
	jni::ref<jni::array<org::omg::CORBA::TypeCode>> exceptions() { return call_method<"exceptions", jni::ref<jni::array<org::omg::CORBA::TypeCode>>>(); }
	jni::ref<jni::array<java::lang::String>> contexts() { return call_method<"contexts", jni::ref<jni::array<java::lang::String>>>(); }
	jni::ref<jni::array<java::lang::String>> operation_context() { return call_method<"operation_context", jni::ref<jni::array<java::lang::String>>>(); }
	jni::ref<org::omg::CORBA::Any> result() { return call_method<"result", jni::ref<org::omg::CORBA::Any>>(); }
	jboolean response_expected() { return call_method<"response_expected", jboolean>(); }
	jni::ref<org::omg::CORBA::Object> forward_reference() { return call_method<"forward_reference", jni::ref<org::omg::CORBA::Object>>(); }
	jni::ref<org::omg::IOP::ServiceContext> get_request_service_context(jint p1) { return call_method<"get_request_service_context", jni::ref<org::omg::IOP::ServiceContext>>(p1); }
	jni::ref<org::omg::IOP::ServiceContext> get_reply_service_context(jint p1) { return call_method<"get_reply_service_context", jni::ref<org::omg::IOP::ServiceContext>>(p1); }
	jni::ref<com::sun::corba::se::spi::legacy::connection::Connection> connection() { return call_method<"connection", jni::ref<com::sun::corba::se::spi::legacy::connection::Connection>>(); }

protected:

	ClientRequestInfoImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_INTERCEPTORS_CLIENTREQUESTINFOIMPL
