// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/com/sun/corba/se/spi/monitoring/MonitoredObject.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_MONITORING_MONITOREDOBJECTIMPL_FWD
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_MONITORING_MONITOREDOBJECTIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::corba::se::impl::monitoring { class MonitoredObjectImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::corba::se::impl::monitoring::MonitoredObjectImpl>
{
	static constexpr fixed_string class_name = "com/sun/corba/se/impl/monitoring/MonitoredObjectImpl";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::com::sun::corba::se::spi::monitoring::MonitoredObject>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_MONITORING_MONITOREDOBJECTIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_MONITORING_MONITOREDOBJECTIMPL)
#define SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_MONITORING_MONITOREDOBJECTIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/corba/se/spi/monitoring/MonitoredAttribute.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Collection.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::corba::se::impl::monitoring::MonitoredObjectImpl : public jni::object_base<"com/sun/corba/se/impl/monitoring/MonitoredObjectImpl",
	java::lang::Object,
	com::sun::corba::se::spi::monitoring::MonitoredObject>
{
public:

	jni::ref<com::sun::corba::se::spi::monitoring::MonitoredObject> getChild(jni::ref<java::lang::String> p1) { return call_method<"getChild", jni::ref<com::sun::corba::se::spi::monitoring::MonitoredObject>>(p1); }
	jni::ref<java::util::Collection> getChildren() { return call_method<"getChildren", jni::ref<java::util::Collection>>(); }
	void addChild(jni::ref<com::sun::corba::se::spi::monitoring::MonitoredObject> p1) { return call_method<"addChild", void>(p1); }
	void removeChild(jni::ref<java::lang::String> p1) { return call_method<"removeChild", void>(p1); }
	jni::ref<com::sun::corba::se::spi::monitoring::MonitoredObject> getParent() { return call_method<"getParent", jni::ref<com::sun::corba::se::spi::monitoring::MonitoredObject>>(); }
	void setParent(jni::ref<com::sun::corba::se::spi::monitoring::MonitoredObject> p1) { return call_method<"setParent", void>(p1); }
	jni::ref<com::sun::corba::se::spi::monitoring::MonitoredAttribute> getAttribute(jni::ref<java::lang::String> p1) { return call_method<"getAttribute", jni::ref<com::sun::corba::se::spi::monitoring::MonitoredAttribute>>(p1); }
	jni::ref<java::util::Collection> getAttributes() { return call_method<"getAttributes", jni::ref<java::util::Collection>>(); }
	void addAttribute(jni::ref<com::sun::corba::se::spi::monitoring::MonitoredAttribute> p1) { return call_method<"addAttribute", void>(p1); }
	void removeAttribute(jni::ref<java::lang::String> p1) { return call_method<"removeAttribute", void>(p1); }
	void clearState() { return call_method<"clearState", void>(); }
	jni::ref<java::lang::String> getName() { return call_method<"getName", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getDescription() { return call_method<"getDescription", jni::ref<java::lang::String>>(); }

protected:

	MonitoredObjectImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CORBA_SE_IMPL_MONITORING_MONITOREDOBJECTIMPL
