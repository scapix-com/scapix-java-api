// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/org/omg/CORBA/portable/IDLEntity.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_OMG_CORBA_VALUEDEFPACKAGE_FULLVALUEDESCRIPTION_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_OMG_CORBA_VALUEDEFPACKAGE_FULLVALUEDESCRIPTION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::omg::CORBA::ValueDefPackage { class FullValueDescription; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::omg::CORBA::ValueDefPackage::FullValueDescription>
{
	static constexpr fixed_string class_name = "com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescription";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::org::omg::CORBA::portable::IDLEntity>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_OMG_CORBA_VALUEDEFPACKAGE_FULLVALUEDESCRIPTION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_OMG_CORBA_VALUEDEFPACKAGE_FULLVALUEDESCRIPTION)
#define SCAPIX_JAVA_API_COM_SUN_ORG_OMG_CORBA_VALUEDEFPACKAGE_FULLVALUEDESCRIPTION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/omg/CORBA/AttributeDescription.h>
#include <scapix/java_api/com/sun/org/omg/CORBA/Initializer.h>
#include <scapix/java_api/com/sun/org/omg/CORBA/OperationDescription.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/omg/CORBA/TypeCode.h>
#include <scapix/java_api/org/omg/CORBA/ValueMember.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::omg::CORBA::ValueDefPackage::FullValueDescription : public jni::object_base<"com/sun/org/omg/CORBA/ValueDefPackage/FullValueDescription",
	java::lang::Object,
	org::omg::CORBA::portable::IDLEntity>
{
public:

	jni::ref<java::lang::String> name() { return get_field<"name", jni::ref<java::lang::String>>(); }
	void name(jni::ref<java::lang::String> v) { set_field<"name", jni::ref<java::lang::String>>(v); }
	jni::ref<java::lang::String> id() { return get_field<"id", jni::ref<java::lang::String>>(); }
	void id(jni::ref<java::lang::String> v) { set_field<"id", jni::ref<java::lang::String>>(v); }
	jboolean is_abstract() { return get_field<"is_abstract", jboolean>(); }
	void is_abstract(jboolean v) { set_field<"is_abstract", jboolean>(v); }
	jboolean is_custom() { return get_field<"is_custom", jboolean>(); }
	void is_custom(jboolean v) { set_field<"is_custom", jboolean>(v); }
	jni::ref<java::lang::String> defined_in() { return get_field<"defined_in", jni::ref<java::lang::String>>(); }
	void defined_in(jni::ref<java::lang::String> v) { set_field<"defined_in", jni::ref<java::lang::String>>(v); }
	jni::ref<java::lang::String> version() { return get_field<"version", jni::ref<java::lang::String>>(); }
	void version(jni::ref<java::lang::String> v) { set_field<"version", jni::ref<java::lang::String>>(v); }
	jni::ref<jni::array<com::sun::org::omg::CORBA::OperationDescription>> operations() { return get_field<"operations", jni::ref<jni::array<com::sun::org::omg::CORBA::OperationDescription>>>(); }
	void operations(jni::ref<jni::array<com::sun::org::omg::CORBA::OperationDescription>> v) { set_field<"operations", jni::ref<jni::array<com::sun::org::omg::CORBA::OperationDescription>>>(v); }
	jni::ref<jni::array<com::sun::org::omg::CORBA::AttributeDescription>> attributes() { return get_field<"attributes", jni::ref<jni::array<com::sun::org::omg::CORBA::AttributeDescription>>>(); }
	void attributes(jni::ref<jni::array<com::sun::org::omg::CORBA::AttributeDescription>> v) { set_field<"attributes", jni::ref<jni::array<com::sun::org::omg::CORBA::AttributeDescription>>>(v); }
	jni::ref<jni::array<org::omg::CORBA::ValueMember>> members() { return get_field<"members", jni::ref<jni::array<org::omg::CORBA::ValueMember>>>(); }
	void members(jni::ref<jni::array<org::omg::CORBA::ValueMember>> v) { set_field<"members", jni::ref<jni::array<org::omg::CORBA::ValueMember>>>(v); }
	jni::ref<jni::array<com::sun::org::omg::CORBA::Initializer>> initializers() { return get_field<"initializers", jni::ref<jni::array<com::sun::org::omg::CORBA::Initializer>>>(); }
	void initializers(jni::ref<jni::array<com::sun::org::omg::CORBA::Initializer>> v) { set_field<"initializers", jni::ref<jni::array<com::sun::org::omg::CORBA::Initializer>>>(v); }
	jni::ref<jni::array<java::lang::String>> supported_interfaces() { return get_field<"supported_interfaces", jni::ref<jni::array<java::lang::String>>>(); }
	void supported_interfaces(jni::ref<jni::array<java::lang::String>> v) { set_field<"supported_interfaces", jni::ref<jni::array<java::lang::String>>>(v); }
	jni::ref<jni::array<java::lang::String>> abstract_base_values() { return get_field<"abstract_base_values", jni::ref<jni::array<java::lang::String>>>(); }
	void abstract_base_values(jni::ref<jni::array<java::lang::String>> v) { set_field<"abstract_base_values", jni::ref<jni::array<java::lang::String>>>(v); }
	jboolean is_truncatable() { return get_field<"is_truncatable", jboolean>(); }
	void is_truncatable(jboolean v) { set_field<"is_truncatable", jboolean>(v); }
	jni::ref<java::lang::String> base_value() { return get_field<"base_value", jni::ref<java::lang::String>>(); }
	void base_value(jni::ref<java::lang::String> v) { set_field<"base_value", jni::ref<java::lang::String>>(v); }
	jni::ref<org::omg::CORBA::TypeCode> type() { return get_field<"type", jni::ref<org::omg::CORBA::TypeCode>>(); }
	void type(jni::ref<org::omg::CORBA::TypeCode> v) { set_field<"type", jni::ref<org::omg::CORBA::TypeCode>>(v); }

	static jni::ref<com::sun::org::omg::CORBA::ValueDefPackage::FullValueDescription> new_object() { return base_::new_object(); }
	static jni::ref<com::sun::org::omg::CORBA::ValueDefPackage::FullValueDescription> new_object(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2, jboolean p3, jboolean p4, jni::ref<java::lang::String> p5, jni::ref<java::lang::String> p6, jni::ref<jni::array<com::sun::org::omg::CORBA::OperationDescription>> p7, jni::ref<jni::array<com::sun::org::omg::CORBA::AttributeDescription>> p8, jni::ref<jni::array<org::omg::CORBA::ValueMember>> p9, jni::ref<jni::array<com::sun::org::omg::CORBA::Initializer>> p10, jni::ref<jni::array<java::lang::String>> p11, jni::ref<jni::array<java::lang::String>> p12, jboolean p13, jni::ref<java::lang::String> p14, jni::ref<org::omg::CORBA::TypeCode> p15) { return base_::new_object(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15); }

protected:

	FullValueDescription(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_OMG_CORBA_VALUEDEFPACKAGE_FULLVALUEDESCRIPTION
