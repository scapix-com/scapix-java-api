// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_SERIALIZE_SERIALIZER_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_SERIALIZE_SERIALIZER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xml::internal::serialize { class Serializer; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xml::internal::serialize::Serializer>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xml/internal/serialize/Serializer";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_SERIALIZE_SERIALIZER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_SERIALIZE_SERIALIZER)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_SERIALIZE_SERIALIZER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/xml/internal/serialize/DOMSerializer.h>
#include <scapix/java_api/com/sun/org/apache/xml/internal/serialize/OutputFormat.h>
#include <scapix/java_api/java/io/OutputStream.h>
#include <scapix/java_api/java/io/Writer.h>
#include <scapix/java_api/org/xml/sax/ContentHandler.h>
#include <scapix/java_api/org/xml/sax/DocumentHandler.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xml::internal::serialize::Serializer : public jni::object_base<"com/sun/org/apache/xml/internal/serialize/Serializer",
	java::lang::Object>
{
public:

	void setOutputByteStream(jni::ref<java::io::OutputStream> p1) { return call_method<"setOutputByteStream", void>(p1); }
	void setOutputCharStream(jni::ref<java::io::Writer> p1) { return call_method<"setOutputCharStream", void>(p1); }
	void setOutputFormat(jni::ref<com::sun::org::apache::xml::internal::serialize::OutputFormat> p1) { return call_method<"setOutputFormat", void>(p1); }
	jni::ref<org::xml::sax::DocumentHandler> asDocumentHandler() { return call_method<"asDocumentHandler", jni::ref<org::xml::sax::DocumentHandler>>(); }
	jni::ref<org::xml::sax::ContentHandler> asContentHandler() { return call_method<"asContentHandler", jni::ref<org::xml::sax::ContentHandler>>(); }
	jni::ref<com::sun::org::apache::xml::internal::serialize::DOMSerializer> asDOMSerializer() { return call_method<"asDOMSerializer", jni::ref<com::sun::org::apache::xml::internal::serialize::DOMSerializer>>(); }

protected:

	Serializer(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_SERIALIZE_SERIALIZER
