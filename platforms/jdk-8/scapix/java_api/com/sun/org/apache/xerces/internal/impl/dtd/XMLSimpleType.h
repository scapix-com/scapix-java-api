// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_DTD_XMLSIMPLETYPE_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_DTD_XMLSIMPLETYPE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xerces::internal::impl::dtd { class XMLSimpleType; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xerces::internal::impl::dtd::XMLSimpleType>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xerces/internal/impl/dtd/XMLSimpleType";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_DTD_XMLSIMPLETYPE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_DTD_XMLSIMPLETYPE)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_DTD_XMLSIMPLETYPE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/xerces/internal/impl/dv/DatatypeValidator.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xerces::internal::impl::dtd::XMLSimpleType : public jni::object_base<"com/sun/org/apache/xerces/internal/impl/dtd/XMLSimpleType",
	java::lang::Object>
{
public:

	static jshort TYPE_CDATA() { return get_static_field<"TYPE_CDATA", jshort>(); }
	static jshort TYPE_ENTITY() { return get_static_field<"TYPE_ENTITY", jshort>(); }
	static jshort TYPE_ENUMERATION() { return get_static_field<"TYPE_ENUMERATION", jshort>(); }
	static jshort TYPE_ID() { return get_static_field<"TYPE_ID", jshort>(); }
	static jshort TYPE_IDREF() { return get_static_field<"TYPE_IDREF", jshort>(); }
	static jshort TYPE_NMTOKEN() { return get_static_field<"TYPE_NMTOKEN", jshort>(); }
	static jshort TYPE_NOTATION() { return get_static_field<"TYPE_NOTATION", jshort>(); }
	static jshort TYPE_NAMED() { return get_static_field<"TYPE_NAMED", jshort>(); }
	static jshort DEFAULT_TYPE_DEFAULT() { return get_static_field<"DEFAULT_TYPE_DEFAULT", jshort>(); }
	static jshort DEFAULT_TYPE_FIXED() { return get_static_field<"DEFAULT_TYPE_FIXED", jshort>(); }
	static jshort DEFAULT_TYPE_IMPLIED() { return get_static_field<"DEFAULT_TYPE_IMPLIED", jshort>(); }
	static jshort DEFAULT_TYPE_REQUIRED() { return get_static_field<"DEFAULT_TYPE_REQUIRED", jshort>(); }
	jshort type() { return get_field<"type", jshort>(); }
	void type(jshort v) { set_field<"type", jshort>(v); }
	jni::ref<java::lang::String> name() { return get_field<"name", jni::ref<java::lang::String>>(); }
	void name(jni::ref<java::lang::String> v) { set_field<"name", jni::ref<java::lang::String>>(v); }
	jni::ref<jni::array<java::lang::String>> enumeration() { return get_field<"enumeration", jni::ref<jni::array<java::lang::String>>>(); }
	void enumeration(jni::ref<jni::array<java::lang::String>> v) { set_field<"enumeration", jni::ref<jni::array<java::lang::String>>>(v); }
	jboolean list() { return get_field<"list", jboolean>(); }
	void list(jboolean v) { set_field<"list", jboolean>(v); }
	jshort defaultType() { return get_field<"defaultType", jshort>(); }
	void defaultType(jshort v) { set_field<"defaultType", jshort>(v); }
	jni::ref<java::lang::String> defaultValue() { return get_field<"defaultValue", jni::ref<java::lang::String>>(); }
	void defaultValue(jni::ref<java::lang::String> v) { set_field<"defaultValue", jni::ref<java::lang::String>>(v); }
	jni::ref<java::lang::String> nonNormalizedDefaultValue() { return get_field<"nonNormalizedDefaultValue", jni::ref<java::lang::String>>(); }
	void nonNormalizedDefaultValue(jni::ref<java::lang::String> v) { set_field<"nonNormalizedDefaultValue", jni::ref<java::lang::String>>(v); }
	jni::ref<com::sun::org::apache::xerces::internal::impl::dv::DatatypeValidator> datatypeValidator() { return get_field<"datatypeValidator", jni::ref<com::sun::org::apache::xerces::internal::impl::dv::DatatypeValidator>>(); }
	void datatypeValidator(jni::ref<com::sun::org::apache::xerces::internal::impl::dv::DatatypeValidator> v) { set_field<"datatypeValidator", jni::ref<com::sun::org::apache::xerces::internal::impl::dv::DatatypeValidator>>(v); }

	static jni::ref<com::sun::org::apache::xerces::internal::impl::dtd::XMLSimpleType> new_object() { return base_::new_object(); }
	void setValues(jshort p1, jni::ref<java::lang::String> p2, jni::ref<jni::array<java::lang::String>> p3, jboolean p4, jshort p5, jni::ref<java::lang::String> p6, jni::ref<java::lang::String> p7, jni::ref<com::sun::org::apache::xerces::internal::impl::dv::DatatypeValidator> p8) { return call_method<"setValues", void>(p1, p2, p3, p4, p5, p6, p7, p8); }
	void setValues(jni::ref<com::sun::org::apache::xerces::internal::impl::dtd::XMLSimpleType> p1) { return call_method<"setValues", void>(p1); }
	void clear() { return call_method<"clear", void>(); }

protected:

	XMLSimpleType(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_DTD_XMLSIMPLETYPE
