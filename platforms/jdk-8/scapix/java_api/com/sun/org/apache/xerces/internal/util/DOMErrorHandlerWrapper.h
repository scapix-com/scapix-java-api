// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/xni/parser/XMLErrorHandler.h>
#include <scapix/java_api/org/w3c/dom/DOMErrorHandler.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_UTIL_DOMERRORHANDLERWRAPPER_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_UTIL_DOMERRORHANDLERWRAPPER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xerces::internal::util { class DOMErrorHandlerWrapper; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xerces::internal::util::DOMErrorHandlerWrapper>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xerces/internal/util/DOMErrorHandlerWrapper";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::com::sun::org::apache::xerces::internal::xni::parser::XMLErrorHandler, scapix::java_api::org::w3c::dom::DOMErrorHandler>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_UTIL_DOMERRORHANDLERWRAPPER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_UTIL_DOMERRORHANDLERWRAPPER)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_UTIL_DOMERRORHANDLERWRAPPER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/xerces/internal/xni/parser/XMLParseException.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/w3c/dom/DOMError.h>
#include <scapix/java_api/org/w3c/dom/Node.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xerces::internal::util::DOMErrorHandlerWrapper : public jni::object_base<"com/sun/org/apache/xerces/internal/util/DOMErrorHandlerWrapper",
	java::lang::Object,
	com::sun::org::apache::xerces::internal::xni::parser::XMLErrorHandler,
	org::w3c::dom::DOMErrorHandler>
{
public:

	jni::ref<org::w3c::dom::Node> fCurrentNode() { return get_field<"fCurrentNode", jni::ref<org::w3c::dom::Node>>(); }
	void fCurrentNode(jni::ref<org::w3c::dom::Node> v) { set_field<"fCurrentNode", jni::ref<org::w3c::dom::Node>>(v); }

	static jni::ref<com::sun::org::apache::xerces::internal::util::DOMErrorHandlerWrapper> new_object() { return base_::new_object(); }
	static jni::ref<com::sun::org::apache::xerces::internal::util::DOMErrorHandlerWrapper> new_object(jni::ref<org::w3c::dom::DOMErrorHandler> p1) { return base_::new_object(p1); }
	void setErrorHandler(jni::ref<org::w3c::dom::DOMErrorHandler> p1) { return call_method<"setErrorHandler", void>(p1); }
	jni::ref<org::w3c::dom::DOMErrorHandler> getErrorHandler() { return call_method<"getErrorHandler", jni::ref<org::w3c::dom::DOMErrorHandler>>(); }
	void warning(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2, jni::ref<com::sun::org::apache::xerces::internal::xni::parser::XMLParseException> p3) { return call_method<"warning", void>(p1, p2, p3); }
	void error(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2, jni::ref<com::sun::org::apache::xerces::internal::xni::parser::XMLParseException> p3) { return call_method<"error", void>(p1, p2, p3); }
	void fatalError(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2, jni::ref<com::sun::org::apache::xerces::internal::xni::parser::XMLParseException> p3) { return call_method<"fatalError", void>(p1, p2, p3); }
	jboolean handleError(jni::ref<org::w3c::dom::DOMError> p1) { return call_method<"handleError", jboolean>(p1); }

protected:

	DOMErrorHandlerWrapper(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_UTIL_DOMERRORHANDLERWRAPPER
