// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_RUNTIME_OPERATORS_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_RUNTIME_OPERATORS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xalan::internal::xsltc::runtime { class Operators; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xalan::internal::xsltc::runtime::Operators>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xalan/internal/xsltc/runtime/Operators";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_RUNTIME_OPERATORS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_RUNTIME_OPERATORS)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_RUNTIME_OPERATORS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xalan::internal::xsltc::runtime::Operators : public jni::object_base<"com/sun/org/apache/xalan/internal/xsltc/runtime/Operators",
	java::lang::Object>
{
public:

	static jint EQ() { return get_static_field<"EQ", jint>(); }
	static jint NE() { return get_static_field<"NE", jint>(); }
	static jint GT() { return get_static_field<"GT", jint>(); }
	static jint LT() { return get_static_field<"LT", jint>(); }
	static jint GE() { return get_static_field<"GE", jint>(); }
	static jint LE() { return get_static_field<"LE", jint>(); }

	static jni::ref<com::sun::org::apache::xalan::internal::xsltc::runtime::Operators> new_object() { return base_::new_object(); }
	static jni::ref<java::lang::String> getOpNames(jint p1) { return call_static_method<"getOpNames", jni::ref<java::lang::String>>(p1); }
	static jint swapOp(jint p1) { return call_static_method<"swapOp", jint>(p1); }

protected:

	Operators(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_RUNTIME_OPERATORS
