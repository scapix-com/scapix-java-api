// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/org/apache/xalan/internal/xsltc/compiler/Pattern.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_COMPILER_LOCATIONPATHPATTERN_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_COMPILER_LOCATIONPATHPATTERN_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xalan::internal::xsltc::compiler { class LocationPathPattern; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xalan::internal::xsltc::compiler::LocationPathPattern>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xalan/internal/xsltc/compiler/LocationPathPattern";
	using base_classes = std::tuple<scapix::java_api::com::sun::org::apache::xalan::internal::xsltc::compiler::Pattern>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_COMPILER_LOCATIONPATHPATTERN_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_COMPILER_LOCATIONPATHPATTERN)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_COMPILER_LOCATIONPATHPATTERN

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/xalan/internal/xsltc/compiler/StepPattern.h>
#include <scapix/java_api/com/sun/org/apache/xalan/internal/xsltc/compiler/SymbolTable.h>
#include <scapix/java_api/com/sun/org/apache/xalan/internal/xsltc/compiler/Template.h>
#include <scapix/java_api/com/sun/org/apache/xalan/internal/xsltc/compiler/util/ClassGenerator.h>
#include <scapix/java_api/com/sun/org/apache/xalan/internal/xsltc/compiler/util/MethodGenerator.h>
#include <scapix/java_api/com/sun/org/apache/xalan/internal/xsltc/compiler/util/Type.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xalan::internal::xsltc::compiler::LocationPathPattern : public jni::object_base<"com/sun/org/apache/xalan/internal/xsltc/compiler/LocationPathPattern",
	com::sun::org::apache::xalan::internal::xsltc::compiler::Pattern>
{
public:

	static jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::LocationPathPattern> new_object() { return base_::new_object(); }
	jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::util::Type> typeCheck(jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::SymbolTable> p1) { return call_method<"typeCheck", jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::util::Type>>(p1); }
	void translate(jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::util::ClassGenerator> p1, jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::util::MethodGenerator> p2) { return call_method<"translate", void>(p1, p2); }
	void setTemplate(jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::Template> p1) { return call_method<"setTemplate", void>(p1); }
	jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::Template> getTemplate() { return call_method<"getTemplate", jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::Template>>(); }
	jdouble getPriority() { return call_method<"getPriority", jdouble>(); }
	jdouble getDefaultPriority() { return call_method<"getDefaultPriority", jdouble>(); }
	jboolean noSmallerThan(jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::LocationPathPattern> p1) { return call_method<"noSmallerThan", jboolean>(p1); }
	jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::StepPattern> getKernelPattern() { return call_method<"getKernelPattern", jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::StepPattern>>(); }
	void reduceKernelPattern() { return call_method<"reduceKernelPattern", void>(); }
	jboolean isWildcard() { return call_method<"isWildcard", jboolean>(); }
	jint getAxis() { return call_method<"getAxis", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	LocationPathPattern(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_COMPILER_LOCATIONPATHPATTERN
