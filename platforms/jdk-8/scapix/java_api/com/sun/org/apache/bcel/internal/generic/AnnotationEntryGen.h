// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_GENERIC_ANNOTATIONENTRYGEN_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_GENERIC_ANNOTATIONENTRYGEN_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::bcel::internal::generic { class AnnotationEntryGen; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::bcel::internal::generic::AnnotationEntryGen>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/bcel/internal/generic/AnnotationEntryGen";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_GENERIC_ANNOTATIONENTRYGEN_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_GENERIC_ANNOTATIONENTRYGEN)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_GENERIC_ANNOTATIONENTRYGEN

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/AnnotationEntry.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/generic/ConstantPoolGen.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/generic/ElementValuePairGen.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/generic/ObjectType.h>
#include <scapix/java_api/java/io/DataInput.h>
#include <scapix/java_api/java/io/DataOutputStream.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::bcel::internal::generic::AnnotationEntryGen : public jni::object_base<"com/sun/org/apache/bcel/internal/generic/AnnotationEntryGen",
	java::lang::Object>
{
public:

	static jni::ref<com::sun::org::apache::bcel::internal::generic::AnnotationEntryGen> read(jni::ref<java::io::DataInput> p1, jni::ref<com::sun::org::apache::bcel::internal::generic::ConstantPoolGen> p2, jboolean p3) { return call_static_method<"read", jni::ref<com::sun::org::apache::bcel::internal::generic::AnnotationEntryGen>>(p1, p2, p3); }
	static jni::ref<com::sun::org::apache::bcel::internal::generic::AnnotationEntryGen> new_object(jni::ref<com::sun::org::apache::bcel::internal::classfile::AnnotationEntry> p1, jni::ref<com::sun::org::apache::bcel::internal::generic::ConstantPoolGen> p2, jboolean p3) { return base_::new_object(p1, p2, p3); }
	static jni::ref<com::sun::org::apache::bcel::internal::generic::AnnotationEntryGen> new_object(jni::ref<com::sun::org::apache::bcel::internal::generic::ObjectType> p1, jni::ref<java::util::List> p2, jboolean p3, jni::ref<com::sun::org::apache::bcel::internal::generic::ConstantPoolGen> p4) { return base_::new_object(p1, p2, p3, p4); }
	void addElementNameValuePair(jni::ref<com::sun::org::apache::bcel::internal::generic::ElementValuePairGen> p1) { return call_method<"addElementNameValuePair", void>(p1); }
	void dump(jni::ref<java::io::DataOutputStream> p1) { return call_method<"dump", void>(p1); }
	jni::ref<com::sun::org::apache::bcel::internal::classfile::AnnotationEntry> getAnnotation() { return call_method<"getAnnotation", jni::ref<com::sun::org::apache::bcel::internal::classfile::AnnotationEntry>>(); }
	jint getTypeIndex() { return call_method<"getTypeIndex", jint>(); }
	jni::ref<java::lang::String> getTypeName() { return call_method<"getTypeName", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getTypeSignature() { return call_method<"getTypeSignature", jni::ref<java::lang::String>>(); }
	jni::ref<java::util::List> getValues() { return call_method<"getValues", jni::ref<java::util::List>>(); }
	jboolean isRuntimeVisible() { return call_method<"isRuntimeVisible", jboolean>(); }
	jni::ref<java::lang::String> toShortString() { return call_method<"toShortString", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	AnnotationEntryGen(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_GENERIC_ANNOTATIONENTRYGEN
