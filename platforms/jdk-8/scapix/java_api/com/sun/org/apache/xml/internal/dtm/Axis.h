// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_DTM_AXIS_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_DTM_AXIS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xml::internal::dtm { class Axis; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xml::internal::dtm::Axis>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xml/internal/dtm/Axis";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_DTM_AXIS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_DTM_AXIS)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_DTM_AXIS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xml::internal::dtm::Axis : public jni::object_base<"com/sun/org/apache/xml/internal/dtm/Axis",
	java::lang::Object>
{
public:

	static jint ANCESTOR() { return get_static_field<"ANCESTOR", jint>(); }
	static jint ANCESTORORSELF() { return get_static_field<"ANCESTORORSELF", jint>(); }
	static jint ATTRIBUTE() { return get_static_field<"ATTRIBUTE", jint>(); }
	static jint CHILD() { return get_static_field<"CHILD", jint>(); }
	static jint DESCENDANT() { return get_static_field<"DESCENDANT", jint>(); }
	static jint DESCENDANTORSELF() { return get_static_field<"DESCENDANTORSELF", jint>(); }
	static jint FOLLOWING() { return get_static_field<"FOLLOWING", jint>(); }
	static jint FOLLOWINGSIBLING() { return get_static_field<"FOLLOWINGSIBLING", jint>(); }
	static jint NAMESPACEDECLS() { return get_static_field<"NAMESPACEDECLS", jint>(); }
	static jint NAMESPACE() { return get_static_field<"NAMESPACE", jint>(); }
	static jint PARENT() { return get_static_field<"PARENT", jint>(); }
	static jint PRECEDING() { return get_static_field<"PRECEDING", jint>(); }
	static jint PRECEDINGSIBLING() { return get_static_field<"PRECEDINGSIBLING", jint>(); }
	static jint SELF() { return get_static_field<"SELF", jint>(); }
	static jint ALLFROMNODE() { return get_static_field<"ALLFROMNODE", jint>(); }
	static jint PRECEDINGANDANCESTOR() { return get_static_field<"PRECEDINGANDANCESTOR", jint>(); }
	static jint ALL() { return get_static_field<"ALL", jint>(); }
	static jint DESCENDANTSFROMROOT() { return get_static_field<"DESCENDANTSFROMROOT", jint>(); }
	static jint DESCENDANTSORSELFFROMROOT() { return get_static_field<"DESCENDANTSORSELFFROMROOT", jint>(); }
	static jint ROOT() { return get_static_field<"ROOT", jint>(); }
	static jint FILTEREDLIST() { return get_static_field<"FILTEREDLIST", jint>(); }

	static jni::ref<com::sun::org::apache::xml::internal::dtm::Axis> new_object() { return base_::new_object(); }
	static jboolean isReverse(jint p1) { return call_static_method<"isReverse", jboolean>(p1); }
	static jni::ref<java::lang::String> getNames(jint p1) { return call_static_method<"getNames", jni::ref<java::lang::String>>(p1); }
	static jint getNamesLength() { return call_static_method<"getNamesLength", jint>(); }

protected:

	Axis(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_DTM_AXIS
