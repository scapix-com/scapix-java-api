// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/org/apache/xerces/internal/dom/ParentNode.h>
#include <scapix/java_api/org/w3c/dom/EntityReference.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_DOM_ENTITYREFERENCEIMPL_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_DOM_ENTITYREFERENCEIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xerces::internal::dom { class EntityReferenceImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xerces::internal::dom::EntityReferenceImpl>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xerces/internal/dom/EntityReferenceImpl";
	using base_classes = std::tuple<scapix::java_api::com::sun::org::apache::xerces::internal::dom::ParentNode, scapix::java_api::org::w3c::dom::EntityReference>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_DOM_ENTITYREFERENCEIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_DOM_ENTITYREFERENCEIMPL)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_DOM_ENTITYREFERENCEIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/xerces/internal/dom/CoreDocumentImpl.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/w3c/dom/Node.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xerces::internal::dom::EntityReferenceImpl : public jni::object_base<"com/sun/org/apache/xerces/internal/dom/EntityReferenceImpl",
	com::sun::org::apache::xerces::internal::dom::ParentNode,
	org::w3c::dom::EntityReference>
{
public:

	static jni::ref<com::sun::org::apache::xerces::internal::dom::EntityReferenceImpl> new_object(jni::ref<com::sun::org::apache::xerces::internal::dom::CoreDocumentImpl> p1, jni::ref<java::lang::String> p2) { return base_::new_object(p1, p2); }
	jshort getNodeType() { return call_method<"getNodeType", jshort>(); }
	jni::ref<java::lang::String> getNodeName() { return call_method<"getNodeName", jni::ref<java::lang::String>>(); }
	jni::ref<org::w3c::dom::Node> cloneNode(jboolean p1) { return call_method<"cloneNode", jni::ref<org::w3c::dom::Node>>(p1); }
	jni::ref<java::lang::String> getBaseURI() { return call_method<"getBaseURI", jni::ref<java::lang::String>>(); }
	void setBaseURI(jni::ref<java::lang::String> p1) { return call_method<"setBaseURI", void>(p1); }
	void setReadOnly(jboolean p1, jboolean p2) { return call_method<"setReadOnly", void>(p1, p2); }

protected:

	EntityReferenceImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_DOM_ENTITYREFERENCEIMPL
