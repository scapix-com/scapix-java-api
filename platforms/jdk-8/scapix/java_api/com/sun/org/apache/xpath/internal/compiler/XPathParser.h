// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_COMPILER_XPATHPARSER_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_COMPILER_XPATHPARSER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xpath::internal::compiler { class XPathParser; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xpath::internal::compiler::XPathParser>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xpath/internal/compiler/XPathParser";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_COMPILER_XPATHPARSER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_COMPILER_XPATHPARSER)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_COMPILER_XPATHPARSER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/xml/internal/utils/PrefixResolver.h>
#include <scapix/java_api/com/sun/org/apache/xpath/internal/compiler/Compiler.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/xml/transform/ErrorListener.h>
#include <scapix/java_api/javax/xml/transform/SourceLocator.h>
#include <scapix/java_api/jdk/xml/internal/XMLSecurityManager.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xpath::internal::compiler::XPathParser : public jni::object_base<"com/sun/org/apache/xpath/internal/compiler/XPathParser",
	java::lang::Object>
{
public:

	static jni::ref<java::lang::String> CONTINUE_AFTER_FATAL_ERROR() { return get_static_field<"CONTINUE_AFTER_FATAL_ERROR", jni::ref<java::lang::String>>(); }

	static jni::ref<com::sun::org::apache::xpath::internal::compiler::XPathParser> new_object(jni::ref<javax::xml::transform::ErrorListener> p1, jni::ref<javax::xml::transform::SourceLocator> p2, jni::ref<jdk::xml::internal::XMLSecurityManager> p3) { return base_::new_object(p1, p2, p3); }
	void initXPath(jni::ref<com::sun::org::apache::xpath::internal::compiler::Compiler> p1, jni::ref<java::lang::String> p2, jni::ref<com::sun::org::apache::xml::internal::utils::PrefixResolver> p3) { return call_method<"initXPath", void>(p1, p2, p3); }
	void initMatchPattern(jni::ref<com::sun::org::apache::xpath::internal::compiler::Compiler> p1, jni::ref<java::lang::String> p2, jni::ref<com::sun::org::apache::xml::internal::utils::PrefixResolver> p3) { return call_method<"initMatchPattern", void>(p1, p2, p3); }
	void setErrorHandler(jni::ref<javax::xml::transform::ErrorListener> p1) { return call_method<"setErrorHandler", void>(p1); }
	jni::ref<javax::xml::transform::ErrorListener> getErrorListener() { return call_method<"getErrorListener", jni::ref<javax::xml::transform::ErrorListener>>(); }

protected:

	XPathParser(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_COMPILER_XPATHPARSER
