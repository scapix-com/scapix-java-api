// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_RUNTIME_OUTPUT_TRANSLETOUTPUTHANDLERFACTORY_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_RUNTIME_OUTPUT_TRANSLETOUTPUTHANDLERFACTORY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xalan::internal::xsltc::runtime::output { class TransletOutputHandlerFactory; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xalan::internal::xsltc::runtime::output::TransletOutputHandlerFactory>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xalan/internal/xsltc/runtime/output/TransletOutputHandlerFactory";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_RUNTIME_OUTPUT_TRANSLETOUTPUTHANDLERFACTORY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_RUNTIME_OUTPUT_TRANSLETOUTPUTHANDLERFACTORY)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_RUNTIME_OUTPUT_TRANSLETOUTPUTHANDLERFACTORY

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/xml/internal/serializer/SerializationHandler.h>
#include <scapix/java_api/java/io/OutputStream.h>
#include <scapix/java_api/java/io/Writer.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/xml/stream/XMLEventWriter.h>
#include <scapix/java_api/javax/xml/stream/XMLStreamWriter.h>
#include <scapix/java_api/org/w3c/dom/Node.h>
#include <scapix/java_api/org/xml/sax/ContentHandler.h>
#include <scapix/java_api/org/xml/sax/ext/LexicalHandler.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xalan::internal::xsltc::runtime::output::TransletOutputHandlerFactory : public jni::object_base<"com/sun/org/apache/xalan/internal/xsltc/runtime/output/TransletOutputHandlerFactory",
	java::lang::Object>
{
public:

	static jint STREAM() { return get_static_field<"STREAM", jint>(); }
	static jint SAX() { return get_static_field<"SAX", jint>(); }
	static jint DOM() { return get_static_field<"DOM", jint>(); }
	static jint STAX() { return get_static_field<"STAX", jint>(); }

	static jni::ref<com::sun::org::apache::xalan::internal::xsltc::runtime::output::TransletOutputHandlerFactory> newInstance() { return call_static_method<"newInstance", jni::ref<com::sun::org::apache::xalan::internal::xsltc::runtime::output::TransletOutputHandlerFactory>>(); }
	static jni::ref<com::sun::org::apache::xalan::internal::xsltc::runtime::output::TransletOutputHandlerFactory> newInstance(jboolean p1) { return call_static_method<"newInstance", jni::ref<com::sun::org::apache::xalan::internal::xsltc::runtime::output::TransletOutputHandlerFactory>>(p1); }
	static jni::ref<com::sun::org::apache::xalan::internal::xsltc::runtime::output::TransletOutputHandlerFactory> new_object(jboolean p1) { return base_::new_object(p1); }
	void setOutputType(jint p1) { return call_method<"setOutputType", void>(p1); }
	void setEncoding(jni::ref<java::lang::String> p1) { return call_method<"setEncoding", void>(p1); }
	void setOutputMethod(jni::ref<java::lang::String> p1) { return call_method<"setOutputMethod", void>(p1); }
	void setOutputStream(jni::ref<java::io::OutputStream> p1) { return call_method<"setOutputStream", void>(p1); }
	void setWriter(jni::ref<java::io::Writer> p1) { return call_method<"setWriter", void>(p1); }
	void setHandler(jni::ref<org::xml::sax::ContentHandler> p1) { return call_method<"setHandler", void>(p1); }
	void setLexicalHandler(jni::ref<org::xml::sax::ext::LexicalHandler> p1) { return call_method<"setLexicalHandler", void>(p1); }
	void setNode(jni::ref<org::w3c::dom::Node> p1) { return call_method<"setNode", void>(p1); }
	jni::ref<org::w3c::dom::Node> getNode() { return call_method<"getNode", jni::ref<org::w3c::dom::Node>>(); }
	void setNextSibling(jni::ref<org::w3c::dom::Node> p1) { return call_method<"setNextSibling", void>(p1); }
	jni::ref<javax::xml::stream::XMLEventWriter> getXMLEventWriter() { return call_method<"getXMLEventWriter", jni::ref<javax::xml::stream::XMLEventWriter>>(); }
	void setXMLEventWriter(jni::ref<javax::xml::stream::XMLEventWriter> p1) { return call_method<"setXMLEventWriter", void>(p1); }
	jni::ref<javax::xml::stream::XMLStreamWriter> getXMLStreamWriter() { return call_method<"getXMLStreamWriter", jni::ref<javax::xml::stream::XMLStreamWriter>>(); }
	void setXMLStreamWriter(jni::ref<javax::xml::stream::XMLStreamWriter> p1) { return call_method<"setXMLStreamWriter", void>(p1); }
	void setIndentNumber(jint p1) { return call_method<"setIndentNumber", void>(p1); }
	jni::ref<com::sun::org::apache::xml::internal::serializer::SerializationHandler> getSerializationHandler() { return call_method<"getSerializationHandler", jni::ref<com::sun::org::apache::xml::internal::serializer::SerializationHandler>>(); }

protected:

	TransletOutputHandlerFactory(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_RUNTIME_OUTPUT_TRANSLETOUTPUTHANDLERFACTORY
