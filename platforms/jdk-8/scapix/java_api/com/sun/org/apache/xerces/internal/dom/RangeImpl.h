// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/org/w3c/dom/ranges/Range.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_DOM_RANGEIMPL_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_DOM_RANGEIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xerces::internal::dom { class RangeImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xerces::internal::dom::RangeImpl>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xerces/internal/dom/RangeImpl";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::org::w3c::dom::ranges::Range>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_DOM_RANGEIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_DOM_RANGEIMPL)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_DOM_RANGEIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/xerces/internal/dom/DocumentImpl.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/w3c/dom/DocumentFragment.h>
#include <scapix/java_api/org/w3c/dom/Node.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xerces::internal::dom::RangeImpl : public jni::object_base<"com/sun/org/apache/xerces/internal/dom/RangeImpl",
	java::lang::Object,
	org::w3c::dom::ranges::Range>
{
public:

	static jni::ref<com::sun::org::apache::xerces::internal::dom::RangeImpl> new_object(jni::ref<com::sun::org::apache::xerces::internal::dom::DocumentImpl> p1) { return base_::new_object(p1); }
	jni::ref<org::w3c::dom::Node> getStartContainer() { return call_method<"getStartContainer", jni::ref<org::w3c::dom::Node>>(); }
	jint getStartOffset() { return call_method<"getStartOffset", jint>(); }
	jni::ref<org::w3c::dom::Node> getEndContainer() { return call_method<"getEndContainer", jni::ref<org::w3c::dom::Node>>(); }
	jint getEndOffset() { return call_method<"getEndOffset", jint>(); }
	jboolean getCollapsed() { return call_method<"getCollapsed", jboolean>(); }
	jni::ref<org::w3c::dom::Node> getCommonAncestorContainer() { return call_method<"getCommonAncestorContainer", jni::ref<org::w3c::dom::Node>>(); }
	void setStart(jni::ref<org::w3c::dom::Node> p1, jint p2) { return call_method<"setStart", void>(p1, p2); }
	void setEnd(jni::ref<org::w3c::dom::Node> p1, jint p2) { return call_method<"setEnd", void>(p1, p2); }
	void setStartBefore(jni::ref<org::w3c::dom::Node> p1) { return call_method<"setStartBefore", void>(p1); }
	void setStartAfter(jni::ref<org::w3c::dom::Node> p1) { return call_method<"setStartAfter", void>(p1); }
	void setEndBefore(jni::ref<org::w3c::dom::Node> p1) { return call_method<"setEndBefore", void>(p1); }
	void setEndAfter(jni::ref<org::w3c::dom::Node> p1) { return call_method<"setEndAfter", void>(p1); }
	void collapse(jboolean p1) { return call_method<"collapse", void>(p1); }
	void selectNode(jni::ref<org::w3c::dom::Node> p1) { return call_method<"selectNode", void>(p1); }
	void selectNodeContents(jni::ref<org::w3c::dom::Node> p1) { return call_method<"selectNodeContents", void>(p1); }
	jshort compareBoundaryPoints(jshort p1, jni::ref<org::w3c::dom::ranges::Range> p2) { return call_method<"compareBoundaryPoints", jshort>(p1, p2); }
	void deleteContents() { return call_method<"deleteContents", void>(); }
	jni::ref<org::w3c::dom::DocumentFragment> extractContents() { return call_method<"extractContents", jni::ref<org::w3c::dom::DocumentFragment>>(); }
	jni::ref<org::w3c::dom::DocumentFragment> cloneContents() { return call_method<"cloneContents", jni::ref<org::w3c::dom::DocumentFragment>>(); }
	void insertNode(jni::ref<org::w3c::dom::Node> p1) { return call_method<"insertNode", void>(p1); }
	void surroundContents(jni::ref<org::w3c::dom::Node> p1) { return call_method<"surroundContents", void>(p1); }
	jni::ref<org::w3c::dom::ranges::Range> cloneRange() { return call_method<"cloneRange", jni::ref<org::w3c::dom::ranges::Range>>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	void detach() { return call_method<"detach", void>(); }
	void insertedNodeFromDOM(jni::ref<org::w3c::dom::Node> p1) { return call_method<"insertedNodeFromDOM", void>(p1); }

protected:

	RangeImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_DOM_RANGEIMPL
