// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/org/apache/xerces/internal/impl/XMLScanner.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/xni/parser/XMLDocumentScanner.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/xni/parser/XMLComponent.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/impl/XMLEntityHandler.h>
#include <scapix/java_api/com/sun/xml/internal/stream/XMLBufferListener.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_XMLDOCUMENTFRAGMENTSCANNERIMPL_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_XMLDOCUMENTFRAGMENTSCANNERIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xerces::internal::impl { class XMLDocumentFragmentScannerImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xerces::internal::impl::XMLDocumentFragmentScannerImpl>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xerces/internal/impl/XMLDocumentFragmentScannerImpl";
	using base_classes = std::tuple<scapix::java_api::com::sun::org::apache::xerces::internal::impl::XMLScanner, scapix::java_api::com::sun::org::apache::xerces::internal::xni::parser::XMLDocumentScanner, scapix::java_api::com::sun::org::apache::xerces::internal::xni::parser::XMLComponent, scapix::java_api::com::sun::org::apache::xerces::internal::impl::XMLEntityHandler, scapix::java_api::com::sun::xml::internal::stream::XMLBufferListener>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_XMLDOCUMENTFRAGMENTSCANNERIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_XMLDOCUMENTFRAGMENTSCANNERIMPL)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_XMLDOCUMENTFRAGMENTSCANNERIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/xerces/internal/impl/PropertyManager.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/impl/XMLDocumentFragmentScannerImpl_Driver.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/util/XMLAttributesIteratorImpl.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/util/XMLStringBuffer.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/xni/Augmentations.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/xni/QName.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/xni/XMLDocumentHandler.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/xni/XMLString.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/xni/parser/XMLComponentManager.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/xni/parser/XMLInputSource.h>
#include <scapix/java_api/java/lang/Boolean.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xerces::internal::impl::XMLDocumentFragmentScannerImpl : public jni::object_base<"com/sun/org/apache/xerces/internal/impl/XMLDocumentFragmentScannerImpl",
	com::sun::org::apache::xerces::internal::impl::XMLScanner,
	com::sun::org::apache::xerces::internal::xni::parser::XMLDocumentScanner,
	com::sun::org::apache::xerces::internal::xni::parser::XMLComponent,
	com::sun::org::apache::xerces::internal::impl::XMLEntityHandler,
	com::sun::xml::internal::stream::XMLBufferListener>
{
public:

	static jni::ref<com::sun::org::apache::xerces::internal::impl::XMLDocumentFragmentScannerImpl> new_object() { return base_::new_object(); }
	void setInputSource(jni::ref<com::sun::org::apache::xerces::internal::xni::parser::XMLInputSource> p1) { return call_method<"setInputSource", void>(p1); }
	jboolean scanDocument(jboolean p1) { return call_method<"scanDocument", jboolean>(p1); }
	jni::ref<com::sun::org::apache::xerces::internal::xni::QName> getElementQName() { return call_method<"getElementQName", jni::ref<com::sun::org::apache::xerces::internal::xni::QName>>(); }
	jint next() { return call_method<"next", jint>(); }
	void reset(jni::ref<com::sun::org::apache::xerces::internal::xni::parser::XMLComponentManager> p1) { return call_method<"reset", void>(p1); }
	void reset(jni::ref<com::sun::org::apache::xerces::internal::impl::PropertyManager> p1) { return call_method<"reset", void>(p1); }
	jni::ref<jni::array<java::lang::String>> getRecognizedFeatures() { return call_method<"getRecognizedFeatures", jni::ref<jni::array<java::lang::String>>>(); }
	void setFeature(jni::ref<java::lang::String> p1, jboolean p2) { return call_method<"setFeature", void>(p1, p2); }
	jni::ref<jni::array<java::lang::String>> getRecognizedProperties() { return call_method<"getRecognizedProperties", jni::ref<jni::array<java::lang::String>>>(); }
	void setProperty(jni::ref<java::lang::String> p1, jni::ref<java::lang::Object> p2) { return call_method<"setProperty", void>(p1, p2); }
	jni::ref<java::lang::Boolean> getFeatureDefault(jni::ref<java::lang::String> p1) { return call_method<"getFeatureDefault", jni::ref<java::lang::Boolean>>(p1); }
	jni::ref<java::lang::Object> getPropertyDefault(jni::ref<java::lang::String> p1) { return call_method<"getPropertyDefault", jni::ref<java::lang::Object>>(p1); }
	void setDocumentHandler(jni::ref<com::sun::org::apache::xerces::internal::xni::XMLDocumentHandler> p1) { return call_method<"setDocumentHandler", void>(p1); }
	jni::ref<com::sun::org::apache::xerces::internal::xni::XMLDocumentHandler> getDocumentHandler() { return call_method<"getDocumentHandler", jni::ref<com::sun::org::apache::xerces::internal::xni::XMLDocumentHandler>>(); }
	void startEntity(jni::ref<java::lang::String> p1, jni::ref<com::sun::org::apache::xerces::internal::xni::XMLResourceIdentifier> p2, jni::ref<java::lang::String> p3, jni::ref<com::sun::org::apache::xerces::internal::xni::Augmentations> p4) { return call_method<"startEntity", void>(p1, p2, p3, p4); }
	void endEntity(jni::ref<java::lang::String> p1, jni::ref<com::sun::org::apache::xerces::internal::xni::Augmentations> p2) { return call_method<"endEntity", void>(p1, p2); }
	jni::ref<java::lang::String> getPITarget() { return call_method<"getPITarget", jni::ref<java::lang::String>>(); }
	jni::ref<com::sun::org::apache::xerces::internal::util::XMLStringBuffer> getPIData() { return call_method<"getPIData", jni::ref<com::sun::org::apache::xerces::internal::util::XMLStringBuffer>>(); }
	jni::ref<com::sun::org::apache::xerces::internal::xni::XMLString> getCharacterData() { return call_method<"getCharacterData", jni::ref<com::sun::org::apache::xerces::internal::xni::XMLString>>(); }
	jni::ref<java::lang::String> getComment() { return call_method<"getComment", jni::ref<java::lang::String>>(); }
	jboolean hasAttributes() { return call_method<"hasAttributes", jboolean>(); }
	jni::ref<com::sun::org::apache::xerces::internal::util::XMLAttributesIteratorImpl> getAttributeIterator() { return call_method<"getAttributeIterator", jni::ref<com::sun::org::apache::xerces::internal::util::XMLAttributesIteratorImpl>>(); }
	jboolean standaloneSet() { return call_method<"standaloneSet", jboolean>(); }
	jboolean isStandAlone() { return call_method<"isStandAlone", jboolean>(); }
	jni::ref<java::lang::String> getEntityName() { return call_method<"getEntityName", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getDriverName(jni::ref<com::sun::org::apache::xerces::internal::impl::XMLDocumentFragmentScannerImpl_Driver> p1) { return call_method<"getDriverName", jni::ref<java::lang::String>>(p1); }
	void refresh() { return call_method<"refresh", void>(); }
	void refresh(jint p1) { return call_method<"refresh", void>(p1); }

protected:

	XMLDocumentFragmentScannerImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_XMLDOCUMENTFRAGMENTSCANNERIMPL
