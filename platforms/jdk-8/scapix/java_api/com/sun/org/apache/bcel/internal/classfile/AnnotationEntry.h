// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/Node.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_CLASSFILE_ANNOTATIONENTRY_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_CLASSFILE_ANNOTATIONENTRY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::bcel::internal::classfile { class AnnotationEntry; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::bcel::internal::classfile::AnnotationEntry>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/bcel/internal/classfile/AnnotationEntry";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::com::sun::org::apache::bcel::internal::classfile::Node>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_CLASSFILE_ANNOTATIONENTRY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_CLASSFILE_ANNOTATIONENTRY)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_CLASSFILE_ANNOTATIONENTRY

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/Attribute.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/ConstantPool.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/ElementValuePair.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/Visitor.h>
#include <scapix/java_api/java/io/DataInput.h>
#include <scapix/java_api/java/io/DataOutputStream.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::bcel::internal::classfile::AnnotationEntry : public jni::object_base<"com/sun/org/apache/bcel/internal/classfile/AnnotationEntry",
	java::lang::Object,
	com::sun::org::apache::bcel::internal::classfile::Node>
{
public:

	static jni::ref<jni::array<com::sun::org::apache::bcel::internal::classfile::AnnotationEntry>> EMPTY_ARRAY() { return get_static_field<"EMPTY_ARRAY", jni::ref<jni::array<com::sun::org::apache::bcel::internal::classfile::AnnotationEntry>>>(); }

	static jni::ref<jni::array<com::sun::org::apache::bcel::internal::classfile::AnnotationEntry>> createAnnotationEntries(jni::ref<jni::array<com::sun::org::apache::bcel::internal::classfile::Attribute>> p1) { return call_static_method<"createAnnotationEntries", jni::ref<jni::array<com::sun::org::apache::bcel::internal::classfile::AnnotationEntry>>>(p1); }
	static jni::ref<com::sun::org::apache::bcel::internal::classfile::AnnotationEntry> read(jni::ref<java::io::DataInput> p1, jni::ref<com::sun::org::apache::bcel::internal::classfile::ConstantPool> p2, jboolean p3) { return call_static_method<"read", jni::ref<com::sun::org::apache::bcel::internal::classfile::AnnotationEntry>>(p1, p2, p3); }
	static jni::ref<com::sun::org::apache::bcel::internal::classfile::AnnotationEntry> new_object(jint p1, jni::ref<com::sun::org::apache::bcel::internal::classfile::ConstantPool> p2, jboolean p3) { return base_::new_object(p1, p2, p3); }
	void accept(jni::ref<com::sun::org::apache::bcel::internal::classfile::Visitor> p1) { return call_method<"accept", void>(p1); }
	void addElementNameValuePair(jni::ref<com::sun::org::apache::bcel::internal::classfile::ElementValuePair> p1) { return call_method<"addElementNameValuePair", void>(p1); }
	void dump(jni::ref<java::io::DataOutputStream> p1) { return call_method<"dump", void>(p1); }
	jni::ref<java::lang::String> getAnnotationType() { return call_method<"getAnnotationType", jni::ref<java::lang::String>>(); }
	jint getAnnotationTypeIndex() { return call_method<"getAnnotationTypeIndex", jint>(); }
	jni::ref<com::sun::org::apache::bcel::internal::classfile::ConstantPool> getConstantPool() { return call_method<"getConstantPool", jni::ref<com::sun::org::apache::bcel::internal::classfile::ConstantPool>>(); }
	jni::ref<jni::array<com::sun::org::apache::bcel::internal::classfile::ElementValuePair>> getElementValuePairs() { return call_method<"getElementValuePairs", jni::ref<jni::array<com::sun::org::apache::bcel::internal::classfile::ElementValuePair>>>(); }
	jint getNumElementValuePairs() { return call_method<"getNumElementValuePairs", jint>(); }
	jint getTypeIndex() { return call_method<"getTypeIndex", jint>(); }
	jboolean isRuntimeVisible() { return call_method<"isRuntimeVisible", jboolean>(); }
	jni::ref<java::lang::String> toShortString() { return call_method<"toShortString", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	AnnotationEntry(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_CLASSFILE_ANNOTATIONENTRY
