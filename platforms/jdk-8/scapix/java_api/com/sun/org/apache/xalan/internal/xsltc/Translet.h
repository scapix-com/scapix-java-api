// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_TRANSLET_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_TRANSLET_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xalan::internal::xsltc { class Translet; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xalan::internal::xsltc::Translet>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xalan/internal/xsltc/Translet";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_TRANSLET_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_TRANSLET)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_TRANSLET

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/xalan/internal/xsltc/DOM.h>
#include <scapix/java_api/com/sun/org/apache/xml/internal/dtm/DTMAxisIterator.h>
#include <scapix/java_api/com/sun/org/apache/xml/internal/serializer/SerializationHandler.h>
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xalan::internal::xsltc::Translet : public jni::object_base<"com/sun/org/apache/xalan/internal/xsltc/Translet",
	java::lang::Object>
{
public:

	void transform(jni::ref<com::sun::org::apache::xalan::internal::xsltc::DOM> p1, jni::ref<com::sun::org::apache::xml::internal::serializer::SerializationHandler> p2) { return call_method<"transform", void>(p1, p2); }
	void transform(jni::ref<com::sun::org::apache::xalan::internal::xsltc::DOM> p1, jni::ref<jni::array<com::sun::org::apache::xml::internal::serializer::SerializationHandler>> p2) { return call_method<"transform", void>(p1, p2); }
	void transform(jni::ref<com::sun::org::apache::xalan::internal::xsltc::DOM> p1, jni::ref<com::sun::org::apache::xml::internal::dtm::DTMAxisIterator> p2, jni::ref<com::sun::org::apache::xml::internal::serializer::SerializationHandler> p3) { return call_method<"transform", void>(p1, p2, p3); }
	jni::ref<java::lang::Object> addParameter(jni::ref<java::lang::String> p1, jni::ref<java::lang::Object> p2) { return call_method<"addParameter", jni::ref<java::lang::Object>>(p1, p2); }
	void buildKeys(jni::ref<com::sun::org::apache::xalan::internal::xsltc::DOM> p1, jni::ref<com::sun::org::apache::xml::internal::dtm::DTMAxisIterator> p2, jni::ref<com::sun::org::apache::xml::internal::serializer::SerializationHandler> p3, jint p4) { return call_method<"buildKeys", void>(p1, p2, p3, p4); }
	void addAuxiliaryClass(jni::ref<java::lang::Class> p1) { return call_method<"addAuxiliaryClass", void>(p1); }
	jni::ref<java::lang::Class> getAuxiliaryClass(jni::ref<java::lang::String> p1) { return call_method<"getAuxiliaryClass", jni::ref<java::lang::Class>>(p1); }
	jni::ref<jni::array<java::lang::String>> getNamesArray() { return call_method<"getNamesArray", jni::ref<jni::array<java::lang::String>>>(); }
	jni::ref<jni::array<java::lang::String>> getUrisArray() { return call_method<"getUrisArray", jni::ref<jni::array<java::lang::String>>>(); }
	jni::ref<jni::array<jint>> getTypesArray() { return call_method<"getTypesArray", jni::ref<jni::array<jint>>>(); }
	jni::ref<jni::array<java::lang::String>> getNamespaceArray() { return call_method<"getNamespaceArray", jni::ref<jni::array<java::lang::String>>>(); }
	jboolean overrideDefaultParser() { return call_method<"overrideDefaultParser", jboolean>(); }
	void setOverrideDefaultParser(jboolean p1) { return call_method<"setOverrideDefaultParser", void>(p1); }

protected:

	Translet(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_TRANSLET
