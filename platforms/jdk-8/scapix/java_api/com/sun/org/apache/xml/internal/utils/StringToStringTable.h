// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_UTILS_STRINGTOSTRINGTABLE_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_UTILS_STRINGTOSTRINGTABLE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xml::internal::utils { class StringToStringTable; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xml::internal::utils::StringToStringTable>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xml/internal/utils/StringToStringTable";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_UTILS_STRINGTOSTRINGTABLE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_UTILS_STRINGTOSTRINGTABLE)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_UTILS_STRINGTOSTRINGTABLE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xml::internal::utils::StringToStringTable : public jni::object_base<"com/sun/org/apache/xml/internal/utils/StringToStringTable",
	java::lang::Object>
{
public:

	static jni::ref<com::sun::org::apache::xml::internal::utils::StringToStringTable> new_object() { return base_::new_object(); }
	static jni::ref<com::sun::org::apache::xml::internal::utils::StringToStringTable> new_object(jint p1) { return base_::new_object(p1); }
	jint getLength() { return call_method<"getLength", jint>(); }
	void put(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return call_method<"put", void>(p1, p2); }
	jni::ref<java::lang::String> get(jni::ref<java::lang::String> p1) { return call_method<"get", jni::ref<java::lang::String>>(p1); }
	void remove(jni::ref<java::lang::String> p1) { return call_method<"remove", void>(p1); }
	jni::ref<java::lang::String> getIgnoreCase(jni::ref<java::lang::String> p1) { return call_method<"getIgnoreCase", jni::ref<java::lang::String>>(p1); }
	jni::ref<java::lang::String> getByValue(jni::ref<java::lang::String> p1) { return call_method<"getByValue", jni::ref<java::lang::String>>(p1); }
	jni::ref<java::lang::String> elementAt(jint p1) { return call_method<"elementAt", jni::ref<java::lang::String>>(p1); }
	jboolean contains(jni::ref<java::lang::String> p1) { return call_method<"contains", jboolean>(p1); }
	jboolean containsValue(jni::ref<java::lang::String> p1) { return call_method<"containsValue", jboolean>(p1); }

protected:

	StringToStringTable(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_UTILS_STRINGTOSTRINGTABLE
