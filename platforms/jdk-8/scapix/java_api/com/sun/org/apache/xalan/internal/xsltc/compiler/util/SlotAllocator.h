// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_COMPILER_UTIL_SLOTALLOCATOR_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_COMPILER_UTIL_SLOTALLOCATOR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xalan::internal::xsltc::compiler::util { class SlotAllocator; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xalan::internal::xsltc::compiler::util::SlotAllocator>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xalan/internal/xsltc/compiler/util/SlotAllocator";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_COMPILER_UTIL_SLOTALLOCATOR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_COMPILER_UTIL_SLOTALLOCATOR)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_COMPILER_UTIL_SLOTALLOCATOR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/bcel/internal/generic/LocalVariableGen.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/generic/Type.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class com::sun::org::apache::xalan::internal::xsltc::compiler::util::SlotAllocator : public jni::object_base<"com/sun/org/apache/xalan/internal/xsltc/compiler/util/SlotAllocator",
	java::lang::Object>
{
public:

	void initialize(jni::ref<jni::array<com::sun::org::apache::bcel::internal::generic::LocalVariableGen>> p1) { return call_method<"initialize", void>(p1); }
	jint allocateSlot(jni::ref<com::sun::org::apache::bcel::internal::generic::Type> p1) { return call_method<"allocateSlot", jint>(p1); }
	void releaseSlot(jni::ref<com::sun::org::apache::bcel::internal::generic::LocalVariableGen> p1) { return call_method<"releaseSlot", void>(p1); }

protected:

	SlotAllocator(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_COMPILER_UTIL_SLOTALLOCATOR
