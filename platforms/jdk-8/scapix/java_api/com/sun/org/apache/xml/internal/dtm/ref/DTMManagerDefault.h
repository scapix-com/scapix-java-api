// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/org/apache/xml/internal/dtm/DTMManager.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_DTM_REF_DTMMANAGERDEFAULT_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_DTM_REF_DTMMANAGERDEFAULT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xml::internal::dtm::ref { class DTMManagerDefault; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xml::internal::dtm::ref::DTMManagerDefault>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xml/internal/dtm/ref/DTMManagerDefault";
	using base_classes = std::tuple<scapix::java_api::com::sun::org::apache::xml::internal::dtm::DTMManager>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_DTM_REF_DTMMANAGERDEFAULT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_DTM_REF_DTMMANAGERDEFAULT)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_DTM_REF_DTMMANAGERDEFAULT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/xml/internal/dtm/DTM.h>
#include <scapix/java_api/com/sun/org/apache/xml/internal/dtm/DTMFilter.h>
#include <scapix/java_api/com/sun/org/apache/xml/internal/dtm/DTMIterator.h>
#include <scapix/java_api/com/sun/org/apache/xml/internal/dtm/DTMWSFilter.h>
#include <scapix/java_api/com/sun/org/apache/xml/internal/dtm/ref/ExpandedNameTable.h>
#include <scapix/java_api/com/sun/org/apache/xml/internal/utils/PrefixResolver.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/xml/transform/Source.h>
#include <scapix/java_api/org/w3c/dom/Node.h>
#include <scapix/java_api/org/xml/sax/XMLReader.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xml::internal::dtm::ref::DTMManagerDefault : public jni::object_base<"com/sun/org/apache/xml/internal/dtm/ref/DTMManagerDefault",
	com::sun::org::apache::xml::internal::dtm::DTMManager>
{
public:

	void addDTM(jni::ref<com::sun::org::apache::xml::internal::dtm::DTM> p1, jint p2) { return call_method<"addDTM", void>(p1, p2); }
	void addDTM(jni::ref<com::sun::org::apache::xml::internal::dtm::DTM> p1, jint p2, jint p3) { return call_method<"addDTM", void>(p1, p2, p3); }
	jint getFirstFreeDTMID() { return call_method<"getFirstFreeDTMID", jint>(); }
	static jni::ref<com::sun::org::apache::xml::internal::dtm::ref::DTMManagerDefault> new_object() { return base_::new_object(); }
	jni::ref<com::sun::org::apache::xml::internal::dtm::DTM> getDTM(jni::ref<javax::xml::transform::Source> p1, jboolean p2, jni::ref<com::sun::org::apache::xml::internal::dtm::DTMWSFilter> p3, jboolean p4, jboolean p5) { return call_method<"getDTM", jni::ref<com::sun::org::apache::xml::internal::dtm::DTM>>(p1, p2, p3, p4, p5); }
	jint getDTMHandleFromNode(jni::ref<org::w3c::dom::Node> p1) { return call_method<"getDTMHandleFromNode", jint>(p1); }
	jni::ref<org::xml::sax::XMLReader> getXMLReader(jni::ref<javax::xml::transform::Source> p1) { return call_method<"getXMLReader", jni::ref<org::xml::sax::XMLReader>>(p1); }
	void releaseXMLReader(jni::ref<org::xml::sax::XMLReader> p1) { return call_method<"releaseXMLReader", void>(p1); }
	jni::ref<com::sun::org::apache::xml::internal::dtm::DTM> getDTM(jint p1) { return call_method<"getDTM", jni::ref<com::sun::org::apache::xml::internal::dtm::DTM>>(p1); }
	jint getDTMIdentity(jni::ref<com::sun::org::apache::xml::internal::dtm::DTM> p1) { return call_method<"getDTMIdentity", jint>(p1); }
	jboolean release(jni::ref<com::sun::org::apache::xml::internal::dtm::DTM> p1, jboolean p2) { return call_method<"release", jboolean>(p1, p2); }
	jni::ref<com::sun::org::apache::xml::internal::dtm::DTM> createDocumentFragment() { return call_method<"createDocumentFragment", jni::ref<com::sun::org::apache::xml::internal::dtm::DTM>>(); }
	jni::ref<com::sun::org::apache::xml::internal::dtm::DTMIterator> createDTMIterator(jint p1, jni::ref<com::sun::org::apache::xml::internal::dtm::DTMFilter> p2, jboolean p3) { return call_method<"createDTMIterator", jni::ref<com::sun::org::apache::xml::internal::dtm::DTMIterator>>(p1, p2, p3); }
	jni::ref<com::sun::org::apache::xml::internal::dtm::DTMIterator> createDTMIterator(jni::ref<java::lang::String> p1, jni::ref<com::sun::org::apache::xml::internal::utils::PrefixResolver> p2) { return call_method<"createDTMIterator", jni::ref<com::sun::org::apache::xml::internal::dtm::DTMIterator>>(p1, p2); }
	jni::ref<com::sun::org::apache::xml::internal::dtm::DTMIterator> createDTMIterator(jint p1) { return call_method<"createDTMIterator", jni::ref<com::sun::org::apache::xml::internal::dtm::DTMIterator>>(p1); }
	jni::ref<com::sun::org::apache::xml::internal::dtm::DTMIterator> createDTMIterator(jni::ref<java::lang::Object> p1, jint p2) { return call_method<"createDTMIterator", jni::ref<com::sun::org::apache::xml::internal::dtm::DTMIterator>>(p1, p2); }
	jni::ref<com::sun::org::apache::xml::internal::dtm::ref::ExpandedNameTable> getExpandedNameTable(jni::ref<com::sun::org::apache::xml::internal::dtm::DTM> p1) { return call_method<"getExpandedNameTable", jni::ref<com::sun::org::apache::xml::internal::dtm::ref::ExpandedNameTable>>(p1); }

protected:

	DTMManagerDefault(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_DTM_REF_DTMMANAGERDEFAULT
