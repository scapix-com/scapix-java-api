// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/org/apache/xpath/internal/patterns/NodeTest.h>
#include <scapix/java_api/com/sun/org/apache/xpath/internal/axes/SubContextList.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_AXES_PREDICATEDNODETEST_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_AXES_PREDICATEDNODETEST_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xpath::internal::axes { class PredicatedNodeTest; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xpath::internal::axes::PredicatedNodeTest>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xpath/internal/axes/PredicatedNodeTest";
	using base_classes = std::tuple<scapix::java_api::com::sun::org::apache::xpath::internal::patterns::NodeTest, scapix::java_api::com::sun::org::apache::xpath::internal::axes::SubContextList>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_AXES_PREDICATEDNODETEST_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_AXES_PREDICATEDNODETEST)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_AXES_PREDICATEDNODETEST

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/xpath/internal/Expression.h>
#include <scapix/java_api/com/sun/org/apache/xpath/internal/XPathContext.h>
#include <scapix/java_api/com/sun/org/apache/xpath/internal/XPathVisitor.h>
#include <scapix/java_api/com/sun/org/apache/xpath/internal/axes/LocPathIterator.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/util/Vector.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xpath::internal::axes::PredicatedNodeTest : public jni::object_base<"com/sun/org/apache/xpath/internal/axes/PredicatedNodeTest",
	com::sun::org::apache::xpath::internal::patterns::NodeTest,
	com::sun::org::apache::xpath::internal::axes::SubContextList>
{
public:

	jni::ref<java::lang::Object> clone() { return call_method<"clone", jni::ref<java::lang::Object>>(); }
	jint getPredicateCount() { return call_method<"getPredicateCount", jint>(); }
	void setPredicateCount(jint p1) { return call_method<"setPredicateCount", void>(p1); }
	jni::ref<com::sun::org::apache::xpath::internal::Expression> getPredicate(jint p1) { return call_method<"getPredicate", jni::ref<com::sun::org::apache::xpath::internal::Expression>>(p1); }
	jint getProximityPosition() { return call_method<"getProximityPosition", jint>(); }
	jint getProximityPosition(jni::ref<com::sun::org::apache::xpath::internal::XPathContext> p1) { return call_method<"getProximityPosition", jint>(p1); }
	jint getLastPos(jni::ref<com::sun::org::apache::xpath::internal::XPathContext> p1) { return call_method<"getLastPos", jint>(p1); }
	void resetProximityPositions() { return call_method<"resetProximityPositions", void>(); }
	void initProximityPosition(jint p1) { return call_method<"initProximityPosition", void>(p1); }
	jboolean isReverseAxes() { return call_method<"isReverseAxes", jboolean>(); }
	jint getPredicateIndex() { return call_method<"getPredicateIndex", jint>(); }
	void fixupVariables(jni::ref<java::util::Vector> p1, jint p2) { return call_method<"fixupVariables", void>(p1, p2); }
	jshort acceptNode(jint p1) { return call_method<"acceptNode", jshort>(p1); }
	jni::ref<com::sun::org::apache::xpath::internal::axes::LocPathIterator> getLocPathIterator() { return call_method<"getLocPathIterator", jni::ref<com::sun::org::apache::xpath::internal::axes::LocPathIterator>>(); }
	void setLocPathIterator(jni::ref<com::sun::org::apache::xpath::internal::axes::LocPathIterator> p1) { return call_method<"setLocPathIterator", void>(p1); }
	jboolean canTraverseOutsideSubtree() { return call_method<"canTraverseOutsideSubtree", jboolean>(); }
	void callPredicateVisitors(jni::ref<com::sun::org::apache::xpath::internal::XPathVisitor> p1) { return call_method<"callPredicateVisitors", void>(p1); }
	jboolean deepEquals(jni::ref<com::sun::org::apache::xpath::internal::Expression> p1) { return call_method<"deepEquals", jboolean>(p1); }

protected:

	PredicatedNodeTest(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_AXES_PREDICATEDNODETEST
