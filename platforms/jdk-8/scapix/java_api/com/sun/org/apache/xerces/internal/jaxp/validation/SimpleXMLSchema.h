// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/org/apache/xerces/internal/jaxp/validation/AbstractXMLSchema.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/xni/grammars/XMLGrammarPool.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_JAXP_VALIDATION_SIMPLEXMLSCHEMA_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_JAXP_VALIDATION_SIMPLEXMLSCHEMA_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xerces::internal::jaxp::validation { class SimpleXMLSchema; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xerces::internal::jaxp::validation::SimpleXMLSchema>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xerces/internal/jaxp/validation/SimpleXMLSchema";
	using base_classes = std::tuple<scapix::java_api::com::sun::org::apache::xerces::internal::jaxp::validation::AbstractXMLSchema, scapix::java_api::com::sun::org::apache::xerces::internal::xni::grammars::XMLGrammarPool>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_JAXP_VALIDATION_SIMPLEXMLSCHEMA_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_JAXP_VALIDATION_SIMPLEXMLSCHEMA)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_JAXP_VALIDATION_SIMPLEXMLSCHEMA

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/xerces/internal/xni/grammars/Grammar.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/xni/grammars/XMLGrammarDescription.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class com::sun::org::apache::xerces::internal::jaxp::validation::SimpleXMLSchema : public jni::object_base<"com/sun/org/apache/xerces/internal/jaxp/validation/SimpleXMLSchema",
	com::sun::org::apache::xerces::internal::jaxp::validation::AbstractXMLSchema,
	com::sun::org::apache::xerces::internal::xni::grammars::XMLGrammarPool>
{
public:

	static jni::ref<com::sun::org::apache::xerces::internal::jaxp::validation::SimpleXMLSchema> new_object(jni::ref<com::sun::org::apache::xerces::internal::xni::grammars::Grammar> p1) { return base_::new_object(p1); }
	jni::ref<jni::array<com::sun::org::apache::xerces::internal::xni::grammars::Grammar>> retrieveInitialGrammarSet(jni::ref<java::lang::String> p1) { return call_method<"retrieveInitialGrammarSet", jni::ref<jni::array<com::sun::org::apache::xerces::internal::xni::grammars::Grammar>>>(p1); }
	void cacheGrammars(jni::ref<java::lang::String> p1, jni::ref<jni::array<com::sun::org::apache::xerces::internal::xni::grammars::Grammar>> p2) { return call_method<"cacheGrammars", void>(p1, p2); }
	jni::ref<com::sun::org::apache::xerces::internal::xni::grammars::Grammar> retrieveGrammar(jni::ref<com::sun::org::apache::xerces::internal::xni::grammars::XMLGrammarDescription> p1) { return call_method<"retrieveGrammar", jni::ref<com::sun::org::apache::xerces::internal::xni::grammars::Grammar>>(p1); }
	void lockPool() { return call_method<"lockPool", void>(); }
	void unlockPool() { return call_method<"unlockPool", void>(); }
	void clear() { return call_method<"clear", void>(); }
	jni::ref<com::sun::org::apache::xerces::internal::xni::grammars::XMLGrammarPool> getGrammarPool() { return call_method<"getGrammarPool", jni::ref<com::sun::org::apache::xerces::internal::xni::grammars::XMLGrammarPool>>(); }
	jboolean isFullyComposed() { return call_method<"isFullyComposed", jboolean>(); }

protected:

	SimpleXMLSchema(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_JAXP_VALIDATION_SIMPLEXMLSCHEMA
