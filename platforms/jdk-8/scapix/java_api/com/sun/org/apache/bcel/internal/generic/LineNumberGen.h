// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/generic/InstructionTargeter.h>
#include <scapix/java_api/java/lang/Cloneable.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_GENERIC_LINENUMBERGEN_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_GENERIC_LINENUMBERGEN_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::bcel::internal::generic { class LineNumberGen; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::bcel::internal::generic::LineNumberGen>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/bcel/internal/generic/LineNumberGen";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::com::sun::org::apache::bcel::internal::generic::InstructionTargeter, scapix::java_api::java::lang::Cloneable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_GENERIC_LINENUMBERGEN_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_GENERIC_LINENUMBERGEN)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_GENERIC_LINENUMBERGEN

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/LineNumber.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/generic/InstructionHandle.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::bcel::internal::generic::LineNumberGen : public jni::object_base<"com/sun/org/apache/bcel/internal/generic/LineNumberGen",
	java::lang::Object,
	com::sun::org::apache::bcel::internal::generic::InstructionTargeter,
	java::lang::Cloneable>
{
public:

	static jni::ref<com::sun::org::apache::bcel::internal::generic::LineNumberGen> new_object(jni::ref<com::sun::org::apache::bcel::internal::generic::InstructionHandle> p1, jint p2) { return base_::new_object(p1, p2); }
	jni::ref<java::lang::Object> clone() { return call_method<"clone", jni::ref<java::lang::Object>>(); }
	jboolean containsTarget(jni::ref<com::sun::org::apache::bcel::internal::generic::InstructionHandle> p1) { return call_method<"containsTarget", jboolean>(p1); }
	jni::ref<com::sun::org::apache::bcel::internal::generic::InstructionHandle> getInstruction() { return call_method<"getInstruction", jni::ref<com::sun::org::apache::bcel::internal::generic::InstructionHandle>>(); }
	jni::ref<com::sun::org::apache::bcel::internal::classfile::LineNumber> getLineNumber() { return call_method<"getLineNumber", jni::ref<com::sun::org::apache::bcel::internal::classfile::LineNumber>>(); }
	jint getSourceLine() { return call_method<"getSourceLine", jint>(); }
	void setInstruction(jni::ref<com::sun::org::apache::bcel::internal::generic::InstructionHandle> p1) { return call_method<"setInstruction", void>(p1); }
	void setSourceLine(jint p1) { return call_method<"setSourceLine", void>(p1); }
	void updateTarget(jni::ref<com::sun::org::apache::bcel::internal::generic::InstructionHandle> p1, jni::ref<com::sun::org::apache::bcel::internal::generic::InstructionHandle> p2) { return call_method<"updateTarget", void>(p1, p2); }

protected:

	LineNumberGen(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_GENERIC_LINENUMBERGEN
