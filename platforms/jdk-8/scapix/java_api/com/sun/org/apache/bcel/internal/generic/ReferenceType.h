// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/org/apache/bcel/internal/generic/Type.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_GENERIC_REFERENCETYPE_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_GENERIC_REFERENCETYPE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::bcel::internal::generic { class ReferenceType; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::bcel::internal::generic::ReferenceType>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/bcel/internal/generic/ReferenceType";
	using base_classes = std::tuple<scapix::java_api::com::sun::org::apache::bcel::internal::generic::Type>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_GENERIC_REFERENCETYPE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_GENERIC_REFERENCETYPE)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_GENERIC_REFERENCETYPE

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::bcel::internal::generic::ReferenceType : public jni::object_base<"com/sun/org/apache/bcel/internal/generic/ReferenceType",
	com::sun::org::apache::bcel::internal::generic::Type>
{
public:

	jni::ref<com::sun::org::apache::bcel::internal::generic::ReferenceType> firstCommonSuperclass(jni::ref<com::sun::org::apache::bcel::internal::generic::ReferenceType> p1) { return call_method<"firstCommonSuperclass", jni::ref<com::sun::org::apache::bcel::internal::generic::ReferenceType>>(p1); }
	jni::ref<com::sun::org::apache::bcel::internal::generic::ReferenceType> getFirstCommonSuperclass(jni::ref<com::sun::org::apache::bcel::internal::generic::ReferenceType> p1) { return call_method<"getFirstCommonSuperclass", jni::ref<com::sun::org::apache::bcel::internal::generic::ReferenceType>>(p1); }
	jboolean isAssignmentCompatibleWith(jni::ref<com::sun::org::apache::bcel::internal::generic::Type> p1) { return call_method<"isAssignmentCompatibleWith", jboolean>(p1); }
	jboolean isCastableTo(jni::ref<com::sun::org::apache::bcel::internal::generic::Type> p1) { return call_method<"isCastableTo", jboolean>(p1); }

protected:

	ReferenceType(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_GENERIC_REFERENCETYPE
