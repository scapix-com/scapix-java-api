// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/org/apache/xpath/internal/axes/ChildTestIterator.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_AXES_UNIONCHILDITERATOR_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_AXES_UNIONCHILDITERATOR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xpath::internal::axes { class UnionChildIterator; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xpath::internal::axes::UnionChildIterator>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xpath/internal/axes/UnionChildIterator";
	using base_classes = std::tuple<scapix::java_api::com::sun::org::apache::xpath::internal::axes::ChildTestIterator>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_AXES_UNIONCHILDITERATOR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_AXES_UNIONCHILDITERATOR)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_AXES_UNIONCHILDITERATOR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/xpath/internal/axes/PredicatedNodeTest.h>
#include <scapix/java_api/java/util/Vector.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xpath::internal::axes::UnionChildIterator : public jni::object_base<"com/sun/org/apache/xpath/internal/axes/UnionChildIterator",
	com::sun::org::apache::xpath::internal::axes::ChildTestIterator>
{
public:

	static jni::ref<com::sun::org::apache::xpath::internal::axes::UnionChildIterator> new_object() { return base_::new_object(); }
	void addNodeTest(jni::ref<com::sun::org::apache::xpath::internal::axes::PredicatedNodeTest> p1) { return call_method<"addNodeTest", void>(p1); }
	void fixupVariables(jni::ref<java::util::Vector> p1, jint p2) { return call_method<"fixupVariables", void>(p1, p2); }
	jshort acceptNode(jint p1) { return call_method<"acceptNode", jshort>(p1); }

protected:

	UnionChildIterator(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_AXES_UNIONCHILDITERATOR
