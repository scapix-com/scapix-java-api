// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/org/xml/sax/ContentHandler.h>
#include <scapix/java_api/org/xml/sax/ext/LexicalHandler.h>
#include <scapix/java_api/com/sun/org/apache/xalan/internal/xsltc/runtime/Constants.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_TRAX_SAX2DOM_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_TRAX_SAX2DOM_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xalan::internal::xsltc::trax { class SAX2DOM; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xalan::internal::xsltc::trax::SAX2DOM>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xalan/internal/xsltc/trax/SAX2DOM";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::org::xml::sax::ContentHandler, scapix::java_api::org::xml::sax::ext::LexicalHandler, scapix::java_api::com::sun::org::apache::xalan::internal::xsltc::runtime::Constants>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_TRAX_SAX2DOM_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_TRAX_SAX2DOM)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_TRAX_SAX2DOM

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/w3c/dom/Node.h>
#include <scapix/java_api/org/xml/sax/Attributes.h>
#include <scapix/java_api/org/xml/sax/Locator.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xalan::internal::xsltc::trax::SAX2DOM : public jni::object_base<"com/sun/org/apache/xalan/internal/xsltc/trax/SAX2DOM",
	java::lang::Object,
	org::xml::sax::ContentHandler,
	org::xml::sax::ext::LexicalHandler,
	com::sun::org::apache::xalan::internal::xsltc::runtime::Constants>
{
public:

	static jni::ref<com::sun::org::apache::xalan::internal::xsltc::trax::SAX2DOM> new_object(jboolean p1) { return base_::new_object(p1); }
	static jni::ref<com::sun::org::apache::xalan::internal::xsltc::trax::SAX2DOM> new_object(jni::ref<org::w3c::dom::Node> p1, jni::ref<org::w3c::dom::Node> p2, jboolean p3) { return base_::new_object(p1, p2, p3); }
	static jni::ref<com::sun::org::apache::xalan::internal::xsltc::trax::SAX2DOM> new_object(jni::ref<org::w3c::dom::Node> p1, jboolean p2) { return base_::new_object(p1, p2); }
	jni::ref<org::w3c::dom::Node> getDOM() { return call_method<"getDOM", jni::ref<org::w3c::dom::Node>>(); }
	void characters(jni::ref<jni::array<jchar>> p1, jint p2, jint p3) { return call_method<"characters", void>(p1, p2, p3); }
	void startDocument() { return call_method<"startDocument", void>(); }
	void endDocument() { return call_method<"endDocument", void>(); }
	void startElement(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2, jni::ref<java::lang::String> p3, jni::ref<org::xml::sax::Attributes> p4) { return call_method<"startElement", void>(p1, p2, p3, p4); }
	void endElement(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2, jni::ref<java::lang::String> p3) { return call_method<"endElement", void>(p1, p2, p3); }
	void startPrefixMapping(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return call_method<"startPrefixMapping", void>(p1, p2); }
	void endPrefixMapping(jni::ref<java::lang::String> p1) { return call_method<"endPrefixMapping", void>(p1); }
	void ignorableWhitespace(jni::ref<jni::array<jchar>> p1, jint p2, jint p3) { return call_method<"ignorableWhitespace", void>(p1, p2, p3); }
	void processingInstruction(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return call_method<"processingInstruction", void>(p1, p2); }
	void setDocumentLocator(jni::ref<org::xml::sax::Locator> p1) { return call_method<"setDocumentLocator", void>(p1); }
	void skippedEntity(jni::ref<java::lang::String> p1) { return call_method<"skippedEntity", void>(p1); }
	void comment(jni::ref<jni::array<jchar>> p1, jint p2, jint p3) { return call_method<"comment", void>(p1, p2, p3); }
	void startCDATA() { return call_method<"startCDATA", void>(); }
	void endCDATA() { return call_method<"endCDATA", void>(); }
	void startEntity(jni::ref<java::lang::String> p1) { return call_method<"startEntity", void>(p1); }
	void endDTD() { return call_method<"endDTD", void>(); }
	void endEntity(jni::ref<java::lang::String> p1) { return call_method<"endEntity", void>(p1); }
	void startDTD(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2, jni::ref<java::lang::String> p3) { return call_method<"startDTD", void>(p1, p2, p3); }

protected:

	SAX2DOM(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_TRAX_SAX2DOM
