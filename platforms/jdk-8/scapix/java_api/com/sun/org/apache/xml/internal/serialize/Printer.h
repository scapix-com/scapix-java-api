// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_SERIALIZE_PRINTER_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_SERIALIZE_PRINTER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xml::internal::serialize { class Printer; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xml::internal::serialize::Printer>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xml/internal/serialize/Printer";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_SERIALIZE_PRINTER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_SERIALIZE_PRINTER)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_SERIALIZE_PRINTER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/xml/internal/serialize/OutputFormat.h>
#include <scapix/java_api/java/io/IOException.h>
#include <scapix/java_api/java/io/Writer.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/StringBuffer.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xml::internal::serialize::Printer : public jni::object_base<"com/sun/org/apache/xml/internal/serialize/Printer",
	java::lang::Object>
{
public:

	static jni::ref<com::sun::org::apache::xml::internal::serialize::Printer> new_object(jni::ref<java::io::Writer> p1, jni::ref<com::sun::org::apache::xml::internal::serialize::OutputFormat> p2) { return base_::new_object(p1, p2); }
	jni::ref<java::io::IOException> getException() { return call_method<"getException", jni::ref<java::io::IOException>>(); }
	void enterDTD() { return call_method<"enterDTD", void>(); }
	jni::ref<java::lang::String> leaveDTD() { return call_method<"leaveDTD", jni::ref<java::lang::String>>(); }
	void printText(jni::ref<java::lang::String> p1) { return call_method<"printText", void>(p1); }
	void printText(jni::ref<java::lang::StringBuffer> p1) { return call_method<"printText", void>(p1); }
	void printText(jni::ref<jni::array<jchar>> p1, jint p2, jint p3) { return call_method<"printText", void>(p1, p2, p3); }
	void printText(jchar p1) { return call_method<"printText", void>(p1); }
	void printSpace() { return call_method<"printSpace", void>(); }
	void breakLine() { return call_method<"breakLine", void>(); }
	void breakLine(jboolean p1) { return call_method<"breakLine", void>(p1); }
	void flushLine(jboolean p1) { return call_method<"flushLine", void>(p1); }
	void flush() { return call_method<"flush", void>(); }
	void indent() { return call_method<"indent", void>(); }
	void unindent() { return call_method<"unindent", void>(); }
	jint getNextIndent() { return call_method<"getNextIndent", jint>(); }
	void setNextIndent(jint p1) { return call_method<"setNextIndent", void>(p1); }
	void setThisIndent(jint p1) { return call_method<"setThisIndent", void>(p1); }

protected:

	Printer(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_SERIALIZE_PRINTER
