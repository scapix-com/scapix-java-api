// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/org/apache/xml/internal/utils/IntVector.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_UTILS_INTSTACK_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_UTILS_INTSTACK_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xml::internal::utils { class IntStack; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xml::internal::utils::IntStack>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xml/internal/utils/IntStack";
	using base_classes = std::tuple<scapix::java_api::com::sun::org::apache::xml::internal::utils::IntVector>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_UTILS_INTSTACK_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_UTILS_INTSTACK)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_UTILS_INTSTACK

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xml::internal::utils::IntStack : public jni::object_base<"com/sun/org/apache/xml/internal/utils/IntStack",
	com::sun::org::apache::xml::internal::utils::IntVector>
{
public:

	static jni::ref<com::sun::org::apache::xml::internal::utils::IntStack> new_object() { return base_::new_object(); }
	static jni::ref<com::sun::org::apache::xml::internal::utils::IntStack> new_object(jint p1) { return base_::new_object(p1); }
	static jni::ref<com::sun::org::apache::xml::internal::utils::IntStack> new_object(jni::ref<com::sun::org::apache::xml::internal::utils::IntStack> p1) { return base_::new_object(p1); }
	jint push(jint p1) { return call_method<"push", jint>(p1); }
	jint pop() { return call_method<"pop", jint>(); }
	void quickPop(jint p1) { return call_method<"quickPop", void>(p1); }
	jint peek() { return call_method<"peek", jint>(); }
	jint peek(jint p1) { return call_method<"peek", jint>(p1); }
	void setTop(jint p1) { return call_method<"setTop", void>(p1); }
	jboolean empty() { return call_method<"empty", jboolean>(); }
	jint search(jint p1) { return call_method<"search", jint>(p1); }
	jni::ref<java::lang::Object> clone() { return call_method<"clone", jni::ref<java::lang::Object>>(); }

protected:

	IntStack(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_UTILS_INTSTACK
