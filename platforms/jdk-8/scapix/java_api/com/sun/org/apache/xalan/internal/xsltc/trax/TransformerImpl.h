// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/xml/transform/Transformer.h>
#include <scapix/java_api/com/sun/org/apache/xalan/internal/xsltc/DOMCache.h>
#include <scapix/java_api/javax/xml/transform/ErrorListener.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_TRAX_TRANSFORMERIMPL_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_TRAX_TRANSFORMERIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xalan::internal::xsltc::trax { class TransformerImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xalan::internal::xsltc::trax::TransformerImpl>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xalan/internal/xsltc/trax/TransformerImpl";
	using base_classes = std::tuple<scapix::java_api::javax::xml::transform::Transformer, scapix::java_api::com::sun::org::apache::xalan::internal::xsltc::DOMCache, scapix::java_api::javax::xml::transform::ErrorListener>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_TRAX_TRANSFORMERIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_TRAX_TRANSFORMERIMPL)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_TRAX_TRANSFORMERIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/xalan/internal/xsltc/DOM.h>
#include <scapix/java_api/com/sun/org/apache/xalan/internal/xsltc/Translet.h>
#include <scapix/java_api/com/sun/org/apache/xml/internal/serializer/SerializationHandler.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Properties.h>
#include <scapix/java_api/javax/xml/transform/Result.h>
#include <scapix/java_api/javax/xml/transform/Source.h>
#include <scapix/java_api/javax/xml/transform/TransformerException.h>
#include <scapix/java_api/javax/xml/transform/URIResolver.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xalan::internal::xsltc::trax::TransformerImpl : public jni::object_base<"com/sun/org/apache/xalan/internal/xsltc/trax/TransformerImpl",
	javax::xml::transform::Transformer,
	com::sun::org::apache::xalan::internal::xsltc::DOMCache,
	javax::xml::transform::ErrorListener>
{
public:

	jboolean isSecureProcessing() { return call_method<"isSecureProcessing", jboolean>(); }
	void setSecureProcessing(jboolean p1) { return call_method<"setSecureProcessing", void>(p1); }
	jboolean overrideDefaultParser() { return call_method<"overrideDefaultParser", jboolean>(); }
	void setOverrideDefaultParser(jboolean p1) { return call_method<"setOverrideDefaultParser", void>(p1); }
	jboolean isIdentity() { return call_method<"isIdentity", jboolean>(); }
	void transform(jni::ref<javax::xml::transform::Source> p1, jni::ref<javax::xml::transform::Result> p2) { return call_method<"transform", void>(p1, p2); }
	jni::ref<com::sun::org::apache::xml::internal::serializer::SerializationHandler> getOutputHandler(jni::ref<javax::xml::transform::Result> p1) { return call_method<"getOutputHandler", jni::ref<com::sun::org::apache::xml::internal::serializer::SerializationHandler>>(p1); }
	jni::ref<javax::xml::transform::ErrorListener> getErrorListener() { return call_method<"getErrorListener", jni::ref<javax::xml::transform::ErrorListener>>(); }
	void setErrorListener(jni::ref<javax::xml::transform::ErrorListener> p1) { return call_method<"setErrorListener", void>(p1); }
	jni::ref<java::util::Properties> getOutputProperties() { return call_method<"getOutputProperties", jni::ref<java::util::Properties>>(); }
	jni::ref<java::lang::String> getOutputProperty(jni::ref<java::lang::String> p1) { return call_method<"getOutputProperty", jni::ref<java::lang::String>>(p1); }
	void setOutputProperties(jni::ref<java::util::Properties> p1) { return call_method<"setOutputProperties", void>(p1); }
	void setOutputProperty(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return call_method<"setOutputProperty", void>(p1, p2); }
	void transferOutputProperties(jni::ref<com::sun::org::apache::xml::internal::serializer::SerializationHandler> p1) { return call_method<"transferOutputProperties", void>(p1); }
	void setParameter(jni::ref<java::lang::String> p1, jni::ref<java::lang::Object> p2) { return call_method<"setParameter", void>(p1, p2); }
	void clearParameters() { return call_method<"clearParameters", void>(); }
	jni::ref<java::lang::Object> getParameter(jni::ref<java::lang::String> p1) { return call_method<"getParameter", jni::ref<java::lang::Object>>(p1); }
	jni::ref<javax::xml::transform::URIResolver> getURIResolver() { return call_method<"getURIResolver", jni::ref<javax::xml::transform::URIResolver>>(); }
	void setURIResolver(jni::ref<javax::xml::transform::URIResolver> p1) { return call_method<"setURIResolver", void>(p1); }
	jni::ref<com::sun::org::apache::xalan::internal::xsltc::DOM> retrieveDocument(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2, jni::ref<com::sun::org::apache::xalan::internal::xsltc::Translet> p3) { return call_method<"retrieveDocument", jni::ref<com::sun::org::apache::xalan::internal::xsltc::DOM>>(p1, p2, p3); }
	void error(jni::ref<javax::xml::transform::TransformerException> p1) { return call_method<"error", void>(p1); }
	void fatalError(jni::ref<javax::xml::transform::TransformerException> p1) { return call_method<"fatalError", void>(p1); }
	void warning(jni::ref<javax::xml::transform::TransformerException> p1) { return call_method<"warning", void>(p1); }
	void reset() { return call_method<"reset", void>(); }

protected:

	TransformerImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_TRAX_TRANSFORMERIMPL
