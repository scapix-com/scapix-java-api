// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/org/apache/xerces/internal/xni/parser/XMLInputSource.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_UTIL_SAXINPUTSOURCE_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_UTIL_SAXINPUTSOURCE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xerces::internal::util { class SAXInputSource; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xerces::internal::util::SAXInputSource>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xerces/internal/util/SAXInputSource";
	using base_classes = std::tuple<scapix::java_api::com::sun::org::apache::xerces::internal::xni::parser::XMLInputSource>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_UTIL_SAXINPUTSOURCE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_UTIL_SAXINPUTSOURCE)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_UTIL_SAXINPUTSOURCE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/io/Reader.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/xml/sax/InputSource.h>
#include <scapix/java_api/org/xml/sax/XMLReader.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xerces::internal::util::SAXInputSource : public jni::object_base<"com/sun/org/apache/xerces/internal/util/SAXInputSource",
	com::sun::org::apache::xerces::internal::xni::parser::XMLInputSource>
{
public:

	static jni::ref<com::sun::org::apache::xerces::internal::util::SAXInputSource> new_object() { return base_::new_object(); }
	static jni::ref<com::sun::org::apache::xerces::internal::util::SAXInputSource> new_object(jni::ref<org::xml::sax::InputSource> p1) { return base_::new_object(p1); }
	static jni::ref<com::sun::org::apache::xerces::internal::util::SAXInputSource> new_object(jni::ref<org::xml::sax::XMLReader> p1, jni::ref<org::xml::sax::InputSource> p2) { return base_::new_object(p1, p2); }
	void setXMLReader(jni::ref<org::xml::sax::XMLReader> p1) { return call_method<"setXMLReader", void>(p1); }
	jni::ref<org::xml::sax::XMLReader> getXMLReader() { return call_method<"getXMLReader", jni::ref<org::xml::sax::XMLReader>>(); }
	void setInputSource(jni::ref<org::xml::sax::InputSource> p1) { return call_method<"setInputSource", void>(p1); }
	jni::ref<org::xml::sax::InputSource> getInputSource() { return call_method<"getInputSource", jni::ref<org::xml::sax::InputSource>>(); }
	void setPublicId(jni::ref<java::lang::String> p1) { return call_method<"setPublicId", void>(p1); }
	void setSystemId(jni::ref<java::lang::String> p1) { return call_method<"setSystemId", void>(p1); }
	void setByteStream(jni::ref<java::io::InputStream> p1) { return call_method<"setByteStream", void>(p1); }
	void setCharacterStream(jni::ref<java::io::Reader> p1) { return call_method<"setCharacterStream", void>(p1); }
	void setEncoding(jni::ref<java::lang::String> p1) { return call_method<"setEncoding", void>(p1); }

protected:

	SAXInputSource(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_UTIL_SAXINPUTSOURCE
