// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_UTIL_INSTRUCTIONFINDER_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_UTIL_INSTRUCTIONFINDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::bcel::internal::util { class InstructionFinder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::bcel::internal::util::InstructionFinder>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/bcel/internal/util/InstructionFinder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_UTIL_INSTRUCTIONFINDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_UTIL_INSTRUCTIONFINDER)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_UTIL_INSTRUCTIONFINDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/bcel/internal/generic/InstructionHandle.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/generic/InstructionList.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/util/InstructionFinder_CodeConstraint.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Iterator.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::bcel::internal::util::InstructionFinder : public jni::object_base<"com/sun/org/apache/bcel/internal/util/InstructionFinder",
	java::lang::Object>
{
public:

	using CodeConstraint = InstructionFinder_CodeConstraint;

	static jni::ref<com::sun::org::apache::bcel::internal::util::InstructionFinder> new_object(jni::ref<com::sun::org::apache::bcel::internal::generic::InstructionList> p1) { return base_::new_object(p1); }
	jni::ref<com::sun::org::apache::bcel::internal::generic::InstructionList> getInstructionList() { return call_method<"getInstructionList", jni::ref<com::sun::org::apache::bcel::internal::generic::InstructionList>>(); }
	void reread() { return call_method<"reread", void>(); }
	jni::ref<java::util::Iterator> search(jni::ref<java::lang::String> p1) { return call_method<"search", jni::ref<java::util::Iterator>>(p1); }
	jni::ref<java::util::Iterator> search(jni::ref<java::lang::String> p1, jni::ref<com::sun::org::apache::bcel::internal::util::InstructionFinder_CodeConstraint> p2) { return call_method<"search", jni::ref<java::util::Iterator>>(p1, p2); }
	jni::ref<java::util::Iterator> search(jni::ref<java::lang::String> p1, jni::ref<com::sun::org::apache::bcel::internal::generic::InstructionHandle> p2) { return call_method<"search", jni::ref<java::util::Iterator>>(p1, p2); }
	jni::ref<java::util::Iterator> search(jni::ref<java::lang::String> p1, jni::ref<com::sun::org::apache::bcel::internal::generic::InstructionHandle> p2, jni::ref<com::sun::org::apache::bcel::internal::util::InstructionFinder_CodeConstraint> p3) { return call_method<"search", jni::ref<java::util::Iterator>>(p1, p2, p3); }

protected:

	InstructionFinder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_UTIL_INSTRUCTIONFINDER
