// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_COMPILER_TESTSEQ_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_COMPILER_TESTSEQ_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xalan::internal::xsltc::compiler { class TestSeq; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xalan::internal::xsltc::compiler::TestSeq>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xalan/internal/xsltc/compiler/TestSeq";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_COMPILER_TESTSEQ_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_COMPILER_TESTSEQ)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_COMPILER_TESTSEQ

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/bcel/internal/generic/InstructionHandle.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/generic/InstructionList.h>
#include <scapix/java_api/com/sun/org/apache/xalan/internal/xsltc/compiler/Mode.h>
#include <scapix/java_api/com/sun/org/apache/xalan/internal/xsltc/compiler/util/ClassGenerator.h>
#include <scapix/java_api/com/sun/org/apache/xalan/internal/xsltc/compiler/util/MethodGenerator.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Map.h>
#include <scapix/java_api/java/util/Vector.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class com::sun::org::apache::xalan::internal::xsltc::compiler::TestSeq : public jni::object_base<"com/sun/org/apache/xalan/internal/xsltc/compiler/TestSeq",
	java::lang::Object>
{
public:

	static jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::TestSeq> new_object(jni::ref<java::util::Vector> p1, jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::Mode> p2) { return base_::new_object(p1, p2); }
	static jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::TestSeq> new_object(jni::ref<java::util::Vector> p1, jint p2, jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::Mode> p3) { return base_::new_object(p1, p2, p3); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jni::ref<com::sun::org::apache::bcel::internal::generic::InstructionList> getInstructionList() { return call_method<"getInstructionList", jni::ref<com::sun::org::apache::bcel::internal::generic::InstructionList>>(); }
	jdouble getPriority() { return call_method<"getPriority", jdouble>(); }
	jint getPosition() { return call_method<"getPosition", jint>(); }
	void reduce() { return call_method<"reduce", void>(); }
	void findTemplates(jni::ref<java::util::Map> p1) { return call_method<"findTemplates", void>(p1); }
	jni::ref<com::sun::org::apache::bcel::internal::generic::InstructionHandle> compile(jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::util::ClassGenerator> p1, jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::util::MethodGenerator> p2, jni::ref<com::sun::org::apache::bcel::internal::generic::InstructionHandle> p3) { return call_method<"compile", jni::ref<com::sun::org::apache::bcel::internal::generic::InstructionHandle>>(p1, p2, p3); }

protected:

	TestSeq(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_COMPILER_TESTSEQ
