// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/xml/datatype/Duration.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_JAXP_DATATYPE_DURATIONIMPL_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_JAXP_DATATYPE_DURATIONIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xerces::internal::jaxp::datatype { class DurationImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xerces::internal::jaxp::datatype::DurationImpl>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xerces/internal/jaxp/datatype/DurationImpl";
	using base_classes = std::tuple<scapix::java_api::javax::xml::datatype::Duration, scapix::java_api::java::io::Serializable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_JAXP_DATATYPE_DURATIONIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_JAXP_DATATYPE_DURATIONIMPL)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_JAXP_DATATYPE_DURATIONIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Number.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/math/BigDecimal.h>
#include <scapix/java_api/java/util/Calendar.h>
#include <scapix/java_api/java/util/Date.h>
#include <scapix/java_api/javax/xml/datatype/DatatypeConstants_Field.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class com::sun::org::apache::xerces::internal::jaxp::datatype::DurationImpl : public jni::object_base<"com/sun/org/apache/xerces/internal/jaxp/datatype/DurationImpl",
	javax::xml::datatype::Duration,
	java::io::Serializable>
{
public:

	jint getSign() { return call_method<"getSign", jint>(); }
	jint compare(jni::ref<javax::xml::datatype::Duration> p1) { return call_method<"compare", jint>(p1); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jboolean isSet(jni::ref<javax::xml::datatype::DatatypeConstants_Field> p1) { return call_method<"isSet", jboolean>(p1); }
	jni::ref<java::lang::Number> getField(jni::ref<javax::xml::datatype::DatatypeConstants_Field> p1) { return call_method<"getField", jni::ref<java::lang::Number>>(p1); }
	jint getYears() { return call_method<"getYears", jint>(); }
	jint getMonths() { return call_method<"getMonths", jint>(); }
	jint getDays() { return call_method<"getDays", jint>(); }
	jint getHours() { return call_method<"getHours", jint>(); }
	jint getMinutes() { return call_method<"getMinutes", jint>(); }
	jint getSeconds() { return call_method<"getSeconds", jint>(); }
	jlong getTimeInMillis(jni::ref<java::util::Calendar> p1) { return call_method<"getTimeInMillis", jlong>(p1); }
	jlong getTimeInMillis(jni::ref<java::util::Date> p1) { return call_method<"getTimeInMillis", jlong>(p1); }
	jni::ref<javax::xml::datatype::Duration> normalizeWith(jni::ref<java::util::Calendar> p1) { return call_method<"normalizeWith", jni::ref<javax::xml::datatype::Duration>>(p1); }
	jni::ref<javax::xml::datatype::Duration> multiply(jint p1) { return call_method<"multiply", jni::ref<javax::xml::datatype::Duration>>(p1); }
	jni::ref<javax::xml::datatype::Duration> multiply(jni::ref<java::math::BigDecimal> p1) { return call_method<"multiply", jni::ref<javax::xml::datatype::Duration>>(p1); }
	jni::ref<javax::xml::datatype::Duration> add(jni::ref<javax::xml::datatype::Duration> p1) { return call_method<"add", jni::ref<javax::xml::datatype::Duration>>(p1); }
	jni::ref<javax::xml::datatype::Duration> subtract(jni::ref<javax::xml::datatype::Duration> p1) { return call_method<"subtract", jni::ref<javax::xml::datatype::Duration>>(p1); }
	jni::ref<javax::xml::datatype::Duration> negate() { return call_method<"negate", jni::ref<javax::xml::datatype::Duration>>(); }
	jint signum() { return call_method<"signum", jint>(); }
	void addTo(jni::ref<java::util::Calendar> p1) { return call_method<"addTo", void>(p1); }
	void addTo(jni::ref<java::util::Date> p1) { return call_method<"addTo", void>(p1); }

protected:

	DurationImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_JAXP_DATATYPE_DURATIONIMPL
