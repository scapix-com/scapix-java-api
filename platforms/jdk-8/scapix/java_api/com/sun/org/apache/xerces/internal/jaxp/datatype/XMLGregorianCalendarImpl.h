// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/xml/datatype/XMLGregorianCalendar.h>
#include <scapix/java_api/java/io/Serializable.h>
#include <scapix/java_api/java/lang/Cloneable.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_JAXP_DATATYPE_XMLGREGORIANCALENDARIMPL_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_JAXP_DATATYPE_XMLGREGORIANCALENDARIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xerces::internal::jaxp::datatype { class XMLGregorianCalendarImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xerces::internal::jaxp::datatype::XMLGregorianCalendarImpl>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xerces/internal/jaxp/datatype/XMLGregorianCalendarImpl";
	using base_classes = std::tuple<scapix::java_api::javax::xml::datatype::XMLGregorianCalendar, scapix::java_api::java::io::Serializable, scapix::java_api::java::lang::Cloneable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_JAXP_DATATYPE_XMLGREGORIANCALENDARIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_JAXP_DATATYPE_XMLGREGORIANCALENDARIMPL)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_JAXP_DATATYPE_XMLGREGORIANCALENDARIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/math/BigDecimal.h>
#include <scapix/java_api/java/math/BigInteger.h>
#include <scapix/java_api/java/util/GregorianCalendar.h>
#include <scapix/java_api/java/util/Locale.h>
#include <scapix/java_api/java/util/TimeZone.h>
#include <scapix/java_api/javax/xml/datatype/Duration.h>
#include <scapix/java_api/javax/xml/namespace/QName.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xerces::internal::jaxp::datatype::XMLGregorianCalendarImpl : public jni::object_base<"com/sun/org/apache/xerces/internal/jaxp/datatype/XMLGregorianCalendarImpl",
	javax::xml::datatype::XMLGregorianCalendar,
	java::io::Serializable,
	java::lang::Cloneable>
{
public:

	static jni::ref<javax::xml::datatype::XMLGregorianCalendar> LEAP_YEAR_DEFAULT() { return get_static_field<"LEAP_YEAR_DEFAULT", jni::ref<javax::xml::datatype::XMLGregorianCalendar>>(); }

	static jni::ref<com::sun::org::apache::xerces::internal::jaxp::datatype::XMLGregorianCalendarImpl> new_object() { return base_::new_object(); }
	static jni::ref<com::sun::org::apache::xerces::internal::jaxp::datatype::XMLGregorianCalendarImpl> new_object(jni::ref<java::util::GregorianCalendar> p1) { return base_::new_object(p1); }
	static jni::ref<javax::xml::datatype::XMLGregorianCalendar> createDateTime(jni::ref<java::math::BigInteger> p1, jint p2, jint p3, jint p4, jint p5, jint p6, jni::ref<java::math::BigDecimal> p7, jint p8) { return call_static_method<"createDateTime", jni::ref<javax::xml::datatype::XMLGregorianCalendar>>(p1, p2, p3, p4, p5, p6, p7, p8); }
	static jni::ref<javax::xml::datatype::XMLGregorianCalendar> createDateTime(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6) { return call_static_method<"createDateTime", jni::ref<javax::xml::datatype::XMLGregorianCalendar>>(p1, p2, p3, p4, p5, p6); }
	static jni::ref<javax::xml::datatype::XMLGregorianCalendar> createDateTime(jint p1, jint p2, jint p3, jint p4, jint p5, jint p6, jint p7, jint p8) { return call_static_method<"createDateTime", jni::ref<javax::xml::datatype::XMLGregorianCalendar>>(p1, p2, p3, p4, p5, p6, p7, p8); }
	static jni::ref<javax::xml::datatype::XMLGregorianCalendar> createDate(jint p1, jint p2, jint p3, jint p4) { return call_static_method<"createDate", jni::ref<javax::xml::datatype::XMLGregorianCalendar>>(p1, p2, p3, p4); }
	static jni::ref<javax::xml::datatype::XMLGregorianCalendar> createTime(jint p1, jint p2, jint p3, jint p4) { return call_static_method<"createTime", jni::ref<javax::xml::datatype::XMLGregorianCalendar>>(p1, p2, p3, p4); }
	static jni::ref<javax::xml::datatype::XMLGregorianCalendar> createTime(jint p1, jint p2, jint p3, jni::ref<java::math::BigDecimal> p4, jint p5) { return call_static_method<"createTime", jni::ref<javax::xml::datatype::XMLGregorianCalendar>>(p1, p2, p3, p4, p5); }
	static jni::ref<javax::xml::datatype::XMLGregorianCalendar> createTime(jint p1, jint p2, jint p3, jint p4, jint p5) { return call_static_method<"createTime", jni::ref<javax::xml::datatype::XMLGregorianCalendar>>(p1, p2, p3, p4, p5); }
	jni::ref<java::math::BigInteger> getEon() { return call_method<"getEon", jni::ref<java::math::BigInteger>>(); }
	jint getYear() { return call_method<"getYear", jint>(); }
	jni::ref<java::math::BigInteger> getEonAndYear() { return call_method<"getEonAndYear", jni::ref<java::math::BigInteger>>(); }
	jint getMonth() { return call_method<"getMonth", jint>(); }
	jint getDay() { return call_method<"getDay", jint>(); }
	jint getTimezone() { return call_method<"getTimezone", jint>(); }
	jint getHour() { return call_method<"getHour", jint>(); }
	jint getMinute() { return call_method<"getMinute", jint>(); }
	jint getSecond() { return call_method<"getSecond", jint>(); }
	jint getMillisecond() { return call_method<"getMillisecond", jint>(); }
	jni::ref<java::math::BigDecimal> getFractionalSecond() { return call_method<"getFractionalSecond", jni::ref<java::math::BigDecimal>>(); }
	void setYear(jni::ref<java::math::BigInteger> p1) { return call_method<"setYear", void>(p1); }
	void setYear(jint p1) { return call_method<"setYear", void>(p1); }
	void setMonth(jint p1) { return call_method<"setMonth", void>(p1); }
	void setDay(jint p1) { return call_method<"setDay", void>(p1); }
	void setTimezone(jint p1) { return call_method<"setTimezone", void>(p1); }
	void setTime(jint p1, jint p2, jint p3) { return call_method<"setTime", void>(p1, p2, p3); }
	void setHour(jint p1) { return call_method<"setHour", void>(p1); }
	void setMinute(jint p1) { return call_method<"setMinute", void>(p1); }
	void setSecond(jint p1) { return call_method<"setSecond", void>(p1); }
	void setTime(jint p1, jint p2, jint p3, jni::ref<java::math::BigDecimal> p4) { return call_method<"setTime", void>(p1, p2, p3, p4); }
	void setTime(jint p1, jint p2, jint p3, jint p4) { return call_method<"setTime", void>(p1, p2, p3, p4); }
	jint compare(jni::ref<javax::xml::datatype::XMLGregorianCalendar> p1) { return call_method<"compare", jint>(p1); }
	jni::ref<javax::xml::datatype::XMLGregorianCalendar> normalize() { return call_method<"normalize", jni::ref<javax::xml::datatype::XMLGregorianCalendar>>(); }
	jboolean equals(jni::ref<java::lang::Object> p1) { return call_method<"equals", jboolean>(p1); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	static jni::ref<javax::xml::datatype::XMLGregorianCalendar> parse(jni::ref<java::lang::String> p1) { return call_static_method<"parse", jni::ref<javax::xml::datatype::XMLGregorianCalendar>>(p1); }
	jni::ref<java::lang::String> toXMLFormat() { return call_method<"toXMLFormat", jni::ref<java::lang::String>>(); }
	jni::ref<javax::xml::namespace_::QName> getXMLSchemaType() { return call_method<"getXMLSchemaType", jni::ref<javax::xml::namespace_::QName>>(); }
	jboolean isValid() { return call_method<"isValid", jboolean>(); }
	void add(jni::ref<javax::xml::datatype::Duration> p1) { return call_method<"add", void>(p1); }
	jni::ref<java::util::GregorianCalendar> toGregorianCalendar() { return call_method<"toGregorianCalendar", jni::ref<java::util::GregorianCalendar>>(); }
	jni::ref<java::util::GregorianCalendar> toGregorianCalendar(jni::ref<java::util::TimeZone> p1, jni::ref<java::util::Locale> p2, jni::ref<javax::xml::datatype::XMLGregorianCalendar> p3) { return call_method<"toGregorianCalendar", jni::ref<java::util::GregorianCalendar>>(p1, p2, p3); }
	jni::ref<java::util::TimeZone> getTimeZone(jint p1) { return call_method<"getTimeZone", jni::ref<java::util::TimeZone>>(p1); }
	jni::ref<java::lang::Object> clone() { return call_method<"clone", jni::ref<java::lang::Object>>(); }
	void clear() { return call_method<"clear", void>(); }
	void setMillisecond(jint p1) { return call_method<"setMillisecond", void>(p1); }
	void setFractionalSecond(jni::ref<java::math::BigDecimal> p1) { return call_method<"setFractionalSecond", void>(p1); }
	void reset() { return call_method<"reset", void>(); }

protected:

	XMLGregorianCalendarImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_JAXP_DATATYPE_XMLGREGORIANCALENDARIMPL
