// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_CACHEDXPATHAPI_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_CACHEDXPATHAPI_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xpath::internal { class CachedXPathAPI; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xpath::internal::CachedXPathAPI>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xpath/internal/CachedXPathAPI";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_CACHEDXPATHAPI_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_CACHEDXPATHAPI)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_CACHEDXPATHAPI

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/xml/internal/utils/PrefixResolver.h>
#include <scapix/java_api/com/sun/org/apache/xpath/internal/XPathContext.h>
#include <scapix/java_api/com/sun/org/apache/xpath/internal/objects/XObject.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/w3c/dom/Node.h>
#include <scapix/java_api/org/w3c/dom/NodeList.h>
#include <scapix/java_api/org/w3c/dom/traversal/NodeIterator.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xpath::internal::CachedXPathAPI : public jni::object_base<"com/sun/org/apache/xpath/internal/CachedXPathAPI",
	java::lang::Object>
{
public:

	static jni::ref<com::sun::org::apache::xpath::internal::CachedXPathAPI> new_object() { return base_::new_object(); }
	static jni::ref<com::sun::org::apache::xpath::internal::CachedXPathAPI> new_object(jni::ref<com::sun::org::apache::xpath::internal::CachedXPathAPI> p1) { return base_::new_object(p1); }
	jni::ref<com::sun::org::apache::xpath::internal::XPathContext> getXPathContext() { return call_method<"getXPathContext", jni::ref<com::sun::org::apache::xpath::internal::XPathContext>>(); }
	jni::ref<org::w3c::dom::Node> selectSingleNode(jni::ref<org::w3c::dom::Node> p1, jni::ref<java::lang::String> p2) { return call_method<"selectSingleNode", jni::ref<org::w3c::dom::Node>>(p1, p2); }
	jni::ref<org::w3c::dom::Node> selectSingleNode(jni::ref<org::w3c::dom::Node> p1, jni::ref<java::lang::String> p2, jni::ref<org::w3c::dom::Node> p3) { return call_method<"selectSingleNode", jni::ref<org::w3c::dom::Node>>(p1, p2, p3); }
	jni::ref<org::w3c::dom::traversal::NodeIterator> selectNodeIterator(jni::ref<org::w3c::dom::Node> p1, jni::ref<java::lang::String> p2) { return call_method<"selectNodeIterator", jni::ref<org::w3c::dom::traversal::NodeIterator>>(p1, p2); }
	jni::ref<org::w3c::dom::traversal::NodeIterator> selectNodeIterator(jni::ref<org::w3c::dom::Node> p1, jni::ref<java::lang::String> p2, jni::ref<org::w3c::dom::Node> p3) { return call_method<"selectNodeIterator", jni::ref<org::w3c::dom::traversal::NodeIterator>>(p1, p2, p3); }
	jni::ref<org::w3c::dom::NodeList> selectNodeList(jni::ref<org::w3c::dom::Node> p1, jni::ref<java::lang::String> p2) { return call_method<"selectNodeList", jni::ref<org::w3c::dom::NodeList>>(p1, p2); }
	jni::ref<org::w3c::dom::NodeList> selectNodeList(jni::ref<org::w3c::dom::Node> p1, jni::ref<java::lang::String> p2, jni::ref<org::w3c::dom::Node> p3) { return call_method<"selectNodeList", jni::ref<org::w3c::dom::NodeList>>(p1, p2, p3); }
	jni::ref<com::sun::org::apache::xpath::internal::objects::XObject> eval(jni::ref<org::w3c::dom::Node> p1, jni::ref<java::lang::String> p2) { return call_method<"eval", jni::ref<com::sun::org::apache::xpath::internal::objects::XObject>>(p1, p2); }
	jni::ref<com::sun::org::apache::xpath::internal::objects::XObject> eval(jni::ref<org::w3c::dom::Node> p1, jni::ref<java::lang::String> p2, jni::ref<org::w3c::dom::Node> p3) { return call_method<"eval", jni::ref<com::sun::org::apache::xpath::internal::objects::XObject>>(p1, p2, p3); }
	jni::ref<com::sun::org::apache::xpath::internal::objects::XObject> eval(jni::ref<org::w3c::dom::Node> p1, jni::ref<java::lang::String> p2, jni::ref<com::sun::org::apache::xml::internal::utils::PrefixResolver> p3) { return call_method<"eval", jni::ref<com::sun::org::apache::xpath::internal::objects::XObject>>(p1, p2, p3); }

protected:

	CachedXPathAPI(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_CACHEDXPATHAPI
