// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_UTILS_THREADCONTROLLERWRAPPER_THREADCONTROLLER_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_UTILS_THREADCONTROLLERWRAPPER_THREADCONTROLLER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xml::internal::utils { class ThreadControllerWrapper_ThreadController; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xml::internal::utils::ThreadControllerWrapper_ThreadController>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xml/internal/utils/ThreadControllerWrapper$ThreadController";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_UTILS_THREADCONTROLLERWRAPPER_THREADCONTROLLER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_UTILS_THREADCONTROLLERWRAPPER_THREADCONTROLLER)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_UTILS_THREADCONTROLLERWRAPPER_THREADCONTROLLER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Runnable.h>
#include <scapix/java_api/java/lang/Thread.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xml::internal::utils::ThreadControllerWrapper_ThreadController : public jni::object_base<"com/sun/org/apache/xml/internal/utils/ThreadControllerWrapper$ThreadController",
	java::lang::Object>
{
public:

	static jni::ref<com::sun::org::apache::xml::internal::utils::ThreadControllerWrapper_ThreadController> new_object() { return base_::new_object(); }
	jni::ref<java::lang::Thread> run(jni::ref<java::lang::Runnable> p1, jint p2) { return call_method<"run", jni::ref<java::lang::Thread>>(p1, p2); }
	void waitThread(jni::ref<java::lang::Thread> p1, jni::ref<java::lang::Runnable> p2) { return call_method<"waitThread", void>(p1, p2); }

protected:

	ThreadControllerWrapper_ThreadController(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_UTILS_THREADCONTROLLERWRAPPER_THREADCONTROLLER
