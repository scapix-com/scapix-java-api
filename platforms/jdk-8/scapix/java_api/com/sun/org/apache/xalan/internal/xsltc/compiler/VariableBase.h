// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/org/apache/xalan/internal/xsltc/compiler/TopLevelElement.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_COMPILER_VARIABLEBASE_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_COMPILER_VARIABLEBASE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xalan::internal::xsltc::compiler { class VariableBase; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xalan::internal::xsltc::compiler::VariableBase>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xalan/internal/xsltc/compiler/VariableBase";
	using base_classes = std::tuple<scapix::java_api::com::sun::org::apache::xalan::internal::xsltc::compiler::TopLevelElement>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_COMPILER_VARIABLEBASE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_COMPILER_VARIABLEBASE)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_COMPILER_VARIABLEBASE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/bcel/internal/generic/Instruction.h>
#include <scapix/java_api/com/sun/org/apache/xalan/internal/xsltc/compiler/Expression.h>
#include <scapix/java_api/com/sun/org/apache/xalan/internal/xsltc/compiler/Parser.h>
#include <scapix/java_api/com/sun/org/apache/xalan/internal/xsltc/compiler/QName.h>
#include <scapix/java_api/com/sun/org/apache/xalan/internal/xsltc/compiler/VariableRefBase.h>
#include <scapix/java_api/com/sun/org/apache/xalan/internal/xsltc/compiler/util/ClassGenerator.h>
#include <scapix/java_api/com/sun/org/apache/xalan/internal/xsltc/compiler/util/MethodGenerator.h>
#include <scapix/java_api/com/sun/org/apache/xalan/internal/xsltc/compiler/util/Type.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class com::sun::org::apache::xalan::internal::xsltc::compiler::VariableBase : public jni::object_base<"com/sun/org/apache/xalan/internal/xsltc/compiler/VariableBase",
	com::sun::org::apache::xalan::internal::xsltc::compiler::TopLevelElement>
{
public:

	void disable() { return call_method<"disable", void>(); }
	void addReference(jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::VariableRefBase> p1) { return call_method<"addReference", void>(p1); }
	void copyReferences(jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::VariableBase> p1) { return call_method<"copyReferences", void>(p1); }
	void mapRegister(jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::util::MethodGenerator> p1) { return call_method<"mapRegister", void>(p1); }
	void unmapRegister(jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::util::ClassGenerator> p1, jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::util::MethodGenerator> p2) { return call_method<"unmapRegister", void>(p1, p2); }
	jni::ref<com::sun::org::apache::bcel::internal::generic::Instruction> loadInstruction() { return call_method<"loadInstruction", jni::ref<com::sun::org::apache::bcel::internal::generic::Instruction>>(); }
	jni::ref<com::sun::org::apache::bcel::internal::generic::Instruction> storeInstruction() { return call_method<"storeInstruction", jni::ref<com::sun::org::apache::bcel::internal::generic::Instruction>>(); }
	jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::Expression> getExpression() { return call_method<"getExpression", jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::Expression>>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	void display(jint p1) { return call_method<"display", void>(p1); }
	jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::util::Type> getType() { return call_method<"getType", jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::util::Type>>(); }
	jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::QName> getName() { return call_method<"getName", jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::QName>>(); }
	jni::ref<java::lang::String> getEscapedName() { return call_method<"getEscapedName", jni::ref<java::lang::String>>(); }
	void setName(jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::QName> p1) { return call_method<"setName", void>(p1); }
	jboolean isLocal() { return call_method<"isLocal", jboolean>(); }
	void parseContents(jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::Parser> p1) { return call_method<"parseContents", void>(p1); }
	void translateValue(jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::util::ClassGenerator> p1, jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::util::MethodGenerator> p2) { return call_method<"translateValue", void>(p1, p2); }

protected:

	VariableBase(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_COMPILER_VARIABLEBASE
