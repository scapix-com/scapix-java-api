// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/org/apache/xerces/internal/dom/ParentNode.h>
#include <scapix/java_api/org/w3c/dom/DocumentType.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_DOM_DOCUMENTTYPEIMPL_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_DOM_DOCUMENTTYPEIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xerces::internal::dom { class DocumentTypeImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xerces::internal::dom::DocumentTypeImpl>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xerces/internal/dom/DocumentTypeImpl";
	using base_classes = std::tuple<scapix::java_api::com::sun::org::apache::xerces::internal::dom::ParentNode, scapix::java_api::org::w3c::dom::DocumentType>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_DOM_DOCUMENTTYPEIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_DOM_DOCUMENTTYPEIMPL)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_DOM_DOCUMENTTYPEIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/xerces/internal/dom/CoreDocumentImpl.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/w3c/dom/NamedNodeMap.h>
#include <scapix/java_api/org/w3c/dom/Node.h>
#include <scapix/java_api/org/w3c/dom/UserDataHandler.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xerces::internal::dom::DocumentTypeImpl : public jni::object_base<"com/sun/org/apache/xerces/internal/dom/DocumentTypeImpl",
	com::sun::org::apache::xerces::internal::dom::ParentNode,
	org::w3c::dom::DocumentType>
{
public:

	static jni::ref<com::sun::org::apache::xerces::internal::dom::DocumentTypeImpl> new_object(jni::ref<com::sun::org::apache::xerces::internal::dom::CoreDocumentImpl> p1, jni::ref<java::lang::String> p2) { return base_::new_object(p1, p2); }
	static jni::ref<com::sun::org::apache::xerces::internal::dom::DocumentTypeImpl> new_object(jni::ref<com::sun::org::apache::xerces::internal::dom::CoreDocumentImpl> p1, jni::ref<java::lang::String> p2, jni::ref<java::lang::String> p3, jni::ref<java::lang::String> p4) { return base_::new_object(p1, p2, p3, p4); }
	jni::ref<java::lang::String> getPublicId() { return call_method<"getPublicId", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getSystemId() { return call_method<"getSystemId", jni::ref<java::lang::String>>(); }
	void setInternalSubset(jni::ref<java::lang::String> p1) { return call_method<"setInternalSubset", void>(p1); }
	jni::ref<java::lang::String> getInternalSubset() { return call_method<"getInternalSubset", jni::ref<java::lang::String>>(); }
	jshort getNodeType() { return call_method<"getNodeType", jshort>(); }
	jni::ref<java::lang::String> getNodeName() { return call_method<"getNodeName", jni::ref<java::lang::String>>(); }
	jni::ref<org::w3c::dom::Node> cloneNode(jboolean p1) { return call_method<"cloneNode", jni::ref<org::w3c::dom::Node>>(p1); }
	jni::ref<java::lang::String> getTextContent() { return call_method<"getTextContent", jni::ref<java::lang::String>>(); }
	void setTextContent(jni::ref<java::lang::String> p1) { return call_method<"setTextContent", void>(p1); }
	jboolean isEqualNode(jni::ref<org::w3c::dom::Node> p1) { return call_method<"isEqualNode", jboolean>(p1); }
	jni::ref<java::lang::String> getName() { return call_method<"getName", jni::ref<java::lang::String>>(); }
	jni::ref<org::w3c::dom::NamedNodeMap> getEntities() { return call_method<"getEntities", jni::ref<org::w3c::dom::NamedNodeMap>>(); }
	jni::ref<org::w3c::dom::NamedNodeMap> getNotations() { return call_method<"getNotations", jni::ref<org::w3c::dom::NamedNodeMap>>(); }
	void setReadOnly(jboolean p1, jboolean p2) { return call_method<"setReadOnly", void>(p1, p2); }
	jni::ref<org::w3c::dom::NamedNodeMap> getElements() { return call_method<"getElements", jni::ref<org::w3c::dom::NamedNodeMap>>(); }
	jni::ref<java::lang::Object> setUserData(jni::ref<java::lang::String> p1, jni::ref<java::lang::Object> p2, jni::ref<org::w3c::dom::UserDataHandler> p3) { return call_method<"setUserData", jni::ref<java::lang::Object>>(p1, p2, p3); }
	jni::ref<java::lang::Object> getUserData(jni::ref<java::lang::String> p1) { return call_method<"getUserData", jni::ref<java::lang::Object>>(p1); }

protected:

	DocumentTypeImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_DOM_DOCUMENTTYPEIMPL
