// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_SERIALIZER_TOHTMLSTREAM_TRIE_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_SERIALIZER_TOHTMLSTREAM_TRIE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xml::internal::serializer { class ToHTMLStream_Trie; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xml::internal::serializer::ToHTMLStream_Trie>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xml/internal/serializer/ToHTMLStream$Trie";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_SERIALIZER_TOHTMLSTREAM_TRIE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_SERIALIZER_TOHTMLSTREAM_TRIE)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_SERIALIZER_TOHTMLSTREAM_TRIE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class com::sun::org::apache::xml::internal::serializer::ToHTMLStream_Trie : public jni::object_base<"com/sun/org/apache/xml/internal/serializer/ToHTMLStream$Trie",
	java::lang::Object>
{
public:

	static jint ALPHA_SIZE() { return get_static_field<"ALPHA_SIZE", jint>(); }

	static jni::ref<com::sun::org::apache::xml::internal::serializer::ToHTMLStream_Trie> new_object() { return base_::new_object(); }
	static jni::ref<com::sun::org::apache::xml::internal::serializer::ToHTMLStream_Trie> new_object(jboolean p1) { return base_::new_object(p1); }
	jni::ref<java::lang::Object> put(jni::ref<java::lang::String> p1, jni::ref<java::lang::Object> p2) { return call_method<"put", jni::ref<java::lang::Object>>(p1, p2); }
	jni::ref<java::lang::Object> get(jni::ref<java::lang::String> p1) { return call_method<"get", jni::ref<java::lang::Object>>(p1); }
	static jni::ref<com::sun::org::apache::xml::internal::serializer::ToHTMLStream_Trie> new_object(jni::ref<com::sun::org::apache::xml::internal::serializer::ToHTMLStream_Trie> p1) { return base_::new_object(p1); }
	jni::ref<java::lang::Object> get2(jni::ref<java::lang::String> p1) { return call_method<"get2", jni::ref<java::lang::Object>>(p1); }
	jint getLongestKeyLength() { return call_method<"getLongestKeyLength", jint>(); }

protected:

	ToHTMLStream_Trie(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_SERIALIZER_TOHTMLSTREAM_TRIE
