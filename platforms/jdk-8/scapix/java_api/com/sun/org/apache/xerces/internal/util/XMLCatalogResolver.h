// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/xni/parser/XMLEntityResolver.h>
#include <scapix/java_api/org/xml/sax/ext/EntityResolver2.h>
#include <scapix/java_api/org/w3c/dom/ls/LSResourceResolver.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_UTIL_XMLCATALOGRESOLVER_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_UTIL_XMLCATALOGRESOLVER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xerces::internal::util { class XMLCatalogResolver; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xerces::internal::util::XMLCatalogResolver>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xerces/internal/util/XMLCatalogResolver";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::com::sun::org::apache::xerces::internal::xni::parser::XMLEntityResolver, scapix::java_api::org::xml::sax::ext::EntityResolver2, scapix::java_api::org::w3c::dom::ls::LSResourceResolver>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_UTIL_XMLCATALOGRESOLVER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_UTIL_XMLCATALOGRESOLVER)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_UTIL_XMLCATALOGRESOLVER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/xerces/internal/xni/XMLResourceIdentifier.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/xni/parser/XMLInputSource.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/w3c/dom/ls/LSInput.h>
#include <scapix/java_api/org/xml/sax/InputSource.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xerces::internal::util::XMLCatalogResolver : public jni::object_base<"com/sun/org/apache/xerces/internal/util/XMLCatalogResolver",
	java::lang::Object,
	com::sun::org::apache::xerces::internal::xni::parser::XMLEntityResolver,
	org::xml::sax::ext::EntityResolver2,
	org::w3c::dom::ls::LSResourceResolver>
{
public:

	static jni::ref<com::sun::org::apache::xerces::internal::util::XMLCatalogResolver> new_object() { return base_::new_object(); }
	static jni::ref<com::sun::org::apache::xerces::internal::util::XMLCatalogResolver> new_object(jni::ref<jni::array<java::lang::String>> p1) { return base_::new_object(p1); }
	static jni::ref<com::sun::org::apache::xerces::internal::util::XMLCatalogResolver> new_object(jni::ref<jni::array<java::lang::String>> p1, jboolean p2) { return base_::new_object(p1, p2); }
	jni::ref<jni::array<java::lang::String>> getCatalogList() { return call_method<"getCatalogList", jni::ref<jni::array<java::lang::String>>>(); }
	void setCatalogList(jni::ref<jni::array<java::lang::String>> p1) { return call_method<"setCatalogList", void>(p1); }
	void clear() { return call_method<"clear", void>(); }
	jboolean getPreferPublic() { return call_method<"getPreferPublic", jboolean>(); }
	void setPreferPublic(jboolean p1) { return call_method<"setPreferPublic", void>(p1); }
	jboolean getUseLiteralSystemId() { return call_method<"getUseLiteralSystemId", jboolean>(); }
	void setUseLiteralSystemId(jboolean p1) { return call_method<"setUseLiteralSystemId", void>(p1); }
	jni::ref<org::xml::sax::InputSource> resolveEntity(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return call_method<"resolveEntity", jni::ref<org::xml::sax::InputSource>>(p1, p2); }
	jni::ref<org::xml::sax::InputSource> resolveEntity(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2, jni::ref<java::lang::String> p3, jni::ref<java::lang::String> p4) { return call_method<"resolveEntity", jni::ref<org::xml::sax::InputSource>>(p1, p2, p3, p4); }
	jni::ref<org::xml::sax::InputSource> getExternalSubset(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return call_method<"getExternalSubset", jni::ref<org::xml::sax::InputSource>>(p1, p2); }
	jni::ref<org::w3c::dom::ls::LSInput> resolveResource(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2, jni::ref<java::lang::String> p3, jni::ref<java::lang::String> p4, jni::ref<java::lang::String> p5) { return call_method<"resolveResource", jni::ref<org::w3c::dom::ls::LSInput>>(p1, p2, p3, p4, p5); }
	jni::ref<com::sun::org::apache::xerces::internal::xni::parser::XMLInputSource> resolveEntity(jni::ref<com::sun::org::apache::xerces::internal::xni::XMLResourceIdentifier> p1) { return call_method<"resolveEntity", jni::ref<com::sun::org::apache::xerces::internal::xni::parser::XMLInputSource>>(p1); }
	jni::ref<java::lang::String> resolveIdentifier(jni::ref<com::sun::org::apache::xerces::internal::xni::XMLResourceIdentifier> p1) { return call_method<"resolveIdentifier", jni::ref<java::lang::String>>(p1); }
	jni::ref<java::lang::String> resolveSystem(jni::ref<java::lang::String> p1) { return call_method<"resolveSystem", jni::ref<java::lang::String>>(p1); }
	jni::ref<java::lang::String> resolvePublic(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return call_method<"resolvePublic", jni::ref<java::lang::String>>(p1, p2); }
	jni::ref<java::lang::String> resolveURI(jni::ref<java::lang::String> p1) { return call_method<"resolveURI", jni::ref<java::lang::String>>(p1); }

protected:

	XMLCatalogResolver(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_UTIL_XMLCATALOGRESOLVER
