// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/org/apache/xpath/internal/axes/NodeSequence.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_OBJECTS_XNODESET_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_OBJECTS_XNODESET_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xpath::internal::objects { class XNodeSet; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xpath::internal::objects::XNodeSet>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xpath/internal/objects/XNodeSet";
	using base_classes = std::tuple<scapix::java_api::com::sun::org::apache::xpath::internal::axes::NodeSequence>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_OBJECTS_XNODESET_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_OBJECTS_XNODESET)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_OBJECTS_XNODESET

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/xml/internal/dtm/DTMIterator.h>
#include <scapix/java_api/com/sun/org/apache/xml/internal/dtm/DTMManager.h>
#include <scapix/java_api/com/sun/org/apache/xml/internal/utils/FastStringBuffer.h>
#include <scapix/java_api/com/sun/org/apache/xml/internal/utils/XMLString.h>
#include <scapix/java_api/com/sun/org/apache/xpath/internal/NodeSetDTM.h>
#include <scapix/java_api/com/sun/org/apache/xpath/internal/objects/Comparator.h>
#include <scapix/java_api/com/sun/org/apache/xpath/internal/objects/XObject.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/w3c/dom/NodeList.h>
#include <scapix/java_api/org/w3c/dom/traversal/NodeIterator.h>
#include <scapix/java_api/org/xml/sax/ContentHandler.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xpath::internal::objects::XNodeSet : public jni::object_base<"com/sun/org/apache/xpath/internal/objects/XNodeSet",
	com::sun::org::apache::xpath::internal::axes::NodeSequence>
{
public:

	static jni::ref<com::sun::org::apache::xpath::internal::objects::XNodeSet> new_object(jni::ref<com::sun::org::apache::xml::internal::dtm::DTMIterator> p1) { return base_::new_object(p1); }
	static jni::ref<com::sun::org::apache::xpath::internal::objects::XNodeSet> new_object(jni::ref<com::sun::org::apache::xpath::internal::objects::XNodeSet> p1) { return base_::new_object(p1); }
	static jni::ref<com::sun::org::apache::xpath::internal::objects::XNodeSet> new_object(jni::ref<com::sun::org::apache::xml::internal::dtm::DTMManager> p1) { return base_::new_object(p1); }
	static jni::ref<com::sun::org::apache::xpath::internal::objects::XNodeSet> new_object(jint p1, jni::ref<com::sun::org::apache::xml::internal::dtm::DTMManager> p2) { return base_::new_object(p1, p2); }
	jint getType() { return call_method<"getType", jint>(); }
	jni::ref<java::lang::String> getTypeString() { return call_method<"getTypeString", jni::ref<java::lang::String>>(); }
	jdouble getNumberFromNode(jint p1) { return call_method<"getNumberFromNode", jdouble>(p1); }
	jdouble num() { return call_method<"num", jdouble>(); }
	jdouble numWithSideEffects() { return call_method<"numWithSideEffects", jdouble>(); }
	jboolean bool_() { return call_method<"bool", jboolean>(); }
	jboolean boolWithSideEffects() { return call_method<"boolWithSideEffects", jboolean>(); }
	jni::ref<com::sun::org::apache::xml::internal::utils::XMLString> getStringFromNode(jint p1) { return call_method<"getStringFromNode", jni::ref<com::sun::org::apache::xml::internal::utils::XMLString>>(p1); }
	void dispatchCharactersEvents(jni::ref<org::xml::sax::ContentHandler> p1) { return call_method<"dispatchCharactersEvents", void>(p1); }
	jni::ref<com::sun::org::apache::xml::internal::utils::XMLString> xstr() { return call_method<"xstr", jni::ref<com::sun::org::apache::xml::internal::utils::XMLString>>(); }
	void appendToFsb(jni::ref<com::sun::org::apache::xml::internal::utils::FastStringBuffer> p1) { return call_method<"appendToFsb", void>(p1); }
	jni::ref<java::lang::String> str() { return call_method<"str", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::Object> object() { return call_method<"object", jni::ref<java::lang::Object>>(); }
	jni::ref<org::w3c::dom::traversal::NodeIterator> nodeset() { return call_method<"nodeset", jni::ref<org::w3c::dom::traversal::NodeIterator>>(); }
	jni::ref<org::w3c::dom::NodeList> nodelist() { return call_method<"nodelist", jni::ref<org::w3c::dom::NodeList>>(); }
	jni::ref<com::sun::org::apache::xml::internal::dtm::DTMIterator> iterRaw() { return call_method<"iterRaw", jni::ref<com::sun::org::apache::xml::internal::dtm::DTMIterator>>(); }
	void release(jni::ref<com::sun::org::apache::xml::internal::dtm::DTMIterator> p1) { return call_method<"release", void>(p1); }
	jni::ref<com::sun::org::apache::xml::internal::dtm::DTMIterator> iter() { return call_method<"iter", jni::ref<com::sun::org::apache::xml::internal::dtm::DTMIterator>>(); }
	jni::ref<com::sun::org::apache::xpath::internal::objects::XObject> getFresh() { return call_method<"getFresh", jni::ref<com::sun::org::apache::xpath::internal::objects::XObject>>(); }
	jni::ref<com::sun::org::apache::xpath::internal::NodeSetDTM> mutableNodeset() { return call_method<"mutableNodeset", jni::ref<com::sun::org::apache::xpath::internal::NodeSetDTM>>(); }
	jboolean compare(jni::ref<com::sun::org::apache::xpath::internal::objects::XObject> p1, jni::ref<com::sun::org::apache::xpath::internal::objects::Comparator> p2) { return call_method<"compare", jboolean>(p1, p2); }
	jboolean lessThan(jni::ref<com::sun::org::apache::xpath::internal::objects::XObject> p1) { return call_method<"lessThan", jboolean>(p1); }
	jboolean lessThanOrEqual(jni::ref<com::sun::org::apache::xpath::internal::objects::XObject> p1) { return call_method<"lessThanOrEqual", jboolean>(p1); }
	jboolean greaterThan(jni::ref<com::sun::org::apache::xpath::internal::objects::XObject> p1) { return call_method<"greaterThan", jboolean>(p1); }
	jboolean greaterThanOrEqual(jni::ref<com::sun::org::apache::xpath::internal::objects::XObject> p1) { return call_method<"greaterThanOrEqual", jboolean>(p1); }
	jboolean equals(jni::ref<com::sun::org::apache::xpath::internal::objects::XObject> p1) { return call_method<"equals", jboolean>(p1); }
	jboolean notEquals(jni::ref<com::sun::org::apache::xpath::internal::objects::XObject> p1) { return call_method<"notEquals", jboolean>(p1); }

protected:

	XNodeSet(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_OBJECTS_XNODESET
