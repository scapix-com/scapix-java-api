// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/org/apache/bcel/internal/generic/CPInstruction.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/generic/LoadClass.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_GENERIC_FIELDORMETHOD_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_GENERIC_FIELDORMETHOD_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::bcel::internal::generic { class FieldOrMethod; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::bcel::internal::generic::FieldOrMethod>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/bcel/internal/generic/FieldOrMethod";
	using base_classes = std::tuple<scapix::java_api::com::sun::org::apache::bcel::internal::generic::CPInstruction, scapix::java_api::com::sun::org::apache::bcel::internal::generic::LoadClass>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_GENERIC_FIELDORMETHOD_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_GENERIC_FIELDORMETHOD)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_GENERIC_FIELDORMETHOD

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/bcel/internal/generic/ConstantPoolGen.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/generic/ObjectType.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/generic/ReferenceType.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::bcel::internal::generic::FieldOrMethod : public jni::object_base<"com/sun/org/apache/bcel/internal/generic/FieldOrMethod",
	com::sun::org::apache::bcel::internal::generic::CPInstruction,
	com::sun::org::apache::bcel::internal::generic::LoadClass>
{
public:

	jni::ref<java::lang::String> getClassName(jni::ref<com::sun::org::apache::bcel::internal::generic::ConstantPoolGen> p1) { return call_method<"getClassName", jni::ref<java::lang::String>>(p1); }
	jni::ref<com::sun::org::apache::bcel::internal::generic::ObjectType> getClassType(jni::ref<com::sun::org::apache::bcel::internal::generic::ConstantPoolGen> p1) { return call_method<"getClassType", jni::ref<com::sun::org::apache::bcel::internal::generic::ObjectType>>(p1); }
	jni::ref<com::sun::org::apache::bcel::internal::generic::ObjectType> getLoadClassType(jni::ref<com::sun::org::apache::bcel::internal::generic::ConstantPoolGen> p1) { return call_method<"getLoadClassType", jni::ref<com::sun::org::apache::bcel::internal::generic::ObjectType>>(p1); }
	jni::ref<java::lang::String> getName(jni::ref<com::sun::org::apache::bcel::internal::generic::ConstantPoolGen> p1) { return call_method<"getName", jni::ref<java::lang::String>>(p1); }
	jni::ref<com::sun::org::apache::bcel::internal::generic::ReferenceType> getReferenceType(jni::ref<com::sun::org::apache::bcel::internal::generic::ConstantPoolGen> p1) { return call_method<"getReferenceType", jni::ref<com::sun::org::apache::bcel::internal::generic::ReferenceType>>(p1); }
	jni::ref<java::lang::String> getSignature(jni::ref<com::sun::org::apache::bcel::internal::generic::ConstantPoolGen> p1) { return call_method<"getSignature", jni::ref<java::lang::String>>(p1); }

protected:

	FieldOrMethod(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_GENERIC_FIELDORMETHOD
