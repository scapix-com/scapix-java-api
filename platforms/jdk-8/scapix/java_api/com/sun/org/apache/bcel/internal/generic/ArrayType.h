// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/org/apache/bcel/internal/generic/ReferenceType.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_GENERIC_ARRAYTYPE_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_GENERIC_ARRAYTYPE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::bcel::internal::generic { class ArrayType; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::bcel::internal::generic::ArrayType>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/bcel/internal/generic/ArrayType";
	using base_classes = std::tuple<scapix::java_api::com::sun::org::apache::bcel::internal::generic::ReferenceType>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_GENERIC_ARRAYTYPE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_GENERIC_ARRAYTYPE)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_GENERIC_ARRAYTYPE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/bcel/internal/generic/Type.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::bcel::internal::generic::ArrayType : public jni::object_base<"com/sun/org/apache/bcel/internal/generic/ArrayType",
	com::sun::org::apache::bcel::internal::generic::ReferenceType>
{
public:

	static jni::ref<com::sun::org::apache::bcel::internal::generic::ArrayType> new_object(jbyte p1, jint p2) { return base_::new_object(p1, p2); }
	static jni::ref<com::sun::org::apache::bcel::internal::generic::ArrayType> new_object(jni::ref<java::lang::String> p1, jint p2) { return base_::new_object(p1, p2); }
	static jni::ref<com::sun::org::apache::bcel::internal::generic::ArrayType> new_object(jni::ref<com::sun::org::apache::bcel::internal::generic::Type> p1, jint p2) { return base_::new_object(p1, p2); }
	jboolean equals(jni::ref<java::lang::Object> p1) { return call_method<"equals", jboolean>(p1); }
	jni::ref<com::sun::org::apache::bcel::internal::generic::Type> getBasicType() { return call_method<"getBasicType", jni::ref<com::sun::org::apache::bcel::internal::generic::Type>>(); }
	jni::ref<java::lang::String> getClassName() { return call_method<"getClassName", jni::ref<java::lang::String>>(); }
	jint getDimensions() { return call_method<"getDimensions", jint>(); }
	jni::ref<com::sun::org::apache::bcel::internal::generic::Type> getElementType() { return call_method<"getElementType", jni::ref<com::sun::org::apache::bcel::internal::generic::Type>>(); }
	jint hashCode() { return call_method<"hashCode", jint>(); }

protected:

	ArrayType(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_GENERIC_ARRAYTYPE
