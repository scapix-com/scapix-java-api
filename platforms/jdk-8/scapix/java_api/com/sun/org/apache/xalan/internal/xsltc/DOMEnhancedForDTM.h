// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/com/sun/org/apache/xalan/internal/xsltc/DOM.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_DOMENHANCEDFORDTM_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_DOMENHANCEDFORDTM_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xalan::internal::xsltc { class DOMEnhancedForDTM; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xalan::internal::xsltc::DOMEnhancedForDTM>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xalan/internal/xsltc/DOMEnhancedForDTM";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::com::sun::org::apache::xalan::internal::xsltc::DOM>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_DOMENHANCEDFORDTM_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_DOMENHANCEDFORDTM)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_DOMENHANCEDFORDTM

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xalan::internal::xsltc::DOMEnhancedForDTM : public jni::object_base<"com/sun/org/apache/xalan/internal/xsltc/DOMEnhancedForDTM",
	java::lang::Object,
	com::sun::org::apache::xalan::internal::xsltc::DOM>
{
public:

	jni::ref<jni::array<jshort>> getMapping(jni::ref<jni::array<java::lang::String>> p1, jni::ref<jni::array<java::lang::String>> p2, jni::ref<jni::array<jint>> p3) { return call_method<"getMapping", jni::ref<jni::array<jshort>>>(p1, p2, p3); }
	jni::ref<jni::array<jint>> getReverseMapping(jni::ref<jni::array<java::lang::String>> p1, jni::ref<jni::array<java::lang::String>> p2, jni::ref<jni::array<jint>> p3) { return call_method<"getReverseMapping", jni::ref<jni::array<jint>>>(p1, p2, p3); }
	jni::ref<jni::array<jshort>> getNamespaceMapping(jni::ref<jni::array<java::lang::String>> p1) { return call_method<"getNamespaceMapping", jni::ref<jni::array<jshort>>>(p1); }
	jni::ref<jni::array<jshort>> getReverseNamespaceMapping(jni::ref<jni::array<java::lang::String>> p1) { return call_method<"getReverseNamespaceMapping", jni::ref<jni::array<jshort>>>(p1); }
	jni::ref<java::lang::String> getDocumentURI() { return call_method<"getDocumentURI", jni::ref<java::lang::String>>(); }
	void setDocumentURI(jni::ref<java::lang::String> p1) { return call_method<"setDocumentURI", void>(p1); }
	jint getExpandedTypeID2(jint p1) { return call_method<"getExpandedTypeID2", jint>(p1); }
	jboolean hasDOMSource() { return call_method<"hasDOMSource", jboolean>(); }
	jint getElementById(jni::ref<java::lang::String> p1) { return call_method<"getElementById", jint>(p1); }

protected:

	DOMEnhancedForDTM(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_DOMENHANCEDFORDTM
