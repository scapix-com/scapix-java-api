// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/Visitor.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_CLASSFILE_EMPTYVISITOR_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_CLASSFILE_EMPTYVISITOR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::bcel::internal::classfile { class EmptyVisitor; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::bcel::internal::classfile::EmptyVisitor>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/bcel/internal/classfile/EmptyVisitor";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::com::sun::org::apache::bcel::internal::classfile::Visitor>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_CLASSFILE_EMPTYVISITOR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_CLASSFILE_EMPTYVISITOR)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_CLASSFILE_EMPTYVISITOR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/AnnotationDefault.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/AnnotationEntry.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/Annotations.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/BootstrapMethods.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/Code.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/CodeException.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/ConstantClass.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/ConstantDouble.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/ConstantDynamic.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/ConstantFieldref.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/ConstantFloat.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/ConstantInteger.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/ConstantInterfaceMethodref.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/ConstantInvokeDynamic.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/ConstantLong.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/ConstantMethodHandle.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/ConstantMethodType.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/ConstantMethodref.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/ConstantModule.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/ConstantNameAndType.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/ConstantPackage.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/ConstantPool.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/ConstantString.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/ConstantUtf8.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/ConstantValue.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/Deprecated.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/EnclosingMethod.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/ExceptionTable.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/Field.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/InnerClass.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/InnerClasses.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/JavaClass.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/LineNumber.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/LineNumberTable.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/LocalVariable.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/LocalVariableTable.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/LocalVariableTypeTable.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/Method.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/MethodParameter.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/MethodParameters.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/Module.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/ModuleExports.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/ModuleMainClass.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/ModuleOpens.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/ModulePackages.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/ModuleProvides.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/ModuleRequires.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/NestHost.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/NestMembers.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/ParameterAnnotationEntry.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/ParameterAnnotations.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/Signature.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/SourceFile.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/StackMap.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/StackMapEntry.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/Synthetic.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/Unknown.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::bcel::internal::classfile::EmptyVisitor : public jni::object_base<"com/sun/org/apache/bcel/internal/classfile/EmptyVisitor",
	java::lang::Object,
	com::sun::org::apache::bcel::internal::classfile::Visitor>
{
public:

	void visitAnnotation(jni::ref<com::sun::org::apache::bcel::internal::classfile::Annotations> p1) { return call_method<"visitAnnotation", void>(p1); }
	void visitAnnotationDefault(jni::ref<com::sun::org::apache::bcel::internal::classfile::AnnotationDefault> p1) { return call_method<"visitAnnotationDefault", void>(p1); }
	void visitAnnotationEntry(jni::ref<com::sun::org::apache::bcel::internal::classfile::AnnotationEntry> p1) { return call_method<"visitAnnotationEntry", void>(p1); }
	void visitBootstrapMethods(jni::ref<com::sun::org::apache::bcel::internal::classfile::BootstrapMethods> p1) { return call_method<"visitBootstrapMethods", void>(p1); }
	void visitCode(jni::ref<com::sun::org::apache::bcel::internal::classfile::Code> p1) { return call_method<"visitCode", void>(p1); }
	void visitCodeException(jni::ref<com::sun::org::apache::bcel::internal::classfile::CodeException> p1) { return call_method<"visitCodeException", void>(p1); }
	void visitConstantClass(jni::ref<com::sun::org::apache::bcel::internal::classfile::ConstantClass> p1) { return call_method<"visitConstantClass", void>(p1); }
	void visitConstantDouble(jni::ref<com::sun::org::apache::bcel::internal::classfile::ConstantDouble> p1) { return call_method<"visitConstantDouble", void>(p1); }
	void visitConstantDynamic(jni::ref<com::sun::org::apache::bcel::internal::classfile::ConstantDynamic> p1) { return call_method<"visitConstantDynamic", void>(p1); }
	void visitConstantFieldref(jni::ref<com::sun::org::apache::bcel::internal::classfile::ConstantFieldref> p1) { return call_method<"visitConstantFieldref", void>(p1); }
	void visitConstantFloat(jni::ref<com::sun::org::apache::bcel::internal::classfile::ConstantFloat> p1) { return call_method<"visitConstantFloat", void>(p1); }
	void visitConstantInteger(jni::ref<com::sun::org::apache::bcel::internal::classfile::ConstantInteger> p1) { return call_method<"visitConstantInteger", void>(p1); }
	void visitConstantInterfaceMethodref(jni::ref<com::sun::org::apache::bcel::internal::classfile::ConstantInterfaceMethodref> p1) { return call_method<"visitConstantInterfaceMethodref", void>(p1); }
	void visitConstantInvokeDynamic(jni::ref<com::sun::org::apache::bcel::internal::classfile::ConstantInvokeDynamic> p1) { return call_method<"visitConstantInvokeDynamic", void>(p1); }
	void visitConstantLong(jni::ref<com::sun::org::apache::bcel::internal::classfile::ConstantLong> p1) { return call_method<"visitConstantLong", void>(p1); }
	void visitConstantMethodHandle(jni::ref<com::sun::org::apache::bcel::internal::classfile::ConstantMethodHandle> p1) { return call_method<"visitConstantMethodHandle", void>(p1); }
	void visitConstantMethodref(jni::ref<com::sun::org::apache::bcel::internal::classfile::ConstantMethodref> p1) { return call_method<"visitConstantMethodref", void>(p1); }
	void visitConstantMethodType(jni::ref<com::sun::org::apache::bcel::internal::classfile::ConstantMethodType> p1) { return call_method<"visitConstantMethodType", void>(p1); }
	void visitConstantModule(jni::ref<com::sun::org::apache::bcel::internal::classfile::ConstantModule> p1) { return call_method<"visitConstantModule", void>(p1); }
	void visitConstantNameAndType(jni::ref<com::sun::org::apache::bcel::internal::classfile::ConstantNameAndType> p1) { return call_method<"visitConstantNameAndType", void>(p1); }
	void visitConstantPackage(jni::ref<com::sun::org::apache::bcel::internal::classfile::ConstantPackage> p1) { return call_method<"visitConstantPackage", void>(p1); }
	void visitConstantPool(jni::ref<com::sun::org::apache::bcel::internal::classfile::ConstantPool> p1) { return call_method<"visitConstantPool", void>(p1); }
	void visitConstantString(jni::ref<com::sun::org::apache::bcel::internal::classfile::ConstantString> p1) { return call_method<"visitConstantString", void>(p1); }
	void visitConstantUtf8(jni::ref<com::sun::org::apache::bcel::internal::classfile::ConstantUtf8> p1) { return call_method<"visitConstantUtf8", void>(p1); }
	void visitConstantValue(jni::ref<com::sun::org::apache::bcel::internal::classfile::ConstantValue> p1) { return call_method<"visitConstantValue", void>(p1); }
	void visitDeprecated(jni::ref<com::sun::org::apache::bcel::internal::classfile::Deprecated> p1) { return call_method<"visitDeprecated", void>(p1); }
	void visitEnclosingMethod(jni::ref<com::sun::org::apache::bcel::internal::classfile::EnclosingMethod> p1) { return call_method<"visitEnclosingMethod", void>(p1); }
	void visitExceptionTable(jni::ref<com::sun::org::apache::bcel::internal::classfile::ExceptionTable> p1) { return call_method<"visitExceptionTable", void>(p1); }
	void visitField(jni::ref<com::sun::org::apache::bcel::internal::classfile::Field> p1) { return call_method<"visitField", void>(p1); }
	void visitInnerClass(jni::ref<com::sun::org::apache::bcel::internal::classfile::InnerClass> p1) { return call_method<"visitInnerClass", void>(p1); }
	void visitInnerClasses(jni::ref<com::sun::org::apache::bcel::internal::classfile::InnerClasses> p1) { return call_method<"visitInnerClasses", void>(p1); }
	void visitJavaClass(jni::ref<com::sun::org::apache::bcel::internal::classfile::JavaClass> p1) { return call_method<"visitJavaClass", void>(p1); }
	void visitLineNumber(jni::ref<com::sun::org::apache::bcel::internal::classfile::LineNumber> p1) { return call_method<"visitLineNumber", void>(p1); }
	void visitLineNumberTable(jni::ref<com::sun::org::apache::bcel::internal::classfile::LineNumberTable> p1) { return call_method<"visitLineNumberTable", void>(p1); }
	void visitLocalVariable(jni::ref<com::sun::org::apache::bcel::internal::classfile::LocalVariable> p1) { return call_method<"visitLocalVariable", void>(p1); }
	void visitLocalVariableTable(jni::ref<com::sun::org::apache::bcel::internal::classfile::LocalVariableTable> p1) { return call_method<"visitLocalVariableTable", void>(p1); }
	void visitLocalVariableTypeTable(jni::ref<com::sun::org::apache::bcel::internal::classfile::LocalVariableTypeTable> p1) { return call_method<"visitLocalVariableTypeTable", void>(p1); }
	void visitMethod(jni::ref<com::sun::org::apache::bcel::internal::classfile::Method> p1) { return call_method<"visitMethod", void>(p1); }
	void visitMethodParameter(jni::ref<com::sun::org::apache::bcel::internal::classfile::MethodParameter> p1) { return call_method<"visitMethodParameter", void>(p1); }
	void visitMethodParameters(jni::ref<com::sun::org::apache::bcel::internal::classfile::MethodParameters> p1) { return call_method<"visitMethodParameters", void>(p1); }
	void visitModule(jni::ref<com::sun::org::apache::bcel::internal::classfile::Module> p1) { return call_method<"visitModule", void>(p1); }
	void visitModuleExports(jni::ref<com::sun::org::apache::bcel::internal::classfile::ModuleExports> p1) { return call_method<"visitModuleExports", void>(p1); }
	void visitModuleMainClass(jni::ref<com::sun::org::apache::bcel::internal::classfile::ModuleMainClass> p1) { return call_method<"visitModuleMainClass", void>(p1); }
	void visitModuleOpens(jni::ref<com::sun::org::apache::bcel::internal::classfile::ModuleOpens> p1) { return call_method<"visitModuleOpens", void>(p1); }
	void visitModulePackages(jni::ref<com::sun::org::apache::bcel::internal::classfile::ModulePackages> p1) { return call_method<"visitModulePackages", void>(p1); }
	void visitModuleProvides(jni::ref<com::sun::org::apache::bcel::internal::classfile::ModuleProvides> p1) { return call_method<"visitModuleProvides", void>(p1); }
	void visitModuleRequires(jni::ref<com::sun::org::apache::bcel::internal::classfile::ModuleRequires> p1) { return call_method<"visitModuleRequires", void>(p1); }
	void visitNestHost(jni::ref<com::sun::org::apache::bcel::internal::classfile::NestHost> p1) { return call_method<"visitNestHost", void>(p1); }
	void visitNestMembers(jni::ref<com::sun::org::apache::bcel::internal::classfile::NestMembers> p1) { return call_method<"visitNestMembers", void>(p1); }
	void visitParameterAnnotation(jni::ref<com::sun::org::apache::bcel::internal::classfile::ParameterAnnotations> p1) { return call_method<"visitParameterAnnotation", void>(p1); }
	void visitParameterAnnotationEntry(jni::ref<com::sun::org::apache::bcel::internal::classfile::ParameterAnnotationEntry> p1) { return call_method<"visitParameterAnnotationEntry", void>(p1); }
	void visitSignature(jni::ref<com::sun::org::apache::bcel::internal::classfile::Signature> p1) { return call_method<"visitSignature", void>(p1); }
	void visitSourceFile(jni::ref<com::sun::org::apache::bcel::internal::classfile::SourceFile> p1) { return call_method<"visitSourceFile", void>(p1); }
	void visitStackMap(jni::ref<com::sun::org::apache::bcel::internal::classfile::StackMap> p1) { return call_method<"visitStackMap", void>(p1); }
	void visitStackMapEntry(jni::ref<com::sun::org::apache::bcel::internal::classfile::StackMapEntry> p1) { return call_method<"visitStackMapEntry", void>(p1); }
	void visitSynthetic(jni::ref<com::sun::org::apache::bcel::internal::classfile::Synthetic> p1) { return call_method<"visitSynthetic", void>(p1); }
	void visitUnknown(jni::ref<com::sun::org::apache::bcel::internal::classfile::Unknown> p1) { return call_method<"visitUnknown", void>(p1); }

protected:

	EmptyVisitor(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_CLASSFILE_EMPTYVISITOR
