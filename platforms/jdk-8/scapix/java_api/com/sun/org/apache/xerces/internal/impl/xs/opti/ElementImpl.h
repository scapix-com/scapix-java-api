// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/org/apache/xerces/internal/impl/xs/opti/DefaultElement.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_XS_OPTI_ELEMENTIMPL_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_XS_OPTI_ELEMENTIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xerces::internal::impl::xs::opti { class ElementImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xerces::internal::impl::xs::opti::ElementImpl>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xerces/internal/impl/xs/opti/ElementImpl";
	using base_classes = std::tuple<scapix::java_api::com::sun::org::apache::xerces::internal::impl::xs::opti::DefaultElement>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_XS_OPTI_ELEMENTIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_XS_OPTI_ELEMENTIMPL)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_XS_OPTI_ELEMENTIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/w3c/dom/Attr.h>
#include <scapix/java_api/org/w3c/dom/Document.h>
#include <scapix/java_api/org/w3c/dom/NamedNodeMap.h>
#include <scapix/java_api/org/w3c/dom/Node.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xerces::internal::impl::xs::opti::ElementImpl : public jni::object_base<"com/sun/org/apache/xerces/internal/impl/xs/opti/ElementImpl",
	com::sun::org::apache::xerces::internal::impl::xs::opti::DefaultElement>
{
public:

	static jni::ref<com::sun::org::apache::xerces::internal::impl::xs::opti::ElementImpl> new_object(jint p1, jint p2, jint p3) { return base_::new_object(p1, p2, p3); }
	static jni::ref<com::sun::org::apache::xerces::internal::impl::xs::opti::ElementImpl> new_object(jint p1, jint p2) { return base_::new_object(p1, p2); }
	static jni::ref<com::sun::org::apache::xerces::internal::impl::xs::opti::ElementImpl> new_object(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2, jni::ref<java::lang::String> p3, jni::ref<java::lang::String> p4, jint p5, jint p6, jint p7) { return base_::new_object(p1, p2, p3, p4, p5, p6, p7); }
	static jni::ref<com::sun::org::apache::xerces::internal::impl::xs::opti::ElementImpl> new_object(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2, jni::ref<java::lang::String> p3, jni::ref<java::lang::String> p4, jint p5, jint p6) { return base_::new_object(p1, p2, p3, p4, p5, p6); }
	jni::ref<org::w3c::dom::Document> getOwnerDocument() { return call_method<"getOwnerDocument", jni::ref<org::w3c::dom::Document>>(); }
	jni::ref<org::w3c::dom::Node> getParentNode() { return call_method<"getParentNode", jni::ref<org::w3c::dom::Node>>(); }
	jboolean hasChildNodes() { return call_method<"hasChildNodes", jboolean>(); }
	jni::ref<org::w3c::dom::Node> getFirstChild() { return call_method<"getFirstChild", jni::ref<org::w3c::dom::Node>>(); }
	jni::ref<org::w3c::dom::Node> getLastChild() { return call_method<"getLastChild", jni::ref<org::w3c::dom::Node>>(); }
	jni::ref<org::w3c::dom::Node> getPreviousSibling() { return call_method<"getPreviousSibling", jni::ref<org::w3c::dom::Node>>(); }
	jni::ref<org::w3c::dom::Node> getNextSibling() { return call_method<"getNextSibling", jni::ref<org::w3c::dom::Node>>(); }
	jni::ref<org::w3c::dom::NamedNodeMap> getAttributes() { return call_method<"getAttributes", jni::ref<org::w3c::dom::NamedNodeMap>>(); }
	jboolean hasAttributes() { return call_method<"hasAttributes", jboolean>(); }
	jni::ref<java::lang::String> getTagName() { return call_method<"getTagName", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getAttribute(jni::ref<java::lang::String> p1) { return call_method<"getAttribute", jni::ref<java::lang::String>>(p1); }
	jni::ref<org::w3c::dom::Attr> getAttributeNode(jni::ref<java::lang::String> p1) { return call_method<"getAttributeNode", jni::ref<org::w3c::dom::Attr>>(p1); }
	jni::ref<java::lang::String> getAttributeNS(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return call_method<"getAttributeNS", jni::ref<java::lang::String>>(p1, p2); }
	jni::ref<org::w3c::dom::Attr> getAttributeNodeNS(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return call_method<"getAttributeNodeNS", jni::ref<org::w3c::dom::Attr>>(p1, p2); }
	jboolean hasAttribute(jni::ref<java::lang::String> p1) { return call_method<"hasAttribute", jboolean>(p1); }
	jboolean hasAttributeNS(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return call_method<"hasAttributeNS", jboolean>(p1, p2); }
	void setAttribute(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return call_method<"setAttribute", void>(p1, p2); }
	jint getLineNumber() { return call_method<"getLineNumber", jint>(); }
	jint getColumnNumber() { return call_method<"getColumnNumber", jint>(); }
	jint getCharacterOffset() { return call_method<"getCharacterOffset", jint>(); }
	jni::ref<java::lang::String> getAnnotation() { return call_method<"getAnnotation", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getSyntheticAnnotation() { return call_method<"getSyntheticAnnotation", jni::ref<java::lang::String>>(); }

protected:

	ElementImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_XS_OPTI_ELEMENTIMPL
