// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/org/apache/xml/internal/dtm/ref/sax2dtm/SAX2DTM.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_DTM_REF_SAX2DTM_SAX2DTM2_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_DTM_REF_SAX2DTM_SAX2DTM2_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xml::internal::dtm::ref::sax2dtm { class SAX2DTM2; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xml::internal::dtm::ref::sax2dtm::SAX2DTM2>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xml/internal/dtm/ref/sax2dtm/SAX2DTM2";
	using base_classes = std::tuple<scapix::java_api::com::sun::org::apache::xml::internal::dtm::ref::sax2dtm::SAX2DTM>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_DTM_REF_SAX2DTM_SAX2DTM2_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_DTM_REF_SAX2DTM_SAX2DTM2)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_DTM_REF_SAX2DTM_SAX2DTM2

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/xml/internal/dtm/DTMManager.h>
#include <scapix/java_api/com/sun/org/apache/xml/internal/dtm/DTMWSFilter.h>
#include <scapix/java_api/com/sun/org/apache/xml/internal/utils/XMLString.h>
#include <scapix/java_api/com/sun/org/apache/xml/internal/utils/XMLStringFactory.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/xml/transform/Source.h>
#include <scapix/java_api/org/xml/sax/Attributes.h>
#include <scapix/java_api/org/xml/sax/ContentHandler.h>
#include <scapix/java_api/com/sun/org/apache/xml/internal/dtm/ref/sax2dtm/SAX2DTM2_ChildrenIterator.h>
#include <scapix/java_api/com/sun/org/apache/xml/internal/dtm/ref/sax2dtm/SAX2DTM2_ParentIterator.h>
#include <scapix/java_api/com/sun/org/apache/xml/internal/dtm/ref/sax2dtm/SAX2DTM2_TypedChildrenIterator.h>
#include <scapix/java_api/com/sun/org/apache/xml/internal/dtm/ref/sax2dtm/SAX2DTM2_TypedRootIterator.h>
#include <scapix/java_api/com/sun/org/apache/xml/internal/dtm/ref/sax2dtm/SAX2DTM2_FollowingSiblingIterator.h>
#include <scapix/java_api/com/sun/org/apache/xml/internal/dtm/ref/sax2dtm/SAX2DTM2_TypedFollowingSiblingIterator.h>
#include <scapix/java_api/com/sun/org/apache/xml/internal/dtm/ref/sax2dtm/SAX2DTM2_AttributeIterator.h>
#include <scapix/java_api/com/sun/org/apache/xml/internal/dtm/ref/sax2dtm/SAX2DTM2_TypedAttributeIterator.h>
#include <scapix/java_api/com/sun/org/apache/xml/internal/dtm/ref/sax2dtm/SAX2DTM2_PrecedingSiblingIterator.h>
#include <scapix/java_api/com/sun/org/apache/xml/internal/dtm/ref/sax2dtm/SAX2DTM2_TypedPrecedingSiblingIterator.h>
#include <scapix/java_api/com/sun/org/apache/xml/internal/dtm/ref/sax2dtm/SAX2DTM2_PrecedingIterator.h>
#include <scapix/java_api/com/sun/org/apache/xml/internal/dtm/ref/sax2dtm/SAX2DTM2_TypedPrecedingIterator.h>
#include <scapix/java_api/com/sun/org/apache/xml/internal/dtm/ref/sax2dtm/SAX2DTM2_FollowingIterator.h>
#include <scapix/java_api/com/sun/org/apache/xml/internal/dtm/ref/sax2dtm/SAX2DTM2_TypedFollowingIterator.h>
#include <scapix/java_api/com/sun/org/apache/xml/internal/dtm/ref/sax2dtm/SAX2DTM2_AncestorIterator.h>
#include <scapix/java_api/com/sun/org/apache/xml/internal/dtm/ref/sax2dtm/SAX2DTM2_TypedAncestorIterator.h>
#include <scapix/java_api/com/sun/org/apache/xml/internal/dtm/ref/sax2dtm/SAX2DTM2_DescendantIterator.h>
#include <scapix/java_api/com/sun/org/apache/xml/internal/dtm/ref/sax2dtm/SAX2DTM2_TypedDescendantIterator.h>
#include <scapix/java_api/com/sun/org/apache/xml/internal/dtm/ref/sax2dtm/SAX2DTM2_TypedSingletonIterator.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xml::internal::dtm::ref::sax2dtm::SAX2DTM2 : public jni::object_base<"com/sun/org/apache/xml/internal/dtm/ref/sax2dtm/SAX2DTM2",
	com::sun::org::apache::xml::internal::dtm::ref::sax2dtm::SAX2DTM>
{
public:

	using ChildrenIterator = SAX2DTM2_ChildrenIterator;
	using ParentIterator = SAX2DTM2_ParentIterator;
	using TypedChildrenIterator = SAX2DTM2_TypedChildrenIterator;
	using TypedRootIterator = SAX2DTM2_TypedRootIterator;
	using FollowingSiblingIterator = SAX2DTM2_FollowingSiblingIterator;
	using TypedFollowingSiblingIterator = SAX2DTM2_TypedFollowingSiblingIterator;
	using AttributeIterator = SAX2DTM2_AttributeIterator;
	using TypedAttributeIterator = SAX2DTM2_TypedAttributeIterator;
	using PrecedingSiblingIterator = SAX2DTM2_PrecedingSiblingIterator;
	using TypedPrecedingSiblingIterator = SAX2DTM2_TypedPrecedingSiblingIterator;
	using PrecedingIterator = SAX2DTM2_PrecedingIterator;
	using TypedPrecedingIterator = SAX2DTM2_TypedPrecedingIterator;
	using FollowingIterator = SAX2DTM2_FollowingIterator;
	using TypedFollowingIterator = SAX2DTM2_TypedFollowingIterator;
	using AncestorIterator = SAX2DTM2_AncestorIterator;
	using TypedAncestorIterator = SAX2DTM2_TypedAncestorIterator;
	using DescendantIterator = SAX2DTM2_DescendantIterator;
	using TypedDescendantIterator = SAX2DTM2_TypedDescendantIterator;
	using TypedSingletonIterator = SAX2DTM2_TypedSingletonIterator;

	static jni::ref<com::sun::org::apache::xml::internal::dtm::ref::sax2dtm::SAX2DTM2> new_object(jni::ref<com::sun::org::apache::xml::internal::dtm::DTMManager> p1, jni::ref<javax::xml::transform::Source> p2, jint p3, jni::ref<com::sun::org::apache::xml::internal::dtm::DTMWSFilter> p4, jni::ref<com::sun::org::apache::xml::internal::utils::XMLStringFactory> p5, jboolean p6) { return base_::new_object(p1, p2, p3, p4, p5, p6); }
	static jni::ref<com::sun::org::apache::xml::internal::dtm::ref::sax2dtm::SAX2DTM2> new_object(jni::ref<com::sun::org::apache::xml::internal::dtm::DTMManager> p1, jni::ref<javax::xml::transform::Source> p2, jint p3, jni::ref<com::sun::org::apache::xml::internal::dtm::DTMWSFilter> p4, jni::ref<com::sun::org::apache::xml::internal::utils::XMLStringFactory> p5, jboolean p6, jint p7, jboolean p8, jboolean p9, jboolean p10) { return base_::new_object(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10); }
	jint _exptype(jint p1) { return call_method<"_exptype", jint>(p1); }
	jint _exptype2(jint p1) { return call_method<"_exptype2", jint>(p1); }
	jint _nextsib2(jint p1) { return call_method<"_nextsib2", jint>(p1); }
	jint _firstch2(jint p1) { return call_method<"_firstch2", jint>(p1); }
	jint _parent2(jint p1) { return call_method<"_parent2", jint>(p1); }
	jint _type2(jint p1) { return call_method<"_type2", jint>(p1); }
	jint getExpandedTypeID2(jint p1) { return call_method<"getExpandedTypeID2", jint>(p1); }
	jint _exptype2Type(jint p1) { return call_method<"_exptype2Type", jint>(p1); }
	jint getIdForNamespace(jni::ref<java::lang::String> p1) { return call_method<"getIdForNamespace", jint>(p1); }
	void startElement(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2, jni::ref<java::lang::String> p3, jni::ref<org::xml::sax::Attributes> p4) { return call_method<"startElement", void>(p1, p2, p3, p4); }
	void endElement(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2, jni::ref<java::lang::String> p3) { return call_method<"endElement", void>(p1, p2, p3); }
	void comment(jni::ref<jni::array<jchar>> p1, jint p2, jint p3) { return call_method<"comment", void>(p1, p2, p3); }
	void startDocument() { return call_method<"startDocument", void>(); }
	void endDocument() { return call_method<"endDocument", void>(); }
	void processingInstruction(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return call_method<"processingInstruction", void>(p1, p2); }
	jint getFirstAttribute(jint p1) { return call_method<"getFirstAttribute", jint>(p1); }
	jni::ref<java::lang::String> getLocalName(jint p1) { return call_method<"getLocalName", jni::ref<java::lang::String>>(p1); }
	jni::ref<java::lang::String> getNodeNameX(jint p1) { return call_method<"getNodeNameX", jni::ref<java::lang::String>>(p1); }
	jni::ref<java::lang::String> getNodeName(jint p1) { return call_method<"getNodeName", jni::ref<java::lang::String>>(p1); }
	jni::ref<com::sun::org::apache::xml::internal::utils::XMLString> getStringValue(jint p1) { return call_method<"getStringValue", jni::ref<com::sun::org::apache::xml::internal::utils::XMLString>>(p1); }
	jni::ref<java::lang::String> getStringValueX(jint p1) { return call_method<"getStringValueX", jni::ref<java::lang::String>>(p1); }
	jni::ref<java::lang::String> getStringValue() { return call_method<"getStringValue", jni::ref<java::lang::String>>(); }
	void dispatchCharactersEvents(jint p1, jni::ref<org::xml::sax::ContentHandler> p2, jboolean p3) { return call_method<"dispatchCharactersEvents", void>(p1, p2, p3); }
	jni::ref<java::lang::String> getNodeValue(jint p1) { return call_method<"getNodeValue", jni::ref<java::lang::String>>(p1); }

protected:

	SAX2DTM2(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_DTM_REF_SAX2DTM_SAX2DTM2
