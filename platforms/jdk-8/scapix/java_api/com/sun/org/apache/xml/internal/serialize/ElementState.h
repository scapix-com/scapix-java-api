// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_SERIALIZE_ELEMENTSTATE_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_SERIALIZE_ELEMENTSTATE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xml::internal::serialize { class ElementState; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xml::internal::serialize::ElementState>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xml/internal/serialize/ElementState";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_SERIALIZE_ELEMENTSTATE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_SERIALIZE_ELEMENTSTATE)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_SERIALIZE_ELEMENTSTATE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Map.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xml::internal::serialize::ElementState : public jni::object_base<"com/sun/org/apache/xml/internal/serialize/ElementState",
	java::lang::Object>
{
public:

	jni::ref<java::lang::String> rawName() { return get_field<"rawName", jni::ref<java::lang::String>>(); }
	void rawName(jni::ref<java::lang::String> v) { set_field<"rawName", jni::ref<java::lang::String>>(v); }
	jni::ref<java::lang::String> localName() { return get_field<"localName", jni::ref<java::lang::String>>(); }
	void localName(jni::ref<java::lang::String> v) { set_field<"localName", jni::ref<java::lang::String>>(v); }
	jni::ref<java::lang::String> namespaceURI() { return get_field<"namespaceURI", jni::ref<java::lang::String>>(); }
	void namespaceURI(jni::ref<java::lang::String> v) { set_field<"namespaceURI", jni::ref<java::lang::String>>(v); }
	jboolean preserveSpace() { return get_field<"preserveSpace", jboolean>(); }
	void preserveSpace(jboolean v) { set_field<"preserveSpace", jboolean>(v); }
	jboolean empty() { return get_field<"empty", jboolean>(); }
	void empty(jboolean v) { set_field<"empty", jboolean>(v); }
	jboolean afterElement() { return get_field<"afterElement", jboolean>(); }
	void afterElement(jboolean v) { set_field<"afterElement", jboolean>(v); }
	jboolean afterComment() { return get_field<"afterComment", jboolean>(); }
	void afterComment(jboolean v) { set_field<"afterComment", jboolean>(v); }
	jboolean doCData() { return get_field<"doCData", jboolean>(); }
	void doCData(jboolean v) { set_field<"doCData", jboolean>(v); }
	jboolean unescaped() { return get_field<"unescaped", jboolean>(); }
	void unescaped(jboolean v) { set_field<"unescaped", jboolean>(v); }
	jboolean inCData() { return get_field<"inCData", jboolean>(); }
	void inCData(jboolean v) { set_field<"inCData", jboolean>(v); }
	jni::ref<java::util::Map> prefixes() { return get_field<"prefixes", jni::ref<java::util::Map>>(); }
	void prefixes(jni::ref<java::util::Map> v) { set_field<"prefixes", jni::ref<java::util::Map>>(v); }

	static jni::ref<com::sun::org::apache::xml::internal::serialize::ElementState> new_object() { return base_::new_object(); }

protected:

	ElementState(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_SERIALIZE_ELEMENTSTATE
