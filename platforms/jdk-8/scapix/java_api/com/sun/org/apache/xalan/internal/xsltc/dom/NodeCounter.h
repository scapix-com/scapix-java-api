// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_DOM_NODECOUNTER_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_DOM_NODECOUNTER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xalan::internal::xsltc::dom { class NodeCounter; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xalan::internal::xsltc::dom::NodeCounter>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xalan/internal/xsltc/dom/NodeCounter";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_DOM_NODECOUNTER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_DOM_NODECOUNTER)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_DOM_NODECOUNTER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/xalan/internal/xsltc/DOM.h>
#include <scapix/java_api/com/sun/org/apache/xalan/internal/xsltc/Translet.h>
#include <scapix/java_api/com/sun/org/apache/xml/internal/dtm/DTMAxisIterator.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xalan::internal::xsltc::dom::NodeCounter : public jni::object_base<"com/sun/org/apache/xalan/internal/xsltc/dom/NodeCounter",
	java::lang::Object>
{
public:

	static jint END() { return get_static_field<"END", jint>(); }
	jni::ref<com::sun::org::apache::xalan::internal::xsltc::DOM> _document() { return get_field<"_document", jni::ref<com::sun::org::apache::xalan::internal::xsltc::DOM>>(); }
	jni::ref<com::sun::org::apache::xml::internal::dtm::DTMAxisIterator> _iterator() { return get_field<"_iterator", jni::ref<com::sun::org::apache::xml::internal::dtm::DTMAxisIterator>>(); }
	jni::ref<com::sun::org::apache::xalan::internal::xsltc::Translet> _translet() { return get_field<"_translet", jni::ref<com::sun::org::apache::xalan::internal::xsltc::Translet>>(); }

	jni::ref<com::sun::org::apache::xalan::internal::xsltc::dom::NodeCounter> setStartNode(jint p1) { return call_method<"setStartNode", jni::ref<com::sun::org::apache::xalan::internal::xsltc::dom::NodeCounter>>(p1); }
	jni::ref<com::sun::org::apache::xalan::internal::xsltc::dom::NodeCounter> setValue(jdouble p1) { return call_method<"setValue", jni::ref<com::sun::org::apache::xalan::internal::xsltc::dom::NodeCounter>>(p1); }
	jni::ref<com::sun::org::apache::xalan::internal::xsltc::dom::NodeCounter> setDefaultFormatting() { return call_method<"setDefaultFormatting", jni::ref<com::sun::org::apache::xalan::internal::xsltc::dom::NodeCounter>>(); }
	jni::ref<java::lang::String> getCounter() { return call_method<"getCounter", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getCounter(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2, jni::ref<java::lang::String> p3, jni::ref<java::lang::String> p4, jni::ref<java::lang::String> p5) { return call_method<"getCounter", jni::ref<java::lang::String>>(p1, p2, p3, p4, p5); }
	jboolean matchesCount(jint p1) { return call_method<"matchesCount", jboolean>(p1); }
	jboolean matchesFrom(jint p1) { return call_method<"matchesFrom", jboolean>(p1); }

protected:

	NodeCounter(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_DOM_NODECOUNTER
