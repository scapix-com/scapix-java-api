// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/io/Reader.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_IO_UCSREADER_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_IO_UCSREADER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xerces::internal::impl::io { class UCSReader; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xerces::internal::impl::io::UCSReader>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xerces/internal/impl/io/UCSReader";
	using base_classes = std::tuple<scapix::java_api::java::io::Reader>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_IO_UCSREADER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_IO_UCSREADER)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_IO_UCSREADER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/InputStream.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xerces::internal::impl::io::UCSReader : public jni::object_base<"com/sun/org/apache/xerces/internal/impl/io/UCSReader",
	java::io::Reader>
{
public:

	static jint DEFAULT_BUFFER_SIZE() { return get_static_field<"DEFAULT_BUFFER_SIZE", jint>(); }
	static jshort UCS2LE() { return get_static_field<"UCS2LE", jshort>(); }
	static jshort UCS2BE() { return get_static_field<"UCS2BE", jshort>(); }
	static jshort UCS4LE() { return get_static_field<"UCS4LE", jshort>(); }
	static jshort UCS4BE() { return get_static_field<"UCS4BE", jshort>(); }

	static jni::ref<com::sun::org::apache::xerces::internal::impl::io::UCSReader> new_object(jni::ref<java::io::InputStream> p1, jshort p2) { return base_::new_object(p1, p2); }
	static jni::ref<com::sun::org::apache::xerces::internal::impl::io::UCSReader> new_object(jni::ref<java::io::InputStream> p1, jint p2, jshort p3) { return base_::new_object(p1, p2, p3); }
	jint read() { return call_method<"read", jint>(); }
	jint read(jni::ref<jni::array<jchar>> p1, jint p2, jint p3) { return call_method<"read", jint>(p1, p2, p3); }
	jlong skip(jlong p1) { return call_method<"skip", jlong>(p1); }
	jboolean ready() { return call_method<"ready", jboolean>(); }
	jboolean markSupported() { return call_method<"markSupported", jboolean>(); }
	void mark(jint p1) { return call_method<"mark", void>(p1); }
	void reset() { return call_method<"reset", void>(); }
	void close() { return call_method<"close", void>(); }

protected:

	UCSReader(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_IO_UCSREADER
