// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/xs/XSSimpleTypeDefinition.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_DV_XSSIMPLETYPE_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_DV_XSSIMPLETYPE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xerces::internal::impl::dv { class XSSimpleType; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xerces::internal::impl::dv::XSSimpleType>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xerces/internal/impl/dv/XSSimpleType";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::com::sun::org::apache::xerces::internal::xs::XSSimpleTypeDefinition>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_DV_XSSIMPLETYPE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_DV_XSSIMPLETYPE)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_DV_XSSIMPLETYPE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/xerces/internal/impl/dv/ValidatedInfo.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/impl/dv/ValidationContext.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/impl/dv/XSFacets.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xerces::internal::impl::dv::XSSimpleType : public jni::object_base<"com/sun/org/apache/xerces/internal/impl/dv/XSSimpleType",
	java::lang::Object,
	com::sun::org::apache::xerces::internal::xs::XSSimpleTypeDefinition>
{
public:

	static jshort WS_PRESERVE() { return get_static_field<"WS_PRESERVE", jshort>(); }
	static jshort WS_REPLACE() { return get_static_field<"WS_REPLACE", jshort>(); }
	static jshort WS_COLLAPSE() { return get_static_field<"WS_COLLAPSE", jshort>(); }
	static jshort PRIMITIVE_STRING() { return get_static_field<"PRIMITIVE_STRING", jshort>(); }
	static jshort PRIMITIVE_BOOLEAN() { return get_static_field<"PRIMITIVE_BOOLEAN", jshort>(); }
	static jshort PRIMITIVE_DECIMAL() { return get_static_field<"PRIMITIVE_DECIMAL", jshort>(); }
	static jshort PRIMITIVE_FLOAT() { return get_static_field<"PRIMITIVE_FLOAT", jshort>(); }
	static jshort PRIMITIVE_DOUBLE() { return get_static_field<"PRIMITIVE_DOUBLE", jshort>(); }
	static jshort PRIMITIVE_DURATION() { return get_static_field<"PRIMITIVE_DURATION", jshort>(); }
	static jshort PRIMITIVE_DATETIME() { return get_static_field<"PRIMITIVE_DATETIME", jshort>(); }
	static jshort PRIMITIVE_TIME() { return get_static_field<"PRIMITIVE_TIME", jshort>(); }
	static jshort PRIMITIVE_DATE() { return get_static_field<"PRIMITIVE_DATE", jshort>(); }
	static jshort PRIMITIVE_GYEARMONTH() { return get_static_field<"PRIMITIVE_GYEARMONTH", jshort>(); }
	static jshort PRIMITIVE_GYEAR() { return get_static_field<"PRIMITIVE_GYEAR", jshort>(); }
	static jshort PRIMITIVE_GMONTHDAY() { return get_static_field<"PRIMITIVE_GMONTHDAY", jshort>(); }
	static jshort PRIMITIVE_GDAY() { return get_static_field<"PRIMITIVE_GDAY", jshort>(); }
	static jshort PRIMITIVE_GMONTH() { return get_static_field<"PRIMITIVE_GMONTH", jshort>(); }
	static jshort PRIMITIVE_HEXBINARY() { return get_static_field<"PRIMITIVE_HEXBINARY", jshort>(); }
	static jshort PRIMITIVE_BASE64BINARY() { return get_static_field<"PRIMITIVE_BASE64BINARY", jshort>(); }
	static jshort PRIMITIVE_ANYURI() { return get_static_field<"PRIMITIVE_ANYURI", jshort>(); }
	static jshort PRIMITIVE_QNAME() { return get_static_field<"PRIMITIVE_QNAME", jshort>(); }
	static jshort PRIMITIVE_PRECISIONDECIMAL() { return get_static_field<"PRIMITIVE_PRECISIONDECIMAL", jshort>(); }
	static jshort PRIMITIVE_NOTATION() { return get_static_field<"PRIMITIVE_NOTATION", jshort>(); }

	jshort getPrimitiveKind() { return call_method<"getPrimitiveKind", jshort>(); }
	jni::ref<java::lang::Object> validate(jni::ref<java::lang::String> p1, jni::ref<com::sun::org::apache::xerces::internal::impl::dv::ValidationContext> p2, jni::ref<com::sun::org::apache::xerces::internal::impl::dv::ValidatedInfo> p3) { return call_method<"validate", jni::ref<java::lang::Object>>(p1, p2, p3); }
	jni::ref<java::lang::Object> validate(jni::ref<java::lang::Object> p1, jni::ref<com::sun::org::apache::xerces::internal::impl::dv::ValidationContext> p2, jni::ref<com::sun::org::apache::xerces::internal::impl::dv::ValidatedInfo> p3) { return call_method<"validate", jni::ref<java::lang::Object>>(p1, p2, p3); }
	void validate(jni::ref<com::sun::org::apache::xerces::internal::impl::dv::ValidationContext> p1, jni::ref<com::sun::org::apache::xerces::internal::impl::dv::ValidatedInfo> p2) { return call_method<"validate", void>(p1, p2); }
	void applyFacets(jni::ref<com::sun::org::apache::xerces::internal::impl::dv::XSFacets> p1, jshort p2, jshort p3, jni::ref<com::sun::org::apache::xerces::internal::impl::dv::ValidationContext> p4) { return call_method<"applyFacets", void>(p1, p2, p3, p4); }
	jboolean isEqual(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2) { return call_method<"isEqual", jboolean>(p1, p2); }
	jboolean isIDType() { return call_method<"isIDType", jboolean>(); }
	jshort getWhitespace() { return call_method<"getWhitespace", jshort>(); }

protected:

	XSSimpleType(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_DV_XSSIMPLETYPE
