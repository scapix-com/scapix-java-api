// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Enum.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_EXCEPTIONCONST_EXCS_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_EXCEPTIONCONST_EXCS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::bcel::internal { class ExceptionConst_EXCS; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::bcel::internal::ExceptionConst_EXCS>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/bcel/internal/ExceptionConst$EXCS";
	using base_classes = std::tuple<scapix::java_api::java::lang::Enum>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_EXCEPTIONCONST_EXCS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_EXCEPTIONCONST_EXCS)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_EXCEPTIONCONST_EXCS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::bcel::internal::ExceptionConst_EXCS : public jni::object_base<"com/sun/org/apache/bcel/internal/ExceptionConst$EXCS",
	java::lang::Enum>
{
public:

	static jni::ref<com::sun::org::apache::bcel::internal::ExceptionConst_EXCS> EXCS_CLASS_AND_INTERFACE_RESOLUTION() { return get_static_field<"EXCS_CLASS_AND_INTERFACE_RESOLUTION", jni::ref<com::sun::org::apache::bcel::internal::ExceptionConst_EXCS>>(); }
	static jni::ref<com::sun::org::apache::bcel::internal::ExceptionConst_EXCS> EXCS_FIELD_AND_METHOD_RESOLUTION() { return get_static_field<"EXCS_FIELD_AND_METHOD_RESOLUTION", jni::ref<com::sun::org::apache::bcel::internal::ExceptionConst_EXCS>>(); }
	static jni::ref<com::sun::org::apache::bcel::internal::ExceptionConst_EXCS> EXCS_INTERFACE_METHOD_RESOLUTION() { return get_static_field<"EXCS_INTERFACE_METHOD_RESOLUTION", jni::ref<com::sun::org::apache::bcel::internal::ExceptionConst_EXCS>>(); }
	static jni::ref<com::sun::org::apache::bcel::internal::ExceptionConst_EXCS> EXCS_STRING_RESOLUTION() { return get_static_field<"EXCS_STRING_RESOLUTION", jni::ref<com::sun::org::apache::bcel::internal::ExceptionConst_EXCS>>(); }
	static jni::ref<com::sun::org::apache::bcel::internal::ExceptionConst_EXCS> EXCS_ARRAY_EXCEPTION() { return get_static_field<"EXCS_ARRAY_EXCEPTION", jni::ref<com::sun::org::apache::bcel::internal::ExceptionConst_EXCS>>(); }

	static jni::ref<jni::array<com::sun::org::apache::bcel::internal::ExceptionConst_EXCS>> values() { return call_static_method<"values", jni::ref<jni::array<com::sun::org::apache::bcel::internal::ExceptionConst_EXCS>>>(); }
	static jni::ref<com::sun::org::apache::bcel::internal::ExceptionConst_EXCS> valueOf(jni::ref<java::lang::String> p1) { return call_static_method<"valueOf", jni::ref<com::sun::org::apache::bcel::internal::ExceptionConst_EXCS>>(p1); }

protected:

	ExceptionConst_EXCS(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_EXCEPTIONCONST_EXCS
