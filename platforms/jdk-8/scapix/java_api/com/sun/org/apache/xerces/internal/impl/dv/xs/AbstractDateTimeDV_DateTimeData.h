// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/xs/datatypes/XSDateTime.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_DV_XS_ABSTRACTDATETIMEDV_DATETIMEDATA_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_DV_XS_ABSTRACTDATETIMEDV_DATETIMEDATA_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xerces::internal::impl::dv::xs { class AbstractDateTimeDV_DateTimeData; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xerces::internal::impl::dv::xs::AbstractDateTimeDV_DateTimeData>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV$DateTimeData";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::com::sun::org::apache::xerces::internal::xs::datatypes::XSDateTime>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_DV_XS_ABSTRACTDATETIMEDV_DATETIMEDATA_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_DV_XS_ABSTRACTDATETIMEDV_DATETIMEDATA)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_DV_XS_ABSTRACTDATETIMEDV_DATETIMEDATA

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/xml/datatype/Duration.h>
#include <scapix/java_api/javax/xml/datatype/XMLGregorianCalendar.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class com::sun::org::apache::xerces::internal::impl::dv::xs::AbstractDateTimeDV_DateTimeData : public jni::object_base<"com/sun/org/apache/xerces/internal/impl/dv/xs/AbstractDateTimeDV$DateTimeData",
	java::lang::Object,
	com::sun::org::apache::xerces::internal::xs::datatypes::XSDateTime>
{
public:

	static jni::ref<com::sun::org::apache::xerces::internal::impl::dv::xs::AbstractDateTimeDV_DateTimeData> new_object(jni::ref<java::lang::String> p1, jni::ref<com::sun::org::apache::xerces::internal::impl::dv::xs::AbstractDateTimeDV> p2) { return base_::new_object(p1, p2); }
	static jni::ref<com::sun::org::apache::xerces::internal::impl::dv::xs::AbstractDateTimeDV_DateTimeData> new_object(jint p1, jint p2, jint p3, jint p4, jint p5, jdouble p6, jint p7, jni::ref<java::lang::String> p8, jboolean p9, jni::ref<com::sun::org::apache::xerces::internal::impl::dv::xs::AbstractDateTimeDV> p10) { return base_::new_object(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10); }
	jboolean equals(jni::ref<java::lang::Object> p1) { return call_method<"equals", jboolean>(p1); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jint getYears() { return call_method<"getYears", jint>(); }
	jint getMonths() { return call_method<"getMonths", jint>(); }
	jint getDays() { return call_method<"getDays", jint>(); }
	jint getHours() { return call_method<"getHours", jint>(); }
	jint getMinutes() { return call_method<"getMinutes", jint>(); }
	jdouble getSeconds() { return call_method<"getSeconds", jdouble>(); }
	jboolean hasTimeZone() { return call_method<"hasTimeZone", jboolean>(); }
	jint getTimeZoneHours() { return call_method<"getTimeZoneHours", jint>(); }
	jint getTimeZoneMinutes() { return call_method<"getTimeZoneMinutes", jint>(); }
	jni::ref<java::lang::String> getLexicalValue() { return call_method<"getLexicalValue", jni::ref<java::lang::String>>(); }
	jni::ref<com::sun::org::apache::xerces::internal::xs::datatypes::XSDateTime> normalize() { return call_method<"normalize", jni::ref<com::sun::org::apache::xerces::internal::xs::datatypes::XSDateTime>>(); }
	jboolean isNormalized() { return call_method<"isNormalized", jboolean>(); }
	jni::ref<java::lang::Object> clone() { return call_method<"clone", jni::ref<java::lang::Object>>(); }
	jni::ref<javax::xml::datatype::XMLGregorianCalendar> getXMLGregorianCalendar() { return call_method<"getXMLGregorianCalendar", jni::ref<javax::xml::datatype::XMLGregorianCalendar>>(); }
	jni::ref<javax::xml::datatype::Duration> getDuration() { return call_method<"getDuration", jni::ref<javax::xml::datatype::Duration>>(); }

protected:

	AbstractDateTimeDV_DateTimeData(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_DV_XS_ABSTRACTDATETIMEDV_DATETIMEDATA
