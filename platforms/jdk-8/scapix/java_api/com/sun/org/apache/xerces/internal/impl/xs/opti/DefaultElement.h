// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/org/apache/xerces/internal/impl/xs/opti/NodeImpl.h>
#include <scapix/java_api/org/w3c/dom/Element.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_XS_OPTI_DEFAULTELEMENT_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_XS_OPTI_DEFAULTELEMENT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xerces::internal::impl::xs::opti { class DefaultElement; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xerces::internal::impl::xs::opti::DefaultElement>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xerces/internal/impl/xs/opti/DefaultElement";
	using base_classes = std::tuple<scapix::java_api::com::sun::org::apache::xerces::internal::impl::xs::opti::NodeImpl, scapix::java_api::org::w3c::dom::Element>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_XS_OPTI_DEFAULTELEMENT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_XS_OPTI_DEFAULTELEMENT)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_XS_OPTI_DEFAULTELEMENT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/w3c/dom/Attr.h>
#include <scapix/java_api/org/w3c/dom/NodeList.h>
#include <scapix/java_api/org/w3c/dom/TypeInfo.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xerces::internal::impl::xs::opti::DefaultElement : public jni::object_base<"com/sun/org/apache/xerces/internal/impl/xs/opti/DefaultElement",
	com::sun::org::apache::xerces::internal::impl::xs::opti::NodeImpl,
	org::w3c::dom::Element>
{
public:

	static jni::ref<com::sun::org::apache::xerces::internal::impl::xs::opti::DefaultElement> new_object() { return base_::new_object(); }
	static jni::ref<com::sun::org::apache::xerces::internal::impl::xs::opti::DefaultElement> new_object(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2, jni::ref<java::lang::String> p3, jni::ref<java::lang::String> p4, jshort p5) { return base_::new_object(p1, p2, p3, p4, p5); }
	jni::ref<java::lang::String> getTagName() { return call_method<"getTagName", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getAttribute(jni::ref<java::lang::String> p1) { return call_method<"getAttribute", jni::ref<java::lang::String>>(p1); }
	jni::ref<org::w3c::dom::Attr> getAttributeNode(jni::ref<java::lang::String> p1) { return call_method<"getAttributeNode", jni::ref<org::w3c::dom::Attr>>(p1); }
	jni::ref<org::w3c::dom::NodeList> getElementsByTagName(jni::ref<java::lang::String> p1) { return call_method<"getElementsByTagName", jni::ref<org::w3c::dom::NodeList>>(p1); }
	jni::ref<java::lang::String> getAttributeNS(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return call_method<"getAttributeNS", jni::ref<java::lang::String>>(p1, p2); }
	jni::ref<org::w3c::dom::Attr> getAttributeNodeNS(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return call_method<"getAttributeNodeNS", jni::ref<org::w3c::dom::Attr>>(p1, p2); }
	jni::ref<org::w3c::dom::NodeList> getElementsByTagNameNS(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return call_method<"getElementsByTagNameNS", jni::ref<org::w3c::dom::NodeList>>(p1, p2); }
	jboolean hasAttribute(jni::ref<java::lang::String> p1) { return call_method<"hasAttribute", jboolean>(p1); }
	jboolean hasAttributeNS(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return call_method<"hasAttributeNS", jboolean>(p1, p2); }
	jni::ref<org::w3c::dom::TypeInfo> getSchemaTypeInfo() { return call_method<"getSchemaTypeInfo", jni::ref<org::w3c::dom::TypeInfo>>(); }
	void setAttribute(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return call_method<"setAttribute", void>(p1, p2); }
	void removeAttribute(jni::ref<java::lang::String> p1) { return call_method<"removeAttribute", void>(p1); }
	jni::ref<org::w3c::dom::Attr> removeAttributeNode(jni::ref<org::w3c::dom::Attr> p1) { return call_method<"removeAttributeNode", jni::ref<org::w3c::dom::Attr>>(p1); }
	jni::ref<org::w3c::dom::Attr> setAttributeNode(jni::ref<org::w3c::dom::Attr> p1) { return call_method<"setAttributeNode", jni::ref<org::w3c::dom::Attr>>(p1); }
	void setAttributeNS(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2, jni::ref<java::lang::String> p3) { return call_method<"setAttributeNS", void>(p1, p2, p3); }
	void removeAttributeNS(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return call_method<"removeAttributeNS", void>(p1, p2); }
	jni::ref<org::w3c::dom::Attr> setAttributeNodeNS(jni::ref<org::w3c::dom::Attr> p1) { return call_method<"setAttributeNodeNS", jni::ref<org::w3c::dom::Attr>>(p1); }
	void setIdAttributeNode(jni::ref<org::w3c::dom::Attr> p1, jboolean p2) { return call_method<"setIdAttributeNode", void>(p1, p2); }
	void setIdAttribute(jni::ref<java::lang::String> p1, jboolean p2) { return call_method<"setIdAttribute", void>(p1, p2); }
	void setIdAttributeNS(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2, jboolean p3) { return call_method<"setIdAttributeNS", void>(p1, p2, p3); }

protected:

	DefaultElement(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_XS_OPTI_DEFAULTELEMENT
