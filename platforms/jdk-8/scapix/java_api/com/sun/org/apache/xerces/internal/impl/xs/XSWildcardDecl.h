// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/xs/XSWildcard.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_XS_XSWILDCARDDECL_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_XS_XSWILDCARDDECL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xerces::internal::impl::xs { class XSWildcardDecl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xerces::internal::impl::xs::XSWildcardDecl>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xerces/internal/impl/xs/XSWildcardDecl";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::com::sun::org::apache::xerces::internal::xs::XSWildcard>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_XS_XSWILDCARDDECL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_XS_XSWILDCARDDECL)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_XS_XSWILDCARDDECL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/xerces/internal/xs/StringList.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/xs/XSAnnotation.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/xs/XSNamespaceItem.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/xs/XSObjectList.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xerces::internal::impl::xs::XSWildcardDecl : public jni::object_base<"com/sun/org/apache/xerces/internal/impl/xs/XSWildcardDecl",
	java::lang::Object,
	com::sun::org::apache::xerces::internal::xs::XSWildcard>
{
public:

	static jni::ref<java::lang::String> ABSENT() { return get_static_field<"ABSENT", jni::ref<java::lang::String>>(); }
	jshort fType() { return get_field<"fType", jshort>(); }
	void fType(jshort v) { set_field<"fType", jshort>(v); }
	jshort fProcessContents() { return get_field<"fProcessContents", jshort>(); }
	void fProcessContents(jshort v) { set_field<"fProcessContents", jshort>(v); }
	jni::ref<jni::array<java::lang::String>> fNamespaceList() { return get_field<"fNamespaceList", jni::ref<jni::array<java::lang::String>>>(); }
	void fNamespaceList(jni::ref<jni::array<java::lang::String>> v) { set_field<"fNamespaceList", jni::ref<jni::array<java::lang::String>>>(v); }
	jni::ref<com::sun::org::apache::xerces::internal::xs::XSObjectList> fAnnotations() { return get_field<"fAnnotations", jni::ref<com::sun::org::apache::xerces::internal::xs::XSObjectList>>(); }
	void fAnnotations(jni::ref<com::sun::org::apache::xerces::internal::xs::XSObjectList> v) { set_field<"fAnnotations", jni::ref<com::sun::org::apache::xerces::internal::xs::XSObjectList>>(v); }

	static jni::ref<com::sun::org::apache::xerces::internal::impl::xs::XSWildcardDecl> new_object() { return base_::new_object(); }
	jboolean allowNamespace(jni::ref<java::lang::String> p1) { return call_method<"allowNamespace", jboolean>(p1); }
	jboolean isSubsetOf(jni::ref<com::sun::org::apache::xerces::internal::impl::xs::XSWildcardDecl> p1) { return call_method<"isSubsetOf", jboolean>(p1); }
	jboolean weakerProcessContents(jni::ref<com::sun::org::apache::xerces::internal::impl::xs::XSWildcardDecl> p1) { return call_method<"weakerProcessContents", jboolean>(p1); }
	jni::ref<com::sun::org::apache::xerces::internal::impl::xs::XSWildcardDecl> performUnionWith(jni::ref<com::sun::org::apache::xerces::internal::impl::xs::XSWildcardDecl> p1, jshort p2) { return call_method<"performUnionWith", jni::ref<com::sun::org::apache::xerces::internal::impl::xs::XSWildcardDecl>>(p1, p2); }
	jni::ref<com::sun::org::apache::xerces::internal::impl::xs::XSWildcardDecl> performIntersectionWith(jni::ref<com::sun::org::apache::xerces::internal::impl::xs::XSWildcardDecl> p1, jshort p2) { return call_method<"performIntersectionWith", jni::ref<com::sun::org::apache::xerces::internal::impl::xs::XSWildcardDecl>>(p1, p2); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jshort getType() { return call_method<"getType", jshort>(); }
	jni::ref<java::lang::String> getName() { return call_method<"getName", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getNamespace() { return call_method<"getNamespace", jni::ref<java::lang::String>>(); }
	jshort getConstraintType() { return call_method<"getConstraintType", jshort>(); }
	jni::ref<com::sun::org::apache::xerces::internal::xs::StringList> getNsConstraintList() { return call_method<"getNsConstraintList", jni::ref<com::sun::org::apache::xerces::internal::xs::StringList>>(); }
	jshort getProcessContents() { return call_method<"getProcessContents", jshort>(); }
	jni::ref<java::lang::String> getProcessContentsAsString() { return call_method<"getProcessContentsAsString", jni::ref<java::lang::String>>(); }
	jni::ref<com::sun::org::apache::xerces::internal::xs::XSAnnotation> getAnnotation() { return call_method<"getAnnotation", jni::ref<com::sun::org::apache::xerces::internal::xs::XSAnnotation>>(); }
	jni::ref<com::sun::org::apache::xerces::internal::xs::XSObjectList> getAnnotations() { return call_method<"getAnnotations", jni::ref<com::sun::org::apache::xerces::internal::xs::XSObjectList>>(); }
	jni::ref<com::sun::org::apache::xerces::internal::xs::XSNamespaceItem> getNamespaceItem() { return call_method<"getNamespaceItem", jni::ref<com::sun::org::apache::xerces::internal::xs::XSNamespaceItem>>(); }

protected:

	XSWildcardDecl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_XS_XSWILDCARDDECL
