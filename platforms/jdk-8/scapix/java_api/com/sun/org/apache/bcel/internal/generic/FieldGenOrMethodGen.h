// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/AccessFlags.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/generic/NamedAndTyped.h>
#include <scapix/java_api/java/lang/Cloneable.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_GENERIC_FIELDGENORMETHODGEN_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_GENERIC_FIELDGENORMETHODGEN_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::bcel::internal::generic { class FieldGenOrMethodGen; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::bcel::internal::generic::FieldGenOrMethodGen>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/bcel/internal/generic/FieldGenOrMethodGen";
	using base_classes = std::tuple<scapix::java_api::com::sun::org::apache::bcel::internal::classfile::AccessFlags, scapix::java_api::com::sun::org::apache::bcel::internal::generic::NamedAndTyped, scapix::java_api::java::lang::Cloneable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_GENERIC_FIELDGENORMETHODGEN_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_GENERIC_FIELDGENORMETHODGEN)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_GENERIC_FIELDGENORMETHODGEN

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/Attribute.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/generic/AnnotationEntryGen.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/generic/ConstantPoolGen.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/generic/Type.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::bcel::internal::generic::FieldGenOrMethodGen : public jni::object_base<"com/sun/org/apache/bcel/internal/generic/FieldGenOrMethodGen",
	com::sun::org::apache::bcel::internal::classfile::AccessFlags,
	com::sun::org::apache::bcel::internal::generic::NamedAndTyped,
	java::lang::Cloneable>
{
public:

	void addAnnotationEntry(jni::ref<com::sun::org::apache::bcel::internal::generic::AnnotationEntryGen> p1) { return call_method<"addAnnotationEntry", void>(p1); }
	void addAttribute(jni::ref<com::sun::org::apache::bcel::internal::classfile::Attribute> p1) { return call_method<"addAttribute", void>(p1); }
	jni::ref<java::lang::Object> clone() { return call_method<"clone", jni::ref<java::lang::Object>>(); }
	jni::ref<jni::array<com::sun::org::apache::bcel::internal::generic::AnnotationEntryGen>> getAnnotationEntries() { return call_method<"getAnnotationEntries", jni::ref<jni::array<com::sun::org::apache::bcel::internal::generic::AnnotationEntryGen>>>(); }
	jni::ref<jni::array<com::sun::org::apache::bcel::internal::classfile::Attribute>> getAttributes() { return call_method<"getAttributes", jni::ref<jni::array<com::sun::org::apache::bcel::internal::classfile::Attribute>>>(); }
	jni::ref<com::sun::org::apache::bcel::internal::generic::ConstantPoolGen> getConstantPool() { return call_method<"getConstantPool", jni::ref<com::sun::org::apache::bcel::internal::generic::ConstantPoolGen>>(); }
	jni::ref<java::lang::String> getName() { return call_method<"getName", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getSignature() { return call_method<"getSignature", jni::ref<java::lang::String>>(); }
	jni::ref<com::sun::org::apache::bcel::internal::generic::Type> getType() { return call_method<"getType", jni::ref<com::sun::org::apache::bcel::internal::generic::Type>>(); }
	void removeAnnotationEntries() { return call_method<"removeAnnotationEntries", void>(); }
	void removeAnnotationEntry(jni::ref<com::sun::org::apache::bcel::internal::generic::AnnotationEntryGen> p1) { return call_method<"removeAnnotationEntry", void>(p1); }
	void removeAttribute(jni::ref<com::sun::org::apache::bcel::internal::classfile::Attribute> p1) { return call_method<"removeAttribute", void>(p1); }
	void removeAttributes() { return call_method<"removeAttributes", void>(); }
	void setConstantPool(jni::ref<com::sun::org::apache::bcel::internal::generic::ConstantPoolGen> p1) { return call_method<"setConstantPool", void>(p1); }
	void setName(jni::ref<java::lang::String> p1) { return call_method<"setName", void>(p1); }
	void setType(jni::ref<com::sun::org::apache::bcel::internal::generic::Type> p1) { return call_method<"setType", void>(p1); }

protected:

	FieldGenOrMethodGen(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_GENERIC_FIELDGENORMETHODGEN
