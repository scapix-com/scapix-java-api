// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_DTD_XMLENTITYDECL_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_DTD_XMLENTITYDECL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xerces::internal::impl::dtd { class XMLEntityDecl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xerces::internal::impl::dtd::XMLEntityDecl>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xerces/internal/impl/dtd/XMLEntityDecl";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_DTD_XMLENTITYDECL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_DTD_XMLENTITYDECL)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_DTD_XMLENTITYDECL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xerces::internal::impl::dtd::XMLEntityDecl : public jni::object_base<"com/sun/org/apache/xerces/internal/impl/dtd/XMLEntityDecl",
	java::lang::Object>
{
public:

	jni::ref<java::lang::String> name() { return get_field<"name", jni::ref<java::lang::String>>(); }
	void name(jni::ref<java::lang::String> v) { set_field<"name", jni::ref<java::lang::String>>(v); }
	jni::ref<java::lang::String> publicId() { return get_field<"publicId", jni::ref<java::lang::String>>(); }
	void publicId(jni::ref<java::lang::String> v) { set_field<"publicId", jni::ref<java::lang::String>>(v); }
	jni::ref<java::lang::String> systemId() { return get_field<"systemId", jni::ref<java::lang::String>>(); }
	void systemId(jni::ref<java::lang::String> v) { set_field<"systemId", jni::ref<java::lang::String>>(v); }
	jni::ref<java::lang::String> baseSystemId() { return get_field<"baseSystemId", jni::ref<java::lang::String>>(); }
	void baseSystemId(jni::ref<java::lang::String> v) { set_field<"baseSystemId", jni::ref<java::lang::String>>(v); }
	jni::ref<java::lang::String> notation() { return get_field<"notation", jni::ref<java::lang::String>>(); }
	void notation(jni::ref<java::lang::String> v) { set_field<"notation", jni::ref<java::lang::String>>(v); }
	jboolean isPE() { return get_field<"isPE", jboolean>(); }
	void isPE(jboolean v) { set_field<"isPE", jboolean>(v); }
	jboolean inExternal() { return get_field<"inExternal", jboolean>(); }
	void inExternal(jboolean v) { set_field<"inExternal", jboolean>(v); }
	jni::ref<java::lang::String> value() { return get_field<"value", jni::ref<java::lang::String>>(); }
	void value(jni::ref<java::lang::String> v) { set_field<"value", jni::ref<java::lang::String>>(v); }

	static jni::ref<com::sun::org::apache::xerces::internal::impl::dtd::XMLEntityDecl> new_object() { return base_::new_object(); }
	void setValues(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2, jni::ref<java::lang::String> p3, jni::ref<java::lang::String> p4, jni::ref<java::lang::String> p5, jboolean p6, jboolean p7) { return call_method<"setValues", void>(p1, p2, p3, p4, p5, p6, p7); }
	void setValues(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2, jni::ref<java::lang::String> p3, jni::ref<java::lang::String> p4, jni::ref<java::lang::String> p5, jni::ref<java::lang::String> p6, jboolean p7, jboolean p8) { return call_method<"setValues", void>(p1, p2, p3, p4, p5, p6, p7, p8); }
	void clear() { return call_method<"clear", void>(); }

protected:

	XMLEntityDecl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_DTD_XMLENTITYDECL
