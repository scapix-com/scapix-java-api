// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/org/apache/xerces/internal/xni/QName.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/xs/datatypes/XSQName.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_DV_XS_QNAMEDV_XQNAME_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_DV_XS_QNAMEDV_XQNAME_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xerces::internal::impl::dv::xs { class QNameDV_XQName; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xerces::internal::impl::dv::xs::QNameDV_XQName>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xerces/internal/impl/dv/xs/QNameDV$XQName";
	using base_classes = std::tuple<scapix::java_api::com::sun::org::apache::xerces::internal::xni::QName, scapix::java_api::com::sun::org::apache::xerces::internal::xs::datatypes::XSQName>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_DV_XS_QNAMEDV_XQNAME_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_DV_XS_QNAMEDV_XQNAME)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_DV_XS_QNAMEDV_XQNAME

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/xml/namespace/QName.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class com::sun::org::apache::xerces::internal::impl::dv::xs::QNameDV_XQName : public jni::object_base<"com/sun/org/apache/xerces/internal/impl/dv/xs/QNameDV$XQName",
	com::sun::org::apache::xerces::internal::xni::QName,
	com::sun::org::apache::xerces::internal::xs::datatypes::XSQName>
{
public:

	static jni::ref<com::sun::org::apache::xerces::internal::impl::dv::xs::QNameDV_XQName> new_object(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2, jni::ref<java::lang::String> p3, jni::ref<java::lang::String> p4) { return base_::new_object(p1, p2, p3, p4); }
	jboolean equals(jni::ref<java::lang::Object> p1) { return call_method<"equals", jboolean>(p1); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jni::ref<javax::xml::namespace_::QName> getJAXPQName() { return call_method<"getJAXPQName", jni::ref<javax::xml::namespace_::QName>>(); }
	jni::ref<com::sun::org::apache::xerces::internal::xni::QName> getXNIQName() { return call_method<"getXNIQName", jni::ref<com::sun::org::apache::xerces::internal::xni::QName>>(); }

protected:

	QNameDV_XQName(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_DV_XS_QNAMEDV_XQNAME
