// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/org/apache/xalan/internal/xsltc/compiler/Expression.h>
#include <scapix/java_api/com/sun/org/apache/xalan/internal/xsltc/compiler/Closure.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_COMPILER_PREDICATE_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_COMPILER_PREDICATE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xalan::internal::xsltc::compiler { class Predicate; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xalan::internal::xsltc::compiler::Predicate>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xalan/internal/xsltc/compiler/Predicate";
	using base_classes = std::tuple<scapix::java_api::com::sun::org::apache::xalan::internal::xsltc::compiler::Expression, scapix::java_api::com::sun::org::apache::xalan::internal::xsltc::compiler::Closure>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_COMPILER_PREDICATE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_COMPILER_PREDICATE)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_COMPILER_PREDICATE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/xalan/internal/xsltc/compiler/Parser.h>
#include <scapix/java_api/com/sun/org/apache/xalan/internal/xsltc/compiler/Step.h>
#include <scapix/java_api/com/sun/org/apache/xalan/internal/xsltc/compiler/SymbolTable.h>
#include <scapix/java_api/com/sun/org/apache/xalan/internal/xsltc/compiler/VariableRefBase.h>
#include <scapix/java_api/com/sun/org/apache/xalan/internal/xsltc/compiler/util/ClassGenerator.h>
#include <scapix/java_api/com/sun/org/apache/xalan/internal/xsltc/compiler/util/MethodGenerator.h>
#include <scapix/java_api/com/sun/org/apache/xalan/internal/xsltc/compiler/util/Type.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class com::sun::org::apache::xalan::internal::xsltc::compiler::Predicate : public jni::object_base<"com/sun/org/apache/xalan/internal/xsltc/compiler/Predicate",
	com::sun::org::apache::xalan::internal::xsltc::compiler::Expression,
	com::sun::org::apache::xalan::internal::xsltc::compiler::Closure>
{
public:

	static jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::Predicate> new_object(jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::Expression> p1) { return base_::new_object(p1); }
	void setParser(jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::Parser> p1) { return call_method<"setParser", void>(p1); }
	jboolean isNthPositionFilter() { return call_method<"isNthPositionFilter", jboolean>(); }
	jboolean isNthDescendant() { return call_method<"isNthDescendant", jboolean>(); }
	void dontOptimize() { return call_method<"dontOptimize", void>(); }
	jboolean hasPositionCall() { return call_method<"hasPositionCall", jboolean>(); }
	jboolean hasLastCall() { return call_method<"hasLastCall", jboolean>(); }
	jboolean inInnerClass() { return call_method<"inInnerClass", jboolean>(); }
	jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::Closure> getParentClosure() { return call_method<"getParentClosure", jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::Closure>>(); }
	jni::ref<java::lang::String> getInnerClassName() { return call_method<"getInnerClassName", jni::ref<java::lang::String>>(); }
	void addVariable(jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::VariableRefBase> p1) { return call_method<"addVariable", void>(p1); }
	jint getPosType() { return call_method<"getPosType", jint>(); }
	jboolean parentIsPattern() { return call_method<"parentIsPattern", jboolean>(); }
	jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::Expression> getExpr() { return call_method<"getExpr", jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::Expression>>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::util::Type> typeCheck(jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::SymbolTable> p1) { return call_method<"typeCheck", jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::util::Type>>(p1); }
	jboolean isBooleanTest() { return call_method<"isBooleanTest", jboolean>(); }
	jboolean isNodeValueTest() { return call_method<"isNodeValueTest", jboolean>(); }
	jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::Step> getStep() { return call_method<"getStep", jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::Step>>(); }
	jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::Expression> getCompareValue() { return call_method<"getCompareValue", jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::Expression>>(); }
	void translateFilter(jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::util::ClassGenerator> p1, jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::util::MethodGenerator> p2) { return call_method<"translateFilter", void>(p1, p2); }
	void translate(jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::util::ClassGenerator> p1, jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::util::MethodGenerator> p2) { return call_method<"translate", void>(p1, p2); }

protected:

	Predicate(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_COMPILER_PREDICATE
