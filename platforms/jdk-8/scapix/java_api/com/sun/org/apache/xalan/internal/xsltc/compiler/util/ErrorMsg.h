// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_COMPILER_UTIL_ERRORMSG_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_COMPILER_UTIL_ERRORMSG_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xalan::internal::xsltc::compiler::util { class ErrorMsg; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xalan::internal::xsltc::compiler::util::ErrorMsg>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xalan/internal/xsltc/compiler/util/ErrorMsg";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_COMPILER_UTIL_ERRORMSG_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_COMPILER_UTIL_ERRORMSG)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_COMPILER_UTIL_ERRORMSG

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/xalan/internal/xsltc/compiler/SyntaxTreeNode.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/Throwable.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xalan::internal::xsltc::compiler::util::ErrorMsg : public jni::object_base<"com/sun/org/apache/xalan/internal/xsltc/compiler/util/ErrorMsg",
	java::lang::Object>
{
public:

	static jni::ref<java::lang::String> MULTIPLE_STYLESHEET_ERR() { return get_static_field<"MULTIPLE_STYLESHEET_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> TEMPLATE_REDEF_ERR() { return get_static_field<"TEMPLATE_REDEF_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> TEMPLATE_UNDEF_ERR() { return get_static_field<"TEMPLATE_UNDEF_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> VARIABLE_REDEF_ERR() { return get_static_field<"VARIABLE_REDEF_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> VARIABLE_UNDEF_ERR() { return get_static_field<"VARIABLE_UNDEF_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> CLASS_NOT_FOUND_ERR() { return get_static_field<"CLASS_NOT_FOUND_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> METHOD_NOT_FOUND_ERR() { return get_static_field<"METHOD_NOT_FOUND_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ARGUMENT_CONVERSION_ERR() { return get_static_field<"ARGUMENT_CONVERSION_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> FILE_NOT_FOUND_ERR() { return get_static_field<"FILE_NOT_FOUND_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> INVALID_URI_ERR() { return get_static_field<"INVALID_URI_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> FILE_ACCESS_ERR() { return get_static_field<"FILE_ACCESS_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MISSING_ROOT_ERR() { return get_static_field<"MISSING_ROOT_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> NAMESPACE_UNDEF_ERR() { return get_static_field<"NAMESPACE_UNDEF_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> FUNCTION_RESOLVE_ERR() { return get_static_field<"FUNCTION_RESOLVE_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> NEED_LITERAL_ERR() { return get_static_field<"NEED_LITERAL_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> XPATH_PARSER_ERR() { return get_static_field<"XPATH_PARSER_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> REQUIRED_ATTR_ERR() { return get_static_field<"REQUIRED_ATTR_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ILLEGAL_CHAR_ERR() { return get_static_field<"ILLEGAL_CHAR_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ILLEGAL_PI_ERR() { return get_static_field<"ILLEGAL_PI_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> STRAY_ATTRIBUTE_ERR() { return get_static_field<"STRAY_ATTRIBUTE_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ILLEGAL_ATTRIBUTE_ERR() { return get_static_field<"ILLEGAL_ATTRIBUTE_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> CIRCULAR_INCLUDE_ERR() { return get_static_field<"CIRCULAR_INCLUDE_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> RESULT_TREE_SORT_ERR() { return get_static_field<"RESULT_TREE_SORT_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> SYMBOLS_REDEF_ERR() { return get_static_field<"SYMBOLS_REDEF_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> XSL_VERSION_ERR() { return get_static_field<"XSL_VERSION_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> CIRCULAR_VARIABLE_ERR() { return get_static_field<"CIRCULAR_VARIABLE_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ILLEGAL_BINARY_OP_ERR() { return get_static_field<"ILLEGAL_BINARY_OP_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ILLEGAL_ARG_ERR() { return get_static_field<"ILLEGAL_ARG_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> DOCUMENT_ARG_ERR() { return get_static_field<"DOCUMENT_ARG_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MISSING_WHEN_ERR() { return get_static_field<"MISSING_WHEN_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MULTIPLE_OTHERWISE_ERR() { return get_static_field<"MULTIPLE_OTHERWISE_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> STRAY_OTHERWISE_ERR() { return get_static_field<"STRAY_OTHERWISE_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> STRAY_WHEN_ERR() { return get_static_field<"STRAY_WHEN_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> WHEN_ELEMENT_ERR() { return get_static_field<"WHEN_ELEMENT_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> UNNAMED_ATTRIBSET_ERR() { return get_static_field<"UNNAMED_ATTRIBSET_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ILLEGAL_CHILD_ERR() { return get_static_field<"ILLEGAL_CHILD_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ILLEGAL_ELEM_NAME_ERR() { return get_static_field<"ILLEGAL_ELEM_NAME_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ILLEGAL_ATTR_NAME_ERR() { return get_static_field<"ILLEGAL_ATTR_NAME_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ILLEGAL_TEXT_NODE_ERR() { return get_static_field<"ILLEGAL_TEXT_NODE_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> SAX_PARSER_CONFIG_ERR() { return get_static_field<"SAX_PARSER_CONFIG_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> INTERNAL_ERR() { return get_static_field<"INTERNAL_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> UNSUPPORTED_XSL_ERR() { return get_static_field<"UNSUPPORTED_XSL_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> UNSUPPORTED_EXT_ERR() { return get_static_field<"UNSUPPORTED_EXT_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MISSING_XSLT_URI_ERR() { return get_static_field<"MISSING_XSLT_URI_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MISSING_XSLT_TARGET_ERR() { return get_static_field<"MISSING_XSLT_TARGET_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ACCESSING_XSLT_TARGET_ERR() { return get_static_field<"ACCESSING_XSLT_TARGET_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> NOT_IMPLEMENTED_ERR() { return get_static_field<"NOT_IMPLEMENTED_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> NOT_STYLESHEET_ERR() { return get_static_field<"NOT_STYLESHEET_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ELEMENT_PARSE_ERR() { return get_static_field<"ELEMENT_PARSE_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> KEY_USE_ATTR_ERR() { return get_static_field<"KEY_USE_ATTR_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> OUTPUT_VERSION_ERR() { return get_static_field<"OUTPUT_VERSION_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ILLEGAL_RELAT_OP_ERR() { return get_static_field<"ILLEGAL_RELAT_OP_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ATTRIBSET_UNDEF_ERR() { return get_static_field<"ATTRIBSET_UNDEF_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ATTR_VAL_TEMPLATE_ERR() { return get_static_field<"ATTR_VAL_TEMPLATE_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> UNKNOWN_SIG_TYPE_ERR() { return get_static_field<"UNKNOWN_SIG_TYPE_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> DATA_CONVERSION_ERR() { return get_static_field<"DATA_CONVERSION_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> NO_TRANSLET_CLASS_ERR() { return get_static_field<"NO_TRANSLET_CLASS_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> NO_MAIN_TRANSLET_ERR() { return get_static_field<"NO_MAIN_TRANSLET_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> TRANSLET_CLASS_ERR() { return get_static_field<"TRANSLET_CLASS_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> TRANSLET_OBJECT_ERR() { return get_static_field<"TRANSLET_OBJECT_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ERROR_LISTENER_NULL_ERR() { return get_static_field<"ERROR_LISTENER_NULL_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> JAXP_UNKNOWN_SOURCE_ERR() { return get_static_field<"JAXP_UNKNOWN_SOURCE_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> JAXP_NO_SOURCE_ERR() { return get_static_field<"JAXP_NO_SOURCE_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> JAXP_COMPILE_ERR() { return get_static_field<"JAXP_COMPILE_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> JAXP_INVALID_ATTR_ERR() { return get_static_field<"JAXP_INVALID_ATTR_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> JAXP_INVALID_ATTR_VALUE_ERR() { return get_static_field<"JAXP_INVALID_ATTR_VALUE_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> JAXP_SET_RESULT_ERR() { return get_static_field<"JAXP_SET_RESULT_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> JAXP_NO_TRANSLET_ERR() { return get_static_field<"JAXP_NO_TRANSLET_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> JAXP_NO_HANDLER_ERR() { return get_static_field<"JAXP_NO_HANDLER_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> JAXP_NO_RESULT_ERR() { return get_static_field<"JAXP_NO_RESULT_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> JAXP_UNKNOWN_PROP_ERR() { return get_static_field<"JAXP_UNKNOWN_PROP_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> SAX2DOM_ADAPTER_ERR() { return get_static_field<"SAX2DOM_ADAPTER_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> XSLTC_SOURCE_ERR() { return get_static_field<"XSLTC_SOURCE_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ER_RESULT_NULL() { return get_static_field<"ER_RESULT_NULL", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> JAXP_INVALID_SET_PARAM_VALUE() { return get_static_field<"JAXP_INVALID_SET_PARAM_VALUE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> JAXP_SET_FEATURE_NULL_NAME() { return get_static_field<"JAXP_SET_FEATURE_NULL_NAME", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> JAXP_GET_FEATURE_NULL_NAME() { return get_static_field<"JAXP_GET_FEATURE_NULL_NAME", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> JAXP_UNSUPPORTED_FEATURE() { return get_static_field<"JAXP_UNSUPPORTED_FEATURE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> JAXP_SECUREPROCESSING_FEATURE() { return get_static_field<"JAXP_SECUREPROCESSING_FEATURE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> COMPILE_STDIN_ERR() { return get_static_field<"COMPILE_STDIN_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> COMPILE_USAGE_STR() { return get_static_field<"COMPILE_USAGE_STR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> TRANSFORM_USAGE_STR() { return get_static_field<"TRANSFORM_USAGE_STR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> STRAY_SORT_ERR() { return get_static_field<"STRAY_SORT_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> UNSUPPORTED_ENCODING() { return get_static_field<"UNSUPPORTED_ENCODING", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> SYNTAX_ERR() { return get_static_field<"SYNTAX_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> CONSTRUCTOR_NOT_FOUND() { return get_static_field<"CONSTRUCTOR_NOT_FOUND", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> NO_JAVA_FUNCT_THIS_REF() { return get_static_field<"NO_JAVA_FUNCT_THIS_REF", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> TYPE_CHECK_ERR() { return get_static_field<"TYPE_CHECK_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> TYPE_CHECK_UNK_LOC_ERR() { return get_static_field<"TYPE_CHECK_UNK_LOC_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ILLEGAL_CMDLINE_OPTION_ERR() { return get_static_field<"ILLEGAL_CMDLINE_OPTION_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> CMDLINE_OPT_MISSING_ARG_ERR() { return get_static_field<"CMDLINE_OPT_MISSING_ARG_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> WARNING_PLUS_WRAPPED_MSG() { return get_static_field<"WARNING_PLUS_WRAPPED_MSG", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> WARNING_MSG() { return get_static_field<"WARNING_MSG", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> FATAL_ERR_PLUS_WRAPPED_MSG() { return get_static_field<"FATAL_ERR_PLUS_WRAPPED_MSG", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> FATAL_ERR_MSG() { return get_static_field<"FATAL_ERR_MSG", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ERROR_PLUS_WRAPPED_MSG() { return get_static_field<"ERROR_PLUS_WRAPPED_MSG", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ERROR_MSG() { return get_static_field<"ERROR_MSG", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> TRANSFORM_WITH_TRANSLET_STR() { return get_static_field<"TRANSFORM_WITH_TRANSLET_STR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> TRANSFORM_WITH_JAR_STR() { return get_static_field<"TRANSFORM_WITH_JAR_STR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> COULD_NOT_CREATE_TRANS_FACT() { return get_static_field<"COULD_NOT_CREATE_TRANS_FACT", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> TRANSLET_NAME_JAVA_CONFLICT() { return get_static_field<"TRANSLET_NAME_JAVA_CONFLICT", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> INVALID_QNAME_ERR() { return get_static_field<"INVALID_QNAME_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> INVALID_NCNAME_ERR() { return get_static_field<"INVALID_NCNAME_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> INVALID_METHOD_IN_OUTPUT() { return get_static_field<"INVALID_METHOD_IN_OUTPUT", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> OUTLINE_ERR_TRY_CATCH() { return get_static_field<"OUTLINE_ERR_TRY_CATCH", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> OUTLINE_ERR_UNBALANCED_MARKERS() { return get_static_field<"OUTLINE_ERR_UNBALANCED_MARKERS", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> OUTLINE_ERR_DELETED_TARGET() { return get_static_field<"OUTLINE_ERR_DELETED_TARGET", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> OUTLINE_ERR_METHOD_TOO_BIG() { return get_static_field<"OUTLINE_ERR_METHOD_TOO_BIG", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> DESERIALIZE_TRANSLET_ERR() { return get_static_field<"DESERIALIZE_TRANSLET_ERR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> XPATH_LIMIT() { return get_static_field<"XPATH_LIMIT", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> XPATH_GROUP_LIMIT() { return get_static_field<"XPATH_GROUP_LIMIT", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> XPATH_OPERATOR_LIMIT() { return get_static_field<"XPATH_OPERATOR_LIMIT", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> XPATH_TOTAL_OPERATOR_LIMIT() { return get_static_field<"XPATH_TOTAL_OPERATOR_LIMIT", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ERROR_MESSAGES_KEY() { return get_static_field<"ERROR_MESSAGES_KEY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> COMPILER_ERROR_KEY() { return get_static_field<"COMPILER_ERROR_KEY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> COMPILER_WARNING_KEY() { return get_static_field<"COMPILER_WARNING_KEY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> RUNTIME_ERROR_KEY() { return get_static_field<"RUNTIME_ERROR_KEY", jni::ref<java::lang::String>>(); }

	static jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::util::ErrorMsg> new_object(jni::ref<java::lang::String> p1) { return base_::new_object(p1); }
	static jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::util::ErrorMsg> new_object(jni::ref<java::lang::String> p1, jni::ref<java::lang::Throwable> p2) { return base_::new_object(p1, p2); }
	static jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::util::ErrorMsg> new_object(jni::ref<java::lang::String> p1, jint p2) { return base_::new_object(p1, p2); }
	static jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::util::ErrorMsg> new_object(jni::ref<java::lang::String> p1, jint p2, jni::ref<java::lang::Object> p3) { return base_::new_object(p1, p2, p3); }
	static jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::util::ErrorMsg> new_object(jni::ref<java::lang::String> p1, jni::ref<java::lang::Object> p2) { return base_::new_object(p1, p2); }
	static jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::util::ErrorMsg> new_object(jni::ref<java::lang::String> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return base_::new_object(p1, p2, p3); }
	static jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::util::ErrorMsg> new_object(jni::ref<java::lang::String> p1, jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::SyntaxTreeNode> p2) { return base_::new_object(p1, p2); }
	static jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::util::ErrorMsg> new_object(jni::ref<java::lang::String> p1, jni::ref<java::lang::Object> p2, jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::SyntaxTreeNode> p3) { return base_::new_object(p1, p2, p3); }
	static jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::util::ErrorMsg> new_object(jni::ref<java::lang::String> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3, jni::ref<com::sun::org::apache::xalan::internal::xsltc::compiler::SyntaxTreeNode> p4) { return base_::new_object(p1, p2, p3, p4); }
	jni::ref<java::lang::Throwable> getCause() { return call_method<"getCause", jni::ref<java::lang::Throwable>>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> toString(jni::ref<java::lang::Object> p1) { return call_method<"toString", jni::ref<java::lang::String>>(p1); }
	jni::ref<java::lang::String> toString(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2) { return call_method<"toString", jni::ref<java::lang::String>>(p1, p2); }
	void setWarningError(jboolean p1) { return call_method<"setWarningError", void>(p1); }
	jboolean isWarningError() { return call_method<"isWarningError", jboolean>(); }

protected:

	ErrorMsg(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_XSLTC_COMPILER_UTIL_ERRORMSG
