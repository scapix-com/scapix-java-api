// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_UTIL_XMLSYMBOLS_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_UTIL_XMLSYMBOLS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xerces::internal::util { class XMLSymbols; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xerces::internal::util::XMLSymbols>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xerces/internal/util/XMLSymbols";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_UTIL_XMLSYMBOLS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_UTIL_XMLSYMBOLS)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_UTIL_XMLSYMBOLS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xerces::internal::util::XMLSymbols : public jni::object_base<"com/sun/org/apache/xerces/internal/util/XMLSymbols",
	java::lang::Object>
{
public:

	static jni::ref<java::lang::String> EMPTY_STRING() { return get_static_field<"EMPTY_STRING", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> PREFIX_XML() { return get_static_field<"PREFIX_XML", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> PREFIX_XMLNS() { return get_static_field<"PREFIX_XMLNS", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> fANYSymbol() { return get_static_field<"fANYSymbol", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> fCDATASymbol() { return get_static_field<"fCDATASymbol", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> fIDSymbol() { return get_static_field<"fIDSymbol", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> fIDREFSymbol() { return get_static_field<"fIDREFSymbol", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> fIDREFSSymbol() { return get_static_field<"fIDREFSSymbol", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> fENTITYSymbol() { return get_static_field<"fENTITYSymbol", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> fENTITIESSymbol() { return get_static_field<"fENTITIESSymbol", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> fNMTOKENSymbol() { return get_static_field<"fNMTOKENSymbol", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> fNMTOKENSSymbol() { return get_static_field<"fNMTOKENSSymbol", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> fNOTATIONSymbol() { return get_static_field<"fNOTATIONSymbol", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> fENUMERATIONSymbol() { return get_static_field<"fENUMERATIONSymbol", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> fIMPLIEDSymbol() { return get_static_field<"fIMPLIEDSymbol", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> fREQUIREDSymbol() { return get_static_field<"fREQUIREDSymbol", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> fFIXEDSymbol() { return get_static_field<"fFIXEDSymbol", jni::ref<java::lang::String>>(); }

	static jni::ref<com::sun::org::apache::xerces::internal::util::XMLSymbols> new_object() { return base_::new_object(); }

protected:

	XMLSymbols(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_UTIL_XMLSYMBOLS
