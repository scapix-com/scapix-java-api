// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/xni/grammars/XMLGrammarLoader.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/xni/parser/XMLComponent.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/impl/xs/XSElementDeclHelper.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/xs/XSLoader.h>
#include <scapix/java_api/org/w3c/dom/DOMConfiguration.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_XS_XMLSCHEMALOADER_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_XS_XMLSCHEMALOADER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xerces::internal::impl::xs { class XMLSchemaLoader; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xerces::internal::impl::xs::XMLSchemaLoader>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xerces/internal/impl/xs/XMLSchemaLoader";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::com::sun::org::apache::xerces::internal::xni::grammars::XMLGrammarLoader, scapix::java_api::com::sun::org::apache::xerces::internal::xni::parser::XMLComponent, scapix::java_api::com::sun::org::apache::xerces::internal::impl::xs::XSElementDeclHelper, scapix::java_api::com::sun::org::apache::xerces::internal::xs::XSLoader, scapix::java_api::org::w3c::dom::DOMConfiguration>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_XS_XMLSCHEMALOADER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_XS_XMLSCHEMALOADER)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_XS_XMLSCHEMALOADER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/xerces/internal/impl/XMLErrorReporter.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/impl/xs/XSDDescription.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/impl/xs/XSElementDecl.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/util/SymbolTable.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/xni/QName.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/xni/grammars/Grammar.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/xni/parser/XMLComponentManager.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/xni/parser/XMLEntityResolver.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/xni/parser/XMLErrorHandler.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/xni/parser/XMLInputSource.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/xs/LSInputList.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/xs/StringList.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/xs/XSModel.h>
#include <scapix/java_api/java/lang/Boolean.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Locale.h>
#include <scapix/java_api/java/util/Map.h>
#include <scapix/java_api/org/w3c/dom/DOMStringList.h>
#include <scapix/java_api/org/w3c/dom/ls/LSInput.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/impl/xs/XMLSchemaLoader_LocationArray.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xerces::internal::impl::xs::XMLSchemaLoader : public jni::object_base<"com/sun/org/apache/xerces/internal/impl/xs/XMLSchemaLoader",
	java::lang::Object,
	com::sun::org::apache::xerces::internal::xni::grammars::XMLGrammarLoader,
	com::sun::org::apache::xerces::internal::xni::parser::XMLComponent,
	com::sun::org::apache::xerces::internal::impl::xs::XSElementDeclHelper,
	com::sun::org::apache::xerces::internal::xs::XSLoader,
	org::w3c::dom::DOMConfiguration>
{
public:

	using LocationArray = XMLSchemaLoader_LocationArray;

	static jni::ref<java::lang::String> SYMBOL_TABLE() { return get_static_field<"SYMBOL_TABLE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ERROR_REPORTER() { return get_static_field<"ERROR_REPORTER", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ENTITY_RESOLVER() { return get_static_field<"ENTITY_RESOLVER", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> XMLGRAMMAR_POOL() { return get_static_field<"XMLGRAMMAR_POOL", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ACCESS_EXTERNAL_DTD() { return get_static_field<"ACCESS_EXTERNAL_DTD", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ACCESS_EXTERNAL_SCHEMA() { return get_static_field<"ACCESS_EXTERNAL_SCHEMA", jni::ref<java::lang::String>>(); }

	static jni::ref<com::sun::org::apache::xerces::internal::impl::xs::XMLSchemaLoader> new_object() { return base_::new_object(); }
	static jni::ref<com::sun::org::apache::xerces::internal::impl::xs::XMLSchemaLoader> new_object(jni::ref<com::sun::org::apache::xerces::internal::util::SymbolTable> p1) { return base_::new_object(p1); }
	jni::ref<jni::array<java::lang::String>> getRecognizedFeatures() { return call_method<"getRecognizedFeatures", jni::ref<jni::array<java::lang::String>>>(); }
	jboolean getFeature(jni::ref<java::lang::String> p1) { return call_method<"getFeature", jboolean>(p1); }
	void setFeature(jni::ref<java::lang::String> p1, jboolean p2) { return call_method<"setFeature", void>(p1, p2); }
	jni::ref<jni::array<java::lang::String>> getRecognizedProperties() { return call_method<"getRecognizedProperties", jni::ref<jni::array<java::lang::String>>>(); }
	jni::ref<java::lang::Object> getProperty(jni::ref<java::lang::String> p1) { return call_method<"getProperty", jni::ref<java::lang::Object>>(p1); }
	void setProperty(jni::ref<java::lang::String> p1, jni::ref<java::lang::Object> p2) { return call_method<"setProperty", void>(p1, p2); }
	void setLocale(jni::ref<java::util::Locale> p1) { return call_method<"setLocale", void>(p1); }
	jni::ref<java::util::Locale> getLocale() { return call_method<"getLocale", jni::ref<java::util::Locale>>(); }
	void setErrorHandler(jni::ref<com::sun::org::apache::xerces::internal::xni::parser::XMLErrorHandler> p1) { return call_method<"setErrorHandler", void>(p1); }
	jni::ref<com::sun::org::apache::xerces::internal::xni::parser::XMLErrorHandler> getErrorHandler() { return call_method<"getErrorHandler", jni::ref<com::sun::org::apache::xerces::internal::xni::parser::XMLErrorHandler>>(); }
	void setEntityResolver(jni::ref<com::sun::org::apache::xerces::internal::xni::parser::XMLEntityResolver> p1) { return call_method<"setEntityResolver", void>(p1); }
	jni::ref<com::sun::org::apache::xerces::internal::xni::parser::XMLEntityResolver> getEntityResolver() { return call_method<"getEntityResolver", jni::ref<com::sun::org::apache::xerces::internal::xni::parser::XMLEntityResolver>>(); }
	void loadGrammar(jni::ref<jni::array<com::sun::org::apache::xerces::internal::xni::parser::XMLInputSource>> p1) { return call_method<"loadGrammar", void>(p1); }
	jni::ref<com::sun::org::apache::xerces::internal::xni::grammars::Grammar> loadGrammar(jni::ref<com::sun::org::apache::xerces::internal::xni::parser::XMLInputSource> p1) { return call_method<"loadGrammar", jni::ref<com::sun::org::apache::xerces::internal::xni::grammars::Grammar>>(p1); }
	static jni::ref<com::sun::org::apache::xerces::internal::xni::parser::XMLInputSource> resolveDocument(jni::ref<com::sun::org::apache::xerces::internal::impl::xs::XSDDescription> p1, jni::ref<java::util::Map> p2, jni::ref<com::sun::org::apache::xerces::internal::xni::parser::XMLEntityResolver> p3) { return call_static_method<"resolveDocument", jni::ref<com::sun::org::apache::xerces::internal::xni::parser::XMLInputSource>>(p1, p2, p3); }
	static void processExternalHints(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2, jni::ref<java::util::Map> p3, jni::ref<com::sun::org::apache::xerces::internal::impl::XMLErrorReporter> p4) { return call_static_method<"processExternalHints", void>(p1, p2, p3, p4); }
	static jboolean tokenizeSchemaLocationStr(jni::ref<java::lang::String> p1, jni::ref<java::util::Map> p2, jni::ref<java::lang::String> p3) { return call_static_method<"tokenizeSchemaLocationStr", jboolean>(p1, p2, p3); }
	jni::ref<java::lang::Boolean> getFeatureDefault(jni::ref<java::lang::String> p1) { return call_method<"getFeatureDefault", jni::ref<java::lang::Boolean>>(p1); }
	jni::ref<java::lang::Object> getPropertyDefault(jni::ref<java::lang::String> p1) { return call_method<"getPropertyDefault", jni::ref<java::lang::Object>>(p1); }
	void reset(jni::ref<com::sun::org::apache::xerces::internal::xni::parser::XMLComponentManager> p1) { return call_method<"reset", void>(p1); }
	jni::ref<org::w3c::dom::DOMConfiguration> getConfig() { return call_method<"getConfig", jni::ref<org::w3c::dom::DOMConfiguration>>(); }
	jni::ref<com::sun::org::apache::xerces::internal::xs::XSModel> load(jni::ref<org::w3c::dom::ls::LSInput> p1) { return call_method<"load", jni::ref<com::sun::org::apache::xerces::internal::xs::XSModel>>(p1); }
	jni::ref<com::sun::org::apache::xerces::internal::xs::XSModel> loadInputList(jni::ref<com::sun::org::apache::xerces::internal::xs::LSInputList> p1) { return call_method<"loadInputList", jni::ref<com::sun::org::apache::xerces::internal::xs::XSModel>>(p1); }
	jni::ref<com::sun::org::apache::xerces::internal::xs::XSModel> loadURI(jni::ref<java::lang::String> p1) { return call_method<"loadURI", jni::ref<com::sun::org::apache::xerces::internal::xs::XSModel>>(p1); }
	jni::ref<com::sun::org::apache::xerces::internal::xs::XSModel> loadURIList(jni::ref<com::sun::org::apache::xerces::internal::xs::StringList> p1) { return call_method<"loadURIList", jni::ref<com::sun::org::apache::xerces::internal::xs::XSModel>>(p1); }
	jboolean canSetParameter(jni::ref<java::lang::String> p1, jni::ref<java::lang::Object> p2) { return call_method<"canSetParameter", jboolean>(p1, p2); }
	jni::ref<java::lang::Object> getParameter(jni::ref<java::lang::String> p1) { return call_method<"getParameter", jni::ref<java::lang::Object>>(p1); }
	jni::ref<org::w3c::dom::DOMStringList> getParameterNames() { return call_method<"getParameterNames", jni::ref<org::w3c::dom::DOMStringList>>(); }
	void setParameter(jni::ref<java::lang::String> p1, jni::ref<java::lang::Object> p2) { return call_method<"setParameter", void>(p1, p2); }
	jni::ref<com::sun::org::apache::xerces::internal::impl::xs::XSElementDecl> getGlobalElementDecl(jni::ref<com::sun::org::apache::xerces::internal::xni::QName> p1) { return call_method<"getGlobalElementDecl", jni::ref<com::sun::org::apache::xerces::internal::impl::xs::XSElementDecl>>(p1); }

protected:

	XMLSchemaLoader(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_XS_XMLSCHEMALOADER
