// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/xml/transform/TransformerException.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_XPATHEXCEPTION_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_XPATHEXCEPTION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xpath::internal { class XPathException; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xpath::internal::XPathException>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xpath/internal/XPathException";
	using base_classes = std::tuple<scapix::java_api::javax::xml::transform::TransformerException>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_XPATHEXCEPTION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_XPATHEXCEPTION)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_XPATHEXCEPTION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/xpath/internal/ExpressionNode.h>
#include <scapix/java_api/java/io/PrintStream.h>
#include <scapix/java_api/java/io/PrintWriter.h>
#include <scapix/java_api/java/lang/Exception.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/Throwable.h>
#include <scapix/java_api/org/w3c/dom/Node.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xpath::internal::XPathException : public jni::object_base<"com/sun/org/apache/xpath/internal/XPathException",
	javax::xml::transform::TransformerException>
{
public:

	jni::ref<java::lang::Object> getStylesheetNode() { return call_method<"getStylesheetNode", jni::ref<java::lang::Object>>(); }
	void setStylesheetNode(jni::ref<java::lang::Object> p1) { return call_method<"setStylesheetNode", void>(p1); }
	static jni::ref<com::sun::org::apache::xpath::internal::XPathException> new_object(jni::ref<java::lang::String> p1, jni::ref<com::sun::org::apache::xpath::internal::ExpressionNode> p2) { return base_::new_object(p1, p2); }
	static jni::ref<com::sun::org::apache::xpath::internal::XPathException> new_object(jni::ref<java::lang::String> p1) { return base_::new_object(p1); }
	jni::ref<org::w3c::dom::Node> getStylesheetNode(jni::ref<com::sun::org::apache::xpath::internal::ExpressionNode> p1) { return call_method<"getStylesheetNode", jni::ref<org::w3c::dom::Node>>(p1); }
	static jni::ref<com::sun::org::apache::xpath::internal::XPathException> new_object(jni::ref<java::lang::String> p1, jni::ref<java::lang::Object> p2) { return base_::new_object(p1, p2); }
	static jni::ref<com::sun::org::apache::xpath::internal::XPathException> new_object(jni::ref<java::lang::String> p1, jni::ref<org::w3c::dom::Node> p2, jni::ref<java::lang::Exception> p3) { return base_::new_object(p1, p2, p3); }
	static jni::ref<com::sun::org::apache::xpath::internal::XPathException> new_object(jni::ref<java::lang::String> p1, jni::ref<java::lang::Exception> p2) { return base_::new_object(p1, p2); }
	void printStackTrace(jni::ref<java::io::PrintStream> p1) { return call_method<"printStackTrace", void>(p1); }
	jni::ref<java::lang::String> getMessage() { return call_method<"getMessage", jni::ref<java::lang::String>>(); }
	void printStackTrace(jni::ref<java::io::PrintWriter> p1) { return call_method<"printStackTrace", void>(p1); }
	jni::ref<java::lang::Throwable> getException() { return call_method<"getException", jni::ref<java::lang::Throwable>>(); }

protected:

	XPathException(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_XPATHEXCEPTION
