// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_SOURCETREEMANAGER_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_SOURCETREEMANAGER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xpath::internal { class SourceTreeManager; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xpath::internal::SourceTreeManager>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xpath/internal/SourceTreeManager";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_SOURCETREEMANAGER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_SOURCETREEMANAGER)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_SOURCETREEMANAGER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/xpath/internal/XPathContext.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/xml/transform/Source.h>
#include <scapix/java_api/javax/xml/transform/SourceLocator.h>
#include <scapix/java_api/javax/xml/transform/URIResolver.h>
#include <scapix/java_api/org/xml/sax/XMLReader.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xpath::internal::SourceTreeManager : public jni::object_base<"com/sun/org/apache/xpath/internal/SourceTreeManager",
	java::lang::Object>
{
public:

	static jni::ref<com::sun::org::apache::xpath::internal::SourceTreeManager> new_object() { return base_::new_object(); }
	void reset() { return call_method<"reset", void>(); }
	void setURIResolver(jni::ref<javax::xml::transform::URIResolver> p1) { return call_method<"setURIResolver", void>(p1); }
	jni::ref<javax::xml::transform::URIResolver> getURIResolver() { return call_method<"getURIResolver", jni::ref<javax::xml::transform::URIResolver>>(); }
	jni::ref<java::lang::String> findURIFromDoc(jint p1) { return call_method<"findURIFromDoc", jni::ref<java::lang::String>>(p1); }
	jni::ref<javax::xml::transform::Source> resolveURI(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2, jni::ref<javax::xml::transform::SourceLocator> p3) { return call_method<"resolveURI", jni::ref<javax::xml::transform::Source>>(p1, p2, p3); }
	void removeDocumentFromCache(jint p1) { return call_method<"removeDocumentFromCache", void>(p1); }
	void putDocumentInCache(jint p1, jni::ref<javax::xml::transform::Source> p2) { return call_method<"putDocumentInCache", void>(p1, p2); }
	jint getNode(jni::ref<javax::xml::transform::Source> p1) { return call_method<"getNode", jint>(p1); }
	jint getSourceTree(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2, jni::ref<javax::xml::transform::SourceLocator> p3, jni::ref<com::sun::org::apache::xpath::internal::XPathContext> p4) { return call_method<"getSourceTree", jint>(p1, p2, p3, p4); }
	jint getSourceTree(jni::ref<javax::xml::transform::Source> p1, jni::ref<javax::xml::transform::SourceLocator> p2, jni::ref<com::sun::org::apache::xpath::internal::XPathContext> p3) { return call_method<"getSourceTree", jint>(p1, p2, p3); }
	jint parseToNode(jni::ref<javax::xml::transform::Source> p1, jni::ref<javax::xml::transform::SourceLocator> p2, jni::ref<com::sun::org::apache::xpath::internal::XPathContext> p3) { return call_method<"parseToNode", jint>(p1, p2, p3); }
	static jni::ref<org::xml::sax::XMLReader> getXMLReader(jni::ref<javax::xml::transform::Source> p1, jni::ref<javax::xml::transform::SourceLocator> p2) { return call_static_method<"getXMLReader", jni::ref<org::xml::sax::XMLReader>>(p1, p2); }

protected:

	SourceTreeManager(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_SOURCETREEMANAGER
