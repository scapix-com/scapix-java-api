// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/javax/xml/transform/SourceLocator.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_EXPRESSIONNODE_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_EXPRESSIONNODE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xpath::internal { class ExpressionNode; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xpath::internal::ExpressionNode>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xpath/internal/ExpressionNode";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::javax::xml::transform::SourceLocator>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_EXPRESSIONNODE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_EXPRESSIONNODE)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_EXPRESSIONNODE

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xpath::internal::ExpressionNode : public jni::object_base<"com/sun/org/apache/xpath/internal/ExpressionNode",
	java::lang::Object,
	javax::xml::transform::SourceLocator>
{
public:

	void exprSetParent(jni::ref<com::sun::org::apache::xpath::internal::ExpressionNode> p1) { return call_method<"exprSetParent", void>(p1); }
	jni::ref<com::sun::org::apache::xpath::internal::ExpressionNode> exprGetParent() { return call_method<"exprGetParent", jni::ref<com::sun::org::apache::xpath::internal::ExpressionNode>>(); }
	void exprAddChild(jni::ref<com::sun::org::apache::xpath::internal::ExpressionNode> p1, jint p2) { return call_method<"exprAddChild", void>(p1, p2); }
	jni::ref<com::sun::org::apache::xpath::internal::ExpressionNode> exprGetChild(jint p1) { return call_method<"exprGetChild", jni::ref<com::sun::org::apache::xpath::internal::ExpressionNode>>(p1); }
	jint exprGetNumChildren() { return call_method<"exprGetNumChildren", jint>(); }

protected:

	ExpressionNode(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_EXPRESSIONNODE
