// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_XS_XSCONSTRAINTS_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_XS_XSCONSTRAINTS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xerces::internal::impl::xs { class XSConstraints; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xerces::internal::impl::xs::XSConstraints>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xerces/internal/impl/xs/XSConstraints";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_XS_XSCONSTRAINTS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_XS_XSCONSTRAINTS)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_XS_XSCONSTRAINTS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/xerces/internal/impl/XMLErrorReporter.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/impl/dv/ValidatedInfo.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/impl/dv/ValidationContext.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/impl/dv/XSSimpleType.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/impl/xs/SubstitutionGroupHandler.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/impl/xs/XSComplexTypeDecl.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/impl/xs/XSElementDecl.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/impl/xs/XSGrammarBucket.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/impl/xs/XSParticleDecl.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/impl/xs/XSWildcardDecl.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/impl/xs/models/CMBuilder.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/util/SymbolHash.h>
#include <scapix/java_api/com/sun/org/apache/xerces/internal/xs/XSTypeDefinition.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xerces::internal::impl::xs::XSConstraints : public jni::object_base<"com/sun/org/apache/xerces/internal/impl/xs/XSConstraints",
	java::lang::Object>
{
public:

	static jni::ref<com::sun::org::apache::xerces::internal::impl::xs::XSConstraints> new_object() { return base_::new_object(); }
	static jni::ref<com::sun::org::apache::xerces::internal::impl::xs::XSParticleDecl> getEmptySequence() { return call_static_method<"getEmptySequence", jni::ref<com::sun::org::apache::xerces::internal::impl::xs::XSParticleDecl>>(); }
	static jboolean checkTypeDerivationOk(jni::ref<com::sun::org::apache::xerces::internal::xs::XSTypeDefinition> p1, jni::ref<com::sun::org::apache::xerces::internal::xs::XSTypeDefinition> p2, jshort p3) { return call_static_method<"checkTypeDerivationOk", jboolean>(p1, p2, p3); }
	static jboolean checkSimpleDerivationOk(jni::ref<com::sun::org::apache::xerces::internal::impl::dv::XSSimpleType> p1, jni::ref<com::sun::org::apache::xerces::internal::xs::XSTypeDefinition> p2, jshort p3) { return call_static_method<"checkSimpleDerivationOk", jboolean>(p1, p2, p3); }
	static jboolean checkComplexDerivationOk(jni::ref<com::sun::org::apache::xerces::internal::impl::xs::XSComplexTypeDecl> p1, jni::ref<com::sun::org::apache::xerces::internal::xs::XSTypeDefinition> p2, jshort p3) { return call_static_method<"checkComplexDerivationOk", jboolean>(p1, p2, p3); }
	static jni::ref<java::lang::Object> ElementDefaultValidImmediate(jni::ref<com::sun::org::apache::xerces::internal::xs::XSTypeDefinition> p1, jni::ref<java::lang::String> p2, jni::ref<com::sun::org::apache::xerces::internal::impl::dv::ValidationContext> p3, jni::ref<com::sun::org::apache::xerces::internal::impl::dv::ValidatedInfo> p4) { return call_static_method<"ElementDefaultValidImmediate", jni::ref<java::lang::Object>>(p1, p2, p3, p4); }
	static void fullSchemaChecking(jni::ref<com::sun::org::apache::xerces::internal::impl::xs::XSGrammarBucket> p1, jni::ref<com::sun::org::apache::xerces::internal::impl::xs::SubstitutionGroupHandler> p2, jni::ref<com::sun::org::apache::xerces::internal::impl::xs::models::CMBuilder> p3, jni::ref<com::sun::org::apache::xerces::internal::impl::XMLErrorReporter> p4) { return call_static_method<"fullSchemaChecking", void>(p1, p2, p3, p4); }
	static void checkElementDeclsConsistent(jni::ref<com::sun::org::apache::xerces::internal::impl::xs::XSComplexTypeDecl> p1, jni::ref<com::sun::org::apache::xerces::internal::impl::xs::XSParticleDecl> p2, jni::ref<com::sun::org::apache::xerces::internal::util::SymbolHash> p3, jni::ref<com::sun::org::apache::xerces::internal::impl::xs::SubstitutionGroupHandler> p4) { return call_static_method<"checkElementDeclsConsistent", void>(p1, p2, p3, p4); }
	static void findElemInTable(jni::ref<com::sun::org::apache::xerces::internal::impl::xs::XSComplexTypeDecl> p1, jni::ref<com::sun::org::apache::xerces::internal::impl::xs::XSElementDecl> p2, jni::ref<com::sun::org::apache::xerces::internal::util::SymbolHash> p3) { return call_static_method<"findElemInTable", void>(p1, p2, p3); }
	static jboolean overlapUPA(jni::ref<com::sun::org::apache::xerces::internal::impl::xs::XSElementDecl> p1, jni::ref<com::sun::org::apache::xerces::internal::impl::xs::XSElementDecl> p2, jni::ref<com::sun::org::apache::xerces::internal::impl::xs::SubstitutionGroupHandler> p3) { return call_static_method<"overlapUPA", jboolean>(p1, p2, p3); }
	static jboolean overlapUPA(jni::ref<com::sun::org::apache::xerces::internal::impl::xs::XSElementDecl> p1, jni::ref<com::sun::org::apache::xerces::internal::impl::xs::XSWildcardDecl> p2, jni::ref<com::sun::org::apache::xerces::internal::impl::xs::SubstitutionGroupHandler> p3) { return call_static_method<"overlapUPA", jboolean>(p1, p2, p3); }
	static jboolean overlapUPA(jni::ref<com::sun::org::apache::xerces::internal::impl::xs::XSWildcardDecl> p1, jni::ref<com::sun::org::apache::xerces::internal::impl::xs::XSWildcardDecl> p2) { return call_static_method<"overlapUPA", jboolean>(p1, p2); }
	static jboolean overlapUPA(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Object> p2, jni::ref<com::sun::org::apache::xerces::internal::impl::xs::SubstitutionGroupHandler> p3) { return call_static_method<"overlapUPA", jboolean>(p1, p2, p3); }

protected:

	XSConstraints(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XERCES_INTERNAL_IMPL_XS_XSCONSTRAINTS
