// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/org/apache/xalan/internal/lib/ExsltBase.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_LIB_EXSLTSETS_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_LIB_EXSLTSETS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xalan::internal::lib { class ExsltSets; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xalan::internal::lib::ExsltSets>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xalan/internal/lib/ExsltSets";
	using base_classes = std::tuple<scapix::java_api::com::sun::org::apache::xalan::internal::lib::ExsltBase>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_LIB_EXSLTSETS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_LIB_EXSLTSETS)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_LIB_EXSLTSETS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/org/w3c/dom/NodeList.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xalan::internal::lib::ExsltSets : public jni::object_base<"com/sun/org/apache/xalan/internal/lib/ExsltSets",
	com::sun::org::apache::xalan::internal::lib::ExsltBase>
{
public:

	static jni::ref<com::sun::org::apache::xalan::internal::lib::ExsltSets> new_object() { return base_::new_object(); }
	static jni::ref<org::w3c::dom::NodeList> leading(jni::ref<org::w3c::dom::NodeList> p1, jni::ref<org::w3c::dom::NodeList> p2) { return call_static_method<"leading", jni::ref<org::w3c::dom::NodeList>>(p1, p2); }
	static jni::ref<org::w3c::dom::NodeList> trailing(jni::ref<org::w3c::dom::NodeList> p1, jni::ref<org::w3c::dom::NodeList> p2) { return call_static_method<"trailing", jni::ref<org::w3c::dom::NodeList>>(p1, p2); }
	static jni::ref<org::w3c::dom::NodeList> intersection(jni::ref<org::w3c::dom::NodeList> p1, jni::ref<org::w3c::dom::NodeList> p2) { return call_static_method<"intersection", jni::ref<org::w3c::dom::NodeList>>(p1, p2); }
	static jni::ref<org::w3c::dom::NodeList> difference(jni::ref<org::w3c::dom::NodeList> p1, jni::ref<org::w3c::dom::NodeList> p2) { return call_static_method<"difference", jni::ref<org::w3c::dom::NodeList>>(p1, p2); }
	static jni::ref<org::w3c::dom::NodeList> distinct(jni::ref<org::w3c::dom::NodeList> p1) { return call_static_method<"distinct", jni::ref<org::w3c::dom::NodeList>>(p1); }
	static jboolean hasSameNode(jni::ref<org::w3c::dom::NodeList> p1, jni::ref<org::w3c::dom::NodeList> p2) { return call_static_method<"hasSameNode", jboolean>(p1, p2); }

protected:

	ExsltSets(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XALAN_INTERNAL_LIB_EXSLTSETS
