// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/org/apache/xpath/internal/axes/AxesWalker.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_AXES_FILTEREXPRWALKER_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_AXES_FILTEREXPRWALKER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xpath::internal::axes { class FilterExprWalker; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xpath::internal::axes::FilterExprWalker>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xpath/internal/axes/FilterExprWalker";
	using base_classes = std::tuple<scapix::java_api::com::sun::org::apache::xpath::internal::axes::AxesWalker>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_AXES_FILTEREXPRWALKER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_AXES_FILTEREXPRWALKER)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_AXES_FILTEREXPRWALKER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/xpath/internal/Expression.h>
#include <scapix/java_api/com/sun/org/apache/xpath/internal/XPathContext.h>
#include <scapix/java_api/com/sun/org/apache/xpath/internal/XPathVisitor.h>
#include <scapix/java_api/com/sun/org/apache/xpath/internal/axes/WalkingIterator.h>
#include <scapix/java_api/com/sun/org/apache/xpath/internal/compiler/Compiler.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/util/Vector.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xpath::internal::axes::FilterExprWalker : public jni::object_base<"com/sun/org/apache/xpath/internal/axes/FilterExprWalker",
	com::sun::org::apache::xpath::internal::axes::AxesWalker>
{
public:

	static jni::ref<com::sun::org::apache::xpath::internal::axes::FilterExprWalker> new_object(jni::ref<com::sun::org::apache::xpath::internal::axes::WalkingIterator> p1) { return base_::new_object(p1); }
	void init(jni::ref<com::sun::org::apache::xpath::internal::compiler::Compiler> p1, jint p2, jint p3) { return call_method<"init", void>(p1, p2, p3); }
	void detach() { return call_method<"detach", void>(); }
	void setRoot(jint p1) { return call_method<"setRoot", void>(p1); }
	jni::ref<java::lang::Object> clone() { return call_method<"clone", jni::ref<java::lang::Object>>(); }
	jshort acceptNode(jint p1) { return call_method<"acceptNode", jshort>(p1); }
	jint getNextNode() { return call_method<"getNextNode", jint>(); }
	jint getLastPos(jni::ref<com::sun::org::apache::xpath::internal::XPathContext> p1) { return call_method<"getLastPos", jint>(p1); }
	void fixupVariables(jni::ref<java::util::Vector> p1, jint p2) { return call_method<"fixupVariables", void>(p1, p2); }
	jni::ref<com::sun::org::apache::xpath::internal::Expression> getInnerExpression() { return call_method<"getInnerExpression", jni::ref<com::sun::org::apache::xpath::internal::Expression>>(); }
	void setInnerExpression(jni::ref<com::sun::org::apache::xpath::internal::Expression> p1) { return call_method<"setInnerExpression", void>(p1); }
	jint getAnalysisBits() { return call_method<"getAnalysisBits", jint>(); }
	jboolean isDocOrdered() { return call_method<"isDocOrdered", jboolean>(); }
	jint getAxis() { return call_method<"getAxis", jint>(); }
	void callPredicateVisitors(jni::ref<com::sun::org::apache::xpath::internal::XPathVisitor> p1) { return call_method<"callPredicateVisitors", void>(p1); }
	jboolean deepEquals(jni::ref<com::sun::org::apache::xpath::internal::Expression> p1) { return call_method<"deepEquals", jboolean>(p1); }

protected:

	FilterExprWalker(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_AXES_FILTEREXPRWALKER
