// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/org/apache/xpath/internal/objects/XString.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_OBJECTS_XSTRINGFORCHARS_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_OBJECTS_XSTRINGFORCHARS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xpath::internal::objects { class XStringForChars; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xpath::internal::objects::XStringForChars>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xpath/internal/objects/XStringForChars";
	using base_classes = std::tuple<scapix::java_api::com::sun::org::apache::xpath::internal::objects::XString>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_OBJECTS_XSTRINGFORCHARS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_OBJECTS_XSTRINGFORCHARS)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_OBJECTS_XSTRINGFORCHARS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/xml/internal/utils/FastStringBuffer.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/xml/sax/ContentHandler.h>
#include <scapix/java_api/org/xml/sax/ext/LexicalHandler.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xpath::internal::objects::XStringForChars : public jni::object_base<"com/sun/org/apache/xpath/internal/objects/XStringForChars",
	com::sun::org::apache::xpath::internal::objects::XString>
{
public:

	static jni::ref<com::sun::org::apache::xpath::internal::objects::XStringForChars> new_object(jni::ref<jni::array<jchar>> p1, jint p2, jint p3) { return base_::new_object(p1, p2, p3); }
	jni::ref<com::sun::org::apache::xml::internal::utils::FastStringBuffer> fsb() { return call_method<"fsb", jni::ref<com::sun::org::apache::xml::internal::utils::FastStringBuffer>>(); }
	void appendToFsb(jni::ref<com::sun::org::apache::xml::internal::utils::FastStringBuffer> p1) { return call_method<"appendToFsb", void>(p1); }
	jboolean hasString() { return call_method<"hasString", jboolean>(); }
	jni::ref<java::lang::String> str() { return call_method<"str", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::Object> object() { return call_method<"object", jni::ref<java::lang::Object>>(); }
	void dispatchCharactersEvents(jni::ref<org::xml::sax::ContentHandler> p1) { return call_method<"dispatchCharactersEvents", void>(p1); }
	void dispatchAsComment(jni::ref<org::xml::sax::ext::LexicalHandler> p1) { return call_method<"dispatchAsComment", void>(p1); }
	jint length() { return call_method<"length", jint>(); }
	jchar charAt(jint p1) { return call_method<"charAt", jchar>(p1); }
	void getChars(jint p1, jint p2, jni::ref<jni::array<jchar>> p3, jint p4) { return call_method<"getChars", void>(p1, p2, p3, p4); }

protected:

	XStringForChars(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_OBJECTS_XSTRINGFORCHARS
