// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/org/apache/xpath/internal/Expression.h>
#include <scapix/java_api/com/sun/org/apache/xpath/internal/ExpressionOwner.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_OPERATIONS_OPERATION_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_OPERATIONS_OPERATION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xpath::internal::operations { class Operation; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xpath::internal::operations::Operation>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xpath/internal/operations/Operation";
	using base_classes = std::tuple<scapix::java_api::com::sun::org::apache::xpath::internal::Expression, scapix::java_api::com::sun::org::apache::xpath::internal::ExpressionOwner>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_OPERATIONS_OPERATION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_OPERATIONS_OPERATION)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_OPERATIONS_OPERATION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/xpath/internal/XPathContext.h>
#include <scapix/java_api/com/sun/org/apache/xpath/internal/XPathVisitor.h>
#include <scapix/java_api/com/sun/org/apache/xpath/internal/objects/XObject.h>
#include <scapix/java_api/java/util/Vector.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xpath::internal::operations::Operation : public jni::object_base<"com/sun/org/apache/xpath/internal/operations/Operation",
	com::sun::org::apache::xpath::internal::Expression,
	com::sun::org::apache::xpath::internal::ExpressionOwner>
{
public:

	static jni::ref<com::sun::org::apache::xpath::internal::operations::Operation> new_object() { return base_::new_object(); }
	void fixupVariables(jni::ref<java::util::Vector> p1, jint p2) { return call_method<"fixupVariables", void>(p1, p2); }
	jboolean canTraverseOutsideSubtree() { return call_method<"canTraverseOutsideSubtree", jboolean>(); }
	void setLeftRight(jni::ref<com::sun::org::apache::xpath::internal::Expression> p1, jni::ref<com::sun::org::apache::xpath::internal::Expression> p2) { return call_method<"setLeftRight", void>(p1, p2); }
	jni::ref<com::sun::org::apache::xpath::internal::objects::XObject> execute(jni::ref<com::sun::org::apache::xpath::internal::XPathContext> p1) { return call_method<"execute", jni::ref<com::sun::org::apache::xpath::internal::objects::XObject>>(p1); }
	jni::ref<com::sun::org::apache::xpath::internal::objects::XObject> operate(jni::ref<com::sun::org::apache::xpath::internal::objects::XObject> p1, jni::ref<com::sun::org::apache::xpath::internal::objects::XObject> p2) { return call_method<"operate", jni::ref<com::sun::org::apache::xpath::internal::objects::XObject>>(p1, p2); }
	jni::ref<com::sun::org::apache::xpath::internal::Expression> getLeftOperand() { return call_method<"getLeftOperand", jni::ref<com::sun::org::apache::xpath::internal::Expression>>(); }
	jni::ref<com::sun::org::apache::xpath::internal::Expression> getRightOperand() { return call_method<"getRightOperand", jni::ref<com::sun::org::apache::xpath::internal::Expression>>(); }
	void callVisitors(jni::ref<com::sun::org::apache::xpath::internal::ExpressionOwner> p1, jni::ref<com::sun::org::apache::xpath::internal::XPathVisitor> p2) { return call_method<"callVisitors", void>(p1, p2); }
	jni::ref<com::sun::org::apache::xpath::internal::Expression> getExpression() { return call_method<"getExpression", jni::ref<com::sun::org::apache::xpath::internal::Expression>>(); }
	void setExpression(jni::ref<com::sun::org::apache::xpath::internal::Expression> p1) { return call_method<"setExpression", void>(p1); }
	jboolean deepEquals(jni::ref<com::sun::org::apache::xpath::internal::Expression> p1) { return call_method<"deepEquals", jboolean>(p1); }

protected:

	Operation(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XPATH_INTERNAL_OPERATIONS_OPERATION
