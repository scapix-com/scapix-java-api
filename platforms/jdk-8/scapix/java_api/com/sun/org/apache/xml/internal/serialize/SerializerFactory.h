// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_SERIALIZE_SERIALIZERFACTORY_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_SERIALIZE_SERIALIZERFACTORY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xml::internal::serialize { class SerializerFactory; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xml::internal::serialize::SerializerFactory>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xml/internal/serialize/SerializerFactory";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_SERIALIZE_SERIALIZERFACTORY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_SERIALIZE_SERIALIZERFACTORY)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_SERIALIZE_SERIALIZERFACTORY

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/xml/internal/serialize/OutputFormat.h>
#include <scapix/java_api/com/sun/org/apache/xml/internal/serialize/Serializer.h>
#include <scapix/java_api/java/io/OutputStream.h>
#include <scapix/java_api/java/io/Writer.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xml::internal::serialize::SerializerFactory : public jni::object_base<"com/sun/org/apache/xml/internal/serialize/SerializerFactory",
	java::lang::Object>
{
public:

	static jni::ref<java::lang::String> FactoriesProperty() { return get_static_field<"FactoriesProperty", jni::ref<java::lang::String>>(); }

	static jni::ref<com::sun::org::apache::xml::internal::serialize::SerializerFactory> new_object() { return base_::new_object(); }
	static void registerSerializerFactory(jni::ref<com::sun::org::apache::xml::internal::serialize::SerializerFactory> p1) { return call_static_method<"registerSerializerFactory", void>(p1); }
	static jni::ref<com::sun::org::apache::xml::internal::serialize::SerializerFactory> getSerializerFactory(jni::ref<java::lang::String> p1) { return call_static_method<"getSerializerFactory", jni::ref<com::sun::org::apache::xml::internal::serialize::SerializerFactory>>(p1); }
	jni::ref<com::sun::org::apache::xml::internal::serialize::Serializer> makeSerializer(jni::ref<com::sun::org::apache::xml::internal::serialize::OutputFormat> p1) { return call_method<"makeSerializer", jni::ref<com::sun::org::apache::xml::internal::serialize::Serializer>>(p1); }
	jni::ref<com::sun::org::apache::xml::internal::serialize::Serializer> makeSerializer(jni::ref<java::io::Writer> p1, jni::ref<com::sun::org::apache::xml::internal::serialize::OutputFormat> p2) { return call_method<"makeSerializer", jni::ref<com::sun::org::apache::xml::internal::serialize::Serializer>>(p1, p2); }
	jni::ref<com::sun::org::apache::xml::internal::serialize::Serializer> makeSerializer(jni::ref<java::io::OutputStream> p1, jni::ref<com::sun::org::apache::xml::internal::serialize::OutputFormat> p2) { return call_method<"makeSerializer", jni::ref<com::sun::org::apache::xml::internal::serialize::Serializer>>(p1, p2); }

protected:

	SerializerFactory(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_SERIALIZE_SERIALIZERFACTORY
