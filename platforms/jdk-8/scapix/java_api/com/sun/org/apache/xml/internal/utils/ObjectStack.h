// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/org/apache/xml/internal/utils/ObjectVector.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_UTILS_OBJECTSTACK_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_UTILS_OBJECTSTACK_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xml::internal::utils { class ObjectStack; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xml::internal::utils::ObjectStack>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xml/internal/utils/ObjectStack";
	using base_classes = std::tuple<scapix::java_api::com::sun::org::apache::xml::internal::utils::ObjectVector>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_UTILS_OBJECTSTACK_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_UTILS_OBJECTSTACK)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_UTILS_OBJECTSTACK

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xml::internal::utils::ObjectStack : public jni::object_base<"com/sun/org/apache/xml/internal/utils/ObjectStack",
	com::sun::org::apache::xml::internal::utils::ObjectVector>
{
public:

	static jni::ref<com::sun::org::apache::xml::internal::utils::ObjectStack> new_object() { return base_::new_object(); }
	static jni::ref<com::sun::org::apache::xml::internal::utils::ObjectStack> new_object(jint p1) { return base_::new_object(p1); }
	static jni::ref<com::sun::org::apache::xml::internal::utils::ObjectStack> new_object(jni::ref<com::sun::org::apache::xml::internal::utils::ObjectStack> p1) { return base_::new_object(p1); }
	jni::ref<java::lang::Object> push(jni::ref<java::lang::Object> p1) { return call_method<"push", jni::ref<java::lang::Object>>(p1); }
	jni::ref<java::lang::Object> pop() { return call_method<"pop", jni::ref<java::lang::Object>>(); }
	void quickPop(jint p1) { return call_method<"quickPop", void>(p1); }
	jni::ref<java::lang::Object> peek() { return call_method<"peek", jni::ref<java::lang::Object>>(); }
	jni::ref<java::lang::Object> peek(jint p1) { return call_method<"peek", jni::ref<java::lang::Object>>(p1); }
	void setTop(jni::ref<java::lang::Object> p1) { return call_method<"setTop", void>(p1); }
	jboolean empty() { return call_method<"empty", jboolean>(); }
	jint search(jni::ref<java::lang::Object> p1) { return call_method<"search", jint>(p1); }
	jni::ref<java::lang::Object> clone() { return call_method<"clone", jni::ref<java::lang::Object>>(); }

protected:

	ObjectStack(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_UTILS_OBJECTSTACK
