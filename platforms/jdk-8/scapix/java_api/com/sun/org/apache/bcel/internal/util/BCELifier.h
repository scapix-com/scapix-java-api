// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/EmptyVisitor.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_UTIL_BCELIFIER_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_UTIL_BCELIFIER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::bcel::internal::util { class BCELifier; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::bcel::internal::util::BCELifier>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/bcel/internal/util/BCELifier";
	using base_classes = std::tuple<scapix::java_api::com::sun::org::apache::bcel::internal::classfile::EmptyVisitor>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_UTIL_BCELIFIER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_UTIL_BCELIFIER)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_UTIL_BCELIFIER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/Field.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/JavaClass.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/classfile/Method.h>
#include <scapix/java_api/com/sun/org/apache/bcel/internal/util/BCELifier_FLAGS.h>
#include <scapix/java_api/java/io/OutputStream.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::bcel::internal::util::BCELifier : public jni::object_base<"com/sun/org/apache/bcel/internal/util/BCELifier",
	com::sun::org::apache::bcel::internal::classfile::EmptyVisitor>
{
public:

	using FLAGS = BCELifier_FLAGS;

	static void _main(jni::ref<jni::array<java::lang::String>> p1) { return call_static_method<"_main", void>(p1); }
	static jni::ref<java::lang::String> printFlags(jint p1, jni::ref<com::sun::org::apache::bcel::internal::util::BCELifier_FLAGS> p2) { return call_static_method<"printFlags", jni::ref<java::lang::String>>(p1, p2); }
	static jni::ref<com::sun::org::apache::bcel::internal::util::BCELifier> new_object(jni::ref<com::sun::org::apache::bcel::internal::classfile::JavaClass> p1, jni::ref<java::io::OutputStream> p2) { return base_::new_object(p1, p2); }
	void start() { return call_method<"start", void>(); }
	void visitField(jni::ref<com::sun::org::apache::bcel::internal::classfile::Field> p1) { return call_method<"visitField", void>(p1); }
	void visitJavaClass(jni::ref<com::sun::org::apache::bcel::internal::classfile::JavaClass> p1) { return call_method<"visitJavaClass", void>(p1); }
	void visitMethod(jni::ref<com::sun::org::apache::bcel::internal::classfile::Method> p1) { return call_method<"visitMethod", void>(p1); }

protected:

	BCELifier(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_BCEL_INTERNAL_UTIL_BCELIFIER
