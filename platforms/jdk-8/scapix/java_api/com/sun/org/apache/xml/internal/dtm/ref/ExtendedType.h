// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_DTM_REF_EXTENDEDTYPE_FWD
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_DTM_REF_EXTENDEDTYPE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::org::apache::xml::internal::dtm::ref { class ExtendedType; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::org::apache::xml::internal::dtm::ref::ExtendedType>
{
	static constexpr fixed_string class_name = "com/sun/org/apache/xml/internal/dtm/ref/ExtendedType";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_DTM_REF_EXTENDEDTYPE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_DTM_REF_EXTENDEDTYPE)
#define SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_DTM_REF_EXTENDEDTYPE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::org::apache::xml::internal::dtm::ref::ExtendedType : public jni::object_base<"com/sun/org/apache/xml/internal/dtm/ref/ExtendedType",
	java::lang::Object>
{
public:

	static jni::ref<com::sun::org::apache::xml::internal::dtm::ref::ExtendedType> new_object(jint p1, jni::ref<java::lang::String> p2, jni::ref<java::lang::String> p3) { return base_::new_object(p1, p2, p3); }
	static jni::ref<com::sun::org::apache::xml::internal::dtm::ref::ExtendedType> new_object(jint p1, jni::ref<java::lang::String> p2, jni::ref<java::lang::String> p3, jint p4) { return base_::new_object(p1, p2, p3, p4); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jboolean equals(jni::ref<com::sun::org::apache::xml::internal::dtm::ref::ExtendedType> p1) { return call_method<"equals", jboolean>(p1); }
	jint getNodeType() { return call_method<"getNodeType", jint>(); }
	jni::ref<java::lang::String> getLocalName() { return call_method<"getLocalName", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getNamespace() { return call_method<"getNamespace", jni::ref<java::lang::String>>(); }

protected:

	ExtendedType(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_ORG_APACHE_XML_INTERNAL_DTM_REF_EXTENDEDTYPE
