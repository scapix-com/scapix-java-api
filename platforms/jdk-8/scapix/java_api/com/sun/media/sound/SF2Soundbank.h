// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/javax/sound/midi/Soundbank.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_SF2SOUNDBANK_FWD
#define SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_SF2SOUNDBANK_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::media::sound { class SF2Soundbank; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::media::sound::SF2Soundbank>
{
	static constexpr fixed_string class_name = "com/sun/media/sound/SF2Soundbank";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::javax::sound::midi::Soundbank>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_SF2SOUNDBANK_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_SF2SOUNDBANK)
#define SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_SF2SOUNDBANK

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/media/sound/SF2Instrument.h>
#include <scapix/java_api/com/sun/media/sound/SF2Layer.h>
#include <scapix/java_api/com/sun/media/sound/SF2Sample.h>
#include <scapix/java_api/java/io/File.h>
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/io/OutputStream.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/net/URL.h>
#include <scapix/java_api/javax/sound/midi/Instrument.h>
#include <scapix/java_api/javax/sound/midi/Patch.h>
#include <scapix/java_api/javax/sound/midi/SoundbankResource.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::media::sound::SF2Soundbank : public jni::object_base<"com/sun/media/sound/SF2Soundbank",
	java::lang::Object,
	javax::sound::midi::Soundbank>
{
public:

	static jni::ref<com::sun::media::sound::SF2Soundbank> new_object() { return base_::new_object(); }
	static jni::ref<com::sun::media::sound::SF2Soundbank> new_object(jni::ref<java::net::URL> p1) { return base_::new_object(p1); }
	static jni::ref<com::sun::media::sound::SF2Soundbank> new_object(jni::ref<java::io::File> p1) { return base_::new_object(p1); }
	static jni::ref<com::sun::media::sound::SF2Soundbank> new_object(jni::ref<java::io::InputStream> p1) { return base_::new_object(p1); }
	void save(jni::ref<java::lang::String> p1) { return call_method<"save", void>(p1); }
	void save(jni::ref<java::io::File> p1) { return call_method<"save", void>(p1); }
	void save(jni::ref<java::io::OutputStream> p1) { return call_method<"save", void>(p1); }
	jni::ref<java::lang::String> getName() { return call_method<"getName", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getVersion() { return call_method<"getVersion", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getVendor() { return call_method<"getVendor", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getDescription() { return call_method<"getDescription", jni::ref<java::lang::String>>(); }
	void setName(jni::ref<java::lang::String> p1) { return call_method<"setName", void>(p1); }
	void setVendor(jni::ref<java::lang::String> p1) { return call_method<"setVendor", void>(p1); }
	void setDescription(jni::ref<java::lang::String> p1) { return call_method<"setDescription", void>(p1); }
	jni::ref<jni::array<javax::sound::midi::SoundbankResource>> getResources() { return call_method<"getResources", jni::ref<jni::array<javax::sound::midi::SoundbankResource>>>(); }
	jni::ref<jni::array<com::sun::media::sound::SF2Instrument>> getInstruments() { return call_method<"getInstruments", jni::ref<jni::array<com::sun::media::sound::SF2Instrument>>>(); }
	jni::ref<jni::array<com::sun::media::sound::SF2Layer>> getLayers() { return call_method<"getLayers", jni::ref<jni::array<com::sun::media::sound::SF2Layer>>>(); }
	jni::ref<jni::array<com::sun::media::sound::SF2Sample>> getSamples() { return call_method<"getSamples", jni::ref<jni::array<com::sun::media::sound::SF2Sample>>>(); }
	jni::ref<javax::sound::midi::Instrument> getInstrument(jni::ref<javax::sound::midi::Patch> p1) { return call_method<"getInstrument", jni::ref<javax::sound::midi::Instrument>>(p1); }
	jni::ref<java::lang::String> getCreationDate() { return call_method<"getCreationDate", jni::ref<java::lang::String>>(); }
	void setCreationDate(jni::ref<java::lang::String> p1) { return call_method<"setCreationDate", void>(p1); }
	jni::ref<java::lang::String> getProduct() { return call_method<"getProduct", jni::ref<java::lang::String>>(); }
	void setProduct(jni::ref<java::lang::String> p1) { return call_method<"setProduct", void>(p1); }
	jni::ref<java::lang::String> getRomName() { return call_method<"getRomName", jni::ref<java::lang::String>>(); }
	void setRomName(jni::ref<java::lang::String> p1) { return call_method<"setRomName", void>(p1); }
	jint getRomVersionMajor() { return call_method<"getRomVersionMajor", jint>(); }
	void setRomVersionMajor(jint p1) { return call_method<"setRomVersionMajor", void>(p1); }
	jint getRomVersionMinor() { return call_method<"getRomVersionMinor", jint>(); }
	void setRomVersionMinor(jint p1) { return call_method<"setRomVersionMinor", void>(p1); }
	jni::ref<java::lang::String> getTargetEngine() { return call_method<"getTargetEngine", jni::ref<java::lang::String>>(); }
	void setTargetEngine(jni::ref<java::lang::String> p1) { return call_method<"setTargetEngine", void>(p1); }
	jni::ref<java::lang::String> getTools() { return call_method<"getTools", jni::ref<java::lang::String>>(); }
	void setTools(jni::ref<java::lang::String> p1) { return call_method<"setTools", void>(p1); }
	void addResource(jni::ref<javax::sound::midi::SoundbankResource> p1) { return call_method<"addResource", void>(p1); }
	void removeResource(jni::ref<javax::sound::midi::SoundbankResource> p1) { return call_method<"removeResource", void>(p1); }
	void addInstrument(jni::ref<com::sun::media::sound::SF2Instrument> p1) { return call_method<"addInstrument", void>(p1); }
	void removeInstrument(jni::ref<com::sun::media::sound::SF2Instrument> p1) { return call_method<"removeInstrument", void>(p1); }

protected:

	SF2Soundbank(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_SF2SOUNDBANK
