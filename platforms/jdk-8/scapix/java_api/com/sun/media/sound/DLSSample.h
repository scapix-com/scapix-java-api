// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/sound/midi/SoundbankResource.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_DLSSAMPLE_FWD
#define SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_DLSSAMPLE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::media::sound { class DLSSample; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::media::sound::DLSSample>
{
	static constexpr fixed_string class_name = "com/sun/media/sound/DLSSample";
	using base_classes = std::tuple<scapix::java_api::javax::sound::midi::SoundbankResource>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_DLSSAMPLE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_DLSSAMPLE)
#define SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_DLSSAMPLE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/media/sound/DLSInfo.h>
#include <scapix/java_api/com/sun/media/sound/DLSSampleOptions.h>
#include <scapix/java_api/com/sun/media/sound/ModelByteBuffer.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/sound/midi/Soundbank.h>
#include <scapix/java_api/javax/sound/sampled/AudioFormat.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::media::sound::DLSSample : public jni::object_base<"com/sun/media/sound/DLSSample",
	javax::sound::midi::SoundbankResource>
{
public:

	static jni::ref<com::sun::media::sound::DLSSample> new_object(jni::ref<javax::sound::midi::Soundbank> p1) { return base_::new_object(p1); }
	static jni::ref<com::sun::media::sound::DLSSample> new_object() { return base_::new_object(); }
	jni::ref<com::sun::media::sound::DLSInfo> getInfo() { return call_method<"getInfo", jni::ref<com::sun::media::sound::DLSInfo>>(); }
	jni::ref<java::lang::Object> getData() { return call_method<"getData", jni::ref<java::lang::Object>>(); }
	jni::ref<com::sun::media::sound::ModelByteBuffer> getDataBuffer() { return call_method<"getDataBuffer", jni::ref<com::sun::media::sound::ModelByteBuffer>>(); }
	jni::ref<javax::sound::sampled::AudioFormat> getFormat() { return call_method<"getFormat", jni::ref<javax::sound::sampled::AudioFormat>>(); }
	void setFormat(jni::ref<javax::sound::sampled::AudioFormat> p1) { return call_method<"setFormat", void>(p1); }
	void setData(jni::ref<com::sun::media::sound::ModelByteBuffer> p1) { return call_method<"setData", void>(p1); }
	void setData(jni::ref<jni::array<jbyte>> p1) { return call_method<"setData", void>(p1); }
	void setData(jni::ref<jni::array<jbyte>> p1, jint p2, jint p3) { return call_method<"setData", void>(p1, p2, p3); }
	jni::ref<java::lang::String> getName() { return call_method<"getName", jni::ref<java::lang::String>>(); }
	void setName(jni::ref<java::lang::String> p1) { return call_method<"setName", void>(p1); }
	jni::ref<com::sun::media::sound::DLSSampleOptions> getSampleoptions() { return call_method<"getSampleoptions", jni::ref<com::sun::media::sound::DLSSampleOptions>>(); }
	void setSampleoptions(jni::ref<com::sun::media::sound::DLSSampleOptions> p1) { return call_method<"setSampleoptions", void>(p1); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jni::ref<jni::array<jbyte>> getGuid() { return call_method<"getGuid", jni::ref<jni::array<jbyte>>>(); }
	void setGuid(jni::ref<jni::array<jbyte>> p1) { return call_method<"setGuid", void>(p1); }

protected:

	DLSSample(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_DLSSAMPLE
