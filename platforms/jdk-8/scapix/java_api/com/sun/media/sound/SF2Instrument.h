// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/media/sound/ModelInstrument.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_SF2INSTRUMENT_FWD
#define SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_SF2INSTRUMENT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::media::sound { class SF2Instrument; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::media::sound::SF2Instrument>
{
	static constexpr fixed_string class_name = "com/sun/media/sound/SF2Instrument";
	using base_classes = std::tuple<scapix::java_api::com::sun::media::sound::ModelInstrument>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_SF2INSTRUMENT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_SF2INSTRUMENT)
#define SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_SF2INSTRUMENT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/media/sound/ModelPerformer.h>
#include <scapix/java_api/com/sun/media/sound/SF2GlobalRegion.h>
#include <scapix/java_api/com/sun/media/sound/SF2Soundbank.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/javax/sound/midi/Patch.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::media::sound::SF2Instrument : public jni::object_base<"com/sun/media/sound/SF2Instrument",
	com::sun::media::sound::ModelInstrument>
{
public:

	static jni::ref<com::sun::media::sound::SF2Instrument> new_object() { return base_::new_object(); }
	static jni::ref<com::sun::media::sound::SF2Instrument> new_object(jni::ref<com::sun::media::sound::SF2Soundbank> p1) { return base_::new_object(p1); }
	jni::ref<java::lang::String> getName() { return call_method<"getName", jni::ref<java::lang::String>>(); }
	void setName(jni::ref<java::lang::String> p1) { return call_method<"setName", void>(p1); }
	jni::ref<javax::sound::midi::Patch> getPatch() { return call_method<"getPatch", jni::ref<javax::sound::midi::Patch>>(); }
	void setPatch(jni::ref<javax::sound::midi::Patch> p1) { return call_method<"setPatch", void>(p1); }
	jni::ref<java::lang::Object> getData() { return call_method<"getData", jni::ref<java::lang::Object>>(); }
	jlong getGenre() { return call_method<"getGenre", jlong>(); }
	void setGenre(jlong p1) { return call_method<"setGenre", void>(p1); }
	jlong getLibrary() { return call_method<"getLibrary", jlong>(); }
	void setLibrary(jlong p1) { return call_method<"setLibrary", void>(p1); }
	jlong getMorphology() { return call_method<"getMorphology", jlong>(); }
	void setMorphology(jlong p1) { return call_method<"setMorphology", void>(p1); }
	jni::ref<java::util::List> getRegions() { return call_method<"getRegions", jni::ref<java::util::List>>(); }
	jni::ref<com::sun::media::sound::SF2GlobalRegion> getGlobalRegion() { return call_method<"getGlobalRegion", jni::ref<com::sun::media::sound::SF2GlobalRegion>>(); }
	void setGlobalZone(jni::ref<com::sun::media::sound::SF2GlobalRegion> p1) { return call_method<"setGlobalZone", void>(p1); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jni::ref<jni::array<com::sun::media::sound::ModelPerformer>> getPerformers() { return call_method<"getPerformers", jni::ref<jni::array<com::sun::media::sound::ModelPerformer>>>(); }

protected:

	SF2Instrument(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_SF2INSTRUMENT
