// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/sound/midi/VoiceStatus.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_SOFTVOICE_FWD
#define SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_SOFTVOICE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::media::sound { class SoftVoice; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::media::sound::SoftVoice>
{
	static constexpr fixed_string class_name = "com/sun/media/sound/SoftVoice";
	using base_classes = std::tuple<scapix::java_api::javax::sound::midi::VoiceStatus>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_SOFTVOICE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_SOFTVOICE)
#define SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_SOFTVOICE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/media/sound/SoftSynthesizer.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::media::sound::SoftVoice : public jni::object_base<"com/sun/media/sound/SoftVoice",
	javax::sound::midi::VoiceStatus>
{
public:

	jint exclusiveClass() { return get_field<"exclusiveClass", jint>(); }
	void exclusiveClass(jint v) { set_field<"exclusiveClass", jint>(v); }
	jboolean releaseTriggered() { return get_field<"releaseTriggered", jboolean>(); }
	void releaseTriggered(jboolean v) { set_field<"releaseTriggered", jboolean>(v); }

	static jni::ref<com::sun::media::sound::SoftVoice> new_object(jni::ref<com::sun::media::sound::SoftSynthesizer> p1) { return base_::new_object(p1); }

protected:

	SoftVoice(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_SOFTVOICE
