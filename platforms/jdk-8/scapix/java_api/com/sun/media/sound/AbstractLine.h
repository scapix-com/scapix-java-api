// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/javax/sound/sampled/Line.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_ABSTRACTLINE_FWD
#define SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_ABSTRACTLINE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::media::sound { class AbstractLine; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::media::sound::AbstractLine>
{
	static constexpr fixed_string class_name = "com/sun/media/sound/AbstractLine";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::javax::sound::sampled::Line>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_ABSTRACTLINE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_ABSTRACTLINE)
#define SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_ABSTRACTLINE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/javax/sound/sampled/Control.h>
#include <scapix/java_api/javax/sound/sampled/Control_Type.h>
#include <scapix/java_api/javax/sound/sampled/Line_Info.h>
#include <scapix/java_api/javax/sound/sampled/LineListener.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class com::sun::media::sound::AbstractLine : public jni::object_base<"com/sun/media/sound/AbstractLine",
	java::lang::Object,
	javax::sound::sampled::Line>
{
public:

	jni::ref<javax::sound::sampled::Line_Info> getLineInfo() { return call_method<"getLineInfo", jni::ref<javax::sound::sampled::Line_Info>>(); }
	jboolean isOpen() { return call_method<"isOpen", jboolean>(); }
	void addLineListener(jni::ref<javax::sound::sampled::LineListener> p1) { return call_method<"addLineListener", void>(p1); }
	void removeLineListener(jni::ref<javax::sound::sampled::LineListener> p1) { return call_method<"removeLineListener", void>(p1); }
	jni::ref<jni::array<javax::sound::sampled::Control>> getControls() { return call_method<"getControls", jni::ref<jni::array<javax::sound::sampled::Control>>>(); }
	jboolean isControlSupported(jni::ref<javax::sound::sampled::Control_Type> p1) { return call_method<"isControlSupported", jboolean>(p1); }
	jni::ref<javax::sound::sampled::Control> getControl(jni::ref<javax::sound::sampled::Control_Type> p1) { return call_method<"getControl", jni::ref<javax::sound::sampled::Control>>(p1); }
	jint getFramePosition() { return call_method<"getFramePosition", jint>(); }
	jlong getLongFramePosition() { return call_method<"getLongFramePosition", jlong>(); }
	void open() { return call_method<"open", void>(); }
	void close() { return call_method<"close", void>(); }

protected:

	AbstractLine(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_ABSTRACTLINE
