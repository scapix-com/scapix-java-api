// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_DLSREGION_FWD
#define SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_DLSREGION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::media::sound { class DLSRegion; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::media::sound::DLSRegion>
{
	static constexpr fixed_string class_name = "com/sun/media/sound/DLSRegion";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_DLSREGION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_DLSREGION)
#define SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_DLSREGION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/media/sound/DLSSample.h>
#include <scapix/java_api/com/sun/media/sound/DLSSampleOptions.h>
#include <scapix/java_api/java/util/List.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::media::sound::DLSRegion : public jni::object_base<"com/sun/media/sound/DLSRegion",
	java::lang::Object>
{
public:

	static jint OPTION_SELFNONEXCLUSIVE() { return get_static_field<"OPTION_SELFNONEXCLUSIVE", jint>(); }

	static jni::ref<com::sun::media::sound::DLSRegion> new_object() { return base_::new_object(); }
	jni::ref<java::util::List> getModulators() { return call_method<"getModulators", jni::ref<java::util::List>>(); }
	jlong getChannel() { return call_method<"getChannel", jlong>(); }
	void setChannel(jlong p1) { return call_method<"setChannel", void>(p1); }
	jint getExclusiveClass() { return call_method<"getExclusiveClass", jint>(); }
	void setExclusiveClass(jint p1) { return call_method<"setExclusiveClass", void>(p1); }
	jint getFusoptions() { return call_method<"getFusoptions", jint>(); }
	void setFusoptions(jint p1) { return call_method<"setFusoptions", void>(p1); }
	jint getKeyfrom() { return call_method<"getKeyfrom", jint>(); }
	void setKeyfrom(jint p1) { return call_method<"setKeyfrom", void>(p1); }
	jint getKeyto() { return call_method<"getKeyto", jint>(); }
	void setKeyto(jint p1) { return call_method<"setKeyto", void>(p1); }
	jint getOptions() { return call_method<"getOptions", jint>(); }
	void setOptions(jint p1) { return call_method<"setOptions", void>(p1); }
	jint getPhasegroup() { return call_method<"getPhasegroup", jint>(); }
	void setPhasegroup(jint p1) { return call_method<"setPhasegroup", void>(p1); }
	jni::ref<com::sun::media::sound::DLSSample> getSample() { return call_method<"getSample", jni::ref<com::sun::media::sound::DLSSample>>(); }
	void setSample(jni::ref<com::sun::media::sound::DLSSample> p1) { return call_method<"setSample", void>(p1); }
	jint getVelfrom() { return call_method<"getVelfrom", jint>(); }
	void setVelfrom(jint p1) { return call_method<"setVelfrom", void>(p1); }
	jint getVelto() { return call_method<"getVelto", jint>(); }
	void setVelto(jint p1) { return call_method<"setVelto", void>(p1); }
	void setModulators(jni::ref<java::util::List> p1) { return call_method<"setModulators", void>(p1); }
	jni::ref<com::sun::media::sound::DLSSampleOptions> getSampleoptions() { return call_method<"getSampleoptions", jni::ref<com::sun::media::sound::DLSSampleOptions>>(); }
	void setSampleoptions(jni::ref<com::sun::media::sound::DLSSampleOptions> p1) { return call_method<"setSampleoptions", void>(p1); }

protected:

	DLSRegion(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_DLSREGION
