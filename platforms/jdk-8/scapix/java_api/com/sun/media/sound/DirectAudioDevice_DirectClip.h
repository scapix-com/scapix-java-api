// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/media/sound/DirectAudioDevice_DirectDL.h>
#include <scapix/java_api/javax/sound/sampled/Clip.h>
#include <scapix/java_api/java/lang/Runnable.h>
#include <scapix/java_api/com/sun/media/sound/AutoClosingClip.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_DIRECTAUDIODEVICE_DIRECTCLIP_FWD
#define SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_DIRECTAUDIODEVICE_DIRECTCLIP_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::media::sound { class DirectAudioDevice_DirectClip; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::media::sound::DirectAudioDevice_DirectClip>
{
	static constexpr fixed_string class_name = "com/sun/media/sound/DirectAudioDevice$DirectClip";
	using base_classes = std::tuple<scapix::java_api::com::sun::media::sound::DirectAudioDevice_DirectDL, scapix::java_api::javax::sound::sampled::Clip, scapix::java_api::java::lang::Runnable, scapix::java_api::com::sun::media::sound::AutoClosingClip>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_DIRECTAUDIODEVICE_DIRECTCLIP_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_DIRECTAUDIODEVICE_DIRECTCLIP)
#define SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_DIRECTAUDIODEVICE_DIRECTCLIP

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/javax/sound/sampled/AudioFormat.h>
#include <scapix/java_api/javax/sound/sampled/AudioInputStream.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class com::sun::media::sound::DirectAudioDevice_DirectClip : public jni::object_base<"com/sun/media/sound/DirectAudioDevice$DirectClip",
	com::sun::media::sound::DirectAudioDevice_DirectDL,
	javax::sound::sampled::Clip,
	java::lang::Runnable,
	com::sun::media::sound::AutoClosingClip>
{
public:

	void open(jni::ref<javax::sound::sampled::AudioFormat> p1, jni::ref<jni::array<jbyte>> p2, jint p3, jint p4) { return call_method<"open", void>(p1, p2, p3, p4); }
	void open(jni::ref<javax::sound::sampled::AudioInputStream> p1) { return call_method<"open", void>(p1); }
	jint getFrameLength() { return call_method<"getFrameLength", jint>(); }
	jlong getMicrosecondLength() { return call_method<"getMicrosecondLength", jlong>(); }
	void setFramePosition(jint p1) { return call_method<"setFramePosition", void>(p1); }
	jlong getLongFramePosition() { return call_method<"getLongFramePosition", jlong>(); }
	void setMicrosecondPosition(jlong p1) { return call_method<"setMicrosecondPosition", void>(p1); }
	void setLoopPoints(jint p1, jint p2) { return call_method<"setLoopPoints", void>(p1, p2); }
	void loop(jint p1) { return call_method<"loop", void>(p1); }
	void run() { return call_method<"run", void>(); }
	jboolean isAutoClosing() { return call_method<"isAutoClosing", jboolean>(); }
	void setAutoClosing(jboolean p1) { return call_method<"setAutoClosing", void>(p1); }

protected:

	DirectAudioDevice_DirectClip(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_DIRECTAUDIODEVICE_DIRECTCLIP
