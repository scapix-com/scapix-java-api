// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/javax/sound/midi/Soundbank.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_SIMPLESOUNDBANK_FWD
#define SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_SIMPLESOUNDBANK_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::media::sound { class SimpleSoundbank; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::media::sound::SimpleSoundbank>
{
	static constexpr fixed_string class_name = "com/sun/media/sound/SimpleSoundbank";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::javax::sound::midi::Soundbank>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_SIMPLESOUNDBANK_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_SIMPLESOUNDBANK)
#define SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_SIMPLESOUNDBANK

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/sound/midi/Instrument.h>
#include <scapix/java_api/javax/sound/midi/Patch.h>
#include <scapix/java_api/javax/sound/midi/SoundbankResource.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::media::sound::SimpleSoundbank : public jni::object_base<"com/sun/media/sound/SimpleSoundbank",
	java::lang::Object,
	javax::sound::midi::Soundbank>
{
public:

	static jni::ref<com::sun::media::sound::SimpleSoundbank> new_object() { return base_::new_object(); }
	jni::ref<java::lang::String> getName() { return call_method<"getName", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getVersion() { return call_method<"getVersion", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getVendor() { return call_method<"getVendor", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getDescription() { return call_method<"getDescription", jni::ref<java::lang::String>>(); }
	void setDescription(jni::ref<java::lang::String> p1) { return call_method<"setDescription", void>(p1); }
	void setName(jni::ref<java::lang::String> p1) { return call_method<"setName", void>(p1); }
	void setVendor(jni::ref<java::lang::String> p1) { return call_method<"setVendor", void>(p1); }
	void setVersion(jni::ref<java::lang::String> p1) { return call_method<"setVersion", void>(p1); }
	jni::ref<jni::array<javax::sound::midi::SoundbankResource>> getResources() { return call_method<"getResources", jni::ref<jni::array<javax::sound::midi::SoundbankResource>>>(); }
	jni::ref<jni::array<javax::sound::midi::Instrument>> getInstruments() { return call_method<"getInstruments", jni::ref<jni::array<javax::sound::midi::Instrument>>>(); }
	jni::ref<javax::sound::midi::Instrument> getInstrument(jni::ref<javax::sound::midi::Patch> p1) { return call_method<"getInstrument", jni::ref<javax::sound::midi::Instrument>>(p1); }
	void addResource(jni::ref<javax::sound::midi::SoundbankResource> p1) { return call_method<"addResource", void>(p1); }
	void removeResource(jni::ref<javax::sound::midi::SoundbankResource> p1) { return call_method<"removeResource", void>(p1); }
	void addInstrument(jni::ref<javax::sound::midi::Instrument> p1) { return call_method<"addInstrument", void>(p1); }
	void removeInstrument(jni::ref<javax::sound::midi::Instrument> p1) { return call_method<"removeInstrument", void>(p1); }
	void addAllInstruments(jni::ref<javax::sound::midi::Soundbank> p1) { return call_method<"addAllInstruments", void>(p1); }
	void removeAllInstruments(jni::ref<javax::sound::midi::Soundbank> p1) { return call_method<"removeAllInstruments", void>(p1); }

protected:

	SimpleSoundbank(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_SIMPLESOUNDBANK
