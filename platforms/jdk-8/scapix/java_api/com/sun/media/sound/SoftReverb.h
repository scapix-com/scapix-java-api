// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/com/sun/media/sound/SoftAudioProcessor.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_SOFTREVERB_FWD
#define SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_SOFTREVERB_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::media::sound { class SoftReverb; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::media::sound::SoftReverb>
{
	static constexpr fixed_string class_name = "com/sun/media/sound/SoftReverb";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::com::sun::media::sound::SoftAudioProcessor>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_SOFTREVERB_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_SOFTREVERB)
#define SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_SOFTREVERB

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/media/sound/SoftAudioBuffer.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::media::sound::SoftReverb : public jni::object_base<"com/sun/media/sound/SoftReverb",
	java::lang::Object,
	com::sun::media::sound::SoftAudioProcessor>
{
public:

	static jni::ref<com::sun::media::sound::SoftReverb> new_object() { return base_::new_object(); }
	void init(jfloat p1, jfloat p2) { return call_method<"init", void>(p1, p2); }
	void setInput(jint p1, jni::ref<com::sun::media::sound::SoftAudioBuffer> p2) { return call_method<"setInput", void>(p1, p2); }
	void setOutput(jint p1, jni::ref<com::sun::media::sound::SoftAudioBuffer> p2) { return call_method<"setOutput", void>(p1, p2); }
	void setMixMode(jboolean p1) { return call_method<"setMixMode", void>(p1); }
	void processAudio() { return call_method<"processAudio", void>(); }
	void globalParameterControlChange(jni::ref<jni::array<jint>> p1, jlong p2, jlong p3) { return call_method<"globalParameterControlChange", void>(p1, p2, p3); }
	void processControlLogic() { return call_method<"processControlLogic", void>(); }
	void setRoomSize(jfloat p1) { return call_method<"setRoomSize", void>(p1); }
	void setPreDelay(jfloat p1) { return call_method<"setPreDelay", void>(p1); }
	void setGain(jfloat p1) { return call_method<"setGain", void>(p1); }
	void setDamp(jfloat p1) { return call_method<"setDamp", void>(p1); }
	void setLightMode(jboolean p1) { return call_method<"setLightMode", void>(p1); }

protected:

	SoftReverb(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_SOFTREVERB
