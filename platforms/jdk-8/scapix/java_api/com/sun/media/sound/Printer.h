// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_PRINTER_FWD
#define SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_PRINTER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::media::sound { class Printer; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::media::sound::Printer>
{
	static constexpr fixed_string class_name = "com/sun/media/sound/Printer";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_PRINTER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_PRINTER)
#define SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_PRINTER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class com::sun::media::sound::Printer : public jni::object_base<"com/sun/media/sound/Printer",
	java::lang::Object>
{
public:

	static void err(jni::ref<java::lang::String> p1) { return call_static_method<"err", void>(p1); }
	static void debug(jni::ref<java::lang::String> p1) { return call_static_method<"debug", void>(p1); }
	static void trace(jni::ref<java::lang::String> p1) { return call_static_method<"trace", void>(p1); }
	static void verbose(jni::ref<java::lang::String> p1) { return call_static_method<"verbose", void>(p1); }
	static void release(jni::ref<java::lang::String> p1) { return call_static_method<"release", void>(p1); }
	static void println(jni::ref<java::lang::String> p1) { return call_static_method<"println", void>(p1); }
	static void println() { return call_static_method<"println", void>(); }

protected:

	Printer(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_PRINTER
