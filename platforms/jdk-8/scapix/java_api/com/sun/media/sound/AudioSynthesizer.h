// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/javax/sound/midi/Synthesizer.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_AUDIOSYNTHESIZER_FWD
#define SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_AUDIOSYNTHESIZER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::media::sound { class AudioSynthesizer; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::media::sound::AudioSynthesizer>
{
	static constexpr fixed_string class_name = "com/sun/media/sound/AudioSynthesizer";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::javax::sound::midi::Synthesizer>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_AUDIOSYNTHESIZER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_AUDIOSYNTHESIZER)
#define SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_AUDIOSYNTHESIZER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/media/sound/AudioSynthesizerPropertyInfo.h>
#include <scapix/java_api/java/util/Map.h>
#include <scapix/java_api/javax/sound/sampled/AudioFormat.h>
#include <scapix/java_api/javax/sound/sampled/AudioInputStream.h>
#include <scapix/java_api/javax/sound/sampled/SourceDataLine.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::media::sound::AudioSynthesizer : public jni::object_base<"com/sun/media/sound/AudioSynthesizer",
	java::lang::Object,
	javax::sound::midi::Synthesizer>
{
public:

	jni::ref<javax::sound::sampled::AudioFormat> getFormat() { return call_method<"getFormat", jni::ref<javax::sound::sampled::AudioFormat>>(); }
	jni::ref<jni::array<com::sun::media::sound::AudioSynthesizerPropertyInfo>> getPropertyInfo(jni::ref<java::util::Map> p1) { return call_method<"getPropertyInfo", jni::ref<jni::array<com::sun::media::sound::AudioSynthesizerPropertyInfo>>>(p1); }
	void open(jni::ref<javax::sound::sampled::SourceDataLine> p1, jni::ref<java::util::Map> p2) { return call_method<"open", void>(p1, p2); }
	jni::ref<javax::sound::sampled::AudioInputStream> openStream(jni::ref<javax::sound::sampled::AudioFormat> p1, jni::ref<java::util::Map> p2) { return call_method<"openStream", jni::ref<javax::sound::sampled::AudioInputStream>>(p1, p2); }

protected:

	AudioSynthesizer(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_AUDIOSYNTHESIZER
