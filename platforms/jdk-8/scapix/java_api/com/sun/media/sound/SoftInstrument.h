// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/sound/midi/Instrument.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_SOFTINSTRUMENT_FWD
#define SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_SOFTINSTRUMENT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::media::sound { class SoftInstrument; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::media::sound::SoftInstrument>
{
	static constexpr fixed_string class_name = "com/sun/media/sound/SoftInstrument";
	using base_classes = std::tuple<scapix::java_api::javax::sound::midi::Instrument>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_SOFTINSTRUMENT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_SOFTINSTRUMENT)
#define SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_SOFTINSTRUMENT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/media/sound/ModelDirectedPlayer.h>
#include <scapix/java_api/com/sun/media/sound/ModelDirector.h>
#include <scapix/java_api/com/sun/media/sound/ModelInstrument.h>
#include <scapix/java_api/com/sun/media/sound/ModelPerformer.h>
#include <scapix/java_api/com/sun/media/sound/SoftPerformer.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/javax/sound/midi/MidiChannel.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::media::sound::SoftInstrument : public jni::object_base<"com/sun/media/sound/SoftInstrument",
	javax::sound::midi::Instrument>
{
public:

	static jni::ref<com::sun::media::sound::SoftInstrument> new_object(jni::ref<com::sun::media::sound::ModelInstrument> p1) { return base_::new_object(p1); }
	static jni::ref<com::sun::media::sound::SoftInstrument> new_object(jni::ref<com::sun::media::sound::ModelInstrument> p1, jni::ref<jni::array<com::sun::media::sound::ModelPerformer>> p2) { return base_::new_object(p1, p2); }
	jni::ref<com::sun::media::sound::ModelDirector> getDirector(jni::ref<javax::sound::midi::MidiChannel> p1, jni::ref<com::sun::media::sound::ModelDirectedPlayer> p2) { return call_method<"getDirector", jni::ref<com::sun::media::sound::ModelDirector>>(p1, p2); }
	jni::ref<com::sun::media::sound::ModelInstrument> getSourceInstrument() { return call_method<"getSourceInstrument", jni::ref<com::sun::media::sound::ModelInstrument>>(); }
	jni::ref<java::lang::Object> getData() { return call_method<"getData", jni::ref<java::lang::Object>>(); }
	jni::ref<com::sun::media::sound::SoftPerformer> getPerformer(jint p1) { return call_method<"getPerformer", jni::ref<com::sun::media::sound::SoftPerformer>>(p1); }

protected:

	SoftInstrument(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_SOFTINSTRUMENT
