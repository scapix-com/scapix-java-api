// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_DLSMODULATOR_FWD
#define SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_DLSMODULATOR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::media::sound { class DLSModulator; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::media::sound::DLSModulator>
{
	static constexpr fixed_string class_name = "com/sun/media/sound/DLSModulator";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_DLSMODULATOR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_DLSMODULATOR)
#define SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_DLSMODULATOR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::media::sound::DLSModulator : public jni::object_base<"com/sun/media/sound/DLSModulator",
	java::lang::Object>
{
public:

	static jint CONN_DST_NONE() { return get_static_field<"CONN_DST_NONE", jint>(); }
	static jint CONN_DST_GAIN() { return get_static_field<"CONN_DST_GAIN", jint>(); }
	static jint CONN_DST_PITCH() { return get_static_field<"CONN_DST_PITCH", jint>(); }
	static jint CONN_DST_PAN() { return get_static_field<"CONN_DST_PAN", jint>(); }
	static jint CONN_DST_LFO_FREQUENCY() { return get_static_field<"CONN_DST_LFO_FREQUENCY", jint>(); }
	static jint CONN_DST_LFO_STARTDELAY() { return get_static_field<"CONN_DST_LFO_STARTDELAY", jint>(); }
	static jint CONN_DST_EG1_ATTACKTIME() { return get_static_field<"CONN_DST_EG1_ATTACKTIME", jint>(); }
	static jint CONN_DST_EG1_DECAYTIME() { return get_static_field<"CONN_DST_EG1_DECAYTIME", jint>(); }
	static jint CONN_DST_EG1_RELEASETIME() { return get_static_field<"CONN_DST_EG1_RELEASETIME", jint>(); }
	static jint CONN_DST_EG1_SUSTAINLEVEL() { return get_static_field<"CONN_DST_EG1_SUSTAINLEVEL", jint>(); }
	static jint CONN_DST_EG2_ATTACKTIME() { return get_static_field<"CONN_DST_EG2_ATTACKTIME", jint>(); }
	static jint CONN_DST_EG2_DECAYTIME() { return get_static_field<"CONN_DST_EG2_DECAYTIME", jint>(); }
	static jint CONN_DST_EG2_RELEASETIME() { return get_static_field<"CONN_DST_EG2_RELEASETIME", jint>(); }
	static jint CONN_DST_EG2_SUSTAINLEVEL() { return get_static_field<"CONN_DST_EG2_SUSTAINLEVEL", jint>(); }
	static jint CONN_DST_KEYNUMBER() { return get_static_field<"CONN_DST_KEYNUMBER", jint>(); }
	static jint CONN_DST_LEFT() { return get_static_field<"CONN_DST_LEFT", jint>(); }
	static jint CONN_DST_RIGHT() { return get_static_field<"CONN_DST_RIGHT", jint>(); }
	static jint CONN_DST_CENTER() { return get_static_field<"CONN_DST_CENTER", jint>(); }
	static jint CONN_DST_LEFTREAR() { return get_static_field<"CONN_DST_LEFTREAR", jint>(); }
	static jint CONN_DST_RIGHTREAR() { return get_static_field<"CONN_DST_RIGHTREAR", jint>(); }
	static jint CONN_DST_LFE_CHANNEL() { return get_static_field<"CONN_DST_LFE_CHANNEL", jint>(); }
	static jint CONN_DST_CHORUS() { return get_static_field<"CONN_DST_CHORUS", jint>(); }
	static jint CONN_DST_REVERB() { return get_static_field<"CONN_DST_REVERB", jint>(); }
	static jint CONN_DST_VIB_FREQUENCY() { return get_static_field<"CONN_DST_VIB_FREQUENCY", jint>(); }
	static jint CONN_DST_VIB_STARTDELAY() { return get_static_field<"CONN_DST_VIB_STARTDELAY", jint>(); }
	static jint CONN_DST_EG1_DELAYTIME() { return get_static_field<"CONN_DST_EG1_DELAYTIME", jint>(); }
	static jint CONN_DST_EG1_HOLDTIME() { return get_static_field<"CONN_DST_EG1_HOLDTIME", jint>(); }
	static jint CONN_DST_EG1_SHUTDOWNTIME() { return get_static_field<"CONN_DST_EG1_SHUTDOWNTIME", jint>(); }
	static jint CONN_DST_EG2_DELAYTIME() { return get_static_field<"CONN_DST_EG2_DELAYTIME", jint>(); }
	static jint CONN_DST_EG2_HOLDTIME() { return get_static_field<"CONN_DST_EG2_HOLDTIME", jint>(); }
	static jint CONN_DST_FILTER_CUTOFF() { return get_static_field<"CONN_DST_FILTER_CUTOFF", jint>(); }
	static jint CONN_DST_FILTER_Q() { return get_static_field<"CONN_DST_FILTER_Q", jint>(); }
	static jint CONN_SRC_NONE() { return get_static_field<"CONN_SRC_NONE", jint>(); }
	static jint CONN_SRC_LFO() { return get_static_field<"CONN_SRC_LFO", jint>(); }
	static jint CONN_SRC_KEYONVELOCITY() { return get_static_field<"CONN_SRC_KEYONVELOCITY", jint>(); }
	static jint CONN_SRC_KEYNUMBER() { return get_static_field<"CONN_SRC_KEYNUMBER", jint>(); }
	static jint CONN_SRC_EG1() { return get_static_field<"CONN_SRC_EG1", jint>(); }
	static jint CONN_SRC_EG2() { return get_static_field<"CONN_SRC_EG2", jint>(); }
	static jint CONN_SRC_PITCHWHEEL() { return get_static_field<"CONN_SRC_PITCHWHEEL", jint>(); }
	static jint CONN_SRC_CC1() { return get_static_field<"CONN_SRC_CC1", jint>(); }
	static jint CONN_SRC_CC7() { return get_static_field<"CONN_SRC_CC7", jint>(); }
	static jint CONN_SRC_CC10() { return get_static_field<"CONN_SRC_CC10", jint>(); }
	static jint CONN_SRC_CC11() { return get_static_field<"CONN_SRC_CC11", jint>(); }
	static jint CONN_SRC_RPN0() { return get_static_field<"CONN_SRC_RPN0", jint>(); }
	static jint CONN_SRC_RPN1() { return get_static_field<"CONN_SRC_RPN1", jint>(); }
	static jint CONN_SRC_RPN2() { return get_static_field<"CONN_SRC_RPN2", jint>(); }
	static jint CONN_SRC_POLYPRESSURE() { return get_static_field<"CONN_SRC_POLYPRESSURE", jint>(); }
	static jint CONN_SRC_CHANNELPRESSURE() { return get_static_field<"CONN_SRC_CHANNELPRESSURE", jint>(); }
	static jint CONN_SRC_VIBRATO() { return get_static_field<"CONN_SRC_VIBRATO", jint>(); }
	static jint CONN_SRC_MONOPRESSURE() { return get_static_field<"CONN_SRC_MONOPRESSURE", jint>(); }
	static jint CONN_SRC_CC91() { return get_static_field<"CONN_SRC_CC91", jint>(); }
	static jint CONN_SRC_CC93() { return get_static_field<"CONN_SRC_CC93", jint>(); }
	static jint CONN_TRN_NONE() { return get_static_field<"CONN_TRN_NONE", jint>(); }
	static jint CONN_TRN_CONCAVE() { return get_static_field<"CONN_TRN_CONCAVE", jint>(); }
	static jint CONN_TRN_CONVEX() { return get_static_field<"CONN_TRN_CONVEX", jint>(); }
	static jint CONN_TRN_SWITCH() { return get_static_field<"CONN_TRN_SWITCH", jint>(); }
	static jint DST_FORMAT_CB() { return get_static_field<"DST_FORMAT_CB", jint>(); }
	static jint DST_FORMAT_CENT() { return get_static_field<"DST_FORMAT_CENT", jint>(); }
	static jint DST_FORMAT_TIMECENT() { return get_static_field<"DST_FORMAT_TIMECENT", jint>(); }
	static jint DST_FORMAT_PERCENT() { return get_static_field<"DST_FORMAT_PERCENT", jint>(); }

	static jni::ref<com::sun::media::sound::DLSModulator> new_object() { return base_::new_object(); }
	jint getControl() { return call_method<"getControl", jint>(); }
	void setControl(jint p1) { return call_method<"setControl", void>(p1); }
	static jint getDestinationFormat(jint p1) { return call_static_method<"getDestinationFormat", jint>(p1); }
	static jni::ref<java::lang::String> getDestinationName(jint p1) { return call_static_method<"getDestinationName", jni::ref<java::lang::String>>(p1); }
	static jni::ref<java::lang::String> getSourceName(jint p1) { return call_static_method<"getSourceName", jni::ref<java::lang::String>>(p1); }
	jint getDestination() { return call_method<"getDestination", jint>(); }
	void setDestination(jint p1) { return call_method<"setDestination", void>(p1); }
	jint getScale() { return call_method<"getScale", jint>(); }
	void setScale(jint p1) { return call_method<"setScale", void>(p1); }
	jint getSource() { return call_method<"getSource", jint>(); }
	void setSource(jint p1) { return call_method<"setSource", void>(p1); }
	jint getVersion() { return call_method<"getVersion", jint>(); }
	void setVersion(jint p1) { return call_method<"setVersion", void>(p1); }
	jint getTransform() { return call_method<"getTransform", jint>(); }
	void setTransform(jint p1) { return call_method<"setTransform", void>(p1); }

protected:

	DLSModulator(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_DLSMODULATOR
