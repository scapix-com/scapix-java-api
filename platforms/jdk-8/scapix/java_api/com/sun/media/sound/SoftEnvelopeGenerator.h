// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/com/sun/media/sound/SoftProcess.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_SOFTENVELOPEGENERATOR_FWD
#define SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_SOFTENVELOPEGENERATOR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::media::sound { class SoftEnvelopeGenerator; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::media::sound::SoftEnvelopeGenerator>
{
	static constexpr fixed_string class_name = "com/sun/media/sound/SoftEnvelopeGenerator";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::com::sun::media::sound::SoftProcess>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_SOFTENVELOPEGENERATOR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_SOFTENVELOPEGENERATOR)
#define SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_SOFTENVELOPEGENERATOR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/media/sound/SoftSynthesizer.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::media::sound::SoftEnvelopeGenerator : public jni::object_base<"com/sun/media/sound/SoftEnvelopeGenerator",
	java::lang::Object,
	com::sun::media::sound::SoftProcess>
{
public:

	static jint EG_OFF() { return get_static_field<"EG_OFF", jint>(); }
	static jint EG_DELAY() { return get_static_field<"EG_DELAY", jint>(); }
	static jint EG_ATTACK() { return get_static_field<"EG_ATTACK", jint>(); }
	static jint EG_HOLD() { return get_static_field<"EG_HOLD", jint>(); }
	static jint EG_DECAY() { return get_static_field<"EG_DECAY", jint>(); }
	static jint EG_SUSTAIN() { return get_static_field<"EG_SUSTAIN", jint>(); }
	static jint EG_RELEASE() { return get_static_field<"EG_RELEASE", jint>(); }
	static jint EG_SHUTDOWN() { return get_static_field<"EG_SHUTDOWN", jint>(); }
	static jint EG_END() { return get_static_field<"EG_END", jint>(); }

	static jni::ref<com::sun::media::sound::SoftEnvelopeGenerator> new_object() { return base_::new_object(); }
	void reset() { return call_method<"reset", void>(); }
	void init(jni::ref<com::sun::media::sound::SoftSynthesizer> p1) { return call_method<"init", void>(p1); }
	jni::ref<jni::array<jdouble>> get(jint p1, jni::ref<java::lang::String> p2) { return call_method<"get", jni::ref<jni::array<jdouble>>>(p1, p2); }
	void processControlLogic() { return call_method<"processControlLogic", void>(); }

protected:

	SoftEnvelopeGenerator(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_SOFTENVELOPEGENERATOR
