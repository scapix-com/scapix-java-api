// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_MODELSOURCE_FWD
#define SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_MODELSOURCE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::media::sound { class ModelSource; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::media::sound::ModelSource>
{
	static constexpr fixed_string class_name = "com/sun/media/sound/ModelSource";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_MODELSOURCE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_MODELSOURCE)
#define SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_MODELSOURCE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/media/sound/ModelIdentifier.h>
#include <scapix/java_api/com/sun/media/sound/ModelTransform.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class com::sun::media::sound::ModelSource : public jni::object_base<"com/sun/media/sound/ModelSource",
	java::lang::Object>
{
public:

	static jni::ref<com::sun::media::sound::ModelIdentifier> SOURCE_NONE() { return get_static_field<"SOURCE_NONE", jni::ref<com::sun::media::sound::ModelIdentifier>>(); }
	static jni::ref<com::sun::media::sound::ModelIdentifier> SOURCE_NOTEON_KEYNUMBER() { return get_static_field<"SOURCE_NOTEON_KEYNUMBER", jni::ref<com::sun::media::sound::ModelIdentifier>>(); }
	static jni::ref<com::sun::media::sound::ModelIdentifier> SOURCE_NOTEON_VELOCITY() { return get_static_field<"SOURCE_NOTEON_VELOCITY", jni::ref<com::sun::media::sound::ModelIdentifier>>(); }
	static jni::ref<com::sun::media::sound::ModelIdentifier> SOURCE_EG1() { return get_static_field<"SOURCE_EG1", jni::ref<com::sun::media::sound::ModelIdentifier>>(); }
	static jni::ref<com::sun::media::sound::ModelIdentifier> SOURCE_EG2() { return get_static_field<"SOURCE_EG2", jni::ref<com::sun::media::sound::ModelIdentifier>>(); }
	static jni::ref<com::sun::media::sound::ModelIdentifier> SOURCE_LFO1() { return get_static_field<"SOURCE_LFO1", jni::ref<com::sun::media::sound::ModelIdentifier>>(); }
	static jni::ref<com::sun::media::sound::ModelIdentifier> SOURCE_LFO2() { return get_static_field<"SOURCE_LFO2", jni::ref<com::sun::media::sound::ModelIdentifier>>(); }
	static jni::ref<com::sun::media::sound::ModelIdentifier> SOURCE_MIDI_PITCH() { return get_static_field<"SOURCE_MIDI_PITCH", jni::ref<com::sun::media::sound::ModelIdentifier>>(); }
	static jni::ref<com::sun::media::sound::ModelIdentifier> SOURCE_MIDI_CHANNEL_PRESSURE() { return get_static_field<"SOURCE_MIDI_CHANNEL_PRESSURE", jni::ref<com::sun::media::sound::ModelIdentifier>>(); }
	static jni::ref<com::sun::media::sound::ModelIdentifier> SOURCE_MIDI_POLY_PRESSURE() { return get_static_field<"SOURCE_MIDI_POLY_PRESSURE", jni::ref<com::sun::media::sound::ModelIdentifier>>(); }
	static jni::ref<com::sun::media::sound::ModelIdentifier> SOURCE_MIDI_CC_0() { return get_static_field<"SOURCE_MIDI_CC_0", jni::ref<com::sun::media::sound::ModelIdentifier>>(); }
	static jni::ref<com::sun::media::sound::ModelIdentifier> SOURCE_MIDI_RPN_0() { return get_static_field<"SOURCE_MIDI_RPN_0", jni::ref<com::sun::media::sound::ModelIdentifier>>(); }

	static jni::ref<com::sun::media::sound::ModelSource> new_object() { return base_::new_object(); }
	static jni::ref<com::sun::media::sound::ModelSource> new_object(jni::ref<com::sun::media::sound::ModelIdentifier> p1) { return base_::new_object(p1); }
	static jni::ref<com::sun::media::sound::ModelSource> new_object(jni::ref<com::sun::media::sound::ModelIdentifier> p1, jboolean p2) { return base_::new_object(p1, p2); }
	static jni::ref<com::sun::media::sound::ModelSource> new_object(jni::ref<com::sun::media::sound::ModelIdentifier> p1, jboolean p2, jboolean p3) { return base_::new_object(p1, p2, p3); }
	static jni::ref<com::sun::media::sound::ModelSource> new_object(jni::ref<com::sun::media::sound::ModelIdentifier> p1, jboolean p2, jboolean p3, jint p4) { return base_::new_object(p1, p2, p3, p4); }
	static jni::ref<com::sun::media::sound::ModelSource> new_object(jni::ref<com::sun::media::sound::ModelIdentifier> p1, jni::ref<com::sun::media::sound::ModelTransform> p2) { return base_::new_object(p1, p2); }
	jni::ref<com::sun::media::sound::ModelIdentifier> getIdentifier() { return call_method<"getIdentifier", jni::ref<com::sun::media::sound::ModelIdentifier>>(); }
	void setIdentifier(jni::ref<com::sun::media::sound::ModelIdentifier> p1) { return call_method<"setIdentifier", void>(p1); }
	jni::ref<com::sun::media::sound::ModelTransform> getTransform() { return call_method<"getTransform", jni::ref<com::sun::media::sound::ModelTransform>>(); }
	void setTransform(jni::ref<com::sun::media::sound::ModelTransform> p1) { return call_method<"setTransform", void>(p1); }

protected:

	ModelSource(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_MEDIA_SOUND_MODELSOURCE
