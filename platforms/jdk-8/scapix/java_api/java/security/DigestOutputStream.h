// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/io/FilterOutputStream.h>

#ifndef SCAPIX_JAVA_API_JAVA_SECURITY_DIGESTOUTPUTSTREAM_FWD
#define SCAPIX_JAVA_API_JAVA_SECURITY_DIGESTOUTPUTSTREAM_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::security { class DigestOutputStream; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::security::DigestOutputStream>
{
	static constexpr fixed_string class_name = "java/security/DigestOutputStream";
	using base_classes = std::tuple<scapix::java_api::java::io::FilterOutputStream>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_SECURITY_DIGESTOUTPUTSTREAM_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_SECURITY_DIGESTOUTPUTSTREAM)
#define SCAPIX_JAVA_API_JAVA_SECURITY_DIGESTOUTPUTSTREAM

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/OutputStream.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/security/MessageDigest.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::security::DigestOutputStream : public jni::object_base<"java/security/DigestOutputStream",
	java::io::FilterOutputStream>
{
public:

	static jni::ref<java::security::DigestOutputStream> new_object(jni::ref<java::io::OutputStream> p1, jni::ref<java::security::MessageDigest> p2) { return base_::new_object(p1, p2); }
	jni::ref<java::security::MessageDigest> getMessageDigest() { return call_method<"getMessageDigest", jni::ref<java::security::MessageDigest>>(); }
	void setMessageDigest(jni::ref<java::security::MessageDigest> p1) { return call_method<"setMessageDigest", void>(p1); }
	void write(jint p1) { return call_method<"write", void>(p1); }
	void write(jni::ref<jni::array<jbyte>> p1, jint p2, jint p3) { return call_method<"write", void>(p1, p2, p3); }
	void on(jboolean p1) { return call_method<"on", void>(p1); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	DigestOutputStream(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_SECURITY_DIGESTOUTPUTSTREAM
