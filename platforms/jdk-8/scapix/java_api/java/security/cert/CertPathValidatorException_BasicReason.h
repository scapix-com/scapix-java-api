// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Enum.h>
#include <scapix/java_api/java/security/cert/CertPathValidatorException_Reason.h>

#ifndef SCAPIX_JAVA_API_JAVA_SECURITY_CERT_CERTPATHVALIDATOREXCEPTION_BASICREASON_FWD
#define SCAPIX_JAVA_API_JAVA_SECURITY_CERT_CERTPATHVALIDATOREXCEPTION_BASICREASON_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::security::cert { class CertPathValidatorException_BasicReason; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::security::cert::CertPathValidatorException_BasicReason>
{
	static constexpr fixed_string class_name = "java/security/cert/CertPathValidatorException$BasicReason";
	using base_classes = std::tuple<scapix::java_api::java::lang::Enum, scapix::java_api::java::security::cert::CertPathValidatorException_Reason>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_SECURITY_CERT_CERTPATHVALIDATOREXCEPTION_BASICREASON_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_SECURITY_CERT_CERTPATHVALIDATOREXCEPTION_BASICREASON)
#define SCAPIX_JAVA_API_JAVA_SECURITY_CERT_CERTPATHVALIDATOREXCEPTION_BASICREASON

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::security::cert::CertPathValidatorException_BasicReason : public jni::object_base<"java/security/cert/CertPathValidatorException$BasicReason",
	java::lang::Enum,
	java::security::cert::CertPathValidatorException_Reason>
{
public:

	static jni::ref<java::security::cert::CertPathValidatorException_BasicReason> UNSPECIFIED() { return get_static_field<"UNSPECIFIED", jni::ref<java::security::cert::CertPathValidatorException_BasicReason>>(); }
	static jni::ref<java::security::cert::CertPathValidatorException_BasicReason> EXPIRED() { return get_static_field<"EXPIRED", jni::ref<java::security::cert::CertPathValidatorException_BasicReason>>(); }
	static jni::ref<java::security::cert::CertPathValidatorException_BasicReason> NOT_YET_VALID() { return get_static_field<"NOT_YET_VALID", jni::ref<java::security::cert::CertPathValidatorException_BasicReason>>(); }
	static jni::ref<java::security::cert::CertPathValidatorException_BasicReason> REVOKED() { return get_static_field<"REVOKED", jni::ref<java::security::cert::CertPathValidatorException_BasicReason>>(); }
	static jni::ref<java::security::cert::CertPathValidatorException_BasicReason> UNDETERMINED_REVOCATION_STATUS() { return get_static_field<"UNDETERMINED_REVOCATION_STATUS", jni::ref<java::security::cert::CertPathValidatorException_BasicReason>>(); }
	static jni::ref<java::security::cert::CertPathValidatorException_BasicReason> INVALID_SIGNATURE() { return get_static_field<"INVALID_SIGNATURE", jni::ref<java::security::cert::CertPathValidatorException_BasicReason>>(); }
	static jni::ref<java::security::cert::CertPathValidatorException_BasicReason> ALGORITHM_CONSTRAINED() { return get_static_field<"ALGORITHM_CONSTRAINED", jni::ref<java::security::cert::CertPathValidatorException_BasicReason>>(); }

	static jni::ref<jni::array<java::security::cert::CertPathValidatorException_BasicReason>> values() { return call_static_method<"values", jni::ref<jni::array<java::security::cert::CertPathValidatorException_BasicReason>>>(); }
	static jni::ref<java::security::cert::CertPathValidatorException_BasicReason> valueOf(jni::ref<java::lang::String> p1) { return call_static_method<"valueOf", jni::ref<java::security::cert::CertPathValidatorException_BasicReason>>(p1); }

protected:

	CertPathValidatorException_BasicReason(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_SECURITY_CERT_CERTPATHVALIDATOREXCEPTION_BASICREASON
