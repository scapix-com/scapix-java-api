// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_SECURITY_CERT_CERTIFICATEFACTORYSPI_FWD
#define SCAPIX_JAVA_API_JAVA_SECURITY_CERT_CERTIFICATEFACTORYSPI_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::security::cert { class CertificateFactorySpi; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::security::cert::CertificateFactorySpi>
{
	static constexpr fixed_string class_name = "java/security/cert/CertificateFactorySpi";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_SECURITY_CERT_CERTIFICATEFACTORYSPI_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_SECURITY_CERT_CERTIFICATEFACTORYSPI)
#define SCAPIX_JAVA_API_JAVA_SECURITY_CERT_CERTIFICATEFACTORYSPI

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/security/cert/CRL.h>
#include <scapix/java_api/java/security/cert/CertPath.h>
#include <scapix/java_api/java/security/cert/Certificate.h>
#include <scapix/java_api/java/util/Collection.h>
#include <scapix/java_api/java/util/Iterator.h>
#include <scapix/java_api/java/util/List.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::security::cert::CertificateFactorySpi : public jni::object_base<"java/security/cert/CertificateFactorySpi",
	java::lang::Object>
{
public:

	static jni::ref<java::security::cert::CertificateFactorySpi> new_object() { return base_::new_object(); }
	jni::ref<java::security::cert::Certificate> engineGenerateCertificate(jni::ref<java::io::InputStream> p1) { return call_method<"engineGenerateCertificate", jni::ref<java::security::cert::Certificate>>(p1); }
	jni::ref<java::security::cert::CertPath> engineGenerateCertPath(jni::ref<java::io::InputStream> p1) { return call_method<"engineGenerateCertPath", jni::ref<java::security::cert::CertPath>>(p1); }
	jni::ref<java::security::cert::CertPath> engineGenerateCertPath(jni::ref<java::io::InputStream> p1, jni::ref<java::lang::String> p2) { return call_method<"engineGenerateCertPath", jni::ref<java::security::cert::CertPath>>(p1, p2); }
	jni::ref<java::security::cert::CertPath> engineGenerateCertPath(jni::ref<java::util::List> p1) { return call_method<"engineGenerateCertPath", jni::ref<java::security::cert::CertPath>>(p1); }
	jni::ref<java::util::Iterator> engineGetCertPathEncodings() { return call_method<"engineGetCertPathEncodings", jni::ref<java::util::Iterator>>(); }
	jni::ref<java::util::Collection> engineGenerateCertificates(jni::ref<java::io::InputStream> p1) { return call_method<"engineGenerateCertificates", jni::ref<java::util::Collection>>(p1); }
	jni::ref<java::security::cert::CRL> engineGenerateCRL(jni::ref<java::io::InputStream> p1) { return call_method<"engineGenerateCRL", jni::ref<java::security::cert::CRL>>(p1); }
	jni::ref<java::util::Collection> engineGenerateCRLs(jni::ref<java::io::InputStream> p1) { return call_method<"engineGenerateCRLs", jni::ref<java::util::Collection>>(p1); }

protected:

	CertificateFactorySpi(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_SECURITY_CERT_CERTIFICATEFACTORYSPI
