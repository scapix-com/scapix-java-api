// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_API_JAVA_SECURITY_KEYPAIR_FWD
#define SCAPIX_JAVA_API_JAVA_SECURITY_KEYPAIR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::security { class KeyPair; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::security::KeyPair>
{
	static constexpr fixed_string class_name = "java/security/KeyPair";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::io::Serializable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_SECURITY_KEYPAIR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_SECURITY_KEYPAIR)
#define SCAPIX_JAVA_API_JAVA_SECURITY_KEYPAIR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/security/PrivateKey.h>
#include <scapix/java_api/java/security/PublicKey.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::security::KeyPair : public jni::object_base<"java/security/KeyPair",
	java::lang::Object,
	java::io::Serializable>
{
public:

	static jni::ref<java::security::KeyPair> new_object(jni::ref<java::security::PublicKey> p1, jni::ref<java::security::PrivateKey> p2) { return base_::new_object(p1, p2); }
	jni::ref<java::security::PublicKey> getPublic() { return call_method<"getPublic", jni::ref<java::security::PublicKey>>(); }
	jni::ref<java::security::PrivateKey> getPrivate() { return call_method<"getPrivate", jni::ref<java::security::PrivateKey>>(); }

protected:

	KeyPair(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_SECURITY_KEYPAIR
