// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_SECURITY_KEYFACTORY_FWD
#define SCAPIX_JAVA_API_JAVA_SECURITY_KEYFACTORY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::security { class KeyFactory; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::security::KeyFactory>
{
	static constexpr fixed_string class_name = "java/security/KeyFactory";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_SECURITY_KEYFACTORY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_SECURITY_KEYFACTORY)
#define SCAPIX_JAVA_API_JAVA_SECURITY_KEYFACTORY

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/security/Key.h>
#include <scapix/java_api/java/security/PrivateKey.h>
#include <scapix/java_api/java/security/Provider.h>
#include <scapix/java_api/java/security/PublicKey.h>
#include <scapix/java_api/java/security/spec/KeySpec.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::security::KeyFactory : public jni::object_base<"java/security/KeyFactory",
	java::lang::Object>
{
public:

	static jni::ref<java::security::KeyFactory> getInstance(jni::ref<java::lang::String> p1) { return call_static_method<"getInstance", jni::ref<java::security::KeyFactory>>(p1); }
	static jni::ref<java::security::KeyFactory> getInstance(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return call_static_method<"getInstance", jni::ref<java::security::KeyFactory>>(p1, p2); }
	static jni::ref<java::security::KeyFactory> getInstance(jni::ref<java::lang::String> p1, jni::ref<java::security::Provider> p2) { return call_static_method<"getInstance", jni::ref<java::security::KeyFactory>>(p1, p2); }
	jni::ref<java::security::Provider> getProvider() { return call_method<"getProvider", jni::ref<java::security::Provider>>(); }
	jni::ref<java::lang::String> getAlgorithm() { return call_method<"getAlgorithm", jni::ref<java::lang::String>>(); }
	jni::ref<java::security::PublicKey> generatePublic(jni::ref<java::security::spec::KeySpec> p1) { return call_method<"generatePublic", jni::ref<java::security::PublicKey>>(p1); }
	jni::ref<java::security::PrivateKey> generatePrivate(jni::ref<java::security::spec::KeySpec> p1) { return call_method<"generatePrivate", jni::ref<java::security::PrivateKey>>(p1); }
	jni::ref<java::security::spec::KeySpec> getKeySpec(jni::ref<java::security::Key> p1, jni::ref<java::lang::Class> p2) { return call_method<"getKeySpec", jni::ref<java::security::spec::KeySpec>>(p1, p2); }
	jni::ref<java::security::Key> translateKey(jni::ref<java::security::Key> p1) { return call_method<"translateKey", jni::ref<java::security::Key>>(p1); }

protected:

	KeyFactory(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_SECURITY_KEYFACTORY
