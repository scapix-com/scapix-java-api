// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/security/KeyPairGeneratorSpi.h>

#ifndef SCAPIX_JAVA_API_JAVA_SECURITY_KEYPAIRGENERATOR_FWD
#define SCAPIX_JAVA_API_JAVA_SECURITY_KEYPAIRGENERATOR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::security { class KeyPairGenerator; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::security::KeyPairGenerator>
{
	static constexpr fixed_string class_name = "java/security/KeyPairGenerator";
	using base_classes = std::tuple<scapix::java_api::java::security::KeyPairGeneratorSpi>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_SECURITY_KEYPAIRGENERATOR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_SECURITY_KEYPAIRGENERATOR)
#define SCAPIX_JAVA_API_JAVA_SECURITY_KEYPAIRGENERATOR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/security/KeyPair.h>
#include <scapix/java_api/java/security/Provider.h>
#include <scapix/java_api/java/security/SecureRandom.h>
#include <scapix/java_api/java/security/spec/AlgorithmParameterSpec.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::security::KeyPairGenerator : public jni::object_base<"java/security/KeyPairGenerator",
	java::security::KeyPairGeneratorSpi>
{
public:

	jni::ref<java::lang::String> getAlgorithm() { return call_method<"getAlgorithm", jni::ref<java::lang::String>>(); }
	static jni::ref<java::security::KeyPairGenerator> getInstance(jni::ref<java::lang::String> p1) { return call_static_method<"getInstance", jni::ref<java::security::KeyPairGenerator>>(p1); }
	static jni::ref<java::security::KeyPairGenerator> getInstance(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return call_static_method<"getInstance", jni::ref<java::security::KeyPairGenerator>>(p1, p2); }
	static jni::ref<java::security::KeyPairGenerator> getInstance(jni::ref<java::lang::String> p1, jni::ref<java::security::Provider> p2) { return call_static_method<"getInstance", jni::ref<java::security::KeyPairGenerator>>(p1, p2); }
	jni::ref<java::security::Provider> getProvider() { return call_method<"getProvider", jni::ref<java::security::Provider>>(); }
	void initialize(jint p1) { return call_method<"initialize", void>(p1); }
	void initialize(jint p1, jni::ref<java::security::SecureRandom> p2) { return call_method<"initialize", void>(p1, p2); }
	void initialize(jni::ref<java::security::spec::AlgorithmParameterSpec> p1) { return call_method<"initialize", void>(p1); }
	void initialize(jni::ref<java::security::spec::AlgorithmParameterSpec> p1, jni::ref<java::security::SecureRandom> p2) { return call_method<"initialize", void>(p1, p2); }
	jni::ref<java::security::KeyPair> genKeyPair() { return call_method<"genKeyPair", jni::ref<java::security::KeyPair>>(); }
	jni::ref<java::security::KeyPair> generateKeyPair() { return call_method<"generateKeyPair", jni::ref<java::security::KeyPair>>(); }

protected:

	KeyPairGenerator(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_SECURITY_KEYPAIRGENERATOR
