// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Thread.h>

#ifndef SCAPIX_JAVA_API_JAVA_AWT_EVENTDISPATCHTHREAD_FWD
#define SCAPIX_JAVA_API_JAVA_AWT_EVENTDISPATCHTHREAD_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::awt { class EventDispatchThread; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::awt::EventDispatchThread>
{
	static constexpr fixed_string class_name = "java/awt/EventDispatchThread";
	using base_classes = std::tuple<scapix::java_api::java::lang::Thread>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_EVENTDISPATCHTHREAD_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_AWT_EVENTDISPATCHTHREAD)
#define SCAPIX_JAVA_API_JAVA_AWT_EVENTDISPATCHTHREAD

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/EventQueue.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::awt::EventDispatchThread : public jni::object_base<"java/awt/EventDispatchThread",
	java::lang::Thread>
{
public:

	void stopDispatching() { return call_method<"stopDispatching", void>(); }
	void run() { return call_method<"run", void>(); }
	jni::ref<java::awt::EventQueue> getEventQueue() { return call_method<"getEventQueue", jni::ref<java::awt::EventQueue>>(); }
	void setEventQueue(jni::ref<java::awt::EventQueue> p1) { return call_method<"setEventQueue", void>(p1); }

protected:

	EventDispatchThread(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_EVENTDISPATCHTHREAD
