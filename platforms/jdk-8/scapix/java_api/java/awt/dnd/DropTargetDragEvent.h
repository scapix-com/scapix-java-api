// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/awt/dnd/DropTargetEvent.h>

#ifndef SCAPIX_JAVA_API_JAVA_AWT_DND_DROPTARGETDRAGEVENT_FWD
#define SCAPIX_JAVA_API_JAVA_AWT_DND_DROPTARGETDRAGEVENT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::awt::dnd { class DropTargetDragEvent; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::awt::dnd::DropTargetDragEvent>
{
	static constexpr fixed_string class_name = "java/awt/dnd/DropTargetDragEvent";
	using base_classes = std::tuple<scapix::java_api::java::awt::dnd::DropTargetEvent>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_DND_DROPTARGETDRAGEVENT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_AWT_DND_DROPTARGETDRAGEVENT)
#define SCAPIX_JAVA_API_JAVA_AWT_DND_DROPTARGETDRAGEVENT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Point.h>
#include <scapix/java_api/java/awt/datatransfer/DataFlavor.h>
#include <scapix/java_api/java/awt/datatransfer/Transferable.h>
#include <scapix/java_api/java/awt/dnd/DropTargetContext.h>
#include <scapix/java_api/java/util/List.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::awt::dnd::DropTargetDragEvent : public jni::object_base<"java/awt/dnd/DropTargetDragEvent",
	java::awt::dnd::DropTargetEvent>
{
public:

	static jni::ref<java::awt::dnd::DropTargetDragEvent> new_object(jni::ref<java::awt::dnd::DropTargetContext> p1, jni::ref<java::awt::Point> p2, jint p3, jint p4) { return base_::new_object(p1, p2, p3, p4); }
	jni::ref<java::awt::Point> getLocation() { return call_method<"getLocation", jni::ref<java::awt::Point>>(); }
	jni::ref<jni::array<java::awt::datatransfer::DataFlavor>> getCurrentDataFlavors() { return call_method<"getCurrentDataFlavors", jni::ref<jni::array<java::awt::datatransfer::DataFlavor>>>(); }
	jni::ref<java::util::List> getCurrentDataFlavorsAsList() { return call_method<"getCurrentDataFlavorsAsList", jni::ref<java::util::List>>(); }
	jboolean isDataFlavorSupported(jni::ref<java::awt::datatransfer::DataFlavor> p1) { return call_method<"isDataFlavorSupported", jboolean>(p1); }
	jint getSourceActions() { return call_method<"getSourceActions", jint>(); }
	jint getDropAction() { return call_method<"getDropAction", jint>(); }
	jni::ref<java::awt::datatransfer::Transferable> getTransferable() { return call_method<"getTransferable", jni::ref<java::awt::datatransfer::Transferable>>(); }
	void acceptDrag(jint p1) { return call_method<"acceptDrag", void>(p1); }
	void rejectDrag() { return call_method<"rejectDrag", void>(); }

protected:

	DropTargetDragEvent(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_DND_DROPTARGETDRAGEVENT
