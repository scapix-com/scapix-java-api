// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_AWT_DND_PEER_DROPTARGETCONTEXTPEER_FWD
#define SCAPIX_JAVA_API_JAVA_AWT_DND_PEER_DROPTARGETCONTEXTPEER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::awt::dnd::peer { class DropTargetContextPeer; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::awt::dnd::peer::DropTargetContextPeer>
{
	static constexpr fixed_string class_name = "java/awt/dnd/peer/DropTargetContextPeer";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_DND_PEER_DROPTARGETCONTEXTPEER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_AWT_DND_PEER_DROPTARGETCONTEXTPEER)
#define SCAPIX_JAVA_API_JAVA_AWT_DND_PEER_DROPTARGETCONTEXTPEER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/datatransfer/DataFlavor.h>
#include <scapix/java_api/java/awt/datatransfer/Transferable.h>
#include <scapix/java_api/java/awt/dnd/DropTarget.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::awt::dnd::peer::DropTargetContextPeer : public jni::object_base<"java/awt/dnd/peer/DropTargetContextPeer",
	java::lang::Object>
{
public:

	void setTargetActions(jint p1) { return call_method<"setTargetActions", void>(p1); }
	jint getTargetActions() { return call_method<"getTargetActions", jint>(); }
	jni::ref<java::awt::dnd::DropTarget> getDropTarget() { return call_method<"getDropTarget", jni::ref<java::awt::dnd::DropTarget>>(); }
	jni::ref<jni::array<java::awt::datatransfer::DataFlavor>> getTransferDataFlavors() { return call_method<"getTransferDataFlavors", jni::ref<jni::array<java::awt::datatransfer::DataFlavor>>>(); }
	jni::ref<java::awt::datatransfer::Transferable> getTransferable() { return call_method<"getTransferable", jni::ref<java::awt::datatransfer::Transferable>>(); }
	jboolean isTransferableJVMLocal() { return call_method<"isTransferableJVMLocal", jboolean>(); }
	void acceptDrag(jint p1) { return call_method<"acceptDrag", void>(p1); }
	void rejectDrag() { return call_method<"rejectDrag", void>(); }
	void acceptDrop(jint p1) { return call_method<"acceptDrop", void>(p1); }
	void rejectDrop() { return call_method<"rejectDrop", void>(); }
	void dropComplete(jboolean p1) { return call_method<"dropComplete", void>(p1); }

protected:

	DropTargetContextPeer(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_DND_PEER_DROPTARGETCONTEXTPEER
