// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/util/EventObject.h>

#ifndef SCAPIX_JAVA_API_JAVA_AWT_DND_DRAGGESTUREEVENT_FWD
#define SCAPIX_JAVA_API_JAVA_AWT_DND_DRAGGESTUREEVENT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::awt::dnd { class DragGestureEvent; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::awt::dnd::DragGestureEvent>
{
	static constexpr fixed_string class_name = "java/awt/dnd/DragGestureEvent";
	using base_classes = std::tuple<scapix::java_api::java::util::EventObject>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_DND_DRAGGESTUREEVENT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_AWT_DND_DRAGGESTUREEVENT)
#define SCAPIX_JAVA_API_JAVA_AWT_DND_DRAGGESTUREEVENT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Component.h>
#include <scapix/java_api/java/awt/Cursor.h>
#include <scapix/java_api/java/awt/Image.h>
#include <scapix/java_api/java/awt/Point.h>
#include <scapix/java_api/java/awt/datatransfer/Transferable.h>
#include <scapix/java_api/java/awt/dnd/DragGestureRecognizer.h>
#include <scapix/java_api/java/awt/dnd/DragSource.h>
#include <scapix/java_api/java/awt/dnd/DragSourceListener.h>
#include <scapix/java_api/java/awt/event/InputEvent.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/util/Iterator.h>
#include <scapix/java_api/java/util/List.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::awt::dnd::DragGestureEvent : public jni::object_base<"java/awt/dnd/DragGestureEvent",
	java::util::EventObject>
{
public:

	static jni::ref<java::awt::dnd::DragGestureEvent> new_object(jni::ref<java::awt::dnd::DragGestureRecognizer> p1, jint p2, jni::ref<java::awt::Point> p3, jni::ref<java::util::List> p4) { return base_::new_object(p1, p2, p3, p4); }
	jni::ref<java::awt::dnd::DragGestureRecognizer> getSourceAsDragGestureRecognizer() { return call_method<"getSourceAsDragGestureRecognizer", jni::ref<java::awt::dnd::DragGestureRecognizer>>(); }
	jni::ref<java::awt::Component> getComponent() { return call_method<"getComponent", jni::ref<java::awt::Component>>(); }
	jni::ref<java::awt::dnd::DragSource> getDragSource() { return call_method<"getDragSource", jni::ref<java::awt::dnd::DragSource>>(); }
	jni::ref<java::awt::Point> getDragOrigin() { return call_method<"getDragOrigin", jni::ref<java::awt::Point>>(); }
	jni::ref<java::util::Iterator> iterator() { return call_method<"iterator", jni::ref<java::util::Iterator>>(); }
	jni::ref<jni::array<java::lang::Object>> toArray() { return call_method<"toArray", jni::ref<jni::array<java::lang::Object>>>(); }
	jni::ref<jni::array<java::lang::Object>> toArray(jni::ref<jni::array<java::lang::Object>> p1) { return call_method<"toArray", jni::ref<jni::array<java::lang::Object>>>(p1); }
	jint getDragAction() { return call_method<"getDragAction", jint>(); }
	jni::ref<java::awt::event::InputEvent> getTriggerEvent() { return call_method<"getTriggerEvent", jni::ref<java::awt::event::InputEvent>>(); }
	void startDrag(jni::ref<java::awt::Cursor> p1, jni::ref<java::awt::datatransfer::Transferable> p2) { return call_method<"startDrag", void>(p1, p2); }
	void startDrag(jni::ref<java::awt::Cursor> p1, jni::ref<java::awt::datatransfer::Transferable> p2, jni::ref<java::awt::dnd::DragSourceListener> p3) { return call_method<"startDrag", void>(p1, p2, p3); }
	void startDrag(jni::ref<java::awt::Cursor> p1, jni::ref<java::awt::Image> p2, jni::ref<java::awt::Point> p3, jni::ref<java::awt::datatransfer::Transferable> p4, jni::ref<java::awt::dnd::DragSourceListener> p5) { return call_method<"startDrag", void>(p1, p2, p3, p4, p5); }

protected:

	DragGestureEvent(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_DND_DRAGGESTUREEVENT
