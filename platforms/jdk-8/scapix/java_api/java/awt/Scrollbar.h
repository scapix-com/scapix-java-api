// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/awt/Component.h>
#include <scapix/java_api/java/awt/Adjustable.h>
#include <scapix/java_api/javax/accessibility/Accessible.h>

#ifndef SCAPIX_JAVA_API_JAVA_AWT_SCROLLBAR_FWD
#define SCAPIX_JAVA_API_JAVA_AWT_SCROLLBAR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::awt { class Scrollbar; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::awt::Scrollbar>
{
	static constexpr fixed_string class_name = "java/awt/Scrollbar";
	using base_classes = std::tuple<scapix::java_api::java::awt::Component, scapix::java_api::java::awt::Adjustable, scapix::java_api::javax::accessibility::Accessible>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_SCROLLBAR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_AWT_SCROLLBAR)
#define SCAPIX_JAVA_API_JAVA_AWT_SCROLLBAR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/event/AdjustmentListener.h>
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/util/EventListener.h>
#include <scapix/java_api/javax/accessibility/AccessibleContext.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::awt::Scrollbar : public jni::object_base<"java/awt/Scrollbar",
	java::awt::Component,
	java::awt::Adjustable,
	javax::accessibility::Accessible>
{
public:

	static jint HORIZONTAL() { return get_static_field<"HORIZONTAL", jint>(); }
	static jint VERTICAL() { return get_static_field<"VERTICAL", jint>(); }

	static jni::ref<java::awt::Scrollbar> new_object() { return base_::new_object(); }
	static jni::ref<java::awt::Scrollbar> new_object(jint p1) { return base_::new_object(p1); }
	static jni::ref<java::awt::Scrollbar> new_object(jint p1, jint p2, jint p3, jint p4, jint p5) { return base_::new_object(p1, p2, p3, p4, p5); }
	void addNotify() { return call_method<"addNotify", void>(); }
	jint getOrientation() { return call_method<"getOrientation", jint>(); }
	void setOrientation(jint p1) { return call_method<"setOrientation", void>(p1); }
	jint getValue() { return call_method<"getValue", jint>(); }
	void setValue(jint p1) { return call_method<"setValue", void>(p1); }
	jint getMinimum() { return call_method<"getMinimum", jint>(); }
	void setMinimum(jint p1) { return call_method<"setMinimum", void>(p1); }
	jint getMaximum() { return call_method<"getMaximum", jint>(); }
	void setMaximum(jint p1) { return call_method<"setMaximum", void>(p1); }
	jint getVisibleAmount() { return call_method<"getVisibleAmount", jint>(); }
	jint getVisible() { return call_method<"getVisible", jint>(); }
	void setVisibleAmount(jint p1) { return call_method<"setVisibleAmount", void>(p1); }
	void setUnitIncrement(jint p1) { return call_method<"setUnitIncrement", void>(p1); }
	void setLineIncrement(jint p1) { return call_method<"setLineIncrement", void>(p1); }
	jint getUnitIncrement() { return call_method<"getUnitIncrement", jint>(); }
	jint getLineIncrement() { return call_method<"getLineIncrement", jint>(); }
	void setBlockIncrement(jint p1) { return call_method<"setBlockIncrement", void>(p1); }
	void setPageIncrement(jint p1) { return call_method<"setPageIncrement", void>(p1); }
	jint getBlockIncrement() { return call_method<"getBlockIncrement", jint>(); }
	jint getPageIncrement() { return call_method<"getPageIncrement", jint>(); }
	void setValues(jint p1, jint p2, jint p3, jint p4) { return call_method<"setValues", void>(p1, p2, p3, p4); }
	jboolean getValueIsAdjusting() { return call_method<"getValueIsAdjusting", jboolean>(); }
	void setValueIsAdjusting(jboolean p1) { return call_method<"setValueIsAdjusting", void>(p1); }
	void addAdjustmentListener(jni::ref<java::awt::event::AdjustmentListener> p1) { return call_method<"addAdjustmentListener", void>(p1); }
	void removeAdjustmentListener(jni::ref<java::awt::event::AdjustmentListener> p1) { return call_method<"removeAdjustmentListener", void>(p1); }
	jni::ref<jni::array<java::awt::event::AdjustmentListener>> getAdjustmentListeners() { return call_method<"getAdjustmentListeners", jni::ref<jni::array<java::awt::event::AdjustmentListener>>>(); }
	jni::ref<jni::array<java::util::EventListener>> getListeners(jni::ref<java::lang::Class> p1) { return call_method<"getListeners", jni::ref<jni::array<java::util::EventListener>>>(p1); }
	jni::ref<javax::accessibility::AccessibleContext> getAccessibleContext() { return call_method<"getAccessibleContext", jni::ref<javax::accessibility::AccessibleContext>>(); }

protected:

	Scrollbar(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_SCROLLBAR
