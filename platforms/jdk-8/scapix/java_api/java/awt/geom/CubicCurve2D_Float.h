// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/awt/geom/CubicCurve2D.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_API_JAVA_AWT_GEOM_CUBICCURVE2D_FLOAT_FWD
#define SCAPIX_JAVA_API_JAVA_AWT_GEOM_CUBICCURVE2D_FLOAT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::awt::geom { class CubicCurve2D_Float; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::awt::geom::CubicCurve2D_Float>
{
	static constexpr fixed_string class_name = "java/awt/geom/CubicCurve2D$Float";
	using base_classes = std::tuple<scapix::java_api::java::awt::geom::CubicCurve2D, scapix::java_api::java::io::Serializable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_GEOM_CUBICCURVE2D_FLOAT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_AWT_GEOM_CUBICCURVE2D_FLOAT)
#define SCAPIX_JAVA_API_JAVA_AWT_GEOM_CUBICCURVE2D_FLOAT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/geom/Point2D.h>
#include <scapix/java_api/java/awt/geom/Rectangle2D.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::awt::geom::CubicCurve2D_Float : public jni::object_base<"java/awt/geom/CubicCurve2D$Float",
	java::awt::geom::CubicCurve2D,
	java::io::Serializable>
{
public:

	jfloat x1() { return get_field<"x1", jfloat>(); }
	void x1(jfloat v) { set_field<"x1", jfloat>(v); }
	jfloat y1() { return get_field<"y1", jfloat>(); }
	void y1(jfloat v) { set_field<"y1", jfloat>(v); }
	jfloat ctrlx1() { return get_field<"ctrlx1", jfloat>(); }
	void ctrlx1(jfloat v) { set_field<"ctrlx1", jfloat>(v); }
	jfloat ctrly1() { return get_field<"ctrly1", jfloat>(); }
	void ctrly1(jfloat v) { set_field<"ctrly1", jfloat>(v); }
	jfloat ctrlx2() { return get_field<"ctrlx2", jfloat>(); }
	void ctrlx2(jfloat v) { set_field<"ctrlx2", jfloat>(v); }
	jfloat ctrly2() { return get_field<"ctrly2", jfloat>(); }
	void ctrly2(jfloat v) { set_field<"ctrly2", jfloat>(v); }
	jfloat x2() { return get_field<"x2", jfloat>(); }
	void x2(jfloat v) { set_field<"x2", jfloat>(v); }
	jfloat y2() { return get_field<"y2", jfloat>(); }
	void y2(jfloat v) { set_field<"y2", jfloat>(v); }

	static jni::ref<java::awt::geom::CubicCurve2D_Float> new_object() { return base_::new_object(); }
	static jni::ref<java::awt::geom::CubicCurve2D_Float> new_object(jfloat p1, jfloat p2, jfloat p3, jfloat p4, jfloat p5, jfloat p6, jfloat p7, jfloat p8) { return base_::new_object(p1, p2, p3, p4, p5, p6, p7, p8); }
	jdouble getX1() { return call_method<"getX1", jdouble>(); }
	jdouble getY1() { return call_method<"getY1", jdouble>(); }
	jni::ref<java::awt::geom::Point2D> getP1() { return call_method<"getP1", jni::ref<java::awt::geom::Point2D>>(); }
	jdouble getCtrlX1() { return call_method<"getCtrlX1", jdouble>(); }
	jdouble getCtrlY1() { return call_method<"getCtrlY1", jdouble>(); }
	jni::ref<java::awt::geom::Point2D> getCtrlP1() { return call_method<"getCtrlP1", jni::ref<java::awt::geom::Point2D>>(); }
	jdouble getCtrlX2() { return call_method<"getCtrlX2", jdouble>(); }
	jdouble getCtrlY2() { return call_method<"getCtrlY2", jdouble>(); }
	jni::ref<java::awt::geom::Point2D> getCtrlP2() { return call_method<"getCtrlP2", jni::ref<java::awt::geom::Point2D>>(); }
	jdouble getX2() { return call_method<"getX2", jdouble>(); }
	jdouble getY2() { return call_method<"getY2", jdouble>(); }
	jni::ref<java::awt::geom::Point2D> getP2() { return call_method<"getP2", jni::ref<java::awt::geom::Point2D>>(); }
	void setCurve(jdouble p1, jdouble p2, jdouble p3, jdouble p4, jdouble p5, jdouble p6, jdouble p7, jdouble p8) { return call_method<"setCurve", void>(p1, p2, p3, p4, p5, p6, p7, p8); }
	void setCurve(jfloat p1, jfloat p2, jfloat p3, jfloat p4, jfloat p5, jfloat p6, jfloat p7, jfloat p8) { return call_method<"setCurve", void>(p1, p2, p3, p4, p5, p6, p7, p8); }
	jni::ref<java::awt::geom::Rectangle2D> getBounds2D() { return call_method<"getBounds2D", jni::ref<java::awt::geom::Rectangle2D>>(); }

protected:

	CubicCurve2D_Float(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_GEOM_CUBICCURVE2D_FLOAT
