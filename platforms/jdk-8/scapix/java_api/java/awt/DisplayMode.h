// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_AWT_DISPLAYMODE_FWD
#define SCAPIX_JAVA_API_JAVA_AWT_DISPLAYMODE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::awt { class DisplayMode; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::awt::DisplayMode>
{
	static constexpr fixed_string class_name = "java/awt/DisplayMode";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_DISPLAYMODE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_AWT_DISPLAYMODE)
#define SCAPIX_JAVA_API_JAVA_AWT_DISPLAYMODE

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::awt::DisplayMode : public jni::object_base<"java/awt/DisplayMode",
	java::lang::Object>
{
public:

	static jint BIT_DEPTH_MULTI() { return get_static_field<"BIT_DEPTH_MULTI", jint>(); }
	static jint REFRESH_RATE_UNKNOWN() { return get_static_field<"REFRESH_RATE_UNKNOWN", jint>(); }

	static jni::ref<java::awt::DisplayMode> new_object(jint p1, jint p2, jint p3, jint p4) { return base_::new_object(p1, p2, p3, p4); }
	jint getHeight() { return call_method<"getHeight", jint>(); }
	jint getWidth() { return call_method<"getWidth", jint>(); }
	jint getBitDepth() { return call_method<"getBitDepth", jint>(); }
	jint getRefreshRate() { return call_method<"getRefreshRate", jint>(); }
	jboolean equals(jni::ref<java::awt::DisplayMode> p1) { return call_method<"equals", jboolean>(p1); }
	jboolean equals(jni::ref<java::lang::Object> p1) { return call_method<"equals", jboolean>(p1); }
	jint hashCode() { return call_method<"hashCode", jint>(); }

protected:

	DisplayMode(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_DISPLAYMODE
