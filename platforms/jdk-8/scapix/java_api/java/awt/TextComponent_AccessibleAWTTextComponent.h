// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/awt/Component_AccessibleAWTComponent.h>
#include <scapix/java_api/javax/accessibility/AccessibleText.h>
#include <scapix/java_api/java/awt/event/TextListener.h>

#ifndef SCAPIX_JAVA_API_JAVA_AWT_TEXTCOMPONENT_ACCESSIBLEAWTTEXTCOMPONENT_FWD
#define SCAPIX_JAVA_API_JAVA_AWT_TEXTCOMPONENT_ACCESSIBLEAWTTEXTCOMPONENT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::awt { class TextComponent_AccessibleAWTTextComponent; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::awt::TextComponent_AccessibleAWTTextComponent>
{
	static constexpr fixed_string class_name = "java/awt/TextComponent$AccessibleAWTTextComponent";
	using base_classes = std::tuple<scapix::java_api::java::awt::Component_AccessibleAWTComponent, scapix::java_api::javax::accessibility::AccessibleText, scapix::java_api::java::awt::event::TextListener>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_TEXTCOMPONENT_ACCESSIBLEAWTTEXTCOMPONENT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_AWT_TEXTCOMPONENT_ACCESSIBLEAWTTEXTCOMPONENT)
#define SCAPIX_JAVA_API_JAVA_AWT_TEXTCOMPONENT_ACCESSIBLEAWTTEXTCOMPONENT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Point.h>
#include <scapix/java_api/java/awt/Rectangle.h>
#include <scapix/java_api/java/awt/TextComponent.h>
#include <scapix/java_api/java/awt/event/TextEvent.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/accessibility/AccessibleRole.h>
#include <scapix/java_api/javax/accessibility/AccessibleStateSet.h>
#include <scapix/java_api/javax/swing/text/AttributeSet.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::awt::TextComponent_AccessibleAWTTextComponent : public jni::object_base<"java/awt/TextComponent$AccessibleAWTTextComponent",
	java::awt::Component_AccessibleAWTComponent,
	javax::accessibility::AccessibleText,
	java::awt::event::TextListener>
{
public:

	static jni::ref<java::awt::TextComponent_AccessibleAWTTextComponent> new_object(jni::ref<java::awt::TextComponent> p1) { return base_::new_object(p1); }
	void textValueChanged(jni::ref<java::awt::event::TextEvent> p1) { return call_method<"textValueChanged", void>(p1); }
	jni::ref<javax::accessibility::AccessibleStateSet> getAccessibleStateSet() { return call_method<"getAccessibleStateSet", jni::ref<javax::accessibility::AccessibleStateSet>>(); }
	jni::ref<javax::accessibility::AccessibleRole> getAccessibleRole() { return call_method<"getAccessibleRole", jni::ref<javax::accessibility::AccessibleRole>>(); }
	jni::ref<javax::accessibility::AccessibleText> getAccessibleText() { return call_method<"getAccessibleText", jni::ref<javax::accessibility::AccessibleText>>(); }
	jint getIndexAtPoint(jni::ref<java::awt::Point> p1) { return call_method<"getIndexAtPoint", jint>(p1); }
	jni::ref<java::awt::Rectangle> getCharacterBounds(jint p1) { return call_method<"getCharacterBounds", jni::ref<java::awt::Rectangle>>(p1); }
	jint getCharCount() { return call_method<"getCharCount", jint>(); }
	jint getCaretPosition() { return call_method<"getCaretPosition", jint>(); }
	jni::ref<javax::swing::text::AttributeSet> getCharacterAttribute(jint p1) { return call_method<"getCharacterAttribute", jni::ref<javax::swing::text::AttributeSet>>(p1); }
	jint getSelectionStart() { return call_method<"getSelectionStart", jint>(); }
	jint getSelectionEnd() { return call_method<"getSelectionEnd", jint>(); }
	jni::ref<java::lang::String> getSelectedText() { return call_method<"getSelectedText", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getAtIndex(jint p1, jint p2) { return call_method<"getAtIndex", jni::ref<java::lang::String>>(p1, p2); }
	jni::ref<java::lang::String> getAfterIndex(jint p1, jint p2) { return call_method<"getAfterIndex", jni::ref<java::lang::String>>(p1, p2); }
	jni::ref<java::lang::String> getBeforeIndex(jint p1, jint p2) { return call_method<"getBeforeIndex", jni::ref<java::lang::String>>(p1, p2); }

protected:

	TextComponent_AccessibleAWTTextComponent(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_TEXTCOMPONENT_ACCESSIBLEAWTTEXTCOMPONENT
