// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/Cloneable.h>

#ifndef SCAPIX_JAVA_API_JAVA_AWT_IMAGECAPABILITIES_FWD
#define SCAPIX_JAVA_API_JAVA_AWT_IMAGECAPABILITIES_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::awt { class ImageCapabilities; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::awt::ImageCapabilities>
{
	static constexpr fixed_string class_name = "java/awt/ImageCapabilities";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::lang::Cloneable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_IMAGECAPABILITIES_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_AWT_IMAGECAPABILITIES)
#define SCAPIX_JAVA_API_JAVA_AWT_IMAGECAPABILITIES

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::awt::ImageCapabilities : public jni::object_base<"java/awt/ImageCapabilities",
	java::lang::Object,
	java::lang::Cloneable>
{
public:

	static jni::ref<java::awt::ImageCapabilities> new_object(jboolean p1) { return base_::new_object(p1); }
	jboolean isAccelerated() { return call_method<"isAccelerated", jboolean>(); }
	jboolean isTrueVolatile() { return call_method<"isTrueVolatile", jboolean>(); }
	jni::ref<java::lang::Object> clone() { return call_method<"clone", jni::ref<java::lang::Object>>(); }

protected:

	ImageCapabilities(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_IMAGECAPABILITIES
