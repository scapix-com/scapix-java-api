// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_AWT_SYSTEMTRAY_FWD
#define SCAPIX_JAVA_API_JAVA_AWT_SYSTEMTRAY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::awt { class SystemTray; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::awt::SystemTray>
{
	static constexpr fixed_string class_name = "java/awt/SystemTray";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_SYSTEMTRAY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_AWT_SYSTEMTRAY)
#define SCAPIX_JAVA_API_JAVA_AWT_SYSTEMTRAY

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Dimension.h>
#include <scapix/java_api/java/awt/TrayIcon.h>
#include <scapix/java_api/java/beans/PropertyChangeListener.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::awt::SystemTray : public jni::object_base<"java/awt/SystemTray",
	java::lang::Object>
{
public:

	static jni::ref<java::awt::SystemTray> getSystemTray() { return call_static_method<"getSystemTray", jni::ref<java::awt::SystemTray>>(); }
	static jboolean isSupported() { return call_static_method<"isSupported", jboolean>(); }
	void add(jni::ref<java::awt::TrayIcon> p1) { return call_method<"add", void>(p1); }
	void remove(jni::ref<java::awt::TrayIcon> p1) { return call_method<"remove", void>(p1); }
	jni::ref<jni::array<java::awt::TrayIcon>> getTrayIcons() { return call_method<"getTrayIcons", jni::ref<jni::array<java::awt::TrayIcon>>>(); }
	jni::ref<java::awt::Dimension> getTrayIconSize() { return call_method<"getTrayIconSize", jni::ref<java::awt::Dimension>>(); }
	void addPropertyChangeListener(jni::ref<java::lang::String> p1, jni::ref<java::beans::PropertyChangeListener> p2) { return call_method<"addPropertyChangeListener", void>(p1, p2); }
	void removePropertyChangeListener(jni::ref<java::lang::String> p1, jni::ref<java::beans::PropertyChangeListener> p2) { return call_method<"removePropertyChangeListener", void>(p1, p2); }
	jni::ref<jni::array<java::beans::PropertyChangeListener>> getPropertyChangeListeners(jni::ref<java::lang::String> p1) { return call_method<"getPropertyChangeListeners", jni::ref<jni::array<java::beans::PropertyChangeListener>>>(p1); }

protected:

	SystemTray(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_SYSTEMTRAY
