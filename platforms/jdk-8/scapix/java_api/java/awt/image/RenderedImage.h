// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_AWT_IMAGE_RENDEREDIMAGE_FWD
#define SCAPIX_JAVA_API_JAVA_AWT_IMAGE_RENDEREDIMAGE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::awt::image { class RenderedImage; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::awt::image::RenderedImage>
{
	static constexpr fixed_string class_name = "java/awt/image/RenderedImage";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_IMAGE_RENDEREDIMAGE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_AWT_IMAGE_RENDEREDIMAGE)
#define SCAPIX_JAVA_API_JAVA_AWT_IMAGE_RENDEREDIMAGE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Rectangle.h>
#include <scapix/java_api/java/awt/image/ColorModel.h>
#include <scapix/java_api/java/awt/image/Raster.h>
#include <scapix/java_api/java/awt/image/SampleModel.h>
#include <scapix/java_api/java/awt/image/WritableRaster.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Vector.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::awt::image::RenderedImage : public jni::object_base<"java/awt/image/RenderedImage",
	java::lang::Object>
{
public:

	jni::ref<java::util::Vector> getSources() { return call_method<"getSources", jni::ref<java::util::Vector>>(); }
	jni::ref<java::lang::Object> getProperty(jni::ref<java::lang::String> p1) { return call_method<"getProperty", jni::ref<java::lang::Object>>(p1); }
	jni::ref<jni::array<java::lang::String>> getPropertyNames() { return call_method<"getPropertyNames", jni::ref<jni::array<java::lang::String>>>(); }
	jni::ref<java::awt::image::ColorModel> getColorModel() { return call_method<"getColorModel", jni::ref<java::awt::image::ColorModel>>(); }
	jni::ref<java::awt::image::SampleModel> getSampleModel() { return call_method<"getSampleModel", jni::ref<java::awt::image::SampleModel>>(); }
	jint getWidth() { return call_method<"getWidth", jint>(); }
	jint getHeight() { return call_method<"getHeight", jint>(); }
	jint getMinX() { return call_method<"getMinX", jint>(); }
	jint getMinY() { return call_method<"getMinY", jint>(); }
	jint getNumXTiles() { return call_method<"getNumXTiles", jint>(); }
	jint getNumYTiles() { return call_method<"getNumYTiles", jint>(); }
	jint getMinTileX() { return call_method<"getMinTileX", jint>(); }
	jint getMinTileY() { return call_method<"getMinTileY", jint>(); }
	jint getTileWidth() { return call_method<"getTileWidth", jint>(); }
	jint getTileHeight() { return call_method<"getTileHeight", jint>(); }
	jint getTileGridXOffset() { return call_method<"getTileGridXOffset", jint>(); }
	jint getTileGridYOffset() { return call_method<"getTileGridYOffset", jint>(); }
	jni::ref<java::awt::image::Raster> getTile(jint p1, jint p2) { return call_method<"getTile", jni::ref<java::awt::image::Raster>>(p1, p2); }
	jni::ref<java::awt::image::Raster> getData() { return call_method<"getData", jni::ref<java::awt::image::Raster>>(); }
	jni::ref<java::awt::image::Raster> getData(jni::ref<java::awt::Rectangle> p1) { return call_method<"getData", jni::ref<java::awt::image::Raster>>(p1); }
	jni::ref<java::awt::image::WritableRaster> copyData(jni::ref<java::awt::image::WritableRaster> p1) { return call_method<"copyData", jni::ref<java::awt::image::WritableRaster>>(p1); }

protected:

	RenderedImage(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_IMAGE_RENDEREDIMAGE
