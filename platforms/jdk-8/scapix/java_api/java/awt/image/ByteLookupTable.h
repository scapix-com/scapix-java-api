// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/awt/image/LookupTable.h>

#ifndef SCAPIX_JAVA_API_JAVA_AWT_IMAGE_BYTELOOKUPTABLE_FWD
#define SCAPIX_JAVA_API_JAVA_AWT_IMAGE_BYTELOOKUPTABLE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::awt::image { class ByteLookupTable; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::awt::image::ByteLookupTable>
{
	static constexpr fixed_string class_name = "java/awt/image/ByteLookupTable";
	using base_classes = std::tuple<scapix::java_api::java::awt::image::LookupTable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_IMAGE_BYTELOOKUPTABLE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_AWT_IMAGE_BYTELOOKUPTABLE)
#define SCAPIX_JAVA_API_JAVA_AWT_IMAGE_BYTELOOKUPTABLE

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::awt::image::ByteLookupTable : public jni::object_base<"java/awt/image/ByteLookupTable",
	java::awt::image::LookupTable>
{
public:

	static jni::ref<java::awt::image::ByteLookupTable> new_object(jint p1, jni::ref<jni::array<jni::array<jbyte>>> p2) { return base_::new_object(p1, p2); }
	static jni::ref<java::awt::image::ByteLookupTable> new_object(jint p1, jni::ref<jni::array<jbyte>> p2) { return base_::new_object(p1, p2); }
	jni::ref<jni::array<jni::array<jbyte>>> getTable() { return call_method<"getTable", jni::ref<jni::array<jni::array<jbyte>>>>(); }
	jni::ref<jni::array<jint>> lookupPixel(jni::ref<jni::array<jint>> p1, jni::ref<jni::array<jint>> p2) { return call_method<"lookupPixel", jni::ref<jni::array<jint>>>(p1, p2); }
	jni::ref<jni::array<jbyte>> lookupPixel(jni::ref<jni::array<jbyte>> p1, jni::ref<jni::array<jbyte>> p2) { return call_method<"lookupPixel", jni::ref<jni::array<jbyte>>>(p1, p2); }

protected:

	ByteLookupTable(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_IMAGE_BYTELOOKUPTABLE
