// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/awt/image/ColorModel.h>

#ifndef SCAPIX_JAVA_API_JAVA_AWT_IMAGE_PACKEDCOLORMODEL_FWD
#define SCAPIX_JAVA_API_JAVA_AWT_IMAGE_PACKEDCOLORMODEL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::awt::image { class PackedColorModel; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::awt::image::PackedColorModel>
{
	static constexpr fixed_string class_name = "java/awt/image/PackedColorModel";
	using base_classes = std::tuple<scapix::java_api::java::awt::image::ColorModel>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_IMAGE_PACKEDCOLORMODEL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_AWT_IMAGE_PACKEDCOLORMODEL)
#define SCAPIX_JAVA_API_JAVA_AWT_IMAGE_PACKEDCOLORMODEL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/color/ColorSpace.h>
#include <scapix/java_api/java/awt/image/SampleModel.h>
#include <scapix/java_api/java/awt/image/WritableRaster.h>
#include <scapix/java_api/java/lang/Object.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::awt::image::PackedColorModel : public jni::object_base<"java/awt/image/PackedColorModel",
	java::awt::image::ColorModel>
{
public:

	static jni::ref<java::awt::image::PackedColorModel> new_object(jni::ref<java::awt::color::ColorSpace> p1, jint p2, jni::ref<jni::array<jint>> p3, jint p4, jboolean p5, jint p6, jint p7) { return base_::new_object(p1, p2, p3, p4, p5, p6, p7); }
	static jni::ref<java::awt::image::PackedColorModel> new_object(jni::ref<java::awt::color::ColorSpace> p1, jint p2, jint p3, jint p4, jint p5, jint p6, jboolean p7, jint p8, jint p9) { return base_::new_object(p1, p2, p3, p4, p5, p6, p7, p8, p9); }
	jint getMask(jint p1) { return call_method<"getMask", jint>(p1); }
	jni::ref<jni::array<jint>> getMasks() { return call_method<"getMasks", jni::ref<jni::array<jint>>>(); }
	jni::ref<java::awt::image::SampleModel> createCompatibleSampleModel(jint p1, jint p2) { return call_method<"createCompatibleSampleModel", jni::ref<java::awt::image::SampleModel>>(p1, p2); }
	jboolean isCompatibleSampleModel(jni::ref<java::awt::image::SampleModel> p1) { return call_method<"isCompatibleSampleModel", jboolean>(p1); }
	jni::ref<java::awt::image::WritableRaster> getAlphaRaster(jni::ref<java::awt::image::WritableRaster> p1) { return call_method<"getAlphaRaster", jni::ref<java::awt::image::WritableRaster>>(p1); }
	jboolean equals(jni::ref<java::lang::Object> p1) { return call_method<"equals", jboolean>(p1); }

protected:

	PackedColorModel(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_IMAGE_PACKEDCOLORMODEL
