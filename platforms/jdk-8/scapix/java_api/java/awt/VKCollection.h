// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_AWT_VKCOLLECTION_FWD
#define SCAPIX_JAVA_API_JAVA_AWT_VKCOLLECTION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::awt { class VKCollection; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::awt::VKCollection>
{
	static constexpr fixed_string class_name = "java/awt/VKCollection";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_VKCOLLECTION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_AWT_VKCOLLECTION)
#define SCAPIX_JAVA_API_JAVA_AWT_VKCOLLECTION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Integer.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::awt::VKCollection : public jni::object_base<"java/awt/VKCollection",
	java::lang::Object>
{
public:

	static jni::ref<java::awt::VKCollection> new_object() { return base_::new_object(); }
	void put(jni::ref<java::lang::String> p1, jni::ref<java::lang::Integer> p2) { return call_method<"put", void>(p1, p2); }
	jni::ref<java::lang::Integer> findCode(jni::ref<java::lang::String> p1) { return call_method<"findCode", jni::ref<java::lang::Integer>>(p1); }
	jni::ref<java::lang::String> findName(jni::ref<java::lang::Integer> p1) { return call_method<"findName", jni::ref<java::lang::String>>(p1); }

protected:

	VKCollection(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_VKCOLLECTION
