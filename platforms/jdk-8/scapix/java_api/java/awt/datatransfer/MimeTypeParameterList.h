// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/Cloneable.h>

#ifndef SCAPIX_JAVA_API_JAVA_AWT_DATATRANSFER_MIMETYPEPARAMETERLIST_FWD
#define SCAPIX_JAVA_API_JAVA_AWT_DATATRANSFER_MIMETYPEPARAMETERLIST_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::awt::datatransfer { class MimeTypeParameterList; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::awt::datatransfer::MimeTypeParameterList>
{
	static constexpr fixed_string class_name = "java/awt/datatransfer/MimeTypeParameterList";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::lang::Cloneable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_DATATRANSFER_MIMETYPEPARAMETERLIST_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_AWT_DATATRANSFER_MIMETYPEPARAMETERLIST)
#define SCAPIX_JAVA_API_JAVA_AWT_DATATRANSFER_MIMETYPEPARAMETERLIST

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Enumeration.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::awt::datatransfer::MimeTypeParameterList : public jni::object_base<"java/awt/datatransfer/MimeTypeParameterList",
	java::lang::Object,
	java::lang::Cloneable>
{
public:

	static jni::ref<java::awt::datatransfer::MimeTypeParameterList> new_object() { return base_::new_object(); }
	static jni::ref<java::awt::datatransfer::MimeTypeParameterList> new_object(jni::ref<java::lang::String> p1) { return base_::new_object(p1); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jboolean equals(jni::ref<java::lang::Object> p1) { return call_method<"equals", jboolean>(p1); }
	jint size() { return call_method<"size", jint>(); }
	jboolean isEmpty() { return call_method<"isEmpty", jboolean>(); }
	jni::ref<java::lang::String> get(jni::ref<java::lang::String> p1) { return call_method<"get", jni::ref<java::lang::String>>(p1); }
	void set(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return call_method<"set", void>(p1, p2); }
	void remove(jni::ref<java::lang::String> p1) { return call_method<"remove", void>(p1); }
	jni::ref<java::util::Enumeration> getNames() { return call_method<"getNames", jni::ref<java::util::Enumeration>>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::Object> clone() { return call_method<"clone", jni::ref<java::lang::Object>>(); }

protected:

	MimeTypeParameterList(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_DATATRANSFER_MIMETYPEPARAMETERLIST
