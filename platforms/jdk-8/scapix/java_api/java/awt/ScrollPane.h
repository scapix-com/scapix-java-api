// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/awt/Container.h>
#include <scapix/java_api/javax/accessibility/Accessible.h>

#ifndef SCAPIX_JAVA_API_JAVA_AWT_SCROLLPANE_FWD
#define SCAPIX_JAVA_API_JAVA_AWT_SCROLLPANE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::awt { class ScrollPane; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::awt::ScrollPane>
{
	static constexpr fixed_string class_name = "java/awt/ScrollPane";
	using base_classes = std::tuple<scapix::java_api::java::awt::Container, scapix::java_api::javax::accessibility::Accessible>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_SCROLLPANE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_AWT_SCROLLPANE)
#define SCAPIX_JAVA_API_JAVA_AWT_SCROLLPANE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Adjustable.h>
#include <scapix/java_api/java/awt/Dimension.h>
#include <scapix/java_api/java/awt/Graphics.h>
#include <scapix/java_api/java/awt/LayoutManager.h>
#include <scapix/java_api/java/awt/Point.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/accessibility/AccessibleContext.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::awt::ScrollPane : public jni::object_base<"java/awt/ScrollPane",
	java::awt::Container,
	javax::accessibility::Accessible>
{
public:

	static jint SCROLLBARS_AS_NEEDED() { return get_static_field<"SCROLLBARS_AS_NEEDED", jint>(); }
	static jint SCROLLBARS_ALWAYS() { return get_static_field<"SCROLLBARS_ALWAYS", jint>(); }
	static jint SCROLLBARS_NEVER() { return get_static_field<"SCROLLBARS_NEVER", jint>(); }

	static jni::ref<java::awt::ScrollPane> new_object() { return base_::new_object(); }
	static jni::ref<java::awt::ScrollPane> new_object(jint p1) { return base_::new_object(p1); }
	jint getScrollbarDisplayPolicy() { return call_method<"getScrollbarDisplayPolicy", jint>(); }
	jni::ref<java::awt::Dimension> getViewportSize() { return call_method<"getViewportSize", jni::ref<java::awt::Dimension>>(); }
	jint getHScrollbarHeight() { return call_method<"getHScrollbarHeight", jint>(); }
	jint getVScrollbarWidth() { return call_method<"getVScrollbarWidth", jint>(); }
	jni::ref<java::awt::Adjustable> getVAdjustable() { return call_method<"getVAdjustable", jni::ref<java::awt::Adjustable>>(); }
	jni::ref<java::awt::Adjustable> getHAdjustable() { return call_method<"getHAdjustable", jni::ref<java::awt::Adjustable>>(); }
	void setScrollPosition(jint p1, jint p2) { return call_method<"setScrollPosition", void>(p1, p2); }
	void setScrollPosition(jni::ref<java::awt::Point> p1) { return call_method<"setScrollPosition", void>(p1); }
	jni::ref<java::awt::Point> getScrollPosition() { return call_method<"getScrollPosition", jni::ref<java::awt::Point>>(); }
	void setLayout(jni::ref<java::awt::LayoutManager> p1) { return call_method<"setLayout", void>(p1); }
	void doLayout() { return call_method<"doLayout", void>(); }
	void layout() { return call_method<"layout", void>(); }
	void printComponents(jni::ref<java::awt::Graphics> p1) { return call_method<"printComponents", void>(p1); }
	void addNotify() { return call_method<"addNotify", void>(); }
	jni::ref<java::lang::String> paramString() { return call_method<"paramString", jni::ref<java::lang::String>>(); }
	void setWheelScrollingEnabled(jboolean p1) { return call_method<"setWheelScrollingEnabled", void>(p1); }
	jboolean isWheelScrollingEnabled() { return call_method<"isWheelScrollingEnabled", jboolean>(); }
	jni::ref<javax::accessibility::AccessibleContext> getAccessibleContext() { return call_method<"getAccessibleContext", jni::ref<javax::accessibility::AccessibleContext>>(); }

protected:

	ScrollPane(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_SCROLLPANE
