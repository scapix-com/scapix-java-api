// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/awt/event/InputEvent.h>

#ifndef SCAPIX_JAVA_API_JAVA_AWT_EVENT_MOUSEEVENT_FWD
#define SCAPIX_JAVA_API_JAVA_AWT_EVENT_MOUSEEVENT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::awt::event { class MouseEvent; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::awt::event::MouseEvent>
{
	static constexpr fixed_string class_name = "java/awt/event/MouseEvent";
	using base_classes = std::tuple<scapix::java_api::java::awt::event::InputEvent>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_EVENT_MOUSEEVENT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_AWT_EVENT_MOUSEEVENT)
#define SCAPIX_JAVA_API_JAVA_AWT_EVENT_MOUSEEVENT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Component.h>
#include <scapix/java_api/java/awt/Point.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::awt::event::MouseEvent : public jni::object_base<"java/awt/event/MouseEvent",
	java::awt::event::InputEvent>
{
public:

	static jint MOUSE_FIRST() { return get_static_field<"MOUSE_FIRST", jint>(); }
	static jint MOUSE_LAST() { return get_static_field<"MOUSE_LAST", jint>(); }
	static jint MOUSE_CLICKED() { return get_static_field<"MOUSE_CLICKED", jint>(); }
	static jint MOUSE_PRESSED() { return get_static_field<"MOUSE_PRESSED", jint>(); }
	static jint MOUSE_RELEASED() { return get_static_field<"MOUSE_RELEASED", jint>(); }
	static jint MOUSE_MOVED() { return get_static_field<"MOUSE_MOVED", jint>(); }
	static jint MOUSE_ENTERED() { return get_static_field<"MOUSE_ENTERED", jint>(); }
	static jint MOUSE_EXITED() { return get_static_field<"MOUSE_EXITED", jint>(); }
	static jint MOUSE_DRAGGED() { return get_static_field<"MOUSE_DRAGGED", jint>(); }
	static jint MOUSE_WHEEL() { return get_static_field<"MOUSE_WHEEL", jint>(); }
	static jint NOBUTTON() { return get_static_field<"NOBUTTON", jint>(); }
	static jint BUTTON1() { return get_static_field<"BUTTON1", jint>(); }
	static jint BUTTON2() { return get_static_field<"BUTTON2", jint>(); }
	static jint BUTTON3() { return get_static_field<"BUTTON3", jint>(); }

	jni::ref<java::awt::Point> getLocationOnScreen() { return call_method<"getLocationOnScreen", jni::ref<java::awt::Point>>(); }
	jint getXOnScreen() { return call_method<"getXOnScreen", jint>(); }
	jint getYOnScreen() { return call_method<"getYOnScreen", jint>(); }
	static jni::ref<java::awt::event::MouseEvent> new_object(jni::ref<java::awt::Component> p1, jint p2, jlong p3, jint p4, jint p5, jint p6, jint p7, jboolean p8, jint p9) { return base_::new_object(p1, p2, p3, p4, p5, p6, p7, p8, p9); }
	static jni::ref<java::awt::event::MouseEvent> new_object(jni::ref<java::awt::Component> p1, jint p2, jlong p3, jint p4, jint p5, jint p6, jint p7, jboolean p8) { return base_::new_object(p1, p2, p3, p4, p5, p6, p7, p8); }
	jint getModifiersEx() { return call_method<"getModifiersEx", jint>(); }
	static jni::ref<java::awt::event::MouseEvent> new_object(jni::ref<java::awt::Component> p1, jint p2, jlong p3, jint p4, jint p5, jint p6, jint p7, jint p8, jint p9, jboolean p10, jint p11) { return base_::new_object(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11); }
	jint getX() { return call_method<"getX", jint>(); }
	jint getY() { return call_method<"getY", jint>(); }
	jni::ref<java::awt::Point> getPoint() { return call_method<"getPoint", jni::ref<java::awt::Point>>(); }
	void translatePoint(jint p1, jint p2) { return call_method<"translatePoint", void>(p1, p2); }
	jint getClickCount() { return call_method<"getClickCount", jint>(); }
	jint getButton() { return call_method<"getButton", jint>(); }
	jboolean isPopupTrigger() { return call_method<"isPopupTrigger", jboolean>(); }
	static jni::ref<java::lang::String> getMouseModifiersText(jint p1) { return call_static_method<"getMouseModifiersText", jni::ref<java::lang::String>>(p1); }
	jni::ref<java::lang::String> paramString() { return call_method<"paramString", jni::ref<java::lang::String>>(); }

protected:

	MouseEvent(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_EVENT_MOUSEEVENT
