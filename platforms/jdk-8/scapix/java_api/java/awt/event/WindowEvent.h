// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/awt/event/ComponentEvent.h>

#ifndef SCAPIX_JAVA_API_JAVA_AWT_EVENT_WINDOWEVENT_FWD
#define SCAPIX_JAVA_API_JAVA_AWT_EVENT_WINDOWEVENT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::awt::event { class WindowEvent; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::awt::event::WindowEvent>
{
	static constexpr fixed_string class_name = "java/awt/event/WindowEvent";
	using base_classes = std::tuple<scapix::java_api::java::awt::event::ComponentEvent>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_EVENT_WINDOWEVENT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_AWT_EVENT_WINDOWEVENT)
#define SCAPIX_JAVA_API_JAVA_AWT_EVENT_WINDOWEVENT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Window.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::awt::event::WindowEvent : public jni::object_base<"java/awt/event/WindowEvent",
	java::awt::event::ComponentEvent>
{
public:

	static jint WINDOW_FIRST() { return get_static_field<"WINDOW_FIRST", jint>(); }
	static jint WINDOW_OPENED() { return get_static_field<"WINDOW_OPENED", jint>(); }
	static jint WINDOW_CLOSING() { return get_static_field<"WINDOW_CLOSING", jint>(); }
	static jint WINDOW_CLOSED() { return get_static_field<"WINDOW_CLOSED", jint>(); }
	static jint WINDOW_ICONIFIED() { return get_static_field<"WINDOW_ICONIFIED", jint>(); }
	static jint WINDOW_DEICONIFIED() { return get_static_field<"WINDOW_DEICONIFIED", jint>(); }
	static jint WINDOW_ACTIVATED() { return get_static_field<"WINDOW_ACTIVATED", jint>(); }
	static jint WINDOW_DEACTIVATED() { return get_static_field<"WINDOW_DEACTIVATED", jint>(); }
	static jint WINDOW_GAINED_FOCUS() { return get_static_field<"WINDOW_GAINED_FOCUS", jint>(); }
	static jint WINDOW_LOST_FOCUS() { return get_static_field<"WINDOW_LOST_FOCUS", jint>(); }
	static jint WINDOW_STATE_CHANGED() { return get_static_field<"WINDOW_STATE_CHANGED", jint>(); }
	static jint WINDOW_LAST() { return get_static_field<"WINDOW_LAST", jint>(); }

	static jni::ref<java::awt::event::WindowEvent> new_object(jni::ref<java::awt::Window> p1, jint p2, jni::ref<java::awt::Window> p3, jint p4, jint p5) { return base_::new_object(p1, p2, p3, p4, p5); }
	static jni::ref<java::awt::event::WindowEvent> new_object(jni::ref<java::awt::Window> p1, jint p2, jni::ref<java::awt::Window> p3) { return base_::new_object(p1, p2, p3); }
	static jni::ref<java::awt::event::WindowEvent> new_object(jni::ref<java::awt::Window> p1, jint p2, jint p3, jint p4) { return base_::new_object(p1, p2, p3, p4); }
	static jni::ref<java::awt::event::WindowEvent> new_object(jni::ref<java::awt::Window> p1, jint p2) { return base_::new_object(p1, p2); }
	jni::ref<java::awt::Window> getWindow() { return call_method<"getWindow", jni::ref<java::awt::Window>>(); }
	jni::ref<java::awt::Window> getOppositeWindow() { return call_method<"getOppositeWindow", jni::ref<java::awt::Window>>(); }
	jint getOldState() { return call_method<"getOldState", jint>(); }
	jint getNewState() { return call_method<"getNewState", jint>(); }
	jni::ref<java::lang::String> paramString() { return call_method<"paramString", jni::ref<java::lang::String>>(); }

protected:

	WindowEvent(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_EVENT_WINDOWEVENT
