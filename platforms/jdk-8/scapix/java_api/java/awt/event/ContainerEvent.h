// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/awt/event/ComponentEvent.h>

#ifndef SCAPIX_JAVA_API_JAVA_AWT_EVENT_CONTAINEREVENT_FWD
#define SCAPIX_JAVA_API_JAVA_AWT_EVENT_CONTAINEREVENT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::awt::event { class ContainerEvent; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::awt::event::ContainerEvent>
{
	static constexpr fixed_string class_name = "java/awt/event/ContainerEvent";
	using base_classes = std::tuple<scapix::java_api::java::awt::event::ComponentEvent>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_EVENT_CONTAINEREVENT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_AWT_EVENT_CONTAINEREVENT)
#define SCAPIX_JAVA_API_JAVA_AWT_EVENT_CONTAINEREVENT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Component.h>
#include <scapix/java_api/java/awt/Container.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::awt::event::ContainerEvent : public jni::object_base<"java/awt/event/ContainerEvent",
	java::awt::event::ComponentEvent>
{
public:

	static jint CONTAINER_FIRST() { return get_static_field<"CONTAINER_FIRST", jint>(); }
	static jint CONTAINER_LAST() { return get_static_field<"CONTAINER_LAST", jint>(); }
	static jint COMPONENT_ADDED() { return get_static_field<"COMPONENT_ADDED", jint>(); }
	static jint COMPONENT_REMOVED() { return get_static_field<"COMPONENT_REMOVED", jint>(); }

	static jni::ref<java::awt::event::ContainerEvent> new_object(jni::ref<java::awt::Component> p1, jint p2, jni::ref<java::awt::Component> p3) { return base_::new_object(p1, p2, p3); }
	jni::ref<java::awt::Container> getContainer() { return call_method<"getContainer", jni::ref<java::awt::Container>>(); }
	jni::ref<java::awt::Component> getChild() { return call_method<"getChild", jni::ref<java::awt::Component>>(); }
	jni::ref<java::lang::String> paramString() { return call_method<"paramString", jni::ref<java::lang::String>>(); }

protected:

	ContainerEvent(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_EVENT_CONTAINEREVENT
