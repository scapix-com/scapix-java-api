// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/awt/AWTEvent.h>
#include <scapix/java_api/java/awt/ActiveEvent.h>

#ifndef SCAPIX_JAVA_API_JAVA_AWT_EVENT_INVOCATIONEVENT_FWD
#define SCAPIX_JAVA_API_JAVA_AWT_EVENT_INVOCATIONEVENT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::awt::event { class InvocationEvent; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::awt::event::InvocationEvent>
{
	static constexpr fixed_string class_name = "java/awt/event/InvocationEvent";
	using base_classes = std::tuple<scapix::java_api::java::awt::AWTEvent, scapix::java_api::java::awt::ActiveEvent>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_EVENT_INVOCATIONEVENT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_AWT_EVENT_INVOCATIONEVENT)
#define SCAPIX_JAVA_API_JAVA_AWT_EVENT_INVOCATIONEVENT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Exception.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/Runnable.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/Throwable.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::awt::event::InvocationEvent : public jni::object_base<"java/awt/event/InvocationEvent",
	java::awt::AWTEvent,
	java::awt::ActiveEvent>
{
public:

	static jint INVOCATION_FIRST() { return get_static_field<"INVOCATION_FIRST", jint>(); }
	static jint INVOCATION_DEFAULT() { return get_static_field<"INVOCATION_DEFAULT", jint>(); }
	static jint INVOCATION_LAST() { return get_static_field<"INVOCATION_LAST", jint>(); }

	static jni::ref<java::awt::event::InvocationEvent> new_object(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Runnable> p2) { return base_::new_object(p1, p2); }
	static jni::ref<java::awt::event::InvocationEvent> new_object(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Runnable> p2, jni::ref<java::lang::Object> p3, jboolean p4) { return base_::new_object(p1, p2, p3, p4); }
	static jni::ref<java::awt::event::InvocationEvent> new_object(jni::ref<java::lang::Object> p1, jni::ref<java::lang::Runnable> p2, jni::ref<java::lang::Runnable> p3, jboolean p4) { return base_::new_object(p1, p2, p3, p4); }
	void dispatch() { return call_method<"dispatch", void>(); }
	jni::ref<java::lang::Exception> getException() { return call_method<"getException", jni::ref<java::lang::Exception>>(); }
	jni::ref<java::lang::Throwable> getThrowable() { return call_method<"getThrowable", jni::ref<java::lang::Throwable>>(); }
	jlong getWhen() { return call_method<"getWhen", jlong>(); }
	jboolean isDispatched() { return call_method<"isDispatched", jboolean>(); }
	jni::ref<java::lang::String> paramString() { return call_method<"paramString", jni::ref<java::lang::String>>(); }

protected:

	InvocationEvent(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_EVENT_INVOCATIONEVENT
