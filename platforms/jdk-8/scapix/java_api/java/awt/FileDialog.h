// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/awt/Dialog.h>

#ifndef SCAPIX_JAVA_API_JAVA_AWT_FILEDIALOG_FWD
#define SCAPIX_JAVA_API_JAVA_AWT_FILEDIALOG_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::awt { class FileDialog; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::awt::FileDialog>
{
	static constexpr fixed_string class_name = "java/awt/FileDialog";
	using base_classes = std::tuple<scapix::java_api::java::awt::Dialog>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_FILEDIALOG_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_AWT_FILEDIALOG)
#define SCAPIX_JAVA_API_JAVA_AWT_FILEDIALOG

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Frame.h>
#include <scapix/java_api/java/io/File.h>
#include <scapix/java_api/java/io/FilenameFilter.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::awt::FileDialog : public jni::object_base<"java/awt/FileDialog",
	java::awt::Dialog>
{
public:

	static jint LOAD() { return get_static_field<"LOAD", jint>(); }
	static jint SAVE() { return get_static_field<"SAVE", jint>(); }

	static jni::ref<java::awt::FileDialog> new_object(jni::ref<java::awt::Frame> p1) { return base_::new_object(p1); }
	static jni::ref<java::awt::FileDialog> new_object(jni::ref<java::awt::Frame> p1, jni::ref<java::lang::String> p2) { return base_::new_object(p1, p2); }
	static jni::ref<java::awt::FileDialog> new_object(jni::ref<java::awt::Frame> p1, jni::ref<java::lang::String> p2, jint p3) { return base_::new_object(p1, p2, p3); }
	static jni::ref<java::awt::FileDialog> new_object(jni::ref<java::awt::Dialog> p1) { return base_::new_object(p1); }
	static jni::ref<java::awt::FileDialog> new_object(jni::ref<java::awt::Dialog> p1, jni::ref<java::lang::String> p2) { return base_::new_object(p1, p2); }
	static jni::ref<java::awt::FileDialog> new_object(jni::ref<java::awt::Dialog> p1, jni::ref<java::lang::String> p2, jint p3) { return base_::new_object(p1, p2, p3); }
	void addNotify() { return call_method<"addNotify", void>(); }
	jint getMode() { return call_method<"getMode", jint>(); }
	void setMode(jint p1) { return call_method<"setMode", void>(p1); }
	jni::ref<java::lang::String> getDirectory() { return call_method<"getDirectory", jni::ref<java::lang::String>>(); }
	void setDirectory(jni::ref<java::lang::String> p1) { return call_method<"setDirectory", void>(p1); }
	jni::ref<java::lang::String> getFile() { return call_method<"getFile", jni::ref<java::lang::String>>(); }
	jni::ref<jni::array<java::io::File>> getFiles() { return call_method<"getFiles", jni::ref<jni::array<java::io::File>>>(); }
	void setFile(jni::ref<java::lang::String> p1) { return call_method<"setFile", void>(p1); }
	void setMultipleMode(jboolean p1) { return call_method<"setMultipleMode", void>(p1); }
	jboolean isMultipleMode() { return call_method<"isMultipleMode", jboolean>(); }
	jni::ref<java::io::FilenameFilter> getFilenameFilter() { return call_method<"getFilenameFilter", jni::ref<java::io::FilenameFilter>>(); }
	void setFilenameFilter(jni::ref<java::io::FilenameFilter> p1) { return call_method<"setFilenameFilter", void>(p1); }

protected:

	FileDialog(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_FILEDIALOG
