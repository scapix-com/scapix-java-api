// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_AWT_IMAGE_FWD
#define SCAPIX_JAVA_API_JAVA_AWT_IMAGE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::awt { class Image; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::awt::Image>
{
	static constexpr fixed_string class_name = "java/awt/Image";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_IMAGE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_AWT_IMAGE)
#define SCAPIX_JAVA_API_JAVA_AWT_IMAGE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Graphics.h>
#include <scapix/java_api/java/awt/GraphicsConfiguration.h>
#include <scapix/java_api/java/awt/ImageCapabilities.h>
#include <scapix/java_api/java/awt/image/ImageObserver.h>
#include <scapix/java_api/java/awt/image/ImageProducer.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::awt::Image : public jni::object_base<"java/awt/Image",
	java::lang::Object>
{
public:

	static jni::ref<java::lang::Object> UndefinedProperty() { return get_static_field<"UndefinedProperty", jni::ref<java::lang::Object>>(); }
	static jint SCALE_DEFAULT() { return get_static_field<"SCALE_DEFAULT", jint>(); }
	static jint SCALE_FAST() { return get_static_field<"SCALE_FAST", jint>(); }
	static jint SCALE_SMOOTH() { return get_static_field<"SCALE_SMOOTH", jint>(); }
	static jint SCALE_REPLICATE() { return get_static_field<"SCALE_REPLICATE", jint>(); }
	static jint SCALE_AREA_AVERAGING() { return get_static_field<"SCALE_AREA_AVERAGING", jint>(); }

	static jni::ref<java::awt::Image> new_object() { return base_::new_object(); }
	jint getWidth(jni::ref<java::awt::image::ImageObserver> p1) { return call_method<"getWidth", jint>(p1); }
	jint getHeight(jni::ref<java::awt::image::ImageObserver> p1) { return call_method<"getHeight", jint>(p1); }
	jni::ref<java::awt::image::ImageProducer> getSource() { return call_method<"getSource", jni::ref<java::awt::image::ImageProducer>>(); }
	jni::ref<java::awt::Graphics> getGraphics() { return call_method<"getGraphics", jni::ref<java::awt::Graphics>>(); }
	jni::ref<java::lang::Object> getProperty(jni::ref<java::lang::String> p1, jni::ref<java::awt::image::ImageObserver> p2) { return call_method<"getProperty", jni::ref<java::lang::Object>>(p1, p2); }
	jni::ref<java::awt::Image> getScaledInstance(jint p1, jint p2, jint p3) { return call_method<"getScaledInstance", jni::ref<java::awt::Image>>(p1, p2, p3); }
	void flush() { return call_method<"flush", void>(); }
	jni::ref<java::awt::ImageCapabilities> getCapabilities(jni::ref<java::awt::GraphicsConfiguration> p1) { return call_method<"getCapabilities", jni::ref<java::awt::ImageCapabilities>>(p1); }
	void setAccelerationPriority(jfloat p1) { return call_method<"setAccelerationPriority", void>(p1); }
	jfloat getAccelerationPriority() { return call_method<"getAccelerationPriority", jfloat>(); }

protected:

	Image(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_IMAGE
