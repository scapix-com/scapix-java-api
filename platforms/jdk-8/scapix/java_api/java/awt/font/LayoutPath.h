// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_AWT_FONT_LAYOUTPATH_FWD
#define SCAPIX_JAVA_API_JAVA_AWT_FONT_LAYOUTPATH_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::awt::font { class LayoutPath; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::awt::font::LayoutPath>
{
	static constexpr fixed_string class_name = "java/awt/font/LayoutPath";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_FONT_LAYOUTPATH_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_AWT_FONT_LAYOUTPATH)
#define SCAPIX_JAVA_API_JAVA_AWT_FONT_LAYOUTPATH

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/geom/Point2D.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::awt::font::LayoutPath : public jni::object_base<"java/awt/font/LayoutPath",
	java::lang::Object>
{
public:

	static jni::ref<java::awt::font::LayoutPath> new_object() { return base_::new_object(); }
	jboolean pointToPath(jni::ref<java::awt::geom::Point2D> p1, jni::ref<java::awt::geom::Point2D> p2) { return call_method<"pointToPath", jboolean>(p1, p2); }
	void pathToPoint(jni::ref<java::awt::geom::Point2D> p1, jboolean p2, jni::ref<java::awt::geom::Point2D> p3) { return call_method<"pathToPoint", void>(p1, p2, p3); }

protected:

	LayoutPath(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_FONT_LAYOUTPATH
