// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/text/AttributedCharacterIterator_Attribute.h>

#ifndef SCAPIX_JAVA_API_JAVA_AWT_FONT_TEXTATTRIBUTE_FWD
#define SCAPIX_JAVA_API_JAVA_AWT_FONT_TEXTATTRIBUTE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::awt::font { class TextAttribute; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::awt::font::TextAttribute>
{
	static constexpr fixed_string class_name = "java/awt/font/TextAttribute";
	using base_classes = std::tuple<scapix::java_api::java::text::AttributedCharacterIterator_Attribute>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_FONT_TEXTATTRIBUTE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_AWT_FONT_TEXTATTRIBUTE)
#define SCAPIX_JAVA_API_JAVA_AWT_FONT_TEXTATTRIBUTE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Boolean.h>
#include <scapix/java_api/java/lang/Float.h>
#include <scapix/java_api/java/lang/Integer.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::awt::font::TextAttribute : public jni::object_base<"java/awt/font/TextAttribute",
	java::text::AttributedCharacterIterator_Attribute>
{
public:

	static jni::ref<java::awt::font::TextAttribute> FAMILY() { return get_static_field<"FAMILY", jni::ref<java::awt::font::TextAttribute>>(); }
	static jni::ref<java::awt::font::TextAttribute> WEIGHT() { return get_static_field<"WEIGHT", jni::ref<java::awt::font::TextAttribute>>(); }
	static jni::ref<java::lang::Float> WEIGHT_EXTRA_LIGHT() { return get_static_field<"WEIGHT_EXTRA_LIGHT", jni::ref<java::lang::Float>>(); }
	static jni::ref<java::lang::Float> WEIGHT_LIGHT() { return get_static_field<"WEIGHT_LIGHT", jni::ref<java::lang::Float>>(); }
	static jni::ref<java::lang::Float> WEIGHT_DEMILIGHT() { return get_static_field<"WEIGHT_DEMILIGHT", jni::ref<java::lang::Float>>(); }
	static jni::ref<java::lang::Float> WEIGHT_REGULAR() { return get_static_field<"WEIGHT_REGULAR", jni::ref<java::lang::Float>>(); }
	static jni::ref<java::lang::Float> WEIGHT_SEMIBOLD() { return get_static_field<"WEIGHT_SEMIBOLD", jni::ref<java::lang::Float>>(); }
	static jni::ref<java::lang::Float> WEIGHT_MEDIUM() { return get_static_field<"WEIGHT_MEDIUM", jni::ref<java::lang::Float>>(); }
	static jni::ref<java::lang::Float> WEIGHT_DEMIBOLD() { return get_static_field<"WEIGHT_DEMIBOLD", jni::ref<java::lang::Float>>(); }
	static jni::ref<java::lang::Float> WEIGHT_BOLD() { return get_static_field<"WEIGHT_BOLD", jni::ref<java::lang::Float>>(); }
	static jni::ref<java::lang::Float> WEIGHT_HEAVY() { return get_static_field<"WEIGHT_HEAVY", jni::ref<java::lang::Float>>(); }
	static jni::ref<java::lang::Float> WEIGHT_EXTRABOLD() { return get_static_field<"WEIGHT_EXTRABOLD", jni::ref<java::lang::Float>>(); }
	static jni::ref<java::lang::Float> WEIGHT_ULTRABOLD() { return get_static_field<"WEIGHT_ULTRABOLD", jni::ref<java::lang::Float>>(); }
	static jni::ref<java::awt::font::TextAttribute> WIDTH() { return get_static_field<"WIDTH", jni::ref<java::awt::font::TextAttribute>>(); }
	static jni::ref<java::lang::Float> WIDTH_CONDENSED() { return get_static_field<"WIDTH_CONDENSED", jni::ref<java::lang::Float>>(); }
	static jni::ref<java::lang::Float> WIDTH_SEMI_CONDENSED() { return get_static_field<"WIDTH_SEMI_CONDENSED", jni::ref<java::lang::Float>>(); }
	static jni::ref<java::lang::Float> WIDTH_REGULAR() { return get_static_field<"WIDTH_REGULAR", jni::ref<java::lang::Float>>(); }
	static jni::ref<java::lang::Float> WIDTH_SEMI_EXTENDED() { return get_static_field<"WIDTH_SEMI_EXTENDED", jni::ref<java::lang::Float>>(); }
	static jni::ref<java::lang::Float> WIDTH_EXTENDED() { return get_static_field<"WIDTH_EXTENDED", jni::ref<java::lang::Float>>(); }
	static jni::ref<java::awt::font::TextAttribute> POSTURE() { return get_static_field<"POSTURE", jni::ref<java::awt::font::TextAttribute>>(); }
	static jni::ref<java::lang::Float> POSTURE_REGULAR() { return get_static_field<"POSTURE_REGULAR", jni::ref<java::lang::Float>>(); }
	static jni::ref<java::lang::Float> POSTURE_OBLIQUE() { return get_static_field<"POSTURE_OBLIQUE", jni::ref<java::lang::Float>>(); }
	static jni::ref<java::awt::font::TextAttribute> SIZE() { return get_static_field<"SIZE", jni::ref<java::awt::font::TextAttribute>>(); }
	static jni::ref<java::awt::font::TextAttribute> TRANSFORM() { return get_static_field<"TRANSFORM", jni::ref<java::awt::font::TextAttribute>>(); }
	static jni::ref<java::awt::font::TextAttribute> SUPERSCRIPT() { return get_static_field<"SUPERSCRIPT", jni::ref<java::awt::font::TextAttribute>>(); }
	static jni::ref<java::lang::Integer> SUPERSCRIPT_SUPER() { return get_static_field<"SUPERSCRIPT_SUPER", jni::ref<java::lang::Integer>>(); }
	static jni::ref<java::lang::Integer> SUPERSCRIPT_SUB() { return get_static_field<"SUPERSCRIPT_SUB", jni::ref<java::lang::Integer>>(); }
	static jni::ref<java::awt::font::TextAttribute> FONT() { return get_static_field<"FONT", jni::ref<java::awt::font::TextAttribute>>(); }
	static jni::ref<java::awt::font::TextAttribute> CHAR_REPLACEMENT() { return get_static_field<"CHAR_REPLACEMENT", jni::ref<java::awt::font::TextAttribute>>(); }
	static jni::ref<java::awt::font::TextAttribute> FOREGROUND() { return get_static_field<"FOREGROUND", jni::ref<java::awt::font::TextAttribute>>(); }
	static jni::ref<java::awt::font::TextAttribute> BACKGROUND() { return get_static_field<"BACKGROUND", jni::ref<java::awt::font::TextAttribute>>(); }
	static jni::ref<java::awt::font::TextAttribute> UNDERLINE() { return get_static_field<"UNDERLINE", jni::ref<java::awt::font::TextAttribute>>(); }
	static jni::ref<java::lang::Integer> UNDERLINE_ON() { return get_static_field<"UNDERLINE_ON", jni::ref<java::lang::Integer>>(); }
	static jni::ref<java::awt::font::TextAttribute> STRIKETHROUGH() { return get_static_field<"STRIKETHROUGH", jni::ref<java::awt::font::TextAttribute>>(); }
	static jni::ref<java::lang::Boolean> STRIKETHROUGH_ON() { return get_static_field<"STRIKETHROUGH_ON", jni::ref<java::lang::Boolean>>(); }
	static jni::ref<java::awt::font::TextAttribute> RUN_DIRECTION() { return get_static_field<"RUN_DIRECTION", jni::ref<java::awt::font::TextAttribute>>(); }
	static jni::ref<java::lang::Boolean> RUN_DIRECTION_LTR() { return get_static_field<"RUN_DIRECTION_LTR", jni::ref<java::lang::Boolean>>(); }
	static jni::ref<java::lang::Boolean> RUN_DIRECTION_RTL() { return get_static_field<"RUN_DIRECTION_RTL", jni::ref<java::lang::Boolean>>(); }
	static jni::ref<java::awt::font::TextAttribute> BIDI_EMBEDDING() { return get_static_field<"BIDI_EMBEDDING", jni::ref<java::awt::font::TextAttribute>>(); }
	static jni::ref<java::awt::font::TextAttribute> JUSTIFICATION() { return get_static_field<"JUSTIFICATION", jni::ref<java::awt::font::TextAttribute>>(); }
	static jni::ref<java::lang::Float> JUSTIFICATION_FULL() { return get_static_field<"JUSTIFICATION_FULL", jni::ref<java::lang::Float>>(); }
	static jni::ref<java::lang::Float> JUSTIFICATION_NONE() { return get_static_field<"JUSTIFICATION_NONE", jni::ref<java::lang::Float>>(); }
	static jni::ref<java::awt::font::TextAttribute> INPUT_METHOD_HIGHLIGHT() { return get_static_field<"INPUT_METHOD_HIGHLIGHT", jni::ref<java::awt::font::TextAttribute>>(); }
	static jni::ref<java::awt::font::TextAttribute> INPUT_METHOD_UNDERLINE() { return get_static_field<"INPUT_METHOD_UNDERLINE", jni::ref<java::awt::font::TextAttribute>>(); }
	static jni::ref<java::lang::Integer> UNDERLINE_LOW_ONE_PIXEL() { return get_static_field<"UNDERLINE_LOW_ONE_PIXEL", jni::ref<java::lang::Integer>>(); }
	static jni::ref<java::lang::Integer> UNDERLINE_LOW_TWO_PIXEL() { return get_static_field<"UNDERLINE_LOW_TWO_PIXEL", jni::ref<java::lang::Integer>>(); }
	static jni::ref<java::lang::Integer> UNDERLINE_LOW_DOTTED() { return get_static_field<"UNDERLINE_LOW_DOTTED", jni::ref<java::lang::Integer>>(); }
	static jni::ref<java::lang::Integer> UNDERLINE_LOW_GRAY() { return get_static_field<"UNDERLINE_LOW_GRAY", jni::ref<java::lang::Integer>>(); }
	static jni::ref<java::lang::Integer> UNDERLINE_LOW_DASHED() { return get_static_field<"UNDERLINE_LOW_DASHED", jni::ref<java::lang::Integer>>(); }
	static jni::ref<java::awt::font::TextAttribute> SWAP_COLORS() { return get_static_field<"SWAP_COLORS", jni::ref<java::awt::font::TextAttribute>>(); }
	static jni::ref<java::lang::Boolean> SWAP_COLORS_ON() { return get_static_field<"SWAP_COLORS_ON", jni::ref<java::lang::Boolean>>(); }
	static jni::ref<java::awt::font::TextAttribute> NUMERIC_SHAPING() { return get_static_field<"NUMERIC_SHAPING", jni::ref<java::awt::font::TextAttribute>>(); }
	static jni::ref<java::awt::font::TextAttribute> KERNING() { return get_static_field<"KERNING", jni::ref<java::awt::font::TextAttribute>>(); }
	static jni::ref<java::lang::Integer> KERNING_ON() { return get_static_field<"KERNING_ON", jni::ref<java::lang::Integer>>(); }
	static jni::ref<java::awt::font::TextAttribute> LIGATURES() { return get_static_field<"LIGATURES", jni::ref<java::awt::font::TextAttribute>>(); }
	static jni::ref<java::lang::Integer> LIGATURES_ON() { return get_static_field<"LIGATURES_ON", jni::ref<java::lang::Integer>>(); }
	static jni::ref<java::awt::font::TextAttribute> TRACKING() { return get_static_field<"TRACKING", jni::ref<java::awt::font::TextAttribute>>(); }
	static jni::ref<java::lang::Float> TRACKING_TIGHT() { return get_static_field<"TRACKING_TIGHT", jni::ref<java::lang::Float>>(); }
	static jni::ref<java::lang::Float> TRACKING_LOOSE() { return get_static_field<"TRACKING_LOOSE", jni::ref<java::lang::Float>>(); }


protected:

	TextAttribute(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_FONT_TEXTATTRIBUTE
