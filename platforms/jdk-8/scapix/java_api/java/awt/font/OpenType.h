// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_AWT_FONT_OPENTYPE_FWD
#define SCAPIX_JAVA_API_JAVA_AWT_FONT_OPENTYPE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::awt::font { class OpenType; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::awt::font::OpenType>
{
	static constexpr fixed_string class_name = "java/awt/font/OpenType";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_FONT_OPENTYPE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_AWT_FONT_OPENTYPE)
#define SCAPIX_JAVA_API_JAVA_AWT_FONT_OPENTYPE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::awt::font::OpenType : public jni::object_base<"java/awt/font/OpenType",
	java::lang::Object>
{
public:

	static jint TAG_CMAP() { return get_static_field<"TAG_CMAP", jint>(); }
	static jint TAG_HEAD() { return get_static_field<"TAG_HEAD", jint>(); }
	static jint TAG_NAME() { return get_static_field<"TAG_NAME", jint>(); }
	static jint TAG_GLYF() { return get_static_field<"TAG_GLYF", jint>(); }
	static jint TAG_MAXP() { return get_static_field<"TAG_MAXP", jint>(); }
	static jint TAG_PREP() { return get_static_field<"TAG_PREP", jint>(); }
	static jint TAG_HMTX() { return get_static_field<"TAG_HMTX", jint>(); }
	static jint TAG_KERN() { return get_static_field<"TAG_KERN", jint>(); }
	static jint TAG_HDMX() { return get_static_field<"TAG_HDMX", jint>(); }
	static jint TAG_LOCA() { return get_static_field<"TAG_LOCA", jint>(); }
	static jint TAG_POST() { return get_static_field<"TAG_POST", jint>(); }
	static jint TAG_OS2() { return get_static_field<"TAG_OS2", jint>(); }
	static jint TAG_CVT() { return get_static_field<"TAG_CVT", jint>(); }
	static jint TAG_GASP() { return get_static_field<"TAG_GASP", jint>(); }
	static jint TAG_VDMX() { return get_static_field<"TAG_VDMX", jint>(); }
	static jint TAG_VMTX() { return get_static_field<"TAG_VMTX", jint>(); }
	static jint TAG_VHEA() { return get_static_field<"TAG_VHEA", jint>(); }
	static jint TAG_HHEA() { return get_static_field<"TAG_HHEA", jint>(); }
	static jint TAG_TYP1() { return get_static_field<"TAG_TYP1", jint>(); }
	static jint TAG_BSLN() { return get_static_field<"TAG_BSLN", jint>(); }
	static jint TAG_GSUB() { return get_static_field<"TAG_GSUB", jint>(); }
	static jint TAG_DSIG() { return get_static_field<"TAG_DSIG", jint>(); }
	static jint TAG_FPGM() { return get_static_field<"TAG_FPGM", jint>(); }
	static jint TAG_FVAR() { return get_static_field<"TAG_FVAR", jint>(); }
	static jint TAG_GVAR() { return get_static_field<"TAG_GVAR", jint>(); }
	static jint TAG_CFF() { return get_static_field<"TAG_CFF", jint>(); }
	static jint TAG_MMSD() { return get_static_field<"TAG_MMSD", jint>(); }
	static jint TAG_MMFX() { return get_static_field<"TAG_MMFX", jint>(); }
	static jint TAG_BASE() { return get_static_field<"TAG_BASE", jint>(); }
	static jint TAG_GDEF() { return get_static_field<"TAG_GDEF", jint>(); }
	static jint TAG_GPOS() { return get_static_field<"TAG_GPOS", jint>(); }
	static jint TAG_JSTF() { return get_static_field<"TAG_JSTF", jint>(); }
	static jint TAG_EBDT() { return get_static_field<"TAG_EBDT", jint>(); }
	static jint TAG_EBLC() { return get_static_field<"TAG_EBLC", jint>(); }
	static jint TAG_EBSC() { return get_static_field<"TAG_EBSC", jint>(); }
	static jint TAG_LTSH() { return get_static_field<"TAG_LTSH", jint>(); }
	static jint TAG_PCLT() { return get_static_field<"TAG_PCLT", jint>(); }
	static jint TAG_ACNT() { return get_static_field<"TAG_ACNT", jint>(); }
	static jint TAG_AVAR() { return get_static_field<"TAG_AVAR", jint>(); }
	static jint TAG_BDAT() { return get_static_field<"TAG_BDAT", jint>(); }
	static jint TAG_BLOC() { return get_static_field<"TAG_BLOC", jint>(); }
	static jint TAG_CVAR() { return get_static_field<"TAG_CVAR", jint>(); }
	static jint TAG_FEAT() { return get_static_field<"TAG_FEAT", jint>(); }
	static jint TAG_FDSC() { return get_static_field<"TAG_FDSC", jint>(); }
	static jint TAG_FMTX() { return get_static_field<"TAG_FMTX", jint>(); }
	static jint TAG_JUST() { return get_static_field<"TAG_JUST", jint>(); }
	static jint TAG_LCAR() { return get_static_field<"TAG_LCAR", jint>(); }
	static jint TAG_MORT() { return get_static_field<"TAG_MORT", jint>(); }
	static jint TAG_OPBD() { return get_static_field<"TAG_OPBD", jint>(); }
	static jint TAG_PROP() { return get_static_field<"TAG_PROP", jint>(); }
	static jint TAG_TRAK() { return get_static_field<"TAG_TRAK", jint>(); }

	jint getVersion() { return call_method<"getVersion", jint>(); }
	jni::ref<jni::array<jbyte>> getFontTable(jint p1) { return call_method<"getFontTable", jni::ref<jni::array<jbyte>>>(p1); }
	jni::ref<jni::array<jbyte>> getFontTable(jni::ref<java::lang::String> p1) { return call_method<"getFontTable", jni::ref<jni::array<jbyte>>>(p1); }
	jni::ref<jni::array<jbyte>> getFontTable(jint p1, jint p2, jint p3) { return call_method<"getFontTable", jni::ref<jni::array<jbyte>>>(p1, p2, p3); }
	jni::ref<jni::array<jbyte>> getFontTable(jni::ref<java::lang::String> p1, jint p2, jint p3) { return call_method<"getFontTable", jni::ref<jni::array<jbyte>>>(p1, p2, p3); }
	jint getFontTableSize(jint p1) { return call_method<"getFontTableSize", jint>(p1); }
	jint getFontTableSize(jni::ref<java::lang::String> p1) { return call_method<"getFontTableSize", jint>(p1); }

protected:

	OpenType(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_FONT_OPENTYPE
