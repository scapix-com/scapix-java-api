// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_AWT_FONT_STYLEDPARAGRAPH_FWD
#define SCAPIX_JAVA_API_JAVA_AWT_FONT_STYLEDPARAGRAPH_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::awt::font { class StyledParagraph; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::awt::font::StyledParagraph>
{
	static constexpr fixed_string class_name = "java/awt/font/StyledParagraph";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_FONT_STYLEDPARAGRAPH_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_AWT_FONT_STYLEDPARAGRAPH)
#define SCAPIX_JAVA_API_JAVA_AWT_FONT_STYLEDPARAGRAPH

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/text/AttributedCharacterIterator.h>
#include <scapix/java_api/sun/font/Decoration.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::awt::font::StyledParagraph : public jni::object_base<"java/awt/font/StyledParagraph",
	java::lang::Object>
{
public:

	static jni::ref<java::awt::font::StyledParagraph> new_object(jni::ref<java::text::AttributedCharacterIterator> p1, jni::ref<jni::array<jchar>> p2) { return base_::new_object(p1, p2); }
	static jni::ref<java::awt::font::StyledParagraph> insertChar(jni::ref<java::text::AttributedCharacterIterator> p1, jni::ref<jni::array<jchar>> p2, jint p3, jni::ref<java::awt::font::StyledParagraph> p4) { return call_static_method<"insertChar", jni::ref<java::awt::font::StyledParagraph>>(p1, p2, p3, p4); }
	static jni::ref<java::awt::font::StyledParagraph> deleteChar(jni::ref<java::text::AttributedCharacterIterator> p1, jni::ref<jni::array<jchar>> p2, jint p3, jni::ref<java::awt::font::StyledParagraph> p4) { return call_static_method<"deleteChar", jni::ref<java::awt::font::StyledParagraph>>(p1, p2, p3, p4); }
	jint getRunLimit(jint p1) { return call_method<"getRunLimit", jint>(p1); }
	jni::ref<sun::font::Decoration> getDecorationAt(jint p1) { return call_method<"getDecorationAt", jni::ref<sun::font::Decoration>>(p1); }
	jni::ref<java::lang::Object> getFontOrGraphicAt(jint p1) { return call_method<"getFontOrGraphicAt", jni::ref<java::lang::Object>>(p1); }

protected:

	StyledParagraph(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_FONT_STYLEDPARAGRAPH
