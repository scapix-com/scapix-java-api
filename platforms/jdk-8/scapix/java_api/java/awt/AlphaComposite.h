// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/awt/Composite.h>

#ifndef SCAPIX_JAVA_API_JAVA_AWT_ALPHACOMPOSITE_FWD
#define SCAPIX_JAVA_API_JAVA_AWT_ALPHACOMPOSITE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::awt { class AlphaComposite; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::awt::AlphaComposite>
{
	static constexpr fixed_string class_name = "java/awt/AlphaComposite";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::awt::Composite>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_ALPHACOMPOSITE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_AWT_ALPHACOMPOSITE)
#define SCAPIX_JAVA_API_JAVA_AWT_ALPHACOMPOSITE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/CompositeContext.h>
#include <scapix/java_api/java/awt/RenderingHints.h>
#include <scapix/java_api/java/awt/image/ColorModel.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::awt::AlphaComposite : public jni::object_base<"java/awt/AlphaComposite",
	java::lang::Object,
	java::awt::Composite>
{
public:

	static jint CLEAR() { return get_static_field<"CLEAR", jint>(); }
	static jint SRC() { return get_static_field<"SRC", jint>(); }
	static jint DST() { return get_static_field<"DST", jint>(); }
	static jint SRC_OVER() { return get_static_field<"SRC_OVER", jint>(); }
	static jint DST_OVER() { return get_static_field<"DST_OVER", jint>(); }
	static jint SRC_IN() { return get_static_field<"SRC_IN", jint>(); }
	static jint DST_IN() { return get_static_field<"DST_IN", jint>(); }
	static jint SRC_OUT() { return get_static_field<"SRC_OUT", jint>(); }
	static jint DST_OUT() { return get_static_field<"DST_OUT", jint>(); }
	static jint SRC_ATOP() { return get_static_field<"SRC_ATOP", jint>(); }
	static jint DST_ATOP() { return get_static_field<"DST_ATOP", jint>(); }
	static jint XOR() { return get_static_field<"XOR", jint>(); }
	static jni::ref<java::awt::AlphaComposite> Clear() { return get_static_field<"Clear", jni::ref<java::awt::AlphaComposite>>(); }
	static jni::ref<java::awt::AlphaComposite> Src() { return get_static_field<"Src", jni::ref<java::awt::AlphaComposite>>(); }
	static jni::ref<java::awt::AlphaComposite> Dst() { return get_static_field<"Dst", jni::ref<java::awt::AlphaComposite>>(); }
	static jni::ref<java::awt::AlphaComposite> SrcOver() { return get_static_field<"SrcOver", jni::ref<java::awt::AlphaComposite>>(); }
	static jni::ref<java::awt::AlphaComposite> DstOver() { return get_static_field<"DstOver", jni::ref<java::awt::AlphaComposite>>(); }
	static jni::ref<java::awt::AlphaComposite> SrcIn() { return get_static_field<"SrcIn", jni::ref<java::awt::AlphaComposite>>(); }
	static jni::ref<java::awt::AlphaComposite> DstIn() { return get_static_field<"DstIn", jni::ref<java::awt::AlphaComposite>>(); }
	static jni::ref<java::awt::AlphaComposite> SrcOut() { return get_static_field<"SrcOut", jni::ref<java::awt::AlphaComposite>>(); }
	static jni::ref<java::awt::AlphaComposite> DstOut() { return get_static_field<"DstOut", jni::ref<java::awt::AlphaComposite>>(); }
	static jni::ref<java::awt::AlphaComposite> SrcAtop() { return get_static_field<"SrcAtop", jni::ref<java::awt::AlphaComposite>>(); }
	static jni::ref<java::awt::AlphaComposite> DstAtop() { return get_static_field<"DstAtop", jni::ref<java::awt::AlphaComposite>>(); }
	static jni::ref<java::awt::AlphaComposite> Xor() { return get_static_field<"Xor", jni::ref<java::awt::AlphaComposite>>(); }

	static jni::ref<java::awt::AlphaComposite> getInstance(jint p1) { return call_static_method<"getInstance", jni::ref<java::awt::AlphaComposite>>(p1); }
	static jni::ref<java::awt::AlphaComposite> getInstance(jint p1, jfloat p2) { return call_static_method<"getInstance", jni::ref<java::awt::AlphaComposite>>(p1, p2); }
	jni::ref<java::awt::CompositeContext> createContext(jni::ref<java::awt::image::ColorModel> p1, jni::ref<java::awt::image::ColorModel> p2, jni::ref<java::awt::RenderingHints> p3) { return call_method<"createContext", jni::ref<java::awt::CompositeContext>>(p1, p2, p3); }
	jfloat getAlpha() { return call_method<"getAlpha", jfloat>(); }
	jint getRule() { return call_method<"getRule", jint>(); }
	jni::ref<java::awt::AlphaComposite> derive(jint p1) { return call_method<"derive", jni::ref<java::awt::AlphaComposite>>(p1); }
	jni::ref<java::awt::AlphaComposite> derive(jfloat p1) { return call_method<"derive", jni::ref<java::awt::AlphaComposite>>(p1); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jboolean equals(jni::ref<java::lang::Object> p1) { return call_method<"equals", jboolean>(p1); }

protected:

	AlphaComposite(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_ALPHACOMPOSITE
