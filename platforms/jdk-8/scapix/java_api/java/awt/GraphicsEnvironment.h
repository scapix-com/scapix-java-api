// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_AWT_GRAPHICSENVIRONMENT_FWD
#define SCAPIX_JAVA_API_JAVA_AWT_GRAPHICSENVIRONMENT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::awt { class GraphicsEnvironment; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::awt::GraphicsEnvironment>
{
	static constexpr fixed_string class_name = "java/awt/GraphicsEnvironment";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_GRAPHICSENVIRONMENT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_AWT_GRAPHICSENVIRONMENT)
#define SCAPIX_JAVA_API_JAVA_AWT_GRAPHICSENVIRONMENT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Font.h>
#include <scapix/java_api/java/awt/Graphics2D.h>
#include <scapix/java_api/java/awt/GraphicsDevice.h>
#include <scapix/java_api/java/awt/Point.h>
#include <scapix/java_api/java/awt/Rectangle.h>
#include <scapix/java_api/java/awt/image/BufferedImage.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Locale.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::awt::GraphicsEnvironment : public jni::object_base<"java/awt/GraphicsEnvironment",
	java::lang::Object>
{
public:

	static jni::ref<java::awt::GraphicsEnvironment> getLocalGraphicsEnvironment() { return call_static_method<"getLocalGraphicsEnvironment", jni::ref<java::awt::GraphicsEnvironment>>(); }
	static jboolean isHeadless() { return call_static_method<"isHeadless", jboolean>(); }
	jboolean isHeadlessInstance() { return call_method<"isHeadlessInstance", jboolean>(); }
	jni::ref<jni::array<java::awt::GraphicsDevice>> getScreenDevices() { return call_method<"getScreenDevices", jni::ref<jni::array<java::awt::GraphicsDevice>>>(); }
	jni::ref<java::awt::GraphicsDevice> getDefaultScreenDevice() { return call_method<"getDefaultScreenDevice", jni::ref<java::awt::GraphicsDevice>>(); }
	jni::ref<java::awt::Graphics2D> createGraphics(jni::ref<java::awt::image::BufferedImage> p1) { return call_method<"createGraphics", jni::ref<java::awt::Graphics2D>>(p1); }
	jni::ref<jni::array<java::awt::Font>> getAllFonts() { return call_method<"getAllFonts", jni::ref<jni::array<java::awt::Font>>>(); }
	jni::ref<jni::array<java::lang::String>> getAvailableFontFamilyNames() { return call_method<"getAvailableFontFamilyNames", jni::ref<jni::array<java::lang::String>>>(); }
	jni::ref<jni::array<java::lang::String>> getAvailableFontFamilyNames(jni::ref<java::util::Locale> p1) { return call_method<"getAvailableFontFamilyNames", jni::ref<jni::array<java::lang::String>>>(p1); }
	jboolean registerFont(jni::ref<java::awt::Font> p1) { return call_method<"registerFont", jboolean>(p1); }
	void preferLocaleFonts() { return call_method<"preferLocaleFonts", void>(); }
	void preferProportionalFonts() { return call_method<"preferProportionalFonts", void>(); }
	jni::ref<java::awt::Point> getCenterPoint() { return call_method<"getCenterPoint", jni::ref<java::awt::Point>>(); }
	jni::ref<java::awt::Rectangle> getMaximumWindowBounds() { return call_method<"getMaximumWindowBounds", jni::ref<java::awt::Rectangle>>(); }

protected:

	GraphicsEnvironment(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_GRAPHICSENVIRONMENT
