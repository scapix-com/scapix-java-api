// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/awt/Stroke.h>

#ifndef SCAPIX_JAVA_API_JAVA_AWT_BASICSTROKE_FWD
#define SCAPIX_JAVA_API_JAVA_AWT_BASICSTROKE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::awt { class BasicStroke; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::awt::BasicStroke>
{
	static constexpr fixed_string class_name = "java/awt/BasicStroke";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::awt::Stroke>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_BASICSTROKE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_AWT_BASICSTROKE)
#define SCAPIX_JAVA_API_JAVA_AWT_BASICSTROKE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Shape.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::awt::BasicStroke : public jni::object_base<"java/awt/BasicStroke",
	java::lang::Object,
	java::awt::Stroke>
{
public:

	static jint JOIN_MITER() { return get_static_field<"JOIN_MITER", jint>(); }
	static jint JOIN_ROUND() { return get_static_field<"JOIN_ROUND", jint>(); }
	static jint JOIN_BEVEL() { return get_static_field<"JOIN_BEVEL", jint>(); }
	static jint CAP_BUTT() { return get_static_field<"CAP_BUTT", jint>(); }
	static jint CAP_ROUND() { return get_static_field<"CAP_ROUND", jint>(); }
	static jint CAP_SQUARE() { return get_static_field<"CAP_SQUARE", jint>(); }

	static jni::ref<java::awt::BasicStroke> new_object(jfloat p1, jint p2, jint p3, jfloat p4, jni::ref<jni::array<jfloat>> p5, jfloat p6) { return base_::new_object(p1, p2, p3, p4, p5, p6); }
	static jni::ref<java::awt::BasicStroke> new_object(jfloat p1, jint p2, jint p3, jfloat p4) { return base_::new_object(p1, p2, p3, p4); }
	static jni::ref<java::awt::BasicStroke> new_object(jfloat p1, jint p2, jint p3) { return base_::new_object(p1, p2, p3); }
	static jni::ref<java::awt::BasicStroke> new_object(jfloat p1) { return base_::new_object(p1); }
	static jni::ref<java::awt::BasicStroke> new_object() { return base_::new_object(); }
	jni::ref<java::awt::Shape> createStrokedShape(jni::ref<java::awt::Shape> p1) { return call_method<"createStrokedShape", jni::ref<java::awt::Shape>>(p1); }
	jfloat getLineWidth() { return call_method<"getLineWidth", jfloat>(); }
	jint getEndCap() { return call_method<"getEndCap", jint>(); }
	jint getLineJoin() { return call_method<"getLineJoin", jint>(); }
	jfloat getMiterLimit() { return call_method<"getMiterLimit", jfloat>(); }
	jni::ref<jni::array<jfloat>> getDashArray() { return call_method<"getDashArray", jni::ref<jni::array<jfloat>>>(); }
	jfloat getDashPhase() { return call_method<"getDashPhase", jfloat>(); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jboolean equals(jni::ref<java::lang::Object> p1) { return call_method<"equals", jboolean>(p1); }

protected:

	BasicStroke(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_BASICSTROKE
