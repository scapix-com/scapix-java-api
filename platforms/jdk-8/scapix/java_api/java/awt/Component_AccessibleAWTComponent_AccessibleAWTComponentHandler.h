// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/awt/event/ComponentListener.h>

#ifndef SCAPIX_JAVA_API_JAVA_AWT_COMPONENT_ACCESSIBLEAWTCOMPONENT_ACCESSIBLEAWTCOMPONENTHANDLER_FWD
#define SCAPIX_JAVA_API_JAVA_AWT_COMPONENT_ACCESSIBLEAWTCOMPONENT_ACCESSIBLEAWTCOMPONENTHANDLER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::awt { class Component_AccessibleAWTComponent_AccessibleAWTComponentHandler; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::awt::Component_AccessibleAWTComponent_AccessibleAWTComponentHandler>
{
	static constexpr fixed_string class_name = "java/awt/Component$AccessibleAWTComponent$AccessibleAWTComponentHandler";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::awt::event::ComponentListener>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_COMPONENT_ACCESSIBLEAWTCOMPONENT_ACCESSIBLEAWTCOMPONENTHANDLER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_AWT_COMPONENT_ACCESSIBLEAWTCOMPONENT_ACCESSIBLEAWTCOMPONENTHANDLER)
#define SCAPIX_JAVA_API_JAVA_AWT_COMPONENT_ACCESSIBLEAWTCOMPONENT_ACCESSIBLEAWTCOMPONENTHANDLER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/event/ComponentEvent.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::awt::Component_AccessibleAWTComponent_AccessibleAWTComponentHandler : public jni::object_base<"java/awt/Component$AccessibleAWTComponent$AccessibleAWTComponentHandler",
	java::lang::Object,
	java::awt::event::ComponentListener>
{
public:

	void componentHidden(jni::ref<java::awt::event::ComponentEvent> p1) { return call_method<"componentHidden", void>(p1); }
	void componentShown(jni::ref<java::awt::event::ComponentEvent> p1) { return call_method<"componentShown", void>(p1); }
	void componentMoved(jni::ref<java::awt::event::ComponentEvent> p1) { return call_method<"componentMoved", void>(p1); }
	void componentResized(jni::ref<java::awt::event::ComponentEvent> p1) { return call_method<"componentResized", void>(p1); }

protected:

	Component_AccessibleAWTComponent_AccessibleAWTComponentHandler(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_COMPONENT_ACCESSIBLEAWTCOMPONENT_ACCESSIBLEAWTCOMPONENTHANDLER
