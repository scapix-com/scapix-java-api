// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_AWT_PEER_TRAYICONPEER_FWD
#define SCAPIX_JAVA_API_JAVA_AWT_PEER_TRAYICONPEER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::awt::peer { class TrayIconPeer; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::awt::peer::TrayIconPeer>
{
	static constexpr fixed_string class_name = "java/awt/peer/TrayIconPeer";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_PEER_TRAYICONPEER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_AWT_PEER_TRAYICONPEER)
#define SCAPIX_JAVA_API_JAVA_AWT_PEER_TRAYICONPEER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::awt::peer::TrayIconPeer : public jni::object_base<"java/awt/peer/TrayIconPeer",
	java::lang::Object>
{
public:

	void dispose() { return call_method<"dispose", void>(); }
	void setToolTip(jni::ref<java::lang::String> p1) { return call_method<"setToolTip", void>(p1); }
	void updateImage() { return call_method<"updateImage", void>(); }
	void displayMessage(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2, jni::ref<java::lang::String> p3) { return call_method<"displayMessage", void>(p1, p2, p3); }
	void showPopupMenu(jint p1, jint p2) { return call_method<"showPopupMenu", void>(p1, p2); }

protected:

	TrayIconPeer(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_PEER_TRAYICONPEER
