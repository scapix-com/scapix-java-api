// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/awt/peer/ComponentPeer.h>

#ifndef SCAPIX_JAVA_API_JAVA_AWT_PEER_LISTPEER_FWD
#define SCAPIX_JAVA_API_JAVA_AWT_PEER_LISTPEER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::awt::peer { class ListPeer; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::awt::peer::ListPeer>
{
	static constexpr fixed_string class_name = "java/awt/peer/ListPeer";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::awt::peer::ComponentPeer>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_PEER_LISTPEER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_AWT_PEER_LISTPEER)
#define SCAPIX_JAVA_API_JAVA_AWT_PEER_LISTPEER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Dimension.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::awt::peer::ListPeer : public jni::object_base<"java/awt/peer/ListPeer",
	java::lang::Object,
	java::awt::peer::ComponentPeer>
{
public:

	jni::ref<jni::array<jint>> getSelectedIndexes() { return call_method<"getSelectedIndexes", jni::ref<jni::array<jint>>>(); }
	void add(jni::ref<java::lang::String> p1, jint p2) { return call_method<"add", void>(p1, p2); }
	void delItems(jint p1, jint p2) { return call_method<"delItems", void>(p1, p2); }
	void removeAll() { return call_method<"removeAll", void>(); }
	void select(jint p1) { return call_method<"select", void>(p1); }
	void deselect(jint p1) { return call_method<"deselect", void>(p1); }
	void makeVisible(jint p1) { return call_method<"makeVisible", void>(p1); }
	void setMultipleMode(jboolean p1) { return call_method<"setMultipleMode", void>(p1); }
	jni::ref<java::awt::Dimension> getPreferredSize(jint p1) { return call_method<"getPreferredSize", jni::ref<java::awt::Dimension>>(p1); }
	jni::ref<java::awt::Dimension> getMinimumSize(jint p1) { return call_method<"getMinimumSize", jni::ref<java::awt::Dimension>>(p1); }

protected:

	ListPeer(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_PEER_LISTPEER
