// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/awt/peer/ContainerPeer.h>

#ifndef SCAPIX_JAVA_API_JAVA_AWT_PEER_WINDOWPEER_FWD
#define SCAPIX_JAVA_API_JAVA_AWT_PEER_WINDOWPEER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::awt::peer { class WindowPeer; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::awt::peer::WindowPeer>
{
	static constexpr fixed_string class_name = "java/awt/peer/WindowPeer";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::awt::peer::ContainerPeer>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_PEER_WINDOWPEER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_AWT_PEER_WINDOWPEER)
#define SCAPIX_JAVA_API_JAVA_AWT_PEER_WINDOWPEER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Dialog.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::awt::peer::WindowPeer : public jni::object_base<"java/awt/peer/WindowPeer",
	java::lang::Object,
	java::awt::peer::ContainerPeer>
{
public:

	void toFront() { return call_method<"toFront", void>(); }
	void toBack() { return call_method<"toBack", void>(); }
	void updateAlwaysOnTopState() { return call_method<"updateAlwaysOnTopState", void>(); }
	void updateFocusableWindowState() { return call_method<"updateFocusableWindowState", void>(); }
	void setModalBlocked(jni::ref<java::awt::Dialog> p1, jboolean p2) { return call_method<"setModalBlocked", void>(p1, p2); }
	void updateMinimumSize() { return call_method<"updateMinimumSize", void>(); }
	void updateIconImages() { return call_method<"updateIconImages", void>(); }
	void setOpacity(jfloat p1) { return call_method<"setOpacity", void>(p1); }
	void setOpaque(jboolean p1) { return call_method<"setOpaque", void>(p1); }
	void updateWindow() { return call_method<"updateWindow", void>(); }
	void repositionSecurityWarning() { return call_method<"repositionSecurityWarning", void>(); }

protected:

	WindowPeer(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_PEER_WINDOWPEER
