// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/awt/event/ComponentListener.h>
#include <scapix/java_api/java/awt/event/ContainerListener.h>
#include <scapix/java_api/java/awt/event/FocusListener.h>
#include <scapix/java_api/java/awt/event/KeyListener.h>
#include <scapix/java_api/java/awt/event/MouseListener.h>
#include <scapix/java_api/java/awt/event/MouseMotionListener.h>
#include <scapix/java_api/java/awt/event/WindowListener.h>
#include <scapix/java_api/java/awt/event/WindowFocusListener.h>
#include <scapix/java_api/java/awt/event/WindowStateListener.h>
#include <scapix/java_api/java/awt/event/ActionListener.h>
#include <scapix/java_api/java/awt/event/ItemListener.h>
#include <scapix/java_api/java/awt/event/AdjustmentListener.h>
#include <scapix/java_api/java/awt/event/TextListener.h>
#include <scapix/java_api/java/awt/event/InputMethodListener.h>
#include <scapix/java_api/java/awt/event/HierarchyListener.h>
#include <scapix/java_api/java/awt/event/HierarchyBoundsListener.h>
#include <scapix/java_api/java/awt/event/MouseWheelListener.h>

#ifndef SCAPIX_JAVA_API_JAVA_AWT_AWTEVENTMULTICASTER_FWD
#define SCAPIX_JAVA_API_JAVA_AWT_AWTEVENTMULTICASTER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::awt { class AWTEventMulticaster; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::awt::AWTEventMulticaster>
{
	static constexpr fixed_string class_name = "java/awt/AWTEventMulticaster";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::awt::event::ComponentListener, scapix::java_api::java::awt::event::ContainerListener, scapix::java_api::java::awt::event::FocusListener, scapix::java_api::java::awt::event::KeyListener, scapix::java_api::java::awt::event::MouseListener, scapix::java_api::java::awt::event::MouseMotionListener, scapix::java_api::java::awt::event::WindowListener, scapix::java_api::java::awt::event::WindowFocusListener, scapix::java_api::java::awt::event::WindowStateListener, scapix::java_api::java::awt::event::ActionListener, scapix::java_api::java::awt::event::ItemListener, scapix::java_api::java::awt::event::AdjustmentListener, scapix::java_api::java::awt::event::TextListener, scapix::java_api::java::awt::event::InputMethodListener, scapix::java_api::java::awt::event::HierarchyListener, scapix::java_api::java::awt::event::HierarchyBoundsListener, scapix::java_api::java::awt::event::MouseWheelListener>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_AWTEVENTMULTICASTER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_AWT_AWTEVENTMULTICASTER)
#define SCAPIX_JAVA_API_JAVA_AWT_AWTEVENTMULTICASTER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/event/ActionEvent.h>
#include <scapix/java_api/java/awt/event/AdjustmentEvent.h>
#include <scapix/java_api/java/awt/event/ComponentEvent.h>
#include <scapix/java_api/java/awt/event/ContainerEvent.h>
#include <scapix/java_api/java/awt/event/FocusEvent.h>
#include <scapix/java_api/java/awt/event/HierarchyEvent.h>
#include <scapix/java_api/java/awt/event/InputMethodEvent.h>
#include <scapix/java_api/java/awt/event/ItemEvent.h>
#include <scapix/java_api/java/awt/event/KeyEvent.h>
#include <scapix/java_api/java/awt/event/MouseEvent.h>
#include <scapix/java_api/java/awt/event/MouseWheelEvent.h>
#include <scapix/java_api/java/awt/event/TextEvent.h>
#include <scapix/java_api/java/awt/event/WindowEvent.h>
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/util/EventListener.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::awt::AWTEventMulticaster : public jni::object_base<"java/awt/AWTEventMulticaster",
	java::lang::Object,
	java::awt::event::ComponentListener,
	java::awt::event::ContainerListener,
	java::awt::event::FocusListener,
	java::awt::event::KeyListener,
	java::awt::event::MouseListener,
	java::awt::event::MouseMotionListener,
	java::awt::event::WindowListener,
	java::awt::event::WindowFocusListener,
	java::awt::event::WindowStateListener,
	java::awt::event::ActionListener,
	java::awt::event::ItemListener,
	java::awt::event::AdjustmentListener,
	java::awt::event::TextListener,
	java::awt::event::InputMethodListener,
	java::awt::event::HierarchyListener,
	java::awt::event::HierarchyBoundsListener,
	java::awt::event::MouseWheelListener>
{
public:

	void componentResized(jni::ref<java::awt::event::ComponentEvent> p1) { return call_method<"componentResized", void>(p1); }
	void componentMoved(jni::ref<java::awt::event::ComponentEvent> p1) { return call_method<"componentMoved", void>(p1); }
	void componentShown(jni::ref<java::awt::event::ComponentEvent> p1) { return call_method<"componentShown", void>(p1); }
	void componentHidden(jni::ref<java::awt::event::ComponentEvent> p1) { return call_method<"componentHidden", void>(p1); }
	void componentAdded(jni::ref<java::awt::event::ContainerEvent> p1) { return call_method<"componentAdded", void>(p1); }
	void componentRemoved(jni::ref<java::awt::event::ContainerEvent> p1) { return call_method<"componentRemoved", void>(p1); }
	void focusGained(jni::ref<java::awt::event::FocusEvent> p1) { return call_method<"focusGained", void>(p1); }
	void focusLost(jni::ref<java::awt::event::FocusEvent> p1) { return call_method<"focusLost", void>(p1); }
	void keyTyped(jni::ref<java::awt::event::KeyEvent> p1) { return call_method<"keyTyped", void>(p1); }
	void keyPressed(jni::ref<java::awt::event::KeyEvent> p1) { return call_method<"keyPressed", void>(p1); }
	void keyReleased(jni::ref<java::awt::event::KeyEvent> p1) { return call_method<"keyReleased", void>(p1); }
	void mouseClicked(jni::ref<java::awt::event::MouseEvent> p1) { return call_method<"mouseClicked", void>(p1); }
	void mousePressed(jni::ref<java::awt::event::MouseEvent> p1) { return call_method<"mousePressed", void>(p1); }
	void mouseReleased(jni::ref<java::awt::event::MouseEvent> p1) { return call_method<"mouseReleased", void>(p1); }
	void mouseEntered(jni::ref<java::awt::event::MouseEvent> p1) { return call_method<"mouseEntered", void>(p1); }
	void mouseExited(jni::ref<java::awt::event::MouseEvent> p1) { return call_method<"mouseExited", void>(p1); }
	void mouseDragged(jni::ref<java::awt::event::MouseEvent> p1) { return call_method<"mouseDragged", void>(p1); }
	void mouseMoved(jni::ref<java::awt::event::MouseEvent> p1) { return call_method<"mouseMoved", void>(p1); }
	void windowOpened(jni::ref<java::awt::event::WindowEvent> p1) { return call_method<"windowOpened", void>(p1); }
	void windowClosing(jni::ref<java::awt::event::WindowEvent> p1) { return call_method<"windowClosing", void>(p1); }
	void windowClosed(jni::ref<java::awt::event::WindowEvent> p1) { return call_method<"windowClosed", void>(p1); }
	void windowIconified(jni::ref<java::awt::event::WindowEvent> p1) { return call_method<"windowIconified", void>(p1); }
	void windowDeiconified(jni::ref<java::awt::event::WindowEvent> p1) { return call_method<"windowDeiconified", void>(p1); }
	void windowActivated(jni::ref<java::awt::event::WindowEvent> p1) { return call_method<"windowActivated", void>(p1); }
	void windowDeactivated(jni::ref<java::awt::event::WindowEvent> p1) { return call_method<"windowDeactivated", void>(p1); }
	void windowStateChanged(jni::ref<java::awt::event::WindowEvent> p1) { return call_method<"windowStateChanged", void>(p1); }
	void windowGainedFocus(jni::ref<java::awt::event::WindowEvent> p1) { return call_method<"windowGainedFocus", void>(p1); }
	void windowLostFocus(jni::ref<java::awt::event::WindowEvent> p1) { return call_method<"windowLostFocus", void>(p1); }
	void actionPerformed(jni::ref<java::awt::event::ActionEvent> p1) { return call_method<"actionPerformed", void>(p1); }
	void itemStateChanged(jni::ref<java::awt::event::ItemEvent> p1) { return call_method<"itemStateChanged", void>(p1); }
	void adjustmentValueChanged(jni::ref<java::awt::event::AdjustmentEvent> p1) { return call_method<"adjustmentValueChanged", void>(p1); }
	void textValueChanged(jni::ref<java::awt::event::TextEvent> p1) { return call_method<"textValueChanged", void>(p1); }
	void inputMethodTextChanged(jni::ref<java::awt::event::InputMethodEvent> p1) { return call_method<"inputMethodTextChanged", void>(p1); }
	void caretPositionChanged(jni::ref<java::awt::event::InputMethodEvent> p1) { return call_method<"caretPositionChanged", void>(p1); }
	void hierarchyChanged(jni::ref<java::awt::event::HierarchyEvent> p1) { return call_method<"hierarchyChanged", void>(p1); }
	void ancestorMoved(jni::ref<java::awt::event::HierarchyEvent> p1) { return call_method<"ancestorMoved", void>(p1); }
	void ancestorResized(jni::ref<java::awt::event::HierarchyEvent> p1) { return call_method<"ancestorResized", void>(p1); }
	void mouseWheelMoved(jni::ref<java::awt::event::MouseWheelEvent> p1) { return call_method<"mouseWheelMoved", void>(p1); }
	static jni::ref<java::awt::event::ComponentListener> add(jni::ref<java::awt::event::ComponentListener> p1, jni::ref<java::awt::event::ComponentListener> p2) { return call_static_method<"add", jni::ref<java::awt::event::ComponentListener>>(p1, p2); }
	static jni::ref<java::awt::event::ContainerListener> add(jni::ref<java::awt::event::ContainerListener> p1, jni::ref<java::awt::event::ContainerListener> p2) { return call_static_method<"add", jni::ref<java::awt::event::ContainerListener>>(p1, p2); }
	static jni::ref<java::awt::event::FocusListener> add(jni::ref<java::awt::event::FocusListener> p1, jni::ref<java::awt::event::FocusListener> p2) { return call_static_method<"add", jni::ref<java::awt::event::FocusListener>>(p1, p2); }
	static jni::ref<java::awt::event::KeyListener> add(jni::ref<java::awt::event::KeyListener> p1, jni::ref<java::awt::event::KeyListener> p2) { return call_static_method<"add", jni::ref<java::awt::event::KeyListener>>(p1, p2); }
	static jni::ref<java::awt::event::MouseListener> add(jni::ref<java::awt::event::MouseListener> p1, jni::ref<java::awt::event::MouseListener> p2) { return call_static_method<"add", jni::ref<java::awt::event::MouseListener>>(p1, p2); }
	static jni::ref<java::awt::event::MouseMotionListener> add(jni::ref<java::awt::event::MouseMotionListener> p1, jni::ref<java::awt::event::MouseMotionListener> p2) { return call_static_method<"add", jni::ref<java::awt::event::MouseMotionListener>>(p1, p2); }
	static jni::ref<java::awt::event::WindowListener> add(jni::ref<java::awt::event::WindowListener> p1, jni::ref<java::awt::event::WindowListener> p2) { return call_static_method<"add", jni::ref<java::awt::event::WindowListener>>(p1, p2); }
	static jni::ref<java::awt::event::WindowStateListener> add(jni::ref<java::awt::event::WindowStateListener> p1, jni::ref<java::awt::event::WindowStateListener> p2) { return call_static_method<"add", jni::ref<java::awt::event::WindowStateListener>>(p1, p2); }
	static jni::ref<java::awt::event::WindowFocusListener> add(jni::ref<java::awt::event::WindowFocusListener> p1, jni::ref<java::awt::event::WindowFocusListener> p2) { return call_static_method<"add", jni::ref<java::awt::event::WindowFocusListener>>(p1, p2); }
	static jni::ref<java::awt::event::ActionListener> add(jni::ref<java::awt::event::ActionListener> p1, jni::ref<java::awt::event::ActionListener> p2) { return call_static_method<"add", jni::ref<java::awt::event::ActionListener>>(p1, p2); }
	static jni::ref<java::awt::event::ItemListener> add(jni::ref<java::awt::event::ItemListener> p1, jni::ref<java::awt::event::ItemListener> p2) { return call_static_method<"add", jni::ref<java::awt::event::ItemListener>>(p1, p2); }
	static jni::ref<java::awt::event::AdjustmentListener> add(jni::ref<java::awt::event::AdjustmentListener> p1, jni::ref<java::awt::event::AdjustmentListener> p2) { return call_static_method<"add", jni::ref<java::awt::event::AdjustmentListener>>(p1, p2); }
	static jni::ref<java::awt::event::TextListener> add(jni::ref<java::awt::event::TextListener> p1, jni::ref<java::awt::event::TextListener> p2) { return call_static_method<"add", jni::ref<java::awt::event::TextListener>>(p1, p2); }
	static jni::ref<java::awt::event::InputMethodListener> add(jni::ref<java::awt::event::InputMethodListener> p1, jni::ref<java::awt::event::InputMethodListener> p2) { return call_static_method<"add", jni::ref<java::awt::event::InputMethodListener>>(p1, p2); }
	static jni::ref<java::awt::event::HierarchyListener> add(jni::ref<java::awt::event::HierarchyListener> p1, jni::ref<java::awt::event::HierarchyListener> p2) { return call_static_method<"add", jni::ref<java::awt::event::HierarchyListener>>(p1, p2); }
	static jni::ref<java::awt::event::HierarchyBoundsListener> add(jni::ref<java::awt::event::HierarchyBoundsListener> p1, jni::ref<java::awt::event::HierarchyBoundsListener> p2) { return call_static_method<"add", jni::ref<java::awt::event::HierarchyBoundsListener>>(p1, p2); }
	static jni::ref<java::awt::event::MouseWheelListener> add(jni::ref<java::awt::event::MouseWheelListener> p1, jni::ref<java::awt::event::MouseWheelListener> p2) { return call_static_method<"add", jni::ref<java::awt::event::MouseWheelListener>>(p1, p2); }
	static jni::ref<java::awt::event::ComponentListener> remove(jni::ref<java::awt::event::ComponentListener> p1, jni::ref<java::awt::event::ComponentListener> p2) { return call_static_method<"remove", jni::ref<java::awt::event::ComponentListener>>(p1, p2); }
	static jni::ref<java::awt::event::ContainerListener> remove(jni::ref<java::awt::event::ContainerListener> p1, jni::ref<java::awt::event::ContainerListener> p2) { return call_static_method<"remove", jni::ref<java::awt::event::ContainerListener>>(p1, p2); }
	static jni::ref<java::awt::event::FocusListener> remove(jni::ref<java::awt::event::FocusListener> p1, jni::ref<java::awt::event::FocusListener> p2) { return call_static_method<"remove", jni::ref<java::awt::event::FocusListener>>(p1, p2); }
	static jni::ref<java::awt::event::KeyListener> remove(jni::ref<java::awt::event::KeyListener> p1, jni::ref<java::awt::event::KeyListener> p2) { return call_static_method<"remove", jni::ref<java::awt::event::KeyListener>>(p1, p2); }
	static jni::ref<java::awt::event::MouseListener> remove(jni::ref<java::awt::event::MouseListener> p1, jni::ref<java::awt::event::MouseListener> p2) { return call_static_method<"remove", jni::ref<java::awt::event::MouseListener>>(p1, p2); }
	static jni::ref<java::awt::event::MouseMotionListener> remove(jni::ref<java::awt::event::MouseMotionListener> p1, jni::ref<java::awt::event::MouseMotionListener> p2) { return call_static_method<"remove", jni::ref<java::awt::event::MouseMotionListener>>(p1, p2); }
	static jni::ref<java::awt::event::WindowListener> remove(jni::ref<java::awt::event::WindowListener> p1, jni::ref<java::awt::event::WindowListener> p2) { return call_static_method<"remove", jni::ref<java::awt::event::WindowListener>>(p1, p2); }
	static jni::ref<java::awt::event::WindowStateListener> remove(jni::ref<java::awt::event::WindowStateListener> p1, jni::ref<java::awt::event::WindowStateListener> p2) { return call_static_method<"remove", jni::ref<java::awt::event::WindowStateListener>>(p1, p2); }
	static jni::ref<java::awt::event::WindowFocusListener> remove(jni::ref<java::awt::event::WindowFocusListener> p1, jni::ref<java::awt::event::WindowFocusListener> p2) { return call_static_method<"remove", jni::ref<java::awt::event::WindowFocusListener>>(p1, p2); }
	static jni::ref<java::awt::event::ActionListener> remove(jni::ref<java::awt::event::ActionListener> p1, jni::ref<java::awt::event::ActionListener> p2) { return call_static_method<"remove", jni::ref<java::awt::event::ActionListener>>(p1, p2); }
	static jni::ref<java::awt::event::ItemListener> remove(jni::ref<java::awt::event::ItemListener> p1, jni::ref<java::awt::event::ItemListener> p2) { return call_static_method<"remove", jni::ref<java::awt::event::ItemListener>>(p1, p2); }
	static jni::ref<java::awt::event::AdjustmentListener> remove(jni::ref<java::awt::event::AdjustmentListener> p1, jni::ref<java::awt::event::AdjustmentListener> p2) { return call_static_method<"remove", jni::ref<java::awt::event::AdjustmentListener>>(p1, p2); }
	static jni::ref<java::awt::event::TextListener> remove(jni::ref<java::awt::event::TextListener> p1, jni::ref<java::awt::event::TextListener> p2) { return call_static_method<"remove", jni::ref<java::awt::event::TextListener>>(p1, p2); }
	static jni::ref<java::awt::event::InputMethodListener> remove(jni::ref<java::awt::event::InputMethodListener> p1, jni::ref<java::awt::event::InputMethodListener> p2) { return call_static_method<"remove", jni::ref<java::awt::event::InputMethodListener>>(p1, p2); }
	static jni::ref<java::awt::event::HierarchyListener> remove(jni::ref<java::awt::event::HierarchyListener> p1, jni::ref<java::awt::event::HierarchyListener> p2) { return call_static_method<"remove", jni::ref<java::awt::event::HierarchyListener>>(p1, p2); }
	static jni::ref<java::awt::event::HierarchyBoundsListener> remove(jni::ref<java::awt::event::HierarchyBoundsListener> p1, jni::ref<java::awt::event::HierarchyBoundsListener> p2) { return call_static_method<"remove", jni::ref<java::awt::event::HierarchyBoundsListener>>(p1, p2); }
	static jni::ref<java::awt::event::MouseWheelListener> remove(jni::ref<java::awt::event::MouseWheelListener> p1, jni::ref<java::awt::event::MouseWheelListener> p2) { return call_static_method<"remove", jni::ref<java::awt::event::MouseWheelListener>>(p1, p2); }
	static jni::ref<jni::array<java::util::EventListener>> getListeners(jni::ref<java::util::EventListener> p1, jni::ref<java::lang::Class> p2) { return call_static_method<"getListeners", jni::ref<jni::array<java::util::EventListener>>>(p1, p2); }

protected:

	AWTEventMulticaster(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_AWTEVENTMULTICASTER
