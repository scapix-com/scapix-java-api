// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/awt/geom/Point2D.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_API_JAVA_AWT_POINT_FWD
#define SCAPIX_JAVA_API_JAVA_AWT_POINT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::awt { class Point; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::awt::Point>
{
	static constexpr fixed_string class_name = "java/awt/Point";
	using base_classes = std::tuple<scapix::java_api::java::awt::geom::Point2D, scapix::java_api::java::io::Serializable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_POINT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_AWT_POINT)
#define SCAPIX_JAVA_API_JAVA_AWT_POINT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::awt::Point : public jni::object_base<"java/awt/Point",
	java::awt::geom::Point2D,
	java::io::Serializable>
{
public:

	jint x() { return get_field<"x", jint>(); }
	void x(jint v) { set_field<"x", jint>(v); }
	jint y() { return get_field<"y", jint>(); }
	void y(jint v) { set_field<"y", jint>(v); }

	static jni::ref<java::awt::Point> new_object() { return base_::new_object(); }
	static jni::ref<java::awt::Point> new_object(jni::ref<java::awt::Point> p1) { return base_::new_object(p1); }
	static jni::ref<java::awt::Point> new_object(jint p1, jint p2) { return base_::new_object(p1, p2); }
	jdouble getX() { return call_method<"getX", jdouble>(); }
	jdouble getY() { return call_method<"getY", jdouble>(); }
	jni::ref<java::awt::Point> getLocation() { return call_method<"getLocation", jni::ref<java::awt::Point>>(); }
	void setLocation(jni::ref<java::awt::Point> p1) { return call_method<"setLocation", void>(p1); }
	void setLocation(jint p1, jint p2) { return call_method<"setLocation", void>(p1, p2); }
	void setLocation(jdouble p1, jdouble p2) { return call_method<"setLocation", void>(p1, p2); }
	void move(jint p1, jint p2) { return call_method<"move", void>(p1, p2); }
	void translate(jint p1, jint p2) { return call_method<"translate", void>(p1, p2); }
	jboolean equals(jni::ref<java::lang::Object> p1) { return call_method<"equals", jboolean>(p1); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	Point(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_POINT
