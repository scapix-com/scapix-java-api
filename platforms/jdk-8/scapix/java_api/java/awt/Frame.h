// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/awt/Window.h>
#include <scapix/java_api/java/awt/MenuContainer.h>

#ifndef SCAPIX_JAVA_API_JAVA_AWT_FRAME_FWD
#define SCAPIX_JAVA_API_JAVA_AWT_FRAME_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::awt { class Frame; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::awt::Frame>
{
	static constexpr fixed_string class_name = "java/awt/Frame";
	using base_classes = std::tuple<scapix::java_api::java::awt::Window, scapix::java_api::java::awt::MenuContainer>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_FRAME_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_AWT_FRAME)
#define SCAPIX_JAVA_API_JAVA_AWT_FRAME

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/awt/Color.h>
#include <scapix/java_api/java/awt/GraphicsConfiguration.h>
#include <scapix/java_api/java/awt/Image.h>
#include <scapix/java_api/java/awt/MenuBar.h>
#include <scapix/java_api/java/awt/MenuComponent.h>
#include <scapix/java_api/java/awt/Rectangle.h>
#include <scapix/java_api/java/awt/Shape.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/accessibility/AccessibleContext.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::awt::Frame : public jni::object_base<"java/awt/Frame",
	java::awt::Window,
	java::awt::MenuContainer>
{
public:

	static jint DEFAULT_CURSOR() { return get_static_field<"DEFAULT_CURSOR", jint>(); }
	static jint CROSSHAIR_CURSOR() { return get_static_field<"CROSSHAIR_CURSOR", jint>(); }
	static jint TEXT_CURSOR() { return get_static_field<"TEXT_CURSOR", jint>(); }
	static jint WAIT_CURSOR() { return get_static_field<"WAIT_CURSOR", jint>(); }
	static jint SW_RESIZE_CURSOR() { return get_static_field<"SW_RESIZE_CURSOR", jint>(); }
	static jint SE_RESIZE_CURSOR() { return get_static_field<"SE_RESIZE_CURSOR", jint>(); }
	static jint NW_RESIZE_CURSOR() { return get_static_field<"NW_RESIZE_CURSOR", jint>(); }
	static jint NE_RESIZE_CURSOR() { return get_static_field<"NE_RESIZE_CURSOR", jint>(); }
	static jint N_RESIZE_CURSOR() { return get_static_field<"N_RESIZE_CURSOR", jint>(); }
	static jint S_RESIZE_CURSOR() { return get_static_field<"S_RESIZE_CURSOR", jint>(); }
	static jint W_RESIZE_CURSOR() { return get_static_field<"W_RESIZE_CURSOR", jint>(); }
	static jint E_RESIZE_CURSOR() { return get_static_field<"E_RESIZE_CURSOR", jint>(); }
	static jint HAND_CURSOR() { return get_static_field<"HAND_CURSOR", jint>(); }
	static jint MOVE_CURSOR() { return get_static_field<"MOVE_CURSOR", jint>(); }
	static jint NORMAL() { return get_static_field<"NORMAL", jint>(); }
	static jint ICONIFIED() { return get_static_field<"ICONIFIED", jint>(); }
	static jint MAXIMIZED_HORIZ() { return get_static_field<"MAXIMIZED_HORIZ", jint>(); }
	static jint MAXIMIZED_VERT() { return get_static_field<"MAXIMIZED_VERT", jint>(); }
	static jint MAXIMIZED_BOTH() { return get_static_field<"MAXIMIZED_BOTH", jint>(); }

	static jni::ref<java::awt::Frame> new_object() { return base_::new_object(); }
	static jni::ref<java::awt::Frame> new_object(jni::ref<java::awt::GraphicsConfiguration> p1) { return base_::new_object(p1); }
	static jni::ref<java::awt::Frame> new_object(jni::ref<java::lang::String> p1) { return base_::new_object(p1); }
	static jni::ref<java::awt::Frame> new_object(jni::ref<java::lang::String> p1, jni::ref<java::awt::GraphicsConfiguration> p2) { return base_::new_object(p1, p2); }
	void addNotify() { return call_method<"addNotify", void>(); }
	jni::ref<java::lang::String> getTitle() { return call_method<"getTitle", jni::ref<java::lang::String>>(); }
	void setTitle(jni::ref<java::lang::String> p1) { return call_method<"setTitle", void>(p1); }
	jni::ref<java::awt::Image> getIconImage() { return call_method<"getIconImage", jni::ref<java::awt::Image>>(); }
	void setIconImage(jni::ref<java::awt::Image> p1) { return call_method<"setIconImage", void>(p1); }
	jni::ref<java::awt::MenuBar> getMenuBar() { return call_method<"getMenuBar", jni::ref<java::awt::MenuBar>>(); }
	void setMenuBar(jni::ref<java::awt::MenuBar> p1) { return call_method<"setMenuBar", void>(p1); }
	jboolean isResizable() { return call_method<"isResizable", jboolean>(); }
	void setResizable(jboolean p1) { return call_method<"setResizable", void>(p1); }
	void setState(jint p1) { return call_method<"setState", void>(p1); }
	void setExtendedState(jint p1) { return call_method<"setExtendedState", void>(p1); }
	jint getState() { return call_method<"getState", jint>(); }
	jint getExtendedState() { return call_method<"getExtendedState", jint>(); }
	void setMaximizedBounds(jni::ref<java::awt::Rectangle> p1) { return call_method<"setMaximizedBounds", void>(p1); }
	jni::ref<java::awt::Rectangle> getMaximizedBounds() { return call_method<"getMaximizedBounds", jni::ref<java::awt::Rectangle>>(); }
	void setUndecorated(jboolean p1) { return call_method<"setUndecorated", void>(p1); }
	jboolean isUndecorated() { return call_method<"isUndecorated", jboolean>(); }
	void setOpacity(jfloat p1) { return call_method<"setOpacity", void>(p1); }
	void setShape(jni::ref<java::awt::Shape> p1) { return call_method<"setShape", void>(p1); }
	void setBackground(jni::ref<java::awt::Color> p1) { return call_method<"setBackground", void>(p1); }
	void remove(jni::ref<java::awt::MenuComponent> p1) { return call_method<"remove", void>(p1); }
	void removeNotify() { return call_method<"removeNotify", void>(); }
	void setCursor(jint p1) { return call_method<"setCursor", void>(p1); }
	jint getCursorType() { return call_method<"getCursorType", jint>(); }
	static jni::ref<jni::array<java::awt::Frame>> getFrames() { return call_static_method<"getFrames", jni::ref<jni::array<java::awt::Frame>>>(); }
	jni::ref<javax::accessibility::AccessibleContext> getAccessibleContext() { return call_method<"getAccessibleContext", jni::ref<javax::accessibility::AccessibleContext>>(); }

protected:

	Frame(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_AWT_FRAME
