// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_RMI_REGISTRY_REGISTRYHANDLER_FWD
#define SCAPIX_JAVA_API_JAVA_RMI_REGISTRY_REGISTRYHANDLER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::rmi::registry { class RegistryHandler; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::rmi::registry::RegistryHandler>
{
	static constexpr fixed_string class_name = "java/rmi/registry/RegistryHandler";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_RMI_REGISTRY_REGISTRYHANDLER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_RMI_REGISTRY_REGISTRYHANDLER)
#define SCAPIX_JAVA_API_JAVA_RMI_REGISTRY_REGISTRYHANDLER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/rmi/registry/Registry.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::rmi::registry::RegistryHandler : public jni::object_base<"java/rmi/registry/RegistryHandler",
	java::lang::Object>
{
public:

	jni::ref<java::rmi::registry::Registry> registryStub(jni::ref<java::lang::String> p1, jint p2) { return call_method<"registryStub", jni::ref<java::rmi::registry::Registry>>(p1, p2); }
	jni::ref<java::rmi::registry::Registry> registryImpl(jint p1) { return call_method<"registryImpl", jni::ref<java::rmi::registry::Registry>>(p1); }

protected:

	RegistryHandler(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_RMI_REGISTRY_REGISTRYHANDLER
