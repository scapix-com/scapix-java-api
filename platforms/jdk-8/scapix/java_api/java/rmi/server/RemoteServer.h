// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/rmi/server/RemoteObject.h>

#ifndef SCAPIX_JAVA_API_JAVA_RMI_SERVER_REMOTESERVER_FWD
#define SCAPIX_JAVA_API_JAVA_RMI_SERVER_REMOTESERVER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::rmi::server { class RemoteServer; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::rmi::server::RemoteServer>
{
	static constexpr fixed_string class_name = "java/rmi/server/RemoteServer";
	using base_classes = std::tuple<scapix::java_api::java::rmi::server::RemoteObject>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_RMI_SERVER_REMOTESERVER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_RMI_SERVER_REMOTESERVER)
#define SCAPIX_JAVA_API_JAVA_RMI_SERVER_REMOTESERVER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/OutputStream.h>
#include <scapix/java_api/java/io/PrintStream.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::rmi::server::RemoteServer : public jni::object_base<"java/rmi/server/RemoteServer",
	java::rmi::server::RemoteObject>
{
public:

	static jni::ref<java::lang::String> getClientHost() { return call_static_method<"getClientHost", jni::ref<java::lang::String>>(); }
	static void setLog(jni::ref<java::io::OutputStream> p1) { return call_static_method<"setLog", void>(p1); }
	static jni::ref<java::io::PrintStream> getLog() { return call_static_method<"getLog", jni::ref<java::io::PrintStream>>(); }

protected:

	RemoteServer(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_RMI_SERVER_REMOTESERVER
