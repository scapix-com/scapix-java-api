// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_API_JAVA_RMI_SERVER_OBJID_FWD
#define SCAPIX_JAVA_API_JAVA_RMI_SERVER_OBJID_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::rmi::server { class ObjID; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::rmi::server::ObjID>
{
	static constexpr fixed_string class_name = "java/rmi/server/ObjID";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::io::Serializable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_RMI_SERVER_OBJID_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_RMI_SERVER_OBJID)
#define SCAPIX_JAVA_API_JAVA_RMI_SERVER_OBJID

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/ObjectInput.h>
#include <scapix/java_api/java/io/ObjectOutput.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::rmi::server::ObjID : public jni::object_base<"java/rmi/server/ObjID",
	java::lang::Object,
	java::io::Serializable>
{
public:

	static jint REGISTRY_ID() { return get_static_field<"REGISTRY_ID", jint>(); }
	static jint ACTIVATOR_ID() { return get_static_field<"ACTIVATOR_ID", jint>(); }
	static jint DGC_ID() { return get_static_field<"DGC_ID", jint>(); }

	static jni::ref<java::rmi::server::ObjID> new_object() { return base_::new_object(); }
	static jni::ref<java::rmi::server::ObjID> new_object(jint p1) { return base_::new_object(p1); }
	void write(jni::ref<java::io::ObjectOutput> p1) { return call_method<"write", void>(p1); }
	static jni::ref<java::rmi::server::ObjID> read(jni::ref<java::io::ObjectInput> p1) { return call_static_method<"read", jni::ref<java::rmi::server::ObjID>>(p1); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jboolean equals(jni::ref<java::lang::Object> p1) { return call_method<"equals", jboolean>(p1); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	ObjID(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_RMI_SERVER_OBJID
