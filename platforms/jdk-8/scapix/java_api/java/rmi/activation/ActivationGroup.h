// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/rmi/server/UnicastRemoteObject.h>
#include <scapix/java_api/java/rmi/activation/ActivationInstantiator.h>

#ifndef SCAPIX_JAVA_API_JAVA_RMI_ACTIVATION_ACTIVATIONGROUP_FWD
#define SCAPIX_JAVA_API_JAVA_RMI_ACTIVATION_ACTIVATIONGROUP_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::rmi::activation { class ActivationGroup; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::rmi::activation::ActivationGroup>
{
	static constexpr fixed_string class_name = "java/rmi/activation/ActivationGroup";
	using base_classes = std::tuple<scapix::java_api::java::rmi::server::UnicastRemoteObject, scapix::java_api::java::rmi::activation::ActivationInstantiator>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_RMI_ACTIVATION_ACTIVATIONGROUP_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_RMI_ACTIVATION_ACTIVATIONGROUP)
#define SCAPIX_JAVA_API_JAVA_RMI_ACTIVATION_ACTIVATIONGROUP

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/rmi/Remote.h>
#include <scapix/java_api/java/rmi/activation/ActivationGroupDesc.h>
#include <scapix/java_api/java/rmi/activation/ActivationGroupID.h>
#include <scapix/java_api/java/rmi/activation/ActivationID.h>
#include <scapix/java_api/java/rmi/activation/ActivationSystem.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::rmi::activation::ActivationGroup : public jni::object_base<"java/rmi/activation/ActivationGroup",
	java::rmi::server::UnicastRemoteObject,
	java::rmi::activation::ActivationInstantiator>
{
public:

	jboolean inactiveObject(jni::ref<java::rmi::activation::ActivationID> p1) { return call_method<"inactiveObject", jboolean>(p1); }
	void activeObject(jni::ref<java::rmi::activation::ActivationID> p1, jni::ref<java::rmi::Remote> p2) { return call_method<"activeObject", void>(p1, p2); }
	static jni::ref<java::rmi::activation::ActivationGroup> createGroup(jni::ref<java::rmi::activation::ActivationGroupID> p1, jni::ref<java::rmi::activation::ActivationGroupDesc> p2, jlong p3) { return call_static_method<"createGroup", jni::ref<java::rmi::activation::ActivationGroup>>(p1, p2, p3); }
	static jni::ref<java::rmi::activation::ActivationGroupID> currentGroupID() { return call_static_method<"currentGroupID", jni::ref<java::rmi::activation::ActivationGroupID>>(); }
	static void setSystem(jni::ref<java::rmi::activation::ActivationSystem> p1) { return call_static_method<"setSystem", void>(p1); }
	static jni::ref<java::rmi::activation::ActivationSystem> getSystem() { return call_static_method<"getSystem", jni::ref<java::rmi::activation::ActivationSystem>>(); }

protected:

	ActivationGroup(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_RMI_ACTIVATION_ACTIVATIONGROUP
