// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_BEANS_ENCODER_FWD
#define SCAPIX_JAVA_API_JAVA_BEANS_ENCODER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::beans { class Encoder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::beans::Encoder>
{
	static constexpr fixed_string class_name = "java/beans/Encoder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_BEANS_ENCODER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_BEANS_ENCODER)
#define SCAPIX_JAVA_API_JAVA_BEANS_ENCODER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/beans/ExceptionListener.h>
#include <scapix/java_api/java/beans/Expression.h>
#include <scapix/java_api/java/beans/PersistenceDelegate.h>
#include <scapix/java_api/java/beans/Statement.h>
#include <scapix/java_api/java/lang/Class.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::beans::Encoder : public jni::object_base<"java/beans/Encoder",
	java::lang::Object>
{
public:

	static jni::ref<java::beans::Encoder> new_object() { return base_::new_object(); }
	void setExceptionListener(jni::ref<java::beans::ExceptionListener> p1) { return call_method<"setExceptionListener", void>(p1); }
	jni::ref<java::beans::ExceptionListener> getExceptionListener() { return call_method<"getExceptionListener", jni::ref<java::beans::ExceptionListener>>(); }
	jni::ref<java::beans::PersistenceDelegate> getPersistenceDelegate(jni::ref<java::lang::Class> p1) { return call_method<"getPersistenceDelegate", jni::ref<java::beans::PersistenceDelegate>>(p1); }
	void setPersistenceDelegate(jni::ref<java::lang::Class> p1, jni::ref<java::beans::PersistenceDelegate> p2) { return call_method<"setPersistenceDelegate", void>(p1, p2); }
	jni::ref<java::lang::Object> remove(jni::ref<java::lang::Object> p1) { return call_method<"remove", jni::ref<java::lang::Object>>(p1); }
	jni::ref<java::lang::Object> get(jni::ref<java::lang::Object> p1) { return call_method<"get", jni::ref<java::lang::Object>>(p1); }
	void writeStatement(jni::ref<java::beans::Statement> p1) { return call_method<"writeStatement", void>(p1); }
	void writeExpression(jni::ref<java::beans::Expression> p1) { return call_method<"writeExpression", void>(p1); }

protected:

	Encoder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_BEANS_ENCODER
