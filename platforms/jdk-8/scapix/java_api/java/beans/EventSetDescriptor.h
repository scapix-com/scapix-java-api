// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/beans/FeatureDescriptor.h>

#ifndef SCAPIX_JAVA_API_JAVA_BEANS_EVENTSETDESCRIPTOR_FWD
#define SCAPIX_JAVA_API_JAVA_BEANS_EVENTSETDESCRIPTOR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::beans { class EventSetDescriptor; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::beans::EventSetDescriptor>
{
	static constexpr fixed_string class_name = "java/beans/EventSetDescriptor";
	using base_classes = std::tuple<scapix::java_api::java::beans::FeatureDescriptor>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_BEANS_EVENTSETDESCRIPTOR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_BEANS_EVENTSETDESCRIPTOR)
#define SCAPIX_JAVA_API_JAVA_BEANS_EVENTSETDESCRIPTOR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/beans/MethodDescriptor.h>
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/reflect/Method.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::beans::EventSetDescriptor : public jni::object_base<"java/beans/EventSetDescriptor",
	java::beans::FeatureDescriptor>
{
public:

	static jni::ref<java::beans::EventSetDescriptor> new_object(jni::ref<java::lang::Class> p1, jni::ref<java::lang::String> p2, jni::ref<java::lang::Class> p3, jni::ref<java::lang::String> p4) { return base_::new_object(p1, p2, p3, p4); }
	static jni::ref<java::beans::EventSetDescriptor> new_object(jni::ref<java::lang::Class> p1, jni::ref<java::lang::String> p2, jni::ref<java::lang::Class> p3, jni::ref<jni::array<java::lang::String>> p4, jni::ref<java::lang::String> p5, jni::ref<java::lang::String> p6) { return base_::new_object(p1, p2, p3, p4, p5, p6); }
	static jni::ref<java::beans::EventSetDescriptor> new_object(jni::ref<java::lang::Class> p1, jni::ref<java::lang::String> p2, jni::ref<java::lang::Class> p3, jni::ref<jni::array<java::lang::String>> p4, jni::ref<java::lang::String> p5, jni::ref<java::lang::String> p6, jni::ref<java::lang::String> p7) { return base_::new_object(p1, p2, p3, p4, p5, p6, p7); }
	static jni::ref<java::beans::EventSetDescriptor> new_object(jni::ref<java::lang::String> p1, jni::ref<java::lang::Class> p2, jni::ref<jni::array<java::lang::reflect::Method>> p3, jni::ref<java::lang::reflect::Method> p4, jni::ref<java::lang::reflect::Method> p5) { return base_::new_object(p1, p2, p3, p4, p5); }
	static jni::ref<java::beans::EventSetDescriptor> new_object(jni::ref<java::lang::String> p1, jni::ref<java::lang::Class> p2, jni::ref<jni::array<java::lang::reflect::Method>> p3, jni::ref<java::lang::reflect::Method> p4, jni::ref<java::lang::reflect::Method> p5, jni::ref<java::lang::reflect::Method> p6) { return base_::new_object(p1, p2, p3, p4, p5, p6); }
	static jni::ref<java::beans::EventSetDescriptor> new_object(jni::ref<java::lang::String> p1, jni::ref<java::lang::Class> p2, jni::ref<jni::array<java::beans::MethodDescriptor>> p3, jni::ref<java::lang::reflect::Method> p4, jni::ref<java::lang::reflect::Method> p5) { return base_::new_object(p1, p2, p3, p4, p5); }
	jni::ref<java::lang::Class> getListenerType() { return call_method<"getListenerType", jni::ref<java::lang::Class>>(); }
	jni::ref<jni::array<java::lang::reflect::Method>> getListenerMethods() { return call_method<"getListenerMethods", jni::ref<jni::array<java::lang::reflect::Method>>>(); }
	jni::ref<jni::array<java::beans::MethodDescriptor>> getListenerMethodDescriptors() { return call_method<"getListenerMethodDescriptors", jni::ref<jni::array<java::beans::MethodDescriptor>>>(); }
	jni::ref<java::lang::reflect::Method> getAddListenerMethod() { return call_method<"getAddListenerMethod", jni::ref<java::lang::reflect::Method>>(); }
	jni::ref<java::lang::reflect::Method> getRemoveListenerMethod() { return call_method<"getRemoveListenerMethod", jni::ref<java::lang::reflect::Method>>(); }
	jni::ref<java::lang::reflect::Method> getGetListenerMethod() { return call_method<"getGetListenerMethod", jni::ref<java::lang::reflect::Method>>(); }
	void setUnicast(jboolean p1) { return call_method<"setUnicast", void>(p1); }
	jboolean isUnicast() { return call_method<"isUnicast", jboolean>(); }
	void setInDefaultEventSet(jboolean p1) { return call_method<"setInDefaultEventSet", void>(p1); }
	jboolean isInDefaultEventSet() { return call_method<"isInDefaultEventSet", jboolean>(); }

protected:

	EventSetDescriptor(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_BEANS_EVENTSETDESCRIPTOR
