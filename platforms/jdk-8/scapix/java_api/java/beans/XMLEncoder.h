// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/beans/Encoder.h>
#include <scapix/java_api/java/lang/AutoCloseable.h>

#ifndef SCAPIX_JAVA_API_JAVA_BEANS_XMLENCODER_FWD
#define SCAPIX_JAVA_API_JAVA_BEANS_XMLENCODER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::beans { class XMLEncoder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::beans::XMLEncoder>
{
	static constexpr fixed_string class_name = "java/beans/XMLEncoder";
	using base_classes = std::tuple<scapix::java_api::java::beans::Encoder, scapix::java_api::java::lang::AutoCloseable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_BEANS_XMLENCODER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_BEANS_XMLENCODER)
#define SCAPIX_JAVA_API_JAVA_BEANS_XMLENCODER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/beans/Expression.h>
#include <scapix/java_api/java/beans/Statement.h>
#include <scapix/java_api/java/io/OutputStream.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::beans::XMLEncoder : public jni::object_base<"java/beans/XMLEncoder",
	java::beans::Encoder,
	java::lang::AutoCloseable>
{
public:

	static jni::ref<java::beans::XMLEncoder> new_object(jni::ref<java::io::OutputStream> p1) { return base_::new_object(p1); }
	static jni::ref<java::beans::XMLEncoder> new_object(jni::ref<java::io::OutputStream> p1, jni::ref<java::lang::String> p2, jboolean p3, jint p4) { return base_::new_object(p1, p2, p3, p4); }
	void setOwner(jni::ref<java::lang::Object> p1) { return call_method<"setOwner", void>(p1); }
	jni::ref<java::lang::Object> getOwner() { return call_method<"getOwner", jni::ref<java::lang::Object>>(); }
	void writeObject(jni::ref<java::lang::Object> p1) { return call_method<"writeObject", void>(p1); }
	void writeStatement(jni::ref<java::beans::Statement> p1) { return call_method<"writeStatement", void>(p1); }
	void writeExpression(jni::ref<java::beans::Expression> p1) { return call_method<"writeExpression", void>(p1); }
	void flush() { return call_method<"flush", void>(); }
	void close() { return call_method<"close", void>(); }

protected:

	XMLEncoder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_BEANS_XMLENCODER
