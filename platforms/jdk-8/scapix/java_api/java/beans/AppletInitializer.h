// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_BEANS_APPLETINITIALIZER_FWD
#define SCAPIX_JAVA_API_JAVA_BEANS_APPLETINITIALIZER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::beans { class AppletInitializer; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::beans::AppletInitializer>
{
	static constexpr fixed_string class_name = "java/beans/AppletInitializer";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_BEANS_APPLETINITIALIZER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_BEANS_APPLETINITIALIZER)
#define SCAPIX_JAVA_API_JAVA_BEANS_APPLETINITIALIZER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/applet/Applet.h>
#include <scapix/java_api/java/beans/beancontext/BeanContext.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::beans::AppletInitializer : public jni::object_base<"java/beans/AppletInitializer",
	java::lang::Object>
{
public:

	void initialize(jni::ref<java::applet::Applet> p1, jni::ref<java::beans::beancontext::BeanContext> p2) { return call_method<"initialize", void>(p1, p2); }
	void activate(jni::ref<java::applet::Applet> p1) { return call_method<"activate", void>(p1); }

protected:

	AppletInitializer(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_BEANS_APPLETINITIALIZER
