// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/AutoCloseable.h>

#ifndef SCAPIX_JAVA_API_JAVA_BEANS_XMLDECODER_FWD
#define SCAPIX_JAVA_API_JAVA_BEANS_XMLDECODER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::beans { class XMLDecoder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::beans::XMLDecoder>
{
	static constexpr fixed_string class_name = "java/beans/XMLDecoder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::lang::AutoCloseable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_BEANS_XMLDECODER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_BEANS_XMLDECODER)
#define SCAPIX_JAVA_API_JAVA_BEANS_XMLDECODER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/beans/ExceptionListener.h>
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/lang/ClassLoader.h>
#include <scapix/java_api/org/xml/sax/InputSource.h>
#include <scapix/java_api/org/xml/sax/helpers/DefaultHandler.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::beans::XMLDecoder : public jni::object_base<"java/beans/XMLDecoder",
	java::lang::Object,
	java::lang::AutoCloseable>
{
public:

	static jni::ref<java::beans::XMLDecoder> new_object(jni::ref<java::io::InputStream> p1) { return base_::new_object(p1); }
	static jni::ref<java::beans::XMLDecoder> new_object(jni::ref<java::io::InputStream> p1, jni::ref<java::lang::Object> p2) { return base_::new_object(p1, p2); }
	static jni::ref<java::beans::XMLDecoder> new_object(jni::ref<java::io::InputStream> p1, jni::ref<java::lang::Object> p2, jni::ref<java::beans::ExceptionListener> p3) { return base_::new_object(p1, p2, p3); }
	static jni::ref<java::beans::XMLDecoder> new_object(jni::ref<java::io::InputStream> p1, jni::ref<java::lang::Object> p2, jni::ref<java::beans::ExceptionListener> p3, jni::ref<java::lang::ClassLoader> p4) { return base_::new_object(p1, p2, p3, p4); }
	static jni::ref<java::beans::XMLDecoder> new_object(jni::ref<org::xml::sax::InputSource> p1) { return base_::new_object(p1); }
	void close() { return call_method<"close", void>(); }
	void setExceptionListener(jni::ref<java::beans::ExceptionListener> p1) { return call_method<"setExceptionListener", void>(p1); }
	jni::ref<java::beans::ExceptionListener> getExceptionListener() { return call_method<"getExceptionListener", jni::ref<java::beans::ExceptionListener>>(); }
	jni::ref<java::lang::Object> readObject() { return call_method<"readObject", jni::ref<java::lang::Object>>(); }
	void setOwner(jni::ref<java::lang::Object> p1) { return call_method<"setOwner", void>(p1); }
	jni::ref<java::lang::Object> getOwner() { return call_method<"getOwner", jni::ref<java::lang::Object>>(); }
	static jni::ref<org::xml::sax::helpers::DefaultHandler> createHandler(jni::ref<java::lang::Object> p1, jni::ref<java::beans::ExceptionListener> p2, jni::ref<java::lang::ClassLoader> p3) { return call_static_method<"createHandler", jni::ref<org::xml::sax::helpers::DefaultHandler>>(p1, p2, p3); }

protected:

	XMLDecoder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_BEANS_XMLDECODER
