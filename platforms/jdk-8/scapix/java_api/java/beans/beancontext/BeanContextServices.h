// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/beans/beancontext/BeanContext.h>
#include <scapix/java_api/java/beans/beancontext/BeanContextServicesListener.h>

#ifndef SCAPIX_JAVA_API_JAVA_BEANS_BEANCONTEXT_BEANCONTEXTSERVICES_FWD
#define SCAPIX_JAVA_API_JAVA_BEANS_BEANCONTEXT_BEANCONTEXTSERVICES_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::beans::beancontext { class BeanContextServices; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::beans::beancontext::BeanContextServices>
{
	static constexpr fixed_string class_name = "java/beans/beancontext/BeanContextServices";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::beans::beancontext::BeanContext, scapix::java_api::java::beans::beancontext::BeanContextServicesListener>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_BEANS_BEANCONTEXT_BEANCONTEXTSERVICES_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_BEANS_BEANCONTEXT_BEANCONTEXTSERVICES)
#define SCAPIX_JAVA_API_JAVA_BEANS_BEANCONTEXT_BEANCONTEXTSERVICES

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/beans/beancontext/BeanContextChild.h>
#include <scapix/java_api/java/beans/beancontext/BeanContextServiceProvider.h>
#include <scapix/java_api/java/beans/beancontext/BeanContextServiceRevokedListener.h>
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/util/Iterator.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::beans::beancontext::BeanContextServices : public jni::object_base<"java/beans/beancontext/BeanContextServices",
	java::lang::Object,
	java::beans::beancontext::BeanContext,
	java::beans::beancontext::BeanContextServicesListener>
{
public:

	jboolean addService(jni::ref<java::lang::Class> p1, jni::ref<java::beans::beancontext::BeanContextServiceProvider> p2) { return call_method<"addService", jboolean>(p1, p2); }
	void revokeService(jni::ref<java::lang::Class> p1, jni::ref<java::beans::beancontext::BeanContextServiceProvider> p2, jboolean p3) { return call_method<"revokeService", void>(p1, p2, p3); }
	jboolean hasService(jni::ref<java::lang::Class> p1) { return call_method<"hasService", jboolean>(p1); }
	jni::ref<java::lang::Object> getService(jni::ref<java::beans::beancontext::BeanContextChild> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Class> p3, jni::ref<java::lang::Object> p4, jni::ref<java::beans::beancontext::BeanContextServiceRevokedListener> p5) { return call_method<"getService", jni::ref<java::lang::Object>>(p1, p2, p3, p4, p5); }
	void releaseService(jni::ref<java::beans::beancontext::BeanContextChild> p1, jni::ref<java::lang::Object> p2, jni::ref<java::lang::Object> p3) { return call_method<"releaseService", void>(p1, p2, p3); }
	jni::ref<java::util::Iterator> getCurrentServiceClasses() { return call_method<"getCurrentServiceClasses", jni::ref<java::util::Iterator>>(); }
	jni::ref<java::util::Iterator> getCurrentServiceSelectors(jni::ref<java::lang::Class> p1) { return call_method<"getCurrentServiceSelectors", jni::ref<java::util::Iterator>>(p1); }
	void addBeanContextServicesListener(jni::ref<java::beans::beancontext::BeanContextServicesListener> p1) { return call_method<"addBeanContextServicesListener", void>(p1); }
	void removeBeanContextServicesListener(jni::ref<java::beans::beancontext::BeanContextServicesListener> p1) { return call_method<"removeBeanContextServicesListener", void>(p1); }

protected:

	BeanContextServices(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_BEANS_BEANCONTEXT_BEANCONTEXTSERVICES
