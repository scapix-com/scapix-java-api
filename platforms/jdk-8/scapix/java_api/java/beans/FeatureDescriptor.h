// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_BEANS_FEATUREDESCRIPTOR_FWD
#define SCAPIX_JAVA_API_JAVA_BEANS_FEATUREDESCRIPTOR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::beans { class FeatureDescriptor; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::beans::FeatureDescriptor>
{
	static constexpr fixed_string class_name = "java/beans/FeatureDescriptor";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_BEANS_FEATUREDESCRIPTOR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_BEANS_FEATUREDESCRIPTOR)
#define SCAPIX_JAVA_API_JAVA_BEANS_FEATUREDESCRIPTOR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Enumeration.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::beans::FeatureDescriptor : public jni::object_base<"java/beans/FeatureDescriptor",
	java::lang::Object>
{
public:

	static jni::ref<java::beans::FeatureDescriptor> new_object() { return base_::new_object(); }
	jni::ref<java::lang::String> getName() { return call_method<"getName", jni::ref<java::lang::String>>(); }
	void setName(jni::ref<java::lang::String> p1) { return call_method<"setName", void>(p1); }
	jni::ref<java::lang::String> getDisplayName() { return call_method<"getDisplayName", jni::ref<java::lang::String>>(); }
	void setDisplayName(jni::ref<java::lang::String> p1) { return call_method<"setDisplayName", void>(p1); }
	jboolean isExpert() { return call_method<"isExpert", jboolean>(); }
	void setExpert(jboolean p1) { return call_method<"setExpert", void>(p1); }
	jboolean isHidden() { return call_method<"isHidden", jboolean>(); }
	void setHidden(jboolean p1) { return call_method<"setHidden", void>(p1); }
	jboolean isPreferred() { return call_method<"isPreferred", jboolean>(); }
	void setPreferred(jboolean p1) { return call_method<"setPreferred", void>(p1); }
	jni::ref<java::lang::String> getShortDescription() { return call_method<"getShortDescription", jni::ref<java::lang::String>>(); }
	void setShortDescription(jni::ref<java::lang::String> p1) { return call_method<"setShortDescription", void>(p1); }
	void setValue(jni::ref<java::lang::String> p1, jni::ref<java::lang::Object> p2) { return call_method<"setValue", void>(p1, p2); }
	jni::ref<java::lang::Object> getValue(jni::ref<java::lang::String> p1) { return call_method<"getValue", jni::ref<java::lang::Object>>(p1); }
	jni::ref<java::util::Enumeration> attributeNames() { return call_method<"attributeNames", jni::ref<java::util::Enumeration>>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	FeatureDescriptor(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_BEANS_FEATUREDESCRIPTOR
