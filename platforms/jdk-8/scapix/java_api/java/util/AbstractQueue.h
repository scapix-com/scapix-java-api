// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/util/AbstractCollection.h>
#include <scapix/java_api/java/util/Queue.h>

#ifndef SCAPIX_JAVA_API_JAVA_UTIL_ABSTRACTQUEUE_FWD
#define SCAPIX_JAVA_API_JAVA_UTIL_ABSTRACTQUEUE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::util { class AbstractQueue; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::util::AbstractQueue>
{
	static constexpr fixed_string class_name = "java/util/AbstractQueue";
	using base_classes = std::tuple<scapix::java_api::java::util::AbstractCollection, scapix::java_api::java::util::Queue>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_ABSTRACTQUEUE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_UTIL_ABSTRACTQUEUE)
#define SCAPIX_JAVA_API_JAVA_UTIL_ABSTRACTQUEUE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/util/Collection.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::util::AbstractQueue : public jni::object_base<"java/util/AbstractQueue",
	java::util::AbstractCollection,
	java::util::Queue>
{
public:

	jboolean add(jni::ref<java::lang::Object> p1) { return call_method<"add", jboolean>(p1); }
	jni::ref<java::lang::Object> remove() { return call_method<"remove", jni::ref<java::lang::Object>>(); }
	jni::ref<java::lang::Object> element() { return call_method<"element", jni::ref<java::lang::Object>>(); }
	void clear() { return call_method<"clear", void>(); }
	jboolean addAll(jni::ref<java::util::Collection> p1) { return call_method<"addAll", jboolean>(p1); }

protected:

	AbstractQueue(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_ABSTRACTQUEUE
