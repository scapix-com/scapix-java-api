// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_UTIL_ZIP_ZIPOUTPUTSTREAM_XENTRY_FWD
#define SCAPIX_JAVA_API_JAVA_UTIL_ZIP_ZIPOUTPUTSTREAM_XENTRY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::util::zip { class ZipOutputStream_XEntry; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::util::zip::ZipOutputStream_XEntry>
{
	static constexpr fixed_string class_name = "java/util/zip/ZipOutputStream$XEntry";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_ZIP_ZIPOUTPUTSTREAM_XENTRY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_UTIL_ZIP_ZIPOUTPUTSTREAM_XENTRY)
#define SCAPIX_JAVA_API_JAVA_UTIL_ZIP_ZIPOUTPUTSTREAM_XENTRY

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/util/zip/ZipEntry.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::util::zip::ZipOutputStream_XEntry : public jni::object_base<"java/util/zip/ZipOutputStream$XEntry",
	java::lang::Object>
{
public:

	static jni::ref<java::util::zip::ZipOutputStream_XEntry> new_object(jni::ref<java::util::zip::ZipEntry> p1, jlong p2) { return base_::new_object(p1, p2); }

protected:

	ZipOutputStream_XEntry(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_ZIP_ZIPOUTPUTSTREAM_XENTRY
