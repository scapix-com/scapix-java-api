// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/util/logging/Logger.h>

#ifndef SCAPIX_JAVA_API_JAVA_UTIL_LOGGING_LOGMANAGER_ROOTLOGGER_FWD
#define SCAPIX_JAVA_API_JAVA_UTIL_LOGGING_LOGMANAGER_ROOTLOGGER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::util::logging { class LogManager_RootLogger; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::util::logging::LogManager_RootLogger>
{
	static constexpr fixed_string class_name = "java/util/logging/LogManager$RootLogger";
	using base_classes = std::tuple<scapix::java_api::java::util::logging::Logger>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_LOGGING_LOGMANAGER_ROOTLOGGER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_UTIL_LOGGING_LOGMANAGER_ROOTLOGGER)
#define SCAPIX_JAVA_API_JAVA_UTIL_LOGGING_LOGMANAGER_ROOTLOGGER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/util/logging/Handler.h>
#include <scapix/java_api/java/util/logging/LogRecord.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::util::logging::LogManager_RootLogger : public jni::object_base<"java/util/logging/LogManager$RootLogger",
	java::util::logging::Logger>
{
public:

	void log(jni::ref<java::util::logging::LogRecord> p1) { return call_method<"log", void>(p1); }
	void addHandler(jni::ref<java::util::logging::Handler> p1) { return call_method<"addHandler", void>(p1); }
	void removeHandler(jni::ref<java::util::logging::Handler> p1) { return call_method<"removeHandler", void>(p1); }

protected:

	LogManager_RootLogger(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_LOGGING_LOGMANAGER_ROOTLOGGER
