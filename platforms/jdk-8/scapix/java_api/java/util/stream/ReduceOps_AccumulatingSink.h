// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/util/stream/TerminalSink.h>

#ifndef SCAPIX_JAVA_API_JAVA_UTIL_STREAM_REDUCEOPS_ACCUMULATINGSINK_FWD
#define SCAPIX_JAVA_API_JAVA_UTIL_STREAM_REDUCEOPS_ACCUMULATINGSINK_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::util::stream { class ReduceOps_AccumulatingSink; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::util::stream::ReduceOps_AccumulatingSink>
{
	static constexpr fixed_string class_name = "java/util/stream/ReduceOps$AccumulatingSink";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::util::stream::TerminalSink>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_STREAM_REDUCEOPS_ACCUMULATINGSINK_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_UTIL_STREAM_REDUCEOPS_ACCUMULATINGSINK)
#define SCAPIX_JAVA_API_JAVA_UTIL_STREAM_REDUCEOPS_ACCUMULATINGSINK

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::util::stream::ReduceOps_AccumulatingSink : public jni::object_base<"java/util/stream/ReduceOps$AccumulatingSink",
	java::lang::Object,
	java::util::stream::TerminalSink>
{
public:

	void combine(jni::ref<java::util::stream::ReduceOps_AccumulatingSink> p1) { return call_method<"combine", void>(p1); }

protected:

	ReduceOps_AccumulatingSink(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_STREAM_REDUCEOPS_ACCUMULATINGSINK
