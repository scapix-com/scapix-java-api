// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/util/concurrent/CountedCompleter.h>

#ifndef SCAPIX_JAVA_API_JAVA_UTIL_STREAM_NODES_TOARRAYTASK_FWD
#define SCAPIX_JAVA_API_JAVA_UTIL_STREAM_NODES_TOARRAYTASK_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::util::stream { class Nodes_ToArrayTask; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::util::stream::Nodes_ToArrayTask>
{
	static constexpr fixed_string class_name = "java/util/stream/Nodes$ToArrayTask";
	using base_classes = std::tuple<scapix::java_api::java::util::concurrent::CountedCompleter>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_STREAM_NODES_TOARRAYTASK_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_UTIL_STREAM_NODES_TOARRAYTASK)
#define SCAPIX_JAVA_API_JAVA_UTIL_STREAM_NODES_TOARRAYTASK

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::util::stream::Nodes_ToArrayTask : public jni::object_base<"java/util/stream/Nodes$ToArrayTask",
	java::util::concurrent::CountedCompleter>
{
public:

	void compute() { return call_method<"compute", void>(); }

protected:

	Nodes_ToArrayTask(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_STREAM_NODES_TOARRAYTASK
