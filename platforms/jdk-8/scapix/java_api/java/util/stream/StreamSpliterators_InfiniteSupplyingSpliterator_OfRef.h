// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/util/stream/StreamSpliterators_InfiniteSupplyingSpliterator.h>

#ifndef SCAPIX_JAVA_API_JAVA_UTIL_STREAM_STREAMSPLITERATORS_INFINITESUPPLYINGSPLITERATOR_OFREF_FWD
#define SCAPIX_JAVA_API_JAVA_UTIL_STREAM_STREAMSPLITERATORS_INFINITESUPPLYINGSPLITERATOR_OFREF_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::util::stream { class StreamSpliterators_InfiniteSupplyingSpliterator_OfRef; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::util::stream::StreamSpliterators_InfiniteSupplyingSpliterator_OfRef>
{
	static constexpr fixed_string class_name = "java/util/stream/StreamSpliterators$InfiniteSupplyingSpliterator$OfRef";
	using base_classes = std::tuple<scapix::java_api::java::util::stream::StreamSpliterators_InfiniteSupplyingSpliterator>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_STREAM_STREAMSPLITERATORS_INFINITESUPPLYINGSPLITERATOR_OFREF_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_UTIL_STREAM_STREAMSPLITERATORS_INFINITESUPPLYINGSPLITERATOR_OFREF)
#define SCAPIX_JAVA_API_JAVA_UTIL_STREAM_STREAMSPLITERATORS_INFINITESUPPLYINGSPLITERATOR_OFREF

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/util/Spliterator.h>
#include <scapix/java_api/java/util/function/Consumer.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::util::stream::StreamSpliterators_InfiniteSupplyingSpliterator_OfRef : public jni::object_base<"java/util/stream/StreamSpliterators$InfiniteSupplyingSpliterator$OfRef",
	java::util::stream::StreamSpliterators_InfiniteSupplyingSpliterator>
{
public:

	jboolean tryAdvance(jni::ref<java::util::function::Consumer> p1) { return call_method<"tryAdvance", jboolean>(p1); }
	jni::ref<java::util::Spliterator> trySplit() { return call_method<"trySplit", jni::ref<java::util::Spliterator>>(); }

protected:

	StreamSpliterators_InfiniteSupplyingSpliterator_OfRef(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_STREAM_STREAMSPLITERATORS_INFINITESUPPLYINGSPLITERATOR_OFREF
