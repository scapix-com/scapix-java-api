// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_UTIL_PROPERTIES_LINEREADER_FWD
#define SCAPIX_JAVA_API_JAVA_UTIL_PROPERTIES_LINEREADER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::util { class Properties_LineReader; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::util::Properties_LineReader>
{
	static constexpr fixed_string class_name = "java/util/Properties$LineReader";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_PROPERTIES_LINEREADER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_UTIL_PROPERTIES_LINEREADER)
#define SCAPIX_JAVA_API_JAVA_UTIL_PROPERTIES_LINEREADER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/io/Reader.h>
#include <scapix/java_api/java/util/Properties.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::util::Properties_LineReader : public jni::object_base<"java/util/Properties$LineReader",
	java::lang::Object>
{
public:

	static jni::ref<java::util::Properties_LineReader> new_object(jni::ref<java::util::Properties> p1, jni::ref<java::io::InputStream> p2) { return base_::new_object(p1, p2); }
	static jni::ref<java::util::Properties_LineReader> new_object(jni::ref<java::util::Properties> p1, jni::ref<java::io::Reader> p2) { return base_::new_object(p1, p2); }

protected:

	Properties_LineReader(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_PROPERTIES_LINEREADER
