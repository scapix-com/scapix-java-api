// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_UTIL_BASE64_DECODER_FWD
#define SCAPIX_JAVA_API_JAVA_UTIL_BASE64_DECODER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::util { class Base64_Decoder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::util::Base64_Decoder>
{
	static constexpr fixed_string class_name = "java/util/Base64$Decoder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_BASE64_DECODER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_UTIL_BASE64_DECODER)
#define SCAPIX_JAVA_API_JAVA_UTIL_BASE64_DECODER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/nio/ByteBuffer.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::util::Base64_Decoder : public jni::object_base<"java/util/Base64$Decoder",
	java::lang::Object>
{
public:

	jni::ref<jni::array<jbyte>> decode(jni::ref<jni::array<jbyte>> p1) { return call_method<"decode", jni::ref<jni::array<jbyte>>>(p1); }
	jni::ref<jni::array<jbyte>> decode(jni::ref<java::lang::String> p1) { return call_method<"decode", jni::ref<jni::array<jbyte>>>(p1); }
	jint decode(jni::ref<jni::array<jbyte>> p1, jni::ref<jni::array<jbyte>> p2) { return call_method<"decode", jint>(p1, p2); }
	jni::ref<java::nio::ByteBuffer> decode(jni::ref<java::nio::ByteBuffer> p1) { return call_method<"decode", jni::ref<java::nio::ByteBuffer>>(p1); }
	jni::ref<java::io::InputStream> wrap(jni::ref<java::io::InputStream> p1) { return call_method<"wrap", jni::ref<java::io::InputStream>>(p1); }

protected:

	Base64_Decoder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_BASE64_DECODER
