// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/util/zip/ZipOutputStream.h>

#ifndef SCAPIX_JAVA_API_JAVA_UTIL_JAR_JAROUTPUTSTREAM_FWD
#define SCAPIX_JAVA_API_JAVA_UTIL_JAR_JAROUTPUTSTREAM_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::util::jar { class JarOutputStream; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::util::jar::JarOutputStream>
{
	static constexpr fixed_string class_name = "java/util/jar/JarOutputStream";
	using base_classes = std::tuple<scapix::java_api::java::util::zip::ZipOutputStream>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_JAR_JAROUTPUTSTREAM_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_UTIL_JAR_JAROUTPUTSTREAM)
#define SCAPIX_JAVA_API_JAVA_UTIL_JAR_JAROUTPUTSTREAM

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/OutputStream.h>
#include <scapix/java_api/java/util/jar/Manifest.h>
#include <scapix/java_api/java/util/zip/ZipEntry.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::util::jar::JarOutputStream : public jni::object_base<"java/util/jar/JarOutputStream",
	java::util::zip::ZipOutputStream>
{
public:

	static jni::ref<java::util::jar::JarOutputStream> new_object(jni::ref<java::io::OutputStream> p1, jni::ref<java::util::jar::Manifest> p2) { return base_::new_object(p1, p2); }
	static jni::ref<java::util::jar::JarOutputStream> new_object(jni::ref<java::io::OutputStream> p1) { return base_::new_object(p1); }
	void putNextEntry(jni::ref<java::util::zip::ZipEntry> p1) { return call_method<"putNextEntry", void>(p1); }

protected:

	JarOutputStream(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_JAR_JAROUTPUTSTREAM
