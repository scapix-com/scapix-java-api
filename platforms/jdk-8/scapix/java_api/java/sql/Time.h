// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/util/Date.h>

#ifndef SCAPIX_JAVA_API_JAVA_SQL_TIME_FWD
#define SCAPIX_JAVA_API_JAVA_SQL_TIME_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::sql { class Time; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::sql::Time>
{
	static constexpr fixed_string class_name = "java/sql/Time";
	using base_classes = std::tuple<scapix::java_api::java::util::Date>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_SQL_TIME_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_SQL_TIME)
#define SCAPIX_JAVA_API_JAVA_SQL_TIME

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/time/Instant.h>
#include <scapix/java_api/java/time/LocalTime.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::sql::Time : public jni::object_base<"java/sql/Time",
	java::util::Date>
{
public:

	static jni::ref<java::sql::Time> new_object(jint p1, jint p2, jint p3) { return base_::new_object(p1, p2, p3); }
	static jni::ref<java::sql::Time> new_object(jlong p1) { return base_::new_object(p1); }
	void setTime(jlong p1) { return call_method<"setTime", void>(p1); }
	static jni::ref<java::sql::Time> valueOf(jni::ref<java::lang::String> p1) { return call_static_method<"valueOf", jni::ref<java::sql::Time>>(p1); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jint getYear() { return call_method<"getYear", jint>(); }
	jint getMonth() { return call_method<"getMonth", jint>(); }
	jint getDay() { return call_method<"getDay", jint>(); }
	jint getDate() { return call_method<"getDate", jint>(); }
	void setYear(jint p1) { return call_method<"setYear", void>(p1); }
	void setMonth(jint p1) { return call_method<"setMonth", void>(p1); }
	void setDate(jint p1) { return call_method<"setDate", void>(p1); }
	static jni::ref<java::sql::Time> valueOf(jni::ref<java::time::LocalTime> p1) { return call_static_method<"valueOf", jni::ref<java::sql::Time>>(p1); }
	jni::ref<java::time::LocalTime> toLocalTime() { return call_method<"toLocalTime", jni::ref<java::time::LocalTime>>(); }
	jni::ref<java::time::Instant> toInstant() { return call_method<"toInstant", jni::ref<java::time::Instant>>(); }

protected:

	Time(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_SQL_TIME
