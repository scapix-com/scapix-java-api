// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/util/function/BiFunction.h>

#ifndef SCAPIX_JAVA_API_JAVA_LANG_REFLECT_PROXY_KEYFACTORY_FWD
#define SCAPIX_JAVA_API_JAVA_LANG_REFLECT_PROXY_KEYFACTORY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::lang::reflect { class Proxy_KeyFactory; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::lang::reflect::Proxy_KeyFactory>
{
	static constexpr fixed_string class_name = "java/lang/reflect/Proxy$KeyFactory";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::util::function::BiFunction>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_REFLECT_PROXY_KEYFACTORY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_LANG_REFLECT_PROXY_KEYFACTORY)
#define SCAPIX_JAVA_API_JAVA_LANG_REFLECT_PROXY_KEYFACTORY

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/ClassLoader.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::lang::reflect::Proxy_KeyFactory : public jni::object_base<"java/lang/reflect/Proxy$KeyFactory",
	java::lang::Object,
	java::util::function::BiFunction>
{
public:

	jni::ref<java::lang::Object> apply(jni::ref<java::lang::ClassLoader> p1, jni::ref<jni::array<java::lang::Class>> p2) { return call_method<"apply", jni::ref<java::lang::Object>>(p1, p2); }

protected:

	Proxy_KeyFactory(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_REFLECT_PROXY_KEYFACTORY
