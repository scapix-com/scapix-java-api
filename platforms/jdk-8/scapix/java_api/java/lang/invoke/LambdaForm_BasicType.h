// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Enum.h>

#ifndef SCAPIX_JAVA_API_JAVA_LANG_INVOKE_LAMBDAFORM_BASICTYPE_FWD
#define SCAPIX_JAVA_API_JAVA_LANG_INVOKE_LAMBDAFORM_BASICTYPE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::lang::invoke { class LambdaForm_BasicType; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::lang::invoke::LambdaForm_BasicType>
{
	static constexpr fixed_string class_name = "java/lang/invoke/LambdaForm$BasicType";
	using base_classes = std::tuple<scapix::java_api::java::lang::Enum>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_INVOKE_LAMBDAFORM_BASICTYPE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_LANG_INVOKE_LAMBDAFORM_BASICTYPE)
#define SCAPIX_JAVA_API_JAVA_LANG_INVOKE_LAMBDAFORM_BASICTYPE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::lang::invoke::LambdaForm_BasicType : public jni::object_base<"java/lang/invoke/LambdaForm$BasicType",
	java::lang::Enum>
{
public:

	static jni::ref<java::lang::invoke::LambdaForm_BasicType> L_TYPE() { return get_static_field<"L_TYPE", jni::ref<java::lang::invoke::LambdaForm_BasicType>>(); }
	static jni::ref<java::lang::invoke::LambdaForm_BasicType> I_TYPE() { return get_static_field<"I_TYPE", jni::ref<java::lang::invoke::LambdaForm_BasicType>>(); }
	static jni::ref<java::lang::invoke::LambdaForm_BasicType> J_TYPE() { return get_static_field<"J_TYPE", jni::ref<java::lang::invoke::LambdaForm_BasicType>>(); }
	static jni::ref<java::lang::invoke::LambdaForm_BasicType> F_TYPE() { return get_static_field<"F_TYPE", jni::ref<java::lang::invoke::LambdaForm_BasicType>>(); }
	static jni::ref<java::lang::invoke::LambdaForm_BasicType> D_TYPE() { return get_static_field<"D_TYPE", jni::ref<java::lang::invoke::LambdaForm_BasicType>>(); }
	static jni::ref<java::lang::invoke::LambdaForm_BasicType> V_TYPE() { return get_static_field<"V_TYPE", jni::ref<java::lang::invoke::LambdaForm_BasicType>>(); }

	static jni::ref<jni::array<java::lang::invoke::LambdaForm_BasicType>> values() { return call_static_method<"values", jni::ref<jni::array<java::lang::invoke::LambdaForm_BasicType>>>(); }
	static jni::ref<java::lang::invoke::LambdaForm_BasicType> valueOf(jni::ref<java::lang::String> p1) { return call_static_method<"valueOf", jni::ref<java::lang::invoke::LambdaForm_BasicType>>(p1); }

protected:

	LambdaForm_BasicType(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_INVOKE_LAMBDAFORM_BASICTYPE
