// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/invoke/MethodHandleInfo.h>

#ifndef SCAPIX_JAVA_API_JAVA_LANG_INVOKE_INFOFROMMEMBERNAME_FWD
#define SCAPIX_JAVA_API_JAVA_LANG_INVOKE_INFOFROMMEMBERNAME_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::lang::invoke { class InfoFromMemberName; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::lang::invoke::InfoFromMemberName>
{
	static constexpr fixed_string class_name = "java/lang/invoke/InfoFromMemberName";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::lang::invoke::MethodHandleInfo>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_INVOKE_INFOFROMMEMBERNAME_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_LANG_INVOKE_INFOFROMMEMBERNAME)
#define SCAPIX_JAVA_API_JAVA_LANG_INVOKE_INFOFROMMEMBERNAME

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/invoke/MethodHandles_Lookup.h>
#include <scapix/java_api/java/lang/invoke/MethodType.h>
#include <scapix/java_api/java/lang/reflect/Member.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::lang::invoke::InfoFromMemberName : public jni::object_base<"java/lang/invoke/InfoFromMemberName",
	java::lang::Object,
	java::lang::invoke::MethodHandleInfo>
{
public:

	jni::ref<java::lang::Class> getDeclaringClass() { return call_method<"getDeclaringClass", jni::ref<java::lang::Class>>(); }
	jni::ref<java::lang::String> getName() { return call_method<"getName", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::invoke::MethodType> getMethodType() { return call_method<"getMethodType", jni::ref<java::lang::invoke::MethodType>>(); }
	jint getModifiers() { return call_method<"getModifiers", jint>(); }
	jint getReferenceKind() { return call_method<"getReferenceKind", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::reflect::Member> reflectAs(jni::ref<java::lang::Class> p1, jni::ref<java::lang::invoke::MethodHandles_Lookup> p2) { return call_method<"reflectAs", jni::ref<java::lang::reflect::Member>>(p1, p2); }

protected:

	InfoFromMemberName(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_INVOKE_INFOFROMMEMBERNAME
