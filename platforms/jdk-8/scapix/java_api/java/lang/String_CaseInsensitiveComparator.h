// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/util/Comparator.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_API_JAVA_LANG_STRING_CASEINSENSITIVECOMPARATOR_FWD
#define SCAPIX_JAVA_API_JAVA_LANG_STRING_CASEINSENSITIVECOMPARATOR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::lang { class String_CaseInsensitiveComparator; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::lang::String_CaseInsensitiveComparator>
{
	static constexpr fixed_string class_name = "java/lang/String$CaseInsensitiveComparator";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::util::Comparator, scapix::java_api::java::io::Serializable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_STRING_CASEINSENSITIVECOMPARATOR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_LANG_STRING_CASEINSENSITIVECOMPARATOR)
#define SCAPIX_JAVA_API_JAVA_LANG_STRING_CASEINSENSITIVECOMPARATOR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::lang::String_CaseInsensitiveComparator : public jni::object_base<"java/lang/String$CaseInsensitiveComparator",
	java::lang::Object,
	java::util::Comparator,
	java::io::Serializable>
{
public:

	jint compare(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return call_method<"compare", jint>(p1, p2); }

protected:

	String_CaseInsensitiveComparator(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_STRING_CASEINSENSITIVECOMPARATOR
