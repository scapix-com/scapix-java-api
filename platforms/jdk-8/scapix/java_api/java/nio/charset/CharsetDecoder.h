// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_NIO_CHARSET_CHARSETDECODER_FWD
#define SCAPIX_JAVA_API_JAVA_NIO_CHARSET_CHARSETDECODER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::nio::charset { class CharsetDecoder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::nio::charset::CharsetDecoder>
{
	static constexpr fixed_string class_name = "java/nio/charset/CharsetDecoder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_NIO_CHARSET_CHARSETDECODER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_NIO_CHARSET_CHARSETDECODER)
#define SCAPIX_JAVA_API_JAVA_NIO_CHARSET_CHARSETDECODER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/nio/ByteBuffer.h>
#include <scapix/java_api/java/nio/CharBuffer.h>
#include <scapix/java_api/java/nio/charset/Charset.h>
#include <scapix/java_api/java/nio/charset/CoderResult.h>
#include <scapix/java_api/java/nio/charset/CodingErrorAction.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::nio::charset::CharsetDecoder : public jni::object_base<"java/nio/charset/CharsetDecoder",
	java::lang::Object>
{
public:

	jni::ref<java::nio::charset::Charset> charset() { return call_method<"charset", jni::ref<java::nio::charset::Charset>>(); }
	jni::ref<java::lang::String> replacement() { return call_method<"replacement", jni::ref<java::lang::String>>(); }
	jni::ref<java::nio::charset::CharsetDecoder> replaceWith(jni::ref<java::lang::String> p1) { return call_method<"replaceWith", jni::ref<java::nio::charset::CharsetDecoder>>(p1); }
	jni::ref<java::nio::charset::CodingErrorAction> malformedInputAction() { return call_method<"malformedInputAction", jni::ref<java::nio::charset::CodingErrorAction>>(); }
	jni::ref<java::nio::charset::CharsetDecoder> onMalformedInput(jni::ref<java::nio::charset::CodingErrorAction> p1) { return call_method<"onMalformedInput", jni::ref<java::nio::charset::CharsetDecoder>>(p1); }
	jni::ref<java::nio::charset::CodingErrorAction> unmappableCharacterAction() { return call_method<"unmappableCharacterAction", jni::ref<java::nio::charset::CodingErrorAction>>(); }
	jni::ref<java::nio::charset::CharsetDecoder> onUnmappableCharacter(jni::ref<java::nio::charset::CodingErrorAction> p1) { return call_method<"onUnmappableCharacter", jni::ref<java::nio::charset::CharsetDecoder>>(p1); }
	jfloat averageCharsPerByte() { return call_method<"averageCharsPerByte", jfloat>(); }
	jfloat maxCharsPerByte() { return call_method<"maxCharsPerByte", jfloat>(); }
	jni::ref<java::nio::charset::CoderResult> decode(jni::ref<java::nio::ByteBuffer> p1, jni::ref<java::nio::CharBuffer> p2, jboolean p3) { return call_method<"decode", jni::ref<java::nio::charset::CoderResult>>(p1, p2, p3); }
	jni::ref<java::nio::charset::CoderResult> flush(jni::ref<java::nio::CharBuffer> p1) { return call_method<"flush", jni::ref<java::nio::charset::CoderResult>>(p1); }
	jni::ref<java::nio::charset::CharsetDecoder> reset() { return call_method<"reset", jni::ref<java::nio::charset::CharsetDecoder>>(); }
	jni::ref<java::nio::CharBuffer> decode(jni::ref<java::nio::ByteBuffer> p1) { return call_method<"decode", jni::ref<java::nio::CharBuffer>>(p1); }
	jboolean isAutoDetecting() { return call_method<"isAutoDetecting", jboolean>(); }
	jboolean isCharsetDetected() { return call_method<"isCharsetDetected", jboolean>(); }
	jni::ref<java::nio::charset::Charset> detectedCharset() { return call_method<"detectedCharset", jni::ref<java::nio::charset::Charset>>(); }

protected:

	CharsetDecoder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_NIO_CHARSET_CHARSETDECODER
