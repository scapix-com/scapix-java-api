// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/nio/channels/spi/AbstractInterruptibleChannel.h>
#include <scapix/java_api/java/nio/channels/WritableByteChannel.h>

#ifndef SCAPIX_JAVA_API_JAVA_NIO_CHANNELS_CHANNELS_WRITABLEBYTECHANNELIMPL_FWD
#define SCAPIX_JAVA_API_JAVA_NIO_CHANNELS_CHANNELS_WRITABLEBYTECHANNELIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::nio::channels { class Channels_WritableByteChannelImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::nio::channels::Channels_WritableByteChannelImpl>
{
	static constexpr fixed_string class_name = "java/nio/channels/Channels$WritableByteChannelImpl";
	using base_classes = std::tuple<scapix::java_api::java::nio::channels::spi::AbstractInterruptibleChannel, scapix::java_api::java::nio::channels::WritableByteChannel>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_NIO_CHANNELS_CHANNELS_WRITABLEBYTECHANNELIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_NIO_CHANNELS_CHANNELS_WRITABLEBYTECHANNELIMPL)
#define SCAPIX_JAVA_API_JAVA_NIO_CHANNELS_CHANNELS_WRITABLEBYTECHANNELIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/nio/ByteBuffer.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::nio::channels::Channels_WritableByteChannelImpl : public jni::object_base<"java/nio/channels/Channels$WritableByteChannelImpl",
	java::nio::channels::spi::AbstractInterruptibleChannel,
	java::nio::channels::WritableByteChannel>
{
public:

	jint write(jni::ref<java::nio::ByteBuffer> p1) { return call_method<"write", jint>(p1); }

protected:

	Channels_WritableByteChannelImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_NIO_CHANNELS_CHANNELS_WRITABLEBYTECHANNELIMPL
