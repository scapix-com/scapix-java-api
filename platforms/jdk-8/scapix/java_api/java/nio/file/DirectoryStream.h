// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/io/Closeable.h>
#include <scapix/java_api/java/lang/Iterable.h>

#ifndef SCAPIX_JAVA_API_JAVA_NIO_FILE_DIRECTORYSTREAM_FWD
#define SCAPIX_JAVA_API_JAVA_NIO_FILE_DIRECTORYSTREAM_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::nio::file { class DirectoryStream; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::nio::file::DirectoryStream>
{
	static constexpr fixed_string class_name = "java/nio/file/DirectoryStream";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::io::Closeable, scapix::java_api::java::lang::Iterable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_NIO_FILE_DIRECTORYSTREAM_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_NIO_FILE_DIRECTORYSTREAM)
#define SCAPIX_JAVA_API_JAVA_NIO_FILE_DIRECTORYSTREAM

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/util/Iterator.h>
#include <scapix/java_api/java/nio/file/DirectoryStream_Filter.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::nio::file::DirectoryStream : public jni::object_base<"java/nio/file/DirectoryStream",
	java::lang::Object,
	java::io::Closeable,
	java::lang::Iterable>
{
public:

	using Filter = DirectoryStream_Filter;

	jni::ref<java::util::Iterator> iterator() { return call_method<"iterator", jni::ref<java::util::Iterator>>(); }

protected:

	DirectoryStream(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_NIO_FILE_DIRECTORYSTREAM
