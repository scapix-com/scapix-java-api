// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_NIO_FILE_FILESTORE_FWD
#define SCAPIX_JAVA_API_JAVA_NIO_FILE_FILESTORE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::nio::file { class FileStore; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::nio::file::FileStore>
{
	static constexpr fixed_string class_name = "java/nio/file/FileStore";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_NIO_FILE_FILESTORE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_NIO_FILE_FILESTORE)
#define SCAPIX_JAVA_API_JAVA_NIO_FILE_FILESTORE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/nio/file/attribute/FileStoreAttributeView.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::nio::file::FileStore : public jni::object_base<"java/nio/file/FileStore",
	java::lang::Object>
{
public:

	jni::ref<java::lang::String> name() { return call_method<"name", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> type() { return call_method<"type", jni::ref<java::lang::String>>(); }
	jboolean isReadOnly() { return call_method<"isReadOnly", jboolean>(); }
	jlong getTotalSpace() { return call_method<"getTotalSpace", jlong>(); }
	jlong getUsableSpace() { return call_method<"getUsableSpace", jlong>(); }
	jlong getUnallocatedSpace() { return call_method<"getUnallocatedSpace", jlong>(); }
	jboolean supportsFileAttributeView(jni::ref<java::lang::Class> p1) { return call_method<"supportsFileAttributeView", jboolean>(p1); }
	jboolean supportsFileAttributeView(jni::ref<java::lang::String> p1) { return call_method<"supportsFileAttributeView", jboolean>(p1); }
	jni::ref<java::nio::file::attribute::FileStoreAttributeView> getFileStoreAttributeView(jni::ref<java::lang::Class> p1) { return call_method<"getFileStoreAttributeView", jni::ref<java::nio::file::attribute::FileStoreAttributeView>>(p1); }
	jni::ref<java::lang::Object> getAttribute(jni::ref<java::lang::String> p1) { return call_method<"getAttribute", jni::ref<java::lang::Object>>(p1); }

protected:

	FileStore(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_NIO_FILE_FILESTORE
