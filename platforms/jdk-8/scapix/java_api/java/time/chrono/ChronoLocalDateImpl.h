// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/time/chrono/ChronoLocalDate.h>
#include <scapix/java_api/java/time/temporal/Temporal.h>
#include <scapix/java_api/java/time/temporal/TemporalAdjuster.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_API_JAVA_TIME_CHRONO_CHRONOLOCALDATEIMPL_FWD
#define SCAPIX_JAVA_API_JAVA_TIME_CHRONO_CHRONOLOCALDATEIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::time::chrono { class ChronoLocalDateImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::time::chrono::ChronoLocalDateImpl>
{
	static constexpr fixed_string class_name = "java/time/chrono/ChronoLocalDateImpl";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::time::chrono::ChronoLocalDate, scapix::java_api::java::time::temporal::Temporal, scapix::java_api::java::time::temporal::TemporalAdjuster, scapix::java_api::java::io::Serializable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_TIME_CHRONO_CHRONOLOCALDATEIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_TIME_CHRONO_CHRONOLOCALDATEIMPL)
#define SCAPIX_JAVA_API_JAVA_TIME_CHRONO_CHRONOLOCALDATEIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/time/temporal/TemporalAmount.h>
#include <scapix/java_api/java/time/temporal/TemporalField.h>
#include <scapix/java_api/java/time/temporal/TemporalUnit.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::time::chrono::ChronoLocalDateImpl : public jni::object_base<"java/time/chrono/ChronoLocalDateImpl",
	java::lang::Object,
	java::time::chrono::ChronoLocalDate,
	java::time::temporal::Temporal,
	java::time::temporal::TemporalAdjuster,
	java::io::Serializable>
{
public:

	jni::ref<java::time::chrono::ChronoLocalDate> with(jni::ref<java::time::temporal::TemporalAdjuster> p1) { return call_method<"with", jni::ref<java::time::chrono::ChronoLocalDate>>(p1); }
	jni::ref<java::time::chrono::ChronoLocalDate> with(jni::ref<java::time::temporal::TemporalField> p1, jlong p2) { return call_method<"with", jni::ref<java::time::chrono::ChronoLocalDate>>(p1, p2); }
	jni::ref<java::time::chrono::ChronoLocalDate> plus(jni::ref<java::time::temporal::TemporalAmount> p1) { return call_method<"plus", jni::ref<java::time::chrono::ChronoLocalDate>>(p1); }
	jni::ref<java::time::chrono::ChronoLocalDate> plus(jlong p1, jni::ref<java::time::temporal::TemporalUnit> p2) { return call_method<"plus", jni::ref<java::time::chrono::ChronoLocalDate>>(p1, p2); }
	jni::ref<java::time::chrono::ChronoLocalDate> minus(jni::ref<java::time::temporal::TemporalAmount> p1) { return call_method<"minus", jni::ref<java::time::chrono::ChronoLocalDate>>(p1); }
	jni::ref<java::time::chrono::ChronoLocalDate> minus(jlong p1, jni::ref<java::time::temporal::TemporalUnit> p2) { return call_method<"minus", jni::ref<java::time::chrono::ChronoLocalDate>>(p1, p2); }
	jlong until(jni::ref<java::time::temporal::Temporal> p1, jni::ref<java::time::temporal::TemporalUnit> p2) { return call_method<"until", jlong>(p1, p2); }
	jboolean equals(jni::ref<java::lang::Object> p1) { return call_method<"equals", jboolean>(p1); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	ChronoLocalDateImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_TIME_CHRONO_CHRONOLOCALDATEIMPL
