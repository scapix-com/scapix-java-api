// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Enum.h>
#include <scapix/java_api/java/time/temporal/TemporalAccessor.h>
#include <scapix/java_api/java/time/temporal/TemporalAdjuster.h>

#ifndef SCAPIX_JAVA_API_JAVA_TIME_MONTH_FWD
#define SCAPIX_JAVA_API_JAVA_TIME_MONTH_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::time { class Month; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::time::Month>
{
	static constexpr fixed_string class_name = "java/time/Month";
	using base_classes = std::tuple<scapix::java_api::java::lang::Enum, scapix::java_api::java::time::temporal::TemporalAccessor, scapix::java_api::java::time::temporal::TemporalAdjuster>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_TIME_MONTH_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_TIME_MONTH)
#define SCAPIX_JAVA_API_JAVA_TIME_MONTH

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/time/format/TextStyle.h>
#include <scapix/java_api/java/time/temporal/Temporal.h>
#include <scapix/java_api/java/time/temporal/TemporalField.h>
#include <scapix/java_api/java/time/temporal/TemporalQuery.h>
#include <scapix/java_api/java/time/temporal/ValueRange.h>
#include <scapix/java_api/java/util/Locale.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::time::Month : public jni::object_base<"java/time/Month",
	java::lang::Enum,
	java::time::temporal::TemporalAccessor,
	java::time::temporal::TemporalAdjuster>
{
public:

	static jni::ref<java::time::Month> JANUARY() { return get_static_field<"JANUARY", jni::ref<java::time::Month>>(); }
	static jni::ref<java::time::Month> FEBRUARY() { return get_static_field<"FEBRUARY", jni::ref<java::time::Month>>(); }
	static jni::ref<java::time::Month> MARCH() { return get_static_field<"MARCH", jni::ref<java::time::Month>>(); }
	static jni::ref<java::time::Month> APRIL() { return get_static_field<"APRIL", jni::ref<java::time::Month>>(); }
	static jni::ref<java::time::Month> MAY() { return get_static_field<"MAY", jni::ref<java::time::Month>>(); }
	static jni::ref<java::time::Month> JUNE() { return get_static_field<"JUNE", jni::ref<java::time::Month>>(); }
	static jni::ref<java::time::Month> JULY() { return get_static_field<"JULY", jni::ref<java::time::Month>>(); }
	static jni::ref<java::time::Month> AUGUST() { return get_static_field<"AUGUST", jni::ref<java::time::Month>>(); }
	static jni::ref<java::time::Month> SEPTEMBER() { return get_static_field<"SEPTEMBER", jni::ref<java::time::Month>>(); }
	static jni::ref<java::time::Month> OCTOBER() { return get_static_field<"OCTOBER", jni::ref<java::time::Month>>(); }
	static jni::ref<java::time::Month> NOVEMBER() { return get_static_field<"NOVEMBER", jni::ref<java::time::Month>>(); }
	static jni::ref<java::time::Month> DECEMBER() { return get_static_field<"DECEMBER", jni::ref<java::time::Month>>(); }

	static jni::ref<jni::array<java::time::Month>> values() { return call_static_method<"values", jni::ref<jni::array<java::time::Month>>>(); }
	static jni::ref<java::time::Month> valueOf(jni::ref<java::lang::String> p1) { return call_static_method<"valueOf", jni::ref<java::time::Month>>(p1); }
	static jni::ref<java::time::Month> of(jint p1) { return call_static_method<"of", jni::ref<java::time::Month>>(p1); }
	static jni::ref<java::time::Month> from(jni::ref<java::time::temporal::TemporalAccessor> p1) { return call_static_method<"from", jni::ref<java::time::Month>>(p1); }
	jint getValue() { return call_method<"getValue", jint>(); }
	jni::ref<java::lang::String> getDisplayName(jni::ref<java::time::format::TextStyle> p1, jni::ref<java::util::Locale> p2) { return call_method<"getDisplayName", jni::ref<java::lang::String>>(p1, p2); }
	jboolean isSupported(jni::ref<java::time::temporal::TemporalField> p1) { return call_method<"isSupported", jboolean>(p1); }
	jni::ref<java::time::temporal::ValueRange> range(jni::ref<java::time::temporal::TemporalField> p1) { return call_method<"range", jni::ref<java::time::temporal::ValueRange>>(p1); }
	jint get(jni::ref<java::time::temporal::TemporalField> p1) { return call_method<"get", jint>(p1); }
	jlong getLong(jni::ref<java::time::temporal::TemporalField> p1) { return call_method<"getLong", jlong>(p1); }
	jni::ref<java::time::Month> plus(jlong p1) { return call_method<"plus", jni::ref<java::time::Month>>(p1); }
	jni::ref<java::time::Month> minus(jlong p1) { return call_method<"minus", jni::ref<java::time::Month>>(p1); }
	jint length(jboolean p1) { return call_method<"length", jint>(p1); }
	jint minLength() { return call_method<"minLength", jint>(); }
	jint maxLength() { return call_method<"maxLength", jint>(); }
	jint firstDayOfYear(jboolean p1) { return call_method<"firstDayOfYear", jint>(p1); }
	jni::ref<java::time::Month> firstMonthOfQuarter() { return call_method<"firstMonthOfQuarter", jni::ref<java::time::Month>>(); }
	jni::ref<java::lang::Object> query(jni::ref<java::time::temporal::TemporalQuery> p1) { return call_method<"query", jni::ref<java::lang::Object>>(p1); }
	jni::ref<java::time::temporal::Temporal> adjustInto(jni::ref<java::time::temporal::Temporal> p1) { return call_method<"adjustInto", jni::ref<java::time::temporal::Temporal>>(p1); }

protected:

	Month(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_TIME_MONTH
