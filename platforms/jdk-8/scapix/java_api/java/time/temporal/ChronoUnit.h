// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Enum.h>
#include <scapix/java_api/java/time/temporal/TemporalUnit.h>

#ifndef SCAPIX_JAVA_API_JAVA_TIME_TEMPORAL_CHRONOUNIT_FWD
#define SCAPIX_JAVA_API_JAVA_TIME_TEMPORAL_CHRONOUNIT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::time::temporal { class ChronoUnit; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::time::temporal::ChronoUnit>
{
	static constexpr fixed_string class_name = "java/time/temporal/ChronoUnit";
	using base_classes = std::tuple<scapix::java_api::java::lang::Enum, scapix::java_api::java::time::temporal::TemporalUnit>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_TIME_TEMPORAL_CHRONOUNIT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_TIME_TEMPORAL_CHRONOUNIT)
#define SCAPIX_JAVA_API_JAVA_TIME_TEMPORAL_CHRONOUNIT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/time/Duration.h>
#include <scapix/java_api/java/time/temporal/Temporal.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::time::temporal::ChronoUnit : public jni::object_base<"java/time/temporal/ChronoUnit",
	java::lang::Enum,
	java::time::temporal::TemporalUnit>
{
public:

	static jni::ref<java::time::temporal::ChronoUnit> NANOS() { return get_static_field<"NANOS", jni::ref<java::time::temporal::ChronoUnit>>(); }
	static jni::ref<java::time::temporal::ChronoUnit> MICROS() { return get_static_field<"MICROS", jni::ref<java::time::temporal::ChronoUnit>>(); }
	static jni::ref<java::time::temporal::ChronoUnit> MILLIS() { return get_static_field<"MILLIS", jni::ref<java::time::temporal::ChronoUnit>>(); }
	static jni::ref<java::time::temporal::ChronoUnit> SECONDS() { return get_static_field<"SECONDS", jni::ref<java::time::temporal::ChronoUnit>>(); }
	static jni::ref<java::time::temporal::ChronoUnit> MINUTES() { return get_static_field<"MINUTES", jni::ref<java::time::temporal::ChronoUnit>>(); }
	static jni::ref<java::time::temporal::ChronoUnit> HOURS() { return get_static_field<"HOURS", jni::ref<java::time::temporal::ChronoUnit>>(); }
	static jni::ref<java::time::temporal::ChronoUnit> HALF_DAYS() { return get_static_field<"HALF_DAYS", jni::ref<java::time::temporal::ChronoUnit>>(); }
	static jni::ref<java::time::temporal::ChronoUnit> DAYS() { return get_static_field<"DAYS", jni::ref<java::time::temporal::ChronoUnit>>(); }
	static jni::ref<java::time::temporal::ChronoUnit> WEEKS() { return get_static_field<"WEEKS", jni::ref<java::time::temporal::ChronoUnit>>(); }
	static jni::ref<java::time::temporal::ChronoUnit> MONTHS() { return get_static_field<"MONTHS", jni::ref<java::time::temporal::ChronoUnit>>(); }
	static jni::ref<java::time::temporal::ChronoUnit> YEARS() { return get_static_field<"YEARS", jni::ref<java::time::temporal::ChronoUnit>>(); }
	static jni::ref<java::time::temporal::ChronoUnit> DECADES() { return get_static_field<"DECADES", jni::ref<java::time::temporal::ChronoUnit>>(); }
	static jni::ref<java::time::temporal::ChronoUnit> CENTURIES() { return get_static_field<"CENTURIES", jni::ref<java::time::temporal::ChronoUnit>>(); }
	static jni::ref<java::time::temporal::ChronoUnit> MILLENNIA() { return get_static_field<"MILLENNIA", jni::ref<java::time::temporal::ChronoUnit>>(); }
	static jni::ref<java::time::temporal::ChronoUnit> ERAS() { return get_static_field<"ERAS", jni::ref<java::time::temporal::ChronoUnit>>(); }
	static jni::ref<java::time::temporal::ChronoUnit> FOREVER() { return get_static_field<"FOREVER", jni::ref<java::time::temporal::ChronoUnit>>(); }

	static jni::ref<jni::array<java::time::temporal::ChronoUnit>> values() { return call_static_method<"values", jni::ref<jni::array<java::time::temporal::ChronoUnit>>>(); }
	static jni::ref<java::time::temporal::ChronoUnit> valueOf(jni::ref<java::lang::String> p1) { return call_static_method<"valueOf", jni::ref<java::time::temporal::ChronoUnit>>(p1); }
	jni::ref<java::time::Duration> getDuration() { return call_method<"getDuration", jni::ref<java::time::Duration>>(); }
	jboolean isDurationEstimated() { return call_method<"isDurationEstimated", jboolean>(); }
	jboolean isDateBased() { return call_method<"isDateBased", jboolean>(); }
	jboolean isTimeBased() { return call_method<"isTimeBased", jboolean>(); }
	jboolean isSupportedBy(jni::ref<java::time::temporal::Temporal> p1) { return call_method<"isSupportedBy", jboolean>(p1); }
	jni::ref<java::time::temporal::Temporal> addTo(jni::ref<java::time::temporal::Temporal> p1, jlong p2) { return call_method<"addTo", jni::ref<java::time::temporal::Temporal>>(p1, p2); }
	jlong between(jni::ref<java::time::temporal::Temporal> p1, jni::ref<java::time::temporal::Temporal> p2) { return call_method<"between", jlong>(p1, p2); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	ChronoUnit(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_TIME_TEMPORAL_CHRONOUNIT
