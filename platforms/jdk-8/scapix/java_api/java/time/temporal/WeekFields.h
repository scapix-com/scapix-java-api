// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_API_JAVA_TIME_TEMPORAL_WEEKFIELDS_FWD
#define SCAPIX_JAVA_API_JAVA_TIME_TEMPORAL_WEEKFIELDS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::time::temporal { class WeekFields; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::time::temporal::WeekFields>
{
	static constexpr fixed_string class_name = "java/time/temporal/WeekFields";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::io::Serializable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_TIME_TEMPORAL_WEEKFIELDS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_TIME_TEMPORAL_WEEKFIELDS)
#define SCAPIX_JAVA_API_JAVA_TIME_TEMPORAL_WEEKFIELDS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/time/DayOfWeek.h>
#include <scapix/java_api/java/time/temporal/TemporalField.h>
#include <scapix/java_api/java/time/temporal/TemporalUnit.h>
#include <scapix/java_api/java/util/Locale.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::time::temporal::WeekFields : public jni::object_base<"java/time/temporal/WeekFields",
	java::lang::Object,
	java::io::Serializable>
{
public:

	static jni::ref<java::time::temporal::WeekFields> ISO() { return get_static_field<"ISO", jni::ref<java::time::temporal::WeekFields>>(); }
	static jni::ref<java::time::temporal::WeekFields> SUNDAY_START() { return get_static_field<"SUNDAY_START", jni::ref<java::time::temporal::WeekFields>>(); }
	static jni::ref<java::time::temporal::TemporalUnit> WEEK_BASED_YEARS() { return get_static_field<"WEEK_BASED_YEARS", jni::ref<java::time::temporal::TemporalUnit>>(); }

	static jni::ref<java::time::temporal::WeekFields> of(jni::ref<java::util::Locale> p1) { return call_static_method<"of", jni::ref<java::time::temporal::WeekFields>>(p1); }
	static jni::ref<java::time::temporal::WeekFields> of(jni::ref<java::time::DayOfWeek> p1, jint p2) { return call_static_method<"of", jni::ref<java::time::temporal::WeekFields>>(p1, p2); }
	jni::ref<java::time::DayOfWeek> getFirstDayOfWeek() { return call_method<"getFirstDayOfWeek", jni::ref<java::time::DayOfWeek>>(); }
	jint getMinimalDaysInFirstWeek() { return call_method<"getMinimalDaysInFirstWeek", jint>(); }
	jni::ref<java::time::temporal::TemporalField> dayOfWeek() { return call_method<"dayOfWeek", jni::ref<java::time::temporal::TemporalField>>(); }
	jni::ref<java::time::temporal::TemporalField> weekOfMonth() { return call_method<"weekOfMonth", jni::ref<java::time::temporal::TemporalField>>(); }
	jni::ref<java::time::temporal::TemporalField> weekOfYear() { return call_method<"weekOfYear", jni::ref<java::time::temporal::TemporalField>>(); }
	jni::ref<java::time::temporal::TemporalField> weekOfWeekBasedYear() { return call_method<"weekOfWeekBasedYear", jni::ref<java::time::temporal::TemporalField>>(); }
	jni::ref<java::time::temporal::TemporalField> weekBasedYear() { return call_method<"weekBasedYear", jni::ref<java::time::temporal::TemporalField>>(); }
	jboolean equals(jni::ref<java::lang::Object> p1) { return call_method<"equals", jboolean>(p1); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	WeekFields(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_TIME_TEMPORAL_WEEKFIELDS
