// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_APPLET_APPLETSTUB_FWD
#define SCAPIX_JAVA_API_JAVA_APPLET_APPLETSTUB_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::applet { class AppletStub; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::applet::AppletStub>
{
	static constexpr fixed_string class_name = "java/applet/AppletStub";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_APPLET_APPLETSTUB_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_APPLET_APPLETSTUB)
#define SCAPIX_JAVA_API_JAVA_APPLET_APPLETSTUB

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/applet/AppletContext.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/net/URL.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::applet::AppletStub : public jni::object_base<"java/applet/AppletStub",
	java::lang::Object>
{
public:

	jboolean isActive() { return call_method<"isActive", jboolean>(); }
	jni::ref<java::net::URL> getDocumentBase() { return call_method<"getDocumentBase", jni::ref<java::net::URL>>(); }
	jni::ref<java::net::URL> getCodeBase() { return call_method<"getCodeBase", jni::ref<java::net::URL>>(); }
	jni::ref<java::lang::String> getParameter(jni::ref<java::lang::String> p1) { return call_method<"getParameter", jni::ref<java::lang::String>>(p1); }
	jni::ref<java::applet::AppletContext> getAppletContext() { return call_method<"getAppletContext", jni::ref<java::applet::AppletContext>>(); }
	void appletResize(jint p1, jint p2) { return call_method<"appletResize", void>(p1, p2); }

protected:

	AppletStub(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_APPLET_APPLETSTUB
