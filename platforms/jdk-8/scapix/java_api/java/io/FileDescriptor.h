// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_IO_FILEDESCRIPTOR_FWD
#define SCAPIX_JAVA_API_JAVA_IO_FILEDESCRIPTOR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::io { class FileDescriptor; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::io::FileDescriptor>
{
	static constexpr fixed_string class_name = "java/io/FileDescriptor";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_IO_FILEDESCRIPTOR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_IO_FILEDESCRIPTOR)
#define SCAPIX_JAVA_API_JAVA_IO_FILEDESCRIPTOR

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::io::FileDescriptor : public jni::object_base<"java/io/FileDescriptor",
	java::lang::Object>
{
public:

	static jni::ref<java::io::FileDescriptor> in() { return get_static_field<"in", jni::ref<java::io::FileDescriptor>>(); }
	static jni::ref<java::io::FileDescriptor> out() { return get_static_field<"out", jni::ref<java::io::FileDescriptor>>(); }
	static jni::ref<java::io::FileDescriptor> err() { return get_static_field<"err", jni::ref<java::io::FileDescriptor>>(); }

	static jni::ref<java::io::FileDescriptor> new_object() { return base_::new_object(); }
	jboolean valid() { return call_method<"valid", jboolean>(); }
	void sync() { return call_method<"sync", void>(); }

protected:

	FileDescriptor(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_IO_FILEDESCRIPTOR
