// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/security/PermissionCollection.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_API_JAVA_IO_FILEPERMISSIONCOLLECTION_FWD
#define SCAPIX_JAVA_API_JAVA_IO_FILEPERMISSIONCOLLECTION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::io { class FilePermissionCollection; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::io::FilePermissionCollection>
{
	static constexpr fixed_string class_name = "java/io/FilePermissionCollection";
	using base_classes = std::tuple<scapix::java_api::java::security::PermissionCollection, scapix::java_api::java::io::Serializable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_IO_FILEPERMISSIONCOLLECTION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_IO_FILEPERMISSIONCOLLECTION)
#define SCAPIX_JAVA_API_JAVA_IO_FILEPERMISSIONCOLLECTION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/security/Permission.h>
#include <scapix/java_api/java/util/Enumeration.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::io::FilePermissionCollection : public jni::object_base<"java/io/FilePermissionCollection",
	java::security::PermissionCollection,
	java::io::Serializable>
{
public:

	static jni::ref<java::io::FilePermissionCollection> new_object() { return base_::new_object(); }
	void add(jni::ref<java::security::Permission> p1) { return call_method<"add", void>(p1); }
	jboolean implies(jni::ref<java::security::Permission> p1) { return call_method<"implies", jboolean>(p1); }
	jni::ref<java::util::Enumeration> elements() { return call_method<"elements", jni::ref<java::util::Enumeration>>(); }

protected:

	FilePermissionCollection(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_IO_FILEPERMISSIONCOLLECTION
