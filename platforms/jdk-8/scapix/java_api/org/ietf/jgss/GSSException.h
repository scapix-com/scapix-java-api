// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Exception.h>

#ifndef SCAPIX_JAVA_API_ORG_IETF_JGSS_GSSEXCEPTION_FWD
#define SCAPIX_JAVA_API_ORG_IETF_JGSS_GSSEXCEPTION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::ietf::jgss { class GSSException; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::ietf::jgss::GSSException>
{
	static constexpr fixed_string class_name = "org/ietf/jgss/GSSException";
	using base_classes = std::tuple<scapix::java_api::java::lang::Exception>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_IETF_JGSS_GSSEXCEPTION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_IETF_JGSS_GSSEXCEPTION)
#define SCAPIX_JAVA_API_ORG_IETF_JGSS_GSSEXCEPTION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::ietf::jgss::GSSException : public jni::object_base<"org/ietf/jgss/GSSException",
	java::lang::Exception>
{
public:

	static jint BAD_BINDINGS() { return get_static_field<"BAD_BINDINGS", jint>(); }
	static jint BAD_MECH() { return get_static_field<"BAD_MECH", jint>(); }
	static jint BAD_NAME() { return get_static_field<"BAD_NAME", jint>(); }
	static jint BAD_NAMETYPE() { return get_static_field<"BAD_NAMETYPE", jint>(); }
	static jint BAD_STATUS() { return get_static_field<"BAD_STATUS", jint>(); }
	static jint BAD_MIC() { return get_static_field<"BAD_MIC", jint>(); }
	static jint CONTEXT_EXPIRED() { return get_static_field<"CONTEXT_EXPIRED", jint>(); }
	static jint CREDENTIALS_EXPIRED() { return get_static_field<"CREDENTIALS_EXPIRED", jint>(); }
	static jint DEFECTIVE_CREDENTIAL() { return get_static_field<"DEFECTIVE_CREDENTIAL", jint>(); }
	static jint DEFECTIVE_TOKEN() { return get_static_field<"DEFECTIVE_TOKEN", jint>(); }
	static jint FAILURE() { return get_static_field<"FAILURE", jint>(); }
	static jint NO_CONTEXT() { return get_static_field<"NO_CONTEXT", jint>(); }
	static jint NO_CRED() { return get_static_field<"NO_CRED", jint>(); }
	static jint BAD_QOP() { return get_static_field<"BAD_QOP", jint>(); }
	static jint UNAUTHORIZED() { return get_static_field<"UNAUTHORIZED", jint>(); }
	static jint UNAVAILABLE() { return get_static_field<"UNAVAILABLE", jint>(); }
	static jint DUPLICATE_ELEMENT() { return get_static_field<"DUPLICATE_ELEMENT", jint>(); }
	static jint NAME_NOT_MN() { return get_static_field<"NAME_NOT_MN", jint>(); }
	static jint DUPLICATE_TOKEN() { return get_static_field<"DUPLICATE_TOKEN", jint>(); }
	static jint OLD_TOKEN() { return get_static_field<"OLD_TOKEN", jint>(); }
	static jint UNSEQ_TOKEN() { return get_static_field<"UNSEQ_TOKEN", jint>(); }
	static jint GAP_TOKEN() { return get_static_field<"GAP_TOKEN", jint>(); }

	static jni::ref<org::ietf::jgss::GSSException> new_object(jint p1) { return base_::new_object(p1); }
	static jni::ref<org::ietf::jgss::GSSException> new_object(jint p1, jint p2, jni::ref<java::lang::String> p3) { return base_::new_object(p1, p2, p3); }
	jint getMajor() { return call_method<"getMajor", jint>(); }
	jint getMinor() { return call_method<"getMinor", jint>(); }
	jni::ref<java::lang::String> getMajorString() { return call_method<"getMajorString", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getMinorString() { return call_method<"getMinorString", jni::ref<java::lang::String>>(); }
	void setMinor(jint p1, jni::ref<java::lang::String> p2) { return call_method<"setMinor", void>(p1, p2); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getMessage() { return call_method<"getMessage", jni::ref<java::lang::String>>(); }

protected:

	GSSException(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_IETF_JGSS_GSSEXCEPTION
