// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/org/w3c/dom/css/CSSValue.h>

#ifndef SCAPIX_JAVA_API_ORG_W3C_DOM_CSS_CSSPRIMITIVEVALUE_FWD
#define SCAPIX_JAVA_API_ORG_W3C_DOM_CSS_CSSPRIMITIVEVALUE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::w3c::dom::css { class CSSPrimitiveValue; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::w3c::dom::css::CSSPrimitiveValue>
{
	static constexpr fixed_string class_name = "org/w3c/dom/css/CSSPrimitiveValue";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::org::w3c::dom::css::CSSValue>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_W3C_DOM_CSS_CSSPRIMITIVEVALUE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_W3C_DOM_CSS_CSSPRIMITIVEVALUE)
#define SCAPIX_JAVA_API_ORG_W3C_DOM_CSS_CSSPRIMITIVEVALUE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/w3c/dom/css/Counter.h>
#include <scapix/java_api/org/w3c/dom/css/RGBColor.h>
#include <scapix/java_api/org/w3c/dom/css/Rect.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::w3c::dom::css::CSSPrimitiveValue : public jni::object_base<"org/w3c/dom/css/CSSPrimitiveValue",
	java::lang::Object,
	org::w3c::dom::css::CSSValue>
{
public:

	static jshort CSS_UNKNOWN() { return get_static_field<"CSS_UNKNOWN", jshort>(); }
	static jshort CSS_NUMBER() { return get_static_field<"CSS_NUMBER", jshort>(); }
	static jshort CSS_PERCENTAGE() { return get_static_field<"CSS_PERCENTAGE", jshort>(); }
	static jshort CSS_EMS() { return get_static_field<"CSS_EMS", jshort>(); }
	static jshort CSS_EXS() { return get_static_field<"CSS_EXS", jshort>(); }
	static jshort CSS_PX() { return get_static_field<"CSS_PX", jshort>(); }
	static jshort CSS_CM() { return get_static_field<"CSS_CM", jshort>(); }
	static jshort CSS_MM() { return get_static_field<"CSS_MM", jshort>(); }
	static jshort CSS_IN() { return get_static_field<"CSS_IN", jshort>(); }
	static jshort CSS_PT() { return get_static_field<"CSS_PT", jshort>(); }
	static jshort CSS_PC() { return get_static_field<"CSS_PC", jshort>(); }
	static jshort CSS_DEG() { return get_static_field<"CSS_DEG", jshort>(); }
	static jshort CSS_RAD() { return get_static_field<"CSS_RAD", jshort>(); }
	static jshort CSS_GRAD() { return get_static_field<"CSS_GRAD", jshort>(); }
	static jshort CSS_MS() { return get_static_field<"CSS_MS", jshort>(); }
	static jshort CSS_S() { return get_static_field<"CSS_S", jshort>(); }
	static jshort CSS_HZ() { return get_static_field<"CSS_HZ", jshort>(); }
	static jshort CSS_KHZ() { return get_static_field<"CSS_KHZ", jshort>(); }
	static jshort CSS_DIMENSION() { return get_static_field<"CSS_DIMENSION", jshort>(); }
	static jshort CSS_STRING() { return get_static_field<"CSS_STRING", jshort>(); }
	static jshort CSS_URI() { return get_static_field<"CSS_URI", jshort>(); }
	static jshort CSS_IDENT() { return get_static_field<"CSS_IDENT", jshort>(); }
	static jshort CSS_ATTR() { return get_static_field<"CSS_ATTR", jshort>(); }
	static jshort CSS_COUNTER() { return get_static_field<"CSS_COUNTER", jshort>(); }
	static jshort CSS_RECT() { return get_static_field<"CSS_RECT", jshort>(); }
	static jshort CSS_RGBCOLOR() { return get_static_field<"CSS_RGBCOLOR", jshort>(); }

	jshort getPrimitiveType() { return call_method<"getPrimitiveType", jshort>(); }
	void setFloatValue(jshort p1, jfloat p2) { return call_method<"setFloatValue", void>(p1, p2); }
	jfloat getFloatValue(jshort p1) { return call_method<"getFloatValue", jfloat>(p1); }
	void setStringValue(jshort p1, jni::ref<java::lang::String> p2) { return call_method<"setStringValue", void>(p1, p2); }
	jni::ref<java::lang::String> getStringValue() { return call_method<"getStringValue", jni::ref<java::lang::String>>(); }
	jni::ref<org::w3c::dom::css::Counter> getCounterValue() { return call_method<"getCounterValue", jni::ref<org::w3c::dom::css::Counter>>(); }
	jni::ref<org::w3c::dom::css::Rect> getRectValue() { return call_method<"getRectValue", jni::ref<org::w3c::dom::css::Rect>>(); }
	jni::ref<org::w3c::dom::css::RGBColor> getRGBColorValue() { return call_method<"getRGBColorValue", jni::ref<org::w3c::dom::css::RGBColor>>(); }

protected:

	CSSPrimitiveValue(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_W3C_DOM_CSS_CSSPRIMITIVEVALUE
