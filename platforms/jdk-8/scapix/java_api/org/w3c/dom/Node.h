// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ORG_W3C_DOM_NODE_FWD
#define SCAPIX_JAVA_API_ORG_W3C_DOM_NODE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::w3c::dom { class Node; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::w3c::dom::Node>
{
	static constexpr fixed_string class_name = "org/w3c/dom/Node";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_W3C_DOM_NODE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_W3C_DOM_NODE)
#define SCAPIX_JAVA_API_ORG_W3C_DOM_NODE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/w3c/dom/Document.h>
#include <scapix/java_api/org/w3c/dom/NamedNodeMap.h>
#include <scapix/java_api/org/w3c/dom/NodeList.h>
#include <scapix/java_api/org/w3c/dom/UserDataHandler.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::w3c::dom::Node : public jni::object_base<"org/w3c/dom/Node",
	java::lang::Object>
{
public:

	static jshort ELEMENT_NODE() { return get_static_field<"ELEMENT_NODE", jshort>(); }
	static jshort ATTRIBUTE_NODE() { return get_static_field<"ATTRIBUTE_NODE", jshort>(); }
	static jshort TEXT_NODE() { return get_static_field<"TEXT_NODE", jshort>(); }
	static jshort CDATA_SECTION_NODE() { return get_static_field<"CDATA_SECTION_NODE", jshort>(); }
	static jshort ENTITY_REFERENCE_NODE() { return get_static_field<"ENTITY_REFERENCE_NODE", jshort>(); }
	static jshort ENTITY_NODE() { return get_static_field<"ENTITY_NODE", jshort>(); }
	static jshort PROCESSING_INSTRUCTION_NODE() { return get_static_field<"PROCESSING_INSTRUCTION_NODE", jshort>(); }
	static jshort COMMENT_NODE() { return get_static_field<"COMMENT_NODE", jshort>(); }
	static jshort DOCUMENT_NODE() { return get_static_field<"DOCUMENT_NODE", jshort>(); }
	static jshort DOCUMENT_TYPE_NODE() { return get_static_field<"DOCUMENT_TYPE_NODE", jshort>(); }
	static jshort DOCUMENT_FRAGMENT_NODE() { return get_static_field<"DOCUMENT_FRAGMENT_NODE", jshort>(); }
	static jshort NOTATION_NODE() { return get_static_field<"NOTATION_NODE", jshort>(); }
	static jshort DOCUMENT_POSITION_DISCONNECTED() { return get_static_field<"DOCUMENT_POSITION_DISCONNECTED", jshort>(); }
	static jshort DOCUMENT_POSITION_PRECEDING() { return get_static_field<"DOCUMENT_POSITION_PRECEDING", jshort>(); }
	static jshort DOCUMENT_POSITION_FOLLOWING() { return get_static_field<"DOCUMENT_POSITION_FOLLOWING", jshort>(); }
	static jshort DOCUMENT_POSITION_CONTAINS() { return get_static_field<"DOCUMENT_POSITION_CONTAINS", jshort>(); }
	static jshort DOCUMENT_POSITION_CONTAINED_BY() { return get_static_field<"DOCUMENT_POSITION_CONTAINED_BY", jshort>(); }
	static jshort DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC() { return get_static_field<"DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC", jshort>(); }

	jni::ref<java::lang::String> getNodeName() { return call_method<"getNodeName", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getNodeValue() { return call_method<"getNodeValue", jni::ref<java::lang::String>>(); }
	void setNodeValue(jni::ref<java::lang::String> p1) { return call_method<"setNodeValue", void>(p1); }
	jshort getNodeType() { return call_method<"getNodeType", jshort>(); }
	jni::ref<org::w3c::dom::Node> getParentNode() { return call_method<"getParentNode", jni::ref<org::w3c::dom::Node>>(); }
	jni::ref<org::w3c::dom::NodeList> getChildNodes() { return call_method<"getChildNodes", jni::ref<org::w3c::dom::NodeList>>(); }
	jni::ref<org::w3c::dom::Node> getFirstChild() { return call_method<"getFirstChild", jni::ref<org::w3c::dom::Node>>(); }
	jni::ref<org::w3c::dom::Node> getLastChild() { return call_method<"getLastChild", jni::ref<org::w3c::dom::Node>>(); }
	jni::ref<org::w3c::dom::Node> getPreviousSibling() { return call_method<"getPreviousSibling", jni::ref<org::w3c::dom::Node>>(); }
	jni::ref<org::w3c::dom::Node> getNextSibling() { return call_method<"getNextSibling", jni::ref<org::w3c::dom::Node>>(); }
	jni::ref<org::w3c::dom::NamedNodeMap> getAttributes() { return call_method<"getAttributes", jni::ref<org::w3c::dom::NamedNodeMap>>(); }
	jni::ref<org::w3c::dom::Document> getOwnerDocument() { return call_method<"getOwnerDocument", jni::ref<org::w3c::dom::Document>>(); }
	jni::ref<org::w3c::dom::Node> insertBefore(jni::ref<org::w3c::dom::Node> p1, jni::ref<org::w3c::dom::Node> p2) { return call_method<"insertBefore", jni::ref<org::w3c::dom::Node>>(p1, p2); }
	jni::ref<org::w3c::dom::Node> replaceChild(jni::ref<org::w3c::dom::Node> p1, jni::ref<org::w3c::dom::Node> p2) { return call_method<"replaceChild", jni::ref<org::w3c::dom::Node>>(p1, p2); }
	jni::ref<org::w3c::dom::Node> removeChild(jni::ref<org::w3c::dom::Node> p1) { return call_method<"removeChild", jni::ref<org::w3c::dom::Node>>(p1); }
	jni::ref<org::w3c::dom::Node> appendChild(jni::ref<org::w3c::dom::Node> p1) { return call_method<"appendChild", jni::ref<org::w3c::dom::Node>>(p1); }
	jboolean hasChildNodes() { return call_method<"hasChildNodes", jboolean>(); }
	jni::ref<org::w3c::dom::Node> cloneNode(jboolean p1) { return call_method<"cloneNode", jni::ref<org::w3c::dom::Node>>(p1); }
	void normalize() { return call_method<"normalize", void>(); }
	jboolean isSupported(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return call_method<"isSupported", jboolean>(p1, p2); }
	jni::ref<java::lang::String> getNamespaceURI() { return call_method<"getNamespaceURI", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getPrefix() { return call_method<"getPrefix", jni::ref<java::lang::String>>(); }
	void setPrefix(jni::ref<java::lang::String> p1) { return call_method<"setPrefix", void>(p1); }
	jni::ref<java::lang::String> getLocalName() { return call_method<"getLocalName", jni::ref<java::lang::String>>(); }
	jboolean hasAttributes() { return call_method<"hasAttributes", jboolean>(); }
	jni::ref<java::lang::String> getBaseURI() { return call_method<"getBaseURI", jni::ref<java::lang::String>>(); }
	jshort compareDocumentPosition(jni::ref<org::w3c::dom::Node> p1) { return call_method<"compareDocumentPosition", jshort>(p1); }
	jni::ref<java::lang::String> getTextContent() { return call_method<"getTextContent", jni::ref<java::lang::String>>(); }
	void setTextContent(jni::ref<java::lang::String> p1) { return call_method<"setTextContent", void>(p1); }
	jboolean isSameNode(jni::ref<org::w3c::dom::Node> p1) { return call_method<"isSameNode", jboolean>(p1); }
	jni::ref<java::lang::String> lookupPrefix(jni::ref<java::lang::String> p1) { return call_method<"lookupPrefix", jni::ref<java::lang::String>>(p1); }
	jboolean isDefaultNamespace(jni::ref<java::lang::String> p1) { return call_method<"isDefaultNamespace", jboolean>(p1); }
	jni::ref<java::lang::String> lookupNamespaceURI(jni::ref<java::lang::String> p1) { return call_method<"lookupNamespaceURI", jni::ref<java::lang::String>>(p1); }
	jboolean isEqualNode(jni::ref<org::w3c::dom::Node> p1) { return call_method<"isEqualNode", jboolean>(p1); }
	jni::ref<java::lang::Object> getFeature(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return call_method<"getFeature", jni::ref<java::lang::Object>>(p1, p2); }
	jni::ref<java::lang::Object> setUserData(jni::ref<java::lang::String> p1, jni::ref<java::lang::Object> p2, jni::ref<org::w3c::dom::UserDataHandler> p3) { return call_method<"setUserData", jni::ref<java::lang::Object>>(p1, p2, p3); }
	jni::ref<java::lang::Object> getUserData(jni::ref<java::lang::String> p1) { return call_method<"getUserData", jni::ref<java::lang::Object>>(p1); }

protected:

	Node(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_W3C_DOM_NODE
