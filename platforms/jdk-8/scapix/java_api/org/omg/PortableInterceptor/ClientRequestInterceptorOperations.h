// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/org/omg/PortableInterceptor/InterceptorOperations.h>

#ifndef SCAPIX_JAVA_API_ORG_OMG_PORTABLEINTERCEPTOR_CLIENTREQUESTINTERCEPTOROPERATIONS_FWD
#define SCAPIX_JAVA_API_ORG_OMG_PORTABLEINTERCEPTOR_CLIENTREQUESTINTERCEPTOROPERATIONS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::omg::PortableInterceptor { class ClientRequestInterceptorOperations; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::omg::PortableInterceptor::ClientRequestInterceptorOperations>
{
	static constexpr fixed_string class_name = "org/omg/PortableInterceptor/ClientRequestInterceptorOperations";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::org::omg::PortableInterceptor::InterceptorOperations>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_OMG_PORTABLEINTERCEPTOR_CLIENTREQUESTINTERCEPTOROPERATIONS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_OMG_PORTABLEINTERCEPTOR_CLIENTREQUESTINTERCEPTOROPERATIONS)
#define SCAPIX_JAVA_API_ORG_OMG_PORTABLEINTERCEPTOR_CLIENTREQUESTINTERCEPTOROPERATIONS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/org/omg/PortableInterceptor/ClientRequestInfo.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::omg::PortableInterceptor::ClientRequestInterceptorOperations : public jni::object_base<"org/omg/PortableInterceptor/ClientRequestInterceptorOperations",
	java::lang::Object,
	org::omg::PortableInterceptor::InterceptorOperations>
{
public:

	void send_request(jni::ref<org::omg::PortableInterceptor::ClientRequestInfo> p1) { return call_method<"send_request", void>(p1); }
	void send_poll(jni::ref<org::omg::PortableInterceptor::ClientRequestInfo> p1) { return call_method<"send_poll", void>(p1); }
	void receive_reply(jni::ref<org::omg::PortableInterceptor::ClientRequestInfo> p1) { return call_method<"receive_reply", void>(p1); }
	void receive_exception(jni::ref<org::omg::PortableInterceptor::ClientRequestInfo> p1) { return call_method<"receive_exception", void>(p1); }
	void receive_other(jni::ref<org::omg::PortableInterceptor::ClientRequestInfo> p1) { return call_method<"receive_other", void>(p1); }

protected:

	ClientRequestInterceptorOperations(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_OMG_PORTABLEINTERCEPTOR_CLIENTREQUESTINTERCEPTOROPERATIONS
