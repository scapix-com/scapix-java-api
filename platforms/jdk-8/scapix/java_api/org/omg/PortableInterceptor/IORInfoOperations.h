// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ORG_OMG_PORTABLEINTERCEPTOR_IORINFOOPERATIONS_FWD
#define SCAPIX_JAVA_API_ORG_OMG_PORTABLEINTERCEPTOR_IORINFOOPERATIONS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::omg::PortableInterceptor { class IORInfoOperations; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::omg::PortableInterceptor::IORInfoOperations>
{
	static constexpr fixed_string class_name = "org/omg/PortableInterceptor/IORInfoOperations";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_OMG_PORTABLEINTERCEPTOR_IORINFOOPERATIONS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_OMG_PORTABLEINTERCEPTOR_IORINFOOPERATIONS)
#define SCAPIX_JAVA_API_ORG_OMG_PORTABLEINTERCEPTOR_IORINFOOPERATIONS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/org/omg/CORBA/Policy.h>
#include <scapix/java_api/org/omg/IOP/TaggedComponent.h>
#include <scapix/java_api/org/omg/PortableInterceptor/ObjectReferenceFactory.h>
#include <scapix/java_api/org/omg/PortableInterceptor/ObjectReferenceTemplate.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::omg::PortableInterceptor::IORInfoOperations : public jni::object_base<"org/omg/PortableInterceptor/IORInfoOperations",
	java::lang::Object>
{
public:

	jni::ref<org::omg::CORBA::Policy> get_effective_policy(jint p1) { return call_method<"get_effective_policy", jni::ref<org::omg::CORBA::Policy>>(p1); }
	void add_ior_component(jni::ref<org::omg::IOP::TaggedComponent> p1) { return call_method<"add_ior_component", void>(p1); }
	void add_ior_component_to_profile(jni::ref<org::omg::IOP::TaggedComponent> p1, jint p2) { return call_method<"add_ior_component_to_profile", void>(p1, p2); }
	jint manager_id() { return call_method<"manager_id", jint>(); }
	jshort state() { return call_method<"state", jshort>(); }
	jni::ref<org::omg::PortableInterceptor::ObjectReferenceTemplate> adapter_template() { return call_method<"adapter_template", jni::ref<org::omg::PortableInterceptor::ObjectReferenceTemplate>>(); }
	jni::ref<org::omg::PortableInterceptor::ObjectReferenceFactory> current_factory() { return call_method<"current_factory", jni::ref<org::omg::PortableInterceptor::ObjectReferenceFactory>>(); }
	void current_factory(jni::ref<org::omg::PortableInterceptor::ObjectReferenceFactory> p1) { return call_method<"current_factory", void>(p1); }

protected:

	IORInfoOperations(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_OMG_PORTABLEINTERCEPTOR_IORINFOOPERATIONS
