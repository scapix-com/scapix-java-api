// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/org/omg/PortableInterceptor/RequestInfoOperations.h>

#ifndef SCAPIX_JAVA_API_ORG_OMG_PORTABLEINTERCEPTOR_CLIENTREQUESTINFOOPERATIONS_FWD
#define SCAPIX_JAVA_API_ORG_OMG_PORTABLEINTERCEPTOR_CLIENTREQUESTINFOOPERATIONS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::omg::PortableInterceptor { class ClientRequestInfoOperations; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::omg::PortableInterceptor::ClientRequestInfoOperations>
{
	static constexpr fixed_string class_name = "org/omg/PortableInterceptor/ClientRequestInfoOperations";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::org::omg::PortableInterceptor::RequestInfoOperations>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_OMG_PORTABLEINTERCEPTOR_CLIENTREQUESTINFOOPERATIONS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_OMG_PORTABLEINTERCEPTOR_CLIENTREQUESTINFOOPERATIONS)
#define SCAPIX_JAVA_API_ORG_OMG_PORTABLEINTERCEPTOR_CLIENTREQUESTINFOOPERATIONS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/omg/CORBA/Any.h>
#include <scapix/java_api/org/omg/CORBA/Object.h>
#include <scapix/java_api/org/omg/CORBA/Policy.h>
#include <scapix/java_api/org/omg/IOP/ServiceContext.h>
#include <scapix/java_api/org/omg/IOP/TaggedComponent.h>
#include <scapix/java_api/org/omg/IOP/TaggedProfile.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::omg::PortableInterceptor::ClientRequestInfoOperations : public jni::object_base<"org/omg/PortableInterceptor/ClientRequestInfoOperations",
	java::lang::Object,
	org::omg::PortableInterceptor::RequestInfoOperations>
{
public:

	jni::ref<org::omg::CORBA::Object> target() { return call_method<"target", jni::ref<org::omg::CORBA::Object>>(); }
	jni::ref<org::omg::CORBA::Object> effective_target() { return call_method<"effective_target", jni::ref<org::omg::CORBA::Object>>(); }
	jni::ref<org::omg::IOP::TaggedProfile> effective_profile() { return call_method<"effective_profile", jni::ref<org::omg::IOP::TaggedProfile>>(); }
	jni::ref<org::omg::CORBA::Any> received_exception() { return call_method<"received_exception", jni::ref<org::omg::CORBA::Any>>(); }
	jni::ref<java::lang::String> received_exception_id() { return call_method<"received_exception_id", jni::ref<java::lang::String>>(); }
	jni::ref<org::omg::IOP::TaggedComponent> get_effective_component(jint p1) { return call_method<"get_effective_component", jni::ref<org::omg::IOP::TaggedComponent>>(p1); }
	jni::ref<jni::array<org::omg::IOP::TaggedComponent>> get_effective_components(jint p1) { return call_method<"get_effective_components", jni::ref<jni::array<org::omg::IOP::TaggedComponent>>>(p1); }
	jni::ref<org::omg::CORBA::Policy> get_request_policy(jint p1) { return call_method<"get_request_policy", jni::ref<org::omg::CORBA::Policy>>(p1); }
	void add_request_service_context(jni::ref<org::omg::IOP::ServiceContext> p1, jboolean p2) { return call_method<"add_request_service_context", void>(p1, p2); }

protected:

	ClientRequestInfoOperations(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_OMG_PORTABLEINTERCEPTOR_CLIENTREQUESTINFOOPERATIONS
