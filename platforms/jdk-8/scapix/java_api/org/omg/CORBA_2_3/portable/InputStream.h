// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/org/omg/CORBA/portable/InputStream.h>

#ifndef SCAPIX_JAVA_API_ORG_OMG_CORBA_2_3_PORTABLE_INPUTSTREAM_FWD
#define SCAPIX_JAVA_API_ORG_OMG_CORBA_2_3_PORTABLE_INPUTSTREAM_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::omg::CORBA_2_3::portable { class InputStream; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::omg::CORBA_2_3::portable::InputStream>
{
	static constexpr fixed_string class_name = "org/omg/CORBA_2_3/portable/InputStream";
	using base_classes = std::tuple<scapix::java_api::org::omg::CORBA::portable::InputStream>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_OMG_CORBA_2_3_PORTABLE_INPUTSTREAM_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_OMG_CORBA_2_3_PORTABLE_INPUTSTREAM)
#define SCAPIX_JAVA_API_ORG_OMG_CORBA_2_3_PORTABLE_INPUTSTREAM

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/Serializable.h>
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/omg/CORBA/portable/BoxedValueHelper.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::omg::CORBA_2_3::portable::InputStream : public jni::object_base<"org/omg/CORBA_2_3/portable/InputStream",
	org::omg::CORBA::portable::InputStream>
{
public:

	static jni::ref<org::omg::CORBA_2_3::portable::InputStream> new_object() { return base_::new_object(); }
	jni::ref<java::io::Serializable> read_value() { return call_method<"read_value", jni::ref<java::io::Serializable>>(); }
	jni::ref<java::io::Serializable> read_value(jni::ref<java::lang::Class> p1) { return call_method<"read_value", jni::ref<java::io::Serializable>>(p1); }
	jni::ref<java::io::Serializable> read_value(jni::ref<org::omg::CORBA::portable::BoxedValueHelper> p1) { return call_method<"read_value", jni::ref<java::io::Serializable>>(p1); }
	jni::ref<java::io::Serializable> read_value(jni::ref<java::lang::String> p1) { return call_method<"read_value", jni::ref<java::io::Serializable>>(p1); }
	jni::ref<java::io::Serializable> read_value(jni::ref<java::io::Serializable> p1) { return call_method<"read_value", jni::ref<java::io::Serializable>>(p1); }
	jni::ref<java::lang::Object> read_abstract_interface() { return call_method<"read_abstract_interface", jni::ref<java::lang::Object>>(); }
	jni::ref<java::lang::Object> read_abstract_interface(jni::ref<java::lang::Class> p1) { return call_method<"read_abstract_interface", jni::ref<java::lang::Object>>(p1); }

protected:

	InputStream(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_OMG_CORBA_2_3_PORTABLE_INPUTSTREAM
