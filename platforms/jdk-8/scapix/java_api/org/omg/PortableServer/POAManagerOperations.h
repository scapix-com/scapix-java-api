// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ORG_OMG_PORTABLESERVER_POAMANAGEROPERATIONS_FWD
#define SCAPIX_JAVA_API_ORG_OMG_PORTABLESERVER_POAMANAGEROPERATIONS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::omg::PortableServer { class POAManagerOperations; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::omg::PortableServer::POAManagerOperations>
{
	static constexpr fixed_string class_name = "org/omg/PortableServer/POAManagerOperations";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_OMG_PORTABLESERVER_POAMANAGEROPERATIONS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_OMG_PORTABLESERVER_POAMANAGEROPERATIONS)
#define SCAPIX_JAVA_API_ORG_OMG_PORTABLESERVER_POAMANAGEROPERATIONS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/org/omg/PortableServer/POAManagerPackage/State.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::omg::PortableServer::POAManagerOperations : public jni::object_base<"org/omg/PortableServer/POAManagerOperations",
	java::lang::Object>
{
public:

	void activate() { return call_method<"activate", void>(); }
	void hold_requests(jboolean p1) { return call_method<"hold_requests", void>(p1); }
	void discard_requests(jboolean p1) { return call_method<"discard_requests", void>(p1); }
	void deactivate(jboolean p1, jboolean p2) { return call_method<"deactivate", void>(p1, p2); }
	jni::ref<org::omg::PortableServer::POAManagerPackage::State> get_state() { return call_method<"get_state", jni::ref<org::omg::PortableServer::POAManagerPackage::State>>(); }

protected:

	POAManagerOperations(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_OMG_PORTABLESERVER_POAMANAGEROPERATIONS
