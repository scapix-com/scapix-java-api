// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/org/omg/CORBA/portable/IDLEntity.h>

#ifndef SCAPIX_JAVA_API_ORG_OMG_IOP_ENCODING_FWD
#define SCAPIX_JAVA_API_ORG_OMG_IOP_ENCODING_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::omg::IOP { class Encoding; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::omg::IOP::Encoding>
{
	static constexpr fixed_string class_name = "org/omg/IOP/Encoding";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::org::omg::CORBA::portable::IDLEntity>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_OMG_IOP_ENCODING_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_OMG_IOP_ENCODING)
#define SCAPIX_JAVA_API_ORG_OMG_IOP_ENCODING

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::omg::IOP::Encoding : public jni::object_base<"org/omg/IOP/Encoding",
	java::lang::Object,
	org::omg::CORBA::portable::IDLEntity>
{
public:

	jshort format() { return get_field<"format", jshort>(); }
	void format(jshort v) { set_field<"format", jshort>(v); }
	jbyte major_version() { return get_field<"major_version", jbyte>(); }
	void major_version(jbyte v) { set_field<"major_version", jbyte>(v); }
	jbyte minor_version() { return get_field<"minor_version", jbyte>(); }
	void minor_version(jbyte v) { set_field<"minor_version", jbyte>(v); }

	static jni::ref<org::omg::IOP::Encoding> new_object() { return base_::new_object(); }
	static jni::ref<org::omg::IOP::Encoding> new_object(jshort p1, jbyte p2, jbyte p3) { return base_::new_object(p1, p2, p3); }

protected:

	Encoding(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_OMG_IOP_ENCODING
