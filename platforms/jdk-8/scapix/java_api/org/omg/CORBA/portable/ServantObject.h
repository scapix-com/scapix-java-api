// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ORG_OMG_CORBA_PORTABLE_SERVANTOBJECT_FWD
#define SCAPIX_JAVA_API_ORG_OMG_CORBA_PORTABLE_SERVANTOBJECT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::omg::CORBA::portable { class ServantObject; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::omg::CORBA::portable::ServantObject>
{
	static constexpr fixed_string class_name = "org/omg/CORBA/portable/ServantObject";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_OMG_CORBA_PORTABLE_SERVANTOBJECT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_OMG_CORBA_PORTABLE_SERVANTOBJECT)
#define SCAPIX_JAVA_API_ORG_OMG_CORBA_PORTABLE_SERVANTOBJECT

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::omg::CORBA::portable::ServantObject : public jni::object_base<"org/omg/CORBA/portable/ServantObject",
	java::lang::Object>
{
public:

	jni::ref<java::lang::Object> servant() { return get_field<"servant", jni::ref<java::lang::Object>>(); }
	void servant(jni::ref<java::lang::Object> v) { set_field<"servant", jni::ref<java::lang::Object>>(v); }

	static jni::ref<org::omg::CORBA::portable::ServantObject> new_object() { return base_::new_object(); }

protected:

	ServantObject(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_OMG_CORBA_PORTABLE_SERVANTOBJECT
