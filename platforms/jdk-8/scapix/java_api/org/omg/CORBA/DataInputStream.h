// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/org/omg/CORBA/portable/ValueBase.h>

#ifndef SCAPIX_JAVA_API_ORG_OMG_CORBA_DATAINPUTSTREAM_FWD
#define SCAPIX_JAVA_API_ORG_OMG_CORBA_DATAINPUTSTREAM_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::omg::CORBA { class DataInputStream; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::omg::CORBA::DataInputStream>
{
	static constexpr fixed_string class_name = "org/omg/CORBA/DataInputStream";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::org::omg::CORBA::portable::ValueBase>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_OMG_CORBA_DATAINPUTSTREAM_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_OMG_CORBA_DATAINPUTSTREAM)
#define SCAPIX_JAVA_API_ORG_OMG_CORBA_DATAINPUTSTREAM

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/Serializable.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/org/omg/CORBA/Any.h>
#include <scapix/java_api/org/omg/CORBA/AnySeqHolder.h>
#include <scapix/java_api/org/omg/CORBA/BooleanSeqHolder.h>
#include <scapix/java_api/org/omg/CORBA/CharSeqHolder.h>
#include <scapix/java_api/org/omg/CORBA/DoubleSeqHolder.h>
#include <scapix/java_api/org/omg/CORBA/FloatSeqHolder.h>
#include <scapix/java_api/org/omg/CORBA/LongLongSeqHolder.h>
#include <scapix/java_api/org/omg/CORBA/LongSeqHolder.h>
#include <scapix/java_api/org/omg/CORBA/Object.h>
#include <scapix/java_api/org/omg/CORBA/OctetSeqHolder.h>
#include <scapix/java_api/org/omg/CORBA/ShortSeqHolder.h>
#include <scapix/java_api/org/omg/CORBA/TypeCode.h>
#include <scapix/java_api/org/omg/CORBA/ULongLongSeqHolder.h>
#include <scapix/java_api/org/omg/CORBA/ULongSeqHolder.h>
#include <scapix/java_api/org/omg/CORBA/UShortSeqHolder.h>
#include <scapix/java_api/org/omg/CORBA/WCharSeqHolder.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::omg::CORBA::DataInputStream : public jni::object_base<"org/omg/CORBA/DataInputStream",
	java::lang::Object,
	org::omg::CORBA::portable::ValueBase>
{
public:

	jni::ref<org::omg::CORBA::Any> read_any() { return call_method<"read_any", jni::ref<org::omg::CORBA::Any>>(); }
	jboolean read_boolean() { return call_method<"read_boolean", jboolean>(); }
	jchar read_char() { return call_method<"read_char", jchar>(); }
	jchar read_wchar() { return call_method<"read_wchar", jchar>(); }
	jbyte read_octet() { return call_method<"read_octet", jbyte>(); }
	jshort read_short() { return call_method<"read_short", jshort>(); }
	jshort read_ushort() { return call_method<"read_ushort", jshort>(); }
	jint read_long() { return call_method<"read_long", jint>(); }
	jint read_ulong() { return call_method<"read_ulong", jint>(); }
	jlong read_longlong() { return call_method<"read_longlong", jlong>(); }
	jlong read_ulonglong() { return call_method<"read_ulonglong", jlong>(); }
	jfloat read_float() { return call_method<"read_float", jfloat>(); }
	jdouble read_double() { return call_method<"read_double", jdouble>(); }
	jni::ref<java::lang::String> read_string() { return call_method<"read_string", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> read_wstring() { return call_method<"read_wstring", jni::ref<java::lang::String>>(); }
	jni::ref<org::omg::CORBA::Object> read_Object() { return call_method<"read_Object", jni::ref<org::omg::CORBA::Object>>(); }
	jni::ref<java::lang::Object> read_Abstract() { return call_method<"read_Abstract", jni::ref<java::lang::Object>>(); }
	jni::ref<java::io::Serializable> read_Value() { return call_method<"read_Value", jni::ref<java::io::Serializable>>(); }
	jni::ref<org::omg::CORBA::TypeCode> read_TypeCode() { return call_method<"read_TypeCode", jni::ref<org::omg::CORBA::TypeCode>>(); }
	void read_any_array(jni::ref<org::omg::CORBA::AnySeqHolder> p1, jint p2, jint p3) { return call_method<"read_any_array", void>(p1, p2, p3); }
	void read_boolean_array(jni::ref<org::omg::CORBA::BooleanSeqHolder> p1, jint p2, jint p3) { return call_method<"read_boolean_array", void>(p1, p2, p3); }
	void read_char_array(jni::ref<org::omg::CORBA::CharSeqHolder> p1, jint p2, jint p3) { return call_method<"read_char_array", void>(p1, p2, p3); }
	void read_wchar_array(jni::ref<org::omg::CORBA::WCharSeqHolder> p1, jint p2, jint p3) { return call_method<"read_wchar_array", void>(p1, p2, p3); }
	void read_octet_array(jni::ref<org::omg::CORBA::OctetSeqHolder> p1, jint p2, jint p3) { return call_method<"read_octet_array", void>(p1, p2, p3); }
	void read_short_array(jni::ref<org::omg::CORBA::ShortSeqHolder> p1, jint p2, jint p3) { return call_method<"read_short_array", void>(p1, p2, p3); }
	void read_ushort_array(jni::ref<org::omg::CORBA::UShortSeqHolder> p1, jint p2, jint p3) { return call_method<"read_ushort_array", void>(p1, p2, p3); }
	void read_long_array(jni::ref<org::omg::CORBA::LongSeqHolder> p1, jint p2, jint p3) { return call_method<"read_long_array", void>(p1, p2, p3); }
	void read_ulong_array(jni::ref<org::omg::CORBA::ULongSeqHolder> p1, jint p2, jint p3) { return call_method<"read_ulong_array", void>(p1, p2, p3); }
	void read_ulonglong_array(jni::ref<org::omg::CORBA::ULongLongSeqHolder> p1, jint p2, jint p3) { return call_method<"read_ulonglong_array", void>(p1, p2, p3); }
	void read_longlong_array(jni::ref<org::omg::CORBA::LongLongSeqHolder> p1, jint p2, jint p3) { return call_method<"read_longlong_array", void>(p1, p2, p3); }
	void read_float_array(jni::ref<org::omg::CORBA::FloatSeqHolder> p1, jint p2, jint p3) { return call_method<"read_float_array", void>(p1, p2, p3); }
	void read_double_array(jni::ref<org::omg::CORBA::DoubleSeqHolder> p1, jint p2, jint p3) { return call_method<"read_double_array", void>(p1, p2, p3); }

protected:

	DataInputStream(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_OMG_CORBA_DATAINPUTSTREAM
