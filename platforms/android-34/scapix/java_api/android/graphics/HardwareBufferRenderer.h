// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/AutoCloseable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_GRAPHICS_HARDWAREBUFFERRENDERER_FWD
#define SCAPIX_JAVA_API_ANDROID_GRAPHICS_HARDWAREBUFFERRENDERER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::graphics { class HardwareBufferRenderer; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::graphics::HardwareBufferRenderer>
{
	static constexpr fixed_string class_name = "android/graphics/HardwareBufferRenderer";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::lang::AutoCloseable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_GRAPHICS_HARDWAREBUFFERRENDERER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_GRAPHICS_HARDWAREBUFFERRENDERER)
#define SCAPIX_JAVA_API_ANDROID_GRAPHICS_HARDWAREBUFFERRENDERER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/graphics/HardwareBufferRenderer_RenderRequest.h>
#include <scapix/java_api/android/graphics/RenderNode.h>
#include <scapix/java_api/android/hardware/HardwareBuffer.h>
#include <scapix/java_api/android/graphics/HardwareBufferRenderer_RenderResult.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::graphics::HardwareBufferRenderer : public jni::object_base<"android/graphics/HardwareBufferRenderer",
	java::lang::Object,
	java::lang::AutoCloseable>
{
public:

	using RenderResult = HardwareBufferRenderer_RenderResult;
	using RenderRequest = HardwareBufferRenderer_RenderRequest;

	static jni::ref<android::graphics::HardwareBufferRenderer> new_object(jni::ref<android::hardware::HardwareBuffer> buffer) { return base_::new_object(buffer); }
	void setContentRoot(jni::ref<android::graphics::RenderNode> content) { return call_method<"setContentRoot", void>(content); }
	jni::ref<android::graphics::HardwareBufferRenderer_RenderRequest> obtainRenderRequest() { return call_method<"obtainRenderRequest", jni::ref<android::graphics::HardwareBufferRenderer_RenderRequest>>(); }
	jboolean isClosed() { return call_method<"isClosed", jboolean>(); }
	void close() { return call_method<"close", void>(); }
	void setLightSourceGeometry(jfloat lightX, jfloat lightY, jfloat lightZ, jfloat lightRadius) { return call_method<"setLightSourceGeometry", void>(lightX, lightY, lightZ, lightRadius); }
	void setLightSourceAlpha(jfloat ambientShadowAlpha, jfloat spotShadowAlpha) { return call_method<"setLightSourceAlpha", void>(ambientShadowAlpha, spotShadowAlpha); }

protected:

	HardwareBufferRenderer(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_GRAPHICS_HARDWAREBUFFERRENDERER
