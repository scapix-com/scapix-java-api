// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/graphics/drawable/LayerDrawable.h>
#include <scapix/java_api/android/graphics/drawable/Drawable_Callback.h>

#ifndef SCAPIX_JAVA_API_ANDROID_GRAPHICS_DRAWABLE_TRANSITIONDRAWABLE_FWD
#define SCAPIX_JAVA_API_ANDROID_GRAPHICS_DRAWABLE_TRANSITIONDRAWABLE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::graphics::drawable { class TransitionDrawable; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::graphics::drawable::TransitionDrawable>
{
	static constexpr fixed_string class_name = "android/graphics/drawable/TransitionDrawable";
	using base_classes = std::tuple<scapix::java_api::android::graphics::drawable::LayerDrawable, scapix::java_api::android::graphics::drawable::Drawable_Callback>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_GRAPHICS_DRAWABLE_TRANSITIONDRAWABLE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_GRAPHICS_DRAWABLE_TRANSITIONDRAWABLE)
#define SCAPIX_JAVA_API_ANDROID_GRAPHICS_DRAWABLE_TRANSITIONDRAWABLE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/graphics/Canvas.h>
#include <scapix/java_api/android/graphics/drawable/Drawable.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::graphics::drawable::TransitionDrawable : public jni::object_base<"android/graphics/drawable/TransitionDrawable",
	android::graphics::drawable::LayerDrawable,
	android::graphics::drawable::Drawable_Callback>
{
public:

	static jni::ref<android::graphics::drawable::TransitionDrawable> new_object(jni::ref<jni::array<android::graphics::drawable::Drawable>> layers) { return base_::new_object(layers); }
	void startTransition(jint durationMillis) { return call_method<"startTransition", void>(durationMillis); }
	void resetTransition() { return call_method<"resetTransition", void>(); }
	void reverseTransition(jint duration) { return call_method<"reverseTransition", void>(duration); }
	void draw(jni::ref<android::graphics::Canvas> canvas) { return call_method<"draw", void>(canvas); }
	void setCrossFadeEnabled(jboolean enabled) { return call_method<"setCrossFadeEnabled", void>(enabled); }
	jboolean isCrossFadeEnabled() { return call_method<"isCrossFadeEnabled", jboolean>(); }

protected:

	TransitionDrawable(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_GRAPHICS_DRAWABLE_TRANSITIONDRAWABLE
