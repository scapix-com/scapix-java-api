// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/util/Iterator.h>

#ifndef SCAPIX_JAVA_API_ANDROID_GRAPHICS_PATHITERATOR_FWD
#define SCAPIX_JAVA_API_ANDROID_GRAPHICS_PATHITERATOR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::graphics { class PathIterator; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::graphics::PathIterator>
{
	static constexpr fixed_string class_name = "android/graphics/PathIterator";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::util::Iterator>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_GRAPHICS_PATHITERATOR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_GRAPHICS_PATHITERATOR)
#define SCAPIX_JAVA_API_ANDROID_GRAPHICS_PATHITERATOR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/graphics/PathIterator_Segment.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::graphics::PathIterator : public jni::object_base<"android/graphics/PathIterator",
	java::lang::Object,
	java::util::Iterator>
{
public:

	using Segment = PathIterator_Segment;

	static jint VERB_CLOSE() { return get_static_field<"VERB_CLOSE", jint>(); }
	static jint VERB_CONIC() { return get_static_field<"VERB_CONIC", jint>(); }
	static jint VERB_CUBIC() { return get_static_field<"VERB_CUBIC", jint>(); }
	static jint VERB_DONE() { return get_static_field<"VERB_DONE", jint>(); }
	static jint VERB_LINE() { return get_static_field<"VERB_LINE", jint>(); }
	static jint VERB_MOVE() { return get_static_field<"VERB_MOVE", jint>(); }
	static jint VERB_QUAD() { return get_static_field<"VERB_QUAD", jint>(); }

	jint next(jni::ref<jni::array<jfloat>> points, jint offset) { return call_method<"next", jint>(points, offset); }
	jboolean hasNext() { return call_method<"hasNext", jboolean>(); }
	jint peek() { return call_method<"peek", jint>(); }
	jni::ref<android::graphics::PathIterator_Segment> next() { return call_method<"next", jni::ref<android::graphics::PathIterator_Segment>>(); }

protected:

	PathIterator(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_GRAPHICS_PATHITERATOR
