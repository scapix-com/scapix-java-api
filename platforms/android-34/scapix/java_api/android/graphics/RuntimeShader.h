// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/graphics/Shader.h>

#ifndef SCAPIX_JAVA_API_ANDROID_GRAPHICS_RUNTIMESHADER_FWD
#define SCAPIX_JAVA_API_ANDROID_GRAPHICS_RUNTIMESHADER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::graphics { class RuntimeShader; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::graphics::RuntimeShader>
{
	static constexpr fixed_string class_name = "android/graphics/RuntimeShader";
	using base_classes = std::tuple<scapix::java_api::android::graphics::Shader>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_GRAPHICS_RUNTIMESHADER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_GRAPHICS_RUNTIMESHADER)
#define SCAPIX_JAVA_API_ANDROID_GRAPHICS_RUNTIMESHADER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/graphics/BitmapShader.h>
#include <scapix/java_api/android/graphics/Color.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::graphics::RuntimeShader : public jni::object_base<"android/graphics/RuntimeShader",
	android::graphics::Shader>
{
public:

	static jni::ref<android::graphics::RuntimeShader> new_object(jni::ref<java::lang::String> shader) { return base_::new_object(shader); }
	void setColorUniform(jni::ref<java::lang::String> uniformName, jint color) { return call_method<"setColorUniform", void>(uniformName, color); }
	void setColorUniform(jni::ref<java::lang::String> uniformName, jlong color) { return call_method<"setColorUniform", void>(uniformName, color); }
	void setColorUniform(jni::ref<java::lang::String> uniformName, jni::ref<android::graphics::Color> color) { return call_method<"setColorUniform", void>(uniformName, color); }
	void setFloatUniform(jni::ref<java::lang::String> uniformName, jfloat value) { return call_method<"setFloatUniform", void>(uniformName, value); }
	void setFloatUniform(jni::ref<java::lang::String> uniformName, jfloat value1, jfloat value2) { return call_method<"setFloatUniform", void>(uniformName, value1, value2); }
	void setFloatUniform(jni::ref<java::lang::String> uniformName, jfloat value1, jfloat value2, jfloat value3) { return call_method<"setFloatUniform", void>(uniformName, value1, value2, value3); }
	void setFloatUniform(jni::ref<java::lang::String> uniformName, jfloat value1, jfloat value2, jfloat value3, jfloat value4) { return call_method<"setFloatUniform", void>(uniformName, value1, value2, value3, value4); }
	void setFloatUniform(jni::ref<java::lang::String> uniformName, jni::ref<jni::array<jfloat>> values) { return call_method<"setFloatUniform", void>(uniformName, values); }
	void setIntUniform(jni::ref<java::lang::String> uniformName, jint value) { return call_method<"setIntUniform", void>(uniformName, value); }
	void setIntUniform(jni::ref<java::lang::String> uniformName, jint value1, jint value2) { return call_method<"setIntUniform", void>(uniformName, value1, value2); }
	void setIntUniform(jni::ref<java::lang::String> uniformName, jint value1, jint value2, jint value3) { return call_method<"setIntUniform", void>(uniformName, value1, value2, value3); }
	void setIntUniform(jni::ref<java::lang::String> uniformName, jint value1, jint value2, jint value3, jint value4) { return call_method<"setIntUniform", void>(uniformName, value1, value2, value3, value4); }
	void setIntUniform(jni::ref<java::lang::String> uniformName, jni::ref<jni::array<jint>> values) { return call_method<"setIntUniform", void>(uniformName, values); }
	void setInputShader(jni::ref<java::lang::String> shaderName, jni::ref<android::graphics::Shader> shader) { return call_method<"setInputShader", void>(shaderName, shader); }
	void setInputBuffer(jni::ref<java::lang::String> shaderName, jni::ref<android::graphics::BitmapShader> shader) { return call_method<"setInputBuffer", void>(shaderName, shader); }

protected:

	RuntimeShader(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_GRAPHICS_RUNTIMESHADER
