// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_GRAPHICS_MESHSPECIFICATION_ATTRIBUTE_FWD
#define SCAPIX_JAVA_API_ANDROID_GRAPHICS_MESHSPECIFICATION_ATTRIBUTE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::graphics { class MeshSpecification_Attribute; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::graphics::MeshSpecification_Attribute>
{
	static constexpr fixed_string class_name = "android/graphics/MeshSpecification$Attribute";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_GRAPHICS_MESHSPECIFICATION_ATTRIBUTE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_GRAPHICS_MESHSPECIFICATION_ATTRIBUTE)
#define SCAPIX_JAVA_API_ANDROID_GRAPHICS_MESHSPECIFICATION_ATTRIBUTE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::graphics::MeshSpecification_Attribute : public jni::object_base<"android/graphics/MeshSpecification$Attribute",
	java::lang::Object>
{
public:

	static jni::ref<android::graphics::MeshSpecification_Attribute> new_object(jint type, jint offset, jni::ref<java::lang::String> name) { return base_::new_object(type, offset, name); }
	jint getType() { return call_method<"getType", jint>(); }
	jint getOffset() { return call_method<"getOffset", jint>(); }
	jni::ref<java::lang::String> getName() { return call_method<"getName", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	MeshSpecification_Attribute(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_GRAPHICS_MESHSPECIFICATION_ATTRIBUTE
