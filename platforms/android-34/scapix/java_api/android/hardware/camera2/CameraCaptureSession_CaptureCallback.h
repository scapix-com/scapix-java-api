// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA2_CAMERACAPTURESESSION_CAPTURECALLBACK_FWD
#define SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA2_CAMERACAPTURESESSION_CAPTURECALLBACK_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::hardware::camera2 { class CameraCaptureSession_CaptureCallback; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::hardware::camera2::CameraCaptureSession_CaptureCallback>
{
	static constexpr fixed_string class_name = "android/hardware/camera2/CameraCaptureSession$CaptureCallback";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA2_CAMERACAPTURESESSION_CAPTURECALLBACK_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA2_CAMERACAPTURESESSION_CAPTURECALLBACK)
#define SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA2_CAMERACAPTURESESSION_CAPTURECALLBACK

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/hardware/camera2/CameraCaptureSession.h>
#include <scapix/java_api/android/hardware/camera2/CaptureFailure.h>
#include <scapix/java_api/android/hardware/camera2/CaptureRequest.h>
#include <scapix/java_api/android/hardware/camera2/CaptureResult.h>
#include <scapix/java_api/android/hardware/camera2/TotalCaptureResult.h>
#include <scapix/java_api/android/view/Surface.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::hardware::camera2::CameraCaptureSession_CaptureCallback : public jni::object_base<"android/hardware/camera2/CameraCaptureSession$CaptureCallback",
	java::lang::Object>
{
public:

	static jni::ref<android::hardware::camera2::CameraCaptureSession_CaptureCallback> new_object() { return base_::new_object(); }
	void onCaptureStarted(jni::ref<android::hardware::camera2::CameraCaptureSession> session, jni::ref<android::hardware::camera2::CaptureRequest> request, jlong timestamp, jlong p4) { return call_method<"onCaptureStarted", void>(session, request, timestamp, p4); }
	void onReadoutStarted(jni::ref<android::hardware::camera2::CameraCaptureSession> session, jni::ref<android::hardware::camera2::CaptureRequest> request, jlong timestamp, jlong p4) { return call_method<"onReadoutStarted", void>(session, request, timestamp, p4); }
	void onCaptureProgressed(jni::ref<android::hardware::camera2::CameraCaptureSession> session, jni::ref<android::hardware::camera2::CaptureRequest> request, jni::ref<android::hardware::camera2::CaptureResult> partialResult) { return call_method<"onCaptureProgressed", void>(session, request, partialResult); }
	void onCaptureCompleted(jni::ref<android::hardware::camera2::CameraCaptureSession> session, jni::ref<android::hardware::camera2::CaptureRequest> request, jni::ref<android::hardware::camera2::TotalCaptureResult> result) { return call_method<"onCaptureCompleted", void>(session, request, result); }
	void onCaptureFailed(jni::ref<android::hardware::camera2::CameraCaptureSession> session, jni::ref<android::hardware::camera2::CaptureRequest> request, jni::ref<android::hardware::camera2::CaptureFailure> failure) { return call_method<"onCaptureFailed", void>(session, request, failure); }
	void onCaptureSequenceCompleted(jni::ref<android::hardware::camera2::CameraCaptureSession> session, jint sequenceId, jlong frameNumber) { return call_method<"onCaptureSequenceCompleted", void>(session, sequenceId, frameNumber); }
	void onCaptureSequenceAborted(jni::ref<android::hardware::camera2::CameraCaptureSession> session, jint sequenceId) { return call_method<"onCaptureSequenceAborted", void>(session, sequenceId); }
	void onCaptureBufferLost(jni::ref<android::hardware::camera2::CameraCaptureSession> session, jni::ref<android::hardware::camera2::CaptureRequest> request, jni::ref<android::view::Surface> target, jlong frameNumber) { return call_method<"onCaptureBufferLost", void>(session, request, target, frameNumber); }

protected:

	CameraCaptureSession_CaptureCallback(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA2_CAMERACAPTURESESSION_CAPTURECALLBACK
