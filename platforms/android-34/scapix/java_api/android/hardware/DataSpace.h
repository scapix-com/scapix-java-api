// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_HARDWARE_DATASPACE_FWD
#define SCAPIX_JAVA_API_ANDROID_HARDWARE_DATASPACE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::hardware { class DataSpace; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::hardware::DataSpace>
{
	static constexpr fixed_string class_name = "android/hardware/DataSpace";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_HARDWARE_DATASPACE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_HARDWARE_DATASPACE)
#define SCAPIX_JAVA_API_ANDROID_HARDWARE_DATASPACE

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::hardware::DataSpace : public jni::object_base<"android/hardware/DataSpace",
	java::lang::Object>
{
public:

	static jint DATASPACE_ADOBE_RGB() { return get_static_field<"DATASPACE_ADOBE_RGB", jint>(); }
	static jint DATASPACE_BT2020() { return get_static_field<"DATASPACE_BT2020", jint>(); }
	static jint DATASPACE_BT2020_HLG() { return get_static_field<"DATASPACE_BT2020_HLG", jint>(); }
	static jint DATASPACE_BT2020_PQ() { return get_static_field<"DATASPACE_BT2020_PQ", jint>(); }
	static jint DATASPACE_BT601_525() { return get_static_field<"DATASPACE_BT601_525", jint>(); }
	static jint DATASPACE_BT601_625() { return get_static_field<"DATASPACE_BT601_625", jint>(); }
	static jint DATASPACE_BT709() { return get_static_field<"DATASPACE_BT709", jint>(); }
	static jint DATASPACE_DCI_P3() { return get_static_field<"DATASPACE_DCI_P3", jint>(); }
	static jint DATASPACE_DEPTH() { return get_static_field<"DATASPACE_DEPTH", jint>(); }
	static jint DATASPACE_DISPLAY_P3() { return get_static_field<"DATASPACE_DISPLAY_P3", jint>(); }
	static jint DATASPACE_DYNAMIC_DEPTH() { return get_static_field<"DATASPACE_DYNAMIC_DEPTH", jint>(); }
	static jint DATASPACE_HEIF() { return get_static_field<"DATASPACE_HEIF", jint>(); }
	static jint DATASPACE_JFIF() { return get_static_field<"DATASPACE_JFIF", jint>(); }
	static jint DATASPACE_JPEG_R() { return get_static_field<"DATASPACE_JPEG_R", jint>(); }
	static jint DATASPACE_SCRGB() { return get_static_field<"DATASPACE_SCRGB", jint>(); }
	static jint DATASPACE_SCRGB_LINEAR() { return get_static_field<"DATASPACE_SCRGB_LINEAR", jint>(); }
	static jint DATASPACE_SRGB() { return get_static_field<"DATASPACE_SRGB", jint>(); }
	static jint DATASPACE_SRGB_LINEAR() { return get_static_field<"DATASPACE_SRGB_LINEAR", jint>(); }
	static jint DATASPACE_UNKNOWN() { return get_static_field<"DATASPACE_UNKNOWN", jint>(); }
	static jint RANGE_EXTENDED() { return get_static_field<"RANGE_EXTENDED", jint>(); }
	static jint RANGE_FULL() { return get_static_field<"RANGE_FULL", jint>(); }
	static jint RANGE_LIMITED() { return get_static_field<"RANGE_LIMITED", jint>(); }
	static jint RANGE_UNSPECIFIED() { return get_static_field<"RANGE_UNSPECIFIED", jint>(); }
	static jint STANDARD_ADOBE_RGB() { return get_static_field<"STANDARD_ADOBE_RGB", jint>(); }
	static jint STANDARD_BT2020() { return get_static_field<"STANDARD_BT2020", jint>(); }
	static jint STANDARD_BT2020_CONSTANT_LUMINANCE() { return get_static_field<"STANDARD_BT2020_CONSTANT_LUMINANCE", jint>(); }
	static jint STANDARD_BT470M() { return get_static_field<"STANDARD_BT470M", jint>(); }
	static jint STANDARD_BT601_525() { return get_static_field<"STANDARD_BT601_525", jint>(); }
	static jint STANDARD_BT601_525_UNADJUSTED() { return get_static_field<"STANDARD_BT601_525_UNADJUSTED", jint>(); }
	static jint STANDARD_BT601_625() { return get_static_field<"STANDARD_BT601_625", jint>(); }
	static jint STANDARD_BT601_625_UNADJUSTED() { return get_static_field<"STANDARD_BT601_625_UNADJUSTED", jint>(); }
	static jint STANDARD_BT709() { return get_static_field<"STANDARD_BT709", jint>(); }
	static jint STANDARD_DCI_P3() { return get_static_field<"STANDARD_DCI_P3", jint>(); }
	static jint STANDARD_FILM() { return get_static_field<"STANDARD_FILM", jint>(); }
	static jint STANDARD_UNSPECIFIED() { return get_static_field<"STANDARD_UNSPECIFIED", jint>(); }
	static jint TRANSFER_GAMMA2_2() { return get_static_field<"TRANSFER_GAMMA2_2", jint>(); }
	static jint TRANSFER_GAMMA2_6() { return get_static_field<"TRANSFER_GAMMA2_6", jint>(); }
	static jint TRANSFER_GAMMA2_8() { return get_static_field<"TRANSFER_GAMMA2_8", jint>(); }
	static jint TRANSFER_HLG() { return get_static_field<"TRANSFER_HLG", jint>(); }
	static jint TRANSFER_LINEAR() { return get_static_field<"TRANSFER_LINEAR", jint>(); }
	static jint TRANSFER_SMPTE_170M() { return get_static_field<"TRANSFER_SMPTE_170M", jint>(); }
	static jint TRANSFER_SRGB() { return get_static_field<"TRANSFER_SRGB", jint>(); }
	static jint TRANSFER_ST2084() { return get_static_field<"TRANSFER_ST2084", jint>(); }
	static jint TRANSFER_UNSPECIFIED() { return get_static_field<"TRANSFER_UNSPECIFIED", jint>(); }

	static jint pack(jint standard, jint transfer, jint range) { return call_static_method<"pack", jint>(standard, transfer, range); }
	static jint getStandard(jint dataSpace) { return call_static_method<"getStandard", jint>(dataSpace); }
	static jint getTransfer(jint dataSpace) { return call_static_method<"getTransfer", jint>(dataSpace); }
	static jint getRange(jint dataSpace) { return call_static_method<"getRange", jint>(dataSpace); }

protected:

	DataSpace(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_HARDWARE_DATASPACE
