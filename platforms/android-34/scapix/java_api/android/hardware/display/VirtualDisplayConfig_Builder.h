// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_HARDWARE_DISPLAY_VIRTUALDISPLAYCONFIG_BUILDER_FWD
#define SCAPIX_JAVA_API_ANDROID_HARDWARE_DISPLAY_VIRTUALDISPLAYCONFIG_BUILDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::hardware::display { class VirtualDisplayConfig_Builder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::hardware::display::VirtualDisplayConfig_Builder>
{
	static constexpr fixed_string class_name = "android/hardware/display/VirtualDisplayConfig$Builder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_HARDWARE_DISPLAY_VIRTUALDISPLAYCONFIG_BUILDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_HARDWARE_DISPLAY_VIRTUALDISPLAYCONFIG_BUILDER)
#define SCAPIX_JAVA_API_ANDROID_HARDWARE_DISPLAY_VIRTUALDISPLAYCONFIG_BUILDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/hardware/display/VirtualDisplayConfig.h>
#include <scapix/java_api/android/view/Surface.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Set.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::hardware::display::VirtualDisplayConfig_Builder : public jni::object_base<"android/hardware/display/VirtualDisplayConfig$Builder",
	java::lang::Object>
{
public:

	static jni::ref<android::hardware::display::VirtualDisplayConfig_Builder> new_object(jni::ref<java::lang::String> name, jint width, jint height, jint densityDpi) { return base_::new_object(name, width, height, densityDpi); }
	jni::ref<android::hardware::display::VirtualDisplayConfig_Builder> setFlags(jint flags) { return call_method<"setFlags", jni::ref<android::hardware::display::VirtualDisplayConfig_Builder>>(flags); }
	jni::ref<android::hardware::display::VirtualDisplayConfig_Builder> setSurface(jni::ref<android::view::Surface> surface) { return call_method<"setSurface", jni::ref<android::hardware::display::VirtualDisplayConfig_Builder>>(surface); }
	jni::ref<android::hardware::display::VirtualDisplayConfig_Builder> setDisplayCategories(jni::ref<java::util::Set> displayCategories) { return call_method<"setDisplayCategories", jni::ref<android::hardware::display::VirtualDisplayConfig_Builder>>(displayCategories); }
	jni::ref<android::hardware::display::VirtualDisplayConfig_Builder> addDisplayCategory(jni::ref<java::lang::String> displayCategory) { return call_method<"addDisplayCategory", jni::ref<android::hardware::display::VirtualDisplayConfig_Builder>>(displayCategory); }
	jni::ref<android::hardware::display::VirtualDisplayConfig_Builder> setRequestedRefreshRate(jfloat requestedRefreshRate) { return call_method<"setRequestedRefreshRate", jni::ref<android::hardware::display::VirtualDisplayConfig_Builder>>(requestedRefreshRate); }
	jni::ref<android::hardware::display::VirtualDisplayConfig> build() { return call_method<"build", jni::ref<android::hardware::display::VirtualDisplayConfig>>(); }

protected:

	VirtualDisplayConfig_Builder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_HARDWARE_DISPLAY_VIRTUALDISPLAYCONFIG_BUILDER
