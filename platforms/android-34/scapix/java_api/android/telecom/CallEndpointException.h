// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/RuntimeException.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_TELECOM_CALLENDPOINTEXCEPTION_FWD
#define SCAPIX_JAVA_API_ANDROID_TELECOM_CALLENDPOINTEXCEPTION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::telecom { class CallEndpointException; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::telecom::CallEndpointException>
{
	static constexpr fixed_string class_name = "android/telecom/CallEndpointException";
	using base_classes = std::tuple<scapix::java_api::java::lang::RuntimeException, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TELECOM_CALLENDPOINTEXCEPTION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_TELECOM_CALLENDPOINTEXCEPTION)
#define SCAPIX_JAVA_API_ANDROID_TELECOM_CALLENDPOINTEXCEPTION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::telecom::CallEndpointException : public jni::object_base<"android/telecom/CallEndpointException",
	java::lang::RuntimeException,
	android::os::Parcelable>
{
public:

	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }
	static jint ERROR_ANOTHER_REQUEST() { return get_static_field<"ERROR_ANOTHER_REQUEST", jint>(); }
	static jint ERROR_ENDPOINT_DOES_NOT_EXIST() { return get_static_field<"ERROR_ENDPOINT_DOES_NOT_EXIST", jint>(); }
	static jint ERROR_REQUEST_TIME_OUT() { return get_static_field<"ERROR_REQUEST_TIME_OUT", jint>(); }
	static jint ERROR_UNSPECIFIED() { return get_static_field<"ERROR_UNSPECIFIED", jint>(); }

	static jni::ref<android::telecom::CallEndpointException> new_object(jni::ref<java::lang::String> message, jint code) { return base_::new_object(message, code); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	void writeToParcel(jni::ref<android::os::Parcel> dest, jint flags) { return call_method<"writeToParcel", void>(dest, flags); }
	jint getCode() { return call_method<"getCode", jint>(); }

protected:

	CallEndpointException(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TELECOM_CALLENDPOINTEXCEPTION
