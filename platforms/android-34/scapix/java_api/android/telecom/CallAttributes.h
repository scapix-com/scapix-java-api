// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_TELECOM_CALLATTRIBUTES_FWD
#define SCAPIX_JAVA_API_ANDROID_TELECOM_CALLATTRIBUTES_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::telecom { class CallAttributes; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::telecom::CallAttributes>
{
	static constexpr fixed_string class_name = "android/telecom/CallAttributes";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TELECOM_CALLATTRIBUTES_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_TELECOM_CALLATTRIBUTES)
#define SCAPIX_JAVA_API_ANDROID_TELECOM_CALLATTRIBUTES

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/android/telecom/PhoneAccountHandle.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/android/telecom/CallAttributes_Builder.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::telecom::CallAttributes : public jni::object_base<"android/telecom/CallAttributes",
	java::lang::Object,
	android::os::Parcelable>
{
public:

	using Builder = CallAttributes_Builder;

	static jint AUDIO_CALL() { return get_static_field<"AUDIO_CALL", jint>(); }
	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }
	static jint DIRECTION_INCOMING() { return get_static_field<"DIRECTION_INCOMING", jint>(); }
	static jint DIRECTION_OUTGOING() { return get_static_field<"DIRECTION_OUTGOING", jint>(); }
	static jint SUPPORTS_SET_INACTIVE() { return get_static_field<"SUPPORTS_SET_INACTIVE", jint>(); }
	static jint SUPPORTS_STREAM() { return get_static_field<"SUPPORTS_STREAM", jint>(); }
	static jint SUPPORTS_TRANSFER() { return get_static_field<"SUPPORTS_TRANSFER", jint>(); }
	static jint VIDEO_CALL() { return get_static_field<"VIDEO_CALL", jint>(); }

	jni::ref<android::telecom::PhoneAccountHandle> getPhoneAccountHandle() { return call_method<"getPhoneAccountHandle", jni::ref<android::telecom::PhoneAccountHandle>>(); }
	jni::ref<java::lang::CharSequence> getDisplayName() { return call_method<"getDisplayName", jni::ref<java::lang::CharSequence>>(); }
	jni::ref<android::net::Uri> getAddress() { return call_method<"getAddress", jni::ref<android::net::Uri>>(); }
	jint getDirection() { return call_method<"getDirection", jint>(); }
	jint getCallType() { return call_method<"getCallType", jint>(); }
	jint getCallCapabilities() { return call_method<"getCallCapabilities", jint>(); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	void writeToParcel(jni::ref<android::os::Parcel> dest, jint flags) { return call_method<"writeToParcel", void>(dest, flags); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jboolean equals(jni::ref<java::lang::Object> obj) { return call_method<"equals", jboolean>(obj); }
	jint hashCode() { return call_method<"hashCode", jint>(); }

protected:

	CallAttributes(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TELECOM_CALLATTRIBUTES
