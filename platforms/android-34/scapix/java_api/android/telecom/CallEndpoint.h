// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_TELECOM_CALLENDPOINT_FWD
#define SCAPIX_JAVA_API_ANDROID_TELECOM_CALLENDPOINT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::telecom { class CallEndpoint; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::telecom::CallEndpoint>
{
	static constexpr fixed_string class_name = "android/telecom/CallEndpoint";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TELECOM_CALLENDPOINT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_TELECOM_CALLENDPOINT)
#define SCAPIX_JAVA_API_ANDROID_TELECOM_CALLENDPOINT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/ParcelUuid.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::telecom::CallEndpoint : public jni::object_base<"android/telecom/CallEndpoint",
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }
	static jint TYPE_BLUETOOTH() { return get_static_field<"TYPE_BLUETOOTH", jint>(); }
	static jint TYPE_EARPIECE() { return get_static_field<"TYPE_EARPIECE", jint>(); }
	static jint TYPE_SPEAKER() { return get_static_field<"TYPE_SPEAKER", jint>(); }
	static jint TYPE_STREAMING() { return get_static_field<"TYPE_STREAMING", jint>(); }
	static jint TYPE_UNKNOWN() { return get_static_field<"TYPE_UNKNOWN", jint>(); }
	static jint TYPE_WIRED_HEADSET() { return get_static_field<"TYPE_WIRED_HEADSET", jint>(); }

	static jni::ref<android::telecom::CallEndpoint> new_object(jni::ref<java::lang::CharSequence> name, jint type, jni::ref<android::os::ParcelUuid> id) { return base_::new_object(name, type, id); }
	jboolean equals(jni::ref<java::lang::Object> obj) { return call_method<"equals", jboolean>(obj); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::CharSequence> getEndpointName() { return call_method<"getEndpointName", jni::ref<java::lang::CharSequence>>(); }
	jint getEndpointType() { return call_method<"getEndpointType", jint>(); }
	jni::ref<android::os::ParcelUuid> getIdentifier() { return call_method<"getIdentifier", jni::ref<android::os::ParcelUuid>>(); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	void writeToParcel(jni::ref<android::os::Parcel> destination, jint flags) { return call_method<"writeToParcel", void>(destination, flags); }

protected:

	CallEndpoint(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TELECOM_CALLENDPOINT
