// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_HEALTH_CONNECT_DATATYPES_DEVICE_BUILDER_FWD
#define SCAPIX_JAVA_API_ANDROID_HEALTH_CONNECT_DATATYPES_DEVICE_BUILDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::health::connect::datatypes { class Device_Builder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::health::connect::datatypes::Device_Builder>
{
	static constexpr fixed_string class_name = "android/health/connect/datatypes/Device$Builder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_HEALTH_CONNECT_DATATYPES_DEVICE_BUILDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_HEALTH_CONNECT_DATATYPES_DEVICE_BUILDER)
#define SCAPIX_JAVA_API_ANDROID_HEALTH_CONNECT_DATATYPES_DEVICE_BUILDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/health/connect/datatypes/Device.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::health::connect::datatypes::Device_Builder : public jni::object_base<"android/health/connect/datatypes/Device$Builder",
	java::lang::Object>
{
public:

	static jni::ref<android::health::connect::datatypes::Device_Builder> new_object() { return base_::new_object(); }
	jni::ref<android::health::connect::datatypes::Device_Builder> setManufacturer(jni::ref<java::lang::String> manufacturer) { return call_method<"setManufacturer", jni::ref<android::health::connect::datatypes::Device_Builder>>(manufacturer); }
	jni::ref<android::health::connect::datatypes::Device_Builder> setModel(jni::ref<java::lang::String> model) { return call_method<"setModel", jni::ref<android::health::connect::datatypes::Device_Builder>>(model); }
	jni::ref<android::health::connect::datatypes::Device_Builder> setType(jint type) { return call_method<"setType", jni::ref<android::health::connect::datatypes::Device_Builder>>(type); }
	jni::ref<android::health::connect::datatypes::Device> build() { return call_method<"build", jni::ref<android::health::connect::datatypes::Device>>(); }

protected:

	Device_Builder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_HEALTH_CONNECT_DATATYPES_DEVICE_BUILDER
