// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_HEALTH_CONNECT_READRECORDSREQUESTUSINGFILTERS_BUILDER_FWD
#define SCAPIX_JAVA_API_ANDROID_HEALTH_CONNECT_READRECORDSREQUESTUSINGFILTERS_BUILDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::health::connect { class ReadRecordsRequestUsingFilters_Builder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::health::connect::ReadRecordsRequestUsingFilters_Builder>
{
	static constexpr fixed_string class_name = "android/health/connect/ReadRecordsRequestUsingFilters$Builder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_HEALTH_CONNECT_READRECORDSREQUESTUSINGFILTERS_BUILDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_HEALTH_CONNECT_READRECORDSREQUESTUSINGFILTERS_BUILDER)
#define SCAPIX_JAVA_API_ANDROID_HEALTH_CONNECT_READRECORDSREQUESTUSINGFILTERS_BUILDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/health/connect/ReadRecordsRequestUsingFilters.h>
#include <scapix/java_api/android/health/connect/TimeRangeFilter.h>
#include <scapix/java_api/android/health/connect/datatypes/DataOrigin.h>
#include <scapix/java_api/java/lang/Class.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::health::connect::ReadRecordsRequestUsingFilters_Builder : public jni::object_base<"android/health/connect/ReadRecordsRequestUsingFilters$Builder",
	java::lang::Object>
{
public:

	static jni::ref<android::health::connect::ReadRecordsRequestUsingFilters_Builder> new_object(jni::ref<java::lang::Class> recordType) { return base_::new_object(recordType); }
	jni::ref<android::health::connect::ReadRecordsRequestUsingFilters_Builder> addDataOrigins(jni::ref<android::health::connect::datatypes::DataOrigin> dataOrigin) { return call_method<"addDataOrigins", jni::ref<android::health::connect::ReadRecordsRequestUsingFilters_Builder>>(dataOrigin); }
	jni::ref<android::health::connect::ReadRecordsRequestUsingFilters_Builder> setTimeRangeFilter(jni::ref<android::health::connect::TimeRangeFilter> timeRangeFilter) { return call_method<"setTimeRangeFilter", jni::ref<android::health::connect::ReadRecordsRequestUsingFilters_Builder>>(timeRangeFilter); }
	jni::ref<android::health::connect::ReadRecordsRequestUsingFilters_Builder> setPageSize(jint pageSize) { return call_method<"setPageSize", jni::ref<android::health::connect::ReadRecordsRequestUsingFilters_Builder>>(pageSize); }
	jni::ref<android::health::connect::ReadRecordsRequestUsingFilters_Builder> setPageToken(jlong pageToken) { return call_method<"setPageToken", jni::ref<android::health::connect::ReadRecordsRequestUsingFilters_Builder>>(pageToken); }
	jni::ref<android::health::connect::ReadRecordsRequestUsingFilters_Builder> setAscending(jboolean ascending) { return call_method<"setAscending", jni::ref<android::health::connect::ReadRecordsRequestUsingFilters_Builder>>(ascending); }
	jni::ref<android::health::connect::ReadRecordsRequestUsingFilters> build() { return call_method<"build", jni::ref<android::health::connect::ReadRecordsRequestUsingFilters>>(); }

protected:

	ReadRecordsRequestUsingFilters_Builder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_HEALTH_CONNECT_READRECORDSREQUESTUSINGFILTERS_BUILDER
