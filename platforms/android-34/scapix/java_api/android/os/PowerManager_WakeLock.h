// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_OS_POWERMANAGER_WAKELOCK_FWD
#define SCAPIX_JAVA_API_ANDROID_OS_POWERMANAGER_WAKELOCK_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::os { class PowerManager_WakeLock; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::os::PowerManager_WakeLock>
{
	static constexpr fixed_string class_name = "android/os/PowerManager$WakeLock";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_OS_POWERMANAGER_WAKELOCK_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_OS_POWERMANAGER_WAKELOCK)
#define SCAPIX_JAVA_API_ANDROID_OS_POWERMANAGER_WAKELOCK

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/os/PowerManager_WakeLockStateListener.h>
#include <scapix/java_api/android/os/WorkSource.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/concurrent/Executor.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::os::PowerManager_WakeLock : public jni::object_base<"android/os/PowerManager$WakeLock",
	java::lang::Object>
{
public:

	void setReferenceCounted(jboolean value) { return call_method<"setReferenceCounted", void>(value); }
	void acquire() { return call_method<"acquire", void>(); }
	void acquire(jlong timeout) { return call_method<"acquire", void>(timeout); }
	void release() { return call_method<"release", void>(); }
	void release(jint flags) { return call_method<"release", void>(flags); }
	jboolean isHeld() { return call_method<"isHeld", jboolean>(); }
	void setWorkSource(jni::ref<android::os::WorkSource> ws) { return call_method<"setWorkSource", void>(ws); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	void setStateListener(jni::ref<java::util::concurrent::Executor> executor, jni::ref<android::os::PowerManager_WakeLockStateListener> listener) { return call_method<"setStateListener", void>(executor, listener); }

protected:

	PowerManager_WakeLock(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_OS_POWERMANAGER_WAKELOCK
