// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_OS_HEALTH_TIMERSTAT_FWD
#define SCAPIX_JAVA_API_ANDROID_OS_HEALTH_TIMERSTAT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::os::health { class TimerStat; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::os::health::TimerStat>
{
	static constexpr fixed_string class_name = "android/os/health/TimerStat";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_OS_HEALTH_TIMERSTAT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_OS_HEALTH_TIMERSTAT)
#define SCAPIX_JAVA_API_ANDROID_OS_HEALTH_TIMERSTAT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::os::health::TimerStat : public jni::object_base<"android/os/health/TimerStat",
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }

	static jni::ref<android::os::health::TimerStat> new_object() { return base_::new_object(); }
	static jni::ref<android::os::health::TimerStat> new_object(jint count, jlong time) { return base_::new_object(count, time); }
	static jni::ref<android::os::health::TimerStat> new_object(jni::ref<android::os::Parcel> in) { return base_::new_object(in); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	void writeToParcel(jni::ref<android::os::Parcel> out, jint flags) { return call_method<"writeToParcel", void>(out, flags); }
	void setCount(jint count) { return call_method<"setCount", void>(count); }
	jint getCount() { return call_method<"getCount", jint>(); }
	void setTime(jlong time) { return call_method<"setTime", void>(time); }
	jlong getTime() { return call_method<"getTime", jlong>(); }

protected:

	TimerStat(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_OS_HEALTH_TIMERSTAT
