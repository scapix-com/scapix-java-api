// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_APP_PICTUREINPICTUREPARAMS_FWD
#define SCAPIX_JAVA_API_ANDROID_APP_PICTUREINPICTUREPARAMS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::app { class PictureInPictureParams; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::app::PictureInPictureParams>
{
	static constexpr fixed_string class_name = "android/app/PictureInPictureParams";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_PICTUREINPICTUREPARAMS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_APP_PICTUREINPICTUREPARAMS)
#define SCAPIX_JAVA_API_ANDROID_APP_PICTUREINPICTUREPARAMS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/app/RemoteAction.h>
#include <scapix/java_api/android/graphics/Rect.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/android/util/Rational.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/android/app/PictureInPictureParams_Builder.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::app::PictureInPictureParams : public jni::object_base<"android/app/PictureInPictureParams",
	java::lang::Object,
	android::os::Parcelable>
{
public:

	using Builder = PictureInPictureParams_Builder;

	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }

	jni::ref<android::util::Rational> getAspectRatio() { return call_method<"getAspectRatio", jni::ref<android::util::Rational>>(); }
	jni::ref<android::util::Rational> getExpandedAspectRatio() { return call_method<"getExpandedAspectRatio", jni::ref<android::util::Rational>>(); }
	jni::ref<java::util::List> getActions() { return call_method<"getActions", jni::ref<java::util::List>>(); }
	jni::ref<android::app::RemoteAction> getCloseAction() { return call_method<"getCloseAction", jni::ref<android::app::RemoteAction>>(); }
	jni::ref<android::graphics::Rect> getSourceRectHint() { return call_method<"getSourceRectHint", jni::ref<android::graphics::Rect>>(); }
	jboolean isAutoEnterEnabled() { return call_method<"isAutoEnterEnabled", jboolean>(); }
	jboolean isSeamlessResizeEnabled() { return call_method<"isSeamlessResizeEnabled", jboolean>(); }
	jni::ref<java::lang::CharSequence> getTitle() { return call_method<"getTitle", jni::ref<java::lang::CharSequence>>(); }
	jni::ref<java::lang::CharSequence> getSubtitle() { return call_method<"getSubtitle", jni::ref<java::lang::CharSequence>>(); }
	jboolean equals(jni::ref<java::lang::Object> o) { return call_method<"equals", jboolean>(o); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	void writeToParcel(jni::ref<android::os::Parcel> out, jint flags) { return call_method<"writeToParcel", void>(out, flags); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	PictureInPictureParams(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_PICTUREINPICTUREPARAMS
