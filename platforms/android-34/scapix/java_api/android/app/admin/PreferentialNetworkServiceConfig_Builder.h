// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_APP_ADMIN_PREFERENTIALNETWORKSERVICECONFIG_BUILDER_FWD
#define SCAPIX_JAVA_API_ANDROID_APP_ADMIN_PREFERENTIALNETWORKSERVICECONFIG_BUILDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::app::admin { class PreferentialNetworkServiceConfig_Builder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::app::admin::PreferentialNetworkServiceConfig_Builder>
{
	static constexpr fixed_string class_name = "android/app/admin/PreferentialNetworkServiceConfig$Builder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_ADMIN_PREFERENTIALNETWORKSERVICECONFIG_BUILDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_APP_ADMIN_PREFERENTIALNETWORKSERVICECONFIG_BUILDER)
#define SCAPIX_JAVA_API_ANDROID_APP_ADMIN_PREFERENTIALNETWORKSERVICECONFIG_BUILDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/app/admin/PreferentialNetworkServiceConfig.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::app::admin::PreferentialNetworkServiceConfig_Builder : public jni::object_base<"android/app/admin/PreferentialNetworkServiceConfig$Builder",
	java::lang::Object>
{
public:

	static jni::ref<android::app::admin::PreferentialNetworkServiceConfig_Builder> new_object() { return base_::new_object(); }
	jni::ref<android::app::admin::PreferentialNetworkServiceConfig_Builder> setEnabled(jboolean isEnabled) { return call_method<"setEnabled", jni::ref<android::app::admin::PreferentialNetworkServiceConfig_Builder>>(isEnabled); }
	jni::ref<android::app::admin::PreferentialNetworkServiceConfig_Builder> setFallbackToDefaultConnectionAllowed(jboolean allowFallbackToDefaultConnection) { return call_method<"setFallbackToDefaultConnectionAllowed", jni::ref<android::app::admin::PreferentialNetworkServiceConfig_Builder>>(allowFallbackToDefaultConnection); }
	jni::ref<android::app::admin::PreferentialNetworkServiceConfig_Builder> setShouldBlockNonMatchingNetworks(jboolean blockNonMatchingNetworks) { return call_method<"setShouldBlockNonMatchingNetworks", jni::ref<android::app::admin::PreferentialNetworkServiceConfig_Builder>>(blockNonMatchingNetworks); }
	jni::ref<android::app::admin::PreferentialNetworkServiceConfig_Builder> setIncludedUids(jni::ref<jni::array<jint>> uids) { return call_method<"setIncludedUids", jni::ref<android::app::admin::PreferentialNetworkServiceConfig_Builder>>(uids); }
	jni::ref<android::app::admin::PreferentialNetworkServiceConfig_Builder> setExcludedUids(jni::ref<jni::array<jint>> uids) { return call_method<"setExcludedUids", jni::ref<android::app::admin::PreferentialNetworkServiceConfig_Builder>>(uids); }
	jni::ref<android::app::admin::PreferentialNetworkServiceConfig> build() { return call_method<"build", jni::ref<android::app::admin::PreferentialNetworkServiceConfig>>(); }
	jni::ref<android::app::admin::PreferentialNetworkServiceConfig_Builder> setNetworkId(jint preferenceId) { return call_method<"setNetworkId", jni::ref<android::app::admin::PreferentialNetworkServiceConfig_Builder>>(preferenceId); }

protected:

	PreferentialNetworkServiceConfig_Builder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_ADMIN_PREFERENTIALNETWORKSERVICECONFIG_BUILDER
