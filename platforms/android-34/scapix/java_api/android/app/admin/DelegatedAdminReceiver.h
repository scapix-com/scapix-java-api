// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/content/BroadcastReceiver.h>

#ifndef SCAPIX_JAVA_API_ANDROID_APP_ADMIN_DELEGATEDADMINRECEIVER_FWD
#define SCAPIX_JAVA_API_ANDROID_APP_ADMIN_DELEGATEDADMINRECEIVER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::app::admin { class DelegatedAdminReceiver; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::app::admin::DelegatedAdminReceiver>
{
	static constexpr fixed_string class_name = "android/app/admin/DelegatedAdminReceiver";
	using base_classes = std::tuple<scapix::java_api::android::content::BroadcastReceiver>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_ADMIN_DELEGATEDADMINRECEIVER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_APP_ADMIN_DELEGATEDADMINRECEIVER)
#define SCAPIX_JAVA_API_ANDROID_APP_ADMIN_DELEGATEDADMINRECEIVER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/content/Intent.h>
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::app::admin::DelegatedAdminReceiver : public jni::object_base<"android/app/admin/DelegatedAdminReceiver",
	android::content::BroadcastReceiver>
{
public:

	static jni::ref<android::app::admin::DelegatedAdminReceiver> new_object() { return base_::new_object(); }
	jni::ref<java::lang::String> onChoosePrivateKeyAlias(jni::ref<android::content::Context> context, jni::ref<android::content::Intent> intent, jint uid, jni::ref<android::net::Uri> uri, jni::ref<java::lang::String> alias) { return call_method<"onChoosePrivateKeyAlias", jni::ref<java::lang::String>>(context, intent, uid, uri, alias); }
	void onNetworkLogsAvailable(jni::ref<android::content::Context> context, jni::ref<android::content::Intent> intent, jlong batchToken, jint p4) { return call_method<"onNetworkLogsAvailable", void>(context, intent, batchToken, p4); }
	void onSecurityLogsAvailable(jni::ref<android::content::Context> context, jni::ref<android::content::Intent> intent) { return call_method<"onSecurityLogsAvailable", void>(context, intent); }
	void onReceive(jni::ref<android::content::Context> context, jni::ref<android::content::Intent> intent) { return call_method<"onReceive", void>(context, intent); }

protected:

	DelegatedAdminReceiver(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_ADMIN_DELEGATEDADMINRECEIVER
