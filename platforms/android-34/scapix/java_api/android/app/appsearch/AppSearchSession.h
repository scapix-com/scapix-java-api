// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/io/Closeable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_APP_APPSEARCH_APPSEARCHSESSION_FWD
#define SCAPIX_JAVA_API_ANDROID_APP_APPSEARCH_APPSEARCHSESSION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::app::appsearch { class AppSearchSession; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::app::appsearch::AppSearchSession>
{
	static constexpr fixed_string class_name = "android/app/appsearch/AppSearchSession";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::io::Closeable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_APPSEARCH_APPSEARCHSESSION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_APP_APPSEARCH_APPSEARCHSESSION)
#define SCAPIX_JAVA_API_ANDROID_APP_APPSEARCH_APPSEARCHSESSION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/app/appsearch/BatchResultCallback.h>
#include <scapix/java_api/android/app/appsearch/GetByDocumentIdRequest.h>
#include <scapix/java_api/android/app/appsearch/PutDocumentsRequest.h>
#include <scapix/java_api/android/app/appsearch/RemoveByDocumentIdRequest.h>
#include <scapix/java_api/android/app/appsearch/ReportUsageRequest.h>
#include <scapix/java_api/android/app/appsearch/SearchResults.h>
#include <scapix/java_api/android/app/appsearch/SearchSpec.h>
#include <scapix/java_api/android/app/appsearch/SearchSuggestionSpec.h>
#include <scapix/java_api/android/app/appsearch/SetSchemaRequest.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/concurrent/Executor.h>
#include <scapix/java_api/java/util/function/Consumer.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::app::appsearch::AppSearchSession : public jni::object_base<"android/app/appsearch/AppSearchSession",
	java::lang::Object,
	java::io::Closeable>
{
public:

	void setSchema(jni::ref<android::app::appsearch::SetSchemaRequest> request, jni::ref<java::util::concurrent::Executor> workExecutor, jni::ref<java::util::concurrent::Executor> callbackExecutor, jni::ref<java::util::function::Consumer> callback) { return call_method<"setSchema", void>(request, workExecutor, callbackExecutor, callback); }
	void getSchema(jni::ref<java::util::concurrent::Executor> executor, jni::ref<java::util::function::Consumer> callback) { return call_method<"getSchema", void>(executor, callback); }
	void getNamespaces(jni::ref<java::util::concurrent::Executor> executor, jni::ref<java::util::function::Consumer> callback) { return call_method<"getNamespaces", void>(executor, callback); }
	void put(jni::ref<android::app::appsearch::PutDocumentsRequest> request, jni::ref<java::util::concurrent::Executor> executor, jni::ref<android::app::appsearch::BatchResultCallback> callback) { return call_method<"put", void>(request, executor, callback); }
	void getByDocumentId(jni::ref<android::app::appsearch::GetByDocumentIdRequest> request, jni::ref<java::util::concurrent::Executor> executor, jni::ref<android::app::appsearch::BatchResultCallback> callback) { return call_method<"getByDocumentId", void>(request, executor, callback); }
	jni::ref<android::app::appsearch::SearchResults> search(jni::ref<java::lang::String> queryExpression, jni::ref<android::app::appsearch::SearchSpec> searchSpec) { return call_method<"search", jni::ref<android::app::appsearch::SearchResults>>(queryExpression, searchSpec); }
	void searchSuggestion(jni::ref<java::lang::String> suggestionQueryExpression, jni::ref<android::app::appsearch::SearchSuggestionSpec> searchSuggestionSpec, jni::ref<java::util::concurrent::Executor> executor, jni::ref<java::util::function::Consumer> callback) { return call_method<"searchSuggestion", void>(suggestionQueryExpression, searchSuggestionSpec, executor, callback); }
	void reportUsage(jni::ref<android::app::appsearch::ReportUsageRequest> request, jni::ref<java::util::concurrent::Executor> executor, jni::ref<java::util::function::Consumer> callback) { return call_method<"reportUsage", void>(request, executor, callback); }
	void remove(jni::ref<android::app::appsearch::RemoveByDocumentIdRequest> request, jni::ref<java::util::concurrent::Executor> executor, jni::ref<android::app::appsearch::BatchResultCallback> callback) { return call_method<"remove", void>(request, executor, callback); }
	void remove(jni::ref<java::lang::String> queryExpression, jni::ref<android::app::appsearch::SearchSpec> searchSpec, jni::ref<java::util::concurrent::Executor> executor, jni::ref<java::util::function::Consumer> callback) { return call_method<"remove", void>(queryExpression, searchSpec, executor, callback); }
	void getStorageInfo(jni::ref<java::util::concurrent::Executor> executor, jni::ref<java::util::function::Consumer> callback) { return call_method<"getStorageInfo", void>(executor, callback); }
	void close() { return call_method<"close", void>(); }

protected:

	AppSearchSession(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_APPSEARCH_APPSEARCHSESSION
