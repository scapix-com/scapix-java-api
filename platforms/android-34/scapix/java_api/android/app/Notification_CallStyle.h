// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/app/Notification_Style.h>

#ifndef SCAPIX_JAVA_API_ANDROID_APP_NOTIFICATION_CALLSTYLE_FWD
#define SCAPIX_JAVA_API_ANDROID_APP_NOTIFICATION_CALLSTYLE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::app { class Notification_CallStyle; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::app::Notification_CallStyle>
{
	static constexpr fixed_string class_name = "android/app/Notification$CallStyle";
	using base_classes = std::tuple<scapix::java_api::android::app::Notification_Style>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_NOTIFICATION_CALLSTYLE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_APP_NOTIFICATION_CALLSTYLE)
#define SCAPIX_JAVA_API_ANDROID_APP_NOTIFICATION_CALLSTYLE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/app/PendingIntent.h>
#include <scapix/java_api/android/app/Person.h>
#include <scapix/java_api/android/graphics/drawable/Icon.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::app::Notification_CallStyle : public jni::object_base<"android/app/Notification$CallStyle",
	android::app::Notification_Style>
{
public:

	static jint CALL_TYPE_INCOMING() { return get_static_field<"CALL_TYPE_INCOMING", jint>(); }
	static jint CALL_TYPE_ONGOING() { return get_static_field<"CALL_TYPE_ONGOING", jint>(); }
	static jint CALL_TYPE_SCREENING() { return get_static_field<"CALL_TYPE_SCREENING", jint>(); }
	static jint CALL_TYPE_UNKNOWN() { return get_static_field<"CALL_TYPE_UNKNOWN", jint>(); }

	static jni::ref<android::app::Notification_CallStyle> forIncomingCall(jni::ref<android::app::Person> person, jni::ref<android::app::PendingIntent> declineIntent, jni::ref<android::app::PendingIntent> answerIntent) { return call_static_method<"forIncomingCall", jni::ref<android::app::Notification_CallStyle>>(person, declineIntent, answerIntent); }
	static jni::ref<android::app::Notification_CallStyle> forOngoingCall(jni::ref<android::app::Person> person, jni::ref<android::app::PendingIntent> hangUpIntent) { return call_static_method<"forOngoingCall", jni::ref<android::app::Notification_CallStyle>>(person, hangUpIntent); }
	static jni::ref<android::app::Notification_CallStyle> forScreeningCall(jni::ref<android::app::Person> person, jni::ref<android::app::PendingIntent> hangUpIntent, jni::ref<android::app::PendingIntent> answerIntent) { return call_static_method<"forScreeningCall", jni::ref<android::app::Notification_CallStyle>>(person, hangUpIntent, answerIntent); }
	jni::ref<android::app::Notification_CallStyle> setIsVideo(jboolean isVideo) { return call_method<"setIsVideo", jni::ref<android::app::Notification_CallStyle>>(isVideo); }
	jni::ref<android::app::Notification_CallStyle> setVerificationIcon(jni::ref<android::graphics::drawable::Icon> verificationIcon) { return call_method<"setVerificationIcon", jni::ref<android::app::Notification_CallStyle>>(verificationIcon); }
	jni::ref<android::app::Notification_CallStyle> setVerificationText(jni::ref<java::lang::CharSequence> verificationText) { return call_method<"setVerificationText", jni::ref<android::app::Notification_CallStyle>>(verificationText); }
	jni::ref<android::app::Notification_CallStyle> setAnswerButtonColorHint(jint color) { return call_method<"setAnswerButtonColorHint", jni::ref<android::app::Notification_CallStyle>>(color); }
	jni::ref<android::app::Notification_CallStyle> setDeclineButtonColorHint(jint color) { return call_method<"setDeclineButtonColorHint", jni::ref<android::app::Notification_CallStyle>>(color); }

protected:

	Notification_CallStyle(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_NOTIFICATION_CALLSTYLE
