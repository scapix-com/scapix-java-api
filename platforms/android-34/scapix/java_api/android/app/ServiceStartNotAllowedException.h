// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/IllegalStateException.h>

#ifndef SCAPIX_JAVA_API_ANDROID_APP_SERVICESTARTNOTALLOWEDEXCEPTION_FWD
#define SCAPIX_JAVA_API_ANDROID_APP_SERVICESTARTNOTALLOWEDEXCEPTION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::app { class ServiceStartNotAllowedException; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::app::ServiceStartNotAllowedException>
{
	static constexpr fixed_string class_name = "android/app/ServiceStartNotAllowedException";
	using base_classes = std::tuple<scapix::java_api::java::lang::IllegalStateException>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_SERVICESTARTNOTALLOWEDEXCEPTION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_APP_SERVICESTARTNOTALLOWEDEXCEPTION)
#define SCAPIX_JAVA_API_ANDROID_APP_SERVICESTARTNOTALLOWEDEXCEPTION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Throwable.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::app::ServiceStartNotAllowedException : public jni::object_base<"android/app/ServiceStartNotAllowedException",
	java::lang::IllegalStateException>
{
public:

	jni::ref<java::lang::Throwable> getCause() { return call_method<"getCause", jni::ref<java::lang::Throwable>>(); }

protected:

	ServiceStartNotAllowedException(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_SERVICESTARTNOTALLOWEDEXCEPTION
