// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_BLUETOOTH_LE_SCANRECORD_FWD
#define SCAPIX_JAVA_API_ANDROID_BLUETOOTH_LE_SCANRECORD_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::bluetooth::le { class ScanRecord; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::bluetooth::le::ScanRecord>
{
	static constexpr fixed_string class_name = "android/bluetooth/le/ScanRecord";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_BLUETOOTH_LE_SCANRECORD_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_BLUETOOTH_LE_SCANRECORD)
#define SCAPIX_JAVA_API_ANDROID_BLUETOOTH_LE_SCANRECORD

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/os/ParcelUuid.h>
#include <scapix/java_api/android/util/SparseArray.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/java/util/Map.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::bluetooth::le::ScanRecord : public jni::object_base<"android/bluetooth/le/ScanRecord",
	java::lang::Object>
{
public:

	static jint DATA_TYPE_3D_INFORMATION_DATA() { return get_static_field<"DATA_TYPE_3D_INFORMATION_DATA", jint>(); }
	static jint DATA_TYPE_ADVERTISING_INTERVAL() { return get_static_field<"DATA_TYPE_ADVERTISING_INTERVAL", jint>(); }
	static jint DATA_TYPE_ADVERTISING_INTERVAL_LONG() { return get_static_field<"DATA_TYPE_ADVERTISING_INTERVAL_LONG", jint>(); }
	static jint DATA_TYPE_APPEARANCE() { return get_static_field<"DATA_TYPE_APPEARANCE", jint>(); }
	static jint DATA_TYPE_BIG_INFO() { return get_static_field<"DATA_TYPE_BIG_INFO", jint>(); }
	static jint DATA_TYPE_BROADCAST_CODE() { return get_static_field<"DATA_TYPE_BROADCAST_CODE", jint>(); }
	static jint DATA_TYPE_CHANNEL_MAP_UPDATE_INDICATION() { return get_static_field<"DATA_TYPE_CHANNEL_MAP_UPDATE_INDICATION", jint>(); }
	static jint DATA_TYPE_CLASS_OF_DEVICE() { return get_static_field<"DATA_TYPE_CLASS_OF_DEVICE", jint>(); }
	static jint DATA_TYPE_DEVICE_ID() { return get_static_field<"DATA_TYPE_DEVICE_ID", jint>(); }
	static jint DATA_TYPE_FLAGS() { return get_static_field<"DATA_TYPE_FLAGS", jint>(); }
	static jint DATA_TYPE_INDOOR_POSITIONING() { return get_static_field<"DATA_TYPE_INDOOR_POSITIONING", jint>(); }
	static jint DATA_TYPE_LE_BLUETOOTH_DEVICE_ADDRESS() { return get_static_field<"DATA_TYPE_LE_BLUETOOTH_DEVICE_ADDRESS", jint>(); }
	static jint DATA_TYPE_LE_ROLE() { return get_static_field<"DATA_TYPE_LE_ROLE", jint>(); }
	static jint DATA_TYPE_LE_SECURE_CONNECTIONS_CONFIRMATION_VALUE() { return get_static_field<"DATA_TYPE_LE_SECURE_CONNECTIONS_CONFIRMATION_VALUE", jint>(); }
	static jint DATA_TYPE_LE_SECURE_CONNECTIONS_RANDOM_VALUE() { return get_static_field<"DATA_TYPE_LE_SECURE_CONNECTIONS_RANDOM_VALUE", jint>(); }
	static jint DATA_TYPE_LE_SUPPORTED_FEATURES() { return get_static_field<"DATA_TYPE_LE_SUPPORTED_FEATURES", jint>(); }
	static jint DATA_TYPE_LOCAL_NAME_COMPLETE() { return get_static_field<"DATA_TYPE_LOCAL_NAME_COMPLETE", jint>(); }
	static jint DATA_TYPE_LOCAL_NAME_SHORT() { return get_static_field<"DATA_TYPE_LOCAL_NAME_SHORT", jint>(); }
	static jint DATA_TYPE_MANUFACTURER_SPECIFIC_DATA() { return get_static_field<"DATA_TYPE_MANUFACTURER_SPECIFIC_DATA", jint>(); }
	static jint DATA_TYPE_MESH_BEACON() { return get_static_field<"DATA_TYPE_MESH_BEACON", jint>(); }
	static jint DATA_TYPE_MESH_MESSAGE() { return get_static_field<"DATA_TYPE_MESH_MESSAGE", jint>(); }
	static jint DATA_TYPE_NONE() { return get_static_field<"DATA_TYPE_NONE", jint>(); }
	static jint DATA_TYPE_PB_ADV() { return get_static_field<"DATA_TYPE_PB_ADV", jint>(); }
	static jint DATA_TYPE_PUBLIC_TARGET_ADDRESS() { return get_static_field<"DATA_TYPE_PUBLIC_TARGET_ADDRESS", jint>(); }
	static jint DATA_TYPE_RANDOM_TARGET_ADDRESS() { return get_static_field<"DATA_TYPE_RANDOM_TARGET_ADDRESS", jint>(); }
	static jint DATA_TYPE_RESOLVABLE_SET_IDENTIFIER() { return get_static_field<"DATA_TYPE_RESOLVABLE_SET_IDENTIFIER", jint>(); }
	static jint DATA_TYPE_SECURITY_MANAGER_OUT_OF_BAND_FLAGS() { return get_static_field<"DATA_TYPE_SECURITY_MANAGER_OUT_OF_BAND_FLAGS", jint>(); }
	static jint DATA_TYPE_SERVICE_DATA_128_BIT() { return get_static_field<"DATA_TYPE_SERVICE_DATA_128_BIT", jint>(); }
	static jint DATA_TYPE_SERVICE_DATA_16_BIT() { return get_static_field<"DATA_TYPE_SERVICE_DATA_16_BIT", jint>(); }
	static jint DATA_TYPE_SERVICE_DATA_32_BIT() { return get_static_field<"DATA_TYPE_SERVICE_DATA_32_BIT", jint>(); }
	static jint DATA_TYPE_SERVICE_SOLICITATION_UUIDS_128_BIT() { return get_static_field<"DATA_TYPE_SERVICE_SOLICITATION_UUIDS_128_BIT", jint>(); }
	static jint DATA_TYPE_SERVICE_SOLICITATION_UUIDS_16_BIT() { return get_static_field<"DATA_TYPE_SERVICE_SOLICITATION_UUIDS_16_BIT", jint>(); }
	static jint DATA_TYPE_SERVICE_SOLICITATION_UUIDS_32_BIT() { return get_static_field<"DATA_TYPE_SERVICE_SOLICITATION_UUIDS_32_BIT", jint>(); }
	static jint DATA_TYPE_SERVICE_UUIDS_128_BIT_COMPLETE() { return get_static_field<"DATA_TYPE_SERVICE_UUIDS_128_BIT_COMPLETE", jint>(); }
	static jint DATA_TYPE_SERVICE_UUIDS_128_BIT_PARTIAL() { return get_static_field<"DATA_TYPE_SERVICE_UUIDS_128_BIT_PARTIAL", jint>(); }
	static jint DATA_TYPE_SERVICE_UUIDS_16_BIT_COMPLETE() { return get_static_field<"DATA_TYPE_SERVICE_UUIDS_16_BIT_COMPLETE", jint>(); }
	static jint DATA_TYPE_SERVICE_UUIDS_16_BIT_PARTIAL() { return get_static_field<"DATA_TYPE_SERVICE_UUIDS_16_BIT_PARTIAL", jint>(); }
	static jint DATA_TYPE_SERVICE_UUIDS_32_BIT_COMPLETE() { return get_static_field<"DATA_TYPE_SERVICE_UUIDS_32_BIT_COMPLETE", jint>(); }
	static jint DATA_TYPE_SERVICE_UUIDS_32_BIT_PARTIAL() { return get_static_field<"DATA_TYPE_SERVICE_UUIDS_32_BIT_PARTIAL", jint>(); }
	static jint DATA_TYPE_SIMPLE_PAIRING_HASH_C() { return get_static_field<"DATA_TYPE_SIMPLE_PAIRING_HASH_C", jint>(); }
	static jint DATA_TYPE_SIMPLE_PAIRING_HASH_C_256() { return get_static_field<"DATA_TYPE_SIMPLE_PAIRING_HASH_C_256", jint>(); }
	static jint DATA_TYPE_SIMPLE_PAIRING_RANDOMIZER_R() { return get_static_field<"DATA_TYPE_SIMPLE_PAIRING_RANDOMIZER_R", jint>(); }
	static jint DATA_TYPE_SIMPLE_PAIRING_RANDOMIZER_R_256() { return get_static_field<"DATA_TYPE_SIMPLE_PAIRING_RANDOMIZER_R_256", jint>(); }
	static jint DATA_TYPE_SLAVE_CONNECTION_INTERVAL_RANGE() { return get_static_field<"DATA_TYPE_SLAVE_CONNECTION_INTERVAL_RANGE", jint>(); }
	static jint DATA_TYPE_TRANSPORT_DISCOVERY_DATA() { return get_static_field<"DATA_TYPE_TRANSPORT_DISCOVERY_DATA", jint>(); }
	static jint DATA_TYPE_TX_POWER_LEVEL() { return get_static_field<"DATA_TYPE_TX_POWER_LEVEL", jint>(); }
	static jint DATA_TYPE_URI() { return get_static_field<"DATA_TYPE_URI", jint>(); }

	jint getAdvertiseFlags() { return call_method<"getAdvertiseFlags", jint>(); }
	jni::ref<java::util::List> getServiceUuids() { return call_method<"getServiceUuids", jni::ref<java::util::List>>(); }
	jni::ref<java::util::List> getServiceSolicitationUuids() { return call_method<"getServiceSolicitationUuids", jni::ref<java::util::List>>(); }
	jni::ref<android::util::SparseArray> getManufacturerSpecificData() { return call_method<"getManufacturerSpecificData", jni::ref<android::util::SparseArray>>(); }
	jni::ref<jni::array<jbyte>> getManufacturerSpecificData(jint manufacturerId) { return call_method<"getManufacturerSpecificData", jni::ref<jni::array<jbyte>>>(manufacturerId); }
	jni::ref<java::util::Map> getServiceData() { return call_method<"getServiceData", jni::ref<java::util::Map>>(); }
	jni::ref<jni::array<jbyte>> getServiceData(jni::ref<android::os::ParcelUuid> serviceDataUuid) { return call_method<"getServiceData", jni::ref<jni::array<jbyte>>>(serviceDataUuid); }
	jint getTxPowerLevel() { return call_method<"getTxPowerLevel", jint>(); }
	jni::ref<java::lang::String> getDeviceName() { return call_method<"getDeviceName", jni::ref<java::lang::String>>(); }
	jni::ref<java::util::Map> getAdvertisingDataMap() { return call_method<"getAdvertisingDataMap", jni::ref<java::util::Map>>(); }
	jni::ref<jni::array<jbyte>> getBytes() { return call_method<"getBytes", jni::ref<jni::array<jbyte>>>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	ScanRecord(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_BLUETOOTH_LE_SCANRECORD
