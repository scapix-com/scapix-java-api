// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_BLUETOOTH_BLUETOOTHHIDDEVICE_CALLBACK_FWD
#define SCAPIX_JAVA_API_ANDROID_BLUETOOTH_BLUETOOTHHIDDEVICE_CALLBACK_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::bluetooth { class BluetoothHidDevice_Callback; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::bluetooth::BluetoothHidDevice_Callback>
{
	static constexpr fixed_string class_name = "android/bluetooth/BluetoothHidDevice$Callback";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_BLUETOOTH_BLUETOOTHHIDDEVICE_CALLBACK_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_BLUETOOTH_BLUETOOTHHIDDEVICE_CALLBACK)
#define SCAPIX_JAVA_API_ANDROID_BLUETOOTH_BLUETOOTHHIDDEVICE_CALLBACK

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/bluetooth/BluetoothDevice.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::bluetooth::BluetoothHidDevice_Callback : public jni::object_base<"android/bluetooth/BluetoothHidDevice$Callback",
	java::lang::Object>
{
public:

	static jni::ref<android::bluetooth::BluetoothHidDevice_Callback> new_object() { return base_::new_object(); }
	void onAppStatusChanged(jni::ref<android::bluetooth::BluetoothDevice> pluggedDevice, jboolean registered) { return call_method<"onAppStatusChanged", void>(pluggedDevice, registered); }
	void onConnectionStateChanged(jni::ref<android::bluetooth::BluetoothDevice> device, jint state) { return call_method<"onConnectionStateChanged", void>(device, state); }
	void onGetReport(jni::ref<android::bluetooth::BluetoothDevice> device, jbyte type, jbyte id, jint bufferSize) { return call_method<"onGetReport", void>(device, type, id, bufferSize); }
	void onSetReport(jni::ref<android::bluetooth::BluetoothDevice> device, jbyte type, jbyte id, jni::ref<jni::array<jbyte>> data) { return call_method<"onSetReport", void>(device, type, id, data); }
	void onSetProtocol(jni::ref<android::bluetooth::BluetoothDevice> device, jbyte protocol) { return call_method<"onSetProtocol", void>(device, protocol); }
	void onInterruptData(jni::ref<android::bluetooth::BluetoothDevice> device, jbyte reportId, jni::ref<jni::array<jbyte>> data) { return call_method<"onInterruptData", void>(device, reportId, data); }
	void onVirtualCableUnplug(jni::ref<android::bluetooth::BluetoothDevice> device) { return call_method<"onVirtualCableUnplug", void>(device); }

protected:

	BluetoothHidDevice_Callback(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_BLUETOOTH_BLUETOOTHHIDDEVICE_CALLBACK
