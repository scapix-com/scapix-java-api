// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_BLUETOOTH_BLUETOOTHLEAUDIOCODECCONFIG_BUILDER_FWD
#define SCAPIX_JAVA_API_ANDROID_BLUETOOTH_BLUETOOTHLEAUDIOCODECCONFIG_BUILDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::bluetooth { class BluetoothLeAudioCodecConfig_Builder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::bluetooth::BluetoothLeAudioCodecConfig_Builder>
{
	static constexpr fixed_string class_name = "android/bluetooth/BluetoothLeAudioCodecConfig$Builder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_BLUETOOTH_BLUETOOTHLEAUDIOCODECCONFIG_BUILDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_BLUETOOTH_BLUETOOTHLEAUDIOCODECCONFIG_BUILDER)
#define SCAPIX_JAVA_API_ANDROID_BLUETOOTH_BLUETOOTHLEAUDIOCODECCONFIG_BUILDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/bluetooth/BluetoothLeAudioCodecConfig.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::bluetooth::BluetoothLeAudioCodecConfig_Builder : public jni::object_base<"android/bluetooth/BluetoothLeAudioCodecConfig$Builder",
	java::lang::Object>
{
public:

	static jni::ref<android::bluetooth::BluetoothLeAudioCodecConfig_Builder> new_object() { return base_::new_object(); }
	static jni::ref<android::bluetooth::BluetoothLeAudioCodecConfig_Builder> new_object(jni::ref<android::bluetooth::BluetoothLeAudioCodecConfig> config) { return base_::new_object(config); }
	jni::ref<android::bluetooth::BluetoothLeAudioCodecConfig_Builder> setCodecType(jint codecType) { return call_method<"setCodecType", jni::ref<android::bluetooth::BluetoothLeAudioCodecConfig_Builder>>(codecType); }
	jni::ref<android::bluetooth::BluetoothLeAudioCodecConfig_Builder> setCodecPriority(jint codecPriority) { return call_method<"setCodecPriority", jni::ref<android::bluetooth::BluetoothLeAudioCodecConfig_Builder>>(codecPriority); }
	jni::ref<android::bluetooth::BluetoothLeAudioCodecConfig_Builder> setSampleRate(jint sampleRate) { return call_method<"setSampleRate", jni::ref<android::bluetooth::BluetoothLeAudioCodecConfig_Builder>>(sampleRate); }
	jni::ref<android::bluetooth::BluetoothLeAudioCodecConfig_Builder> setBitsPerSample(jint bitsPerSample) { return call_method<"setBitsPerSample", jni::ref<android::bluetooth::BluetoothLeAudioCodecConfig_Builder>>(bitsPerSample); }
	jni::ref<android::bluetooth::BluetoothLeAudioCodecConfig_Builder> setChannelCount(jint channelCount) { return call_method<"setChannelCount", jni::ref<android::bluetooth::BluetoothLeAudioCodecConfig_Builder>>(channelCount); }
	jni::ref<android::bluetooth::BluetoothLeAudioCodecConfig_Builder> setFrameDuration(jint frameDuration) { return call_method<"setFrameDuration", jni::ref<android::bluetooth::BluetoothLeAudioCodecConfig_Builder>>(frameDuration); }
	jni::ref<android::bluetooth::BluetoothLeAudioCodecConfig_Builder> setOctetsPerFrame(jint octetsPerFrame) { return call_method<"setOctetsPerFrame", jni::ref<android::bluetooth::BluetoothLeAudioCodecConfig_Builder>>(octetsPerFrame); }
	jni::ref<android::bluetooth::BluetoothLeAudioCodecConfig_Builder> setMinOctetsPerFrame(jint minOctetsPerFrame) { return call_method<"setMinOctetsPerFrame", jni::ref<android::bluetooth::BluetoothLeAudioCodecConfig_Builder>>(minOctetsPerFrame); }
	jni::ref<android::bluetooth::BluetoothLeAudioCodecConfig_Builder> setMaxOctetsPerFrame(jint maxOctetsPerFrame) { return call_method<"setMaxOctetsPerFrame", jni::ref<android::bluetooth::BluetoothLeAudioCodecConfig_Builder>>(maxOctetsPerFrame); }
	jni::ref<android::bluetooth::BluetoothLeAudioCodecConfig> build() { return call_method<"build", jni::ref<android::bluetooth::BluetoothLeAudioCodecConfig>>(); }

protected:

	BluetoothLeAudioCodecConfig_Builder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_BLUETOOTH_BLUETOOTHLEAUDIOCODECCONFIG_BUILDER
