// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_UTIL_DUMPABLE_FWD
#define SCAPIX_JAVA_API_ANDROID_UTIL_DUMPABLE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::util { class Dumpable; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::util::Dumpable>
{
	static constexpr fixed_string class_name = "android/util/Dumpable";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_UTIL_DUMPABLE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_UTIL_DUMPABLE)
#define SCAPIX_JAVA_API_ANDROID_UTIL_DUMPABLE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/PrintWriter.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::util::Dumpable : public jni::object_base<"android/util/Dumpable",
	java::lang::Object>
{
public:

	jni::ref<java::lang::String> getDumpableName() { return call_method<"getDumpableName", jni::ref<java::lang::String>>(); }
	void dump(jni::ref<java::io::PrintWriter> p1, jni::ref<jni::array<java::lang::String>> p2) { return call_method<"dump", void>(p1, p2); }

protected:

	Dumpable(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_UTIL_DUMPABLE
