// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/AutoCloseable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_CONTENT_RES_ASSETMANAGER_FWD
#define SCAPIX_JAVA_API_ANDROID_CONTENT_RES_ASSETMANAGER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::content::res { class AssetManager; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::content::res::AssetManager>
{
	static constexpr fixed_string class_name = "android/content/res/AssetManager";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::lang::AutoCloseable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_CONTENT_RES_ASSETMANAGER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_CONTENT_RES_ASSETMANAGER)
#define SCAPIX_JAVA_API_ANDROID_CONTENT_RES_ASSETMANAGER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/res/AssetFileDescriptor.h>
#include <scapix/java_api/android/content/res/XmlResourceParser.h>
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/android/content/res/AssetManager_AssetInputStream.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::content::res::AssetManager : public jni::object_base<"android/content/res/AssetManager",
	java::lang::Object,
	java::lang::AutoCloseable>
{
public:

	using AssetInputStream = AssetManager_AssetInputStream;

	static jint ACCESS_BUFFER() { return get_static_field<"ACCESS_BUFFER", jint>(); }
	static jint ACCESS_RANDOM() { return get_static_field<"ACCESS_RANDOM", jint>(); }
	static jint ACCESS_STREAMING() { return get_static_field<"ACCESS_STREAMING", jint>(); }
	static jint ACCESS_UNKNOWN() { return get_static_field<"ACCESS_UNKNOWN", jint>(); }

	void close() { return call_method<"close", void>(); }
	jni::ref<java::io::InputStream> open(jni::ref<java::lang::String> fileName) { return call_method<"open", jni::ref<java::io::InputStream>>(fileName); }
	jni::ref<java::io::InputStream> open(jni::ref<java::lang::String> fileName, jint accessMode) { return call_method<"open", jni::ref<java::io::InputStream>>(fileName, accessMode); }
	jni::ref<android::content::res::AssetFileDescriptor> openFd(jni::ref<java::lang::String> fileName) { return call_method<"openFd", jni::ref<android::content::res::AssetFileDescriptor>>(fileName); }
	jni::ref<jni::array<java::lang::String>> list(jni::ref<java::lang::String> path) { return call_method<"list", jni::ref<jni::array<java::lang::String>>>(path); }
	jni::ref<android::content::res::AssetFileDescriptor> openNonAssetFd(jni::ref<java::lang::String> fileName) { return call_method<"openNonAssetFd", jni::ref<android::content::res::AssetFileDescriptor>>(fileName); }
	jni::ref<android::content::res::AssetFileDescriptor> openNonAssetFd(jint cookie, jni::ref<java::lang::String> fileName) { return call_method<"openNonAssetFd", jni::ref<android::content::res::AssetFileDescriptor>>(cookie, fileName); }
	jni::ref<android::content::res::XmlResourceParser> openXmlResourceParser(jni::ref<java::lang::String> fileName) { return call_method<"openXmlResourceParser", jni::ref<android::content::res::XmlResourceParser>>(fileName); }
	jni::ref<android::content::res::XmlResourceParser> openXmlResourceParser(jint cookie, jni::ref<java::lang::String> fileName) { return call_method<"openXmlResourceParser", jni::ref<android::content::res::XmlResourceParser>>(cookie, fileName); }
	jni::ref<jni::array<java::lang::String>> getLocales() { return call_method<"getLocales", jni::ref<jni::array<java::lang::String>>>(); }

protected:

	AssetManager(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_CONTENT_RES_ASSETMANAGER
