// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_SECURITY_KEYSTORE_KEYPROTECTION_BUILDER_FWD
#define SCAPIX_JAVA_API_ANDROID_SECURITY_KEYSTORE_KEYPROTECTION_BUILDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::security::keystore { class KeyProtection_Builder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::security::keystore::KeyProtection_Builder>
{
	static constexpr fixed_string class_name = "android/security/keystore/KeyProtection$Builder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_SECURITY_KEYSTORE_KEYPROTECTION_BUILDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_SECURITY_KEYSTORE_KEYPROTECTION_BUILDER)
#define SCAPIX_JAVA_API_ANDROID_SECURITY_KEYSTORE_KEYPROTECTION_BUILDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/security/keystore/KeyProtection.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Date.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::security::keystore::KeyProtection_Builder : public jni::object_base<"android/security/keystore/KeyProtection$Builder",
	java::lang::Object>
{
public:

	static jni::ref<android::security::keystore::KeyProtection_Builder> new_object(jint purposes) { return base_::new_object(purposes); }
	jni::ref<android::security::keystore::KeyProtection_Builder> setKeyValidityStart(jni::ref<java::util::Date> startDate) { return call_method<"setKeyValidityStart", jni::ref<android::security::keystore::KeyProtection_Builder>>(startDate); }
	jni::ref<android::security::keystore::KeyProtection_Builder> setKeyValidityEnd(jni::ref<java::util::Date> endDate) { return call_method<"setKeyValidityEnd", jni::ref<android::security::keystore::KeyProtection_Builder>>(endDate); }
	jni::ref<android::security::keystore::KeyProtection_Builder> setKeyValidityForOriginationEnd(jni::ref<java::util::Date> endDate) { return call_method<"setKeyValidityForOriginationEnd", jni::ref<android::security::keystore::KeyProtection_Builder>>(endDate); }
	jni::ref<android::security::keystore::KeyProtection_Builder> setKeyValidityForConsumptionEnd(jni::ref<java::util::Date> endDate) { return call_method<"setKeyValidityForConsumptionEnd", jni::ref<android::security::keystore::KeyProtection_Builder>>(endDate); }
	jni::ref<android::security::keystore::KeyProtection_Builder> setEncryptionPaddings(jni::ref<jni::array<java::lang::String>> paddings) { return call_method<"setEncryptionPaddings", jni::ref<android::security::keystore::KeyProtection_Builder>>(paddings); }
	jni::ref<android::security::keystore::KeyProtection_Builder> setSignaturePaddings(jni::ref<jni::array<java::lang::String>> paddings) { return call_method<"setSignaturePaddings", jni::ref<android::security::keystore::KeyProtection_Builder>>(paddings); }
	jni::ref<android::security::keystore::KeyProtection_Builder> setDigests(jni::ref<jni::array<java::lang::String>> digests) { return call_method<"setDigests", jni::ref<android::security::keystore::KeyProtection_Builder>>(digests); }
	jni::ref<android::security::keystore::KeyProtection_Builder> setBlockModes(jni::ref<jni::array<java::lang::String>> blockModes) { return call_method<"setBlockModes", jni::ref<android::security::keystore::KeyProtection_Builder>>(blockModes); }
	jni::ref<android::security::keystore::KeyProtection_Builder> setRandomizedEncryptionRequired(jboolean required) { return call_method<"setRandomizedEncryptionRequired", jni::ref<android::security::keystore::KeyProtection_Builder>>(required); }
	jni::ref<android::security::keystore::KeyProtection_Builder> setUserAuthenticationRequired(jboolean required) { return call_method<"setUserAuthenticationRequired", jni::ref<android::security::keystore::KeyProtection_Builder>>(required); }
	jni::ref<android::security::keystore::KeyProtection_Builder> setUserConfirmationRequired(jboolean required) { return call_method<"setUserConfirmationRequired", jni::ref<android::security::keystore::KeyProtection_Builder>>(required); }
	jni::ref<android::security::keystore::KeyProtection_Builder> setUserAuthenticationValidityDurationSeconds(jint seconds) { return call_method<"setUserAuthenticationValidityDurationSeconds", jni::ref<android::security::keystore::KeyProtection_Builder>>(seconds); }
	jni::ref<android::security::keystore::KeyProtection_Builder> setUserAuthenticationParameters(jint timeout, jint type) { return call_method<"setUserAuthenticationParameters", jni::ref<android::security::keystore::KeyProtection_Builder>>(timeout, type); }
	jni::ref<android::security::keystore::KeyProtection_Builder> setUserPresenceRequired(jboolean required) { return call_method<"setUserPresenceRequired", jni::ref<android::security::keystore::KeyProtection_Builder>>(required); }
	jni::ref<android::security::keystore::KeyProtection_Builder> setUserAuthenticationValidWhileOnBody(jboolean remainsValid) { return call_method<"setUserAuthenticationValidWhileOnBody", jni::ref<android::security::keystore::KeyProtection_Builder>>(remainsValid); }
	jni::ref<android::security::keystore::KeyProtection_Builder> setInvalidatedByBiometricEnrollment(jboolean invalidateKey) { return call_method<"setInvalidatedByBiometricEnrollment", jni::ref<android::security::keystore::KeyProtection_Builder>>(invalidateKey); }
	jni::ref<android::security::keystore::KeyProtection_Builder> setUnlockedDeviceRequired(jboolean unlockedDeviceRequired) { return call_method<"setUnlockedDeviceRequired", jni::ref<android::security::keystore::KeyProtection_Builder>>(unlockedDeviceRequired); }
	jni::ref<android::security::keystore::KeyProtection_Builder> setIsStrongBoxBacked(jboolean isStrongBoxBacked) { return call_method<"setIsStrongBoxBacked", jni::ref<android::security::keystore::KeyProtection_Builder>>(isStrongBoxBacked); }
	jni::ref<android::security::keystore::KeyProtection_Builder> setMaxUsageCount(jint maxUsageCount) { return call_method<"setMaxUsageCount", jni::ref<android::security::keystore::KeyProtection_Builder>>(maxUsageCount); }
	jni::ref<android::security::keystore::KeyProtection> build() { return call_method<"build", jni::ref<android::security::keystore::KeyProtection>>(); }

protected:

	KeyProtection_Builder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_SECURITY_KEYSTORE_KEYPROTECTION_BUILDER
