// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_NFC_NFCADAPTER_FWD
#define SCAPIX_JAVA_API_ANDROID_NFC_NFCADAPTER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::nfc { class NfcAdapter; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::nfc::NfcAdapter>
{
	static constexpr fixed_string class_name = "android/nfc/NfcAdapter";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NFC_NFCADAPTER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_NFC_NFCADAPTER)
#define SCAPIX_JAVA_API_ANDROID_NFC_NFCADAPTER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/app/Activity.h>
#include <scapix/java_api/android/app/PendingIntent.h>
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/content/IntentFilter.h>
#include <scapix/java_api/android/nfc/NfcAdapter_OnTagRemovedListener.h>
#include <scapix/java_api/android/nfc/NfcAdapter_ReaderCallback.h>
#include <scapix/java_api/android/nfc/NfcAntennaInfo.h>
#include <scapix/java_api/android/nfc/Tag.h>
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/android/os/Handler.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/android/nfc/NfcAdapter_OnNdefPushCompleteCallback.h>
#include <scapix/java_api/android/nfc/NfcAdapter_CreateNdefMessageCallback.h>
#include <scapix/java_api/android/nfc/NfcAdapter_CreateBeamUrisCallback.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::nfc::NfcAdapter : public jni::object_base<"android/nfc/NfcAdapter",
	java::lang::Object>
{
public:

	using ReaderCallback = NfcAdapter_ReaderCallback;
	using OnTagRemovedListener = NfcAdapter_OnTagRemovedListener;
	using OnNdefPushCompleteCallback = NfcAdapter_OnNdefPushCompleteCallback;
	using CreateNdefMessageCallback = NfcAdapter_CreateNdefMessageCallback;
	using CreateBeamUrisCallback = NfcAdapter_CreateBeamUrisCallback;

	static jni::ref<java::lang::String> ACTION_ADAPTER_STATE_CHANGED() { return get_static_field<"ACTION_ADAPTER_STATE_CHANGED", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ACTION_NDEF_DISCOVERED() { return get_static_field<"ACTION_NDEF_DISCOVERED", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ACTION_PREFERRED_PAYMENT_CHANGED() { return get_static_field<"ACTION_PREFERRED_PAYMENT_CHANGED", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ACTION_TAG_DISCOVERED() { return get_static_field<"ACTION_TAG_DISCOVERED", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ACTION_TECH_DISCOVERED() { return get_static_field<"ACTION_TECH_DISCOVERED", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ACTION_TRANSACTION_DETECTED() { return get_static_field<"ACTION_TRANSACTION_DETECTED", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> EXTRA_ADAPTER_STATE() { return get_static_field<"EXTRA_ADAPTER_STATE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> EXTRA_AID() { return get_static_field<"EXTRA_AID", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> EXTRA_DATA() { return get_static_field<"EXTRA_DATA", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> EXTRA_ID() { return get_static_field<"EXTRA_ID", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> EXTRA_NDEF_MESSAGES() { return get_static_field<"EXTRA_NDEF_MESSAGES", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> EXTRA_PREFERRED_PAYMENT_CHANGED_REASON() { return get_static_field<"EXTRA_PREFERRED_PAYMENT_CHANGED_REASON", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> EXTRA_READER_PRESENCE_CHECK_DELAY() { return get_static_field<"EXTRA_READER_PRESENCE_CHECK_DELAY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> EXTRA_SECURE_ELEMENT_NAME() { return get_static_field<"EXTRA_SECURE_ELEMENT_NAME", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> EXTRA_TAG() { return get_static_field<"EXTRA_TAG", jni::ref<java::lang::String>>(); }
	static jint FLAG_READER_NFC_A() { return get_static_field<"FLAG_READER_NFC_A", jint>(); }
	static jint FLAG_READER_NFC_B() { return get_static_field<"FLAG_READER_NFC_B", jint>(); }
	static jint FLAG_READER_NFC_BARCODE() { return get_static_field<"FLAG_READER_NFC_BARCODE", jint>(); }
	static jint FLAG_READER_NFC_F() { return get_static_field<"FLAG_READER_NFC_F", jint>(); }
	static jint FLAG_READER_NFC_V() { return get_static_field<"FLAG_READER_NFC_V", jint>(); }
	static jint FLAG_READER_NO_PLATFORM_SOUNDS() { return get_static_field<"FLAG_READER_NO_PLATFORM_SOUNDS", jint>(); }
	static jint FLAG_READER_SKIP_NDEF_CHECK() { return get_static_field<"FLAG_READER_SKIP_NDEF_CHECK", jint>(); }
	static jint PREFERRED_PAYMENT_CHANGED() { return get_static_field<"PREFERRED_PAYMENT_CHANGED", jint>(); }
	static jint PREFERRED_PAYMENT_LOADED() { return get_static_field<"PREFERRED_PAYMENT_LOADED", jint>(); }
	static jint PREFERRED_PAYMENT_UPDATED() { return get_static_field<"PREFERRED_PAYMENT_UPDATED", jint>(); }
	static jint STATE_OFF() { return get_static_field<"STATE_OFF", jint>(); }
	static jint STATE_ON() { return get_static_field<"STATE_ON", jint>(); }
	static jint STATE_TURNING_OFF() { return get_static_field<"STATE_TURNING_OFF", jint>(); }
	static jint STATE_TURNING_ON() { return get_static_field<"STATE_TURNING_ON", jint>(); }

	static jni::ref<android::nfc::NfcAdapter> getDefaultAdapter(jni::ref<android::content::Context> context) { return call_static_method<"getDefaultAdapter", jni::ref<android::nfc::NfcAdapter>>(context); }
	jboolean isEnabled() { return call_method<"isEnabled", jboolean>(); }
	void enableForegroundDispatch(jni::ref<android::app::Activity> activity, jni::ref<android::app::PendingIntent> intent, jni::ref<jni::array<android::content::IntentFilter>> filters, jni::ref<jni::array<jni::array<java::lang::String>>> techLists) { return call_method<"enableForegroundDispatch", void>(activity, intent, filters, techLists); }
	void disableForegroundDispatch(jni::ref<android::app::Activity> activity) { return call_method<"disableForegroundDispatch", void>(activity); }
	void enableReaderMode(jni::ref<android::app::Activity> activity, jni::ref<android::nfc::NfcAdapter_ReaderCallback> callback, jint flags, jni::ref<android::os::Bundle> extras) { return call_method<"enableReaderMode", void>(activity, callback, flags, extras); }
	void disableReaderMode(jni::ref<android::app::Activity> activity) { return call_method<"disableReaderMode", void>(activity); }
	jboolean isSecureNfcSupported() { return call_method<"isSecureNfcSupported", jboolean>(); }
	jni::ref<android::nfc::NfcAntennaInfo> getNfcAntennaInfo() { return call_method<"getNfcAntennaInfo", jni::ref<android::nfc::NfcAntennaInfo>>(); }
	jboolean isSecureNfcEnabled() { return call_method<"isSecureNfcEnabled", jboolean>(); }
	jboolean ignore(jni::ref<android::nfc::Tag> tag, jint debounceMs, jni::ref<android::nfc::NfcAdapter_OnTagRemovedListener> tagRemovedListener, jni::ref<android::os::Handler> handler) { return call_method<"ignore", jboolean>(tag, debounceMs, tagRemovedListener, handler); }

protected:

	NfcAdapter(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NFC_NFCADAPTER
