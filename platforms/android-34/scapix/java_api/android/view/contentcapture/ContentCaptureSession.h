// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/AutoCloseable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_VIEW_CONTENTCAPTURE_CONTENTCAPTURESESSION_FWD
#define SCAPIX_JAVA_API_ANDROID_VIEW_CONTENTCAPTURE_CONTENTCAPTURESESSION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::view::contentcapture { class ContentCaptureSession; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::view::contentcapture::ContentCaptureSession>
{
	static constexpr fixed_string class_name = "android/view/contentcapture/ContentCaptureSession";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::lang::AutoCloseable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_CONTENTCAPTURE_CONTENTCAPTURESESSION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_VIEW_CONTENTCAPTURE_CONTENTCAPTURESESSION)
#define SCAPIX_JAVA_API_ANDROID_VIEW_CONTENTCAPTURE_CONTENTCAPTURESESSION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/graphics/Insets.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/android/view/ViewStructure.h>
#include <scapix/java_api/android/view/autofill/AutofillId.h>
#include <scapix/java_api/android/view/contentcapture/ContentCaptureContext.h>
#include <scapix/java_api/android/view/contentcapture/ContentCaptureSessionId.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::view::contentcapture::ContentCaptureSession : public jni::object_base<"android/view/contentcapture/ContentCaptureSession",
	java::lang::Object,
	java::lang::AutoCloseable>
{
public:

	jni::ref<android::view::contentcapture::ContentCaptureSessionId> getContentCaptureSessionId() { return call_method<"getContentCaptureSessionId", jni::ref<android::view::contentcapture::ContentCaptureSessionId>>(); }
	jni::ref<android::view::contentcapture::ContentCaptureSession> createContentCaptureSession(jni::ref<android::view::contentcapture::ContentCaptureContext> context) { return call_method<"createContentCaptureSession", jni::ref<android::view::contentcapture::ContentCaptureSession>>(context); }
	void setContentCaptureContext(jni::ref<android::view::contentcapture::ContentCaptureContext> context) { return call_method<"setContentCaptureContext", void>(context); }
	jni::ref<android::view::contentcapture::ContentCaptureContext> getContentCaptureContext() { return call_method<"getContentCaptureContext", jni::ref<android::view::contentcapture::ContentCaptureContext>>(); }
	void destroy() { return call_method<"destroy", void>(); }
	void close() { return call_method<"close", void>(); }
	void notifyViewAppeared(jni::ref<android::view::ViewStructure> node) { return call_method<"notifyViewAppeared", void>(node); }
	void notifyViewDisappeared(jni::ref<android::view::autofill::AutofillId> id) { return call_method<"notifyViewDisappeared", void>(id); }
	void notifyViewsAppeared(jni::ref<java::util::List> appearedNodes) { return call_method<"notifyViewsAppeared", void>(appearedNodes); }
	void notifyViewsDisappeared(jni::ref<android::view::autofill::AutofillId> hostId, jni::ref<jni::array<jlong>> virtualIds) { return call_method<"notifyViewsDisappeared", void>(hostId, virtualIds); }
	void notifyViewTextChanged(jni::ref<android::view::autofill::AutofillId> id, jni::ref<java::lang::CharSequence> text) { return call_method<"notifyViewTextChanged", void>(id, text); }
	void notifyViewInsetsChanged(jni::ref<android::graphics::Insets> viewInsets) { return call_method<"notifyViewInsetsChanged", void>(viewInsets); }
	void notifySessionResumed() { return call_method<"notifySessionResumed", void>(); }
	void notifySessionPaused() { return call_method<"notifySessionPaused", void>(); }
	jni::ref<android::view::ViewStructure> newViewStructure(jni::ref<android::view::View> view) { return call_method<"newViewStructure", jni::ref<android::view::ViewStructure>>(view); }
	jni::ref<android::view::autofill::AutofillId> newAutofillId(jni::ref<android::view::autofill::AutofillId> hostId, jlong virtualChildId) { return call_method<"newAutofillId", jni::ref<android::view::autofill::AutofillId>>(hostId, virtualChildId); }
	jni::ref<android::view::ViewStructure> newVirtualViewStructure(jni::ref<android::view::autofill::AutofillId> parentId, jlong virtualId) { return call_method<"newVirtualViewStructure", jni::ref<android::view::ViewStructure>>(parentId, virtualId); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	ContentCaptureSession(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_CONTENTCAPTURE_CONTENTCAPTURESESSION
