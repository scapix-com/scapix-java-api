// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_VIEW_TEXTCLASSIFIER_SELECTIONEVENT_FWD
#define SCAPIX_JAVA_API_ANDROID_VIEW_TEXTCLASSIFIER_SELECTIONEVENT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::view::textclassifier { class SelectionEvent; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::view::textclassifier::SelectionEvent>
{
	static constexpr fixed_string class_name = "android/view/textclassifier/SelectionEvent";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_TEXTCLASSIFIER_SELECTIONEVENT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_VIEW_TEXTCLASSIFIER_SELECTIONEVENT)
#define SCAPIX_JAVA_API_ANDROID_VIEW_TEXTCLASSIFIER_SELECTIONEVENT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/android/view/textclassifier/TextClassification.h>
#include <scapix/java_api/android/view/textclassifier/TextClassificationSessionId.h>
#include <scapix/java_api/android/view/textclassifier/TextSelection.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::view::textclassifier::SelectionEvent : public jni::object_base<"android/view/textclassifier/SelectionEvent",
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static jint ACTION_ABANDON() { return get_static_field<"ACTION_ABANDON", jint>(); }
	static jint ACTION_COPY() { return get_static_field<"ACTION_COPY", jint>(); }
	static jint ACTION_CUT() { return get_static_field<"ACTION_CUT", jint>(); }
	static jint ACTION_DRAG() { return get_static_field<"ACTION_DRAG", jint>(); }
	static jint ACTION_OTHER() { return get_static_field<"ACTION_OTHER", jint>(); }
	static jint ACTION_OVERTYPE() { return get_static_field<"ACTION_OVERTYPE", jint>(); }
	static jint ACTION_PASTE() { return get_static_field<"ACTION_PASTE", jint>(); }
	static jint ACTION_RESET() { return get_static_field<"ACTION_RESET", jint>(); }
	static jint ACTION_SELECT_ALL() { return get_static_field<"ACTION_SELECT_ALL", jint>(); }
	static jint ACTION_SHARE() { return get_static_field<"ACTION_SHARE", jint>(); }
	static jint ACTION_SMART_SHARE() { return get_static_field<"ACTION_SMART_SHARE", jint>(); }
	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }
	static jint EVENT_AUTO_SELECTION() { return get_static_field<"EVENT_AUTO_SELECTION", jint>(); }
	static jint EVENT_SELECTION_MODIFIED() { return get_static_field<"EVENT_SELECTION_MODIFIED", jint>(); }
	static jint EVENT_SELECTION_STARTED() { return get_static_field<"EVENT_SELECTION_STARTED", jint>(); }
	static jint EVENT_SMART_SELECTION_MULTI() { return get_static_field<"EVENT_SMART_SELECTION_MULTI", jint>(); }
	static jint EVENT_SMART_SELECTION_SINGLE() { return get_static_field<"EVENT_SMART_SELECTION_SINGLE", jint>(); }
	static jint INVOCATION_LINK() { return get_static_field<"INVOCATION_LINK", jint>(); }
	static jint INVOCATION_MANUAL() { return get_static_field<"INVOCATION_MANUAL", jint>(); }
	static jint INVOCATION_UNKNOWN() { return get_static_field<"INVOCATION_UNKNOWN", jint>(); }

	void writeToParcel(jni::ref<android::os::Parcel> dest, jint flags) { return call_method<"writeToParcel", void>(dest, flags); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	static jni::ref<android::view::textclassifier::SelectionEvent> createSelectionStartedEvent(jint invocationMethod, jint start) { return call_static_method<"createSelectionStartedEvent", jni::ref<android::view::textclassifier::SelectionEvent>>(invocationMethod, start); }
	static jni::ref<android::view::textclassifier::SelectionEvent> createSelectionModifiedEvent(jint start, jint end) { return call_static_method<"createSelectionModifiedEvent", jni::ref<android::view::textclassifier::SelectionEvent>>(start, end); }
	static jni::ref<android::view::textclassifier::SelectionEvent> createSelectionModifiedEvent(jint start, jint end, jni::ref<android::view::textclassifier::TextClassification> classification) { return call_static_method<"createSelectionModifiedEvent", jni::ref<android::view::textclassifier::SelectionEvent>>(start, end, classification); }
	static jni::ref<android::view::textclassifier::SelectionEvent> createSelectionModifiedEvent(jint start, jint end, jni::ref<android::view::textclassifier::TextSelection> selection) { return call_static_method<"createSelectionModifiedEvent", jni::ref<android::view::textclassifier::SelectionEvent>>(start, end, selection); }
	static jni::ref<android::view::textclassifier::SelectionEvent> createSelectionActionEvent(jint start, jint end, jint actionType) { return call_static_method<"createSelectionActionEvent", jni::ref<android::view::textclassifier::SelectionEvent>>(start, end, actionType); }
	static jni::ref<android::view::textclassifier::SelectionEvent> createSelectionActionEvent(jint start, jint end, jint actionType, jni::ref<android::view::textclassifier::TextClassification> classification) { return call_static_method<"createSelectionActionEvent", jni::ref<android::view::textclassifier::SelectionEvent>>(start, end, actionType, classification); }
	jint getEventType() { return call_method<"getEventType", jint>(); }
	jni::ref<java::lang::String> getEntityType() { return call_method<"getEntityType", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getPackageName() { return call_method<"getPackageName", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getWidgetType() { return call_method<"getWidgetType", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getWidgetVersion() { return call_method<"getWidgetVersion", jni::ref<java::lang::String>>(); }
	jint getInvocationMethod() { return call_method<"getInvocationMethod", jint>(); }
	jni::ref<java::lang::String> getResultId() { return call_method<"getResultId", jni::ref<java::lang::String>>(); }
	jlong getEventTime() { return call_method<"getEventTime", jlong>(); }
	jlong getDurationSinceSessionStart() { return call_method<"getDurationSinceSessionStart", jlong>(); }
	jlong getDurationSincePreviousEvent() { return call_method<"getDurationSincePreviousEvent", jlong>(); }
	jint getEventIndex() { return call_method<"getEventIndex", jint>(); }
	jni::ref<android::view::textclassifier::TextClassificationSessionId> getSessionId() { return call_method<"getSessionId", jni::ref<android::view::textclassifier::TextClassificationSessionId>>(); }
	jint getStart() { return call_method<"getStart", jint>(); }
	jint getEnd() { return call_method<"getEnd", jint>(); }
	jint getSmartStart() { return call_method<"getSmartStart", jint>(); }
	jint getSmartEnd() { return call_method<"getSmartEnd", jint>(); }
	static jboolean isTerminal(jint eventType) { return call_static_method<"isTerminal", jboolean>(eventType); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jboolean equals(jni::ref<java::lang::Object> obj) { return call_method<"equals", jboolean>(obj); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	SelectionEvent(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_TEXTCLASSIFIER_SELECTIONEVENT
