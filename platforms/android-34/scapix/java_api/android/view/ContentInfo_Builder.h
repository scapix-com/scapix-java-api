// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_VIEW_CONTENTINFO_BUILDER_FWD
#define SCAPIX_JAVA_API_ANDROID_VIEW_CONTENTINFO_BUILDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::view { class ContentInfo_Builder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::view::ContentInfo_Builder>
{
	static constexpr fixed_string class_name = "android/view/ContentInfo$Builder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_CONTENTINFO_BUILDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_VIEW_CONTENTINFO_BUILDER)
#define SCAPIX_JAVA_API_ANDROID_VIEW_CONTENTINFO_BUILDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/ClipData.h>
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/android/view/ContentInfo.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::view::ContentInfo_Builder : public jni::object_base<"android/view/ContentInfo$Builder",
	java::lang::Object>
{
public:

	static jni::ref<android::view::ContentInfo_Builder> new_object(jni::ref<android::view::ContentInfo> other) { return base_::new_object(other); }
	static jni::ref<android::view::ContentInfo_Builder> new_object(jni::ref<android::content::ClipData> clip, jint source) { return base_::new_object(clip, source); }
	jni::ref<android::view::ContentInfo_Builder> setClip(jni::ref<android::content::ClipData> clip) { return call_method<"setClip", jni::ref<android::view::ContentInfo_Builder>>(clip); }
	jni::ref<android::view::ContentInfo_Builder> setSource(jint source) { return call_method<"setSource", jni::ref<android::view::ContentInfo_Builder>>(source); }
	jni::ref<android::view::ContentInfo_Builder> setFlags(jint flags) { return call_method<"setFlags", jni::ref<android::view::ContentInfo_Builder>>(flags); }
	jni::ref<android::view::ContentInfo_Builder> setLinkUri(jni::ref<android::net::Uri> linkUri) { return call_method<"setLinkUri", jni::ref<android::view::ContentInfo_Builder>>(linkUri); }
	jni::ref<android::view::ContentInfo_Builder> setExtras(jni::ref<android::os::Bundle> extras) { return call_method<"setExtras", jni::ref<android::view::ContentInfo_Builder>>(extras); }
	jni::ref<android::view::ContentInfo> build() { return call_method<"build", jni::ref<android::view::ContentInfo>>(); }

protected:

	ContentInfo_Builder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_CONTENTINFO_BUILDER
