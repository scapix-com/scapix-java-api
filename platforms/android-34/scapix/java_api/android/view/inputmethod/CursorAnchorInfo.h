// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_VIEW_INPUTMETHOD_CURSORANCHORINFO_FWD
#define SCAPIX_JAVA_API_ANDROID_VIEW_INPUTMETHOD_CURSORANCHORINFO_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::view::inputmethod { class CursorAnchorInfo; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::view::inputmethod::CursorAnchorInfo>
{
	static constexpr fixed_string class_name = "android/view/inputmethod/CursorAnchorInfo";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_INPUTMETHOD_CURSORANCHORINFO_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_VIEW_INPUTMETHOD_CURSORANCHORINFO)
#define SCAPIX_JAVA_API_ANDROID_VIEW_INPUTMETHOD_CURSORANCHORINFO

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/graphics/Matrix.h>
#include <scapix/java_api/android/graphics/RectF.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/android/view/inputmethod/EditorBoundsInfo.h>
#include <scapix/java_api/android/view/inputmethod/TextAppearanceInfo.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/android/view/inputmethod/CursorAnchorInfo_Builder.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::view::inputmethod::CursorAnchorInfo : public jni::object_base<"android/view/inputmethod/CursorAnchorInfo",
	java::lang::Object,
	android::os::Parcelable>
{
public:

	using Builder = CursorAnchorInfo_Builder;

	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }
	static jint FLAG_HAS_INVISIBLE_REGION() { return get_static_field<"FLAG_HAS_INVISIBLE_REGION", jint>(); }
	static jint FLAG_HAS_VISIBLE_REGION() { return get_static_field<"FLAG_HAS_VISIBLE_REGION", jint>(); }
	static jint FLAG_IS_RTL() { return get_static_field<"FLAG_IS_RTL", jint>(); }

	static jni::ref<android::view::inputmethod::CursorAnchorInfo> new_object(jni::ref<android::os::Parcel> source) { return base_::new_object(source); }
	void writeToParcel(jni::ref<android::os::Parcel> dest, jint flags) { return call_method<"writeToParcel", void>(dest, flags); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jboolean equals(jni::ref<java::lang::Object> obj) { return call_method<"equals", jboolean>(obj); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jint getSelectionStart() { return call_method<"getSelectionStart", jint>(); }
	jint getSelectionEnd() { return call_method<"getSelectionEnd", jint>(); }
	jint getComposingTextStart() { return call_method<"getComposingTextStart", jint>(); }
	jni::ref<java::lang::CharSequence> getComposingText() { return call_method<"getComposingText", jni::ref<java::lang::CharSequence>>(); }
	jint getInsertionMarkerFlags() { return call_method<"getInsertionMarkerFlags", jint>(); }
	jfloat getInsertionMarkerHorizontal() { return call_method<"getInsertionMarkerHorizontal", jfloat>(); }
	jfloat getInsertionMarkerTop() { return call_method<"getInsertionMarkerTop", jfloat>(); }
	jfloat getInsertionMarkerBaseline() { return call_method<"getInsertionMarkerBaseline", jfloat>(); }
	jfloat getInsertionMarkerBottom() { return call_method<"getInsertionMarkerBottom", jfloat>(); }
	jni::ref<android::graphics::RectF> getCharacterBounds(jint index) { return call_method<"getCharacterBounds", jni::ref<android::graphics::RectF>>(index); }
	jint getCharacterBoundsFlags(jint index) { return call_method<"getCharacterBoundsFlags", jint>(index); }
	jni::ref<java::util::List> getVisibleLineBounds() { return call_method<"getVisibleLineBounds", jni::ref<java::util::List>>(); }
	jni::ref<android::view::inputmethod::EditorBoundsInfo> getEditorBoundsInfo() { return call_method<"getEditorBoundsInfo", jni::ref<android::view::inputmethod::EditorBoundsInfo>>(); }
	jni::ref<android::view::inputmethod::TextAppearanceInfo> getTextAppearanceInfo() { return call_method<"getTextAppearanceInfo", jni::ref<android::view::inputmethod::TextAppearanceInfo>>(); }
	jni::ref<android::graphics::Matrix> getMatrix() { return call_method<"getMatrix", jni::ref<android::graphics::Matrix>>(); }
	jint describeContents() { return call_method<"describeContents", jint>(); }

protected:

	CursorAnchorInfo(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_INPUTMETHOD_CURSORANCHORINFO
