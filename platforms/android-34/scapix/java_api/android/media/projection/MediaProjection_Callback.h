// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_PROJECTION_MEDIAPROJECTION_CALLBACK_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_PROJECTION_MEDIAPROJECTION_CALLBACK_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media::projection { class MediaProjection_Callback; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::projection::MediaProjection_Callback>
{
	static constexpr fixed_string class_name = "android/media/projection/MediaProjection$Callback";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_PROJECTION_MEDIAPROJECTION_CALLBACK_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_PROJECTION_MEDIAPROJECTION_CALLBACK)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_PROJECTION_MEDIAPROJECTION_CALLBACK

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::projection::MediaProjection_Callback : public jni::object_base<"android/media/projection/MediaProjection$Callback",
	java::lang::Object>
{
public:

	static jni::ref<android::media::projection::MediaProjection_Callback> new_object() { return base_::new_object(); }
	void onStop() { return call_method<"onStop", void>(); }
	void onCapturedContentResize(jint width, jint height) { return call_method<"onCapturedContentResize", void>(width, height); }
	void onCapturedContentVisibilityChanged(jboolean isVisible) { return call_method<"onCapturedContentVisibilityChanged", void>(isVisible); }

protected:

	MediaProjection_Callback(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_PROJECTION_MEDIAPROJECTION_CALLBACK
