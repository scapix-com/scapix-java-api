// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_TV_INTERACTIVE_TVINTERACTIVEAPPVIEW_TVINTERACTIVEAPPCALLBACK_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_TV_INTERACTIVE_TVINTERACTIVEAPPVIEW_TVINTERACTIVEAPPCALLBACK_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media::tv::interactive { class TvInteractiveAppView_TvInteractiveAppCallback; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::tv::interactive::TvInteractiveAppView_TvInteractiveAppCallback>
{
	static constexpr fixed_string class_name = "android/media/tv/interactive/TvInteractiveAppView$TvInteractiveAppCallback";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_TV_INTERACTIVE_TVINTERACTIVEAPPVIEW_TVINTERACTIVEAPPCALLBACK_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_TV_INTERACTIVE_TVINTERACTIVEAPPVIEW_TVINTERACTIVEAPPCALLBACK)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_TV_INTERACTIVE_TVINTERACTIVEAPPVIEW_TVINTERACTIVEAPPCALLBACK

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/graphics/Rect.h>
#include <scapix/java_api/android/media/tv/TvRecordingInfo.h>
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::tv::interactive::TvInteractiveAppView_TvInteractiveAppCallback : public jni::object_base<"android/media/tv/interactive/TvInteractiveAppView$TvInteractiveAppCallback",
	java::lang::Object>
{
public:

	static jni::ref<android::media::tv::interactive::TvInteractiveAppView_TvInteractiveAppCallback> new_object() { return base_::new_object(); }
	void onPlaybackCommandRequest(jni::ref<java::lang::String> iAppServiceId, jni::ref<java::lang::String> cmdType, jni::ref<android::os::Bundle> parameters) { return call_method<"onPlaybackCommandRequest", void>(iAppServiceId, cmdType, parameters); }
	void onTimeShiftCommandRequest(jni::ref<java::lang::String> iAppServiceId, jni::ref<java::lang::String> cmdType, jni::ref<android::os::Bundle> parameters) { return call_method<"onTimeShiftCommandRequest", void>(iAppServiceId, cmdType, parameters); }
	void onStateChanged(jni::ref<java::lang::String> iAppServiceId, jint state, jint err) { return call_method<"onStateChanged", void>(iAppServiceId, state, err); }
	void onBiInteractiveAppCreated(jni::ref<java::lang::String> iAppServiceId, jni::ref<android::net::Uri> biIAppUri, jni::ref<java::lang::String> biIAppId) { return call_method<"onBiInteractiveAppCreated", void>(iAppServiceId, biIAppUri, biIAppId); }
	void onTeletextAppStateChanged(jni::ref<java::lang::String> iAppServiceId, jint state) { return call_method<"onTeletextAppStateChanged", void>(iAppServiceId, state); }
	void onSetVideoBounds(jni::ref<java::lang::String> iAppServiceId, jni::ref<android::graphics::Rect> rect) { return call_method<"onSetVideoBounds", void>(iAppServiceId, rect); }
	void onRequestCurrentVideoBounds(jni::ref<java::lang::String> iAppServiceId) { return call_method<"onRequestCurrentVideoBounds", void>(iAppServiceId); }
	void onRequestCurrentChannelUri(jni::ref<java::lang::String> iAppServiceId) { return call_method<"onRequestCurrentChannelUri", void>(iAppServiceId); }
	void onRequestCurrentChannelLcn(jni::ref<java::lang::String> iAppServiceId) { return call_method<"onRequestCurrentChannelLcn", void>(iAppServiceId); }
	void onRequestStreamVolume(jni::ref<java::lang::String> iAppServiceId) { return call_method<"onRequestStreamVolume", void>(iAppServiceId); }
	void onRequestTrackInfoList(jni::ref<java::lang::String> iAppServiceId) { return call_method<"onRequestTrackInfoList", void>(iAppServiceId); }
	void onRequestCurrentTvInputId(jni::ref<java::lang::String> iAppServiceId) { return call_method<"onRequestCurrentTvInputId", void>(iAppServiceId); }
	void onRequestTimeShiftMode(jni::ref<java::lang::String> iAppServiceId) { return call_method<"onRequestTimeShiftMode", void>(iAppServiceId); }
	void onRequestAvailableSpeeds(jni::ref<java::lang::String> iAppServiceId) { return call_method<"onRequestAvailableSpeeds", void>(iAppServiceId); }
	void onRequestStartRecording(jni::ref<java::lang::String> iAppServiceId, jni::ref<java::lang::String> requestId, jni::ref<android::net::Uri> programUri) { return call_method<"onRequestStartRecording", void>(iAppServiceId, requestId, programUri); }
	void onRequestStopRecording(jni::ref<java::lang::String> iAppServiceId, jni::ref<java::lang::String> recordingId) { return call_method<"onRequestStopRecording", void>(iAppServiceId, recordingId); }
	void onRequestScheduleRecording(jni::ref<java::lang::String> iAppServiceId, jni::ref<java::lang::String> requestId, jni::ref<java::lang::String> inputId, jni::ref<android::net::Uri> channelUri, jni::ref<android::net::Uri> programUri, jni::ref<android::os::Bundle> params) { return call_method<"onRequestScheduleRecording", void>(iAppServiceId, requestId, inputId, channelUri, programUri, params); }
	void onRequestScheduleRecording(jni::ref<java::lang::String> iAppServiceId, jni::ref<java::lang::String> requestId, jni::ref<java::lang::String> inputId, jni::ref<android::net::Uri> channelUri, jlong startTime, jlong p6, jint duration, jni::ref<android::os::Bundle> p8) { return call_method<"onRequestScheduleRecording", void>(iAppServiceId, requestId, inputId, channelUri, startTime, p6, duration, p8); }
	void onRequestSigning(jni::ref<java::lang::String> iAppServiceId, jni::ref<java::lang::String> signingId, jni::ref<java::lang::String> algorithm, jni::ref<java::lang::String> alias, jni::ref<jni::array<jbyte>> data) { return call_method<"onRequestSigning", void>(iAppServiceId, signingId, algorithm, alias, data); }
	void onSetTvRecordingInfo(jni::ref<java::lang::String> iAppServiceId, jni::ref<java::lang::String> recordingId, jni::ref<android::media::tv::TvRecordingInfo> recordingInfo) { return call_method<"onSetTvRecordingInfo", void>(iAppServiceId, recordingId, recordingInfo); }
	void onRequestTvRecordingInfo(jni::ref<java::lang::String> iAppServiceId, jni::ref<java::lang::String> recordingId) { return call_method<"onRequestTvRecordingInfo", void>(iAppServiceId, recordingId); }
	void onRequestTvRecordingInfoList(jni::ref<java::lang::String> iAppServiceId, jint type) { return call_method<"onRequestTvRecordingInfoList", void>(iAppServiceId, type); }

protected:

	TvInteractiveAppView_TvInteractiveAppCallback(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_TV_INTERACTIVE_TVINTERACTIVEAPPVIEW_TVINTERACTIVEAPPCALLBACK
