// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/media/tv/BroadcastInfoResponse.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_TV_DSMCCRESPONSE_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_TV_DSMCCRESPONSE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media::tv { class DsmccResponse; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::tv::DsmccResponse>
{
	static constexpr fixed_string class_name = "android/media/tv/DsmccResponse";
	using base_classes = std::tuple<scapix::java_api::android::media::tv::BroadcastInfoResponse, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_TV_DSMCCRESPONSE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_TV_DSMCCRESPONSE)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_TV_DSMCCRESPONSE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/ParcelFileDescriptor.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::tv::DsmccResponse : public jni::object_base<"android/media/tv/DsmccResponse",
	android::media::tv::BroadcastInfoResponse,
	android::os::Parcelable>
{
public:

	static jni::ref<java::lang::String> BIOP_MESSAGE_TYPE_DIRECTORY() { return get_static_field<"BIOP_MESSAGE_TYPE_DIRECTORY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> BIOP_MESSAGE_TYPE_FILE() { return get_static_field<"BIOP_MESSAGE_TYPE_FILE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> BIOP_MESSAGE_TYPE_SERVICE_GATEWAY() { return get_static_field<"BIOP_MESSAGE_TYPE_SERVICE_GATEWAY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> BIOP_MESSAGE_TYPE_STREAM() { return get_static_field<"BIOP_MESSAGE_TYPE_STREAM", jni::ref<java::lang::String>>(); }
	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }

	static jni::ref<android::media::tv::DsmccResponse> new_object(jint requestId, jint sequence, jint responseResult, jni::ref<android::os::ParcelFileDescriptor> file) { return base_::new_object(requestId, sequence, responseResult, file); }
	static jni::ref<android::media::tv::DsmccResponse> new_object(jint requestId, jint sequence, jint responseResult, jboolean isServiceGateway, jni::ref<java::util::List> childList) { return base_::new_object(requestId, sequence, responseResult, isServiceGateway, childList); }
	static jni::ref<android::media::tv::DsmccResponse> new_object(jint requestId, jint sequence, jint responseResult, jni::ref<jni::array<jint>> eventIds, jni::ref<jni::array<java::lang::String>> eventNames) { return base_::new_object(requestId, sequence, responseResult, eventIds, eventNames); }
	jni::ref<java::lang::String> getBiopMessageType() { return call_method<"getBiopMessageType", jni::ref<java::lang::String>>(); }
	jni::ref<android::os::ParcelFileDescriptor> getFile() { return call_method<"getFile", jni::ref<android::os::ParcelFileDescriptor>>(); }
	jni::ref<java::util::List> getChildList() { return call_method<"getChildList", jni::ref<java::util::List>>(); }
	jni::ref<jni::array<jint>> getStreamEventIds() { return call_method<"getStreamEventIds", jni::ref<jni::array<jint>>>(); }
	jni::ref<jni::array<java::lang::String>> getStreamEventNames() { return call_method<"getStreamEventNames", jni::ref<jni::array<java::lang::String>>>(); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	void writeToParcel(jni::ref<android::os::Parcel> dest, jint flags) { return call_method<"writeToParcel", void>(dest, flags); }

protected:

	DsmccResponse(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_TV_DSMCCRESPONSE
