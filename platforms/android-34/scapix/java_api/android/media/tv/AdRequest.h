// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_TV_ADREQUEST_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_TV_ADREQUEST_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media::tv { class AdRequest; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::tv::AdRequest>
{
	static constexpr fixed_string class_name = "android/media/tv/AdRequest";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_TV_ADREQUEST_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_TV_ADREQUEST)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_TV_ADREQUEST

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/ParcelFileDescriptor.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::tv::AdRequest : public jni::object_base<"android/media/tv/AdRequest",
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }
	static jint REQUEST_TYPE_START() { return get_static_field<"REQUEST_TYPE_START", jint>(); }
	static jint REQUEST_TYPE_STOP() { return get_static_field<"REQUEST_TYPE_STOP", jint>(); }

	static jni::ref<android::media::tv::AdRequest> new_object(jint id, jint requestType, jni::ref<android::os::ParcelFileDescriptor> fileDescriptor, jlong startTime, jlong p5, jlong stopTime, jni::ref<java::lang::String> p7, jni::ref<android::os::Bundle> echoInterval) { return base_::new_object(id, requestType, fileDescriptor, startTime, p5, stopTime, p7, echoInterval); }
	static jni::ref<android::media::tv::AdRequest> new_object(jint id, jint requestType, jni::ref<android::net::Uri> uri, jlong startTime, jlong p5, jlong stopTime, jni::ref<android::os::Bundle> p7) { return base_::new_object(id, requestType, uri, startTime, p5, stopTime, p7); }
	jint getId() { return call_method<"getId", jint>(); }
	jint getRequestType() { return call_method<"getRequestType", jint>(); }
	jni::ref<android::os::ParcelFileDescriptor> getFileDescriptor() { return call_method<"getFileDescriptor", jni::ref<android::os::ParcelFileDescriptor>>(); }
	jni::ref<android::net::Uri> getUri() { return call_method<"getUri", jni::ref<android::net::Uri>>(); }
	jlong getStartTimeMillis() { return call_method<"getStartTimeMillis", jlong>(); }
	jlong getStopTimeMillis() { return call_method<"getStopTimeMillis", jlong>(); }
	jlong getEchoIntervalMillis() { return call_method<"getEchoIntervalMillis", jlong>(); }
	jni::ref<java::lang::String> getMediaFileType() { return call_method<"getMediaFileType", jni::ref<java::lang::String>>(); }
	jni::ref<android::os::Bundle> getMetadata() { return call_method<"getMetadata", jni::ref<android::os::Bundle>>(); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	void writeToParcel(jni::ref<android::os::Parcel> dest, jint flags) { return call_method<"writeToParcel", void>(dest, flags); }

protected:

	AdRequest(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_TV_ADREQUEST
