// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_TV_TVINPUTMANAGER_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_TV_TVINPUTMANAGER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media::tv { class TvInputManager; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::tv::TvInputManager>
{
	static constexpr fixed_string class_name = "android/media/tv/TvInputManager";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_TV_TVINPUTMANAGER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_TV_TVINPUTMANAGER)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_TV_TVINPUTMANAGER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/media/tv/TvContentRating.h>
#include <scapix/java_api/android/media/tv/TvInputInfo.h>
#include <scapix/java_api/android/media/tv/TvInputManager_TvInputCallback.h>
#include <scapix/java_api/android/os/Handler.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::tv::TvInputManager : public jni::object_base<"android/media/tv/TvInputManager",
	java::lang::Object>
{
public:

	using TvInputCallback = TvInputManager_TvInputCallback;

	static jni::ref<java::lang::String> ACTION_BLOCKED_RATINGS_CHANGED() { return get_static_field<"ACTION_BLOCKED_RATINGS_CHANGED", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ACTION_PARENTAL_CONTROLS_ENABLED_CHANGED() { return get_static_field<"ACTION_PARENTAL_CONTROLS_ENABLED_CHANGED", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ACTION_QUERY_CONTENT_RATING_SYSTEMS() { return get_static_field<"ACTION_QUERY_CONTENT_RATING_SYSTEMS", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ACTION_SETUP_INPUTS() { return get_static_field<"ACTION_SETUP_INPUTS", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ACTION_VIEW_RECORDING_SCHEDULES() { return get_static_field<"ACTION_VIEW_RECORDING_SCHEDULES", jni::ref<java::lang::String>>(); }
	static jint BROADCAST_INFO_STREAM_EVENT() { return get_static_field<"BROADCAST_INFO_STREAM_EVENT", jint>(); }
	static jint BROADCAST_INFO_TYPE_COMMAND() { return get_static_field<"BROADCAST_INFO_TYPE_COMMAND", jint>(); }
	static jint BROADCAST_INFO_TYPE_DSMCC() { return get_static_field<"BROADCAST_INFO_TYPE_DSMCC", jint>(); }
	static jint BROADCAST_INFO_TYPE_PES() { return get_static_field<"BROADCAST_INFO_TYPE_PES", jint>(); }
	static jint BROADCAST_INFO_TYPE_SECTION() { return get_static_field<"BROADCAST_INFO_TYPE_SECTION", jint>(); }
	static jint BROADCAST_INFO_TYPE_TABLE() { return get_static_field<"BROADCAST_INFO_TYPE_TABLE", jint>(); }
	static jint BROADCAST_INFO_TYPE_TIMELINE() { return get_static_field<"BROADCAST_INFO_TYPE_TIMELINE", jint>(); }
	static jint BROADCAST_INFO_TYPE_TS() { return get_static_field<"BROADCAST_INFO_TYPE_TS", jint>(); }
	static jint INPUT_STATE_CONNECTED() { return get_static_field<"INPUT_STATE_CONNECTED", jint>(); }
	static jint INPUT_STATE_CONNECTED_STANDBY() { return get_static_field<"INPUT_STATE_CONNECTED_STANDBY", jint>(); }
	static jint INPUT_STATE_DISCONNECTED() { return get_static_field<"INPUT_STATE_DISCONNECTED", jint>(); }
	static jni::ref<java::lang::String> META_DATA_CONTENT_RATING_SYSTEMS() { return get_static_field<"META_DATA_CONTENT_RATING_SYSTEMS", jni::ref<java::lang::String>>(); }
	static jint RECORDING_ERROR_INSUFFICIENT_SPACE() { return get_static_field<"RECORDING_ERROR_INSUFFICIENT_SPACE", jint>(); }
	static jint RECORDING_ERROR_RESOURCE_BUSY() { return get_static_field<"RECORDING_ERROR_RESOURCE_BUSY", jint>(); }
	static jint RECORDING_ERROR_UNKNOWN() { return get_static_field<"RECORDING_ERROR_UNKNOWN", jint>(); }
	static jint SIGNAL_STRENGTH_LOST() { return get_static_field<"SIGNAL_STRENGTH_LOST", jint>(); }
	static jint SIGNAL_STRENGTH_STRONG() { return get_static_field<"SIGNAL_STRENGTH_STRONG", jint>(); }
	static jint SIGNAL_STRENGTH_WEAK() { return get_static_field<"SIGNAL_STRENGTH_WEAK", jint>(); }
	static jlong TIME_SHIFT_INVALID_TIME() { return get_static_field<"TIME_SHIFT_INVALID_TIME", jlong>(); }
	static jint TIME_SHIFT_MODE_AUTO() { return get_static_field<"TIME_SHIFT_MODE_AUTO", jint>(); }
	static jint TIME_SHIFT_MODE_LOCAL() { return get_static_field<"TIME_SHIFT_MODE_LOCAL", jint>(); }
	static jint TIME_SHIFT_MODE_NETWORK() { return get_static_field<"TIME_SHIFT_MODE_NETWORK", jint>(); }
	static jint TIME_SHIFT_MODE_OFF() { return get_static_field<"TIME_SHIFT_MODE_OFF", jint>(); }
	static jint TIME_SHIFT_STATUS_AVAILABLE() { return get_static_field<"TIME_SHIFT_STATUS_AVAILABLE", jint>(); }
	static jint TIME_SHIFT_STATUS_UNAVAILABLE() { return get_static_field<"TIME_SHIFT_STATUS_UNAVAILABLE", jint>(); }
	static jint TIME_SHIFT_STATUS_UNKNOWN() { return get_static_field<"TIME_SHIFT_STATUS_UNKNOWN", jint>(); }
	static jint TIME_SHIFT_STATUS_UNSUPPORTED() { return get_static_field<"TIME_SHIFT_STATUS_UNSUPPORTED", jint>(); }
	static jlong TV_MESSAGE_GROUP_ID_NONE() { return get_static_field<"TV_MESSAGE_GROUP_ID_NONE", jlong>(); }
	static jni::ref<java::lang::String> TV_MESSAGE_KEY_GROUP_ID() { return get_static_field<"TV_MESSAGE_KEY_GROUP_ID", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> TV_MESSAGE_KEY_RAW_DATA() { return get_static_field<"TV_MESSAGE_KEY_RAW_DATA", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> TV_MESSAGE_KEY_STREAM_ID() { return get_static_field<"TV_MESSAGE_KEY_STREAM_ID", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> TV_MESSAGE_KEY_SUBTYPE() { return get_static_field<"TV_MESSAGE_KEY_SUBTYPE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> TV_MESSAGE_SUBTYPE_CC_608E() { return get_static_field<"TV_MESSAGE_SUBTYPE_CC_608E", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> TV_MESSAGE_SUBTYPE_WATERMARKING_A335() { return get_static_field<"TV_MESSAGE_SUBTYPE_WATERMARKING_A335", jni::ref<java::lang::String>>(); }
	static jint TV_MESSAGE_TYPE_CLOSED_CAPTION() { return get_static_field<"TV_MESSAGE_TYPE_CLOSED_CAPTION", jint>(); }
	static jint TV_MESSAGE_TYPE_OTHER() { return get_static_field<"TV_MESSAGE_TYPE_OTHER", jint>(); }
	static jint TV_MESSAGE_TYPE_WATERMARK() { return get_static_field<"TV_MESSAGE_TYPE_WATERMARK", jint>(); }
	static jint VIDEO_UNAVAILABLE_REASON_AUDIO_ONLY() { return get_static_field<"VIDEO_UNAVAILABLE_REASON_AUDIO_ONLY", jint>(); }
	static jint VIDEO_UNAVAILABLE_REASON_BUFFERING() { return get_static_field<"VIDEO_UNAVAILABLE_REASON_BUFFERING", jint>(); }
	static jint VIDEO_UNAVAILABLE_REASON_CAS_BLACKOUT() { return get_static_field<"VIDEO_UNAVAILABLE_REASON_CAS_BLACKOUT", jint>(); }
	static jint VIDEO_UNAVAILABLE_REASON_CAS_CARD_INVALID() { return get_static_field<"VIDEO_UNAVAILABLE_REASON_CAS_CARD_INVALID", jint>(); }
	static jint VIDEO_UNAVAILABLE_REASON_CAS_CARD_MUTE() { return get_static_field<"VIDEO_UNAVAILABLE_REASON_CAS_CARD_MUTE", jint>(); }
	static jint VIDEO_UNAVAILABLE_REASON_CAS_INSUFFICIENT_OUTPUT_PROTECTION() { return get_static_field<"VIDEO_UNAVAILABLE_REASON_CAS_INSUFFICIENT_OUTPUT_PROTECTION", jint>(); }
	static jint VIDEO_UNAVAILABLE_REASON_CAS_LICENSE_EXPIRED() { return get_static_field<"VIDEO_UNAVAILABLE_REASON_CAS_LICENSE_EXPIRED", jint>(); }
	static jint VIDEO_UNAVAILABLE_REASON_CAS_NEED_ACTIVATION() { return get_static_field<"VIDEO_UNAVAILABLE_REASON_CAS_NEED_ACTIVATION", jint>(); }
	static jint VIDEO_UNAVAILABLE_REASON_CAS_NEED_PAIRING() { return get_static_field<"VIDEO_UNAVAILABLE_REASON_CAS_NEED_PAIRING", jint>(); }
	static jint VIDEO_UNAVAILABLE_REASON_CAS_NO_CARD() { return get_static_field<"VIDEO_UNAVAILABLE_REASON_CAS_NO_CARD", jint>(); }
	static jint VIDEO_UNAVAILABLE_REASON_CAS_PVR_RECORDING_NOT_ALLOWED() { return get_static_field<"VIDEO_UNAVAILABLE_REASON_CAS_PVR_RECORDING_NOT_ALLOWED", jint>(); }
	static jint VIDEO_UNAVAILABLE_REASON_CAS_REBOOTING() { return get_static_field<"VIDEO_UNAVAILABLE_REASON_CAS_REBOOTING", jint>(); }
	static jint VIDEO_UNAVAILABLE_REASON_CAS_UNKNOWN() { return get_static_field<"VIDEO_UNAVAILABLE_REASON_CAS_UNKNOWN", jint>(); }
	static jint VIDEO_UNAVAILABLE_REASON_INSUFFICIENT_RESOURCE() { return get_static_field<"VIDEO_UNAVAILABLE_REASON_INSUFFICIENT_RESOURCE", jint>(); }
	static jint VIDEO_UNAVAILABLE_REASON_NOT_CONNECTED() { return get_static_field<"VIDEO_UNAVAILABLE_REASON_NOT_CONNECTED", jint>(); }
	static jint VIDEO_UNAVAILABLE_REASON_TUNING() { return get_static_field<"VIDEO_UNAVAILABLE_REASON_TUNING", jint>(); }
	static jint VIDEO_UNAVAILABLE_REASON_UNKNOWN() { return get_static_field<"VIDEO_UNAVAILABLE_REASON_UNKNOWN", jint>(); }
	static jint VIDEO_UNAVAILABLE_REASON_WEAK_SIGNAL() { return get_static_field<"VIDEO_UNAVAILABLE_REASON_WEAK_SIGNAL", jint>(); }

	jni::ref<java::util::List> getTvInputList() { return call_method<"getTvInputList", jni::ref<java::util::List>>(); }
	jni::ref<android::media::tv::TvInputInfo> getTvInputInfo(jni::ref<java::lang::String> inputId) { return call_method<"getTvInputInfo", jni::ref<android::media::tv::TvInputInfo>>(inputId); }
	void updateTvInputInfo(jni::ref<android::media::tv::TvInputInfo> inputInfo) { return call_method<"updateTvInputInfo", void>(inputInfo); }
	jint getInputState(jni::ref<java::lang::String> inputId) { return call_method<"getInputState", jint>(inputId); }
	void registerCallback(jni::ref<android::media::tv::TvInputManager_TvInputCallback> callback, jni::ref<android::os::Handler> handler) { return call_method<"registerCallback", void>(callback, handler); }
	void unregisterCallback(jni::ref<android::media::tv::TvInputManager_TvInputCallback> callback) { return call_method<"unregisterCallback", void>(callback); }
	jboolean isParentalControlsEnabled() { return call_method<"isParentalControlsEnabled", jboolean>(); }
	jboolean isRatingBlocked(jni::ref<android::media::tv::TvContentRating> rating) { return call_method<"isRatingBlocked", jboolean>(rating); }
	jni::ref<java::util::List> getBlockedRatings() { return call_method<"getBlockedRatings", jni::ref<java::util::List>>(); }

protected:

	TvInputManager(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_TV_TVINPUTMANAGER
