// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOMETADATA_FORMAT_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOMETADATA_FORMAT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media { class AudioMetadata_Format; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::AudioMetadata_Format>
{
	static constexpr fixed_string class_name = "android/media/AudioMetadata$Format";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOMETADATA_FORMAT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOMETADATA_FORMAT)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOMETADATA_FORMAT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/media/AudioMetadata_Key.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::AudioMetadata_Format : public jni::object_base<"android/media/AudioMetadata$Format",
	java::lang::Object>
{
public:

	static jni::ref<android::media::AudioMetadata_Key> KEY_ATMOS_PRESENT() { return get_static_field<"KEY_ATMOS_PRESENT", jni::ref<android::media::AudioMetadata_Key>>(); }
	static jni::ref<android::media::AudioMetadata_Key> KEY_AUDIO_ENCODING() { return get_static_field<"KEY_AUDIO_ENCODING", jni::ref<android::media::AudioMetadata_Key>>(); }
	static jni::ref<android::media::AudioMetadata_Key> KEY_BIT_RATE() { return get_static_field<"KEY_BIT_RATE", jni::ref<android::media::AudioMetadata_Key>>(); }
	static jni::ref<android::media::AudioMetadata_Key> KEY_BIT_WIDTH() { return get_static_field<"KEY_BIT_WIDTH", jni::ref<android::media::AudioMetadata_Key>>(); }
	static jni::ref<android::media::AudioMetadata_Key> KEY_CHANNEL_MASK() { return get_static_field<"KEY_CHANNEL_MASK", jni::ref<android::media::AudioMetadata_Key>>(); }
	static jni::ref<android::media::AudioMetadata_Key> KEY_MIME() { return get_static_field<"KEY_MIME", jni::ref<android::media::AudioMetadata_Key>>(); }
	static jni::ref<android::media::AudioMetadata_Key> KEY_PRESENTATION_CONTENT_CLASSIFIER() { return get_static_field<"KEY_PRESENTATION_CONTENT_CLASSIFIER", jni::ref<android::media::AudioMetadata_Key>>(); }
	static jni::ref<android::media::AudioMetadata_Key> KEY_PRESENTATION_ID() { return get_static_field<"KEY_PRESENTATION_ID", jni::ref<android::media::AudioMetadata_Key>>(); }
	static jni::ref<android::media::AudioMetadata_Key> KEY_PRESENTATION_LANGUAGE() { return get_static_field<"KEY_PRESENTATION_LANGUAGE", jni::ref<android::media::AudioMetadata_Key>>(); }
	static jni::ref<android::media::AudioMetadata_Key> KEY_PROGRAM_ID() { return get_static_field<"KEY_PROGRAM_ID", jni::ref<android::media::AudioMetadata_Key>>(); }
	static jni::ref<android::media::AudioMetadata_Key> KEY_SAMPLE_RATE() { return get_static_field<"KEY_SAMPLE_RATE", jni::ref<android::media::AudioMetadata_Key>>(); }


protected:

	AudioMetadata_Format(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOMETADATA_FORMAT
