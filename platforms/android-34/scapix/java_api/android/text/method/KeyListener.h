// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_TEXT_METHOD_KEYLISTENER_FWD
#define SCAPIX_JAVA_API_ANDROID_TEXT_METHOD_KEYLISTENER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::text::method { class KeyListener; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::text::method::KeyListener>
{
	static constexpr fixed_string class_name = "android/text/method/KeyListener";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEXT_METHOD_KEYLISTENER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_TEXT_METHOD_KEYLISTENER)
#define SCAPIX_JAVA_API_ANDROID_TEXT_METHOD_KEYLISTENER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/text/Editable.h>
#include <scapix/java_api/android/view/KeyEvent.h>
#include <scapix/java_api/android/view/View.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::text::method::KeyListener : public jni::object_base<"android/text/method/KeyListener",
	java::lang::Object>
{
public:

	jint getInputType() { return call_method<"getInputType", jint>(); }
	jboolean onKeyDown(jni::ref<android::view::View> p1, jni::ref<android::text::Editable> p2, jint p3, jni::ref<android::view::KeyEvent> p4) { return call_method<"onKeyDown", jboolean>(p1, p2, p3, p4); }
	jboolean onKeyUp(jni::ref<android::view::View> p1, jni::ref<android::text::Editable> p2, jint p3, jni::ref<android::view::KeyEvent> p4) { return call_method<"onKeyUp", jboolean>(p1, p2, p3, p4); }
	jboolean onKeyOther(jni::ref<android::view::View> p1, jni::ref<android::text::Editable> p2, jni::ref<android::view::KeyEvent> p3) { return call_method<"onKeyOther", jboolean>(p1, p2, p3); }
	void clearMetaKeyState(jni::ref<android::view::View> p1, jni::ref<android::text::Editable> p2, jint p3) { return call_method<"clearMetaKeyState", void>(p1, p2, p3); }

protected:

	KeyListener(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEXT_METHOD_KEYLISTENER
