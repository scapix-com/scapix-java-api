// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_TEXT_HIGHLIGHTS_FWD
#define SCAPIX_JAVA_API_ANDROID_TEXT_HIGHLIGHTS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::text { class Highlights; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::text::Highlights>
{
	static constexpr fixed_string class_name = "android/text/Highlights";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEXT_HIGHLIGHTS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_TEXT_HIGHLIGHTS)
#define SCAPIX_JAVA_API_ANDROID_TEXT_HIGHLIGHTS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/graphics/Paint.h>
#include <scapix/java_api/android/text/Highlights_Builder.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::text::Highlights : public jni::object_base<"android/text/Highlights",
	java::lang::Object>
{
public:

	using Builder = Highlights_Builder;

	jint getSize() { return call_method<"getSize", jint>(); }
	jni::ref<android::graphics::Paint> getPaint(jint index) { return call_method<"getPaint", jni::ref<android::graphics::Paint>>(index); }
	jni::ref<jni::array<jint>> getRanges(jint index) { return call_method<"getRanges", jni::ref<jni::array<jint>>>(index); }

protected:

	Highlights(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEXT_HIGHLIGHTS
