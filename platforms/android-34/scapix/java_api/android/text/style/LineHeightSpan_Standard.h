// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/text/style/LineHeightSpan.h>
#include <scapix/java_api/android/text/ParcelableSpan.h>

#ifndef SCAPIX_JAVA_API_ANDROID_TEXT_STYLE_LINEHEIGHTSPAN_STANDARD_FWD
#define SCAPIX_JAVA_API_ANDROID_TEXT_STYLE_LINEHEIGHTSPAN_STANDARD_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::text::style { class LineHeightSpan_Standard; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::text::style::LineHeightSpan_Standard>
{
	static constexpr fixed_string class_name = "android/text/style/LineHeightSpan$Standard";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::text::style::LineHeightSpan, scapix::java_api::android::text::ParcelableSpan>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEXT_STYLE_LINEHEIGHTSPAN_STANDARD_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_TEXT_STYLE_LINEHEIGHTSPAN_STANDARD)
#define SCAPIX_JAVA_API_ANDROID_TEXT_STYLE_LINEHEIGHTSPAN_STANDARD

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/graphics/Paint_FontMetricsInt.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::text::style::LineHeightSpan_Standard : public jni::object_base<"android/text/style/LineHeightSpan$Standard",
	java::lang::Object,
	android::text::style::LineHeightSpan,
	android::text::ParcelableSpan>
{
public:

	static jni::ref<android::text::style::LineHeightSpan_Standard> new_object(jint height) { return base_::new_object(height); }
	static jni::ref<android::text::style::LineHeightSpan_Standard> new_object(jni::ref<android::os::Parcel> src) { return base_::new_object(src); }
	jint getHeight() { return call_method<"getHeight", jint>(); }
	jint getSpanTypeId() { return call_method<"getSpanTypeId", jint>(); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	void writeToParcel(jni::ref<android::os::Parcel> dest, jint flags) { return call_method<"writeToParcel", void>(dest, flags); }
	void chooseHeight(jni::ref<java::lang::CharSequence> text, jint start, jint end, jint spanstartv, jint lineHeight, jni::ref<android::graphics::Paint_FontMetricsInt> fm) { return call_method<"chooseHeight", void>(text, start, end, spanstartv, lineHeight, fm); }

protected:

	LineHeightSpan_Standard(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEXT_STYLE_LINEHEIGHTSPAN_STANDARD
