// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/app/Service.h>

#ifndef SCAPIX_JAVA_API_ANDROID_SERVICE_VOICE_VOICEINTERACTIONSERVICE_FWD
#define SCAPIX_JAVA_API_ANDROID_SERVICE_VOICE_VOICEINTERACTIONSERVICE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::service::voice { class VoiceInteractionService; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::service::voice::VoiceInteractionService>
{
	static constexpr fixed_string class_name = "android/service/voice/VoiceInteractionService";
	using base_classes = std::tuple<scapix::java_api::android::app::Service>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_SERVICE_VOICE_VOICEINTERACTIONSERVICE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_SERVICE_VOICE_VOICEINTERACTIONSERVICE)
#define SCAPIX_JAVA_API_ANDROID_SERVICE_VOICE_VOICEINTERACTIONSERVICE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/ComponentName.h>
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/content/Intent.h>
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/android/os/IBinder.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Set.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::service::voice::VoiceInteractionService : public jni::object_base<"android/service/voice/VoiceInteractionService",
	android::app::Service>
{
public:

	static jni::ref<java::lang::String> SERVICE_INTERFACE() { return get_static_field<"SERVICE_INTERFACE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> SERVICE_META_DATA() { return get_static_field<"SERVICE_META_DATA", jni::ref<java::lang::String>>(); }

	static jni::ref<android::service::voice::VoiceInteractionService> new_object() { return base_::new_object(); }
	void onLaunchVoiceAssistFromKeyguard() { return call_method<"onLaunchVoiceAssistFromKeyguard", void>(); }
	void onPrepareToShowSession(jni::ref<android::os::Bundle> args, jint flags) { return call_method<"onPrepareToShowSession", void>(args, flags); }
	void onShowSessionFailed(jni::ref<android::os::Bundle> args) { return call_method<"onShowSessionFailed", void>(args); }
	static jboolean isActiveService(jni::ref<android::content::Context> context, jni::ref<android::content::ComponentName> service) { return call_static_method<"isActiveService", jboolean>(context, service); }
	void setDisabledShowContext(jint flags) { return call_method<"setDisabledShowContext", void>(flags); }
	jint getDisabledShowContext() { return call_method<"getDisabledShowContext", jint>(); }
	void showSession(jni::ref<android::os::Bundle> args, jint flags) { return call_method<"showSession", void>(args, flags); }
	jni::ref<java::util::Set> onGetSupportedVoiceActions(jni::ref<java::util::Set> voiceActions) { return call_method<"onGetSupportedVoiceActions", jni::ref<java::util::Set>>(voiceActions); }
	jni::ref<android::os::IBinder> onBind(jni::ref<android::content::Intent> intent) { return call_method<"onBind", jni::ref<android::os::IBinder>>(intent); }
	void onReady() { return call_method<"onReady", void>(); }
	void onShutdown() { return call_method<"onShutdown", void>(); }
	void setUiHints(jni::ref<android::os::Bundle> hints) { return call_method<"setUiHints", void>(hints); }

protected:

	VoiceInteractionService(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_SERVICE_VOICE_VOICEINTERACTIONSERVICE
