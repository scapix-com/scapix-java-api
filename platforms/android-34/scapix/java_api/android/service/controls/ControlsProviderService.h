// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/app/Service.h>

#ifndef SCAPIX_JAVA_API_ANDROID_SERVICE_CONTROLS_CONTROLSPROVIDERSERVICE_FWD
#define SCAPIX_JAVA_API_ANDROID_SERVICE_CONTROLS_CONTROLSPROVIDERSERVICE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::service::controls { class ControlsProviderService; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::service::controls::ControlsProviderService>
{
	static constexpr fixed_string class_name = "android/service/controls/ControlsProviderService";
	using base_classes = std::tuple<scapix::java_api::android::app::Service>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_SERVICE_CONTROLS_CONTROLSPROVIDERSERVICE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_SERVICE_CONTROLS_CONTROLSPROVIDERSERVICE)
#define SCAPIX_JAVA_API_ANDROID_SERVICE_CONTROLS_CONTROLSPROVIDERSERVICE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/ComponentName.h>
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/content/Intent.h>
#include <scapix/java_api/android/os/IBinder.h>
#include <scapix/java_api/android/service/controls/Control.h>
#include <scapix/java_api/android/service/controls/actions/ControlAction.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/java/util/concurrent/Flow_Publisher.h>
#include <scapix/java_api/java/util/function/Consumer.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::service::controls::ControlsProviderService : public jni::object_base<"android/service/controls/ControlsProviderService",
	android::app::Service>
{
public:

	static jni::ref<java::lang::String> EXTRA_LOCKSCREEN_ALLOW_TRIVIAL_CONTROLS() { return get_static_field<"EXTRA_LOCKSCREEN_ALLOW_TRIVIAL_CONTROLS", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> META_DATA_PANEL_ACTIVITY() { return get_static_field<"META_DATA_PANEL_ACTIVITY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> SERVICE_CONTROLS() { return get_static_field<"SERVICE_CONTROLS", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> TAG() { return get_static_field<"TAG", jni::ref<java::lang::String>>(); }

	static jni::ref<android::service::controls::ControlsProviderService> new_object() { return base_::new_object(); }
	jni::ref<java::util::concurrent::Flow_Publisher> createPublisherForAllAvailable() { return call_method<"createPublisherForAllAvailable", jni::ref<java::util::concurrent::Flow_Publisher>>(); }
	jni::ref<java::util::concurrent::Flow_Publisher> createPublisherForSuggested() { return call_method<"createPublisherForSuggested", jni::ref<java::util::concurrent::Flow_Publisher>>(); }
	jni::ref<java::util::concurrent::Flow_Publisher> createPublisherFor(jni::ref<java::util::List> p1) { return call_method<"createPublisherFor", jni::ref<java::util::concurrent::Flow_Publisher>>(p1); }
	void performControlAction(jni::ref<java::lang::String> p1, jni::ref<android::service::controls::actions::ControlAction> p2, jni::ref<java::util::function::Consumer> p3) { return call_method<"performControlAction", void>(p1, p2, p3); }
	jni::ref<android::os::IBinder> onBind(jni::ref<android::content::Intent> intent) { return call_method<"onBind", jni::ref<android::os::IBinder>>(intent); }
	jboolean onUnbind(jni::ref<android::content::Intent> intent) { return call_method<"onUnbind", jboolean>(intent); }
	static void requestAddControl(jni::ref<android::content::Context> context, jni::ref<android::content::ComponentName> componentName, jni::ref<android::service::controls::Control> control) { return call_static_method<"requestAddControl", void>(context, componentName, control); }

protected:

	ControlsProviderService(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_SERVICE_CONTROLS_CONTROLSPROVIDERSERVICE
