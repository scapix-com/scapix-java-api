// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_ICU_NUMBER_NUMBERFORMATTERSETTINGS_FWD
#define SCAPIX_JAVA_API_ANDROID_ICU_NUMBER_NUMBERFORMATTERSETTINGS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::icu::number { class NumberFormatterSettings; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::icu::number::NumberFormatterSettings>
{
	static constexpr fixed_string class_name = "android/icu/number/NumberFormatterSettings";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_NUMBER_NUMBERFORMATTERSETTINGS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_ICU_NUMBER_NUMBERFORMATTERSETTINGS)
#define SCAPIX_JAVA_API_ANDROID_ICU_NUMBER_NUMBERFORMATTERSETTINGS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/icu/number/IntegerWidth.h>
#include <scapix/java_api/android/icu/number/Notation.h>
#include <scapix/java_api/android/icu/number/NumberFormatter_DecimalSeparatorDisplay.h>
#include <scapix/java_api/android/icu/number/NumberFormatter_GroupingStrategy.h>
#include <scapix/java_api/android/icu/number/NumberFormatter_SignDisplay.h>
#include <scapix/java_api/android/icu/number/NumberFormatter_UnitWidth.h>
#include <scapix/java_api/android/icu/number/Precision.h>
#include <scapix/java_api/android/icu/number/Scale.h>
#include <scapix/java_api/android/icu/text/DecimalFormatSymbols.h>
#include <scapix/java_api/android/icu/text/NumberingSystem.h>
#include <scapix/java_api/android/icu/util/MeasureUnit.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/math/RoundingMode.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::icu::number::NumberFormatterSettings : public jni::object_base<"android/icu/number/NumberFormatterSettings",
	java::lang::Object>
{
public:

	jni::ref<android::icu::number::NumberFormatterSettings> notation(jni::ref<android::icu::number::Notation> notation) { return call_method<"notation", jni::ref<android::icu::number::NumberFormatterSettings>>(notation); }
	jni::ref<android::icu::number::NumberFormatterSettings> unit(jni::ref<android::icu::util::MeasureUnit> unit) { return call_method<"unit", jni::ref<android::icu::number::NumberFormatterSettings>>(unit); }
	jni::ref<android::icu::number::NumberFormatterSettings> perUnit(jni::ref<android::icu::util::MeasureUnit> perUnit) { return call_method<"perUnit", jni::ref<android::icu::number::NumberFormatterSettings>>(perUnit); }
	jni::ref<android::icu::number::NumberFormatterSettings> precision(jni::ref<android::icu::number::Precision> precision) { return call_method<"precision", jni::ref<android::icu::number::NumberFormatterSettings>>(precision); }
	jni::ref<android::icu::number::NumberFormatterSettings> roundingMode(jni::ref<java::math::RoundingMode> roundingMode) { return call_method<"roundingMode", jni::ref<android::icu::number::NumberFormatterSettings>>(roundingMode); }
	jni::ref<android::icu::number::NumberFormatterSettings> grouping(jni::ref<android::icu::number::NumberFormatter_GroupingStrategy> strategy) { return call_method<"grouping", jni::ref<android::icu::number::NumberFormatterSettings>>(strategy); }
	jni::ref<android::icu::number::NumberFormatterSettings> integerWidth(jni::ref<android::icu::number::IntegerWidth> style) { return call_method<"integerWidth", jni::ref<android::icu::number::NumberFormatterSettings>>(style); }
	jni::ref<android::icu::number::NumberFormatterSettings> symbols(jni::ref<android::icu::text::DecimalFormatSymbols> symbols) { return call_method<"symbols", jni::ref<android::icu::number::NumberFormatterSettings>>(symbols); }
	jni::ref<android::icu::number::NumberFormatterSettings> symbols(jni::ref<android::icu::text::NumberingSystem> ns) { return call_method<"symbols", jni::ref<android::icu::number::NumberFormatterSettings>>(ns); }
	jni::ref<android::icu::number::NumberFormatterSettings> unitWidth(jni::ref<android::icu::number::NumberFormatter_UnitWidth> style) { return call_method<"unitWidth", jni::ref<android::icu::number::NumberFormatterSettings>>(style); }
	jni::ref<android::icu::number::NumberFormatterSettings> sign(jni::ref<android::icu::number::NumberFormatter_SignDisplay> style) { return call_method<"sign", jni::ref<android::icu::number::NumberFormatterSettings>>(style); }
	jni::ref<android::icu::number::NumberFormatterSettings> decimal(jni::ref<android::icu::number::NumberFormatter_DecimalSeparatorDisplay> style) { return call_method<"decimal", jni::ref<android::icu::number::NumberFormatterSettings>>(style); }
	jni::ref<android::icu::number::NumberFormatterSettings> scale(jni::ref<android::icu::number::Scale> scale) { return call_method<"scale", jni::ref<android::icu::number::NumberFormatterSettings>>(scale); }
	jni::ref<android::icu::number::NumberFormatterSettings> usage(jni::ref<java::lang::String> usage) { return call_method<"usage", jni::ref<android::icu::number::NumberFormatterSettings>>(usage); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jboolean equals(jni::ref<java::lang::Object> other) { return call_method<"equals", jboolean>(other); }

protected:

	NumberFormatterSettings(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_NUMBER_NUMBERFORMATTERSETTINGS
