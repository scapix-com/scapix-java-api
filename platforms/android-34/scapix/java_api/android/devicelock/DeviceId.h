// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_DEVICELOCK_DEVICEID_FWD
#define SCAPIX_JAVA_API_ANDROID_DEVICELOCK_DEVICEID_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::devicelock { class DeviceId; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::devicelock::DeviceId>
{
	static constexpr fixed_string class_name = "android/devicelock/DeviceId";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_DEVICELOCK_DEVICEID_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_DEVICELOCK_DEVICEID)
#define SCAPIX_JAVA_API_ANDROID_DEVICELOCK_DEVICEID

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::devicelock::DeviceId : public jni::object_base<"android/devicelock/DeviceId",
	java::lang::Object>
{
public:

	static jint DEVICE_ID_TYPE_IMEI() { return get_static_field<"DEVICE_ID_TYPE_IMEI", jint>(); }
	static jint DEVICE_ID_TYPE_MEID() { return get_static_field<"DEVICE_ID_TYPE_MEID", jint>(); }

	jint getType() { return call_method<"getType", jint>(); }
	jni::ref<java::lang::String> getId() { return call_method<"getId", jni::ref<java::lang::String>>(); }

protected:

	DeviceId(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_DEVICELOCK_DEVICEID
