// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_DEVICELOCK_DEVICELOCKMANAGER_FWD
#define SCAPIX_JAVA_API_ANDROID_DEVICELOCK_DEVICELOCKMANAGER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::devicelock { class DeviceLockManager; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::devicelock::DeviceLockManager>
{
	static constexpr fixed_string class_name = "android/devicelock/DeviceLockManager";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_DEVICELOCK_DEVICELOCKMANAGER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_DEVICELOCK_DEVICELOCKMANAGER)
#define SCAPIX_JAVA_API_ANDROID_DEVICELOCK_DEVICELOCKMANAGER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/os/OutcomeReceiver.h>
#include <scapix/java_api/java/util/concurrent/Executor.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::devicelock::DeviceLockManager : public jni::object_base<"android/devicelock/DeviceLockManager",
	java::lang::Object>
{
public:

	static jint DEVICE_LOCK_ROLE_FINANCING() { return get_static_field<"DEVICE_LOCK_ROLE_FINANCING", jint>(); }

	void lockDevice(jni::ref<java::util::concurrent::Executor> executor, jni::ref<android::os::OutcomeReceiver> callback) { return call_method<"lockDevice", void>(executor, callback); }
	void unlockDevice(jni::ref<java::util::concurrent::Executor> executor, jni::ref<android::os::OutcomeReceiver> callback) { return call_method<"unlockDevice", void>(executor, callback); }
	void isDeviceLocked(jni::ref<java::util::concurrent::Executor> executor, jni::ref<android::os::OutcomeReceiver> callback) { return call_method<"isDeviceLocked", void>(executor, callback); }
	void getDeviceId(jni::ref<java::util::concurrent::Executor> executor, jni::ref<android::os::OutcomeReceiver> callback) { return call_method<"getDeviceId", void>(executor, callback); }
	void getKioskApps(jni::ref<java::util::concurrent::Executor> executor, jni::ref<android::os::OutcomeReceiver> callback) { return call_method<"getKioskApps", void>(executor, callback); }

protected:

	DeviceLockManager(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_DEVICELOCK_DEVICELOCKMANAGER
