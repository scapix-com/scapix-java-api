// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_TELEPHONY_SMSMANAGER_FWD
#define SCAPIX_JAVA_API_ANDROID_TELEPHONY_SMSMANAGER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::telephony { class SmsManager; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::telephony::SmsManager>
{
	static constexpr fixed_string class_name = "android/telephony/SmsManager";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TELEPHONY_SMSMANAGER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_TELEPHONY_SMSMANAGER)
#define SCAPIX_JAVA_API_ANDROID_TELEPHONY_SMSMANAGER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/app/PendingIntent.h>
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/android/telephony/SmsManager_FinancialSmsCallback.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/ArrayList.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/java/util/concurrent/Executor.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::telephony::SmsManager : public jni::object_base<"android/telephony/SmsManager",
	java::lang::Object>
{
public:

	using FinancialSmsCallback = SmsManager_FinancialSmsCallback;

	static jni::ref<java::lang::String> EXTRA_MMS_DATA() { return get_static_field<"EXTRA_MMS_DATA", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> EXTRA_MMS_HTTP_STATUS() { return get_static_field<"EXTRA_MMS_HTTP_STATUS", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MMS_CONFIG_ALIAS_ENABLED() { return get_static_field<"MMS_CONFIG_ALIAS_ENABLED", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MMS_CONFIG_ALIAS_MAX_CHARS() { return get_static_field<"MMS_CONFIG_ALIAS_MAX_CHARS", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MMS_CONFIG_ALIAS_MIN_CHARS() { return get_static_field<"MMS_CONFIG_ALIAS_MIN_CHARS", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MMS_CONFIG_ALLOW_ATTACH_AUDIO() { return get_static_field<"MMS_CONFIG_ALLOW_ATTACH_AUDIO", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MMS_CONFIG_APPEND_TRANSACTION_ID() { return get_static_field<"MMS_CONFIG_APPEND_TRANSACTION_ID", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MMS_CONFIG_EMAIL_GATEWAY_NUMBER() { return get_static_field<"MMS_CONFIG_EMAIL_GATEWAY_NUMBER", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MMS_CONFIG_GROUP_MMS_ENABLED() { return get_static_field<"MMS_CONFIG_GROUP_MMS_ENABLED", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MMS_CONFIG_HTTP_PARAMS() { return get_static_field<"MMS_CONFIG_HTTP_PARAMS", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MMS_CONFIG_HTTP_SOCKET_TIMEOUT() { return get_static_field<"MMS_CONFIG_HTTP_SOCKET_TIMEOUT", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MMS_CONFIG_MAX_IMAGE_HEIGHT() { return get_static_field<"MMS_CONFIG_MAX_IMAGE_HEIGHT", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MMS_CONFIG_MAX_IMAGE_WIDTH() { return get_static_field<"MMS_CONFIG_MAX_IMAGE_WIDTH", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MMS_CONFIG_MAX_MESSAGE_SIZE() { return get_static_field<"MMS_CONFIG_MAX_MESSAGE_SIZE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MMS_CONFIG_MESSAGE_TEXT_MAX_SIZE() { return get_static_field<"MMS_CONFIG_MESSAGE_TEXT_MAX_SIZE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MMS_CONFIG_MMS_DELIVERY_REPORT_ENABLED() { return get_static_field<"MMS_CONFIG_MMS_DELIVERY_REPORT_ENABLED", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MMS_CONFIG_MMS_ENABLED() { return get_static_field<"MMS_CONFIG_MMS_ENABLED", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MMS_CONFIG_MMS_READ_REPORT_ENABLED() { return get_static_field<"MMS_CONFIG_MMS_READ_REPORT_ENABLED", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MMS_CONFIG_MULTIPART_SMS_ENABLED() { return get_static_field<"MMS_CONFIG_MULTIPART_SMS_ENABLED", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MMS_CONFIG_NAI_SUFFIX() { return get_static_field<"MMS_CONFIG_NAI_SUFFIX", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MMS_CONFIG_NOTIFY_WAP_MMSC_ENABLED() { return get_static_field<"MMS_CONFIG_NOTIFY_WAP_MMSC_ENABLED", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MMS_CONFIG_RECIPIENT_LIMIT() { return get_static_field<"MMS_CONFIG_RECIPIENT_LIMIT", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MMS_CONFIG_SEND_MULTIPART_SMS_AS_SEPARATE_MESSAGES() { return get_static_field<"MMS_CONFIG_SEND_MULTIPART_SMS_AS_SEPARATE_MESSAGES", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MMS_CONFIG_SHOW_CELL_BROADCAST_APP_LINKS() { return get_static_field<"MMS_CONFIG_SHOW_CELL_BROADCAST_APP_LINKS", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MMS_CONFIG_SMS_DELIVERY_REPORT_ENABLED() { return get_static_field<"MMS_CONFIG_SMS_DELIVERY_REPORT_ENABLED", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MMS_CONFIG_SMS_TO_MMS_TEXT_LENGTH_THRESHOLD() { return get_static_field<"MMS_CONFIG_SMS_TO_MMS_TEXT_LENGTH_THRESHOLD", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MMS_CONFIG_SMS_TO_MMS_TEXT_THRESHOLD() { return get_static_field<"MMS_CONFIG_SMS_TO_MMS_TEXT_THRESHOLD", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MMS_CONFIG_SUBJECT_MAX_LENGTH() { return get_static_field<"MMS_CONFIG_SUBJECT_MAX_LENGTH", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MMS_CONFIG_SUPPORT_HTTP_CHARSET_HEADER() { return get_static_field<"MMS_CONFIG_SUPPORT_HTTP_CHARSET_HEADER", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MMS_CONFIG_SUPPORT_MMS_CONTENT_DISPOSITION() { return get_static_field<"MMS_CONFIG_SUPPORT_MMS_CONTENT_DISPOSITION", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MMS_CONFIG_UA_PROF_TAG_NAME() { return get_static_field<"MMS_CONFIG_UA_PROF_TAG_NAME", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MMS_CONFIG_UA_PROF_URL() { return get_static_field<"MMS_CONFIG_UA_PROF_URL", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MMS_CONFIG_USER_AGENT() { return get_static_field<"MMS_CONFIG_USER_AGENT", jni::ref<java::lang::String>>(); }
	static jint MMS_ERROR_CONFIGURATION_ERROR() { return get_static_field<"MMS_ERROR_CONFIGURATION_ERROR", jint>(); }
	static jint MMS_ERROR_DATA_DISABLED() { return get_static_field<"MMS_ERROR_DATA_DISABLED", jint>(); }
	static jint MMS_ERROR_HTTP_FAILURE() { return get_static_field<"MMS_ERROR_HTTP_FAILURE", jint>(); }
	static jint MMS_ERROR_INACTIVE_SUBSCRIPTION() { return get_static_field<"MMS_ERROR_INACTIVE_SUBSCRIPTION", jint>(); }
	static jint MMS_ERROR_INVALID_APN() { return get_static_field<"MMS_ERROR_INVALID_APN", jint>(); }
	static jint MMS_ERROR_INVALID_SUBSCRIPTION_ID() { return get_static_field<"MMS_ERROR_INVALID_SUBSCRIPTION_ID", jint>(); }
	static jint MMS_ERROR_IO_ERROR() { return get_static_field<"MMS_ERROR_IO_ERROR", jint>(); }
	static jint MMS_ERROR_NO_DATA_NETWORK() { return get_static_field<"MMS_ERROR_NO_DATA_NETWORK", jint>(); }
	static jint MMS_ERROR_RETRY() { return get_static_field<"MMS_ERROR_RETRY", jint>(); }
	static jint MMS_ERROR_UNABLE_CONNECT_MMS() { return get_static_field<"MMS_ERROR_UNABLE_CONNECT_MMS", jint>(); }
	static jint MMS_ERROR_UNSPECIFIED() { return get_static_field<"MMS_ERROR_UNSPECIFIED", jint>(); }
	static jint RESULT_BLUETOOTH_DISCONNECTED() { return get_static_field<"RESULT_BLUETOOTH_DISCONNECTED", jint>(); }
	static jint RESULT_CANCELLED() { return get_static_field<"RESULT_CANCELLED", jint>(); }
	static jint RESULT_ENCODING_ERROR() { return get_static_field<"RESULT_ENCODING_ERROR", jint>(); }
	static jint RESULT_ERROR_FDN_CHECK_FAILURE() { return get_static_field<"RESULT_ERROR_FDN_CHECK_FAILURE", jint>(); }
	static jint RESULT_ERROR_GENERIC_FAILURE() { return get_static_field<"RESULT_ERROR_GENERIC_FAILURE", jint>(); }
	static jint RESULT_ERROR_LIMIT_EXCEEDED() { return get_static_field<"RESULT_ERROR_LIMIT_EXCEEDED", jint>(); }
	static jint RESULT_ERROR_NONE() { return get_static_field<"RESULT_ERROR_NONE", jint>(); }
	static jint RESULT_ERROR_NO_SERVICE() { return get_static_field<"RESULT_ERROR_NO_SERVICE", jint>(); }
	static jint RESULT_ERROR_NULL_PDU() { return get_static_field<"RESULT_ERROR_NULL_PDU", jint>(); }
	static jint RESULT_ERROR_RADIO_OFF() { return get_static_field<"RESULT_ERROR_RADIO_OFF", jint>(); }
	static jint RESULT_ERROR_SHORT_CODE_NEVER_ALLOWED() { return get_static_field<"RESULT_ERROR_SHORT_CODE_NEVER_ALLOWED", jint>(); }
	static jint RESULT_ERROR_SHORT_CODE_NOT_ALLOWED() { return get_static_field<"RESULT_ERROR_SHORT_CODE_NOT_ALLOWED", jint>(); }
	static jint RESULT_INTERNAL_ERROR() { return get_static_field<"RESULT_INTERNAL_ERROR", jint>(); }
	static jint RESULT_INVALID_ARGUMENTS() { return get_static_field<"RESULT_INVALID_ARGUMENTS", jint>(); }
	static jint RESULT_INVALID_BLUETOOTH_ADDRESS() { return get_static_field<"RESULT_INVALID_BLUETOOTH_ADDRESS", jint>(); }
	static jint RESULT_INVALID_SMSC_ADDRESS() { return get_static_field<"RESULT_INVALID_SMSC_ADDRESS", jint>(); }
	static jint RESULT_INVALID_SMS_FORMAT() { return get_static_field<"RESULT_INVALID_SMS_FORMAT", jint>(); }
	static jint RESULT_INVALID_STATE() { return get_static_field<"RESULT_INVALID_STATE", jint>(); }
	static jint RESULT_MODEM_ERROR() { return get_static_field<"RESULT_MODEM_ERROR", jint>(); }
	static jint RESULT_NETWORK_ERROR() { return get_static_field<"RESULT_NETWORK_ERROR", jint>(); }
	static jint RESULT_NETWORK_REJECT() { return get_static_field<"RESULT_NETWORK_REJECT", jint>(); }
	static jint RESULT_NO_BLUETOOTH_SERVICE() { return get_static_field<"RESULT_NO_BLUETOOTH_SERVICE", jint>(); }
	static jint RESULT_NO_DEFAULT_SMS_APP() { return get_static_field<"RESULT_NO_DEFAULT_SMS_APP", jint>(); }
	static jint RESULT_NO_MEMORY() { return get_static_field<"RESULT_NO_MEMORY", jint>(); }
	static jint RESULT_NO_RESOURCES() { return get_static_field<"RESULT_NO_RESOURCES", jint>(); }
	static jint RESULT_OPERATION_NOT_ALLOWED() { return get_static_field<"RESULT_OPERATION_NOT_ALLOWED", jint>(); }
	static jint RESULT_RADIO_NOT_AVAILABLE() { return get_static_field<"RESULT_RADIO_NOT_AVAILABLE", jint>(); }
	static jint RESULT_RECEIVE_DISPATCH_FAILURE() { return get_static_field<"RESULT_RECEIVE_DISPATCH_FAILURE", jint>(); }
	static jint RESULT_RECEIVE_INJECTED_NULL_PDU() { return get_static_field<"RESULT_RECEIVE_INJECTED_NULL_PDU", jint>(); }
	static jint RESULT_RECEIVE_NULL_MESSAGE_FROM_RIL() { return get_static_field<"RESULT_RECEIVE_NULL_MESSAGE_FROM_RIL", jint>(); }
	static jint RESULT_RECEIVE_RUNTIME_EXCEPTION() { return get_static_field<"RESULT_RECEIVE_RUNTIME_EXCEPTION", jint>(); }
	static jint RESULT_RECEIVE_SQL_EXCEPTION() { return get_static_field<"RESULT_RECEIVE_SQL_EXCEPTION", jint>(); }
	static jint RESULT_RECEIVE_URI_EXCEPTION() { return get_static_field<"RESULT_RECEIVE_URI_EXCEPTION", jint>(); }
	static jint RESULT_RECEIVE_WHILE_ENCRYPTED() { return get_static_field<"RESULT_RECEIVE_WHILE_ENCRYPTED", jint>(); }
	static jint RESULT_REMOTE_EXCEPTION() { return get_static_field<"RESULT_REMOTE_EXCEPTION", jint>(); }
	static jint RESULT_REQUEST_NOT_SUPPORTED() { return get_static_field<"RESULT_REQUEST_NOT_SUPPORTED", jint>(); }
	static jint RESULT_RIL_ABORTED() { return get_static_field<"RESULT_RIL_ABORTED", jint>(); }
	static jint RESULT_RIL_ACCESS_BARRED() { return get_static_field<"RESULT_RIL_ACCESS_BARRED", jint>(); }
	static jint RESULT_RIL_BLOCKED_DUE_TO_CALL() { return get_static_field<"RESULT_RIL_BLOCKED_DUE_TO_CALL", jint>(); }
	static jint RESULT_RIL_CANCELLED() { return get_static_field<"RESULT_RIL_CANCELLED", jint>(); }
	static jint RESULT_RIL_DEVICE_IN_USE() { return get_static_field<"RESULT_RIL_DEVICE_IN_USE", jint>(); }
	static jint RESULT_RIL_ENCODING_ERR() { return get_static_field<"RESULT_RIL_ENCODING_ERR", jint>(); }
	static jint RESULT_RIL_GENERIC_ERROR() { return get_static_field<"RESULT_RIL_GENERIC_ERROR", jint>(); }
	static jint RESULT_RIL_INTERNAL_ERR() { return get_static_field<"RESULT_RIL_INTERNAL_ERR", jint>(); }
	static jint RESULT_RIL_INVALID_ARGUMENTS() { return get_static_field<"RESULT_RIL_INVALID_ARGUMENTS", jint>(); }
	static jint RESULT_RIL_INVALID_MODEM_STATE() { return get_static_field<"RESULT_RIL_INVALID_MODEM_STATE", jint>(); }
	static jint RESULT_RIL_INVALID_RESPONSE() { return get_static_field<"RESULT_RIL_INVALID_RESPONSE", jint>(); }
	static jint RESULT_RIL_INVALID_SIM_STATE() { return get_static_field<"RESULT_RIL_INVALID_SIM_STATE", jint>(); }
	static jint RESULT_RIL_INVALID_SMSC_ADDRESS() { return get_static_field<"RESULT_RIL_INVALID_SMSC_ADDRESS", jint>(); }
	static jint RESULT_RIL_INVALID_SMS_FORMAT() { return get_static_field<"RESULT_RIL_INVALID_SMS_FORMAT", jint>(); }
	static jint RESULT_RIL_INVALID_STATE() { return get_static_field<"RESULT_RIL_INVALID_STATE", jint>(); }
	static jint RESULT_RIL_MODEM_ERR() { return get_static_field<"RESULT_RIL_MODEM_ERR", jint>(); }
	static jint RESULT_RIL_NETWORK_ERR() { return get_static_field<"RESULT_RIL_NETWORK_ERR", jint>(); }
	static jint RESULT_RIL_NETWORK_NOT_READY() { return get_static_field<"RESULT_RIL_NETWORK_NOT_READY", jint>(); }
	static jint RESULT_RIL_NETWORK_REJECT() { return get_static_field<"RESULT_RIL_NETWORK_REJECT", jint>(); }
	static jint RESULT_RIL_NO_MEMORY() { return get_static_field<"RESULT_RIL_NO_MEMORY", jint>(); }
	static jint RESULT_RIL_NO_NETWORK_FOUND() { return get_static_field<"RESULT_RIL_NO_NETWORK_FOUND", jint>(); }
	static jint RESULT_RIL_NO_RESOURCES() { return get_static_field<"RESULT_RIL_NO_RESOURCES", jint>(); }
	static jint RESULT_RIL_NO_SMS_TO_ACK() { return get_static_field<"RESULT_RIL_NO_SMS_TO_ACK", jint>(); }
	static jint RESULT_RIL_NO_SUBSCRIPTION() { return get_static_field<"RESULT_RIL_NO_SUBSCRIPTION", jint>(); }
	static jint RESULT_RIL_OPERATION_NOT_ALLOWED() { return get_static_field<"RESULT_RIL_OPERATION_NOT_ALLOWED", jint>(); }
	static jint RESULT_RIL_RADIO_NOT_AVAILABLE() { return get_static_field<"RESULT_RIL_RADIO_NOT_AVAILABLE", jint>(); }
	static jint RESULT_RIL_REQUEST_NOT_SUPPORTED() { return get_static_field<"RESULT_RIL_REQUEST_NOT_SUPPORTED", jint>(); }
	static jint RESULT_RIL_REQUEST_RATE_LIMITED() { return get_static_field<"RESULT_RIL_REQUEST_RATE_LIMITED", jint>(); }
	static jint RESULT_RIL_SIMULTANEOUS_SMS_AND_CALL_NOT_ALLOWED() { return get_static_field<"RESULT_RIL_SIMULTANEOUS_SMS_AND_CALL_NOT_ALLOWED", jint>(); }
	static jint RESULT_RIL_SIM_ABSENT() { return get_static_field<"RESULT_RIL_SIM_ABSENT", jint>(); }
	static jint RESULT_RIL_SIM_BUSY() { return get_static_field<"RESULT_RIL_SIM_BUSY", jint>(); }
	static jint RESULT_RIL_SIM_ERROR() { return get_static_field<"RESULT_RIL_SIM_ERROR", jint>(); }
	static jint RESULT_RIL_SIM_FULL() { return get_static_field<"RESULT_RIL_SIM_FULL", jint>(); }
	static jint RESULT_RIL_SIM_PIN2() { return get_static_field<"RESULT_RIL_SIM_PIN2", jint>(); }
	static jint RESULT_RIL_SIM_PUK2() { return get_static_field<"RESULT_RIL_SIM_PUK2", jint>(); }
	static jint RESULT_RIL_SMS_SEND_FAIL_RETRY() { return get_static_field<"RESULT_RIL_SMS_SEND_FAIL_RETRY", jint>(); }
	static jint RESULT_RIL_SUBSCRIPTION_NOT_AVAILABLE() { return get_static_field<"RESULT_RIL_SUBSCRIPTION_NOT_AVAILABLE", jint>(); }
	static jint RESULT_RIL_SYSTEM_ERR() { return get_static_field<"RESULT_RIL_SYSTEM_ERR", jint>(); }
	static jint RESULT_SMS_BLOCKED_DURING_EMERGENCY() { return get_static_field<"RESULT_SMS_BLOCKED_DURING_EMERGENCY", jint>(); }
	static jint RESULT_SMS_SEND_RETRY_FAILED() { return get_static_field<"RESULT_SMS_SEND_RETRY_FAILED", jint>(); }
	static jint RESULT_SYSTEM_ERROR() { return get_static_field<"RESULT_SYSTEM_ERROR", jint>(); }
	static jint RESULT_UNEXPECTED_EVENT_STOP_SENDING() { return get_static_field<"RESULT_UNEXPECTED_EVENT_STOP_SENDING", jint>(); }
	static jint RESULT_USER_NOT_ALLOWED() { return get_static_field<"RESULT_USER_NOT_ALLOWED", jint>(); }
	static jint SMS_RP_CAUSE_CALL_BARRING() { return get_static_field<"SMS_RP_CAUSE_CALL_BARRING", jint>(); }
	static jint SMS_RP_CAUSE_CONGESTION() { return get_static_field<"SMS_RP_CAUSE_CONGESTION", jint>(); }
	static jint SMS_RP_CAUSE_DESTINATION_OUT_OF_ORDER() { return get_static_field<"SMS_RP_CAUSE_DESTINATION_OUT_OF_ORDER", jint>(); }
	static jint SMS_RP_CAUSE_FACILITY_NOT_IMPLEMENTED() { return get_static_field<"SMS_RP_CAUSE_FACILITY_NOT_IMPLEMENTED", jint>(); }
	static jint SMS_RP_CAUSE_FACILITY_NOT_SUBSCRIBED() { return get_static_field<"SMS_RP_CAUSE_FACILITY_NOT_SUBSCRIBED", jint>(); }
	static jint SMS_RP_CAUSE_FACILITY_REJECTED() { return get_static_field<"SMS_RP_CAUSE_FACILITY_REJECTED", jint>(); }
	static jint SMS_RP_CAUSE_INFORMATION_ELEMENT_NON_EXISTENT() { return get_static_field<"SMS_RP_CAUSE_INFORMATION_ELEMENT_NON_EXISTENT", jint>(); }
	static jint SMS_RP_CAUSE_INTERWORKING_UNSPECIFIED() { return get_static_field<"SMS_RP_CAUSE_INTERWORKING_UNSPECIFIED", jint>(); }
	static jint SMS_RP_CAUSE_INVALID_MANDATORY_INFORMATION() { return get_static_field<"SMS_RP_CAUSE_INVALID_MANDATORY_INFORMATION", jint>(); }
	static jint SMS_RP_CAUSE_INVALID_MESSAGE_REFERENCE_VALUE() { return get_static_field<"SMS_RP_CAUSE_INVALID_MESSAGE_REFERENCE_VALUE", jint>(); }
	static jint SMS_RP_CAUSE_MESSAGE_INCOMPATIBLE_WITH_PROTOCOL_STATE() { return get_static_field<"SMS_RP_CAUSE_MESSAGE_INCOMPATIBLE_WITH_PROTOCOL_STATE", jint>(); }
	static jint SMS_RP_CAUSE_MESSAGE_TYPE_NON_EXISTENT() { return get_static_field<"SMS_RP_CAUSE_MESSAGE_TYPE_NON_EXISTENT", jint>(); }
	static jint SMS_RP_CAUSE_NETWORK_OUT_OF_ORDER() { return get_static_field<"SMS_RP_CAUSE_NETWORK_OUT_OF_ORDER", jint>(); }
	static jint SMS_RP_CAUSE_OPERATOR_DETERMINED_BARRING() { return get_static_field<"SMS_RP_CAUSE_OPERATOR_DETERMINED_BARRING", jint>(); }
	static jint SMS_RP_CAUSE_PROTOCOL_ERROR() { return get_static_field<"SMS_RP_CAUSE_PROTOCOL_ERROR", jint>(); }
	static jint SMS_RP_CAUSE_RESERVED() { return get_static_field<"SMS_RP_CAUSE_RESERVED", jint>(); }
	static jint SMS_RP_CAUSE_RESOURCES_UNAVAILABLE() { return get_static_field<"SMS_RP_CAUSE_RESOURCES_UNAVAILABLE", jint>(); }
	static jint SMS_RP_CAUSE_SEMANTICALLY_INCORRECT_MESSAGE() { return get_static_field<"SMS_RP_CAUSE_SEMANTICALLY_INCORRECT_MESSAGE", jint>(); }
	static jint SMS_RP_CAUSE_SHORT_MESSAGE_TRANSFER_REJECTED() { return get_static_field<"SMS_RP_CAUSE_SHORT_MESSAGE_TRANSFER_REJECTED", jint>(); }
	static jint SMS_RP_CAUSE_TEMPORARY_FAILURE() { return get_static_field<"SMS_RP_CAUSE_TEMPORARY_FAILURE", jint>(); }
	static jint SMS_RP_CAUSE_UNALLOCATED_NUMBER() { return get_static_field<"SMS_RP_CAUSE_UNALLOCATED_NUMBER", jint>(); }
	static jint SMS_RP_CAUSE_UNIDENTIFIED_SUBSCRIBER() { return get_static_field<"SMS_RP_CAUSE_UNIDENTIFIED_SUBSCRIBER", jint>(); }
	static jint SMS_RP_CAUSE_UNKNOWN_SUBSCRIBER() { return get_static_field<"SMS_RP_CAUSE_UNKNOWN_SUBSCRIBER", jint>(); }
	static jint STATUS_ON_ICC_FREE() { return get_static_field<"STATUS_ON_ICC_FREE", jint>(); }
	static jint STATUS_ON_ICC_READ() { return get_static_field<"STATUS_ON_ICC_READ", jint>(); }
	static jint STATUS_ON_ICC_SENT() { return get_static_field<"STATUS_ON_ICC_SENT", jint>(); }
	static jint STATUS_ON_ICC_UNREAD() { return get_static_field<"STATUS_ON_ICC_UNREAD", jint>(); }
	static jint STATUS_ON_ICC_UNSENT() { return get_static_field<"STATUS_ON_ICC_UNSENT", jint>(); }

	void sendTextMessage(jni::ref<java::lang::String> destinationAddress, jni::ref<java::lang::String> scAddress, jni::ref<java::lang::String> text, jni::ref<android::app::PendingIntent> sentIntent, jni::ref<android::app::PendingIntent> deliveryIntent) { return call_method<"sendTextMessage", void>(destinationAddress, scAddress, text, sentIntent, deliveryIntent); }
	void sendTextMessage(jni::ref<java::lang::String> destinationAddress, jni::ref<java::lang::String> scAddress, jni::ref<java::lang::String> text, jni::ref<android::app::PendingIntent> sentIntent, jni::ref<android::app::PendingIntent> deliveryIntent, jlong messageId) { return call_method<"sendTextMessage", void>(destinationAddress, scAddress, text, sentIntent, deliveryIntent, messageId); }
	void sendTextMessageWithoutPersisting(jni::ref<java::lang::String> destinationAddress, jni::ref<java::lang::String> scAddress, jni::ref<java::lang::String> text, jni::ref<android::app::PendingIntent> sentIntent, jni::ref<android::app::PendingIntent> deliveryIntent) { return call_method<"sendTextMessageWithoutPersisting", void>(destinationAddress, scAddress, text, sentIntent, deliveryIntent); }
	void injectSmsPdu(jni::ref<jni::array<jbyte>> pdu, jni::ref<java::lang::String> format, jni::ref<android::app::PendingIntent> receivedIntent) { return call_method<"injectSmsPdu", void>(pdu, format, receivedIntent); }
	jni::ref<java::util::ArrayList> divideMessage(jni::ref<java::lang::String> text) { return call_method<"divideMessage", jni::ref<java::util::ArrayList>>(text); }
	void sendMultipartTextMessage(jni::ref<java::lang::String> destinationAddress, jni::ref<java::lang::String> scAddress, jni::ref<java::util::ArrayList> parts, jni::ref<java::util::ArrayList> sentIntents, jni::ref<java::util::ArrayList> deliveryIntents) { return call_method<"sendMultipartTextMessage", void>(destinationAddress, scAddress, parts, sentIntents, deliveryIntents); }
	void sendMultipartTextMessage(jni::ref<java::lang::String> destinationAddress, jni::ref<java::lang::String> scAddress, jni::ref<java::util::List> parts, jni::ref<java::util::List> sentIntents, jni::ref<java::util::List> deliveryIntents, jlong messageId) { return call_method<"sendMultipartTextMessage", void>(destinationAddress, scAddress, parts, sentIntents, deliveryIntents, messageId); }
	void sendMultipartTextMessage(jni::ref<java::lang::String> destinationAddress, jni::ref<java::lang::String> scAddress, jni::ref<java::util::List> parts, jni::ref<java::util::List> sentIntents, jni::ref<java::util::List> deliveryIntents, jni::ref<java::lang::String> packageName, jni::ref<java::lang::String> attributionTag) { return call_method<"sendMultipartTextMessage", void>(destinationAddress, scAddress, parts, sentIntents, deliveryIntents, packageName, attributionTag); }
	void sendDataMessage(jni::ref<java::lang::String> destinationAddress, jni::ref<java::lang::String> scAddress, jshort destinationPort, jni::ref<jni::array<jbyte>> data, jni::ref<android::app::PendingIntent> sentIntent, jni::ref<android::app::PendingIntent> deliveryIntent) { return call_method<"sendDataMessage", void>(destinationAddress, scAddress, destinationPort, data, sentIntent, deliveryIntent); }
	static jni::ref<android::telephony::SmsManager> getDefault() { return call_static_method<"getDefault", jni::ref<android::telephony::SmsManager>>(); }
	static jni::ref<android::telephony::SmsManager> getSmsManagerForSubscriptionId(jint subId) { return call_static_method<"getSmsManagerForSubscriptionId", jni::ref<android::telephony::SmsManager>>(subId); }
	jni::ref<android::telephony::SmsManager> createForSubscriptionId(jint subId) { return call_method<"createForSubscriptionId", jni::ref<android::telephony::SmsManager>>(subId); }
	jint getSubscriptionId() { return call_method<"getSubscriptionId", jint>(); }
	static jint getDefaultSmsSubscriptionId() { return call_static_method<"getDefaultSmsSubscriptionId", jint>(); }
	jint getSmsCapacityOnIcc() { return call_method<"getSmsCapacityOnIcc", jint>(); }
	void sendMultimediaMessage(jni::ref<android::content::Context> context, jni::ref<android::net::Uri> contentUri, jni::ref<java::lang::String> locationUrl, jni::ref<android::os::Bundle> configOverrides, jni::ref<android::app::PendingIntent> sentIntent) { return call_method<"sendMultimediaMessage", void>(context, contentUri, locationUrl, configOverrides, sentIntent); }
	void sendMultimediaMessage(jni::ref<android::content::Context> context, jni::ref<android::net::Uri> contentUri, jni::ref<java::lang::String> locationUrl, jni::ref<android::os::Bundle> configOverrides, jni::ref<android::app::PendingIntent> sentIntent, jlong messageId) { return call_method<"sendMultimediaMessage", void>(context, contentUri, locationUrl, configOverrides, sentIntent, messageId); }
	void downloadMultimediaMessage(jni::ref<android::content::Context> context, jni::ref<java::lang::String> locationUrl, jni::ref<android::net::Uri> contentUri, jni::ref<android::os::Bundle> configOverrides, jni::ref<android::app::PendingIntent> downloadedIntent) { return call_method<"downloadMultimediaMessage", void>(context, locationUrl, contentUri, configOverrides, downloadedIntent); }
	void downloadMultimediaMessage(jni::ref<android::content::Context> context, jni::ref<java::lang::String> locationUrl, jni::ref<android::net::Uri> contentUri, jni::ref<android::os::Bundle> configOverrides, jni::ref<android::app::PendingIntent> downloadedIntent, jlong messageId) { return call_method<"downloadMultimediaMessage", void>(context, locationUrl, contentUri, configOverrides, downloadedIntent, messageId); }
	jni::ref<android::os::Bundle> getCarrierConfigValues() { return call_method<"getCarrierConfigValues", jni::ref<android::os::Bundle>>(); }
	jni::ref<java::lang::String> createAppSpecificSmsToken(jni::ref<android::app::PendingIntent> intent) { return call_method<"createAppSpecificSmsToken", jni::ref<java::lang::String>>(intent); }
	void getSmsMessagesForFinancialApp(jni::ref<android::os::Bundle> params, jni::ref<java::util::concurrent::Executor> executor, jni::ref<android::telephony::SmsManager_FinancialSmsCallback> callback) { return call_method<"getSmsMessagesForFinancialApp", void>(params, executor, callback); }
	jni::ref<java::lang::String> createAppSpecificSmsTokenWithPackageInfo(jni::ref<java::lang::String> prefixes, jni::ref<android::app::PendingIntent> intent) { return call_method<"createAppSpecificSmsTokenWithPackageInfo", jni::ref<java::lang::String>>(prefixes, intent); }
	jni::ref<java::lang::String> getSmscAddress() { return call_method<"getSmscAddress", jni::ref<java::lang::String>>(); }
	jboolean setSmscAddress(jni::ref<java::lang::String> smsc) { return call_method<"setSmscAddress", jboolean>(smsc); }

protected:

	SmsManager(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TELEPHONY_SMSMANAGER
