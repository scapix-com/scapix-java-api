// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/telephony/ims/RegistrationManager.h>

#ifndef SCAPIX_JAVA_API_ANDROID_TELEPHONY_IMS_IMSMMTELMANAGER_FWD
#define SCAPIX_JAVA_API_ANDROID_TELEPHONY_IMS_IMSMMTELMANAGER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::telephony::ims { class ImsMmTelManager; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::telephony::ims::ImsMmTelManager>
{
	static constexpr fixed_string class_name = "android/telephony/ims/ImsMmTelManager";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::telephony::ims::RegistrationManager>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TELEPHONY_IMS_IMSMMTELMANAGER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_TELEPHONY_IMS_IMSMMTELMANAGER)
#define SCAPIX_JAVA_API_ANDROID_TELEPHONY_IMS_IMSMMTELMANAGER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/telephony/ims/ImsMmTelManager_CapabilityCallback.h>
#include <scapix/java_api/android/telephony/ims/ImsStateCallback.h>
#include <scapix/java_api/android/telephony/ims/RegistrationManager_RegistrationCallback.h>
#include <scapix/java_api/java/util/concurrent/Executor.h>
#include <scapix/java_api/java/util/function/Consumer.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::telephony::ims::ImsMmTelManager : public jni::object_base<"android/telephony/ims/ImsMmTelManager",
	java::lang::Object,
	android::telephony::ims::RegistrationManager>
{
public:

	using CapabilityCallback = ImsMmTelManager_CapabilityCallback;

	static jint WIFI_MODE_CELLULAR_PREFERRED() { return get_static_field<"WIFI_MODE_CELLULAR_PREFERRED", jint>(); }
	static jint WIFI_MODE_WIFI_ONLY() { return get_static_field<"WIFI_MODE_WIFI_ONLY", jint>(); }
	static jint WIFI_MODE_WIFI_PREFERRED() { return get_static_field<"WIFI_MODE_WIFI_PREFERRED", jint>(); }

	void registerImsRegistrationCallback(jni::ref<java::util::concurrent::Executor> executor, jni::ref<android::telephony::ims::RegistrationManager_RegistrationCallback> c) { return call_method<"registerImsRegistrationCallback", void>(executor, c); }
	void unregisterImsRegistrationCallback(jni::ref<android::telephony::ims::RegistrationManager_RegistrationCallback> c) { return call_method<"unregisterImsRegistrationCallback", void>(c); }
	void getRegistrationState(jni::ref<java::util::concurrent::Executor> executor, jni::ref<java::util::function::Consumer> stateCallback) { return call_method<"getRegistrationState", void>(executor, stateCallback); }
	void getRegistrationTransportType(jni::ref<java::util::concurrent::Executor> executor, jni::ref<java::util::function::Consumer> transportTypeCallback) { return call_method<"getRegistrationTransportType", void>(executor, transportTypeCallback); }
	void registerMmTelCapabilityCallback(jni::ref<java::util::concurrent::Executor> executor, jni::ref<android::telephony::ims::ImsMmTelManager_CapabilityCallback> c) { return call_method<"registerMmTelCapabilityCallback", void>(executor, c); }
	void unregisterMmTelCapabilityCallback(jni::ref<android::telephony::ims::ImsMmTelManager_CapabilityCallback> c) { return call_method<"unregisterMmTelCapabilityCallback", void>(c); }
	jboolean isAdvancedCallingSettingEnabled() { return call_method<"isAdvancedCallingSettingEnabled", jboolean>(); }
	jboolean isVtSettingEnabled() { return call_method<"isVtSettingEnabled", jboolean>(); }
	jboolean isVoWiFiSettingEnabled() { return call_method<"isVoWiFiSettingEnabled", jboolean>(); }
	jboolean isCrossSimCallingEnabled() { return call_method<"isCrossSimCallingEnabled", jboolean>(); }
	jboolean isVoWiFiRoamingSettingEnabled() { return call_method<"isVoWiFiRoamingSettingEnabled", jboolean>(); }
	jint getVoWiFiModeSetting() { return call_method<"getVoWiFiModeSetting", jint>(); }
	jboolean isTtyOverVolteEnabled() { return call_method<"isTtyOverVolteEnabled", jboolean>(); }
	void registerImsStateCallback(jni::ref<java::util::concurrent::Executor> executor, jni::ref<android::telephony::ims::ImsStateCallback> callback) { return call_method<"registerImsStateCallback", void>(executor, callback); }
	void unregisterImsStateCallback(jni::ref<android::telephony::ims::ImsStateCallback> callback) { return call_method<"unregisterImsStateCallback", void>(callback); }

protected:

	ImsMmTelManager(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TELEPHONY_IMS_IMSMMTELMANAGER
