// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_TELEPHONY_SUBSCRIPTIONMANAGER_FWD
#define SCAPIX_JAVA_API_ANDROID_TELEPHONY_SUBSCRIPTIONMANAGER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::telephony { class SubscriptionManager; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::telephony::SubscriptionManager>
{
	static constexpr fixed_string class_name = "android/telephony/SubscriptionManager";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TELEPHONY_SUBSCRIPTIONMANAGER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_TELEPHONY_SUBSCRIPTIONMANAGER)
#define SCAPIX_JAVA_API_ANDROID_TELEPHONY_SUBSCRIPTIONMANAGER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/app/PendingIntent.h>
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/os/ParcelUuid.h>
#include <scapix/java_api/android/telephony/SubscriptionInfo.h>
#include <scapix/java_api/android/telephony/SubscriptionManager_OnOpportunisticSubscriptionsChangedListener.h>
#include <scapix/java_api/android/telephony/SubscriptionManager_OnSubscriptionsChangedListener.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/java/util/concurrent/Executor.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::telephony::SubscriptionManager : public jni::object_base<"android/telephony/SubscriptionManager",
	java::lang::Object>
{
public:

	using OnSubscriptionsChangedListener = SubscriptionManager_OnSubscriptionsChangedListener;
	using OnOpportunisticSubscriptionsChangedListener = SubscriptionManager_OnOpportunisticSubscriptionsChangedListener;

	static jni::ref<java::lang::String> ACTION_DEFAULT_SMS_SUBSCRIPTION_CHANGED() { return get_static_field<"ACTION_DEFAULT_SMS_SUBSCRIPTION_CHANGED", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ACTION_DEFAULT_SUBSCRIPTION_CHANGED() { return get_static_field<"ACTION_DEFAULT_SUBSCRIPTION_CHANGED", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ACTION_MANAGE_SUBSCRIPTION_PLANS() { return get_static_field<"ACTION_MANAGE_SUBSCRIPTION_PLANS", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ACTION_REFRESH_SUBSCRIPTION_PLANS() { return get_static_field<"ACTION_REFRESH_SUBSCRIPTION_PLANS", jni::ref<java::lang::String>>(); }
	static jint D2D_SHARING_ALL() { return get_static_field<"D2D_SHARING_ALL", jint>(); }
	static jint D2D_SHARING_ALL_CONTACTS() { return get_static_field<"D2D_SHARING_ALL_CONTACTS", jint>(); }
	static jint D2D_SHARING_DISABLED() { return get_static_field<"D2D_SHARING_DISABLED", jint>(); }
	static jint D2D_SHARING_SELECTED_CONTACTS() { return get_static_field<"D2D_SHARING_SELECTED_CONTACTS", jint>(); }
	static jni::ref<java::lang::String> D2D_STATUS_SHARING() { return get_static_field<"D2D_STATUS_SHARING", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> D2D_STATUS_SHARING_SELECTED_CONTACTS() { return get_static_field<"D2D_STATUS_SHARING_SELECTED_CONTACTS", jni::ref<java::lang::String>>(); }
	static jint DATA_ROAMING_DISABLE() { return get_static_field<"DATA_ROAMING_DISABLE", jint>(); }
	static jint DATA_ROAMING_ENABLE() { return get_static_field<"DATA_ROAMING_ENABLE", jint>(); }
	static jint DEFAULT_SUBSCRIPTION_ID() { return get_static_field<"DEFAULT_SUBSCRIPTION_ID", jint>(); }
	static jni::ref<java::lang::String> EXTRA_SLOT_INDEX() { return get_static_field<"EXTRA_SLOT_INDEX", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> EXTRA_SUBSCRIPTION_INDEX() { return get_static_field<"EXTRA_SUBSCRIPTION_INDEX", jni::ref<java::lang::String>>(); }
	static jint INVALID_SIM_SLOT_INDEX() { return get_static_field<"INVALID_SIM_SLOT_INDEX", jint>(); }
	static jint INVALID_SUBSCRIPTION_ID() { return get_static_field<"INVALID_SUBSCRIPTION_ID", jint>(); }
	static jint PHONE_NUMBER_SOURCE_CARRIER() { return get_static_field<"PHONE_NUMBER_SOURCE_CARRIER", jint>(); }
	static jint PHONE_NUMBER_SOURCE_IMS() { return get_static_field<"PHONE_NUMBER_SOURCE_IMS", jint>(); }
	static jint PHONE_NUMBER_SOURCE_UICC() { return get_static_field<"PHONE_NUMBER_SOURCE_UICC", jint>(); }
	static jint SUBSCRIPTION_TYPE_LOCAL_SIM() { return get_static_field<"SUBSCRIPTION_TYPE_LOCAL_SIM", jint>(); }
	static jint SUBSCRIPTION_TYPE_REMOTE_SIM() { return get_static_field<"SUBSCRIPTION_TYPE_REMOTE_SIM", jint>(); }
	static jint USAGE_SETTING_DATA_CENTRIC() { return get_static_field<"USAGE_SETTING_DATA_CENTRIC", jint>(); }
	static jint USAGE_SETTING_DEFAULT() { return get_static_field<"USAGE_SETTING_DEFAULT", jint>(); }
	static jint USAGE_SETTING_UNKNOWN() { return get_static_field<"USAGE_SETTING_UNKNOWN", jint>(); }
	static jint USAGE_SETTING_VOICE_CENTRIC() { return get_static_field<"USAGE_SETTING_VOICE_CENTRIC", jint>(); }

	static jni::ref<android::telephony::SubscriptionManager> from(jni::ref<android::content::Context> context) { return call_static_method<"from", jni::ref<android::telephony::SubscriptionManager>>(context); }
	void addOnSubscriptionsChangedListener(jni::ref<android::telephony::SubscriptionManager_OnSubscriptionsChangedListener> listener) { return call_method<"addOnSubscriptionsChangedListener", void>(listener); }
	void addOnSubscriptionsChangedListener(jni::ref<java::util::concurrent::Executor> executor, jni::ref<android::telephony::SubscriptionManager_OnSubscriptionsChangedListener> listener) { return call_method<"addOnSubscriptionsChangedListener", void>(executor, listener); }
	void removeOnSubscriptionsChangedListener(jni::ref<android::telephony::SubscriptionManager_OnSubscriptionsChangedListener> listener) { return call_method<"removeOnSubscriptionsChangedListener", void>(listener); }
	void addOnOpportunisticSubscriptionsChangedListener(jni::ref<java::util::concurrent::Executor> executor, jni::ref<android::telephony::SubscriptionManager_OnOpportunisticSubscriptionsChangedListener> listener) { return call_method<"addOnOpportunisticSubscriptionsChangedListener", void>(executor, listener); }
	void removeOnOpportunisticSubscriptionsChangedListener(jni::ref<android::telephony::SubscriptionManager_OnOpportunisticSubscriptionsChangedListener> listener) { return call_method<"removeOnOpportunisticSubscriptionsChangedListener", void>(listener); }
	jni::ref<android::telephony::SubscriptionInfo> getActiveSubscriptionInfo(jint subId) { return call_method<"getActiveSubscriptionInfo", jni::ref<android::telephony::SubscriptionInfo>>(subId); }
	jni::ref<android::telephony::SubscriptionInfo> getActiveSubscriptionInfoForSimSlotIndex(jint slotIndex) { return call_method<"getActiveSubscriptionInfoForSimSlotIndex", jni::ref<android::telephony::SubscriptionInfo>>(slotIndex); }
	jni::ref<java::util::List> getAllSubscriptionInfoList() { return call_method<"getAllSubscriptionInfoList", jni::ref<java::util::List>>(); }
	jni::ref<java::util::List> getActiveSubscriptionInfoList() { return call_method<"getActiveSubscriptionInfoList", jni::ref<java::util::List>>(); }
	jni::ref<java::util::List> getCompleteActiveSubscriptionInfoList() { return call_method<"getCompleteActiveSubscriptionInfoList", jni::ref<java::util::List>>(); }
	jni::ref<java::util::List> getAccessibleSubscriptionInfoList() { return call_method<"getAccessibleSubscriptionInfoList", jni::ref<java::util::List>>(); }
	jint getActiveSubscriptionInfoCount() { return call_method<"getActiveSubscriptionInfoCount", jint>(); }
	jint getActiveSubscriptionInfoCountMax() { return call_method<"getActiveSubscriptionInfoCountMax", jint>(); }
	static jint getSlotIndex(jint subscriptionId) { return call_static_method<"getSlotIndex", jint>(subscriptionId); }
	jni::ref<jni::array<jint>> getSubscriptionIds(jint slotIndex) { return call_method<"getSubscriptionIds", jni::ref<jni::array<jint>>>(slotIndex); }
	static jint getSubscriptionId(jint slotIndex) { return call_static_method<"getSubscriptionId", jint>(slotIndex); }
	static jint getDefaultSubscriptionId() { return call_static_method<"getDefaultSubscriptionId", jint>(); }
	static jint getDefaultVoiceSubscriptionId() { return call_static_method<"getDefaultVoiceSubscriptionId", jint>(); }
	static jint getDefaultSmsSubscriptionId() { return call_static_method<"getDefaultSmsSubscriptionId", jint>(); }
	static jint getDefaultDataSubscriptionId() { return call_static_method<"getDefaultDataSubscriptionId", jint>(); }
	static jboolean isValidSubscriptionId(jint subscriptionId) { return call_static_method<"isValidSubscriptionId", jboolean>(subscriptionId); }
	static jboolean isUsableSubscriptionId(jint subscriptionId) { return call_static_method<"isUsableSubscriptionId", jboolean>(subscriptionId); }
	jboolean isNetworkRoaming(jint subId) { return call_method<"isNetworkRoaming", jboolean>(subId); }
	jboolean isActiveSubscriptionId(jint subscriptionId) { return call_method<"isActiveSubscriptionId", jboolean>(subscriptionId); }
	jni::ref<java::util::List> getSubscriptionPlans(jint subId) { return call_method<"getSubscriptionPlans", jni::ref<java::util::List>>(subId); }
	void setSubscriptionPlans(jint subId, jni::ref<java::util::List> plans) { return call_method<"setSubscriptionPlans", void>(subId, plans); }
	void setSubscriptionPlans(jint subId, jni::ref<java::util::List> plans, jlong expirationDurationMillis) { return call_method<"setSubscriptionPlans", void>(subId, plans, expirationDurationMillis); }
	void setSubscriptionOverrideUnmetered(jint subId, jboolean overrideUnmetered, jlong expirationDurationMillis) { return call_method<"setSubscriptionOverrideUnmetered", void>(subId, overrideUnmetered, expirationDurationMillis); }
	void setSubscriptionOverrideUnmetered(jint subId, jboolean overrideUnmetered, jni::ref<jni::array<jint>> networkTypes, jlong expirationDurationMillis) { return call_method<"setSubscriptionOverrideUnmetered", void>(subId, overrideUnmetered, networkTypes, expirationDurationMillis); }
	void setSubscriptionOverrideCongested(jint subId, jboolean overrideCongested, jlong expirationDurationMillis) { return call_method<"setSubscriptionOverrideCongested", void>(subId, overrideCongested, expirationDurationMillis); }
	void setSubscriptionOverrideCongested(jint subId, jboolean overrideCongested, jni::ref<jni::array<jint>> networkTypes, jlong expirationDurationMillis) { return call_method<"setSubscriptionOverrideCongested", void>(subId, overrideCongested, networkTypes, expirationDurationMillis); }
	jboolean canManageSubscription(jni::ref<android::telephony::SubscriptionInfo> info) { return call_method<"canManageSubscription", jboolean>(info); }
	jni::ref<java::util::List> getOpportunisticSubscriptions() { return call_method<"getOpportunisticSubscriptions", jni::ref<java::util::List>>(); }
	void switchToSubscription(jint subId, jni::ref<android::app::PendingIntent> callbackIntent) { return call_method<"switchToSubscription", void>(subId, callbackIntent); }
	jboolean setOpportunistic(jboolean opportunistic, jint subId) { return call_method<"setOpportunistic", jboolean>(opportunistic, subId); }
	jni::ref<android::os::ParcelUuid> createSubscriptionGroup(jni::ref<java::util::List> subIdList) { return call_method<"createSubscriptionGroup", jni::ref<android::os::ParcelUuid>>(subIdList); }
	void addSubscriptionsIntoGroup(jni::ref<java::util::List> subIdList, jni::ref<android::os::ParcelUuid> groupUuid) { return call_method<"addSubscriptionsIntoGroup", void>(subIdList, groupUuid); }
	void removeSubscriptionsFromGroup(jni::ref<java::util::List> subIdList, jni::ref<android::os::ParcelUuid> groupUuid) { return call_method<"removeSubscriptionsFromGroup", void>(subIdList, groupUuid); }
	jni::ref<java::util::List> getSubscriptionsInGroup(jni::ref<android::os::ParcelUuid> groupUuid) { return call_method<"getSubscriptionsInGroup", jni::ref<java::util::List>>(groupUuid); }
	void setDeviceToDeviceStatusSharingPreference(jint subscriptionId, jint sharing) { return call_method<"setDeviceToDeviceStatusSharingPreference", void>(subscriptionId, sharing); }
	jint getDeviceToDeviceStatusSharingPreference(jint subscriptionId) { return call_method<"getDeviceToDeviceStatusSharingPreference", jint>(subscriptionId); }
	void setDeviceToDeviceStatusSharingContacts(jint subscriptionId, jni::ref<java::util::List> contacts) { return call_method<"setDeviceToDeviceStatusSharingContacts", void>(subscriptionId, contacts); }
	jni::ref<java::util::List> getDeviceToDeviceStatusSharingContacts(jint subscriptionId) { return call_method<"getDeviceToDeviceStatusSharingContacts", jni::ref<java::util::List>>(subscriptionId); }
	static jint getActiveDataSubscriptionId() { return call_static_method<"getActiveDataSubscriptionId", jint>(); }
	jni::ref<java::lang::String> getPhoneNumber(jint subscriptionId, jint source) { return call_method<"getPhoneNumber", jni::ref<java::lang::String>>(subscriptionId, source); }
	jni::ref<java::lang::String> getPhoneNumber(jint subscriptionId) { return call_method<"getPhoneNumber", jni::ref<java::lang::String>>(subscriptionId); }
	void setCarrierPhoneNumber(jint subscriptionId, jni::ref<java::lang::String> number) { return call_method<"setCarrierPhoneNumber", void>(subscriptionId, number); }

protected:

	SubscriptionManager(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TELEPHONY_SUBSCRIPTIONMANAGER
