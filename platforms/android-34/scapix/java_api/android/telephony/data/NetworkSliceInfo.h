// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_TELEPHONY_DATA_NETWORKSLICEINFO_FWD
#define SCAPIX_JAVA_API_ANDROID_TELEPHONY_DATA_NETWORKSLICEINFO_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::telephony::data { class NetworkSliceInfo; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::telephony::data::NetworkSliceInfo>
{
	static constexpr fixed_string class_name = "android/telephony/data/NetworkSliceInfo";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TELEPHONY_DATA_NETWORKSLICEINFO_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_TELEPHONY_DATA_NETWORKSLICEINFO)
#define SCAPIX_JAVA_API_ANDROID_TELEPHONY_DATA_NETWORKSLICEINFO

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/android/telephony/data/NetworkSliceInfo_Builder.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::telephony::data::NetworkSliceInfo : public jni::object_base<"android/telephony/data/NetworkSliceInfo",
	java::lang::Object,
	android::os::Parcelable>
{
public:

	using Builder = NetworkSliceInfo_Builder;

	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }
	static jint SLICE_DIFFERENTIATOR_NO_SLICE() { return get_static_field<"SLICE_DIFFERENTIATOR_NO_SLICE", jint>(); }
	static jint SLICE_SERVICE_TYPE_EMBB() { return get_static_field<"SLICE_SERVICE_TYPE_EMBB", jint>(); }
	static jint SLICE_SERVICE_TYPE_MIOT() { return get_static_field<"SLICE_SERVICE_TYPE_MIOT", jint>(); }
	static jint SLICE_SERVICE_TYPE_NONE() { return get_static_field<"SLICE_SERVICE_TYPE_NONE", jint>(); }
	static jint SLICE_SERVICE_TYPE_URLLC() { return get_static_field<"SLICE_SERVICE_TYPE_URLLC", jint>(); }
	static jint SLICE_STATUS_ALLOWED() { return get_static_field<"SLICE_STATUS_ALLOWED", jint>(); }
	static jint SLICE_STATUS_CONFIGURED() { return get_static_field<"SLICE_STATUS_CONFIGURED", jint>(); }
	static jint SLICE_STATUS_DEFAULT_CONFIGURED() { return get_static_field<"SLICE_STATUS_DEFAULT_CONFIGURED", jint>(); }
	static jint SLICE_STATUS_REJECTED_NOT_AVAILABLE_IN_PLMN() { return get_static_field<"SLICE_STATUS_REJECTED_NOT_AVAILABLE_IN_PLMN", jint>(); }
	static jint SLICE_STATUS_REJECTED_NOT_AVAILABLE_IN_REGISTERED_AREA() { return get_static_field<"SLICE_STATUS_REJECTED_NOT_AVAILABLE_IN_REGISTERED_AREA", jint>(); }
	static jint SLICE_STATUS_UNKNOWN() { return get_static_field<"SLICE_STATUS_UNKNOWN", jint>(); }

	jint getSliceServiceType() { return call_method<"getSliceServiceType", jint>(); }
	jint getSliceDifferentiator() { return call_method<"getSliceDifferentiator", jint>(); }
	jint getMappedHplmnSliceServiceType() { return call_method<"getMappedHplmnSliceServiceType", jint>(); }
	jint getMappedHplmnSliceDifferentiator() { return call_method<"getMappedHplmnSliceDifferentiator", jint>(); }
	jint getStatus() { return call_method<"getStatus", jint>(); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	void writeToParcel(jni::ref<android::os::Parcel> dest, jint flags) { return call_method<"writeToParcel", void>(dest, flags); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jboolean equals(jni::ref<java::lang::Object> o) { return call_method<"equals", jboolean>(o); }
	jint hashCode() { return call_method<"hashCode", jint>(); }

protected:

	NetworkSliceInfo(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TELEPHONY_DATA_NETWORKSLICEINFO
