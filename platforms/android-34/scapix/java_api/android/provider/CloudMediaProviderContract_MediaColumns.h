// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_PROVIDER_CLOUDMEDIAPROVIDERCONTRACT_MEDIACOLUMNS_FWD
#define SCAPIX_JAVA_API_ANDROID_PROVIDER_CLOUDMEDIAPROVIDERCONTRACT_MEDIACOLUMNS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::provider { class CloudMediaProviderContract_MediaColumns; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::provider::CloudMediaProviderContract_MediaColumns>
{
	static constexpr fixed_string class_name = "android/provider/CloudMediaProviderContract$MediaColumns";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_PROVIDER_CLOUDMEDIAPROVIDERCONTRACT_MEDIACOLUMNS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_PROVIDER_CLOUDMEDIAPROVIDERCONTRACT_MEDIACOLUMNS)
#define SCAPIX_JAVA_API_ANDROID_PROVIDER_CLOUDMEDIAPROVIDERCONTRACT_MEDIACOLUMNS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::provider::CloudMediaProviderContract_MediaColumns : public jni::object_base<"android/provider/CloudMediaProviderContract$MediaColumns",
	java::lang::Object>
{
public:

	static jni::ref<java::lang::String> DATE_TAKEN_MILLIS() { return get_static_field<"DATE_TAKEN_MILLIS", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> DURATION_MILLIS() { return get_static_field<"DURATION_MILLIS", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> HEIGHT() { return get_static_field<"HEIGHT", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ID() { return get_static_field<"ID", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> IS_FAVORITE() { return get_static_field<"IS_FAVORITE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MEDIA_STORE_URI() { return get_static_field<"MEDIA_STORE_URI", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MIME_TYPE() { return get_static_field<"MIME_TYPE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ORIENTATION() { return get_static_field<"ORIENTATION", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> SIZE_BYTES() { return get_static_field<"SIZE_BYTES", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> STANDARD_MIME_TYPE_EXTENSION() { return get_static_field<"STANDARD_MIME_TYPE_EXTENSION", jni::ref<java::lang::String>>(); }
	static jint STANDARD_MIME_TYPE_EXTENSION_ANIMATED_WEBP() { return get_static_field<"STANDARD_MIME_TYPE_EXTENSION_ANIMATED_WEBP", jint>(); }
	static jint STANDARD_MIME_TYPE_EXTENSION_GIF() { return get_static_field<"STANDARD_MIME_TYPE_EXTENSION_GIF", jint>(); }
	static jint STANDARD_MIME_TYPE_EXTENSION_MOTION_PHOTO() { return get_static_field<"STANDARD_MIME_TYPE_EXTENSION_MOTION_PHOTO", jint>(); }
	static jint STANDARD_MIME_TYPE_EXTENSION_NONE() { return get_static_field<"STANDARD_MIME_TYPE_EXTENSION_NONE", jint>(); }
	static jni::ref<java::lang::String> SYNC_GENERATION() { return get_static_field<"SYNC_GENERATION", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> WIDTH() { return get_static_field<"WIDTH", jni::ref<java::lang::String>>(); }


protected:

	CloudMediaProviderContract_MediaColumns(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_PROVIDER_CLOUDMEDIAPROVIDERCONTRACT_MEDIACOLUMNS
