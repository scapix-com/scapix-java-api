// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_NET_HTTP_URLREQUEST_STATUS_FWD
#define SCAPIX_JAVA_API_ANDROID_NET_HTTP_URLREQUEST_STATUS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::net::http { class UrlRequest_Status; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::net::http::UrlRequest_Status>
{
	static constexpr fixed_string class_name = "android/net/http/UrlRequest$Status";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_HTTP_URLREQUEST_STATUS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_NET_HTTP_URLREQUEST_STATUS)
#define SCAPIX_JAVA_API_ANDROID_NET_HTTP_URLREQUEST_STATUS

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::net::http::UrlRequest_Status : public jni::object_base<"android/net/http/UrlRequest$Status",
	java::lang::Object>
{
public:

	static jint CONNECTING() { return get_static_field<"CONNECTING", jint>(); }
	static jint DOWNLOADING_PAC_FILE() { return get_static_field<"DOWNLOADING_PAC_FILE", jint>(); }
	static jint ESTABLISHING_PROXY_TUNNEL() { return get_static_field<"ESTABLISHING_PROXY_TUNNEL", jint>(); }
	static jint IDLE() { return get_static_field<"IDLE", jint>(); }
	static jint INVALID() { return get_static_field<"INVALID", jint>(); }
	static jint READING_RESPONSE() { return get_static_field<"READING_RESPONSE", jint>(); }
	static jint RESOLVING_HOST() { return get_static_field<"RESOLVING_HOST", jint>(); }
	static jint RESOLVING_HOST_IN_PAC_FILE() { return get_static_field<"RESOLVING_HOST_IN_PAC_FILE", jint>(); }
	static jint RESOLVING_PROXY_FOR_URL() { return get_static_field<"RESOLVING_PROXY_FOR_URL", jint>(); }
	static jint SENDING_REQUEST() { return get_static_field<"SENDING_REQUEST", jint>(); }
	static jint SSL_HANDSHAKE() { return get_static_field<"SSL_HANDSHAKE", jint>(); }
	static jint WAITING_FOR_AVAILABLE_SOCKET() { return get_static_field<"WAITING_FOR_AVAILABLE_SOCKET", jint>(); }
	static jint WAITING_FOR_CACHE() { return get_static_field<"WAITING_FOR_CACHE", jint>(); }
	static jint WAITING_FOR_DELEGATE() { return get_static_field<"WAITING_FOR_DELEGATE", jint>(); }
	static jint WAITING_FOR_RESPONSE() { return get_static_field<"WAITING_FOR_RESPONSE", jint>(); }
	static jint WAITING_FOR_STALLED_SOCKET_POOL() { return get_static_field<"WAITING_FOR_STALLED_SOCKET_POOL", jint>(); }


protected:

	UrlRequest_Status(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_HTTP_URLREQUEST_STATUS
