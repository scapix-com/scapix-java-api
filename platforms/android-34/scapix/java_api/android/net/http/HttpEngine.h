// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_NET_HTTP_HTTPENGINE_FWD
#define SCAPIX_JAVA_API_ANDROID_NET_HTTP_HTTPENGINE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::net::http { class HttpEngine; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::net::http::HttpEngine>
{
	static constexpr fixed_string class_name = "android/net/http/HttpEngine";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_HTTP_HTTPENGINE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_NET_HTTP_HTTPENGINE)
#define SCAPIX_JAVA_API_ANDROID_NET_HTTP_HTTPENGINE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/net/Network.h>
#include <scapix/java_api/android/net/http/BidirectionalStream_Builder.h>
#include <scapix/java_api/android/net/http/BidirectionalStream_Callback.h>
#include <scapix/java_api/android/net/http/UrlRequest_Builder.h>
#include <scapix/java_api/android/net/http/UrlRequest_Callback.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/net/URL.h>
#include <scapix/java_api/java/net/URLConnection.h>
#include <scapix/java_api/java/net/URLStreamHandlerFactory.h>
#include <scapix/java_api/java/util/concurrent/Executor.h>
#include <scapix/java_api/android/net/http/HttpEngine_Builder.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::net::http::HttpEngine : public jni::object_base<"android/net/http/HttpEngine",
	java::lang::Object>
{
public:

	using Builder = HttpEngine_Builder;

	static jni::ref<java::lang::String> getVersionString() { return call_static_method<"getVersionString", jni::ref<java::lang::String>>(); }
	void shutdown() { return call_method<"shutdown", void>(); }
	void bindToNetwork(jni::ref<android::net::Network> network) { return call_method<"bindToNetwork", void>(network); }
	jni::ref<java::net::URLConnection> openConnection(jni::ref<java::net::URL> p1) { return call_method<"openConnection", jni::ref<java::net::URLConnection>>(p1); }
	jni::ref<java::net::URLStreamHandlerFactory> createUrlStreamHandlerFactory() { return call_method<"createUrlStreamHandlerFactory", jni::ref<java::net::URLStreamHandlerFactory>>(); }
	jni::ref<android::net::http::UrlRequest_Builder> newUrlRequestBuilder(jni::ref<java::lang::String> p1, jni::ref<java::util::concurrent::Executor> p2, jni::ref<android::net::http::UrlRequest_Callback> p3) { return call_method<"newUrlRequestBuilder", jni::ref<android::net::http::UrlRequest_Builder>>(p1, p2, p3); }
	jni::ref<android::net::http::BidirectionalStream_Builder> newBidirectionalStreamBuilder(jni::ref<java::lang::String> p1, jni::ref<java::util::concurrent::Executor> p2, jni::ref<android::net::http::BidirectionalStream_Callback> p3) { return call_method<"newBidirectionalStreamBuilder", jni::ref<android::net::http::BidirectionalStream_Builder>>(p1, p2, p3); }

protected:

	HttpEngine(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_HTTP_HTTPENGINE
