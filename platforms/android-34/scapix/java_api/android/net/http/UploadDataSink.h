// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_NET_HTTP_UPLOADDATASINK_FWD
#define SCAPIX_JAVA_API_ANDROID_NET_HTTP_UPLOADDATASINK_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::net::http { class UploadDataSink; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::net::http::UploadDataSink>
{
	static constexpr fixed_string class_name = "android/net/http/UploadDataSink";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_HTTP_UPLOADDATASINK_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_NET_HTTP_UPLOADDATASINK)
#define SCAPIX_JAVA_API_ANDROID_NET_HTTP_UPLOADDATASINK

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Exception.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::net::http::UploadDataSink : public jni::object_base<"android/net/http/UploadDataSink",
	java::lang::Object>
{
public:

	static jni::ref<android::net::http::UploadDataSink> new_object() { return base_::new_object(); }
	void onReadSucceeded(jboolean p1) { return call_method<"onReadSucceeded", void>(p1); }
	void onReadError(jni::ref<java::lang::Exception> p1) { return call_method<"onReadError", void>(p1); }
	void onRewindSucceeded() { return call_method<"onRewindSucceeded", void>(); }
	void onRewindError(jni::ref<java::lang::Exception> p1) { return call_method<"onRewindError", void>(p1); }

protected:

	UploadDataSink(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_HTTP_UPLOADDATASINK
