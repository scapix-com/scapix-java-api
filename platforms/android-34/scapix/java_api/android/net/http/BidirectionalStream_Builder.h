// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_NET_HTTP_BIDIRECTIONALSTREAM_BUILDER_FWD
#define SCAPIX_JAVA_API_ANDROID_NET_HTTP_BIDIRECTIONALSTREAM_BUILDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::net::http { class BidirectionalStream_Builder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::net::http::BidirectionalStream_Builder>
{
	static constexpr fixed_string class_name = "android/net/http/BidirectionalStream$Builder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_HTTP_BIDIRECTIONALSTREAM_BUILDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_NET_HTTP_BIDIRECTIONALSTREAM_BUILDER)
#define SCAPIX_JAVA_API_ANDROID_NET_HTTP_BIDIRECTIONALSTREAM_BUILDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/net/http/BidirectionalStream.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::net::http::BidirectionalStream_Builder : public jni::object_base<"android/net/http/BidirectionalStream$Builder",
	java::lang::Object>
{
public:

	static jni::ref<android::net::http::BidirectionalStream_Builder> new_object() { return base_::new_object(); }
	jni::ref<android::net::http::BidirectionalStream_Builder> setHttpMethod(jni::ref<java::lang::String> p1) { return call_method<"setHttpMethod", jni::ref<android::net::http::BidirectionalStream_Builder>>(p1); }
	jni::ref<android::net::http::BidirectionalStream_Builder> addHeader(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return call_method<"addHeader", jni::ref<android::net::http::BidirectionalStream_Builder>>(p1, p2); }
	jni::ref<android::net::http::BidirectionalStream_Builder> setPriority(jint p1) { return call_method<"setPriority", jni::ref<android::net::http::BidirectionalStream_Builder>>(p1); }
	jni::ref<android::net::http::BidirectionalStream_Builder> setDelayRequestHeadersUntilFirstFlushEnabled(jboolean p1) { return call_method<"setDelayRequestHeadersUntilFirstFlushEnabled", jni::ref<android::net::http::BidirectionalStream_Builder>>(p1); }
	jni::ref<android::net::http::BidirectionalStream_Builder> setTrafficStatsTag(jint p1) { return call_method<"setTrafficStatsTag", jni::ref<android::net::http::BidirectionalStream_Builder>>(p1); }
	jni::ref<android::net::http::BidirectionalStream_Builder> setTrafficStatsUid(jint p1) { return call_method<"setTrafficStatsUid", jni::ref<android::net::http::BidirectionalStream_Builder>>(p1); }
	jni::ref<android::net::http::BidirectionalStream> build() { return call_method<"build", jni::ref<android::net::http::BidirectionalStream>>(); }

protected:

	BidirectionalStream_Builder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_HTTP_BIDIRECTIONALSTREAM_BUILDER
