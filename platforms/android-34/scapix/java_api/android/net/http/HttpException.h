// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/io/IOException.h>

#ifndef SCAPIX_JAVA_API_ANDROID_NET_HTTP_HTTPEXCEPTION_FWD
#define SCAPIX_JAVA_API_ANDROID_NET_HTTP_HTTPEXCEPTION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::net::http { class HttpException; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::net::http::HttpException>
{
	static constexpr fixed_string class_name = "android/net/http/HttpException";
	using base_classes = std::tuple<scapix::java_api::java::io::IOException>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_HTTP_HTTPEXCEPTION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_NET_HTTP_HTTPEXCEPTION)
#define SCAPIX_JAVA_API_ANDROID_NET_HTTP_HTTPEXCEPTION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/Throwable.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::net::http::HttpException : public jni::object_base<"android/net/http/HttpException",
	java::io::IOException>
{
public:

	static jni::ref<android::net::http::HttpException> new_object(jni::ref<java::lang::String> message, jni::ref<java::lang::Throwable> cause) { return base_::new_object(message, cause); }

protected:

	HttpException(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_HTTP_HTTPEXCEPTION
