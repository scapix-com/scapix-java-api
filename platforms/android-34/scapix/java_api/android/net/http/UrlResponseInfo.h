// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_NET_HTTP_URLRESPONSEINFO_FWD
#define SCAPIX_JAVA_API_ANDROID_NET_HTTP_URLRESPONSEINFO_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::net::http { class UrlResponseInfo; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::net::http::UrlResponseInfo>
{
	static constexpr fixed_string class_name = "android/net/http/UrlResponseInfo";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_HTTP_URLRESPONSEINFO_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_NET_HTTP_URLRESPONSEINFO)
#define SCAPIX_JAVA_API_ANDROID_NET_HTTP_URLRESPONSEINFO

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/net/http/HeaderBlock.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::net::http::UrlResponseInfo : public jni::object_base<"android/net/http/UrlResponseInfo",
	java::lang::Object>
{
public:

	static jni::ref<android::net::http::UrlResponseInfo> new_object() { return base_::new_object(); }
	jni::ref<java::lang::String> getUrl() { return call_method<"getUrl", jni::ref<java::lang::String>>(); }
	jni::ref<java::util::List> getUrlChain() { return call_method<"getUrlChain", jni::ref<java::util::List>>(); }
	jint getHttpStatusCode() { return call_method<"getHttpStatusCode", jint>(); }
	jni::ref<java::lang::String> getHttpStatusText() { return call_method<"getHttpStatusText", jni::ref<java::lang::String>>(); }
	jni::ref<android::net::http::HeaderBlock> getHeaders() { return call_method<"getHeaders", jni::ref<android::net::http::HeaderBlock>>(); }
	jboolean wasCached() { return call_method<"wasCached", jboolean>(); }
	jni::ref<java::lang::String> getNegotiatedProtocol() { return call_method<"getNegotiatedProtocol", jni::ref<java::lang::String>>(); }
	jlong getReceivedByteCount() { return call_method<"getReceivedByteCount", jlong>(); }

protected:

	UrlResponseInfo(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_HTTP_URLRESPONSEINFO
