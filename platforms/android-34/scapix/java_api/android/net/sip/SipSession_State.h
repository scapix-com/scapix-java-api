// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_NET_SIP_SIPSESSION_STATE_FWD
#define SCAPIX_JAVA_API_ANDROID_NET_SIP_SIPSESSION_STATE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::net::sip { class SipSession_State; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::net::sip::SipSession_State>
{
	static constexpr fixed_string class_name = "android/net/sip/SipSession$State";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_SIP_SIPSESSION_STATE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_NET_SIP_SIPSESSION_STATE)
#define SCAPIX_JAVA_API_ANDROID_NET_SIP_SIPSESSION_STATE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::net::sip::SipSession_State : public jni::object_base<"android/net/sip/SipSession$State",
	java::lang::Object>
{
public:

	static jint DEREGISTERING() { return get_static_field<"DEREGISTERING", jint>(); }
	static jint INCOMING_CALL() { return get_static_field<"INCOMING_CALL", jint>(); }
	static jint INCOMING_CALL_ANSWERING() { return get_static_field<"INCOMING_CALL_ANSWERING", jint>(); }
	static jint IN_CALL() { return get_static_field<"IN_CALL", jint>(); }
	static jint NOT_DEFINED() { return get_static_field<"NOT_DEFINED", jint>(); }
	static jint OUTGOING_CALL() { return get_static_field<"OUTGOING_CALL", jint>(); }
	static jint OUTGOING_CALL_CANCELING() { return get_static_field<"OUTGOING_CALL_CANCELING", jint>(); }
	static jint OUTGOING_CALL_RING_BACK() { return get_static_field<"OUTGOING_CALL_RING_BACK", jint>(); }
	static jint PINGING() { return get_static_field<"PINGING", jint>(); }
	static jint READY_TO_CALL() { return get_static_field<"READY_TO_CALL", jint>(); }
	static jint REGISTERING() { return get_static_field<"REGISTERING", jint>(); }

	static jni::ref<java::lang::String> toString(jint state) { return call_static_method<"toString", jni::ref<java::lang::String>>(state); }

protected:

	SipSession_State(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_SIP_SIPSESSION_STATE
