// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_NET_ROUTEINFO_FWD
#define SCAPIX_JAVA_API_ANDROID_NET_ROUTEINFO_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::net { class RouteInfo; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::net::RouteInfo>
{
	static constexpr fixed_string class_name = "android/net/RouteInfo";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_ROUTEINFO_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_NET_ROUTEINFO)
#define SCAPIX_JAVA_API_ANDROID_NET_ROUTEINFO

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/net/IpPrefix.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/net/InetAddress.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::net::RouteInfo : public jni::object_base<"android/net/RouteInfo",
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }
	static jint RTN_THROW() { return get_static_field<"RTN_THROW", jint>(); }
	static jint RTN_UNICAST() { return get_static_field<"RTN_UNICAST", jint>(); }
	static jint RTN_UNREACHABLE() { return get_static_field<"RTN_UNREACHABLE", jint>(); }

	jni::ref<android::net::IpPrefix> getDestination() { return call_method<"getDestination", jni::ref<android::net::IpPrefix>>(); }
	jni::ref<java::net::InetAddress> getGateway() { return call_method<"getGateway", jni::ref<java::net::InetAddress>>(); }
	jni::ref<java::lang::String> getInterface() { return call_method<"getInterface", jni::ref<java::lang::String>>(); }
	jint getType() { return call_method<"getType", jint>(); }
	jboolean isDefaultRoute() { return call_method<"isDefaultRoute", jboolean>(); }
	jboolean hasGateway() { return call_method<"hasGateway", jboolean>(); }
	jboolean matches(jni::ref<java::net::InetAddress> destination) { return call_method<"matches", jboolean>(destination); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jboolean equals(jni::ref<java::lang::Object> obj) { return call_method<"equals", jboolean>(obj); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	void writeToParcel(jni::ref<android::os::Parcel> dest, jint flags) { return call_method<"writeToParcel", void>(dest, flags); }

protected:

	RouteInfo(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_ROUTEINFO
