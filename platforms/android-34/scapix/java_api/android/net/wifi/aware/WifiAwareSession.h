// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/AutoCloseable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_NET_WIFI_AWARE_WIFIAWARESESSION_FWD
#define SCAPIX_JAVA_API_ANDROID_NET_WIFI_AWARE_WIFIAWARESESSION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::net::wifi::aware { class WifiAwareSession; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::net::wifi::aware::WifiAwareSession>
{
	static constexpr fixed_string class_name = "android/net/wifi/aware/WifiAwareSession";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::lang::AutoCloseable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_WIFI_AWARE_WIFIAWARESESSION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_NET_WIFI_AWARE_WIFIAWARESESSION)
#define SCAPIX_JAVA_API_ANDROID_NET_WIFI_AWARE_WIFIAWARESESSION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/net/NetworkSpecifier.h>
#include <scapix/java_api/android/net/wifi/aware/DiscoverySessionCallback.h>
#include <scapix/java_api/android/net/wifi/aware/PublishConfig.h>
#include <scapix/java_api/android/net/wifi/aware/SubscribeConfig.h>
#include <scapix/java_api/android/os/Handler.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::net::wifi::aware::WifiAwareSession : public jni::object_base<"android/net/wifi/aware/WifiAwareSession",
	java::lang::Object,
	java::lang::AutoCloseable>
{
public:

	void close() { return call_method<"close", void>(); }
	void publish(jni::ref<android::net::wifi::aware::PublishConfig> publishConfig, jni::ref<android::net::wifi::aware::DiscoverySessionCallback> callback, jni::ref<android::os::Handler> handler) { return call_method<"publish", void>(publishConfig, callback, handler); }
	void subscribe(jni::ref<android::net::wifi::aware::SubscribeConfig> subscribeConfig, jni::ref<android::net::wifi::aware::DiscoverySessionCallback> callback, jni::ref<android::os::Handler> handler) { return call_method<"subscribe", void>(subscribeConfig, callback, handler); }
	jni::ref<android::net::NetworkSpecifier> createNetworkSpecifierOpen(jint role, jni::ref<jni::array<jbyte>> peer) { return call_method<"createNetworkSpecifierOpen", jni::ref<android::net::NetworkSpecifier>>(role, peer); }
	jni::ref<android::net::NetworkSpecifier> createNetworkSpecifierPassphrase(jint role, jni::ref<jni::array<jbyte>> peer, jni::ref<java::lang::String> passphrase) { return call_method<"createNetworkSpecifierPassphrase", jni::ref<android::net::NetworkSpecifier>>(role, peer, passphrase); }

protected:

	WifiAwareSession(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_WIFI_AWARE_WIFIAWARESESSION
