// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_NET_WIFI_AWARE_WIFIAWARENETWORKSPECIFIER_BUILDER_FWD
#define SCAPIX_JAVA_API_ANDROID_NET_WIFI_AWARE_WIFIAWARENETWORKSPECIFIER_BUILDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::net::wifi::aware { class WifiAwareNetworkSpecifier_Builder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::net::wifi::aware::WifiAwareNetworkSpecifier_Builder>
{
	static constexpr fixed_string class_name = "android/net/wifi/aware/WifiAwareNetworkSpecifier$Builder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_WIFI_AWARE_WIFIAWARENETWORKSPECIFIER_BUILDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_NET_WIFI_AWARE_WIFIAWARENETWORKSPECIFIER_BUILDER)
#define SCAPIX_JAVA_API_ANDROID_NET_WIFI_AWARE_WIFIAWARENETWORKSPECIFIER_BUILDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/net/wifi/aware/DiscoverySession.h>
#include <scapix/java_api/android/net/wifi/aware/PeerHandle.h>
#include <scapix/java_api/android/net/wifi/aware/PublishDiscoverySession.h>
#include <scapix/java_api/android/net/wifi/aware/WifiAwareDataPathSecurityConfig.h>
#include <scapix/java_api/android/net/wifi/aware/WifiAwareNetworkSpecifier.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::net::wifi::aware::WifiAwareNetworkSpecifier_Builder : public jni::object_base<"android/net/wifi/aware/WifiAwareNetworkSpecifier$Builder",
	java::lang::Object>
{
public:

	static jni::ref<android::net::wifi::aware::WifiAwareNetworkSpecifier_Builder> new_object(jni::ref<android::net::wifi::aware::DiscoverySession> discoverySession, jni::ref<android::net::wifi::aware::PeerHandle> peerHandle) { return base_::new_object(discoverySession, peerHandle); }
	static jni::ref<android::net::wifi::aware::WifiAwareNetworkSpecifier_Builder> new_object(jni::ref<android::net::wifi::aware::PublishDiscoverySession> publishDiscoverySession) { return base_::new_object(publishDiscoverySession); }
	jni::ref<android::net::wifi::aware::WifiAwareNetworkSpecifier_Builder> setPskPassphrase(jni::ref<java::lang::String> pskPassphrase) { return call_method<"setPskPassphrase", jni::ref<android::net::wifi::aware::WifiAwareNetworkSpecifier_Builder>>(pskPassphrase); }
	jni::ref<android::net::wifi::aware::WifiAwareNetworkSpecifier_Builder> setPmk(jni::ref<jni::array<jbyte>> pmk) { return call_method<"setPmk", jni::ref<android::net::wifi::aware::WifiAwareNetworkSpecifier_Builder>>(pmk); }
	jni::ref<android::net::wifi::aware::WifiAwareNetworkSpecifier_Builder> setPort(jint port) { return call_method<"setPort", jni::ref<android::net::wifi::aware::WifiAwareNetworkSpecifier_Builder>>(port); }
	jni::ref<android::net::wifi::aware::WifiAwareNetworkSpecifier_Builder> setTransportProtocol(jint transportProtocol) { return call_method<"setTransportProtocol", jni::ref<android::net::wifi::aware::WifiAwareNetworkSpecifier_Builder>>(transportProtocol); }
	jni::ref<android::net::wifi::aware::WifiAwareNetworkSpecifier_Builder> setChannelFrequencyMhz(jint channelInMhz, jboolean required) { return call_method<"setChannelFrequencyMhz", jni::ref<android::net::wifi::aware::WifiAwareNetworkSpecifier_Builder>>(channelInMhz, required); }
	jni::ref<android::net::wifi::aware::WifiAwareNetworkSpecifier_Builder> setDataPathSecurityConfig(jni::ref<android::net::wifi::aware::WifiAwareDataPathSecurityConfig> securityConfig) { return call_method<"setDataPathSecurityConfig", jni::ref<android::net::wifi::aware::WifiAwareNetworkSpecifier_Builder>>(securityConfig); }
	jni::ref<android::net::wifi::aware::WifiAwareNetworkSpecifier> build() { return call_method<"build", jni::ref<android::net::wifi::aware::WifiAwareNetworkSpecifier>>(); }

protected:

	WifiAwareNetworkSpecifier_Builder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_WIFI_AWARE_WIFIAWARENETWORKSPECIFIER_BUILDER
