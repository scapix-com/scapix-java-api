// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_NET_IPSECTRANSFORM_BUILDER_FWD
#define SCAPIX_JAVA_API_ANDROID_NET_IPSECTRANSFORM_BUILDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::net { class IpSecTransform_Builder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::net::IpSecTransform_Builder>
{
	static constexpr fixed_string class_name = "android/net/IpSecTransform$Builder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_IPSECTRANSFORM_BUILDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_NET_IPSECTRANSFORM_BUILDER)
#define SCAPIX_JAVA_API_ANDROID_NET_IPSECTRANSFORM_BUILDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/net/IpSecAlgorithm.h>
#include <scapix/java_api/android/net/IpSecManager_SecurityParameterIndex.h>
#include <scapix/java_api/android/net/IpSecManager_UdpEncapsulationSocket.h>
#include <scapix/java_api/android/net/IpSecTransform.h>
#include <scapix/java_api/java/net/InetAddress.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::net::IpSecTransform_Builder : public jni::object_base<"android/net/IpSecTransform$Builder",
	java::lang::Object>
{
public:

	static jni::ref<android::net::IpSecTransform_Builder> new_object(jni::ref<android::content::Context> context) { return base_::new_object(context); }
	jni::ref<android::net::IpSecTransform_Builder> setEncryption(jni::ref<android::net::IpSecAlgorithm> algo) { return call_method<"setEncryption", jni::ref<android::net::IpSecTransform_Builder>>(algo); }
	jni::ref<android::net::IpSecTransform_Builder> setAuthentication(jni::ref<android::net::IpSecAlgorithm> algo) { return call_method<"setAuthentication", jni::ref<android::net::IpSecTransform_Builder>>(algo); }
	jni::ref<android::net::IpSecTransform_Builder> setAuthenticatedEncryption(jni::ref<android::net::IpSecAlgorithm> algo) { return call_method<"setAuthenticatedEncryption", jni::ref<android::net::IpSecTransform_Builder>>(algo); }
	jni::ref<android::net::IpSecTransform_Builder> setIpv4Encapsulation(jni::ref<android::net::IpSecManager_UdpEncapsulationSocket> localSocket, jint remotePort) { return call_method<"setIpv4Encapsulation", jni::ref<android::net::IpSecTransform_Builder>>(localSocket, remotePort); }
	jni::ref<android::net::IpSecTransform> buildTransportModeTransform(jni::ref<java::net::InetAddress> sourceAddress, jni::ref<android::net::IpSecManager_SecurityParameterIndex> spi) { return call_method<"buildTransportModeTransform", jni::ref<android::net::IpSecTransform>>(sourceAddress, spi); }

protected:

	IpSecTransform_Builder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_IPSECTRANSFORM_BUILDER
