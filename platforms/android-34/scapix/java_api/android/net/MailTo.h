// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_NET_MAILTO_FWD
#define SCAPIX_JAVA_API_ANDROID_NET_MAILTO_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::net { class MailTo; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::net::MailTo>
{
	static constexpr fixed_string class_name = "android/net/MailTo";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_MAILTO_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_NET_MAILTO)
#define SCAPIX_JAVA_API_ANDROID_NET_MAILTO

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Map.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::net::MailTo : public jni::object_base<"android/net/MailTo",
	java::lang::Object>
{
public:

	static jni::ref<java::lang::String> MAILTO_SCHEME() { return get_static_field<"MAILTO_SCHEME", jni::ref<java::lang::String>>(); }

	static jboolean isMailTo(jni::ref<java::lang::String> url) { return call_static_method<"isMailTo", jboolean>(url); }
	static jni::ref<android::net::MailTo> parse(jni::ref<java::lang::String> url) { return call_static_method<"parse", jni::ref<android::net::MailTo>>(url); }
	jni::ref<java::lang::String> getTo() { return call_method<"getTo", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getCc() { return call_method<"getCc", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getSubject() { return call_method<"getSubject", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getBody() { return call_method<"getBody", jni::ref<java::lang::String>>(); }
	jni::ref<java::util::Map> getHeaders() { return call_method<"getHeaders", jni::ref<java::util::Map>>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	MailTo(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_MAILTO
