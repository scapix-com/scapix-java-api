// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_NET_VPNPROFILESTATE_FWD
#define SCAPIX_JAVA_API_ANDROID_NET_VPNPROFILESTATE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::net { class VpnProfileState; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::net::VpnProfileState>
{
	static constexpr fixed_string class_name = "android/net/VpnProfileState";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_VPNPROFILESTATE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_NET_VPNPROFILESTATE)
#define SCAPIX_JAVA_API_ANDROID_NET_VPNPROFILESTATE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::net::VpnProfileState : public jni::object_base<"android/net/VpnProfileState",
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }
	static jint STATE_CONNECTED() { return get_static_field<"STATE_CONNECTED", jint>(); }
	static jint STATE_CONNECTING() { return get_static_field<"STATE_CONNECTING", jint>(); }
	static jint STATE_DISCONNECTED() { return get_static_field<"STATE_DISCONNECTED", jint>(); }
	static jint STATE_FAILED() { return get_static_field<"STATE_FAILED", jint>(); }

	static jni::ref<android::net::VpnProfileState> new_object(jint state, jni::ref<java::lang::String> sessionKey, jboolean alwaysOn, jboolean lockdown) { return base_::new_object(state, sessionKey, alwaysOn, lockdown); }
	jint getState() { return call_method<"getState", jint>(); }
	jni::ref<java::lang::String> getSessionId() { return call_method<"getSessionId", jni::ref<java::lang::String>>(); }
	jboolean isAlwaysOn() { return call_method<"isAlwaysOn", jboolean>(); }
	jboolean isLockdownEnabled() { return call_method<"isLockdownEnabled", jboolean>(); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	void writeToParcel(jni::ref<android::os::Parcel> out, jint flags) { return call_method<"writeToParcel", void>(out, flags); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jboolean equals(jni::ref<java::lang::Object> obj) { return call_method<"equals", jboolean>(obj); }
	jint hashCode() { return call_method<"hashCode", jint>(); }

protected:

	VpnProfileState(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_VPNPROFILESTATE
