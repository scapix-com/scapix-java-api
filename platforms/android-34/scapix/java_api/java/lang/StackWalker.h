// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_LANG_STACKWALKER_FWD
#define SCAPIX_JAVA_API_JAVA_LANG_STACKWALKER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::lang { class StackWalker; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::lang::StackWalker>
{
	static constexpr fixed_string class_name = "java/lang/StackWalker";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_STACKWALKER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_LANG_STACKWALKER)
#define SCAPIX_JAVA_API_JAVA_LANG_STACKWALKER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/StackWalker_Option.h>
#include <scapix/java_api/java/util/Set.h>
#include <scapix/java_api/java/util/function/Consumer.h>
#include <scapix/java_api/java/util/function/Function.h>
#include <scapix/java_api/java/lang/StackWalker_StackFrame.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::lang::StackWalker : public jni::object_base<"java/lang/StackWalker",
	java::lang::Object>
{
public:

	using StackFrame = StackWalker_StackFrame;
	using Option = StackWalker_Option;

	static jni::ref<java::lang::StackWalker> getInstance() { return call_static_method<"getInstance", jni::ref<java::lang::StackWalker>>(); }
	static jni::ref<java::lang::StackWalker> getInstance(jni::ref<java::lang::StackWalker_Option> option) { return call_static_method<"getInstance", jni::ref<java::lang::StackWalker>>(option); }
	static jni::ref<java::lang::StackWalker> getInstance(jni::ref<java::util::Set> options) { return call_static_method<"getInstance", jni::ref<java::lang::StackWalker>>(options); }
	static jni::ref<java::lang::StackWalker> getInstance(jni::ref<java::util::Set> options, jint estimateDepth) { return call_static_method<"getInstance", jni::ref<java::lang::StackWalker>>(options, estimateDepth); }
	jni::ref<java::lang::Object> walk(jni::ref<java::util::function::Function> function) { return call_method<"walk", jni::ref<java::lang::Object>>(function); }
	void forEach(jni::ref<java::util::function::Consumer> action) { return call_method<"forEach", void>(action); }
	jni::ref<java::lang::Class> getCallerClass() { return call_method<"getCallerClass", jni::ref<java::lang::Class>>(); }

protected:

	StackWalker(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_STACKWALKER
