// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/security/GeneralSecurityException.h>

#ifndef SCAPIX_JAVA_API_JAVA_SECURITY_CERT_CERTPATHVALIDATOREXCEPTION_FWD
#define SCAPIX_JAVA_API_JAVA_SECURITY_CERT_CERTPATHVALIDATOREXCEPTION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::security::cert { class CertPathValidatorException; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::security::cert::CertPathValidatorException>
{
	static constexpr fixed_string class_name = "java/security/cert/CertPathValidatorException";
	using base_classes = std::tuple<scapix::java_api::java::security::GeneralSecurityException>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_SECURITY_CERT_CERTPATHVALIDATOREXCEPTION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_SECURITY_CERT_CERTPATHVALIDATOREXCEPTION)
#define SCAPIX_JAVA_API_JAVA_SECURITY_CERT_CERTPATHVALIDATOREXCEPTION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/Throwable.h>
#include <scapix/java_api/java/security/cert/CertPath.h>
#include <scapix/java_api/java/security/cert/CertPathValidatorException_Reason.h>
#include <scapix/java_api/java/security/cert/CertPathValidatorException_BasicReason.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::security::cert::CertPathValidatorException : public jni::object_base<"java/security/cert/CertPathValidatorException",
	java::security::GeneralSecurityException>
{
public:

	using Reason = CertPathValidatorException_Reason;
	using BasicReason = CertPathValidatorException_BasicReason;

	static jni::ref<java::security::cert::CertPathValidatorException> new_object() { return base_::new_object(); }
	static jni::ref<java::security::cert::CertPathValidatorException> new_object(jni::ref<java::lang::String> msg) { return base_::new_object(msg); }
	static jni::ref<java::security::cert::CertPathValidatorException> new_object(jni::ref<java::lang::Throwable> cause) { return base_::new_object(cause); }
	static jni::ref<java::security::cert::CertPathValidatorException> new_object(jni::ref<java::lang::String> msg, jni::ref<java::lang::Throwable> cause) { return base_::new_object(msg, cause); }
	static jni::ref<java::security::cert::CertPathValidatorException> new_object(jni::ref<java::lang::String> msg, jni::ref<java::lang::Throwable> cause, jni::ref<java::security::cert::CertPath> certPath, jint index) { return base_::new_object(msg, cause, certPath, index); }
	static jni::ref<java::security::cert::CertPathValidatorException> new_object(jni::ref<java::lang::String> msg, jni::ref<java::lang::Throwable> cause, jni::ref<java::security::cert::CertPath> certPath, jint index, jni::ref<java::security::cert::CertPathValidatorException_Reason> reason) { return base_::new_object(msg, cause, certPath, index, reason); }
	jni::ref<java::security::cert::CertPath> getCertPath() { return call_method<"getCertPath", jni::ref<java::security::cert::CertPath>>(); }
	jint getIndex() { return call_method<"getIndex", jint>(); }
	jni::ref<java::security::cert::CertPathValidatorException_Reason> getReason() { return call_method<"getReason", jni::ref<java::security::cert::CertPathValidatorException_Reason>>(); }

protected:

	CertPathValidatorException(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_SECURITY_CERT_CERTPATHVALIDATOREXCEPTION
