// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/ClassLoader.h>

#ifndef SCAPIX_JAVA_API_DALVIK_SYSTEM_BASEDEXCLASSLOADER_FWD
#define SCAPIX_JAVA_API_DALVIK_SYSTEM_BASEDEXCLASSLOADER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::dalvik::system { class BaseDexClassLoader; }

template<>
struct scapix::jni::object_traits<scapix::java_api::dalvik::system::BaseDexClassLoader>
{
	static constexpr fixed_string class_name = "dalvik/system/BaseDexClassLoader";
	using base_classes = std::tuple<scapix::java_api::java::lang::ClassLoader>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_DALVIK_SYSTEM_BASEDEXCLASSLOADER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_DALVIK_SYSTEM_BASEDEXCLASSLOADER)
#define SCAPIX_JAVA_API_DALVIK_SYSTEM_BASEDEXCLASSLOADER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/File.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class dalvik::system::BaseDexClassLoader : public jni::object_base<"dalvik/system/BaseDexClassLoader",
	java::lang::ClassLoader>
{
public:

	static jni::ref<dalvik::system::BaseDexClassLoader> new_object(jni::ref<java::lang::String> dexPath, jni::ref<java::io::File> optimizedDirectory, jni::ref<java::lang::String> librarySearchPath, jni::ref<java::lang::ClassLoader> parent) { return base_::new_object(dexPath, optimizedDirectory, librarySearchPath, parent); }
	jni::ref<java::lang::String> findLibrary(jni::ref<java::lang::String> name) { return call_method<"findLibrary", jni::ref<java::lang::String>>(name); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	BaseDexClassLoader(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_DALVIK_SYSTEM_BASEDEXCLASSLOADER
