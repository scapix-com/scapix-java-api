// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/org/apache/http/params/CoreConnectionPNames.h>

#ifndef SCAPIX_JAVA_API_ORG_APACHE_HTTP_PARAMS_HTTPCONNECTIONPARAMS_FWD
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_PARAMS_HTTPCONNECTIONPARAMS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::org::apache::http::params { class HttpConnectionParams; }

template<>
struct scapix::jni::object_traits<scapix::java_api::org::apache::http::params::HttpConnectionParams>
{
	static constexpr fixed_string class_name = "org/apache/http/params/HttpConnectionParams";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::org::apache::http::params::CoreConnectionPNames>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_PARAMS_HTTPCONNECTIONPARAMS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ORG_APACHE_HTTP_PARAMS_HTTPCONNECTIONPARAMS)
#define SCAPIX_JAVA_API_ORG_APACHE_HTTP_PARAMS_HTTPCONNECTIONPARAMS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/org/apache/http/params/HttpParams.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class org::apache::http::params::HttpConnectionParams : public jni::object_base<"org/apache/http/params/HttpConnectionParams",
	java::lang::Object,
	org::apache::http::params::CoreConnectionPNames>
{
public:

	static jint getSoTimeout(jni::ref<org::apache::http::params::HttpParams> params) { return call_static_method<"getSoTimeout", jint>(params); }
	static void setSoTimeout(jni::ref<org::apache::http::params::HttpParams> params, jint timeout) { return call_static_method<"setSoTimeout", void>(params, timeout); }
	static jboolean getTcpNoDelay(jni::ref<org::apache::http::params::HttpParams> params) { return call_static_method<"getTcpNoDelay", jboolean>(params); }
	static void setTcpNoDelay(jni::ref<org::apache::http::params::HttpParams> params, jboolean value) { return call_static_method<"setTcpNoDelay", void>(params, value); }
	static jint getSocketBufferSize(jni::ref<org::apache::http::params::HttpParams> params) { return call_static_method<"getSocketBufferSize", jint>(params); }
	static void setSocketBufferSize(jni::ref<org::apache::http::params::HttpParams> params, jint size) { return call_static_method<"setSocketBufferSize", void>(params, size); }
	static jint getLinger(jni::ref<org::apache::http::params::HttpParams> params) { return call_static_method<"getLinger", jint>(params); }
	static void setLinger(jni::ref<org::apache::http::params::HttpParams> params, jint value) { return call_static_method<"setLinger", void>(params, value); }
	static jint getConnectionTimeout(jni::ref<org::apache::http::params::HttpParams> params) { return call_static_method<"getConnectionTimeout", jint>(params); }
	static void setConnectionTimeout(jni::ref<org::apache::http::params::HttpParams> params, jint timeout) { return call_static_method<"setConnectionTimeout", void>(params, timeout); }
	static jboolean isStaleCheckingEnabled(jni::ref<org::apache::http::params::HttpParams> params) { return call_static_method<"isStaleCheckingEnabled", jboolean>(params); }
	static void setStaleCheckingEnabled(jni::ref<org::apache::http::params::HttpParams> params, jboolean value) { return call_static_method<"setStaleCheckingEnabled", void>(params, value); }

protected:

	HttpConnectionParams(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ORG_APACHE_HTTP_PARAMS_HTTPCONNECTIONPARAMS
