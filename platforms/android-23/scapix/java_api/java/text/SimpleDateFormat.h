// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/text/DateFormat.h>

#ifndef SCAPIX_JAVA_API_JAVA_TEXT_SIMPLEDATEFORMAT_FWD
#define SCAPIX_JAVA_API_JAVA_TEXT_SIMPLEDATEFORMAT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::text { class SimpleDateFormat; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::text::SimpleDateFormat>
{
	static constexpr fixed_string class_name = "java/text/SimpleDateFormat";
	using base_classes = std::tuple<scapix::java_api::java::text::DateFormat>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_TEXT_SIMPLEDATEFORMAT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_TEXT_SIMPLEDATEFORMAT)
#define SCAPIX_JAVA_API_JAVA_TEXT_SIMPLEDATEFORMAT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/StringBuffer.h>
#include <scapix/java_api/java/text/AttributedCharacterIterator.h>
#include <scapix/java_api/java/text/DateFormatSymbols.h>
#include <scapix/java_api/java/text/FieldPosition.h>
#include <scapix/java_api/java/text/ParsePosition.h>
#include <scapix/java_api/java/util/Date.h>
#include <scapix/java_api/java/util/Locale.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::text::SimpleDateFormat : public jni::object_base<"java/text/SimpleDateFormat",
	java::text::DateFormat>
{
public:

	static jni::ref<java::text::SimpleDateFormat> new_object() { return base_::new_object(); }
	static jni::ref<java::text::SimpleDateFormat> new_object(jni::ref<java::lang::String> pattern) { return base_::new_object(pattern); }
	static jni::ref<java::text::SimpleDateFormat> new_object(jni::ref<java::lang::String> template_, jni::ref<java::text::DateFormatSymbols> value) { return base_::new_object(template_, value); }
	static jni::ref<java::text::SimpleDateFormat> new_object(jni::ref<java::lang::String> template_, jni::ref<java::util::Locale> locale) { return base_::new_object(template_, locale); }
	void applyLocalizedPattern(jni::ref<java::lang::String> template_) { return call_method<"applyLocalizedPattern", void>(template_); }
	void applyPattern(jni::ref<java::lang::String> template_) { return call_method<"applyPattern", void>(template_); }
	jni::ref<java::lang::Object> clone() { return call_method<"clone", jni::ref<java::lang::Object>>(); }
	jboolean equals(jni::ref<java::lang::Object> object) { return call_method<"equals", jboolean>(object); }
	jni::ref<java::text::AttributedCharacterIterator> formatToCharacterIterator(jni::ref<java::lang::Object> object) { return call_method<"formatToCharacterIterator", jni::ref<java::text::AttributedCharacterIterator>>(object); }
	jni::ref<java::lang::StringBuffer> format(jni::ref<java::util::Date> date, jni::ref<java::lang::StringBuffer> buffer, jni::ref<java::text::FieldPosition> fieldPos) { return call_method<"format", jni::ref<java::lang::StringBuffer>>(date, buffer, fieldPos); }
	jni::ref<java::util::Date> get2DigitYearStart() { return call_method<"get2DigitYearStart", jni::ref<java::util::Date>>(); }
	jni::ref<java::text::DateFormatSymbols> getDateFormatSymbols() { return call_method<"getDateFormatSymbols", jni::ref<java::text::DateFormatSymbols>>(); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jni::ref<java::util::Date> parse(jni::ref<java::lang::String> string, jni::ref<java::text::ParsePosition> position) { return call_method<"parse", jni::ref<java::util::Date>>(string, position); }
	void set2DigitYearStart(jni::ref<java::util::Date> date) { return call_method<"set2DigitYearStart", void>(date); }
	void setDateFormatSymbols(jni::ref<java::text::DateFormatSymbols> value) { return call_method<"setDateFormatSymbols", void>(value); }
	jni::ref<java::lang::String> toLocalizedPattern() { return call_method<"toLocalizedPattern", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> toPattern() { return call_method<"toPattern", jni::ref<java::lang::String>>(); }

protected:

	SimpleDateFormat(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_TEXT_SIMPLEDATEFORMAT
