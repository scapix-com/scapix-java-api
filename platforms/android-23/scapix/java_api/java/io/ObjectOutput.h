// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/io/DataOutput.h>
#include <scapix/java_api/java/lang/AutoCloseable.h>

#ifndef SCAPIX_JAVA_API_JAVA_IO_OBJECTOUTPUT_FWD
#define SCAPIX_JAVA_API_JAVA_IO_OBJECTOUTPUT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::io { class ObjectOutput; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::io::ObjectOutput>
{
	static constexpr fixed_string class_name = "java/io/ObjectOutput";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::io::DataOutput, scapix::java_api::java::lang::AutoCloseable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_IO_OBJECTOUTPUT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_IO_OBJECTOUTPUT)
#define SCAPIX_JAVA_API_JAVA_IO_OBJECTOUTPUT

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::io::ObjectOutput : public jni::object_base<"java/io/ObjectOutput",
	java::lang::Object,
	java::io::DataOutput,
	java::lang::AutoCloseable>
{
public:

	void close() { return call_method<"close", void>(); }
	void flush() { return call_method<"flush", void>(); }
	void write(jni::ref<jni::array<jbyte>> p1) { return call_method<"write", void>(p1); }
	void write(jni::ref<jni::array<jbyte>> p1, jint p2, jint p3) { return call_method<"write", void>(p1, p2, p3); }
	void write(jint p1) { return call_method<"write", void>(p1); }
	void writeObject(jni::ref<java::lang::Object> p1) { return call_method<"writeObject", void>(p1); }

protected:

	ObjectOutput(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_IO_OBJECTOUTPUT
