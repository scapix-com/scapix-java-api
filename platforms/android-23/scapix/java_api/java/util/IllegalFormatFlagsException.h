// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/util/IllegalFormatException.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_API_JAVA_UTIL_ILLEGALFORMATFLAGSEXCEPTION_FWD
#define SCAPIX_JAVA_API_JAVA_UTIL_ILLEGALFORMATFLAGSEXCEPTION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::util { class IllegalFormatFlagsException; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::util::IllegalFormatFlagsException>
{
	static constexpr fixed_string class_name = "java/util/IllegalFormatFlagsException";
	using base_classes = std::tuple<scapix::java_api::java::util::IllegalFormatException, scapix::java_api::java::io::Serializable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_ILLEGALFORMATFLAGSEXCEPTION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_UTIL_ILLEGALFORMATFLAGSEXCEPTION)
#define SCAPIX_JAVA_API_JAVA_UTIL_ILLEGALFORMATFLAGSEXCEPTION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::util::IllegalFormatFlagsException : public jni::object_base<"java/util/IllegalFormatFlagsException",
	java::util::IllegalFormatException,
	java::io::Serializable>
{
public:

	static jni::ref<java::util::IllegalFormatFlagsException> new_object(jni::ref<java::lang::String> flags) { return base_::new_object(flags); }
	jni::ref<java::lang::String> getFlags() { return call_method<"getFlags", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getMessage() { return call_method<"getMessage", jni::ref<java::lang::String>>(); }

protected:

	IllegalFormatFlagsException(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_ILLEGALFORMATFLAGSEXCEPTION
