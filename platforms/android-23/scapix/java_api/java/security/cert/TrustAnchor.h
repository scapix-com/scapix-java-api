// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_SECURITY_CERT_TRUSTANCHOR_FWD
#define SCAPIX_JAVA_API_JAVA_SECURITY_CERT_TRUSTANCHOR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::security::cert { class TrustAnchor; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::security::cert::TrustAnchor>
{
	static constexpr fixed_string class_name = "java/security/cert/TrustAnchor";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_SECURITY_CERT_TRUSTANCHOR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_SECURITY_CERT_TRUSTANCHOR)
#define SCAPIX_JAVA_API_JAVA_SECURITY_CERT_TRUSTANCHOR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/security/PublicKey.h>
#include <scapix/java_api/java/security/cert/X509Certificate.h>
#include <scapix/java_api/javax/security/auth/x500/X500Principal.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::security::cert::TrustAnchor : public jni::object_base<"java/security/cert/TrustAnchor",
	java::lang::Object>
{
public:

	static jni::ref<java::security::cert::TrustAnchor> new_object(jni::ref<java::security::cert::X509Certificate> trustedCert, jni::ref<jni::array<jbyte>> nameConstraints) { return base_::new_object(trustedCert, nameConstraints); }
	static jni::ref<java::security::cert::TrustAnchor> new_object(jni::ref<java::lang::String> caName, jni::ref<java::security::PublicKey> caPublicKey, jni::ref<jni::array<jbyte>> nameConstraints) { return base_::new_object(caName, caPublicKey, nameConstraints); }
	static jni::ref<java::security::cert::TrustAnchor> new_object(jni::ref<javax::security::auth::x500::X500Principal> caPrincipal, jni::ref<java::security::PublicKey> caPublicKey, jni::ref<jni::array<jbyte>> nameConstraints) { return base_::new_object(caPrincipal, caPublicKey, nameConstraints); }
	jni::ref<jni::array<jbyte>> getNameConstraints() { return call_method<"getNameConstraints", jni::ref<jni::array<jbyte>>>(); }
	jni::ref<java::security::cert::X509Certificate> getTrustedCert() { return call_method<"getTrustedCert", jni::ref<java::security::cert::X509Certificate>>(); }
	jni::ref<javax::security::auth::x500::X500Principal> getCA() { return call_method<"getCA", jni::ref<javax::security::auth::x500::X500Principal>>(); }
	jni::ref<java::lang::String> getCAName() { return call_method<"getCAName", jni::ref<java::lang::String>>(); }
	jni::ref<java::security::PublicKey> getCAPublicKey() { return call_method<"getCAPublicKey", jni::ref<java::security::PublicKey>>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	TrustAnchor(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_SECURITY_CERT_TRUSTANCHOR
