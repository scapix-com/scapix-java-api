// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_OPENGL_ETC1UTIL_ETC1TEXTURE_FWD
#define SCAPIX_JAVA_API_ANDROID_OPENGL_ETC1UTIL_ETC1TEXTURE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::opengl { class ETC1Util_ETC1Texture; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::opengl::ETC1Util_ETC1Texture>
{
	static constexpr fixed_string class_name = "android/opengl/ETC1Util$ETC1Texture";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_OPENGL_ETC1UTIL_ETC1TEXTURE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_OPENGL_ETC1UTIL_ETC1TEXTURE)
#define SCAPIX_JAVA_API_ANDROID_OPENGL_ETC1UTIL_ETC1TEXTURE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/nio/ByteBuffer.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::opengl::ETC1Util_ETC1Texture : public jni::object_base<"android/opengl/ETC1Util$ETC1Texture",
	java::lang::Object>
{
public:

	static jni::ref<android::opengl::ETC1Util_ETC1Texture> new_object(jint width, jint height, jni::ref<java::nio::ByteBuffer> data) { return base_::new_object(width, height, data); }
	jint getWidth() { return call_method<"getWidth", jint>(); }
	jint getHeight() { return call_method<"getHeight", jint>(); }
	jni::ref<java::nio::ByteBuffer> getData() { return call_method<"getData", jni::ref<java::nio::ByteBuffer>>(); }

protected:

	ETC1Util_ETC1Texture(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_OPENGL_ETC1UTIL_ETC1TEXTURE
