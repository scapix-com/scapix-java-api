// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_TRANSITION_TRANSITIONMANAGER_FWD
#define SCAPIX_JAVA_API_ANDROID_TRANSITION_TRANSITIONMANAGER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::transition { class TransitionManager; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::transition::TransitionManager>
{
	static constexpr fixed_string class_name = "android/transition/TransitionManager";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TRANSITION_TRANSITIONMANAGER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_TRANSITION_TRANSITIONMANAGER)
#define SCAPIX_JAVA_API_ANDROID_TRANSITION_TRANSITIONMANAGER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/transition/Scene.h>
#include <scapix/java_api/android/transition/Transition.h>
#include <scapix/java_api/android/view/ViewGroup.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::transition::TransitionManager : public jni::object_base<"android/transition/TransitionManager",
	java::lang::Object>
{
public:

	static jni::ref<android::transition::TransitionManager> new_object() { return base_::new_object(); }
	void setTransition(jni::ref<android::transition::Scene> scene, jni::ref<android::transition::Transition> transition) { return call_method<"setTransition", void>(scene, transition); }
	void setTransition(jni::ref<android::transition::Scene> fromScene, jni::ref<android::transition::Scene> toScene, jni::ref<android::transition::Transition> transition) { return call_method<"setTransition", void>(fromScene, toScene, transition); }
	void transitionTo(jni::ref<android::transition::Scene> scene) { return call_method<"transitionTo", void>(scene); }
	static void go(jni::ref<android::transition::Scene> scene) { return call_static_method<"go", void>(scene); }
	static void go(jni::ref<android::transition::Scene> scene, jni::ref<android::transition::Transition> transition) { return call_static_method<"go", void>(scene, transition); }
	static void beginDelayedTransition(jni::ref<android::view::ViewGroup> sceneRoot) { return call_static_method<"beginDelayedTransition", void>(sceneRoot); }
	static void beginDelayedTransition(jni::ref<android::view::ViewGroup> sceneRoot, jni::ref<android::transition::Transition> transition) { return call_static_method<"beginDelayedTransition", void>(sceneRoot, transition); }
	static void endTransitions(jni::ref<android::view::ViewGroup> sceneRoot) { return call_static_method<"endTransitions", void>(sceneRoot); }

protected:

	TransitionManager(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TRANSITION_TRANSITIONMANAGER
