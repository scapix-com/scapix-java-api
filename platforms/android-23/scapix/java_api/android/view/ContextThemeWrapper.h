// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/content/ContextWrapper.h>

#ifndef SCAPIX_JAVA_API_ANDROID_VIEW_CONTEXTTHEMEWRAPPER_FWD
#define SCAPIX_JAVA_API_ANDROID_VIEW_CONTEXTTHEMEWRAPPER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::view { class ContextThemeWrapper; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::view::ContextThemeWrapper>
{
	static constexpr fixed_string class_name = "android/view/ContextThemeWrapper";
	using base_classes = std::tuple<scapix::java_api::android::content::ContextWrapper>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_CONTEXTTHEMEWRAPPER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_VIEW_CONTEXTTHEMEWRAPPER)
#define SCAPIX_JAVA_API_ANDROID_VIEW_CONTEXTTHEMEWRAPPER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/content/res/Configuration.h>
#include <scapix/java_api/android/content/res/Resources.h>
#include <scapix/java_api/android/content/res/Resources_Theme.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::view::ContextThemeWrapper : public jni::object_base<"android/view/ContextThemeWrapper",
	android::content::ContextWrapper>
{
public:

	static jni::ref<android::view::ContextThemeWrapper> new_object() { return base_::new_object(); }
	static jni::ref<android::view::ContextThemeWrapper> new_object(jni::ref<android::content::Context> base, jint themeResId) { return base_::new_object(base, themeResId); }
	static jni::ref<android::view::ContextThemeWrapper> new_object(jni::ref<android::content::Context> base, jni::ref<android::content::res::Resources_Theme> theme) { return base_::new_object(base, theme); }
	void applyOverrideConfiguration(jni::ref<android::content::res::Configuration> overrideConfiguration) { return call_method<"applyOverrideConfiguration", void>(overrideConfiguration); }
	jni::ref<android::content::res::Resources> getResources() { return call_method<"getResources", jni::ref<android::content::res::Resources>>(); }
	void setTheme(jint resid) { return call_method<"setTheme", void>(resid); }
	jni::ref<android::content::res::Resources_Theme> getTheme() { return call_method<"getTheme", jni::ref<android::content::res::Resources_Theme>>(); }
	jni::ref<java::lang::Object> getSystemService(jni::ref<java::lang::String> name) { return call_method<"getSystemService", jni::ref<java::lang::Object>>(name); }

protected:

	ContextThemeWrapper(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_CONTEXTTHEMEWRAPPER
