// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_BLUETOOTH_BLUETOOTHGATTSERVICE_FWD
#define SCAPIX_JAVA_API_ANDROID_BLUETOOTH_BLUETOOTHGATTSERVICE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::bluetooth { class BluetoothGattService; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::bluetooth::BluetoothGattService>
{
	static constexpr fixed_string class_name = "android/bluetooth/BluetoothGattService";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_BLUETOOTH_BLUETOOTHGATTSERVICE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_BLUETOOTH_BLUETOOTHGATTSERVICE)
#define SCAPIX_JAVA_API_ANDROID_BLUETOOTH_BLUETOOTHGATTSERVICE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/bluetooth/BluetoothGattCharacteristic.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/java/util/UUID.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::bluetooth::BluetoothGattService : public jni::object_base<"android/bluetooth/BluetoothGattService",
	java::lang::Object>
{
public:

	static jint SERVICE_TYPE_PRIMARY() { return get_static_field<"SERVICE_TYPE_PRIMARY", jint>(); }
	static jint SERVICE_TYPE_SECONDARY() { return get_static_field<"SERVICE_TYPE_SECONDARY", jint>(); }

	static jni::ref<android::bluetooth::BluetoothGattService> new_object(jni::ref<java::util::UUID> uuid, jint serviceType) { return base_::new_object(uuid, serviceType); }
	jboolean addService(jni::ref<android::bluetooth::BluetoothGattService> service) { return call_method<"addService", jboolean>(service); }
	jboolean addCharacteristic(jni::ref<android::bluetooth::BluetoothGattCharacteristic> characteristic) { return call_method<"addCharacteristic", jboolean>(characteristic); }
	jni::ref<java::util::UUID> getUuid() { return call_method<"getUuid", jni::ref<java::util::UUID>>(); }
	jint getInstanceId() { return call_method<"getInstanceId", jint>(); }
	jint getType() { return call_method<"getType", jint>(); }
	jni::ref<java::util::List> getIncludedServices() { return call_method<"getIncludedServices", jni::ref<java::util::List>>(); }
	jni::ref<java::util::List> getCharacteristics() { return call_method<"getCharacteristics", jni::ref<java::util::List>>(); }
	jni::ref<android::bluetooth::BluetoothGattCharacteristic> getCharacteristic(jni::ref<java::util::UUID> uuid) { return call_method<"getCharacteristic", jni::ref<android::bluetooth::BluetoothGattCharacteristic>>(uuid); }

protected:

	BluetoothGattService(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_BLUETOOTH_BLUETOOTHGATTSERVICE
