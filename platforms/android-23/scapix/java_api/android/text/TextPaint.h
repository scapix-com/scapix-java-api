// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/graphics/Paint.h>

#ifndef SCAPIX_JAVA_API_ANDROID_TEXT_TEXTPAINT_FWD
#define SCAPIX_JAVA_API_ANDROID_TEXT_TEXTPAINT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::text { class TextPaint; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::text::TextPaint>
{
	static constexpr fixed_string class_name = "android/text/TextPaint";
	using base_classes = std::tuple<scapix::java_api::android::graphics::Paint>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEXT_TEXTPAINT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_TEXT_TEXTPAINT)
#define SCAPIX_JAVA_API_ANDROID_TEXT_TEXTPAINT

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::text::TextPaint : public jni::object_base<"android/text/TextPaint",
	android::graphics::Paint>
{
public:

	jint baselineShift() { return get_field<"baselineShift", jint>(); }
	void baselineShift(jint v) { set_field<"baselineShift", jint>(v); }
	jint bgColor() { return get_field<"bgColor", jint>(); }
	void bgColor(jint v) { set_field<"bgColor", jint>(v); }
	jfloat density() { return get_field<"density", jfloat>(); }
	void density(jfloat v) { set_field<"density", jfloat>(v); }
	jni::ref<jni::array<jint>> drawableState() { return get_field<"drawableState", jni::ref<jni::array<jint>>>(); }
	void drawableState(jni::ref<jni::array<jint>> v) { set_field<"drawableState", jni::ref<jni::array<jint>>>(v); }
	jint linkColor() { return get_field<"linkColor", jint>(); }
	void linkColor(jint v) { set_field<"linkColor", jint>(v); }

	static jni::ref<android::text::TextPaint> new_object() { return base_::new_object(); }
	static jni::ref<android::text::TextPaint> new_object(jint flags) { return base_::new_object(flags); }
	static jni::ref<android::text::TextPaint> new_object(jni::ref<android::graphics::Paint> p) { return base_::new_object(p); }
	void set(jni::ref<android::text::TextPaint> tp) { return call_method<"set", void>(tp); }

protected:

	TextPaint(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEXT_TEXTPAINT
