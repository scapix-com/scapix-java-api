// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_TEXT_STATICLAYOUT_BUILDER_FWD
#define SCAPIX_JAVA_API_ANDROID_TEXT_STATICLAYOUT_BUILDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::text { class StaticLayout_Builder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::text::StaticLayout_Builder>
{
	static constexpr fixed_string class_name = "android/text/StaticLayout$Builder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEXT_STATICLAYOUT_BUILDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_TEXT_STATICLAYOUT_BUILDER)
#define SCAPIX_JAVA_API_ANDROID_TEXT_STATICLAYOUT_BUILDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/text/Layout_Alignment.h>
#include <scapix/java_api/android/text/StaticLayout.h>
#include <scapix/java_api/android/text/TextDirectionHeuristic.h>
#include <scapix/java_api/android/text/TextPaint.h>
#include <scapix/java_api/android/text/TextUtils_TruncateAt.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::text::StaticLayout_Builder : public jni::object_base<"android/text/StaticLayout$Builder",
	java::lang::Object>
{
public:

	static jni::ref<android::text::StaticLayout_Builder> obtain(jni::ref<java::lang::CharSequence> source, jint start, jint end, jni::ref<android::text::TextPaint> paint, jint width) { return call_static_method<"obtain", jni::ref<android::text::StaticLayout_Builder>>(source, start, end, paint, width); }
	jni::ref<android::text::StaticLayout_Builder> setText(jni::ref<java::lang::CharSequence> source) { return call_method<"setText", jni::ref<android::text::StaticLayout_Builder>>(source); }
	jni::ref<android::text::StaticLayout_Builder> setAlignment(jni::ref<android::text::Layout_Alignment> alignment) { return call_method<"setAlignment", jni::ref<android::text::StaticLayout_Builder>>(alignment); }
	jni::ref<android::text::StaticLayout_Builder> setTextDirection(jni::ref<android::text::TextDirectionHeuristic> textDir) { return call_method<"setTextDirection", jni::ref<android::text::StaticLayout_Builder>>(textDir); }
	jni::ref<android::text::StaticLayout_Builder> setLineSpacing(jfloat spacingAdd, jfloat spacingMult) { return call_method<"setLineSpacing", jni::ref<android::text::StaticLayout_Builder>>(spacingAdd, spacingMult); }
	jni::ref<android::text::StaticLayout_Builder> setIncludePad(jboolean includePad) { return call_method<"setIncludePad", jni::ref<android::text::StaticLayout_Builder>>(includePad); }
	jni::ref<android::text::StaticLayout_Builder> setEllipsizedWidth(jint ellipsizedWidth) { return call_method<"setEllipsizedWidth", jni::ref<android::text::StaticLayout_Builder>>(ellipsizedWidth); }
	jni::ref<android::text::StaticLayout_Builder> setEllipsize(jni::ref<android::text::TextUtils_TruncateAt> ellipsize) { return call_method<"setEllipsize", jni::ref<android::text::StaticLayout_Builder>>(ellipsize); }
	jni::ref<android::text::StaticLayout_Builder> setMaxLines(jint maxLines) { return call_method<"setMaxLines", jni::ref<android::text::StaticLayout_Builder>>(maxLines); }
	jni::ref<android::text::StaticLayout_Builder> setBreakStrategy(jint breakStrategy) { return call_method<"setBreakStrategy", jni::ref<android::text::StaticLayout_Builder>>(breakStrategy); }
	jni::ref<android::text::StaticLayout_Builder> setHyphenationFrequency(jint hyphenationFrequency) { return call_method<"setHyphenationFrequency", jni::ref<android::text::StaticLayout_Builder>>(hyphenationFrequency); }
	jni::ref<android::text::StaticLayout_Builder> setIndents(jni::ref<jni::array<jint>> leftIndents, jni::ref<jni::array<jint>> rightIndents) { return call_method<"setIndents", jni::ref<android::text::StaticLayout_Builder>>(leftIndents, rightIndents); }
	jni::ref<android::text::StaticLayout> build() { return call_method<"build", jni::ref<android::text::StaticLayout>>(); }

protected:

	StaticLayout_Builder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEXT_STATICLAYOUT_BUILDER
