// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_NET_WIFI_WIFIMANAGER_WIFILOCK_FWD
#define SCAPIX_JAVA_API_ANDROID_NET_WIFI_WIFIMANAGER_WIFILOCK_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::net::wifi { class WifiManager_WifiLock; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::net::wifi::WifiManager_WifiLock>
{
	static constexpr fixed_string class_name = "android/net/wifi/WifiManager$WifiLock";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_WIFI_WIFIMANAGER_WIFILOCK_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_NET_WIFI_WIFIMANAGER_WIFILOCK)
#define SCAPIX_JAVA_API_ANDROID_NET_WIFI_WIFIMANAGER_WIFILOCK

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/os/WorkSource.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::net::wifi::WifiManager_WifiLock : public jni::object_base<"android/net/wifi/WifiManager$WifiLock",
	java::lang::Object>
{
public:

	void acquire() { return call_method<"acquire", void>(); }
	void release() { return call_method<"release", void>(); }
	void setReferenceCounted(jboolean refCounted) { return call_method<"setReferenceCounted", void>(refCounted); }
	jboolean isHeld() { return call_method<"isHeld", jboolean>(); }
	void setWorkSource(jni::ref<android::os::WorkSource> ws) { return call_method<"setWorkSource", void>(ws); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	WifiManager_WifiLock(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_WIFI_WIFIMANAGER_WIFILOCK
