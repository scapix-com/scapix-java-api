// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/app/Instrumentation.h>
#include <scapix/java_api/android/test/TestSuiteProvider.h>

#ifndef SCAPIX_JAVA_API_ANDROID_TEST_INSTRUMENTATIONTESTRUNNER_FWD
#define SCAPIX_JAVA_API_ANDROID_TEST_INSTRUMENTATIONTESTRUNNER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::test { class InstrumentationTestRunner; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::test::InstrumentationTestRunner>
{
	static constexpr fixed_string class_name = "android/test/InstrumentationTestRunner";
	using base_classes = std::tuple<scapix::java_api::android::app::Instrumentation, scapix::java_api::android::test::TestSuiteProvider>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEST_INSTRUMENTATIONTESTRUNNER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_TEST_INSTRUMENTATIONTESTRUNNER)
#define SCAPIX_JAVA_API_ANDROID_TEST_INSTRUMENTATIONTESTRUNNER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/java/lang/ClassLoader.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/junit/framework/TestSuite.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::test::InstrumentationTestRunner : public jni::object_base<"android/test/InstrumentationTestRunner",
	android::app::Instrumentation,
	android::test::TestSuiteProvider>
{
public:

	static jni::ref<java::lang::String> REPORT_KEY_NAME_CLASS() { return get_static_field<"REPORT_KEY_NAME_CLASS", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> REPORT_KEY_NAME_TEST() { return get_static_field<"REPORT_KEY_NAME_TEST", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> REPORT_KEY_NUM_CURRENT() { return get_static_field<"REPORT_KEY_NUM_CURRENT", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> REPORT_KEY_NUM_TOTAL() { return get_static_field<"REPORT_KEY_NUM_TOTAL", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> REPORT_KEY_STACK() { return get_static_field<"REPORT_KEY_STACK", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> REPORT_VALUE_ID() { return get_static_field<"REPORT_VALUE_ID", jni::ref<java::lang::String>>(); }
	static jint REPORT_VALUE_RESULT_ERROR() { return get_static_field<"REPORT_VALUE_RESULT_ERROR", jint>(); }
	static jint REPORT_VALUE_RESULT_FAILURE() { return get_static_field<"REPORT_VALUE_RESULT_FAILURE", jint>(); }
	static jint REPORT_VALUE_RESULT_OK() { return get_static_field<"REPORT_VALUE_RESULT_OK", jint>(); }
	static jint REPORT_VALUE_RESULT_START() { return get_static_field<"REPORT_VALUE_RESULT_START", jint>(); }

	static jni::ref<android::test::InstrumentationTestRunner> new_object() { return base_::new_object(); }
	void onCreate(jni::ref<android::os::Bundle> arguments) { return call_method<"onCreate", void>(arguments); }
	jni::ref<android::os::Bundle> getArguments() { return call_method<"getArguments", jni::ref<android::os::Bundle>>(); }
	void onStart() { return call_method<"onStart", void>(); }
	jni::ref<junit::framework::TestSuite> getTestSuite() { return call_method<"getTestSuite", jni::ref<junit::framework::TestSuite>>(); }
	jni::ref<junit::framework::TestSuite> getAllTests() { return call_method<"getAllTests", jni::ref<junit::framework::TestSuite>>(); }
	jni::ref<java::lang::ClassLoader> getLoader() { return call_method<"getLoader", jni::ref<java::lang::ClassLoader>>(); }

protected:

	InstrumentationTestRunner(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEST_INSTRUMENTATIONTESTRUNNER
