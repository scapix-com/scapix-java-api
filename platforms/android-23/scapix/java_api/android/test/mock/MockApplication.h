// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/app/Application.h>

#ifndef SCAPIX_JAVA_API_ANDROID_TEST_MOCK_MOCKAPPLICATION_FWD
#define SCAPIX_JAVA_API_ANDROID_TEST_MOCK_MOCKAPPLICATION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::test::mock { class MockApplication; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::test::mock::MockApplication>
{
	static constexpr fixed_string class_name = "android/test/mock/MockApplication";
	using base_classes = std::tuple<scapix::java_api::android::app::Application>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEST_MOCK_MOCKAPPLICATION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_TEST_MOCK_MOCKAPPLICATION)
#define SCAPIX_JAVA_API_ANDROID_TEST_MOCK_MOCKAPPLICATION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/res/Configuration.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::test::mock::MockApplication : public jni::object_base<"android/test/mock/MockApplication",
	android::app::Application>
{
public:

	static jni::ref<android::test::mock::MockApplication> new_object() { return base_::new_object(); }
	void onCreate() { return call_method<"onCreate", void>(); }
	void onTerminate() { return call_method<"onTerminate", void>(); }
	void onConfigurationChanged(jni::ref<android::content::res::Configuration> newConfig) { return call_method<"onConfigurationChanged", void>(newConfig); }

protected:

	MockApplication(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEST_MOCK_MOCKAPPLICATION
