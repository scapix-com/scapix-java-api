// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/view/ViewGroup.h>

#ifndef SCAPIX_JAVA_API_ANDROID_WIDGET_ADAPTERVIEW_FWD
#define SCAPIX_JAVA_API_ANDROID_WIDGET_ADAPTERVIEW_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::widget { class AdapterView; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::widget::AdapterView>
{
	static constexpr fixed_string class_name = "android/widget/AdapterView";
	using base_classes = std::tuple<scapix::java_api::android::view::ViewGroup>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_WIDGET_ADAPTERVIEW_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_WIDGET_ADAPTERVIEW)
#define SCAPIX_JAVA_API_ANDROID_WIDGET_ADAPTERVIEW

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/android/view/View_OnClickListener.h>
#include <scapix/java_api/android/view/ViewGroup_LayoutParams.h>
#include <scapix/java_api/android/widget/Adapter.h>
#include <scapix/java_api/android/widget/AdapterView_OnItemClickListener.h>
#include <scapix/java_api/android/widget/AdapterView_OnItemLongClickListener.h>
#include <scapix/java_api/android/widget/AdapterView_OnItemSelectedListener.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/widget/AdapterView_AdapterContextMenuInfo.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::widget::AdapterView : public jni::object_base<"android/widget/AdapterView",
	android::view::ViewGroup>
{
public:

	using AdapterContextMenuInfo = AdapterView_AdapterContextMenuInfo;
	using OnItemSelectedListener = AdapterView_OnItemSelectedListener;
	using OnItemLongClickListener = AdapterView_OnItemLongClickListener;
	using OnItemClickListener = AdapterView_OnItemClickListener;

	static jint INVALID_POSITION() { return get_static_field<"INVALID_POSITION", jint>(); }
	static jlong INVALID_ROW_ID() { return get_static_field<"INVALID_ROW_ID", jlong>(); }
	static jint ITEM_VIEW_TYPE_HEADER_OR_FOOTER() { return get_static_field<"ITEM_VIEW_TYPE_HEADER_OR_FOOTER", jint>(); }
	static jint ITEM_VIEW_TYPE_IGNORE() { return get_static_field<"ITEM_VIEW_TYPE_IGNORE", jint>(); }

	static jni::ref<android::widget::AdapterView> new_object(jni::ref<android::content::Context> context) { return base_::new_object(context); }
	static jni::ref<android::widget::AdapterView> new_object(jni::ref<android::content::Context> context, jni::ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
	static jni::ref<android::widget::AdapterView> new_object(jni::ref<android::content::Context> context, jni::ref<android::util::AttributeSet> attrs, jint defStyleAttr) { return base_::new_object(context, attrs, defStyleAttr); }
	static jni::ref<android::widget::AdapterView> new_object(jni::ref<android::content::Context> context, jni::ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes) { return base_::new_object(context, attrs, defStyleAttr, defStyleRes); }
	void setOnItemClickListener(jni::ref<android::widget::AdapterView_OnItemClickListener> listener) { return call_method<"setOnItemClickListener", void>(listener); }
	jni::ref<android::widget::AdapterView_OnItemClickListener> getOnItemClickListener() { return call_method<"getOnItemClickListener", jni::ref<android::widget::AdapterView_OnItemClickListener>>(); }
	jboolean performItemClick(jni::ref<android::view::View> view, jint position, jlong id) { return call_method<"performItemClick", jboolean>(view, position, id); }
	void setOnItemLongClickListener(jni::ref<android::widget::AdapterView_OnItemLongClickListener> listener) { return call_method<"setOnItemLongClickListener", void>(listener); }
	jni::ref<android::widget::AdapterView_OnItemLongClickListener> getOnItemLongClickListener() { return call_method<"getOnItemLongClickListener", jni::ref<android::widget::AdapterView_OnItemLongClickListener>>(); }
	void setOnItemSelectedListener(jni::ref<android::widget::AdapterView_OnItemSelectedListener> listener) { return call_method<"setOnItemSelectedListener", void>(listener); }
	jni::ref<android::widget::AdapterView_OnItemSelectedListener> getOnItemSelectedListener() { return call_method<"getOnItemSelectedListener", jni::ref<android::widget::AdapterView_OnItemSelectedListener>>(); }
	jni::ref<android::widget::Adapter> getAdapter() { return call_method<"getAdapter", jni::ref<android::widget::Adapter>>(); }
	void setAdapter(jni::ref<android::widget::Adapter> p1) { return call_method<"setAdapter", void>(p1); }
	void addView(jni::ref<android::view::View> child) { return call_method<"addView", void>(child); }
	void addView(jni::ref<android::view::View> child, jint index) { return call_method<"addView", void>(child, index); }
	void addView(jni::ref<android::view::View> child, jni::ref<android::view::ViewGroup_LayoutParams> params) { return call_method<"addView", void>(child, params); }
	void addView(jni::ref<android::view::View> child, jint index, jni::ref<android::view::ViewGroup_LayoutParams> params) { return call_method<"addView", void>(child, index, params); }
	void removeView(jni::ref<android::view::View> child) { return call_method<"removeView", void>(child); }
	void removeViewAt(jint index) { return call_method<"removeViewAt", void>(index); }
	void removeAllViews() { return call_method<"removeAllViews", void>(); }
	jint getSelectedItemPosition() { return call_method<"getSelectedItemPosition", jint>(); }
	jlong getSelectedItemId() { return call_method<"getSelectedItemId", jlong>(); }
	jni::ref<android::view::View> getSelectedView() { return call_method<"getSelectedView", jni::ref<android::view::View>>(); }
	jni::ref<java::lang::Object> getSelectedItem() { return call_method<"getSelectedItem", jni::ref<java::lang::Object>>(); }
	jint getCount() { return call_method<"getCount", jint>(); }
	jint getPositionForView(jni::ref<android::view::View> view) { return call_method<"getPositionForView", jint>(view); }
	jint getFirstVisiblePosition() { return call_method<"getFirstVisiblePosition", jint>(); }
	jint getLastVisiblePosition() { return call_method<"getLastVisiblePosition", jint>(); }
	void setSelection(jint p1) { return call_method<"setSelection", void>(p1); }
	void setEmptyView(jni::ref<android::view::View> emptyView) { return call_method<"setEmptyView", void>(emptyView); }
	jni::ref<android::view::View> getEmptyView() { return call_method<"getEmptyView", jni::ref<android::view::View>>(); }
	void setFocusable(jboolean focusable) { return call_method<"setFocusable", void>(focusable); }
	void setFocusableInTouchMode(jboolean focusable) { return call_method<"setFocusableInTouchMode", void>(focusable); }
	jni::ref<java::lang::Object> getItemAtPosition(jint position) { return call_method<"getItemAtPosition", jni::ref<java::lang::Object>>(position); }
	jlong getItemIdAtPosition(jint position) { return call_method<"getItemIdAtPosition", jlong>(position); }
	void setOnClickListener(jni::ref<android::view::View_OnClickListener> l) { return call_method<"setOnClickListener", void>(l); }
	jni::ref<java::lang::CharSequence> getAccessibilityClassName() { return call_method<"getAccessibilityClassName", jni::ref<java::lang::CharSequence>>(); }

protected:

	AdapterView(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_WIDGET_ADAPTERVIEW
