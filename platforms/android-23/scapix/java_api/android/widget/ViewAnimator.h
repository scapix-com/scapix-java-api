// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/widget/FrameLayout.h>

#ifndef SCAPIX_JAVA_API_ANDROID_WIDGET_VIEWANIMATOR_FWD
#define SCAPIX_JAVA_API_ANDROID_WIDGET_VIEWANIMATOR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::widget { class ViewAnimator; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::widget::ViewAnimator>
{
	static constexpr fixed_string class_name = "android/widget/ViewAnimator";
	using base_classes = std::tuple<scapix::java_api::android::widget::FrameLayout>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_WIDGET_VIEWANIMATOR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_WIDGET_VIEWANIMATOR)
#define SCAPIX_JAVA_API_ANDROID_WIDGET_VIEWANIMATOR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/android/view/ViewGroup_LayoutParams.h>
#include <scapix/java_api/android/view/animation/Animation.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::widget::ViewAnimator : public jni::object_base<"android/widget/ViewAnimator",
	android::widget::FrameLayout>
{
public:

	static jni::ref<android::widget::ViewAnimator> new_object(jni::ref<android::content::Context> context) { return base_::new_object(context); }
	static jni::ref<android::widget::ViewAnimator> new_object(jni::ref<android::content::Context> context, jni::ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
	void setDisplayedChild(jint whichChild) { return call_method<"setDisplayedChild", void>(whichChild); }
	jint getDisplayedChild() { return call_method<"getDisplayedChild", jint>(); }
	void showNext() { return call_method<"showNext", void>(); }
	void showPrevious() { return call_method<"showPrevious", void>(); }
	void addView(jni::ref<android::view::View> child, jint index, jni::ref<android::view::ViewGroup_LayoutParams> params) { return call_method<"addView", void>(child, index, params); }
	void removeAllViews() { return call_method<"removeAllViews", void>(); }
	void removeView(jni::ref<android::view::View> view) { return call_method<"removeView", void>(view); }
	void removeViewAt(jint index) { return call_method<"removeViewAt", void>(index); }
	void removeViewInLayout(jni::ref<android::view::View> view) { return call_method<"removeViewInLayout", void>(view); }
	void removeViews(jint start, jint count) { return call_method<"removeViews", void>(start, count); }
	void removeViewsInLayout(jint start, jint count) { return call_method<"removeViewsInLayout", void>(start, count); }
	jni::ref<android::view::View> getCurrentView() { return call_method<"getCurrentView", jni::ref<android::view::View>>(); }
	jni::ref<android::view::animation::Animation> getInAnimation() { return call_method<"getInAnimation", jni::ref<android::view::animation::Animation>>(); }
	void setInAnimation(jni::ref<android::view::animation::Animation> inAnimation) { return call_method<"setInAnimation", void>(inAnimation); }
	jni::ref<android::view::animation::Animation> getOutAnimation() { return call_method<"getOutAnimation", jni::ref<android::view::animation::Animation>>(); }
	void setOutAnimation(jni::ref<android::view::animation::Animation> outAnimation) { return call_method<"setOutAnimation", void>(outAnimation); }
	void setInAnimation(jni::ref<android::content::Context> context, jint resourceID) { return call_method<"setInAnimation", void>(context, resourceID); }
	void setOutAnimation(jni::ref<android::content::Context> context, jint resourceID) { return call_method<"setOutAnimation", void>(context, resourceID); }
	jboolean getAnimateFirstView() { return call_method<"getAnimateFirstView", jboolean>(); }
	void setAnimateFirstView(jboolean animate) { return call_method<"setAnimateFirstView", void>(animate); }
	jint getBaseline() { return call_method<"getBaseline", jint>(); }
	jni::ref<java::lang::CharSequence> getAccessibilityClassName() { return call_method<"getAccessibilityClassName", jni::ref<java::lang::CharSequence>>(); }

protected:

	ViewAnimator(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_WIDGET_VIEWANIMATOR
