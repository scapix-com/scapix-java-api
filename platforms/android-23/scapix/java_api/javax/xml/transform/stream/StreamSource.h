// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/javax/xml/transform/Source.h>

#ifndef SCAPIX_JAVA_API_JAVAX_XML_TRANSFORM_STREAM_STREAMSOURCE_FWD
#define SCAPIX_JAVA_API_JAVAX_XML_TRANSFORM_STREAM_STREAMSOURCE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::xml::transform::stream { class StreamSource; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::xml::transform::stream::StreamSource>
{
	static constexpr fixed_string class_name = "javax/xml/transform/stream/StreamSource";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::javax::xml::transform::Source>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_XML_TRANSFORM_STREAM_STREAMSOURCE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_XML_TRANSFORM_STREAM_STREAMSOURCE)
#define SCAPIX_JAVA_API_JAVAX_XML_TRANSFORM_STREAM_STREAMSOURCE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/File.h>
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/io/Reader.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::xml::transform::stream::StreamSource : public jni::object_base<"javax/xml/transform/stream/StreamSource",
	java::lang::Object,
	javax::xml::transform::Source>
{
public:

	static jni::ref<java::lang::String> FEATURE() { return get_static_field<"FEATURE", jni::ref<java::lang::String>>(); }

	static jni::ref<javax::xml::transform::stream::StreamSource> new_object() { return base_::new_object(); }
	static jni::ref<javax::xml::transform::stream::StreamSource> new_object(jni::ref<java::io::InputStream> inputStream) { return base_::new_object(inputStream); }
	static jni::ref<javax::xml::transform::stream::StreamSource> new_object(jni::ref<java::io::InputStream> inputStream, jni::ref<java::lang::String> systemId) { return base_::new_object(inputStream, systemId); }
	static jni::ref<javax::xml::transform::stream::StreamSource> new_object(jni::ref<java::io::Reader> reader) { return base_::new_object(reader); }
	static jni::ref<javax::xml::transform::stream::StreamSource> new_object(jni::ref<java::io::Reader> reader, jni::ref<java::lang::String> systemId) { return base_::new_object(reader, systemId); }
	static jni::ref<javax::xml::transform::stream::StreamSource> new_object(jni::ref<java::lang::String> systemId) { return base_::new_object(systemId); }
	static jni::ref<javax::xml::transform::stream::StreamSource> new_object(jni::ref<java::io::File> f) { return base_::new_object(f); }
	void setInputStream(jni::ref<java::io::InputStream> inputStream) { return call_method<"setInputStream", void>(inputStream); }
	jni::ref<java::io::InputStream> getInputStream() { return call_method<"getInputStream", jni::ref<java::io::InputStream>>(); }
	void setReader(jni::ref<java::io::Reader> reader) { return call_method<"setReader", void>(reader); }
	jni::ref<java::io::Reader> getReader() { return call_method<"getReader", jni::ref<java::io::Reader>>(); }
	void setPublicId(jni::ref<java::lang::String> publicId) { return call_method<"setPublicId", void>(publicId); }
	jni::ref<java::lang::String> getPublicId() { return call_method<"getPublicId", jni::ref<java::lang::String>>(); }
	void setSystemId(jni::ref<java::lang::String> systemId) { return call_method<"setSystemId", void>(systemId); }
	jni::ref<java::lang::String> getSystemId() { return call_method<"getSystemId", jni::ref<java::lang::String>>(); }
	void setSystemId(jni::ref<java::io::File> f) { return call_method<"setSystemId", void>(f); }

protected:

	StreamSource(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_XML_TRANSFORM_STREAM_STREAMSOURCE
