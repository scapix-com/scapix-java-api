// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_API_JAVA_TIME_ZONE_ZONEOFFSETTRANSITIONRULE_FWD
#define SCAPIX_JAVA_API_JAVA_TIME_ZONE_ZONEOFFSETTRANSITIONRULE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::time::zone { class ZoneOffsetTransitionRule; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::time::zone::ZoneOffsetTransitionRule>
{
	static constexpr fixed_string class_name = "java/time/zone/ZoneOffsetTransitionRule";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::io::Serializable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_TIME_ZONE_ZONEOFFSETTRANSITIONRULE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_TIME_ZONE_ZONEOFFSETTRANSITIONRULE)
#define SCAPIX_JAVA_API_JAVA_TIME_ZONE_ZONEOFFSETTRANSITIONRULE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/time/DayOfWeek.h>
#include <scapix/java_api/java/time/LocalTime.h>
#include <scapix/java_api/java/time/Month.h>
#include <scapix/java_api/java/time/ZoneOffset.h>
#include <scapix/java_api/java/time/zone/ZoneOffsetTransition.h>
#include <scapix/java_api/java/time/zone/ZoneOffsetTransitionRule_TimeDefinition.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::time::zone::ZoneOffsetTransitionRule : public jni::object_base<"java/time/zone/ZoneOffsetTransitionRule",
	java::lang::Object,
	java::io::Serializable>
{
public:

	using TimeDefinition = ZoneOffsetTransitionRule_TimeDefinition;

	static jni::ref<java::time::zone::ZoneOffsetTransitionRule> of(jni::ref<java::time::Month> month, jint dayOfMonthIndicator, jni::ref<java::time::DayOfWeek> dayOfWeek, jni::ref<java::time::LocalTime> time, jboolean timeEndOfDay, jni::ref<java::time::zone::ZoneOffsetTransitionRule_TimeDefinition> timeDefnition, jni::ref<java::time::ZoneOffset> standardOffset, jni::ref<java::time::ZoneOffset> offsetBefore, jni::ref<java::time::ZoneOffset> offsetAfter) { return call_static_method<"of", jni::ref<java::time::zone::ZoneOffsetTransitionRule>>(month, dayOfMonthIndicator, dayOfWeek, time, timeEndOfDay, timeDefnition, standardOffset, offsetBefore, offsetAfter); }
	jni::ref<java::time::Month> getMonth() { return call_method<"getMonth", jni::ref<java::time::Month>>(); }
	jint getDayOfMonthIndicator() { return call_method<"getDayOfMonthIndicator", jint>(); }
	jni::ref<java::time::DayOfWeek> getDayOfWeek() { return call_method<"getDayOfWeek", jni::ref<java::time::DayOfWeek>>(); }
	jni::ref<java::time::LocalTime> getLocalTime() { return call_method<"getLocalTime", jni::ref<java::time::LocalTime>>(); }
	jboolean isMidnightEndOfDay() { return call_method<"isMidnightEndOfDay", jboolean>(); }
	jni::ref<java::time::zone::ZoneOffsetTransitionRule_TimeDefinition> getTimeDefinition() { return call_method<"getTimeDefinition", jni::ref<java::time::zone::ZoneOffsetTransitionRule_TimeDefinition>>(); }
	jni::ref<java::time::ZoneOffset> getStandardOffset() { return call_method<"getStandardOffset", jni::ref<java::time::ZoneOffset>>(); }
	jni::ref<java::time::ZoneOffset> getOffsetBefore() { return call_method<"getOffsetBefore", jni::ref<java::time::ZoneOffset>>(); }
	jni::ref<java::time::ZoneOffset> getOffsetAfter() { return call_method<"getOffsetAfter", jni::ref<java::time::ZoneOffset>>(); }
	jni::ref<java::time::zone::ZoneOffsetTransition> createTransition(jint year) { return call_method<"createTransition", jni::ref<java::time::zone::ZoneOffsetTransition>>(year); }
	jboolean equals(jni::ref<java::lang::Object> otherRule) { return call_method<"equals", jboolean>(otherRule); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	ZoneOffsetTransitionRule(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_TIME_ZONE_ZONEOFFSETTRANSITIONRULE
