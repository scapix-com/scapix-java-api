// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Enum.h>

#ifndef SCAPIX_JAVA_API_JAVA_TIME_ZONE_ZONEOFFSETTRANSITIONRULE_TIMEDEFINITION_FWD
#define SCAPIX_JAVA_API_JAVA_TIME_ZONE_ZONEOFFSETTRANSITIONRULE_TIMEDEFINITION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::time::zone { class ZoneOffsetTransitionRule_TimeDefinition; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::time::zone::ZoneOffsetTransitionRule_TimeDefinition>
{
	static constexpr fixed_string class_name = "java/time/zone/ZoneOffsetTransitionRule$TimeDefinition";
	using base_classes = std::tuple<scapix::java_api::java::lang::Enum>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_TIME_ZONE_ZONEOFFSETTRANSITIONRULE_TIMEDEFINITION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_TIME_ZONE_ZONEOFFSETTRANSITIONRULE_TIMEDEFINITION)
#define SCAPIX_JAVA_API_JAVA_TIME_ZONE_ZONEOFFSETTRANSITIONRULE_TIMEDEFINITION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/time/LocalDateTime.h>
#include <scapix/java_api/java/time/ZoneOffset.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::time::zone::ZoneOffsetTransitionRule_TimeDefinition : public jni::object_base<"java/time/zone/ZoneOffsetTransitionRule$TimeDefinition",
	java::lang::Enum>
{
public:

	static jni::ref<java::time::zone::ZoneOffsetTransitionRule_TimeDefinition> STANDARD() { return get_static_field<"STANDARD", jni::ref<java::time::zone::ZoneOffsetTransitionRule_TimeDefinition>>(); }
	static jni::ref<java::time::zone::ZoneOffsetTransitionRule_TimeDefinition> UTC() { return get_static_field<"UTC", jni::ref<java::time::zone::ZoneOffsetTransitionRule_TimeDefinition>>(); }
	static jni::ref<java::time::zone::ZoneOffsetTransitionRule_TimeDefinition> WALL() { return get_static_field<"WALL", jni::ref<java::time::zone::ZoneOffsetTransitionRule_TimeDefinition>>(); }

	static jni::ref<jni::array<java::time::zone::ZoneOffsetTransitionRule_TimeDefinition>> values() { return call_static_method<"values", jni::ref<jni::array<java::time::zone::ZoneOffsetTransitionRule_TimeDefinition>>>(); }
	static jni::ref<java::time::zone::ZoneOffsetTransitionRule_TimeDefinition> valueOf(jni::ref<java::lang::String> name) { return call_static_method<"valueOf", jni::ref<java::time::zone::ZoneOffsetTransitionRule_TimeDefinition>>(name); }
	jni::ref<java::time::LocalDateTime> createDateTime(jni::ref<java::time::LocalDateTime> dateTime, jni::ref<java::time::ZoneOffset> standardOffset, jni::ref<java::time::ZoneOffset> wallOffset) { return call_method<"createDateTime", jni::ref<java::time::LocalDateTime>>(dateTime, standardOffset, wallOffset); }

protected:

	ZoneOffsetTransitionRule_TimeDefinition(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_TIME_ZONE_ZONEOFFSETTRANSITIONRULE_TIMEDEFINITION
