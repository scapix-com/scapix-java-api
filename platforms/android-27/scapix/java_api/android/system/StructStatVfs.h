// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_SYSTEM_STRUCTSTATVFS_FWD
#define SCAPIX_JAVA_API_ANDROID_SYSTEM_STRUCTSTATVFS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::system { class StructStatVfs; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::system::StructStatVfs>
{
	static constexpr fixed_string class_name = "android/system/StructStatVfs";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_SYSTEM_STRUCTSTATVFS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_SYSTEM_STRUCTSTATVFS)
#define SCAPIX_JAVA_API_ANDROID_SYSTEM_STRUCTSTATVFS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::system::StructStatVfs : public jni::object_base<"android/system/StructStatVfs",
	java::lang::Object>
{
public:

	jlong f_bavail() { return get_field<"f_bavail", jlong>(); }
	jlong f_bfree() { return get_field<"f_bfree", jlong>(); }
	jlong f_blocks() { return get_field<"f_blocks", jlong>(); }
	jlong f_bsize() { return get_field<"f_bsize", jlong>(); }
	jlong f_favail() { return get_field<"f_favail", jlong>(); }
	jlong f_ffree() { return get_field<"f_ffree", jlong>(); }
	jlong f_files() { return get_field<"f_files", jlong>(); }
	jlong f_flag() { return get_field<"f_flag", jlong>(); }
	jlong f_frsize() { return get_field<"f_frsize", jlong>(); }
	jlong f_fsid() { return get_field<"f_fsid", jlong>(); }
	jlong f_namemax() { return get_field<"f_namemax", jlong>(); }

	static jni::ref<android::system::StructStatVfs> new_object(jlong f_bsize, jlong p2, jlong f_frsize, jlong p4, jlong f_blocks, jlong p6, jlong f_bfree, jlong p8, jlong f_bavail, jlong p10, jlong f_files) { return base_::new_object(f_bsize, p2, f_frsize, p4, f_blocks, p6, f_bfree, p8, f_bavail, p10, f_files); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	StructStatVfs(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_SYSTEM_STRUCTSTATVFS
