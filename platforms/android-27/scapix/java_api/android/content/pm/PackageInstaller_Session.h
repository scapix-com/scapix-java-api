// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/io/Closeable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_CONTENT_PM_PACKAGEINSTALLER_SESSION_FWD
#define SCAPIX_JAVA_API_ANDROID_CONTENT_PM_PACKAGEINSTALLER_SESSION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::content::pm { class PackageInstaller_Session; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::content::pm::PackageInstaller_Session>
{
	static constexpr fixed_string class_name = "android/content/pm/PackageInstaller$Session";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::io::Closeable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_CONTENT_PM_PACKAGEINSTALLER_SESSION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_CONTENT_PM_PACKAGEINSTALLER_SESSION)
#define SCAPIX_JAVA_API_ANDROID_CONTENT_PM_PACKAGEINSTALLER_SESSION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/IntentSender.h>
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/io/OutputStream.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::content::pm::PackageInstaller_Session : public jni::object_base<"android/content/pm/PackageInstaller$Session",
	java::lang::Object,
	java::io::Closeable>
{
public:

	void setStagingProgress(jfloat progress) { return call_method<"setStagingProgress", void>(progress); }
	jni::ref<java::io::OutputStream> openWrite(jni::ref<java::lang::String> name, jlong offsetBytes, jlong p3) { return call_method<"openWrite", jni::ref<java::io::OutputStream>>(name, offsetBytes, p3); }
	void fsync(jni::ref<java::io::OutputStream> out) { return call_method<"fsync", void>(out); }
	jni::ref<jni::array<java::lang::String>> getNames() { return call_method<"getNames", jni::ref<jni::array<java::lang::String>>>(); }
	jni::ref<java::io::InputStream> openRead(jni::ref<java::lang::String> name) { return call_method<"openRead", jni::ref<java::io::InputStream>>(name); }
	void removeSplit(jni::ref<java::lang::String> splitName) { return call_method<"removeSplit", void>(splitName); }
	void commit(jni::ref<android::content::IntentSender> statusReceiver) { return call_method<"commit", void>(statusReceiver); }
	void transfer(jni::ref<java::lang::String> packageName) { return call_method<"transfer", void>(packageName); }
	void close() { return call_method<"close", void>(); }
	void abandon() { return call_method<"abandon", void>(); }

protected:

	PackageInstaller_Session(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_CONTENT_PM_PACKAGEINSTALLER_SESSION
