// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_CONTENT_BROADCASTRECEIVER_PENDINGRESULT_FWD
#define SCAPIX_JAVA_API_ANDROID_CONTENT_BROADCASTRECEIVER_PENDINGRESULT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::content { class BroadcastReceiver_PendingResult; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::content::BroadcastReceiver_PendingResult>
{
	static constexpr fixed_string class_name = "android/content/BroadcastReceiver$PendingResult";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_CONTENT_BROADCASTRECEIVER_PENDINGRESULT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_CONTENT_BROADCASTRECEIVER_PENDINGRESULT)
#define SCAPIX_JAVA_API_ANDROID_CONTENT_BROADCASTRECEIVER_PENDINGRESULT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::content::BroadcastReceiver_PendingResult : public jni::object_base<"android/content/BroadcastReceiver$PendingResult",
	java::lang::Object>
{
public:

	void setResultCode(jint code) { return call_method<"setResultCode", void>(code); }
	jint getResultCode() { return call_method<"getResultCode", jint>(); }
	void setResultData(jni::ref<java::lang::String> data) { return call_method<"setResultData", void>(data); }
	jni::ref<java::lang::String> getResultData() { return call_method<"getResultData", jni::ref<java::lang::String>>(); }
	void setResultExtras(jni::ref<android::os::Bundle> extras) { return call_method<"setResultExtras", void>(extras); }
	jni::ref<android::os::Bundle> getResultExtras(jboolean makeMap) { return call_method<"getResultExtras", jni::ref<android::os::Bundle>>(makeMap); }
	void setResult(jint code, jni::ref<java::lang::String> data, jni::ref<android::os::Bundle> extras) { return call_method<"setResult", void>(code, data, extras); }
	jboolean getAbortBroadcast() { return call_method<"getAbortBroadcast", jboolean>(); }
	void abortBroadcast() { return call_method<"abortBroadcast", void>(); }
	void clearAbortBroadcast() { return call_method<"clearAbortBroadcast", void>(); }
	void finish() { return call_method<"finish", void>(); }

protected:

	BroadcastReceiver_PendingResult(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_CONTENT_BROADCASTRECEIVER_PENDINGRESULT
