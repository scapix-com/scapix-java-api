// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIARECORDER_METRICSCONSTANTS_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIARECORDER_METRICSCONSTANTS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media { class MediaRecorder_MetricsConstants; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::MediaRecorder_MetricsConstants>
{
	static constexpr fixed_string class_name = "android/media/MediaRecorder$MetricsConstants";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIARECORDER_METRICSCONSTANTS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIARECORDER_METRICSCONSTANTS)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIARECORDER_METRICSCONSTANTS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::MediaRecorder_MetricsConstants : public jni::object_base<"android/media/MediaRecorder$MetricsConstants",
	java::lang::Object>
{
public:

	static jni::ref<java::lang::String> AUDIO_BITRATE() { return get_static_field<"AUDIO_BITRATE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> AUDIO_CHANNELS() { return get_static_field<"AUDIO_CHANNELS", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> AUDIO_SAMPLERATE() { return get_static_field<"AUDIO_SAMPLERATE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> AUDIO_TIMESCALE() { return get_static_field<"AUDIO_TIMESCALE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> CAPTURE_FPS() { return get_static_field<"CAPTURE_FPS", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> CAPTURE_FPS_ENABLE() { return get_static_field<"CAPTURE_FPS_ENABLE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> FRAMERATE() { return get_static_field<"FRAMERATE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> HEIGHT() { return get_static_field<"HEIGHT", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MOVIE_TIMESCALE() { return get_static_field<"MOVIE_TIMESCALE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ROTATION() { return get_static_field<"ROTATION", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> VIDEO_BITRATE() { return get_static_field<"VIDEO_BITRATE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> VIDEO_IFRAME_INTERVAL() { return get_static_field<"VIDEO_IFRAME_INTERVAL", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> VIDEO_LEVEL() { return get_static_field<"VIDEO_LEVEL", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> VIDEO_PROFILE() { return get_static_field<"VIDEO_PROFILE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> VIDEO_TIMESCALE() { return get_static_field<"VIDEO_TIMESCALE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> WIDTH() { return get_static_field<"WIDTH", jni::ref<java::lang::String>>(); }


protected:

	MediaRecorder_MetricsConstants(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIARECORDER_METRICSCONSTANTS
