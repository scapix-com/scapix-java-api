// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/media/audiofx/AudioEffect.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOFX_PRESETREVERB_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOFX_PRESETREVERB_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media::audiofx { class PresetReverb; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::audiofx::PresetReverb>
{
	static constexpr fixed_string class_name = "android/media/audiofx/PresetReverb";
	using base_classes = std::tuple<scapix::java_api::android::media::audiofx::AudioEffect>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOFX_PRESETREVERB_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOFX_PRESETREVERB)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOFX_PRESETREVERB

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/media/audiofx/PresetReverb_OnParameterChangeListener.h>
#include <scapix/java_api/android/media/audiofx/PresetReverb_Settings.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::audiofx::PresetReverb : public jni::object_base<"android/media/audiofx/PresetReverb",
	android::media::audiofx::AudioEffect>
{
public:

	using Settings = PresetReverb_Settings;
	using OnParameterChangeListener = PresetReverb_OnParameterChangeListener;

	static jint PARAM_PRESET() { return get_static_field<"PARAM_PRESET", jint>(); }
	static jshort PRESET_LARGEHALL() { return get_static_field<"PRESET_LARGEHALL", jshort>(); }
	static jshort PRESET_LARGEROOM() { return get_static_field<"PRESET_LARGEROOM", jshort>(); }
	static jshort PRESET_MEDIUMHALL() { return get_static_field<"PRESET_MEDIUMHALL", jshort>(); }
	static jshort PRESET_MEDIUMROOM() { return get_static_field<"PRESET_MEDIUMROOM", jshort>(); }
	static jshort PRESET_NONE() { return get_static_field<"PRESET_NONE", jshort>(); }
	static jshort PRESET_PLATE() { return get_static_field<"PRESET_PLATE", jshort>(); }
	static jshort PRESET_SMALLROOM() { return get_static_field<"PRESET_SMALLROOM", jshort>(); }

	static jni::ref<android::media::audiofx::PresetReverb> new_object(jint priority, jint audioSession) { return base_::new_object(priority, audioSession); }
	void setPreset(jshort preset) { return call_method<"setPreset", void>(preset); }
	jshort getPreset() { return call_method<"getPreset", jshort>(); }
	void setParameterListener(jni::ref<android::media::audiofx::PresetReverb_OnParameterChangeListener> listener) { return call_method<"setParameterListener", void>(listener); }
	jni::ref<android::media::audiofx::PresetReverb_Settings> getProperties() { return call_method<"getProperties", jni::ref<android::media::audiofx::PresetReverb_Settings>>(); }
	void setProperties(jni::ref<android::media::audiofx::PresetReverb_Settings> settings) { return call_method<"setProperties", void>(settings); }

protected:

	PresetReverb(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOFX_PRESETREVERB
