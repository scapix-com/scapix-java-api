// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_VIEW_WINDOW_CALLBACK_FWD
#define SCAPIX_JAVA_API_ANDROID_VIEW_WINDOW_CALLBACK_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::view { class Window_Callback; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::view::Window_Callback>
{
	static constexpr fixed_string class_name = "android/view/Window$Callback";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_WINDOW_CALLBACK_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_VIEW_WINDOW_CALLBACK)
#define SCAPIX_JAVA_API_ANDROID_VIEW_WINDOW_CALLBACK

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/view/ActionMode.h>
#include <scapix/java_api/android/view/ActionMode_Callback.h>
#include <scapix/java_api/android/view/KeyEvent.h>
#include <scapix/java_api/android/view/Menu.h>
#include <scapix/java_api/android/view/MenuItem.h>
#include <scapix/java_api/android/view/MotionEvent.h>
#include <scapix/java_api/android/view/SearchEvent.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/android/view/WindowManager_LayoutParams.h>
#include <scapix/java_api/android/view/accessibility/AccessibilityEvent.h>
#include <scapix/java_api/java/util/List.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::view::Window_Callback : public jni::object_base<"android/view/Window$Callback",
	java::lang::Object>
{
public:

	jboolean dispatchKeyEvent(jni::ref<android::view::KeyEvent> p1) { return call_method<"dispatchKeyEvent", jboolean>(p1); }
	jboolean dispatchKeyShortcutEvent(jni::ref<android::view::KeyEvent> p1) { return call_method<"dispatchKeyShortcutEvent", jboolean>(p1); }
	jboolean dispatchTouchEvent(jni::ref<android::view::MotionEvent> p1) { return call_method<"dispatchTouchEvent", jboolean>(p1); }
	jboolean dispatchTrackballEvent(jni::ref<android::view::MotionEvent> p1) { return call_method<"dispatchTrackballEvent", jboolean>(p1); }
	jboolean dispatchGenericMotionEvent(jni::ref<android::view::MotionEvent> p1) { return call_method<"dispatchGenericMotionEvent", jboolean>(p1); }
	jboolean dispatchPopulateAccessibilityEvent(jni::ref<android::view::accessibility::AccessibilityEvent> p1) { return call_method<"dispatchPopulateAccessibilityEvent", jboolean>(p1); }
	jni::ref<android::view::View> onCreatePanelView(jint p1) { return call_method<"onCreatePanelView", jni::ref<android::view::View>>(p1); }
	jboolean onCreatePanelMenu(jint p1, jni::ref<android::view::Menu> p2) { return call_method<"onCreatePanelMenu", jboolean>(p1, p2); }
	jboolean onPreparePanel(jint p1, jni::ref<android::view::View> p2, jni::ref<android::view::Menu> p3) { return call_method<"onPreparePanel", jboolean>(p1, p2, p3); }
	jboolean onMenuOpened(jint p1, jni::ref<android::view::Menu> p2) { return call_method<"onMenuOpened", jboolean>(p1, p2); }
	jboolean onMenuItemSelected(jint p1, jni::ref<android::view::MenuItem> p2) { return call_method<"onMenuItemSelected", jboolean>(p1, p2); }
	void onWindowAttributesChanged(jni::ref<android::view::WindowManager_LayoutParams> p1) { return call_method<"onWindowAttributesChanged", void>(p1); }
	void onContentChanged() { return call_method<"onContentChanged", void>(); }
	void onWindowFocusChanged(jboolean p1) { return call_method<"onWindowFocusChanged", void>(p1); }
	void onAttachedToWindow() { return call_method<"onAttachedToWindow", void>(); }
	void onDetachedFromWindow() { return call_method<"onDetachedFromWindow", void>(); }
	void onPanelClosed(jint p1, jni::ref<android::view::Menu> p2) { return call_method<"onPanelClosed", void>(p1, p2); }
	jboolean onSearchRequested() { return call_method<"onSearchRequested", jboolean>(); }
	jboolean onSearchRequested(jni::ref<android::view::SearchEvent> p1) { return call_method<"onSearchRequested", jboolean>(p1); }
	jni::ref<android::view::ActionMode> onWindowStartingActionMode(jni::ref<android::view::ActionMode_Callback> p1) { return call_method<"onWindowStartingActionMode", jni::ref<android::view::ActionMode>>(p1); }
	jni::ref<android::view::ActionMode> onWindowStartingActionMode(jni::ref<android::view::ActionMode_Callback> p1, jint p2) { return call_method<"onWindowStartingActionMode", jni::ref<android::view::ActionMode>>(p1, p2); }
	void onActionModeStarted(jni::ref<android::view::ActionMode> p1) { return call_method<"onActionModeStarted", void>(p1); }
	void onActionModeFinished(jni::ref<android::view::ActionMode> p1) { return call_method<"onActionModeFinished", void>(p1); }
	void onProvideKeyboardShortcuts(jni::ref<java::util::List> data, jni::ref<android::view::Menu> menu, jint deviceId) { return call_method<"onProvideKeyboardShortcuts", void>(data, menu, deviceId); }
	void onPointerCaptureChanged(jboolean hasCapture) { return call_method<"onPointerCaptureChanged", void>(hasCapture); }

protected:

	Window_Callback(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_WINDOW_CALLBACK
