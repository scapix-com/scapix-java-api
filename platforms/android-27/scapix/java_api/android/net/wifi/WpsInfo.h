// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_NET_WIFI_WPSINFO_FWD
#define SCAPIX_JAVA_API_ANDROID_NET_WIFI_WPSINFO_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::net::wifi { class WpsInfo; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::net::wifi::WpsInfo>
{
	static constexpr fixed_string class_name = "android/net/wifi/WpsInfo";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_WIFI_WPSINFO_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_NET_WIFI_WPSINFO)
#define SCAPIX_JAVA_API_ANDROID_NET_WIFI_WPSINFO

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::net::wifi::WpsInfo : public jni::object_base<"android/net/wifi/WpsInfo",
	java::lang::Object,
	android::os::Parcelable>
{
public:

	jni::ref<java::lang::String> BSSID() { return get_field<"BSSID", jni::ref<java::lang::String>>(); }
	void BSSID(jni::ref<java::lang::String> v) { set_field<"BSSID", jni::ref<java::lang::String>>(v); }
	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }
	static jint DISPLAY() { return get_static_field<"DISPLAY", jint>(); }
	static jint INVALID() { return get_static_field<"INVALID", jint>(); }
	static jint KEYPAD() { return get_static_field<"KEYPAD", jint>(); }
	static jint LABEL() { return get_static_field<"LABEL", jint>(); }
	static jint PBC() { return get_static_field<"PBC", jint>(); }
	jni::ref<java::lang::String> pin() { return get_field<"pin", jni::ref<java::lang::String>>(); }
	void pin(jni::ref<java::lang::String> v) { set_field<"pin", jni::ref<java::lang::String>>(v); }
	jint setup() { return get_field<"setup", jint>(); }
	void setup(jint v) { set_field<"setup", jint>(v); }

	static jni::ref<android::net::wifi::WpsInfo> new_object() { return base_::new_object(); }
	static jni::ref<android::net::wifi::WpsInfo> new_object(jni::ref<android::net::wifi::WpsInfo> source) { return base_::new_object(source); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	void writeToParcel(jni::ref<android::os::Parcel> dest, jint flags) { return call_method<"writeToParcel", void>(dest, flags); }

protected:

	WpsInfo(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_WIFI_WPSINFO
