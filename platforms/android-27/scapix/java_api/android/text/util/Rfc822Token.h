// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_TEXT_UTIL_RFC822TOKEN_FWD
#define SCAPIX_JAVA_API_ANDROID_TEXT_UTIL_RFC822TOKEN_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::text::util { class Rfc822Token; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::text::util::Rfc822Token>
{
	static constexpr fixed_string class_name = "android/text/util/Rfc822Token";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEXT_UTIL_RFC822TOKEN_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_TEXT_UTIL_RFC822TOKEN)
#define SCAPIX_JAVA_API_ANDROID_TEXT_UTIL_RFC822TOKEN

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::text::util::Rfc822Token : public jni::object_base<"android/text/util/Rfc822Token",
	java::lang::Object>
{
public:

	static jni::ref<android::text::util::Rfc822Token> new_object(jni::ref<java::lang::String> name, jni::ref<java::lang::String> address, jni::ref<java::lang::String> comment) { return base_::new_object(name, address, comment); }
	jni::ref<java::lang::String> getName() { return call_method<"getName", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getAddress() { return call_method<"getAddress", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getComment() { return call_method<"getComment", jni::ref<java::lang::String>>(); }
	void setName(jni::ref<java::lang::String> name) { return call_method<"setName", void>(name); }
	void setAddress(jni::ref<java::lang::String> address) { return call_method<"setAddress", void>(address); }
	void setComment(jni::ref<java::lang::String> comment) { return call_method<"setComment", void>(comment); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> quoteNameIfNecessary(jni::ref<java::lang::String> name) { return call_static_method<"quoteNameIfNecessary", jni::ref<java::lang::String>>(name); }
	static jni::ref<java::lang::String> quoteName(jni::ref<java::lang::String> name) { return call_static_method<"quoteName", jni::ref<java::lang::String>>(name); }
	static jni::ref<java::lang::String> quoteComment(jni::ref<java::lang::String> comment) { return call_static_method<"quoteComment", jni::ref<java::lang::String>>(comment); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jboolean equals(jni::ref<java::lang::Object> o) { return call_method<"equals", jboolean>(o); }

protected:

	Rfc822Token(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEXT_UTIL_RFC822TOKEN
