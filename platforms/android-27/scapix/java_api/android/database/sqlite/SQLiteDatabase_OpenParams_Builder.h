// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_DATABASE_SQLITE_SQLITEDATABASE_OPENPARAMS_BUILDER_FWD
#define SCAPIX_JAVA_API_ANDROID_DATABASE_SQLITE_SQLITEDATABASE_OPENPARAMS_BUILDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::database::sqlite { class SQLiteDatabase_OpenParams_Builder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::database::sqlite::SQLiteDatabase_OpenParams_Builder>
{
	static constexpr fixed_string class_name = "android/database/sqlite/SQLiteDatabase$OpenParams$Builder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_DATABASE_SQLITE_SQLITEDATABASE_OPENPARAMS_BUILDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_DATABASE_SQLITE_SQLITEDATABASE_OPENPARAMS_BUILDER)
#define SCAPIX_JAVA_API_ANDROID_DATABASE_SQLITE_SQLITEDATABASE_OPENPARAMS_BUILDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/database/DatabaseErrorHandler.h>
#include <scapix/java_api/android/database/sqlite/SQLiteDatabase_CursorFactory.h>
#include <scapix/java_api/android/database/sqlite/SQLiteDatabase_OpenParams.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::database::sqlite::SQLiteDatabase_OpenParams_Builder : public jni::object_base<"android/database/sqlite/SQLiteDatabase$OpenParams$Builder",
	java::lang::Object>
{
public:

	static jni::ref<android::database::sqlite::SQLiteDatabase_OpenParams_Builder> new_object() { return base_::new_object(); }
	static jni::ref<android::database::sqlite::SQLiteDatabase_OpenParams_Builder> new_object(jni::ref<android::database::sqlite::SQLiteDatabase_OpenParams> params) { return base_::new_object(params); }
	jni::ref<android::database::sqlite::SQLiteDatabase_OpenParams_Builder> setLookasideConfig(jint slotSize, jint slotCount) { return call_method<"setLookasideConfig", jni::ref<android::database::sqlite::SQLiteDatabase_OpenParams_Builder>>(slotSize, slotCount); }
	jni::ref<android::database::sqlite::SQLiteDatabase_OpenParams_Builder> setOpenFlags(jint openFlags) { return call_method<"setOpenFlags", jni::ref<android::database::sqlite::SQLiteDatabase_OpenParams_Builder>>(openFlags); }
	jni::ref<android::database::sqlite::SQLiteDatabase_OpenParams_Builder> addOpenFlags(jint openFlags) { return call_method<"addOpenFlags", jni::ref<android::database::sqlite::SQLiteDatabase_OpenParams_Builder>>(openFlags); }
	jni::ref<android::database::sqlite::SQLiteDatabase_OpenParams_Builder> removeOpenFlags(jint openFlags) { return call_method<"removeOpenFlags", jni::ref<android::database::sqlite::SQLiteDatabase_OpenParams_Builder>>(openFlags); }
	jni::ref<android::database::sqlite::SQLiteDatabase_OpenParams_Builder> setCursorFactory(jni::ref<android::database::sqlite::SQLiteDatabase_CursorFactory> cursorFactory) { return call_method<"setCursorFactory", jni::ref<android::database::sqlite::SQLiteDatabase_OpenParams_Builder>>(cursorFactory); }
	jni::ref<android::database::sqlite::SQLiteDatabase_OpenParams_Builder> setErrorHandler(jni::ref<android::database::DatabaseErrorHandler> errorHandler) { return call_method<"setErrorHandler", jni::ref<android::database::sqlite::SQLiteDatabase_OpenParams_Builder>>(errorHandler); }
	jni::ref<android::database::sqlite::SQLiteDatabase_OpenParams_Builder> setIdleConnectionTimeout(jlong idleConnectionTimeoutMs) { return call_method<"setIdleConnectionTimeout", jni::ref<android::database::sqlite::SQLiteDatabase_OpenParams_Builder>>(idleConnectionTimeoutMs); }
	jni::ref<android::database::sqlite::SQLiteDatabase_OpenParams> build() { return call_method<"build", jni::ref<android::database::sqlite::SQLiteDatabase_OpenParams>>(); }

protected:

	SQLiteDatabase_OpenParams_Builder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_DATABASE_SQLITE_SQLITEDATABASE_OPENPARAMS_BUILDER
