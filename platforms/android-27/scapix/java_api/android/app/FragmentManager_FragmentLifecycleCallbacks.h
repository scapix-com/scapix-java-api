// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_APP_FRAGMENTMANAGER_FRAGMENTLIFECYCLECALLBACKS_FWD
#define SCAPIX_JAVA_API_ANDROID_APP_FRAGMENTMANAGER_FRAGMENTLIFECYCLECALLBACKS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::app { class FragmentManager_FragmentLifecycleCallbacks; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::app::FragmentManager_FragmentLifecycleCallbacks>
{
	static constexpr fixed_string class_name = "android/app/FragmentManager$FragmentLifecycleCallbacks";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_FRAGMENTMANAGER_FRAGMENTLIFECYCLECALLBACKS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_APP_FRAGMENTMANAGER_FRAGMENTLIFECYCLECALLBACKS)
#define SCAPIX_JAVA_API_ANDROID_APP_FRAGMENTMANAGER_FRAGMENTLIFECYCLECALLBACKS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/app/Fragment.h>
#include <scapix/java_api/android/app/FragmentManager.h>
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/android/view/View.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::app::FragmentManager_FragmentLifecycleCallbacks : public jni::object_base<"android/app/FragmentManager$FragmentLifecycleCallbacks",
	java::lang::Object>
{
public:

	static jni::ref<android::app::FragmentManager_FragmentLifecycleCallbacks> new_object() { return base_::new_object(); }
	void onFragmentPreAttached(jni::ref<android::app::FragmentManager> fm, jni::ref<android::app::Fragment> f, jni::ref<android::content::Context> context) { return call_method<"onFragmentPreAttached", void>(fm, f, context); }
	void onFragmentAttached(jni::ref<android::app::FragmentManager> fm, jni::ref<android::app::Fragment> f, jni::ref<android::content::Context> context) { return call_method<"onFragmentAttached", void>(fm, f, context); }
	void onFragmentPreCreated(jni::ref<android::app::FragmentManager> fm, jni::ref<android::app::Fragment> f, jni::ref<android::os::Bundle> savedInstanceState) { return call_method<"onFragmentPreCreated", void>(fm, f, savedInstanceState); }
	void onFragmentCreated(jni::ref<android::app::FragmentManager> fm, jni::ref<android::app::Fragment> f, jni::ref<android::os::Bundle> savedInstanceState) { return call_method<"onFragmentCreated", void>(fm, f, savedInstanceState); }
	void onFragmentActivityCreated(jni::ref<android::app::FragmentManager> fm, jni::ref<android::app::Fragment> f, jni::ref<android::os::Bundle> savedInstanceState) { return call_method<"onFragmentActivityCreated", void>(fm, f, savedInstanceState); }
	void onFragmentViewCreated(jni::ref<android::app::FragmentManager> fm, jni::ref<android::app::Fragment> f, jni::ref<android::view::View> v, jni::ref<android::os::Bundle> savedInstanceState) { return call_method<"onFragmentViewCreated", void>(fm, f, v, savedInstanceState); }
	void onFragmentStarted(jni::ref<android::app::FragmentManager> fm, jni::ref<android::app::Fragment> f) { return call_method<"onFragmentStarted", void>(fm, f); }
	void onFragmentResumed(jni::ref<android::app::FragmentManager> fm, jni::ref<android::app::Fragment> f) { return call_method<"onFragmentResumed", void>(fm, f); }
	void onFragmentPaused(jni::ref<android::app::FragmentManager> fm, jni::ref<android::app::Fragment> f) { return call_method<"onFragmentPaused", void>(fm, f); }
	void onFragmentStopped(jni::ref<android::app::FragmentManager> fm, jni::ref<android::app::Fragment> f) { return call_method<"onFragmentStopped", void>(fm, f); }
	void onFragmentSaveInstanceState(jni::ref<android::app::FragmentManager> fm, jni::ref<android::app::Fragment> f, jni::ref<android::os::Bundle> outState) { return call_method<"onFragmentSaveInstanceState", void>(fm, f, outState); }
	void onFragmentViewDestroyed(jni::ref<android::app::FragmentManager> fm, jni::ref<android::app::Fragment> f) { return call_method<"onFragmentViewDestroyed", void>(fm, f); }
	void onFragmentDestroyed(jni::ref<android::app::FragmentManager> fm, jni::ref<android::app::Fragment> f) { return call_method<"onFragmentDestroyed", void>(fm, f); }
	void onFragmentDetached(jni::ref<android::app::FragmentManager> fm, jni::ref<android::app::Fragment> f) { return call_method<"onFragmentDetached", void>(fm, f); }

protected:

	FragmentManager_FragmentLifecycleCallbacks(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_FRAGMENTMANAGER_FRAGMENTLIFECYCLECALLBACKS
