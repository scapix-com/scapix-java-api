// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_APP_JOB_JOBSCHEDULER_FWD
#define SCAPIX_JAVA_API_ANDROID_APP_JOB_JOBSCHEDULER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::app::job { class JobScheduler; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::app::job::JobScheduler>
{
	static constexpr fixed_string class_name = "android/app/job/JobScheduler";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_JOB_JOBSCHEDULER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_APP_JOB_JOBSCHEDULER)
#define SCAPIX_JAVA_API_ANDROID_APP_JOB_JOBSCHEDULER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/app/job/JobInfo.h>
#include <scapix/java_api/android/app/job/JobWorkItem.h>
#include <scapix/java_api/java/util/List.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::app::job::JobScheduler : public jni::object_base<"android/app/job/JobScheduler",
	java::lang::Object>
{
public:

	static jint RESULT_FAILURE() { return get_static_field<"RESULT_FAILURE", jint>(); }
	static jint RESULT_SUCCESS() { return get_static_field<"RESULT_SUCCESS", jint>(); }

	static jni::ref<android::app::job::JobScheduler> new_object() { return base_::new_object(); }
	jint schedule(jni::ref<android::app::job::JobInfo> p1) { return call_method<"schedule", jint>(p1); }
	jint enqueue(jni::ref<android::app::job::JobInfo> p1, jni::ref<android::app::job::JobWorkItem> p2) { return call_method<"enqueue", jint>(p1, p2); }
	void cancel(jint p1) { return call_method<"cancel", void>(p1); }
	void cancelAll() { return call_method<"cancelAll", void>(); }
	jni::ref<java::util::List> getAllPendingJobs() { return call_method<"getAllPendingJobs", jni::ref<java::util::List>>(); }
	jni::ref<android::app::job::JobInfo> getPendingJob(jint p1) { return call_method<"getPendingJob", jni::ref<android::app::job::JobInfo>>(p1); }

protected:

	JobScheduler(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_JOB_JOBSCHEDULER
