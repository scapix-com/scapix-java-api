// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/io/InputStream.h>

#ifndef SCAPIX_JAVA_API_ANDROID_APP_BACKUP_BACKUPDATAINPUTSTREAM_FWD
#define SCAPIX_JAVA_API_ANDROID_APP_BACKUP_BACKUPDATAINPUTSTREAM_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::app::backup { class BackupDataInputStream; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::app::backup::BackupDataInputStream>
{
	static constexpr fixed_string class_name = "android/app/backup/BackupDataInputStream";
	using base_classes = std::tuple<scapix::java_api::java::io::InputStream>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_BACKUP_BACKUPDATAINPUTSTREAM_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_APP_BACKUP_BACKUPDATAINPUTSTREAM)
#define SCAPIX_JAVA_API_ANDROID_APP_BACKUP_BACKUPDATAINPUTSTREAM

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::app::backup::BackupDataInputStream : public jni::object_base<"android/app/backup/BackupDataInputStream",
	java::io::InputStream>
{
public:

	jint read() { return call_method<"read", jint>(); }
	jint read(jni::ref<jni::array<jbyte>> b, jint offset, jint size) { return call_method<"read", jint>(b, offset, size); }
	jint read(jni::ref<jni::array<jbyte>> b) { return call_method<"read", jint>(b); }
	jni::ref<java::lang::String> getKey() { return call_method<"getKey", jni::ref<java::lang::String>>(); }
	jint size() { return call_method<"size", jint>(); }

protected:

	BackupDataInputStream(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_BACKUP_BACKUPDATAINPUTSTREAM
