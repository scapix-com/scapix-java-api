// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/icu/text/UnicodeMatcher.h>

#ifndef SCAPIX_JAVA_API_ANDROID_ICU_TEXT_UNICODEFILTER_FWD
#define SCAPIX_JAVA_API_ANDROID_ICU_TEXT_UNICODEFILTER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::icu::text { class UnicodeFilter; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::icu::text::UnicodeFilter>
{
	static constexpr fixed_string class_name = "android/icu/text/UnicodeFilter";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::icu::text::UnicodeMatcher>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_TEXT_UNICODEFILTER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_ICU_TEXT_UNICODEFILTER)
#define SCAPIX_JAVA_API_ANDROID_ICU_TEXT_UNICODEFILTER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/icu/text/Replaceable.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::icu::text::UnicodeFilter : public jni::object_base<"android/icu/text/UnicodeFilter",
	java::lang::Object,
	android::icu::text::UnicodeMatcher>
{
public:

	jboolean contains(jint p1) { return call_method<"contains", jboolean>(p1); }
	jint matches(jni::ref<android::icu::text::Replaceable> text, jni::ref<jni::array<jint>> offset, jint limit, jboolean incremental) { return call_method<"matches", jint>(text, offset, limit, incremental); }

protected:

	UnicodeFilter(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_TEXT_UNICODEFILTER
