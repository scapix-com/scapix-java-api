// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/text/Format.h>

#ifndef SCAPIX_JAVA_API_ANDROID_ICU_TEXT_SELECTFORMAT_FWD
#define SCAPIX_JAVA_API_ANDROID_ICU_TEXT_SELECTFORMAT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::icu::text { class SelectFormat; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::icu::text::SelectFormat>
{
	static constexpr fixed_string class_name = "android/icu/text/SelectFormat";
	using base_classes = std::tuple<scapix::java_api::java::text::Format>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_TEXT_SELECTFORMAT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_ICU_TEXT_SELECTFORMAT)
#define SCAPIX_JAVA_API_ANDROID_ICU_TEXT_SELECTFORMAT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/StringBuffer.h>
#include <scapix/java_api/java/text/FieldPosition.h>
#include <scapix/java_api/java/text/ParsePosition.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::icu::text::SelectFormat : public jni::object_base<"android/icu/text/SelectFormat",
	java::text::Format>
{
public:

	static jni::ref<android::icu::text::SelectFormat> new_object(jni::ref<java::lang::String> pattern) { return base_::new_object(pattern); }
	void applyPattern(jni::ref<java::lang::String> pattern) { return call_method<"applyPattern", void>(pattern); }
	jni::ref<java::lang::String> toPattern() { return call_method<"toPattern", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> format(jni::ref<java::lang::String> keyword) { return call_method<"format", jni::ref<java::lang::String>>(keyword); }
	jni::ref<java::lang::StringBuffer> format(jni::ref<java::lang::Object> keyword, jni::ref<java::lang::StringBuffer> toAppendTo, jni::ref<java::text::FieldPosition> pos) { return call_method<"format", jni::ref<java::lang::StringBuffer>>(keyword, toAppendTo, pos); }
	jni::ref<java::lang::Object> parseObject(jni::ref<java::lang::String> source, jni::ref<java::text::ParsePosition> pos) { return call_method<"parseObject", jni::ref<java::lang::Object>>(source, pos); }
	jboolean equals(jni::ref<java::lang::Object> obj) { return call_method<"equals", jboolean>(obj); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	SelectFormat(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_TEXT_SELECTFORMAT
