// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/sun/reflect/annotation/ExceptionProxy.h>

#ifndef SCAPIX_JAVA_API_SUN_REFLECT_ANNOTATION_TYPENOTPRESENTEXCEPTIONPROXY_FWD
#define SCAPIX_JAVA_API_SUN_REFLECT_ANNOTATION_TYPENOTPRESENTEXCEPTIONPROXY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::reflect::annotation { class TypeNotPresentExceptionProxy; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::reflect::annotation::TypeNotPresentExceptionProxy>
{
	static constexpr fixed_string class_name = "sun/reflect/annotation/TypeNotPresentExceptionProxy";
	using base_classes = std::tuple<scapix::java_api::sun::reflect::annotation::ExceptionProxy>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_REFLECT_ANNOTATION_TYPENOTPRESENTEXCEPTIONPROXY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_REFLECT_ANNOTATION_TYPENOTPRESENTEXCEPTIONPROXY)
#define SCAPIX_JAVA_API_SUN_REFLECT_ANNOTATION_TYPENOTPRESENTEXCEPTIONPROXY

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/Throwable.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::reflect::annotation::TypeNotPresentExceptionProxy : public jni::object_base<"sun/reflect/annotation/TypeNotPresentExceptionProxy",
	sun::reflect::annotation::ExceptionProxy>
{
public:

	static jni::ref<sun::reflect::annotation::TypeNotPresentExceptionProxy> new_object(jni::ref<java::lang::String> typeName, jni::ref<java::lang::Throwable> cause) { return base_::new_object(typeName, cause); }
	jni::ref<java::lang::String> typeName() { return call_method<"typeName", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::Throwable> getCause() { return call_method<"getCause", jni::ref<java::lang::Throwable>>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	TypeNotPresentExceptionProxy(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_REFLECT_ANNOTATION_TYPENOTPRESENTEXCEPTIONPROXY
