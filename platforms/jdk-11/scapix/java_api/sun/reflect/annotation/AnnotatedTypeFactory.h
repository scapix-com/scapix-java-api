// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_REFLECT_ANNOTATION_ANNOTATEDTYPEFACTORY_FWD
#define SCAPIX_JAVA_API_SUN_REFLECT_ANNOTATION_ANNOTATEDTYPEFACTORY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::reflect::annotation { class AnnotatedTypeFactory; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::reflect::annotation::AnnotatedTypeFactory>
{
	static constexpr fixed_string class_name = "sun/reflect/annotation/AnnotatedTypeFactory";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_REFLECT_ANNOTATION_ANNOTATEDTYPEFACTORY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_REFLECT_ANNOTATION_ANNOTATEDTYPEFACTORY)
#define SCAPIX_JAVA_API_SUN_REFLECT_ANNOTATION_ANNOTATEDTYPEFACTORY

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/reflect/AnnotatedElement.h>
#include <scapix/java_api/java/lang/reflect/AnnotatedType.h>
#include <scapix/java_api/java/lang/reflect/Type.h>
#include <scapix/java_api/sun/reflect/annotation/TypeAnnotation.h>
#include <scapix/java_api/sun/reflect/annotation/TypeAnnotation_LocationInfo.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::reflect::annotation::AnnotatedTypeFactory : public jni::object_base<"sun/reflect/annotation/AnnotatedTypeFactory",
	java::lang::Object>
{
public:

	static jni::ref<sun::reflect::annotation::AnnotatedTypeFactory> new_object() { return base_::new_object(); }
	static jni::ref<java::lang::reflect::AnnotatedType> buildAnnotatedType(jni::ref<java::lang::reflect::Type> type, jni::ref<sun::reflect::annotation::TypeAnnotation_LocationInfo> currentLoc, jni::ref<jni::array<sun::reflect::annotation::TypeAnnotation>> actualTypeAnnos, jni::ref<jni::array<sun::reflect::annotation::TypeAnnotation>> allOnSameTarget, jni::ref<java::lang::reflect::AnnotatedElement> decl) { return call_static_method<"buildAnnotatedType", jni::ref<java::lang::reflect::AnnotatedType>>(type, currentLoc, actualTypeAnnos, allOnSameTarget, decl); }
	static jni::ref<sun::reflect::annotation::TypeAnnotation_LocationInfo> nestingForType(jni::ref<java::lang::reflect::Type> type, jni::ref<sun::reflect::annotation::TypeAnnotation_LocationInfo> addTo) { return call_static_method<"nestingForType", jni::ref<sun::reflect::annotation::TypeAnnotation_LocationInfo>>(type, addTo); }

protected:

	AnnotatedTypeFactory(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_REFLECT_ANNOTATION_ANNOTATEDTYPEFACTORY
