// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_PKCS10_PKCS10_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_PKCS10_PKCS10_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::pkcs10 { class PKCS10; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::pkcs10::PKCS10>
{
	static constexpr fixed_string class_name = "sun/security/pkcs10/PKCS10";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_PKCS10_PKCS10_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_PKCS10_PKCS10)
#define SCAPIX_JAVA_API_SUN_SECURITY_PKCS10_PKCS10

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/PrintStream.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/security/PublicKey.h>
#include <scapix/java_api/java/security/Signature.h>
#include <scapix/java_api/sun/security/pkcs10/PKCS10Attributes.h>
#include <scapix/java_api/sun/security/x509/X500Name.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::security::pkcs10::PKCS10 : public jni::object_base<"sun/security/pkcs10/PKCS10",
	java::lang::Object>
{
public:

	static jni::ref<sun::security::pkcs10::PKCS10> new_object(jni::ref<java::security::PublicKey> publicKey) { return base_::new_object(publicKey); }
	static jni::ref<sun::security::pkcs10::PKCS10> new_object(jni::ref<java::security::PublicKey> publicKey, jni::ref<sun::security::pkcs10::PKCS10Attributes> attributes) { return base_::new_object(publicKey, attributes); }
	static jni::ref<sun::security::pkcs10::PKCS10> new_object(jni::ref<jni::array<jbyte>> data) { return base_::new_object(data); }
	void encodeAndSign(jni::ref<sun::security::x509::X500Name> subject, jni::ref<java::security::Signature> signature) { return call_method<"encodeAndSign", void>(subject, signature); }
	jni::ref<sun::security::x509::X500Name> getSubjectName() { return call_method<"getSubjectName", jni::ref<sun::security::x509::X500Name>>(); }
	jni::ref<java::security::PublicKey> getSubjectPublicKeyInfo() { return call_method<"getSubjectPublicKeyInfo", jni::ref<java::security::PublicKey>>(); }
	jni::ref<java::lang::String> getSigAlg() { return call_method<"getSigAlg", jni::ref<java::lang::String>>(); }
	jni::ref<sun::security::pkcs10::PKCS10Attributes> getAttributes() { return call_method<"getAttributes", jni::ref<sun::security::pkcs10::PKCS10Attributes>>(); }
	jni::ref<jni::array<jbyte>> getEncoded() { return call_method<"getEncoded", jni::ref<jni::array<jbyte>>>(); }
	void print(jni::ref<java::io::PrintStream> out) { return call_method<"print", void>(out); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jboolean equals(jni::ref<java::lang::Object> other) { return call_method<"equals", jboolean>(other); }
	jint hashCode() { return call_method<"hashCode", jint>(); }

protected:

	PKCS10(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_PKCS10_PKCS10
