// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/io/InputStream.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_SSL_SSLSOCKETIMPL_APPINPUTSTREAM_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_SSL_SSLSOCKETIMPL_APPINPUTSTREAM_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::ssl { class SSLSocketImpl_AppInputStream; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::ssl::SSLSocketImpl_AppInputStream>
{
	static constexpr fixed_string class_name = "sun/security/ssl/SSLSocketImpl$AppInputStream";
	using base_classes = std::tuple<scapix::java_api::java::io::InputStream>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_SSL_SSLSOCKETIMPL_APPINPUTSTREAM_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_SSL_SSLSOCKETIMPL_APPINPUTSTREAM)
#define SCAPIX_JAVA_API_SUN_SECURITY_SSL_SSLSOCKETIMPL_APPINPUTSTREAM

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::security::ssl::SSLSocketImpl_AppInputStream : public jni::object_base<"sun/security/ssl/SSLSocketImpl$AppInputStream",
	java::io::InputStream>
{
public:

	jint available() { return call_method<"available", jint>(); }
	jint read() { return call_method<"read", jint>(); }
	jint read(jni::ref<jni::array<jbyte>> b, jint off, jint len) { return call_method<"read", jint>(b, off, len); }
	jlong skip(jlong n) { return call_method<"skip", jlong>(n); }
	void close() { return call_method<"close", void>(); }

protected:

	SSLSocketImpl_AppInputStream(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_SSL_SSLSOCKETIMPL_APPINPUTSTREAM
