// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/sun/security/ssl/HandshakeHash_TranscriptHash.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_SSL_HANDSHAKEHASH_NONCLONEABLEHASH_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_SSL_HANDSHAKEHASH_NONCLONEABLEHASH_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::ssl { class HandshakeHash_NonCloneableHash; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::ssl::HandshakeHash_NonCloneableHash>
{
	static constexpr fixed_string class_name = "sun/security/ssl/HandshakeHash$NonCloneableHash";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::sun::security::ssl::HandshakeHash_TranscriptHash>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_SSL_HANDSHAKEHASH_NONCLONEABLEHASH_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_SSL_HANDSHAKEHASH_NONCLONEABLEHASH)
#define SCAPIX_JAVA_API_SUN_SECURITY_SSL_HANDSHAKEHASH_NONCLONEABLEHASH

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::security::ssl::HandshakeHash_NonCloneableHash : public jni::object_base<"sun/security/ssl/HandshakeHash$NonCloneableHash",
	java::lang::Object,
	sun::security::ssl::HandshakeHash_TranscriptHash>
{
public:

	void update(jni::ref<jni::array<jbyte>> input, jint offset, jint length) { return call_method<"update", void>(input, offset, length); }
	jni::ref<jni::array<jbyte>> digest() { return call_method<"digest", jni::ref<jni::array<jbyte>>>(); }
	jni::ref<jni::array<jbyte>> archived() { return call_method<"archived", jni::ref<jni::array<jbyte>>>(); }

protected:

	HandshakeHash_NonCloneableHash(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_SSL_HANDSHAKEHASH_NONCLONEABLEHASH
