// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_UTIL_ALGORITHMDECOMPOSER_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_UTIL_ALGORITHMDECOMPOSER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::util { class AlgorithmDecomposer; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::util::AlgorithmDecomposer>
{
	static constexpr fixed_string class_name = "sun/security/util/AlgorithmDecomposer";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_UTIL_ALGORITHMDECOMPOSER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_UTIL_ALGORITHMDECOMPOSER)
#define SCAPIX_JAVA_API_SUN_SECURITY_UTIL_ALGORITHMDECOMPOSER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Collection.h>
#include <scapix/java_api/java/util/Set.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::security::util::AlgorithmDecomposer : public jni::object_base<"sun/security/util/AlgorithmDecomposer",
	java::lang::Object>
{
public:

	static jni::ref<sun::security::util::AlgorithmDecomposer> new_object() { return base_::new_object(); }
	jni::ref<java::util::Set> decompose(jni::ref<java::lang::String> algorithm) { return call_method<"decompose", jni::ref<java::util::Set>>(algorithm); }
	static jni::ref<java::util::Collection> getAliases(jni::ref<java::lang::String> algorithm) { return call_static_method<"getAliases", jni::ref<java::util::Collection>>(algorithm); }
	static jni::ref<java::util::Set> decomposeOneHash(jni::ref<java::lang::String> algorithm) { return call_static_method<"decomposeOneHash", jni::ref<java::util::Set>>(algorithm); }
	static jni::ref<java::lang::String> hashName(jni::ref<java::lang::String> algorithm) { return call_static_method<"hashName", jni::ref<java::lang::String>>(algorithm); }

protected:

	AlgorithmDecomposer(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_UTIL_ALGORITHMDECOMPOSER
