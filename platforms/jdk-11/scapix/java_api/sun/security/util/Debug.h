// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_UTIL_DEBUG_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_UTIL_DEBUG_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::util { class Debug; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::util::Debug>
{
	static constexpr fixed_string class_name = "sun/security/util/Debug";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_UTIL_DEBUG_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_UTIL_DEBUG)
#define SCAPIX_JAVA_API_SUN_SECURITY_UTIL_DEBUG

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/PrintStream.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/math/BigInteger.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::security::util::Debug : public jni::object_base<"sun/security/util/Debug",
	java::lang::Object>
{
public:

	static jni::ref<sun::security::util::Debug> new_object() { return base_::new_object(); }
	static void Help() { return call_static_method<"Help", void>(); }
	static jni::ref<sun::security::util::Debug> getInstance(jni::ref<java::lang::String> option) { return call_static_method<"getInstance", jni::ref<sun::security::util::Debug>>(option); }
	static jni::ref<sun::security::util::Debug> getInstance(jni::ref<java::lang::String> option, jni::ref<java::lang::String> prefix) { return call_static_method<"getInstance", jni::ref<sun::security::util::Debug>>(option, prefix); }
	static jboolean isOn(jni::ref<java::lang::String> option) { return call_static_method<"isOn", jboolean>(option); }
	static jboolean isVerbose() { return call_static_method<"isVerbose", jboolean>(); }
	void println(jni::ref<java::lang::String> message) { return call_method<"println", void>(message); }
	void println(jni::ref<java::lang::Object> obj, jni::ref<java::lang::String> message) { return call_method<"println", void>(obj, message); }
	void println() { return call_method<"println", void>(); }
	static void println(jni::ref<java::lang::String> prefix, jni::ref<java::lang::String> message) { return call_static_method<"println", void>(prefix, message); }
	jni::ref<java::io::PrintStream> getPrintStream() { return call_method<"getPrintStream", jni::ref<java::io::PrintStream>>(); }
	static jni::ref<java::lang::String> toHexString(jni::ref<java::math::BigInteger> b) { return call_static_method<"toHexString", jni::ref<java::lang::String>>(b); }
	static jni::ref<java::lang::String> toString(jni::ref<jni::array<jbyte>> b) { return call_static_method<"toString", jni::ref<java::lang::String>>(b); }

protected:

	Debug(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_UTIL_DEBUG
