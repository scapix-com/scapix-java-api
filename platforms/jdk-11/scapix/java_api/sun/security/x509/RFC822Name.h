// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/sun/security/x509/GeneralNameInterface.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_X509_RFC822NAME_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_X509_RFC822NAME_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::x509 { class RFC822Name; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::x509::RFC822Name>
{
	static constexpr fixed_string class_name = "sun/security/x509/RFC822Name";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::sun::security::x509::GeneralNameInterface>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_X509_RFC822NAME_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_X509_RFC822NAME)
#define SCAPIX_JAVA_API_SUN_SECURITY_X509_RFC822NAME

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/sun/security/util/DerOutputStream.h>
#include <scapix/java_api/sun/security/util/DerValue.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::security::x509::RFC822Name : public jni::object_base<"sun/security/x509/RFC822Name",
	java::lang::Object,
	sun::security::x509::GeneralNameInterface>
{
public:

	static jni::ref<sun::security::x509::RFC822Name> new_object(jni::ref<sun::security::util::DerValue> derValue) { return base_::new_object(derValue); }
	static jni::ref<sun::security::x509::RFC822Name> new_object(jni::ref<java::lang::String> name) { return base_::new_object(name); }
	void parseName(jni::ref<java::lang::String> name) { return call_method<"parseName", void>(name); }
	jint getType() { return call_method<"getType", jint>(); }
	jni::ref<java::lang::String> getName() { return call_method<"getName", jni::ref<java::lang::String>>(); }
	void encode(jni::ref<sun::security::util::DerOutputStream> out) { return call_method<"encode", void>(out); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jboolean equals(jni::ref<java::lang::Object> obj) { return call_method<"equals", jboolean>(obj); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jint constrains(jni::ref<sun::security::x509::GeneralNameInterface> inputName) { return call_method<"constrains", jint>(inputName); }
	jint subtreeDepth() { return call_method<"subtreeDepth", jint>(); }

protected:

	RFC822Name(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_X509_RFC822NAME
