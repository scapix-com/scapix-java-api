// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_X509_DISTRIBUTIONPOINT_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_X509_DISTRIBUTIONPOINT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::x509 { class DistributionPoint; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::x509::DistributionPoint>
{
	static constexpr fixed_string class_name = "sun/security/x509/DistributionPoint";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_X509_DISTRIBUTIONPOINT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_X509_DISTRIBUTIONPOINT)
#define SCAPIX_JAVA_API_SUN_SECURITY_X509_DISTRIBUTIONPOINT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/sun/security/util/DerOutputStream.h>
#include <scapix/java_api/sun/security/util/DerValue.h>
#include <scapix/java_api/sun/security/x509/GeneralNames.h>
#include <scapix/java_api/sun/security/x509/RDN.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::security::x509::DistributionPoint : public jni::object_base<"sun/security/x509/DistributionPoint",
	java::lang::Object>
{
public:

	static jint KEY_COMPROMISE() { return get_static_field<"KEY_COMPROMISE", jint>(); }
	static jint CA_COMPROMISE() { return get_static_field<"CA_COMPROMISE", jint>(); }
	static jint AFFILIATION_CHANGED() { return get_static_field<"AFFILIATION_CHANGED", jint>(); }
	static jint SUPERSEDED() { return get_static_field<"SUPERSEDED", jint>(); }
	static jint CESSATION_OF_OPERATION() { return get_static_field<"CESSATION_OF_OPERATION", jint>(); }
	static jint CERTIFICATE_HOLD() { return get_static_field<"CERTIFICATE_HOLD", jint>(); }
	static jint PRIVILEGE_WITHDRAWN() { return get_static_field<"PRIVILEGE_WITHDRAWN", jint>(); }
	static jint AA_COMPROMISE() { return get_static_field<"AA_COMPROMISE", jint>(); }

	static jni::ref<sun::security::x509::DistributionPoint> new_object(jni::ref<sun::security::x509::GeneralNames> fullName, jni::ref<jni::array<jboolean>> reasonFlags, jni::ref<sun::security::x509::GeneralNames> crlIssuer) { return base_::new_object(fullName, reasonFlags, crlIssuer); }
	static jni::ref<sun::security::x509::DistributionPoint> new_object(jni::ref<sun::security::x509::RDN> relativeName, jni::ref<jni::array<jboolean>> reasonFlags, jni::ref<sun::security::x509::GeneralNames> crlIssuer) { return base_::new_object(relativeName, reasonFlags, crlIssuer); }
	static jni::ref<sun::security::x509::DistributionPoint> new_object(jni::ref<sun::security::util::DerValue> val) { return base_::new_object(val); }
	jni::ref<sun::security::x509::GeneralNames> getFullName() { return call_method<"getFullName", jni::ref<sun::security::x509::GeneralNames>>(); }
	jni::ref<sun::security::x509::RDN> getRelativeName() { return call_method<"getRelativeName", jni::ref<sun::security::x509::RDN>>(); }
	jni::ref<jni::array<jboolean>> getReasonFlags() { return call_method<"getReasonFlags", jni::ref<jni::array<jboolean>>>(); }
	jni::ref<sun::security::x509::GeneralNames> getCRLIssuer() { return call_method<"getCRLIssuer", jni::ref<sun::security::x509::GeneralNames>>(); }
	void encode(jni::ref<sun::security::util::DerOutputStream> out) { return call_method<"encode", void>(out); }
	jboolean equals(jni::ref<java::lang::Object> obj) { return call_method<"equals", jboolean>(obj); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	DistributionPoint(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_X509_DISTRIBUTIONPOINT
