// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/util/spi/LocaleNameProvider.h>
#include <scapix/java_api/sun/util/locale/provider/SPILocaleProviderAdapter_Delegate.h>

#ifndef SCAPIX_JAVA_API_SUN_UTIL_LOCALE_PROVIDER_SPILOCALEPROVIDERADAPTER_LOCALENAMEPROVIDERDELEGATE_FWD
#define SCAPIX_JAVA_API_SUN_UTIL_LOCALE_PROVIDER_SPILOCALEPROVIDERADAPTER_LOCALENAMEPROVIDERDELEGATE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::util::locale::provider { class SPILocaleProviderAdapter_LocaleNameProviderDelegate; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::util::locale::provider::SPILocaleProviderAdapter_LocaleNameProviderDelegate>
{
	static constexpr fixed_string class_name = "sun/util/locale/provider/SPILocaleProviderAdapter$LocaleNameProviderDelegate";
	using base_classes = std::tuple<scapix::java_api::java::util::spi::LocaleNameProvider, scapix::java_api::sun::util::locale::provider::SPILocaleProviderAdapter_Delegate>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_UTIL_LOCALE_PROVIDER_SPILOCALEPROVIDERADAPTER_LOCALENAMEPROVIDERDELEGATE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_UTIL_LOCALE_PROVIDER_SPILOCALEPROVIDERADAPTER_LOCALENAMEPROVIDERDELEGATE)
#define SCAPIX_JAVA_API_SUN_UTIL_LOCALE_PROVIDER_SPILOCALEPROVIDERADAPTER_LOCALENAMEPROVIDERDELEGATE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Locale.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::util::locale::provider::SPILocaleProviderAdapter_LocaleNameProviderDelegate : public jni::object_base<"sun/util/locale/provider/SPILocaleProviderAdapter$LocaleNameProviderDelegate",
	java::util::spi::LocaleNameProvider,
	sun::util::locale::provider::SPILocaleProviderAdapter_Delegate>
{
public:

	void addImpl(jni::ref<java::util::spi::LocaleNameProvider> impl) { return call_method<"addImpl", void>(impl); }
	jni::ref<java::util::spi::LocaleNameProvider> getImpl(jni::ref<java::util::Locale> locale) { return call_method<"getImpl", jni::ref<java::util::spi::LocaleNameProvider>>(locale); }
	jni::ref<jni::array<java::util::Locale>> getAvailableLocales() { return call_method<"getAvailableLocales", jni::ref<jni::array<java::util::Locale>>>(); }
	jboolean isSupportedLocale(jni::ref<java::util::Locale> locale) { return call_method<"isSupportedLocale", jboolean>(locale); }
	jni::ref<java::lang::String> getDisplayLanguage(jni::ref<java::lang::String> languageCode, jni::ref<java::util::Locale> locale) { return call_method<"getDisplayLanguage", jni::ref<java::lang::String>>(languageCode, locale); }
	jni::ref<java::lang::String> getDisplayScript(jni::ref<java::lang::String> scriptCode, jni::ref<java::util::Locale> locale) { return call_method<"getDisplayScript", jni::ref<java::lang::String>>(scriptCode, locale); }
	jni::ref<java::lang::String> getDisplayCountry(jni::ref<java::lang::String> countryCode, jni::ref<java::util::Locale> locale) { return call_method<"getDisplayCountry", jni::ref<java::lang::String>>(countryCode, locale); }
	jni::ref<java::lang::String> getDisplayVariant(jni::ref<java::lang::String> variant, jni::ref<java::util::Locale> locale) { return call_method<"getDisplayVariant", jni::ref<java::lang::String>>(variant, locale); }
	jni::ref<java::lang::String> getDisplayUnicodeExtensionKey(jni::ref<java::lang::String> key, jni::ref<java::util::Locale> locale) { return call_method<"getDisplayUnicodeExtensionKey", jni::ref<java::lang::String>>(key, locale); }
	jni::ref<java::lang::String> getDisplayUnicodeExtensionType(jni::ref<java::lang::String> extType, jni::ref<java::lang::String> key, jni::ref<java::util::Locale> locale) { return call_method<"getDisplayUnicodeExtensionType", jni::ref<java::lang::String>>(extType, key, locale); }

protected:

	SPILocaleProviderAdapter_LocaleNameProviderDelegate(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_UTIL_LOCALE_PROVIDER_SPILOCALEPROVIDERADAPTER_LOCALENAMEPROVIDERDELEGATE
