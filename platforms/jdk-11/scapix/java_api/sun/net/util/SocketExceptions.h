// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_NET_UTIL_SOCKETEXCEPTIONS_FWD
#define SCAPIX_JAVA_API_SUN_NET_UTIL_SOCKETEXCEPTIONS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::net::util { class SocketExceptions; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::net::util::SocketExceptions>
{
	static constexpr fixed_string class_name = "sun/net/util/SocketExceptions";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NET_UTIL_SOCKETEXCEPTIONS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_NET_UTIL_SOCKETEXCEPTIONS)
#define SCAPIX_JAVA_API_SUN_NET_UTIL_SOCKETEXCEPTIONS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/IOException.h>
#include <scapix/java_api/java/net/InetSocketAddress.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::net::util::SocketExceptions : public jni::object_base<"sun/net/util/SocketExceptions",
	java::lang::Object>
{
public:

	static jni::ref<java::io::IOException> of(jni::ref<java::io::IOException> e, jni::ref<java::net::InetSocketAddress> address) { return call_static_method<"of", jni::ref<java::io::IOException>>(e, address); }

protected:

	SocketExceptions(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NET_UTIL_SOCKETEXCEPTIONS
