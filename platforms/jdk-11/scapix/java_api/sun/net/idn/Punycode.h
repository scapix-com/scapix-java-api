// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_NET_IDN_PUNYCODE_FWD
#define SCAPIX_JAVA_API_SUN_NET_IDN_PUNYCODE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::net::idn { class Punycode; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::net::idn::Punycode>
{
	static constexpr fixed_string class_name = "sun/net/idn/Punycode";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NET_IDN_PUNYCODE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_NET_IDN_PUNYCODE)
#define SCAPIX_JAVA_API_SUN_NET_IDN_PUNYCODE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/StringBuffer.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::net::idn::Punycode : public jni::object_base<"sun/net/idn/Punycode",
	java::lang::Object>
{
public:

	static jni::ref<sun::net::idn::Punycode> new_object() { return base_::new_object(); }
	static jni::ref<java::lang::StringBuffer> encode(jni::ref<java::lang::StringBuffer> src, jni::ref<jni::array<jboolean>> caseFlags) { return call_static_method<"encode", jni::ref<java::lang::StringBuffer>>(src, caseFlags); }
	static jni::ref<java::lang::StringBuffer> decode(jni::ref<java::lang::StringBuffer> src, jni::ref<jni::array<jboolean>> caseFlags) { return call_static_method<"decode", jni::ref<java::lang::StringBuffer>>(src, caseFlags); }

protected:

	Punycode(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NET_IDN_PUNYCODE
