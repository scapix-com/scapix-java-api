// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_NIO_FS_EXTENDEDFILESYSTEMPROVIDER_FWD
#define SCAPIX_JAVA_API_SUN_NIO_FS_EXTENDEDFILESYSTEMPROVIDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::nio::fs { class ExtendedFileSystemProvider; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::nio::fs::ExtendedFileSystemProvider>
{
	static constexpr fixed_string class_name = "sun/nio/fs/ExtendedFileSystemProvider";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NIO_FS_EXTENDEDFILESYSTEMPROVIDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_NIO_FS_EXTENDEDFILESYSTEMPROVIDER)
#define SCAPIX_JAVA_API_SUN_NIO_FS_EXTENDEDFILESYSTEMPROVIDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/nio/file/Path.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::nio::fs::ExtendedFileSystemProvider : public jni::object_base<"sun/nio/fs/ExtendedFileSystemProvider",
	java::lang::Object>
{
public:

	jboolean exists(jni::ref<java::nio::file::Path> p1) { return call_method<"exists", jboolean>(p1); }
	jboolean isDirectory(jni::ref<java::nio::file::Path> p1) { return call_method<"isDirectory", jboolean>(p1); }
	jboolean isRegularFile(jni::ref<java::nio::file::Path> p1) { return call_method<"isRegularFile", jboolean>(p1); }

protected:

	ExtendedFileSystemProvider(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NIO_FS_EXTENDEDFILESYSTEMPROVIDER
