// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/nio/file/spi/FileSystemProvider.h>

#ifndef SCAPIX_JAVA_API_SUN_NIO_FS_ABSTRACTFILESYSTEMPROVIDER_FWD
#define SCAPIX_JAVA_API_SUN_NIO_FS_ABSTRACTFILESYSTEMPROVIDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::nio::fs { class AbstractFileSystemProvider; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::nio::fs::AbstractFileSystemProvider>
{
	static constexpr fixed_string class_name = "sun/nio/fs/AbstractFileSystemProvider";
	using base_classes = std::tuple<scapix::java_api::java::nio::file::spi::FileSystemProvider>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NIO_FS_ABSTRACTFILESYSTEMPROVIDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_NIO_FS_ABSTRACTFILESYSTEMPROVIDER)
#define SCAPIX_JAVA_API_SUN_NIO_FS_ABSTRACTFILESYSTEMPROVIDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/nio/file/LinkOption.h>
#include <scapix/java_api/java/nio/file/Path.h>
#include <scapix/java_api/java/util/Map.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::nio::fs::AbstractFileSystemProvider : public jni::object_base<"sun/nio/fs/AbstractFileSystemProvider",
	java::nio::file::spi::FileSystemProvider>
{
public:

	void setAttribute(jni::ref<java::nio::file::Path> file, jni::ref<java::lang::String> attribute, jni::ref<java::lang::Object> value, jni::ref<jni::array<java::nio::file::LinkOption>> options) { return call_method<"setAttribute", void>(file, attribute, value, options); }
	jni::ref<java::util::Map> readAttributes(jni::ref<java::nio::file::Path> file, jni::ref<java::lang::String> attributes, jni::ref<jni::array<java::nio::file::LinkOption>> options) { return call_method<"readAttributes", jni::ref<java::util::Map>>(file, attributes, options); }
	void delete_(jni::ref<java::nio::file::Path> file) { return call_method<"delete", void>(file); }
	jboolean deleteIfExists(jni::ref<java::nio::file::Path> file) { return call_method<"deleteIfExists", jboolean>(file); }
	jboolean isDirectory(jni::ref<java::nio::file::Path> file) { return call_method<"isDirectory", jboolean>(file); }
	jboolean isRegularFile(jni::ref<java::nio::file::Path> file) { return call_method<"isRegularFile", jboolean>(file); }
	jboolean exists(jni::ref<java::nio::file::Path> file) { return call_method<"exists", jboolean>(file); }

protected:

	AbstractFileSystemProvider(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NIO_FS_ABSTRACTFILESYSTEMPROVIDER
