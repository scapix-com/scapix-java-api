// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_TEXT_NORMALIZER_UCHARACTER_NUMERICTYPE_FWD
#define SCAPIX_JAVA_API_SUN_TEXT_NORMALIZER_UCHARACTER_NUMERICTYPE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::text::normalizer { class UCharacter_NumericType; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::text::normalizer::UCharacter_NumericType>
{
	static constexpr fixed_string class_name = "sun/text/normalizer/UCharacter$NumericType";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_TEXT_NORMALIZER_UCHARACTER_NUMERICTYPE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_TEXT_NORMALIZER_UCHARACTER_NUMERICTYPE)
#define SCAPIX_JAVA_API_SUN_TEXT_NORMALIZER_UCHARACTER_NUMERICTYPE

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::text::normalizer::UCharacter_NumericType : public jni::object_base<"sun/text/normalizer/UCharacter$NumericType",
	java::lang::Object>
{
public:

	static jint NONE() { return get_static_field<"NONE", jint>(); }
	static jint DECIMAL() { return get_static_field<"DECIMAL", jint>(); }
	static jint DIGIT() { return get_static_field<"DIGIT", jint>(); }
	static jint NUMERIC() { return get_static_field<"NUMERIC", jint>(); }
	static jint COUNT() { return get_static_field<"COUNT", jint>(); }


protected:

	UCharacter_NumericType(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_TEXT_NORMALIZER_UCHARACTER_NUMERICTYPE
