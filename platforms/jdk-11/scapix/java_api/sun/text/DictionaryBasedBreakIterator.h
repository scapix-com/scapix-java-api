// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/sun/text/RuleBasedBreakIterator.h>

#ifndef SCAPIX_JAVA_API_SUN_TEXT_DICTIONARYBASEDBREAKITERATOR_FWD
#define SCAPIX_JAVA_API_SUN_TEXT_DICTIONARYBASEDBREAKITERATOR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::text { class DictionaryBasedBreakIterator; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::text::DictionaryBasedBreakIterator>
{
	static constexpr fixed_string class_name = "sun/text/DictionaryBasedBreakIterator";
	using base_classes = std::tuple<scapix::java_api::sun::text::RuleBasedBreakIterator>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_TEXT_DICTIONARYBASEDBREAKITERATOR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_TEXT_DICTIONARYBASEDBREAKITERATOR)
#define SCAPIX_JAVA_API_SUN_TEXT_DICTIONARYBASEDBREAKITERATOR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/text/CharacterIterator.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::text::DictionaryBasedBreakIterator : public jni::object_base<"sun/text/DictionaryBasedBreakIterator",
	sun::text::RuleBasedBreakIterator>
{
public:

	static jni::ref<sun::text::DictionaryBasedBreakIterator> new_object(jni::ref<java::lang::String> ruleFile, jni::ref<jni::array<jbyte>> ruleData, jni::ref<java::lang::String> dictionaryFile, jni::ref<jni::array<jbyte>> dictionaryData) { return base_::new_object(ruleFile, ruleData, dictionaryFile, dictionaryData); }
	void setText(jni::ref<java::text::CharacterIterator> newText) { return call_method<"setText", void>(newText); }
	jint first() { return call_method<"first", jint>(); }
	jint last() { return call_method<"last", jint>(); }
	jint previous() { return call_method<"previous", jint>(); }
	jint preceding(jint offset) { return call_method<"preceding", jint>(offset); }
	jint following(jint offset) { return call_method<"following", jint>(offset); }

protected:

	DictionaryBasedBreakIterator(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_TEXT_DICTIONARYBASEDBREAKITERATOR
