// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_JAVA_UTIL_JAR_PACK_PACKAGE_FWD
#define SCAPIX_JAVA_API_COM_SUN_JAVA_UTIL_JAR_PACK_PACKAGE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::java::util::jar::pack { class Package; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::java::util::jar::pack::Package>
{
	static constexpr fixed_string class_name = "com/sun/java/util/jar/pack/Package";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JAVA_UTIL_JAR_PACK_PACKAGE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_JAVA_UTIL_JAR_PACK_PACKAGE)
#define SCAPIX_JAVA_API_COM_SUN_JAVA_UTIL_JAR_PACK_PACKAGE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/java/util/jar/pack/Attribute_Layout.h>
#include <scapix/java_api/com/sun/java/util/jar/pack/ConstantPool_Entry.h>
#include <scapix/java_api/com/sun/java/util/jar/pack/Package_InnerClass.h>
#include <scapix/java_api/com/sun/java/util/jar/pack/Package_Version.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Collection.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/java/util/Map.h>
#include <scapix/java_api/com/sun/java/util/jar/pack/Package_File.h>
#include <scapix/java_api/com/sun/java/util/jar/pack/Package_Class.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class com::sun::java::util::jar::pack::Package : public jni::object_base<"com/sun/java/util/jar/pack/Package",
	java::lang::Object>
{
public:

	using File = Package_File;
	using Class = Package_Class;

	static jni::ref<com::sun::java::util::jar::pack::Attribute_Layout> attrCodeEmpty() { return get_static_field<"attrCodeEmpty", jni::ref<com::sun::java::util::jar::pack::Attribute_Layout>>(); }
	static jni::ref<com::sun::java::util::jar::pack::Attribute_Layout> attrBootstrapMethodsEmpty() { return get_static_field<"attrBootstrapMethodsEmpty", jni::ref<com::sun::java::util::jar::pack::Attribute_Layout>>(); }
	static jni::ref<com::sun::java::util::jar::pack::Attribute_Layout> attrInnerClassesEmpty() { return get_static_field<"attrInnerClassesEmpty", jni::ref<com::sun::java::util::jar::pack::Attribute_Layout>>(); }
	static jni::ref<com::sun::java::util::jar::pack::Attribute_Layout> attrSourceFileSpecial() { return get_static_field<"attrSourceFileSpecial", jni::ref<com::sun::java::util::jar::pack::Attribute_Layout>>(); }
	static jni::ref<java::util::Map> attrDefs() { return get_static_field<"attrDefs", jni::ref<java::util::Map>>(); }

	static jni::ref<com::sun::java::util::jar::pack::Package> new_object() { return base_::new_object(); }
	static jni::ref<com::sun::java::util::jar::pack::Package> new_object(jni::ref<com::sun::java::util::jar::pack::Package_Version> minClassVersion, jni::ref<com::sun::java::util::jar::pack::Package_Version> maxClassVersion, jni::ref<com::sun::java::util::jar::pack::Package_Version> packageVersion) { return base_::new_object(minClassVersion, maxClassVersion, packageVersion); }
	void reset() { return call_method<"reset", void>(); }
	jni::ref<java::util::List> getClasses() { return call_method<"getClasses", jni::ref<java::util::List>>(); }
	jni::ref<java::util::List> getFiles() { return call_method<"getFiles", jni::ref<java::util::List>>(); }
	jni::ref<java::util::List> getClassStubs() { return call_method<"getClassStubs", jni::ref<java::util::List>>(); }
	jni::ref<java::util::List> getAllInnerClasses() { return call_method<"getAllInnerClasses", jni::ref<java::util::List>>(); }
	void setAllInnerClasses(jni::ref<java::util::Collection> ics) { return call_method<"setAllInnerClasses", void>(ics); }
	jni::ref<com::sun::java::util::jar::pack::Package_InnerClass> getGlobalInnerClass(jni::ref<com::sun::java::util::jar::pack::ConstantPool_Entry> thisClass) { return call_method<"getGlobalInnerClass", jni::ref<com::sun::java::util::jar::pack::Package_InnerClass>>(thisClass); }
	void trimToSize() { return call_method<"trimToSize", void>(); }
	void strip(jni::ref<java::lang::String> attrName) { return call_method<"strip", void>(attrName); }
	void stripConstantFields() { return call_method<"stripConstantFields", void>(); }

protected:

	Package(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JAVA_UTIL_JAR_PACK_PACKAGE
