// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_JAVA_UTIL_JAR_PACK_CONSTANTPOOL_FWD
#define SCAPIX_JAVA_API_COM_SUN_JAVA_UTIL_JAR_PACK_CONSTANTPOOL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::java::util::jar::pack { class ConstantPool; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::java::util::jar::pack::ConstantPool>
{
	static constexpr fixed_string class_name = "com/sun/java/util/jar/pack/ConstantPool";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JAVA_UTIL_JAR_PACK_CONSTANTPOOL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_JAVA_UTIL_JAR_PACK_CONSTANTPOOL)
#define SCAPIX_JAVA_API_COM_SUN_JAVA_UTIL_JAR_PACK_CONSTANTPOOL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/com/sun/java/util/jar/pack/ConstantPool_BootstrapMethodEntry.h>
#include <scapix/java_api/com/sun/java/util/jar/pack/ConstantPool_ClassEntry.h>
#include <scapix/java_api/com/sun/java/util/jar/pack/ConstantPool_DescriptorEntry.h>
#include <scapix/java_api/com/sun/java/util/jar/pack/ConstantPool_Entry.h>
#include <scapix/java_api/com/sun/java/util/jar/pack/ConstantPool_Index.h>
#include <scapix/java_api/com/sun/java/util/jar/pack/ConstantPool_InvokeDynamicEntry.h>
#include <scapix/java_api/com/sun/java/util/jar/pack/ConstantPool_LiteralEntry.h>
#include <scapix/java_api/com/sun/java/util/jar/pack/ConstantPool_MemberEntry.h>
#include <scapix/java_api/com/sun/java/util/jar/pack/ConstantPool_MethodHandleEntry.h>
#include <scapix/java_api/com/sun/java/util/jar/pack/ConstantPool_MethodTypeEntry.h>
#include <scapix/java_api/com/sun/java/util/jar/pack/ConstantPool_SignatureEntry.h>
#include <scapix/java_api/com/sun/java/util/jar/pack/ConstantPool_StringEntry.h>
#include <scapix/java_api/com/sun/java/util/jar/pack/ConstantPool_Utf8Entry.h>
#include <scapix/java_api/java/lang/Comparable.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Collection.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/java/util/Set.h>
#include <scapix/java_api/com/sun/java/util/jar/pack/ConstantPool_IndexGroup.h>
#include <scapix/java_api/com/sun/java/util/jar/pack/ConstantPool_NumberEntry.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class com::sun::java::util::jar::pack::ConstantPool : public jni::object_base<"com/sun/java/util/jar/pack/ConstantPool",
	java::lang::Object>
{
public:

	using IndexGroup = ConstantPool_IndexGroup;
	using Index = ConstantPool_Index;
	using BootstrapMethodEntry = ConstantPool_BootstrapMethodEntry;
	using InvokeDynamicEntry = ConstantPool_InvokeDynamicEntry;
	using MethodTypeEntry = ConstantPool_MethodTypeEntry;
	using MethodHandleEntry = ConstantPool_MethodHandleEntry;
	using SignatureEntry = ConstantPool_SignatureEntry;
	using MemberEntry = ConstantPool_MemberEntry;
	using DescriptorEntry = ConstantPool_DescriptorEntry;
	using ClassEntry = ConstantPool_ClassEntry;
	using StringEntry = ConstantPool_StringEntry;
	using NumberEntry = ConstantPool_NumberEntry;
	using LiteralEntry = ConstantPool_LiteralEntry;
	using Utf8Entry = ConstantPool_Utf8Entry;
	using Entry = ConstantPool_Entry;

	static jni::ref<com::sun::java::util::jar::pack::ConstantPool_Utf8Entry> getUtf8Entry(jni::ref<java::lang::String> value) { return call_static_method<"getUtf8Entry", jni::ref<com::sun::java::util::jar::pack::ConstantPool_Utf8Entry>>(value); }
	static jni::ref<com::sun::java::util::jar::pack::ConstantPool_ClassEntry> getClassEntry(jni::ref<java::lang::String> name) { return call_static_method<"getClassEntry", jni::ref<com::sun::java::util::jar::pack::ConstantPool_ClassEntry>>(name); }
	static jni::ref<com::sun::java::util::jar::pack::ConstantPool_LiteralEntry> getLiteralEntry(jni::ref<java::lang::Comparable> value) { return call_static_method<"getLiteralEntry", jni::ref<com::sun::java::util::jar::pack::ConstantPool_LiteralEntry>>(value); }
	static jni::ref<com::sun::java::util::jar::pack::ConstantPool_StringEntry> getStringEntry(jni::ref<java::lang::String> value) { return call_static_method<"getStringEntry", jni::ref<com::sun::java::util::jar::pack::ConstantPool_StringEntry>>(value); }
	static jni::ref<com::sun::java::util::jar::pack::ConstantPool_SignatureEntry> getSignatureEntry(jni::ref<java::lang::String> type) { return call_static_method<"getSignatureEntry", jni::ref<com::sun::java::util::jar::pack::ConstantPool_SignatureEntry>>(type); }
	static jni::ref<com::sun::java::util::jar::pack::ConstantPool_SignatureEntry> getSignatureEntry(jni::ref<com::sun::java::util::jar::pack::ConstantPool_Utf8Entry> formRef, jni::ref<jni::array<com::sun::java::util::jar::pack::ConstantPool_ClassEntry>> classRefs) { return call_static_method<"getSignatureEntry", jni::ref<com::sun::java::util::jar::pack::ConstantPool_SignatureEntry>>(formRef, classRefs); }
	static jni::ref<com::sun::java::util::jar::pack::ConstantPool_DescriptorEntry> getDescriptorEntry(jni::ref<com::sun::java::util::jar::pack::ConstantPool_Utf8Entry> nameRef, jni::ref<com::sun::java::util::jar::pack::ConstantPool_SignatureEntry> typeRef) { return call_static_method<"getDescriptorEntry", jni::ref<com::sun::java::util::jar::pack::ConstantPool_DescriptorEntry>>(nameRef, typeRef); }
	static jni::ref<com::sun::java::util::jar::pack::ConstantPool_DescriptorEntry> getDescriptorEntry(jni::ref<com::sun::java::util::jar::pack::ConstantPool_Utf8Entry> nameRef, jni::ref<com::sun::java::util::jar::pack::ConstantPool_Utf8Entry> typeRef) { return call_static_method<"getDescriptorEntry", jni::ref<com::sun::java::util::jar::pack::ConstantPool_DescriptorEntry>>(nameRef, typeRef); }
	static jni::ref<com::sun::java::util::jar::pack::ConstantPool_MemberEntry> getMemberEntry(jbyte tag, jni::ref<com::sun::java::util::jar::pack::ConstantPool_ClassEntry> classRef, jni::ref<com::sun::java::util::jar::pack::ConstantPool_DescriptorEntry> descRef) { return call_static_method<"getMemberEntry", jni::ref<com::sun::java::util::jar::pack::ConstantPool_MemberEntry>>(tag, classRef, descRef); }
	static jni::ref<com::sun::java::util::jar::pack::ConstantPool_MethodHandleEntry> getMethodHandleEntry(jbyte refKind, jni::ref<com::sun::java::util::jar::pack::ConstantPool_MemberEntry> memRef) { return call_static_method<"getMethodHandleEntry", jni::ref<com::sun::java::util::jar::pack::ConstantPool_MethodHandleEntry>>(refKind, memRef); }
	static jni::ref<com::sun::java::util::jar::pack::ConstantPool_MethodTypeEntry> getMethodTypeEntry(jni::ref<com::sun::java::util::jar::pack::ConstantPool_SignatureEntry> sigRef) { return call_static_method<"getMethodTypeEntry", jni::ref<com::sun::java::util::jar::pack::ConstantPool_MethodTypeEntry>>(sigRef); }
	static jni::ref<com::sun::java::util::jar::pack::ConstantPool_MethodTypeEntry> getMethodTypeEntry(jni::ref<com::sun::java::util::jar::pack::ConstantPool_Utf8Entry> typeRef) { return call_static_method<"getMethodTypeEntry", jni::ref<com::sun::java::util::jar::pack::ConstantPool_MethodTypeEntry>>(typeRef); }
	static jni::ref<com::sun::java::util::jar::pack::ConstantPool_InvokeDynamicEntry> getInvokeDynamicEntry(jni::ref<com::sun::java::util::jar::pack::ConstantPool_BootstrapMethodEntry> bssRef, jni::ref<com::sun::java::util::jar::pack::ConstantPool_DescriptorEntry> descRef) { return call_static_method<"getInvokeDynamicEntry", jni::ref<com::sun::java::util::jar::pack::ConstantPool_InvokeDynamicEntry>>(bssRef, descRef); }
	static jni::ref<com::sun::java::util::jar::pack::ConstantPool_BootstrapMethodEntry> getBootstrapMethodEntry(jni::ref<com::sun::java::util::jar::pack::ConstantPool_MethodHandleEntry> bsmRef, jni::ref<jni::array<com::sun::java::util::jar::pack::ConstantPool_Entry>> argRefs) { return call_static_method<"getBootstrapMethodEntry", jni::ref<com::sun::java::util::jar::pack::ConstantPool_BootstrapMethodEntry>>(bsmRef, argRefs); }
	static jni::ref<com::sun::java::util::jar::pack::ConstantPool_Index> makeIndex(jni::ref<java::lang::String> debugName, jni::ref<jni::array<com::sun::java::util::jar::pack::ConstantPool_Entry>> cpMap) { return call_static_method<"makeIndex", jni::ref<com::sun::java::util::jar::pack::ConstantPool_Index>>(debugName, cpMap); }
	static jni::ref<com::sun::java::util::jar::pack::ConstantPool_Index> makeIndex(jni::ref<java::lang::String> debugName, jni::ref<java::util::Collection> cpMapList) { return call_static_method<"makeIndex", jni::ref<com::sun::java::util::jar::pack::ConstantPool_Index>>(debugName, cpMapList); }
	static void sort(jni::ref<com::sun::java::util::jar::pack::ConstantPool_Index> ix) { return call_static_method<"sort", void>(ix); }
	static jni::ref<jni::array<com::sun::java::util::jar::pack::ConstantPool_Index>> partition(jni::ref<com::sun::java::util::jar::pack::ConstantPool_Index> ix, jni::ref<jni::array<jint>> keys) { return call_static_method<"partition", jni::ref<jni::array<com::sun::java::util::jar::pack::ConstantPool_Index>>>(ix, keys); }
	static jni::ref<jni::array<com::sun::java::util::jar::pack::ConstantPool_Index>> partitionByTag(jni::ref<com::sun::java::util::jar::pack::ConstantPool_Index> ix) { return call_static_method<"partitionByTag", jni::ref<jni::array<com::sun::java::util::jar::pack::ConstantPool_Index>>>(ix); }
	static void completeReferencesIn(jni::ref<java::util::Set> cpRefs, jboolean flattenSigs) { return call_static_method<"completeReferencesIn", void>(cpRefs, flattenSigs); }
	static void completeReferencesIn(jni::ref<java::util::Set> cpRefs, jboolean flattenSigs, jni::ref<java::util::List> bsms) { return call_static_method<"completeReferencesIn", void>(cpRefs, flattenSigs, bsms); }
	static jni::ref<java::lang::String> tagName(jint tag) { return call_static_method<"tagName", jni::ref<java::lang::String>>(tag); }
	static jni::ref<java::lang::String> refKindName(jint refKind) { return call_static_method<"refKindName", jni::ref<java::lang::String>>(refKind); }

protected:

	ConstantPool(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_JAVA_UTIL_JAR_PACK_CONSTANTPOOL
