// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_ACCESS_JAVANETSOCKETACCESS_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_ACCESS_JAVANETSOCKETACCESS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::access { class JavaNetSocketAccess; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::access::JavaNetSocketAccess>
{
	static constexpr fixed_string class_name = "jdk/internal/access/JavaNetSocketAccess";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_ACCESS_JAVANETSOCKETACCESS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_ACCESS_JAVANETSOCKETACCESS)
#define SCAPIX_JAVA_API_JDK_INTERNAL_ACCESS_JAVANETSOCKETACCESS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/net/ServerSocket.h>
#include <scapix/java_api/java/net/SocketImpl.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::access::JavaNetSocketAccess : public jni::object_base<"jdk/internal/access/JavaNetSocketAccess",
	java::lang::Object>
{
public:

	jni::ref<java::net::ServerSocket> newServerSocket(jni::ref<java::net::SocketImpl> p1) { return call_method<"newServerSocket", jni::ref<java::net::ServerSocket>>(p1); }
	jni::ref<java::net::SocketImpl> newSocketImpl(jni::ref<java::lang::Class> p1) { return call_method<"newSocketImpl", jni::ref<java::net::SocketImpl>>(p1); }

protected:

	JavaNetSocketAccess(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_ACCESS_JAVANETSOCKETACCESS
