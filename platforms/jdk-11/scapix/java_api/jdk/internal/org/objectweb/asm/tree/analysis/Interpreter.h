// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_ORG_OBJECTWEB_ASM_TREE_ANALYSIS_INTERPRETER_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_ORG_OBJECTWEB_ASM_TREE_ANALYSIS_INTERPRETER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::org::objectweb::asm_::tree::analysis { class Interpreter; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::org::objectweb::asm_::tree::analysis::Interpreter>
{
	static constexpr fixed_string class_name = "jdk/internal/org/objectweb/asm/tree/analysis/Interpreter";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_ORG_OBJECTWEB_ASM_TREE_ANALYSIS_INTERPRETER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_ORG_OBJECTWEB_ASM_TREE_ANALYSIS_INTERPRETER)
#define SCAPIX_JAVA_API_JDK_INTERNAL_ORG_OBJECTWEB_ASM_TREE_ANALYSIS_INTERPRETER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/jdk/internal/org/objectweb/asm/Type.h>
#include <scapix/java_api/jdk/internal/org/objectweb/asm/tree/AbstractInsnNode.h>
#include <scapix/java_api/jdk/internal/org/objectweb/asm/tree/analysis/Value.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::org::objectweb::asm_::tree::analysis::Interpreter : public jni::object_base<"jdk/internal/org/objectweb/asm/tree/analysis/Interpreter",
	java::lang::Object>
{
public:

	jni::ref<jdk::internal::org::objectweb::asm_::tree::analysis::Value> newValue(jni::ref<jdk::internal::org::objectweb::asm_::Type> p1) { return call_method<"newValue", jni::ref<jdk::internal::org::objectweb::asm_::tree::analysis::Value>>(p1); }
	jni::ref<jdk::internal::org::objectweb::asm_::tree::analysis::Value> newOperation(jni::ref<jdk::internal::org::objectweb::asm_::tree::AbstractInsnNode> p1) { return call_method<"newOperation", jni::ref<jdk::internal::org::objectweb::asm_::tree::analysis::Value>>(p1); }
	jni::ref<jdk::internal::org::objectweb::asm_::tree::analysis::Value> copyOperation(jni::ref<jdk::internal::org::objectweb::asm_::tree::AbstractInsnNode> p1, jni::ref<jdk::internal::org::objectweb::asm_::tree::analysis::Value> p2) { return call_method<"copyOperation", jni::ref<jdk::internal::org::objectweb::asm_::tree::analysis::Value>>(p1, p2); }
	jni::ref<jdk::internal::org::objectweb::asm_::tree::analysis::Value> unaryOperation(jni::ref<jdk::internal::org::objectweb::asm_::tree::AbstractInsnNode> p1, jni::ref<jdk::internal::org::objectweb::asm_::tree::analysis::Value> p2) { return call_method<"unaryOperation", jni::ref<jdk::internal::org::objectweb::asm_::tree::analysis::Value>>(p1, p2); }
	jni::ref<jdk::internal::org::objectweb::asm_::tree::analysis::Value> binaryOperation(jni::ref<jdk::internal::org::objectweb::asm_::tree::AbstractInsnNode> p1, jni::ref<jdk::internal::org::objectweb::asm_::tree::analysis::Value> p2, jni::ref<jdk::internal::org::objectweb::asm_::tree::analysis::Value> p3) { return call_method<"binaryOperation", jni::ref<jdk::internal::org::objectweb::asm_::tree::analysis::Value>>(p1, p2, p3); }
	jni::ref<jdk::internal::org::objectweb::asm_::tree::analysis::Value> ternaryOperation(jni::ref<jdk::internal::org::objectweb::asm_::tree::AbstractInsnNode> p1, jni::ref<jdk::internal::org::objectweb::asm_::tree::analysis::Value> p2, jni::ref<jdk::internal::org::objectweb::asm_::tree::analysis::Value> p3, jni::ref<jdk::internal::org::objectweb::asm_::tree::analysis::Value> p4) { return call_method<"ternaryOperation", jni::ref<jdk::internal::org::objectweb::asm_::tree::analysis::Value>>(p1, p2, p3, p4); }
	jni::ref<jdk::internal::org::objectweb::asm_::tree::analysis::Value> naryOperation(jni::ref<jdk::internal::org::objectweb::asm_::tree::AbstractInsnNode> p1, jni::ref<java::util::List> p2) { return call_method<"naryOperation", jni::ref<jdk::internal::org::objectweb::asm_::tree::analysis::Value>>(p1, p2); }
	void returnOperation(jni::ref<jdk::internal::org::objectweb::asm_::tree::AbstractInsnNode> p1, jni::ref<jdk::internal::org::objectweb::asm_::tree::analysis::Value> p2, jni::ref<jdk::internal::org::objectweb::asm_::tree::analysis::Value> p3) { return call_method<"returnOperation", void>(p1, p2, p3); }
	jni::ref<jdk::internal::org::objectweb::asm_::tree::analysis::Value> merge(jni::ref<jdk::internal::org::objectweb::asm_::tree::analysis::Value> p1, jni::ref<jdk::internal::org::objectweb::asm_::tree::analysis::Value> p2) { return call_method<"merge", jni::ref<jdk::internal::org::objectweb::asm_::tree::analysis::Value>>(p1, p2); }

protected:

	Interpreter(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_ORG_OBJECTWEB_ASM_TREE_ANALYSIS_INTERPRETER
