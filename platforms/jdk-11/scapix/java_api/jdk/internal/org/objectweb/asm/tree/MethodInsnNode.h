// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/jdk/internal/org/objectweb/asm/tree/AbstractInsnNode.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_ORG_OBJECTWEB_ASM_TREE_METHODINSNNODE_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_ORG_OBJECTWEB_ASM_TREE_METHODINSNNODE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::org::objectweb::asm_::tree { class MethodInsnNode; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::org::objectweb::asm_::tree::MethodInsnNode>
{
	static constexpr fixed_string class_name = "jdk/internal/org/objectweb/asm/tree/MethodInsnNode";
	using base_classes = std::tuple<scapix::java_api::jdk::internal::org::objectweb::asm_::tree::AbstractInsnNode>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_ORG_OBJECTWEB_ASM_TREE_METHODINSNNODE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_ORG_OBJECTWEB_ASM_TREE_METHODINSNNODE)
#define SCAPIX_JAVA_API_JDK_INTERNAL_ORG_OBJECTWEB_ASM_TREE_METHODINSNNODE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Map.h>
#include <scapix/java_api/jdk/internal/org/objectweb/asm/MethodVisitor.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::org::objectweb::asm_::tree::MethodInsnNode : public jni::object_base<"jdk/internal/org/objectweb/asm/tree/MethodInsnNode",
	jdk::internal::org::objectweb::asm_::tree::AbstractInsnNode>
{
public:

	jni::ref<java::lang::String> owner() { return get_field<"owner", jni::ref<java::lang::String>>(); }
	void owner(jni::ref<java::lang::String> v) { set_field<"owner", jni::ref<java::lang::String>>(v); }
	jni::ref<java::lang::String> name() { return get_field<"name", jni::ref<java::lang::String>>(); }
	void name(jni::ref<java::lang::String> v) { set_field<"name", jni::ref<java::lang::String>>(v); }
	jni::ref<java::lang::String> desc() { return get_field<"desc", jni::ref<java::lang::String>>(); }
	void desc(jni::ref<java::lang::String> v) { set_field<"desc", jni::ref<java::lang::String>>(v); }
	jboolean itf() { return get_field<"itf", jboolean>(); }
	void itf(jboolean v) { set_field<"itf", jboolean>(v); }

	static jni::ref<jdk::internal::org::objectweb::asm_::tree::MethodInsnNode> new_object(jint opcode, jni::ref<java::lang::String> owner, jni::ref<java::lang::String> name, jni::ref<java::lang::String> desc) { return base_::new_object(opcode, owner, name, desc); }
	static jni::ref<jdk::internal::org::objectweb::asm_::tree::MethodInsnNode> new_object(jint opcode, jni::ref<java::lang::String> owner, jni::ref<java::lang::String> name, jni::ref<java::lang::String> desc, jboolean itf) { return base_::new_object(opcode, owner, name, desc, itf); }
	void setOpcode(jint opcode) { return call_method<"setOpcode", void>(opcode); }
	jint getType() { return call_method<"getType", jint>(); }
	void accept(jni::ref<jdk::internal::org::objectweb::asm_::MethodVisitor> mv) { return call_method<"accept", void>(mv); }
	jni::ref<jdk::internal::org::objectweb::asm_::tree::AbstractInsnNode> clone(jni::ref<java::util::Map> labels) { return call_method<"clone", jni::ref<jdk::internal::org::objectweb::asm_::tree::AbstractInsnNode>>(labels); }

protected:

	MethodInsnNode(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_ORG_OBJECTWEB_ASM_TREE_METHODINSNNODE
