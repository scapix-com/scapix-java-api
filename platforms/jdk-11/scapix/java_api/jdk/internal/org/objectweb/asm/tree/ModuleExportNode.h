// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_ORG_OBJECTWEB_ASM_TREE_MODULEEXPORTNODE_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_ORG_OBJECTWEB_ASM_TREE_MODULEEXPORTNODE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::org::objectweb::asm_::tree { class ModuleExportNode; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::org::objectweb::asm_::tree::ModuleExportNode>
{
	static constexpr fixed_string class_name = "jdk/internal/org/objectweb/asm/tree/ModuleExportNode";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_ORG_OBJECTWEB_ASM_TREE_MODULEEXPORTNODE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_ORG_OBJECTWEB_ASM_TREE_MODULEEXPORTNODE)
#define SCAPIX_JAVA_API_JDK_INTERNAL_ORG_OBJECTWEB_ASM_TREE_MODULEEXPORTNODE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/jdk/internal/org/objectweb/asm/ModuleVisitor.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::org::objectweb::asm_::tree::ModuleExportNode : public jni::object_base<"jdk/internal/org/objectweb/asm/tree/ModuleExportNode",
	java::lang::Object>
{
public:

	jni::ref<java::lang::String> packaze() { return get_field<"packaze", jni::ref<java::lang::String>>(); }
	void packaze(jni::ref<java::lang::String> v) { set_field<"packaze", jni::ref<java::lang::String>>(v); }
	jint access() { return get_field<"access", jint>(); }
	void access(jint v) { set_field<"access", jint>(v); }
	jni::ref<java::util::List> modules() { return get_field<"modules", jni::ref<java::util::List>>(); }
	void modules(jni::ref<java::util::List> v) { set_field<"modules", jni::ref<java::util::List>>(v); }

	static jni::ref<jdk::internal::org::objectweb::asm_::tree::ModuleExportNode> new_object(jni::ref<java::lang::String> packaze, jint access, jni::ref<java::util::List> modules) { return base_::new_object(packaze, access, modules); }
	void accept(jni::ref<jdk::internal::org::objectweb::asm_::ModuleVisitor> mv) { return call_method<"accept", void>(mv); }

protected:

	ModuleExportNode(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_ORG_OBJECTWEB_ASM_TREE_MODULEEXPORTNODE
