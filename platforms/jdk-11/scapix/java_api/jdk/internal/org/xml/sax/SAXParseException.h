// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/jdk/internal/org/xml/sax/SAXException.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_ORG_XML_SAX_SAXPARSEEXCEPTION_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_ORG_XML_SAX_SAXPARSEEXCEPTION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::org::xml::sax { class SAXParseException; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::org::xml::sax::SAXParseException>
{
	static constexpr fixed_string class_name = "jdk/internal/org/xml/sax/SAXParseException";
	using base_classes = std::tuple<scapix::java_api::jdk::internal::org::xml::sax::SAXException>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_ORG_XML_SAX_SAXPARSEEXCEPTION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_ORG_XML_SAX_SAXPARSEEXCEPTION)
#define SCAPIX_JAVA_API_JDK_INTERNAL_ORG_XML_SAX_SAXPARSEEXCEPTION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Exception.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/jdk/internal/org/xml/sax/Locator.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::org::xml::sax::SAXParseException : public jni::object_base<"jdk/internal/org/xml/sax/SAXParseException",
	jdk::internal::org::xml::sax::SAXException>
{
public:

	static jni::ref<jdk::internal::org::xml::sax::SAXParseException> new_object(jni::ref<java::lang::String> message, jni::ref<jdk::internal::org::xml::sax::Locator> locator) { return base_::new_object(message, locator); }
	static jni::ref<jdk::internal::org::xml::sax::SAXParseException> new_object(jni::ref<java::lang::String> message, jni::ref<jdk::internal::org::xml::sax::Locator> locator, jni::ref<java::lang::Exception> e) { return base_::new_object(message, locator, e); }
	static jni::ref<jdk::internal::org::xml::sax::SAXParseException> new_object(jni::ref<java::lang::String> message, jni::ref<java::lang::String> publicId, jni::ref<java::lang::String> systemId, jint lineNumber, jint columnNumber) { return base_::new_object(message, publicId, systemId, lineNumber, columnNumber); }
	static jni::ref<jdk::internal::org::xml::sax::SAXParseException> new_object(jni::ref<java::lang::String> message, jni::ref<java::lang::String> publicId, jni::ref<java::lang::String> systemId, jint lineNumber, jint columnNumber, jni::ref<java::lang::Exception> e) { return base_::new_object(message, publicId, systemId, lineNumber, columnNumber, e); }
	jni::ref<java::lang::String> getPublicId() { return call_method<"getPublicId", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getSystemId() { return call_method<"getSystemId", jni::ref<java::lang::String>>(); }
	jint getLineNumber() { return call_method<"getLineNumber", jint>(); }
	jint getColumnNumber() { return call_method<"getColumnNumber", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	SAXParseException(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_ORG_XML_SAX_SAXPARSEEXCEPTION
