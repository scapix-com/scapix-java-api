// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Enum.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_JRTFS_JRTFILEATTRIBUTEVIEW_ATTRID_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_JRTFS_JRTFILEATTRIBUTEVIEW_ATTRID_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::jrtfs { class JrtFileAttributeView_AttrID; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::jrtfs::JrtFileAttributeView_AttrID>
{
	static constexpr fixed_string class_name = "jdk/internal/jrtfs/JrtFileAttributeView$AttrID";
	using base_classes = std::tuple<scapix::java_api::java::lang::Enum>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_JRTFS_JRTFILEATTRIBUTEVIEW_ATTRID_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_JRTFS_JRTFILEATTRIBUTEVIEW_ATTRID)
#define SCAPIX_JAVA_API_JDK_INTERNAL_JRTFS_JRTFILEATTRIBUTEVIEW_ATTRID

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class jdk::internal::jrtfs::JrtFileAttributeView_AttrID : public jni::object_base<"jdk/internal/jrtfs/JrtFileAttributeView$AttrID",
	java::lang::Enum>
{
public:

	static jni::ref<jdk::internal::jrtfs::JrtFileAttributeView_AttrID> size() { return get_static_field<"size", jni::ref<jdk::internal::jrtfs::JrtFileAttributeView_AttrID>>(); }
	static jni::ref<jdk::internal::jrtfs::JrtFileAttributeView_AttrID> creationTime() { return get_static_field<"creationTime", jni::ref<jdk::internal::jrtfs::JrtFileAttributeView_AttrID>>(); }
	static jni::ref<jdk::internal::jrtfs::JrtFileAttributeView_AttrID> lastAccessTime() { return get_static_field<"lastAccessTime", jni::ref<jdk::internal::jrtfs::JrtFileAttributeView_AttrID>>(); }
	static jni::ref<jdk::internal::jrtfs::JrtFileAttributeView_AttrID> lastModifiedTime() { return get_static_field<"lastModifiedTime", jni::ref<jdk::internal::jrtfs::JrtFileAttributeView_AttrID>>(); }
	static jni::ref<jdk::internal::jrtfs::JrtFileAttributeView_AttrID> isDirectory() { return get_static_field<"isDirectory", jni::ref<jdk::internal::jrtfs::JrtFileAttributeView_AttrID>>(); }
	static jni::ref<jdk::internal::jrtfs::JrtFileAttributeView_AttrID> isRegularFile() { return get_static_field<"isRegularFile", jni::ref<jdk::internal::jrtfs::JrtFileAttributeView_AttrID>>(); }
	static jni::ref<jdk::internal::jrtfs::JrtFileAttributeView_AttrID> isSymbolicLink() { return get_static_field<"isSymbolicLink", jni::ref<jdk::internal::jrtfs::JrtFileAttributeView_AttrID>>(); }
	static jni::ref<jdk::internal::jrtfs::JrtFileAttributeView_AttrID> isOther() { return get_static_field<"isOther", jni::ref<jdk::internal::jrtfs::JrtFileAttributeView_AttrID>>(); }
	static jni::ref<jdk::internal::jrtfs::JrtFileAttributeView_AttrID> fileKey() { return get_static_field<"fileKey", jni::ref<jdk::internal::jrtfs::JrtFileAttributeView_AttrID>>(); }
	static jni::ref<jdk::internal::jrtfs::JrtFileAttributeView_AttrID> compressedSize() { return get_static_field<"compressedSize", jni::ref<jdk::internal::jrtfs::JrtFileAttributeView_AttrID>>(); }
	static jni::ref<jdk::internal::jrtfs::JrtFileAttributeView_AttrID> extension() { return get_static_field<"extension", jni::ref<jdk::internal::jrtfs::JrtFileAttributeView_AttrID>>(); }

	static jni::ref<jni::array<jdk::internal::jrtfs::JrtFileAttributeView_AttrID>> values() { return call_static_method<"values", jni::ref<jni::array<jdk::internal::jrtfs::JrtFileAttributeView_AttrID>>>(); }
	static jni::ref<jdk::internal::jrtfs::JrtFileAttributeView_AttrID> valueOf(jni::ref<java::lang::String> name) { return call_static_method<"valueOf", jni::ref<jdk::internal::jrtfs::JrtFileAttributeView_AttrID>>(name); }

protected:

	JrtFileAttributeView_AttrID(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_JRTFS_JRTFILEATTRIBUTEVIEW_ATTRID
