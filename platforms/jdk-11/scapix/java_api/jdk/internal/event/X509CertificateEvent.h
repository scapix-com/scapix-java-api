// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/jdk/internal/event/Event.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_EVENT_X509CERTIFICATEEVENT_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_EVENT_X509CERTIFICATEEVENT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::event { class X509CertificateEvent; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::event::X509CertificateEvent>
{
	static constexpr fixed_string class_name = "jdk/internal/event/X509CertificateEvent";
	using base_classes = std::tuple<scapix::java_api::jdk::internal::event::Event>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_EVENT_X509CERTIFICATEEVENT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_EVENT_X509CERTIFICATEEVENT)
#define SCAPIX_JAVA_API_JDK_INTERNAL_EVENT_X509CERTIFICATEEVENT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::event::X509CertificateEvent : public jni::object_base<"jdk/internal/event/X509CertificateEvent",
	jdk::internal::event::Event>
{
public:

	jni::ref<java::lang::String> algorithm() { return get_field<"algorithm", jni::ref<java::lang::String>>(); }
	void algorithm(jni::ref<java::lang::String> v) { set_field<"algorithm", jni::ref<java::lang::String>>(v); }
	jni::ref<java::lang::String> serialNumber() { return get_field<"serialNumber", jni::ref<java::lang::String>>(); }
	void serialNumber(jni::ref<java::lang::String> v) { set_field<"serialNumber", jni::ref<java::lang::String>>(v); }
	jni::ref<java::lang::String> subject() { return get_field<"subject", jni::ref<java::lang::String>>(); }
	void subject(jni::ref<java::lang::String> v) { set_field<"subject", jni::ref<java::lang::String>>(v); }
	jni::ref<java::lang::String> issuer() { return get_field<"issuer", jni::ref<java::lang::String>>(); }
	void issuer(jni::ref<java::lang::String> v) { set_field<"issuer", jni::ref<java::lang::String>>(v); }
	jni::ref<java::lang::String> keyType() { return get_field<"keyType", jni::ref<java::lang::String>>(); }
	void keyType(jni::ref<java::lang::String> v) { set_field<"keyType", jni::ref<java::lang::String>>(v); }
	jint keyLength() { return get_field<"keyLength", jint>(); }
	void keyLength(jint v) { set_field<"keyLength", jint>(v); }
	jlong certificateId() { return get_field<"certificateId", jlong>(); }
	void certificateId(jlong v) { set_field<"certificateId", jlong>(v); }
	jlong validFrom() { return get_field<"validFrom", jlong>(); }
	void validFrom(jlong v) { set_field<"validFrom", jlong>(v); }
	jlong validUntil() { return get_field<"validUntil", jlong>(); }
	void validUntil(jlong v) { set_field<"validUntil", jlong>(v); }

	static jni::ref<jdk::internal::event::X509CertificateEvent> new_object() { return base_::new_object(); }
	static jboolean isTurnedOn() { return call_static_method<"isTurnedOn", jboolean>(); }

protected:

	X509CertificateEvent(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_EVENT_X509CERTIFICATEEVENT
