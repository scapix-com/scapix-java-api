// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_MATH_FLOATINGDECIMAL_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_MATH_FLOATINGDECIMAL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::math { class FloatingDecimal; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::math::FloatingDecimal>
{
	static constexpr fixed_string class_name = "jdk/internal/math/FloatingDecimal";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_MATH_FLOATINGDECIMAL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_MATH_FLOATINGDECIMAL)
#define SCAPIX_JAVA_API_JDK_INTERNAL_MATH_FLOATINGDECIMAL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Appendable.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/jdk/internal/math/FloatingDecimal_BinaryToASCIIConverter.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::math::FloatingDecimal : public jni::object_base<"jdk/internal/math/FloatingDecimal",
	java::lang::Object>
{
public:

	using BinaryToASCIIConverter = FloatingDecimal_BinaryToASCIIConverter;

	static jni::ref<jdk::internal::math::FloatingDecimal> new_object() { return base_::new_object(); }
	static jni::ref<java::lang::String> toJavaFormatString(jdouble d) { return call_static_method<"toJavaFormatString", jni::ref<java::lang::String>>(d); }
	static jni::ref<java::lang::String> toJavaFormatString(jfloat f) { return call_static_method<"toJavaFormatString", jni::ref<java::lang::String>>(f); }
	static void appendTo(jdouble d, jni::ref<java::lang::Appendable> p2) { return call_static_method<"appendTo", void>(d, p2); }
	static void appendTo(jfloat f, jni::ref<java::lang::Appendable> buf) { return call_static_method<"appendTo", void>(f, buf); }
	static jdouble parseDouble(jni::ref<java::lang::String> s) { return call_static_method<"parseDouble", jdouble>(s); }
	static jfloat parseFloat(jni::ref<java::lang::String> s) { return call_static_method<"parseFloat", jfloat>(s); }
	static jni::ref<jdk::internal::math::FloatingDecimal_BinaryToASCIIConverter> getBinaryToASCIIConverter(jdouble d) { return call_static_method<"getBinaryToASCIIConverter", jni::ref<jdk::internal::math::FloatingDecimal_BinaryToASCIIConverter>>(d); }

protected:

	FloatingDecimal(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_MATH_FLOATINGDECIMAL
