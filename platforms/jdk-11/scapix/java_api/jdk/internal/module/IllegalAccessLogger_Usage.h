// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_MODULE_ILLEGALACCESSLOGGER_USAGE_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_MODULE_ILLEGALACCESSLOGGER_USAGE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::module { class IllegalAccessLogger_Usage; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::module::IllegalAccessLogger_Usage>
{
	static constexpr fixed_string class_name = "jdk/internal/module/IllegalAccessLogger$Usage";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_MODULE_ILLEGALACCESSLOGGER_USAGE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_MODULE_ILLEGALACCESSLOGGER_USAGE)
#define SCAPIX_JAVA_API_JDK_INTERNAL_MODULE_ILLEGALACCESSLOGGER_USAGE

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class jdk::internal::module::IllegalAccessLogger_Usage : public jni::object_base<"jdk/internal/module/IllegalAccessLogger$Usage",
	java::lang::Object>
{
public:

	jint hashCode() { return call_method<"hashCode", jint>(); }
	jboolean equals(jni::ref<java::lang::Object> ob) { return call_method<"equals", jboolean>(ob); }

protected:

	IllegalAccessLogger_Usage(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_MODULE_ILLEGALACCESSLOGGER_USAGE
