// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_MODULE_ILLEGALACCESSLOGGER_BUILDER_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_MODULE_ILLEGALACCESSLOGGER_BUILDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::module { class IllegalAccessLogger_Builder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::module::IllegalAccessLogger_Builder>
{
	static constexpr fixed_string class_name = "jdk/internal/module/IllegalAccessLogger$Builder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_MODULE_ILLEGALACCESSLOGGER_BUILDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_MODULE_ILLEGALACCESSLOGGER_BUILDER)
#define SCAPIX_JAVA_API_JDK_INTERNAL_MODULE_ILLEGALACCESSLOGGER_BUILDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/PrintStream.h>
#include <scapix/java_api/java/lang/Module.h>
#include <scapix/java_api/java/util/Set.h>
#include <scapix/java_api/jdk/internal/module/IllegalAccessLogger_Mode.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::module::IllegalAccessLogger_Builder : public jni::object_base<"jdk/internal/module/IllegalAccessLogger$Builder",
	java::lang::Object>
{
public:

	static jni::ref<jdk::internal::module::IllegalAccessLogger_Builder> new_object(jni::ref<jdk::internal::module::IllegalAccessLogger_Mode> mode, jni::ref<java::io::PrintStream> warningStream) { return base_::new_object(mode, warningStream); }
	jni::ref<jdk::internal::module::IllegalAccessLogger_Builder> logAccessToConcealedPackages(jni::ref<java::lang::Module> m, jni::ref<java::util::Set> packages) { return call_method<"logAccessToConcealedPackages", jni::ref<jdk::internal::module::IllegalAccessLogger_Builder>>(m, packages); }
	jni::ref<jdk::internal::module::IllegalAccessLogger_Builder> logAccessToExportedPackages(jni::ref<java::lang::Module> m, jni::ref<java::util::Set> packages) { return call_method<"logAccessToExportedPackages", jni::ref<jdk::internal::module::IllegalAccessLogger_Builder>>(m, packages); }
	void complete() { return call_method<"complete", void>(); }

protected:

	IllegalAccessLogger_Builder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_MODULE_ILLEGALACCESSLOGGER_BUILDER
