// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Enum.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_MODULE_ILLEGALACCESSLOGGER_MODE_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_MODULE_ILLEGALACCESSLOGGER_MODE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::module { class IllegalAccessLogger_Mode; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::module::IllegalAccessLogger_Mode>
{
	static constexpr fixed_string class_name = "jdk/internal/module/IllegalAccessLogger$Mode";
	using base_classes = std::tuple<scapix::java_api::java::lang::Enum>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_MODULE_ILLEGALACCESSLOGGER_MODE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_MODULE_ILLEGALACCESSLOGGER_MODE)
#define SCAPIX_JAVA_API_JDK_INTERNAL_MODULE_ILLEGALACCESSLOGGER_MODE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::module::IllegalAccessLogger_Mode : public jni::object_base<"jdk/internal/module/IllegalAccessLogger$Mode",
	java::lang::Enum>
{
public:

	static jni::ref<jdk::internal::module::IllegalAccessLogger_Mode> ONESHOT() { return get_static_field<"ONESHOT", jni::ref<jdk::internal::module::IllegalAccessLogger_Mode>>(); }
	static jni::ref<jdk::internal::module::IllegalAccessLogger_Mode> WARN() { return get_static_field<"WARN", jni::ref<jdk::internal::module::IllegalAccessLogger_Mode>>(); }
	static jni::ref<jdk::internal::module::IllegalAccessLogger_Mode> DEBUG() { return get_static_field<"DEBUG", jni::ref<jdk::internal::module::IllegalAccessLogger_Mode>>(); }

	static jni::ref<jni::array<jdk::internal::module::IllegalAccessLogger_Mode>> values() { return call_static_method<"values", jni::ref<jni::array<jdk::internal::module::IllegalAccessLogger_Mode>>>(); }
	static jni::ref<jdk::internal::module::IllegalAccessLogger_Mode> valueOf(jni::ref<java::lang::String> name) { return call_static_method<"valueOf", jni::ref<jdk::internal::module::IllegalAccessLogger_Mode>>(name); }

protected:

	IllegalAccessLogger_Mode(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_MODULE_ILLEGALACCESSLOGGER_MODE
