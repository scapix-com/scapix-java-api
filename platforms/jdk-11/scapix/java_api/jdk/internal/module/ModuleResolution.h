// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_MODULE_MODULERESOLUTION_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_MODULE_MODULERESOLUTION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::module { class ModuleResolution; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::module::ModuleResolution>
{
	static constexpr fixed_string class_name = "jdk/internal/module/ModuleResolution";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_MODULE_MODULERESOLUTION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_MODULE_MODULERESOLUTION)
#define SCAPIX_JAVA_API_JDK_INTERNAL_MODULE_MODULERESOLUTION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/module/ModuleReference.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::module::ModuleResolution : public jni::object_base<"jdk/internal/module/ModuleResolution",
	java::lang::Object>
{
public:

	jint value() { return call_method<"value", jint>(); }
	static jni::ref<jdk::internal::module::ModuleResolution> empty() { return call_static_method<"empty", jni::ref<jdk::internal::module::ModuleResolution>>(); }
	jboolean doNotResolveByDefault() { return call_method<"doNotResolveByDefault", jboolean>(); }
	jboolean hasDeprecatedWarning() { return call_method<"hasDeprecatedWarning", jboolean>(); }
	jboolean hasDeprecatedForRemovalWarning() { return call_method<"hasDeprecatedForRemovalWarning", jboolean>(); }
	jboolean hasIncubatingWarning() { return call_method<"hasIncubatingWarning", jboolean>(); }
	jni::ref<jdk::internal::module::ModuleResolution> withDoNotResolveByDefault() { return call_method<"withDoNotResolveByDefault", jni::ref<jdk::internal::module::ModuleResolution>>(); }
	jni::ref<jdk::internal::module::ModuleResolution> withDeprecated() { return call_method<"withDeprecated", jni::ref<jdk::internal::module::ModuleResolution>>(); }
	jni::ref<jdk::internal::module::ModuleResolution> withDeprecatedForRemoval() { return call_method<"withDeprecatedForRemoval", jni::ref<jdk::internal::module::ModuleResolution>>(); }
	jni::ref<jdk::internal::module::ModuleResolution> withIncubating() { return call_method<"withIncubating", jni::ref<jdk::internal::module::ModuleResolution>>(); }
	static jboolean doNotResolveByDefault(jni::ref<java::lang::module::ModuleReference> mref) { return call_static_method<"doNotResolveByDefault", jboolean>(mref); }
	static jboolean hasIncubatingWarning(jni::ref<java::lang::module::ModuleReference> mref) { return call_static_method<"hasIncubatingWarning", jboolean>(mref); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	ModuleResolution(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_MODULE_MODULERESOLUTION
