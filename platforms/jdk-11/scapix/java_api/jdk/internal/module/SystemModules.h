// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_MODULE_SYSTEMMODULES_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_MODULE_SYSTEMMODULES_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::module { class SystemModules; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::module::SystemModules>
{
	static constexpr fixed_string class_name = "jdk/internal/module/SystemModules";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_MODULE_SYSTEMMODULES_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_MODULE_SYSTEMMODULES)
#define SCAPIX_JAVA_API_JDK_INTERNAL_MODULE_SYSTEMMODULES

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/module/ModuleDescriptor.h>
#include <scapix/java_api/java/util/Map.h>
#include <scapix/java_api/jdk/internal/module/ModuleHashes.h>
#include <scapix/java_api/jdk/internal/module/ModuleResolution.h>
#include <scapix/java_api/jdk/internal/module/ModuleTarget.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class jdk::internal::module::SystemModules : public jni::object_base<"jdk/internal/module/SystemModules",
	java::lang::Object>
{
public:

	jboolean hasSplitPackages() { return call_method<"hasSplitPackages", jboolean>(); }
	jboolean hasIncubatorModules() { return call_method<"hasIncubatorModules", jboolean>(); }
	jni::ref<jni::array<java::lang::module::ModuleDescriptor>> moduleDescriptors() { return call_method<"moduleDescriptors", jni::ref<jni::array<java::lang::module::ModuleDescriptor>>>(); }
	jni::ref<jni::array<jdk::internal::module::ModuleTarget>> moduleTargets() { return call_method<"moduleTargets", jni::ref<jni::array<jdk::internal::module::ModuleTarget>>>(); }
	jni::ref<jni::array<jdk::internal::module::ModuleHashes>> moduleHashes() { return call_method<"moduleHashes", jni::ref<jni::array<jdk::internal::module::ModuleHashes>>>(); }
	jni::ref<jni::array<jdk::internal::module::ModuleResolution>> moduleResolutions() { return call_method<"moduleResolutions", jni::ref<jni::array<jdk::internal::module::ModuleResolution>>>(); }
	jni::ref<java::util::Map> moduleReads() { return call_method<"moduleReads", jni::ref<java::util::Map>>(); }
	jni::ref<java::util::Map> concealedPackagesToOpen() { return call_method<"concealedPackagesToOpen", jni::ref<java::util::Map>>(); }
	jni::ref<java::util::Map> exportedPackagesToOpen() { return call_method<"exportedPackagesToOpen", jni::ref<java::util::Map>>(); }

protected:

	SystemModules(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_MODULE_SYSTEMMODULES
