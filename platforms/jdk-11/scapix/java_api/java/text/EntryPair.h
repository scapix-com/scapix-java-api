// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_TEXT_ENTRYPAIR_FWD
#define SCAPIX_JAVA_API_JAVA_TEXT_ENTRYPAIR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::text { class EntryPair; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::text::EntryPair>
{
	static constexpr fixed_string class_name = "java/text/EntryPair";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_TEXT_ENTRYPAIR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_TEXT_ENTRYPAIR)
#define SCAPIX_JAVA_API_JAVA_TEXT_ENTRYPAIR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::text::EntryPair : public jni::object_base<"java/text/EntryPair",
	java::lang::Object>
{
public:

	jni::ref<java::lang::String> entryName() { return get_field<"entryName", jni::ref<java::lang::String>>(); }
	void entryName(jni::ref<java::lang::String> v) { set_field<"entryName", jni::ref<java::lang::String>>(v); }
	jint value() { return get_field<"value", jint>(); }
	void value(jint v) { set_field<"value", jint>(v); }
	jboolean fwd() { return get_field<"fwd", jboolean>(); }
	void fwd(jboolean v) { set_field<"fwd", jboolean>(v); }

	static jni::ref<java::text::EntryPair> new_object(jni::ref<java::lang::String> name, jint value) { return base_::new_object(name, value); }
	static jni::ref<java::text::EntryPair> new_object(jni::ref<java::lang::String> name, jint value, jboolean fwd) { return base_::new_object(name, value, fwd); }

protected:

	EntryPair(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_TEXT_ENTRYPAIR
