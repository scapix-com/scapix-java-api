// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/security/cert/CertificateException.h>

#ifndef SCAPIX_JAVA_API_JAVA_SECURITY_CERT_CERTIFICATEREVOKEDEXCEPTION_FWD
#define SCAPIX_JAVA_API_JAVA_SECURITY_CERT_CERTIFICATEREVOKEDEXCEPTION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::security::cert { class CertificateRevokedException; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::security::cert::CertificateRevokedException>
{
	static constexpr fixed_string class_name = "java/security/cert/CertificateRevokedException";
	using base_classes = std::tuple<scapix::java_api::java::security::cert::CertificateException>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_SECURITY_CERT_CERTIFICATEREVOKEDEXCEPTION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_SECURITY_CERT_CERTIFICATEREVOKEDEXCEPTION)
#define SCAPIX_JAVA_API_JAVA_SECURITY_CERT_CERTIFICATEREVOKEDEXCEPTION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/security/cert/CRLReason.h>
#include <scapix/java_api/java/util/Date.h>
#include <scapix/java_api/java/util/Map.h>
#include <scapix/java_api/javax/security/auth/x500/X500Principal.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::security::cert::CertificateRevokedException : public jni::object_base<"java/security/cert/CertificateRevokedException",
	java::security::cert::CertificateException>
{
public:

	static jni::ref<java::security::cert::CertificateRevokedException> new_object(jni::ref<java::util::Date> revocationDate, jni::ref<java::security::cert::CRLReason> reason, jni::ref<javax::security::auth::x500::X500Principal> authority, jni::ref<java::util::Map> extensions) { return base_::new_object(revocationDate, reason, authority, extensions); }
	jni::ref<java::util::Date> getRevocationDate() { return call_method<"getRevocationDate", jni::ref<java::util::Date>>(); }
	jni::ref<java::security::cert::CRLReason> getRevocationReason() { return call_method<"getRevocationReason", jni::ref<java::security::cert::CRLReason>>(); }
	jni::ref<javax::security::auth::x500::X500Principal> getAuthorityName() { return call_method<"getAuthorityName", jni::ref<javax::security::auth::x500::X500Principal>>(); }
	jni::ref<java::util::Date> getInvalidityDate() { return call_method<"getInvalidityDate", jni::ref<java::util::Date>>(); }
	jni::ref<java::util::Map> getExtensions() { return call_method<"getExtensions", jni::ref<java::util::Map>>(); }
	jni::ref<java::lang::String> getMessage() { return call_method<"getMessage", jni::ref<java::lang::String>>(); }

protected:

	CertificateRevokedException(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_SECURITY_CERT_CERTIFICATEREVOKEDEXCEPTION
