// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_SECURITY_ACCESSCONTROLLER_FWD
#define SCAPIX_JAVA_API_JAVA_SECURITY_ACCESSCONTROLLER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::security { class AccessController; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::security::AccessController>
{
	static constexpr fixed_string class_name = "java/security/AccessController";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_SECURITY_ACCESSCONTROLLER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_SECURITY_ACCESSCONTROLLER)
#define SCAPIX_JAVA_API_JAVA_SECURITY_ACCESSCONTROLLER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/security/AccessControlContext.h>
#include <scapix/java_api/java/security/Permission.h>
#include <scapix/java_api/java/security/PrivilegedAction.h>
#include <scapix/java_api/java/security/PrivilegedExceptionAction.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::security::AccessController : public jni::object_base<"java/security/AccessController",
	java::lang::Object>
{
public:

	static jni::ref<java::lang::Object> doPrivileged(jni::ref<java::security::PrivilegedAction> p1) { return call_static_method<"doPrivileged", jni::ref<java::lang::Object>>(p1); }
	static jni::ref<java::lang::Object> doPrivilegedWithCombiner(jni::ref<java::security::PrivilegedAction> action) { return call_static_method<"doPrivilegedWithCombiner", jni::ref<java::lang::Object>>(action); }
	static jni::ref<java::lang::Object> doPrivileged(jni::ref<java::security::PrivilegedAction> p1, jni::ref<java::security::AccessControlContext> p2) { return call_static_method<"doPrivileged", jni::ref<java::lang::Object>>(p1, p2); }
	static jni::ref<java::lang::Object> doPrivileged(jni::ref<java::security::PrivilegedAction> action, jni::ref<java::security::AccessControlContext> context, jni::ref<jni::array<java::security::Permission>> perms) { return call_static_method<"doPrivileged", jni::ref<java::lang::Object>>(action, context, perms); }
	static jni::ref<java::lang::Object> doPrivilegedWithCombiner(jni::ref<java::security::PrivilegedAction> action, jni::ref<java::security::AccessControlContext> context, jni::ref<jni::array<java::security::Permission>> perms) { return call_static_method<"doPrivilegedWithCombiner", jni::ref<java::lang::Object>>(action, context, perms); }
	static jni::ref<java::lang::Object> doPrivileged(jni::ref<java::security::PrivilegedExceptionAction> p1) { return call_static_method<"doPrivileged", jni::ref<java::lang::Object>>(p1); }
	static jni::ref<java::lang::Object> doPrivilegedWithCombiner(jni::ref<java::security::PrivilegedExceptionAction> action) { return call_static_method<"doPrivilegedWithCombiner", jni::ref<java::lang::Object>>(action); }
	static jni::ref<java::lang::Object> doPrivileged(jni::ref<java::security::PrivilegedExceptionAction> p1, jni::ref<java::security::AccessControlContext> p2) { return call_static_method<"doPrivileged", jni::ref<java::lang::Object>>(p1, p2); }
	static jni::ref<java::lang::Object> doPrivileged(jni::ref<java::security::PrivilegedExceptionAction> action, jni::ref<java::security::AccessControlContext> context, jni::ref<jni::array<java::security::Permission>> perms) { return call_static_method<"doPrivileged", jni::ref<java::lang::Object>>(action, context, perms); }
	static jni::ref<java::lang::Object> doPrivilegedWithCombiner(jni::ref<java::security::PrivilegedExceptionAction> action, jni::ref<java::security::AccessControlContext> context, jni::ref<jni::array<java::security::Permission>> perms) { return call_static_method<"doPrivilegedWithCombiner", jni::ref<java::lang::Object>>(action, context, perms); }
	static jni::ref<java::security::AccessControlContext> getContext() { return call_static_method<"getContext", jni::ref<java::security::AccessControlContext>>(); }
	static void checkPermission(jni::ref<java::security::Permission> perm) { return call_static_method<"checkPermission", void>(perm); }

protected:

	AccessController(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_SECURITY_ACCESSCONTROLLER
