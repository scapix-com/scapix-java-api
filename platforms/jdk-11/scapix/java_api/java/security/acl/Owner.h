// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_SECURITY_ACL_OWNER_FWD
#define SCAPIX_JAVA_API_JAVA_SECURITY_ACL_OWNER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::security::acl { class Owner; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::security::acl::Owner>
{
	static constexpr fixed_string class_name = "java/security/acl/Owner";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_SECURITY_ACL_OWNER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_SECURITY_ACL_OWNER)
#define SCAPIX_JAVA_API_JAVA_SECURITY_ACL_OWNER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/security/Principal.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::security::acl::Owner : public jni::object_base<"java/security/acl/Owner",
	java::lang::Object>
{
public:

	jboolean addOwner(jni::ref<java::security::Principal> p1, jni::ref<java::security::Principal> p2) { return call_method<"addOwner", jboolean>(p1, p2); }
	jboolean deleteOwner(jni::ref<java::security::Principal> p1, jni::ref<java::security::Principal> p2) { return call_method<"deleteOwner", jboolean>(p1, p2); }
	jboolean isOwner(jni::ref<java::security::Principal> p1) { return call_method<"isOwner", jboolean>(p1); }

protected:

	Owner(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_SECURITY_ACL_OWNER
