// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/time/temporal/TemporalAmount.h>

#ifndef SCAPIX_JAVA_API_JAVA_TIME_CHRONO_CHRONOPERIOD_FWD
#define SCAPIX_JAVA_API_JAVA_TIME_CHRONO_CHRONOPERIOD_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::time::chrono { class ChronoPeriod; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::time::chrono::ChronoPeriod>
{
	static constexpr fixed_string class_name = "java/time/chrono/ChronoPeriod";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::time::temporal::TemporalAmount>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_TIME_CHRONO_CHRONOPERIOD_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_TIME_CHRONO_CHRONOPERIOD)
#define SCAPIX_JAVA_API_JAVA_TIME_CHRONO_CHRONOPERIOD

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/time/chrono/ChronoLocalDate.h>
#include <scapix/java_api/java/time/chrono/Chronology.h>
#include <scapix/java_api/java/time/temporal/Temporal.h>
#include <scapix/java_api/java/time/temporal/TemporalUnit.h>
#include <scapix/java_api/java/util/List.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::time::chrono::ChronoPeriod : public jni::object_base<"java/time/chrono/ChronoPeriod",
	java::lang::Object,
	java::time::temporal::TemporalAmount>
{
public:

	static jni::ref<java::time::chrono::ChronoPeriod> between(jni::ref<java::time::chrono::ChronoLocalDate> startDateInclusive, jni::ref<java::time::chrono::ChronoLocalDate> endDateExclusive) { return call_static_method<"between", jni::ref<java::time::chrono::ChronoPeriod>>(startDateInclusive, endDateExclusive); }
	jlong get(jni::ref<java::time::temporal::TemporalUnit> p1) { return call_method<"get", jlong>(p1); }
	jni::ref<java::util::List> getUnits() { return call_method<"getUnits", jni::ref<java::util::List>>(); }
	jni::ref<java::time::chrono::Chronology> getChronology() { return call_method<"getChronology", jni::ref<java::time::chrono::Chronology>>(); }
	jboolean isZero() { return call_method<"isZero", jboolean>(); }
	jboolean isNegative() { return call_method<"isNegative", jboolean>(); }
	jni::ref<java::time::chrono::ChronoPeriod> plus(jni::ref<java::time::temporal::TemporalAmount> p1) { return call_method<"plus", jni::ref<java::time::chrono::ChronoPeriod>>(p1); }
	jni::ref<java::time::chrono::ChronoPeriod> minus(jni::ref<java::time::temporal::TemporalAmount> p1) { return call_method<"minus", jni::ref<java::time::chrono::ChronoPeriod>>(p1); }
	jni::ref<java::time::chrono::ChronoPeriod> multipliedBy(jint p1) { return call_method<"multipliedBy", jni::ref<java::time::chrono::ChronoPeriod>>(p1); }
	jni::ref<java::time::chrono::ChronoPeriod> negated() { return call_method<"negated", jni::ref<java::time::chrono::ChronoPeriod>>(); }
	jni::ref<java::time::chrono::ChronoPeriod> normalized() { return call_method<"normalized", jni::ref<java::time::chrono::ChronoPeriod>>(); }
	jni::ref<java::time::temporal::Temporal> addTo(jni::ref<java::time::temporal::Temporal> p1) { return call_method<"addTo", jni::ref<java::time::temporal::Temporal>>(p1); }
	jni::ref<java::time::temporal::Temporal> subtractFrom(jni::ref<java::time::temporal::Temporal> p1) { return call_method<"subtractFrom", jni::ref<java::time::temporal::Temporal>>(p1); }
	jboolean equals(jni::ref<java::lang::Object> p1) { return call_method<"equals", jboolean>(p1); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	ChronoPeriod(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_TIME_CHRONO_CHRONOPERIOD
