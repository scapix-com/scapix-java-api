// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/util/function/DoubleConsumer.h>

#ifndef SCAPIX_JAVA_API_JAVA_UTIL_SPLITERATORS_ABSTRACTDOUBLESPLITERATOR_HOLDINGDOUBLECONSUMER_FWD
#define SCAPIX_JAVA_API_JAVA_UTIL_SPLITERATORS_ABSTRACTDOUBLESPLITERATOR_HOLDINGDOUBLECONSUMER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::util { class Spliterators_AbstractDoubleSpliterator_HoldingDoubleConsumer; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::util::Spliterators_AbstractDoubleSpliterator_HoldingDoubleConsumer>
{
	static constexpr fixed_string class_name = "java/util/Spliterators$AbstractDoubleSpliterator$HoldingDoubleConsumer";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::util::function::DoubleConsumer>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_SPLITERATORS_ABSTRACTDOUBLESPLITERATOR_HOLDINGDOUBLECONSUMER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_UTIL_SPLITERATORS_ABSTRACTDOUBLESPLITERATOR_HOLDINGDOUBLECONSUMER)
#define SCAPIX_JAVA_API_JAVA_UTIL_SPLITERATORS_ABSTRACTDOUBLESPLITERATOR_HOLDINGDOUBLECONSUMER

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::util::Spliterators_AbstractDoubleSpliterator_HoldingDoubleConsumer : public jni::object_base<"java/util/Spliterators$AbstractDoubleSpliterator$HoldingDoubleConsumer",
	java::lang::Object,
	java::util::function::DoubleConsumer>
{
public:

	void accept(jdouble value) { return call_method<"accept", void>(value); }

protected:

	Spliterators_AbstractDoubleSpliterator_HoldingDoubleConsumer(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_SPLITERATORS_ABSTRACTDOUBLESPLITERATOR_HOLDINGDOUBLECONSUMER
