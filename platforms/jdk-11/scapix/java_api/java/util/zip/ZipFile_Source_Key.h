// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_UTIL_ZIP_ZIPFILE_SOURCE_KEY_FWD
#define SCAPIX_JAVA_API_JAVA_UTIL_ZIP_ZIPFILE_SOURCE_KEY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::util::zip { class ZipFile_Source_Key; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::util::zip::ZipFile_Source_Key>
{
	static constexpr fixed_string class_name = "java/util/zip/ZipFile$Source$Key";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_ZIP_ZIPFILE_SOURCE_KEY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_UTIL_ZIP_ZIPFILE_SOURCE_KEY)
#define SCAPIX_JAVA_API_JAVA_UTIL_ZIP_ZIPFILE_SOURCE_KEY

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/File.h>
#include <scapix/java_api/java/nio/file/attribute/BasicFileAttributes.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::util::zip::ZipFile_Source_Key : public jni::object_base<"java/util/zip/ZipFile$Source$Key",
	java::lang::Object>
{
public:

	static jni::ref<java::util::zip::ZipFile_Source_Key> new_object(jni::ref<java::io::File> file, jni::ref<java::nio::file::attribute::BasicFileAttributes> attrs) { return base_::new_object(file, attrs); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jboolean equals(jni::ref<java::lang::Object> obj) { return call_method<"equals", jboolean>(obj); }

protected:

	ZipFile_Source_Key(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_ZIP_ZIPFILE_SOURCE_KEY
