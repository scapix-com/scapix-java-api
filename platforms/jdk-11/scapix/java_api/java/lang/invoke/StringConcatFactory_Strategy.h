// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Enum.h>

#ifndef SCAPIX_JAVA_API_JAVA_LANG_INVOKE_STRINGCONCATFACTORY_STRATEGY_FWD
#define SCAPIX_JAVA_API_JAVA_LANG_INVOKE_STRINGCONCATFACTORY_STRATEGY_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::lang::invoke { class StringConcatFactory_Strategy; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::lang::invoke::StringConcatFactory_Strategy>
{
	static constexpr fixed_string class_name = "java/lang/invoke/StringConcatFactory$Strategy";
	using base_classes = std::tuple<scapix::java_api::java::lang::Enum>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_INVOKE_STRINGCONCATFACTORY_STRATEGY_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_LANG_INVOKE_STRINGCONCATFACTORY_STRATEGY)
#define SCAPIX_JAVA_API_JAVA_LANG_INVOKE_STRINGCONCATFACTORY_STRATEGY

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::lang::invoke::StringConcatFactory_Strategy : public jni::object_base<"java/lang/invoke/StringConcatFactory$Strategy",
	java::lang::Enum>
{
public:

	static jni::ref<java::lang::invoke::StringConcatFactory_Strategy> BC_SB() { return get_static_field<"BC_SB", jni::ref<java::lang::invoke::StringConcatFactory_Strategy>>(); }
	static jni::ref<java::lang::invoke::StringConcatFactory_Strategy> BC_SB_SIZED() { return get_static_field<"BC_SB_SIZED", jni::ref<java::lang::invoke::StringConcatFactory_Strategy>>(); }
	static jni::ref<java::lang::invoke::StringConcatFactory_Strategy> BC_SB_SIZED_EXACT() { return get_static_field<"BC_SB_SIZED_EXACT", jni::ref<java::lang::invoke::StringConcatFactory_Strategy>>(); }
	static jni::ref<java::lang::invoke::StringConcatFactory_Strategy> MH_SB_SIZED() { return get_static_field<"MH_SB_SIZED", jni::ref<java::lang::invoke::StringConcatFactory_Strategy>>(); }
	static jni::ref<java::lang::invoke::StringConcatFactory_Strategy> MH_SB_SIZED_EXACT() { return get_static_field<"MH_SB_SIZED_EXACT", jni::ref<java::lang::invoke::StringConcatFactory_Strategy>>(); }
	static jni::ref<java::lang::invoke::StringConcatFactory_Strategy> MH_INLINE_SIZED_EXACT() { return get_static_field<"MH_INLINE_SIZED_EXACT", jni::ref<java::lang::invoke::StringConcatFactory_Strategy>>(); }

	static jni::ref<jni::array<java::lang::invoke::StringConcatFactory_Strategy>> values() { return call_static_method<"values", jni::ref<jni::array<java::lang::invoke::StringConcatFactory_Strategy>>>(); }
	static jni::ref<java::lang::invoke::StringConcatFactory_Strategy> valueOf(jni::ref<java::lang::String> name) { return call_static_method<"valueOf", jni::ref<java::lang::invoke::StringConcatFactory_Strategy>>(name); }

protected:

	StringConcatFactory_Strategy(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_INVOKE_STRINGCONCATFACTORY_STRATEGY
