// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Enum.h>

#ifndef SCAPIX_JAVA_API_JAVA_LANG_INVOKE_VARHANDLE_ACCESSMODE_FWD
#define SCAPIX_JAVA_API_JAVA_LANG_INVOKE_VARHANDLE_ACCESSMODE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::lang::invoke { class VarHandle_AccessMode; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::lang::invoke::VarHandle_AccessMode>
{
	static constexpr fixed_string class_name = "java/lang/invoke/VarHandle$AccessMode";
	using base_classes = std::tuple<scapix::java_api::java::lang::Enum>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_INVOKE_VARHANDLE_ACCESSMODE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_LANG_INVOKE_VARHANDLE_ACCESSMODE)
#define SCAPIX_JAVA_API_JAVA_LANG_INVOKE_VARHANDLE_ACCESSMODE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::lang::invoke::VarHandle_AccessMode : public jni::object_base<"java/lang/invoke/VarHandle$AccessMode",
	java::lang::Enum>
{
public:

	static jni::ref<java::lang::invoke::VarHandle_AccessMode> GET() { return get_static_field<"GET", jni::ref<java::lang::invoke::VarHandle_AccessMode>>(); }
	static jni::ref<java::lang::invoke::VarHandle_AccessMode> SET() { return get_static_field<"SET", jni::ref<java::lang::invoke::VarHandle_AccessMode>>(); }
	static jni::ref<java::lang::invoke::VarHandle_AccessMode> GET_VOLATILE() { return get_static_field<"GET_VOLATILE", jni::ref<java::lang::invoke::VarHandle_AccessMode>>(); }
	static jni::ref<java::lang::invoke::VarHandle_AccessMode> SET_VOLATILE() { return get_static_field<"SET_VOLATILE", jni::ref<java::lang::invoke::VarHandle_AccessMode>>(); }
	static jni::ref<java::lang::invoke::VarHandle_AccessMode> GET_ACQUIRE() { return get_static_field<"GET_ACQUIRE", jni::ref<java::lang::invoke::VarHandle_AccessMode>>(); }
	static jni::ref<java::lang::invoke::VarHandle_AccessMode> SET_RELEASE() { return get_static_field<"SET_RELEASE", jni::ref<java::lang::invoke::VarHandle_AccessMode>>(); }
	static jni::ref<java::lang::invoke::VarHandle_AccessMode> GET_OPAQUE() { return get_static_field<"GET_OPAQUE", jni::ref<java::lang::invoke::VarHandle_AccessMode>>(); }
	static jni::ref<java::lang::invoke::VarHandle_AccessMode> SET_OPAQUE() { return get_static_field<"SET_OPAQUE", jni::ref<java::lang::invoke::VarHandle_AccessMode>>(); }
	static jni::ref<java::lang::invoke::VarHandle_AccessMode> COMPARE_AND_SET() { return get_static_field<"COMPARE_AND_SET", jni::ref<java::lang::invoke::VarHandle_AccessMode>>(); }
	static jni::ref<java::lang::invoke::VarHandle_AccessMode> COMPARE_AND_EXCHANGE() { return get_static_field<"COMPARE_AND_EXCHANGE", jni::ref<java::lang::invoke::VarHandle_AccessMode>>(); }
	static jni::ref<java::lang::invoke::VarHandle_AccessMode> COMPARE_AND_EXCHANGE_ACQUIRE() { return get_static_field<"COMPARE_AND_EXCHANGE_ACQUIRE", jni::ref<java::lang::invoke::VarHandle_AccessMode>>(); }
	static jni::ref<java::lang::invoke::VarHandle_AccessMode> COMPARE_AND_EXCHANGE_RELEASE() { return get_static_field<"COMPARE_AND_EXCHANGE_RELEASE", jni::ref<java::lang::invoke::VarHandle_AccessMode>>(); }
	static jni::ref<java::lang::invoke::VarHandle_AccessMode> WEAK_COMPARE_AND_SET_PLAIN() { return get_static_field<"WEAK_COMPARE_AND_SET_PLAIN", jni::ref<java::lang::invoke::VarHandle_AccessMode>>(); }
	static jni::ref<java::lang::invoke::VarHandle_AccessMode> WEAK_COMPARE_AND_SET() { return get_static_field<"WEAK_COMPARE_AND_SET", jni::ref<java::lang::invoke::VarHandle_AccessMode>>(); }
	static jni::ref<java::lang::invoke::VarHandle_AccessMode> WEAK_COMPARE_AND_SET_ACQUIRE() { return get_static_field<"WEAK_COMPARE_AND_SET_ACQUIRE", jni::ref<java::lang::invoke::VarHandle_AccessMode>>(); }
	static jni::ref<java::lang::invoke::VarHandle_AccessMode> WEAK_COMPARE_AND_SET_RELEASE() { return get_static_field<"WEAK_COMPARE_AND_SET_RELEASE", jni::ref<java::lang::invoke::VarHandle_AccessMode>>(); }
	static jni::ref<java::lang::invoke::VarHandle_AccessMode> GET_AND_SET() { return get_static_field<"GET_AND_SET", jni::ref<java::lang::invoke::VarHandle_AccessMode>>(); }
	static jni::ref<java::lang::invoke::VarHandle_AccessMode> GET_AND_SET_ACQUIRE() { return get_static_field<"GET_AND_SET_ACQUIRE", jni::ref<java::lang::invoke::VarHandle_AccessMode>>(); }
	static jni::ref<java::lang::invoke::VarHandle_AccessMode> GET_AND_SET_RELEASE() { return get_static_field<"GET_AND_SET_RELEASE", jni::ref<java::lang::invoke::VarHandle_AccessMode>>(); }
	static jni::ref<java::lang::invoke::VarHandle_AccessMode> GET_AND_ADD() { return get_static_field<"GET_AND_ADD", jni::ref<java::lang::invoke::VarHandle_AccessMode>>(); }
	static jni::ref<java::lang::invoke::VarHandle_AccessMode> GET_AND_ADD_ACQUIRE() { return get_static_field<"GET_AND_ADD_ACQUIRE", jni::ref<java::lang::invoke::VarHandle_AccessMode>>(); }
	static jni::ref<java::lang::invoke::VarHandle_AccessMode> GET_AND_ADD_RELEASE() { return get_static_field<"GET_AND_ADD_RELEASE", jni::ref<java::lang::invoke::VarHandle_AccessMode>>(); }
	static jni::ref<java::lang::invoke::VarHandle_AccessMode> GET_AND_BITWISE_OR() { return get_static_field<"GET_AND_BITWISE_OR", jni::ref<java::lang::invoke::VarHandle_AccessMode>>(); }
	static jni::ref<java::lang::invoke::VarHandle_AccessMode> GET_AND_BITWISE_OR_RELEASE() { return get_static_field<"GET_AND_BITWISE_OR_RELEASE", jni::ref<java::lang::invoke::VarHandle_AccessMode>>(); }
	static jni::ref<java::lang::invoke::VarHandle_AccessMode> GET_AND_BITWISE_OR_ACQUIRE() { return get_static_field<"GET_AND_BITWISE_OR_ACQUIRE", jni::ref<java::lang::invoke::VarHandle_AccessMode>>(); }
	static jni::ref<java::lang::invoke::VarHandle_AccessMode> GET_AND_BITWISE_AND() { return get_static_field<"GET_AND_BITWISE_AND", jni::ref<java::lang::invoke::VarHandle_AccessMode>>(); }
	static jni::ref<java::lang::invoke::VarHandle_AccessMode> GET_AND_BITWISE_AND_RELEASE() { return get_static_field<"GET_AND_BITWISE_AND_RELEASE", jni::ref<java::lang::invoke::VarHandle_AccessMode>>(); }
	static jni::ref<java::lang::invoke::VarHandle_AccessMode> GET_AND_BITWISE_AND_ACQUIRE() { return get_static_field<"GET_AND_BITWISE_AND_ACQUIRE", jni::ref<java::lang::invoke::VarHandle_AccessMode>>(); }
	static jni::ref<java::lang::invoke::VarHandle_AccessMode> GET_AND_BITWISE_XOR() { return get_static_field<"GET_AND_BITWISE_XOR", jni::ref<java::lang::invoke::VarHandle_AccessMode>>(); }
	static jni::ref<java::lang::invoke::VarHandle_AccessMode> GET_AND_BITWISE_XOR_RELEASE() { return get_static_field<"GET_AND_BITWISE_XOR_RELEASE", jni::ref<java::lang::invoke::VarHandle_AccessMode>>(); }
	static jni::ref<java::lang::invoke::VarHandle_AccessMode> GET_AND_BITWISE_XOR_ACQUIRE() { return get_static_field<"GET_AND_BITWISE_XOR_ACQUIRE", jni::ref<java::lang::invoke::VarHandle_AccessMode>>(); }

	static jni::ref<jni::array<java::lang::invoke::VarHandle_AccessMode>> values() { return call_static_method<"values", jni::ref<jni::array<java::lang::invoke::VarHandle_AccessMode>>>(); }
	static jni::ref<java::lang::invoke::VarHandle_AccessMode> valueOf(jni::ref<java::lang::String> name) { return call_static_method<"valueOf", jni::ref<java::lang::invoke::VarHandle_AccessMode>>(name); }
	jni::ref<java::lang::String> methodName() { return call_method<"methodName", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::invoke::VarHandle_AccessMode> valueFromMethodName(jni::ref<java::lang::String> methodName) { return call_static_method<"valueFromMethodName", jni::ref<java::lang::invoke::VarHandle_AccessMode>>(methodName); }

protected:

	VarHandle_AccessMode(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_INVOKE_VARHANDLE_ACCESSMODE
