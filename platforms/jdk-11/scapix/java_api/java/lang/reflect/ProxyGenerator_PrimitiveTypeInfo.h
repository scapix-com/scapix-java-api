// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_LANG_REFLECT_PROXYGENERATOR_PRIMITIVETYPEINFO_FWD
#define SCAPIX_JAVA_API_JAVA_LANG_REFLECT_PROXYGENERATOR_PRIMITIVETYPEINFO_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::lang::reflect { class ProxyGenerator_PrimitiveTypeInfo; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::lang::reflect::ProxyGenerator_PrimitiveTypeInfo>
{
	static constexpr fixed_string class_name = "java/lang/reflect/ProxyGenerator$PrimitiveTypeInfo";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_REFLECT_PROXYGENERATOR_PRIMITIVETYPEINFO_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_LANG_REFLECT_PROXYGENERATOR_PRIMITIVETYPEINFO)
#define SCAPIX_JAVA_API_JAVA_LANG_REFLECT_PROXYGENERATOR_PRIMITIVETYPEINFO

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::lang::reflect::ProxyGenerator_PrimitiveTypeInfo : public jni::object_base<"java/lang/reflect/ProxyGenerator$PrimitiveTypeInfo",
	java::lang::Object>
{
public:

	jni::ref<java::lang::String> baseTypeString() { return get_field<"baseTypeString", jni::ref<java::lang::String>>(); }
	void baseTypeString(jni::ref<java::lang::String> v) { set_field<"baseTypeString", jni::ref<java::lang::String>>(v); }
	jni::ref<java::lang::String> wrapperClassName() { return get_field<"wrapperClassName", jni::ref<java::lang::String>>(); }
	void wrapperClassName(jni::ref<java::lang::String> v) { set_field<"wrapperClassName", jni::ref<java::lang::String>>(v); }
	jni::ref<java::lang::String> wrapperValueOfDesc() { return get_field<"wrapperValueOfDesc", jni::ref<java::lang::String>>(); }
	void wrapperValueOfDesc(jni::ref<java::lang::String> v) { set_field<"wrapperValueOfDesc", jni::ref<java::lang::String>>(v); }
	jni::ref<java::lang::String> unwrapMethodName() { return get_field<"unwrapMethodName", jni::ref<java::lang::String>>(); }
	void unwrapMethodName(jni::ref<java::lang::String> v) { set_field<"unwrapMethodName", jni::ref<java::lang::String>>(v); }
	jni::ref<java::lang::String> unwrapMethodDesc() { return get_field<"unwrapMethodDesc", jni::ref<java::lang::String>>(); }
	void unwrapMethodDesc(jni::ref<java::lang::String> v) { set_field<"unwrapMethodDesc", jni::ref<java::lang::String>>(v); }

	static jni::ref<java::lang::reflect::ProxyGenerator_PrimitiveTypeInfo> get(jni::ref<java::lang::Class> cl) { return call_static_method<"get", jni::ref<java::lang::reflect::ProxyGenerator_PrimitiveTypeInfo>>(cl); }

protected:

	ProxyGenerator_PrimitiveTypeInfo(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_REFLECT_PROXYGENERATOR_PRIMITIVETYPEINFO
