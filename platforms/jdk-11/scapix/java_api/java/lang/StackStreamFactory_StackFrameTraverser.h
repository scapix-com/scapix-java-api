// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/StackStreamFactory_AbstractStackWalker.h>
#include <scapix/java_api/java/util/Spliterator.h>

#ifndef SCAPIX_JAVA_API_JAVA_LANG_STACKSTREAMFACTORY_STACKFRAMETRAVERSER_FWD
#define SCAPIX_JAVA_API_JAVA_LANG_STACKSTREAMFACTORY_STACKFRAMETRAVERSER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::lang { class StackStreamFactory_StackFrameTraverser; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::lang::StackStreamFactory_StackFrameTraverser>
{
	static constexpr fixed_string class_name = "java/lang/StackStreamFactory$StackFrameTraverser";
	using base_classes = std::tuple<scapix::java_api::java::lang::StackStreamFactory_AbstractStackWalker, scapix::java_api::java::util::Spliterator>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_STACKSTREAMFACTORY_STACKFRAMETRAVERSER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_LANG_STACKSTREAMFACTORY_STACKFRAMETRAVERSER)
#define SCAPIX_JAVA_API_JAVA_LANG_STACKSTREAMFACTORY_STACKFRAMETRAVERSER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/util/function/Consumer.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::lang::StackStreamFactory_StackFrameTraverser : public jni::object_base<"java/lang/StackStreamFactory$StackFrameTraverser",
	java::lang::StackStreamFactory_AbstractStackWalker,
	java::util::Spliterator>
{
public:

	jni::ref<java::util::Spliterator> trySplit() { return call_method<"trySplit", jni::ref<java::util::Spliterator>>(); }
	jlong estimateSize() { return call_method<"estimateSize", jlong>(); }
	jint characteristics() { return call_method<"characteristics", jint>(); }
	void forEachRemaining(jni::ref<java::util::function::Consumer> action) { return call_method<"forEachRemaining", void>(action); }
	jboolean tryAdvance(jni::ref<java::util::function::Consumer> action) { return call_method<"tryAdvance", jboolean>(action); }

protected:

	StackStreamFactory_StackFrameTraverser(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_STACKSTREAMFACTORY_STACKFRAMETRAVERSER
