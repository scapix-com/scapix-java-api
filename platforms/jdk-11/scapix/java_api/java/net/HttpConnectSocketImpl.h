// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/net/PlainSocketImpl.h>

#ifndef SCAPIX_JAVA_API_JAVA_NET_HTTPCONNECTSOCKETIMPL_FWD
#define SCAPIX_JAVA_API_JAVA_NET_HTTPCONNECTSOCKETIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::net { class HttpConnectSocketImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::net::HttpConnectSocketImpl>
{
	static constexpr fixed_string class_name = "java/net/HttpConnectSocketImpl";
	using base_classes = std::tuple<scapix::java_api::java::net::PlainSocketImpl>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_NET_HTTPCONNECTSOCKETIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_NET_HTTPCONNECTSOCKETIMPL)
#define SCAPIX_JAVA_API_JAVA_NET_HTTPCONNECTSOCKETIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::net::HttpConnectSocketImpl : public jni::object_base<"java/net/HttpConnectSocketImpl",
	java::net::PlainSocketImpl>
{
public:

	void setOption(jint opt, jni::ref<java::lang::Object> val) { return call_method<"setOption", void>(opt, val); }

protected:

	HttpConnectSocketImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_NET_HTTPCONNECTSOCKETIMPL
