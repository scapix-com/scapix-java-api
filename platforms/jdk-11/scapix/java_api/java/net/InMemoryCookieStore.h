// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/net/CookieStore.h>

#ifndef SCAPIX_JAVA_API_JAVA_NET_INMEMORYCOOKIESTORE_FWD
#define SCAPIX_JAVA_API_JAVA_NET_INMEMORYCOOKIESTORE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::net { class InMemoryCookieStore; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::net::InMemoryCookieStore>
{
	static constexpr fixed_string class_name = "java/net/InMemoryCookieStore";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::net::CookieStore>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_NET_INMEMORYCOOKIESTORE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_NET_INMEMORYCOOKIESTORE)
#define SCAPIX_JAVA_API_JAVA_NET_INMEMORYCOOKIESTORE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/net/HttpCookie.h>
#include <scapix/java_api/java/net/URI.h>
#include <scapix/java_api/java/util/List.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::net::InMemoryCookieStore : public jni::object_base<"java/net/InMemoryCookieStore",
	java::lang::Object,
	java::net::CookieStore>
{
public:

	static jni::ref<java::net::InMemoryCookieStore> new_object() { return base_::new_object(); }
	void add(jni::ref<java::net::URI> uri, jni::ref<java::net::HttpCookie> cookie) { return call_method<"add", void>(uri, cookie); }
	jni::ref<java::util::List> get(jni::ref<java::net::URI> uri) { return call_method<"get", jni::ref<java::util::List>>(uri); }
	jni::ref<java::util::List> getCookies() { return call_method<"getCookies", jni::ref<java::util::List>>(); }
	jni::ref<java::util::List> getURIs() { return call_method<"getURIs", jni::ref<java::util::List>>(); }
	jboolean remove(jni::ref<java::net::URI> uri, jni::ref<java::net::HttpCookie> ck) { return call_method<"remove", jboolean>(uri, ck); }
	jboolean removeAll() { return call_method<"removeAll", jboolean>(); }

protected:

	InMemoryCookieStore(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_NET_INMEMORYCOOKIESTORE
