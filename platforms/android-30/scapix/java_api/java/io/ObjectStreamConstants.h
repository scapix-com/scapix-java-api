// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_IO_OBJECTSTREAMCONSTANTS_FWD
#define SCAPIX_JAVA_API_JAVA_IO_OBJECTSTREAMCONSTANTS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::io { class ObjectStreamConstants; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::io::ObjectStreamConstants>
{
	static constexpr fixed_string class_name = "java/io/ObjectStreamConstants";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_IO_OBJECTSTREAMCONSTANTS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_IO_OBJECTSTREAMCONSTANTS)
#define SCAPIX_JAVA_API_JAVA_IO_OBJECTSTREAMCONSTANTS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/SerializablePermission.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::io::ObjectStreamConstants : public jni::object_base<"java/io/ObjectStreamConstants",
	java::lang::Object>
{
public:

	static jint PROTOCOL_VERSION_1() { return get_static_field<"PROTOCOL_VERSION_1", jint>(); }
	static jint PROTOCOL_VERSION_2() { return get_static_field<"PROTOCOL_VERSION_2", jint>(); }
	static jbyte SC_BLOCK_DATA() { return get_static_field<"SC_BLOCK_DATA", jbyte>(); }
	static jbyte SC_ENUM() { return get_static_field<"SC_ENUM", jbyte>(); }
	static jbyte SC_EXTERNALIZABLE() { return get_static_field<"SC_EXTERNALIZABLE", jbyte>(); }
	static jbyte SC_SERIALIZABLE() { return get_static_field<"SC_SERIALIZABLE", jbyte>(); }
	static jbyte SC_WRITE_METHOD() { return get_static_field<"SC_WRITE_METHOD", jbyte>(); }
	static jshort STREAM_MAGIC() { return get_static_field<"STREAM_MAGIC", jshort>(); }
	static jshort STREAM_VERSION() { return get_static_field<"STREAM_VERSION", jshort>(); }
	static jni::ref<java::io::SerializablePermission> SUBCLASS_IMPLEMENTATION_PERMISSION() { return get_static_field<"SUBCLASS_IMPLEMENTATION_PERMISSION", jni::ref<java::io::SerializablePermission>>(); }
	static jni::ref<java::io::SerializablePermission> SUBSTITUTION_PERMISSION() { return get_static_field<"SUBSTITUTION_PERMISSION", jni::ref<java::io::SerializablePermission>>(); }
	static jbyte TC_ARRAY() { return get_static_field<"TC_ARRAY", jbyte>(); }
	static jbyte TC_BASE() { return get_static_field<"TC_BASE", jbyte>(); }
	static jbyte TC_BLOCKDATA() { return get_static_field<"TC_BLOCKDATA", jbyte>(); }
	static jbyte TC_BLOCKDATALONG() { return get_static_field<"TC_BLOCKDATALONG", jbyte>(); }
	static jbyte TC_CLASS() { return get_static_field<"TC_CLASS", jbyte>(); }
	static jbyte TC_CLASSDESC() { return get_static_field<"TC_CLASSDESC", jbyte>(); }
	static jbyte TC_ENDBLOCKDATA() { return get_static_field<"TC_ENDBLOCKDATA", jbyte>(); }
	static jbyte TC_ENUM() { return get_static_field<"TC_ENUM", jbyte>(); }
	static jbyte TC_EXCEPTION() { return get_static_field<"TC_EXCEPTION", jbyte>(); }
	static jbyte TC_LONGSTRING() { return get_static_field<"TC_LONGSTRING", jbyte>(); }
	static jbyte TC_MAX() { return get_static_field<"TC_MAX", jbyte>(); }
	static jbyte TC_NULL() { return get_static_field<"TC_NULL", jbyte>(); }
	static jbyte TC_OBJECT() { return get_static_field<"TC_OBJECT", jbyte>(); }
	static jbyte TC_PROXYCLASSDESC() { return get_static_field<"TC_PROXYCLASSDESC", jbyte>(); }
	static jbyte TC_REFERENCE() { return get_static_field<"TC_REFERENCE", jbyte>(); }
	static jbyte TC_RESET() { return get_static_field<"TC_RESET", jbyte>(); }
	static jbyte TC_STRING() { return get_static_field<"TC_STRING", jbyte>(); }
	static jint baseWireHandle() { return get_static_field<"baseWireHandle", jint>(); }


protected:

	ObjectStreamConstants(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_IO_OBJECTSTREAMCONSTANTS
