// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/util/concurrent/ForkJoinTask.h>

#ifndef SCAPIX_JAVA_API_JAVA_UTIL_CONCURRENT_RECURSIVEACTION_FWD
#define SCAPIX_JAVA_API_JAVA_UTIL_CONCURRENT_RECURSIVEACTION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::util::concurrent { class RecursiveAction; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::util::concurrent::RecursiveAction>
{
	static constexpr fixed_string class_name = "java/util/concurrent/RecursiveAction";
	using base_classes = std::tuple<scapix::java_api::java::util::concurrent::ForkJoinTask>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_CONCURRENT_RECURSIVEACTION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_UTIL_CONCURRENT_RECURSIVEACTION)
#define SCAPIX_JAVA_API_JAVA_UTIL_CONCURRENT_RECURSIVEACTION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Void.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::util::concurrent::RecursiveAction : public jni::object_base<"java/util/concurrent/RecursiveAction",
	java::util::concurrent::ForkJoinTask>
{
public:

	static jni::ref<java::util::concurrent::RecursiveAction> new_object() { return base_::new_object(); }
	jni::ref<java::lang::Void> getRawResult() { return call_method<"getRawResult", jni::ref<java::lang::Void>>(); }

protected:

	RecursiveAction(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_CONCURRENT_RECURSIVEACTION
