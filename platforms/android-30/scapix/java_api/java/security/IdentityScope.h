// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/security/Identity.h>

#ifndef SCAPIX_JAVA_API_JAVA_SECURITY_IDENTITYSCOPE_FWD
#define SCAPIX_JAVA_API_JAVA_SECURITY_IDENTITYSCOPE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::security { class IdentityScope; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::security::IdentityScope>
{
	static constexpr fixed_string class_name = "java/security/IdentityScope";
	using base_classes = std::tuple<scapix::java_api::java::security::Identity>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_SECURITY_IDENTITYSCOPE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_SECURITY_IDENTITYSCOPE)
#define SCAPIX_JAVA_API_JAVA_SECURITY_IDENTITYSCOPE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/security/Principal.h>
#include <scapix/java_api/java/security/PublicKey.h>
#include <scapix/java_api/java/util/Enumeration.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::security::IdentityScope : public jni::object_base<"java/security/IdentityScope",
	java::security::Identity>
{
public:

	static jni::ref<java::security::IdentityScope> new_object(jni::ref<java::lang::String> name) { return base_::new_object(name); }
	static jni::ref<java::security::IdentityScope> new_object(jni::ref<java::lang::String> name, jni::ref<java::security::IdentityScope> scope) { return base_::new_object(name, scope); }
	static jni::ref<java::security::IdentityScope> getSystemScope() { return call_static_method<"getSystemScope", jni::ref<java::security::IdentityScope>>(); }
	jint size() { return call_method<"size", jint>(); }
	jni::ref<java::security::Identity> getIdentity(jni::ref<java::lang::String> p1) { return call_method<"getIdentity", jni::ref<java::security::Identity>>(p1); }
	jni::ref<java::security::Identity> getIdentity(jni::ref<java::security::Principal> principal) { return call_method<"getIdentity", jni::ref<java::security::Identity>>(principal); }
	jni::ref<java::security::Identity> getIdentity(jni::ref<java::security::PublicKey> p1) { return call_method<"getIdentity", jni::ref<java::security::Identity>>(p1); }
	void addIdentity(jni::ref<java::security::Identity> p1) { return call_method<"addIdentity", void>(p1); }
	void removeIdentity(jni::ref<java::security::Identity> p1) { return call_method<"removeIdentity", void>(p1); }
	jni::ref<java::util::Enumeration> identities() { return call_method<"identities", jni::ref<java::util::Enumeration>>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	IdentityScope(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_SECURITY_IDENTITYSCOPE
