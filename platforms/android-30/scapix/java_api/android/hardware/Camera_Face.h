// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA_FACE_FWD
#define SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA_FACE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::hardware { class Camera_Face; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::hardware::Camera_Face>
{
	static constexpr fixed_string class_name = "android/hardware/Camera$Face";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA_FACE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA_FACE)
#define SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA_FACE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/graphics/Point.h>
#include <scapix/java_api/android/graphics/Rect.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::hardware::Camera_Face : public jni::object_base<"android/hardware/Camera$Face",
	java::lang::Object>
{
public:

	jint id() { return get_field<"id", jint>(); }
	void id(jint v) { set_field<"id", jint>(v); }
	jni::ref<android::graphics::Point> leftEye() { return get_field<"leftEye", jni::ref<android::graphics::Point>>(); }
	void leftEye(jni::ref<android::graphics::Point> v) { set_field<"leftEye", jni::ref<android::graphics::Point>>(v); }
	jni::ref<android::graphics::Point> mouth() { return get_field<"mouth", jni::ref<android::graphics::Point>>(); }
	void mouth(jni::ref<android::graphics::Point> v) { set_field<"mouth", jni::ref<android::graphics::Point>>(v); }
	jni::ref<android::graphics::Rect> rect() { return get_field<"rect", jni::ref<android::graphics::Rect>>(); }
	void rect(jni::ref<android::graphics::Rect> v) { set_field<"rect", jni::ref<android::graphics::Rect>>(v); }
	jni::ref<android::graphics::Point> rightEye() { return get_field<"rightEye", jni::ref<android::graphics::Point>>(); }
	void rightEye(jni::ref<android::graphics::Point> v) { set_field<"rightEye", jni::ref<android::graphics::Point>>(v); }
	jint score() { return get_field<"score", jint>(); }
	void score(jint v) { set_field<"score", jint>(v); }

	static jni::ref<android::hardware::Camera_Face> new_object() { return base_::new_object(); }

protected:

	Camera_Face(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA_FACE
