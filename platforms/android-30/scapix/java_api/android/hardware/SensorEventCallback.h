// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/hardware/SensorEventListener2.h>

#ifndef SCAPIX_JAVA_API_ANDROID_HARDWARE_SENSOREVENTCALLBACK_FWD
#define SCAPIX_JAVA_API_ANDROID_HARDWARE_SENSOREVENTCALLBACK_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::hardware { class SensorEventCallback; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::hardware::SensorEventCallback>
{
	static constexpr fixed_string class_name = "android/hardware/SensorEventCallback";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::hardware::SensorEventListener2>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_HARDWARE_SENSOREVENTCALLBACK_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_HARDWARE_SENSOREVENTCALLBACK)
#define SCAPIX_JAVA_API_ANDROID_HARDWARE_SENSOREVENTCALLBACK

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/hardware/Sensor.h>
#include <scapix/java_api/android/hardware/SensorAdditionalInfo.h>
#include <scapix/java_api/android/hardware/SensorEvent.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::hardware::SensorEventCallback : public jni::object_base<"android/hardware/SensorEventCallback",
	java::lang::Object,
	android::hardware::SensorEventListener2>
{
public:

	static jni::ref<android::hardware::SensorEventCallback> new_object() { return base_::new_object(); }
	void onSensorChanged(jni::ref<android::hardware::SensorEvent> event) { return call_method<"onSensorChanged", void>(event); }
	void onAccuracyChanged(jni::ref<android::hardware::Sensor> sensor, jint accuracy) { return call_method<"onAccuracyChanged", void>(sensor, accuracy); }
	void onFlushCompleted(jni::ref<android::hardware::Sensor> sensor) { return call_method<"onFlushCompleted", void>(sensor); }
	void onSensorAdditionalInfo(jni::ref<android::hardware::SensorAdditionalInfo> info) { return call_method<"onSensorAdditionalInfo", void>(info); }

protected:

	SensorEventCallback(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_HARDWARE_SENSOREVENTCALLBACK
