// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/AutoCloseable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA2_DNGCREATOR_FWD
#define SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA2_DNGCREATOR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::hardware::camera2 { class DngCreator; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::hardware::camera2::DngCreator>
{
	static constexpr fixed_string class_name = "android/hardware/camera2/DngCreator";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::lang::AutoCloseable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA2_DNGCREATOR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA2_DNGCREATOR)
#define SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA2_DNGCREATOR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/graphics/Bitmap.h>
#include <scapix/java_api/android/hardware/camera2/CameraCharacteristics.h>
#include <scapix/java_api/android/hardware/camera2/CaptureResult.h>
#include <scapix/java_api/android/location/Location.h>
#include <scapix/java_api/android/media/Image.h>
#include <scapix/java_api/android/util/Size.h>
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/io/OutputStream.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/nio/ByteBuffer.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::hardware::camera2::DngCreator : public jni::object_base<"android/hardware/camera2/DngCreator",
	java::lang::Object,
	java::lang::AutoCloseable>
{
public:

	static jint MAX_THUMBNAIL_DIMENSION() { return get_static_field<"MAX_THUMBNAIL_DIMENSION", jint>(); }

	static jni::ref<android::hardware::camera2::DngCreator> new_object(jni::ref<android::hardware::camera2::CameraCharacteristics> characteristics, jni::ref<android::hardware::camera2::CaptureResult> metadata) { return base_::new_object(characteristics, metadata); }
	jni::ref<android::hardware::camera2::DngCreator> setOrientation(jint orientation) { return call_method<"setOrientation", jni::ref<android::hardware::camera2::DngCreator>>(orientation); }
	jni::ref<android::hardware::camera2::DngCreator> setThumbnail(jni::ref<android::graphics::Bitmap> pixels) { return call_method<"setThumbnail", jni::ref<android::hardware::camera2::DngCreator>>(pixels); }
	jni::ref<android::hardware::camera2::DngCreator> setThumbnail(jni::ref<android::media::Image> pixels) { return call_method<"setThumbnail", jni::ref<android::hardware::camera2::DngCreator>>(pixels); }
	jni::ref<android::hardware::camera2::DngCreator> setLocation(jni::ref<android::location::Location> location) { return call_method<"setLocation", jni::ref<android::hardware::camera2::DngCreator>>(location); }
	jni::ref<android::hardware::camera2::DngCreator> setDescription(jni::ref<java::lang::String> description) { return call_method<"setDescription", jni::ref<android::hardware::camera2::DngCreator>>(description); }
	void writeInputStream(jni::ref<java::io::OutputStream> dngOutput, jni::ref<android::util::Size> size, jni::ref<java::io::InputStream> pixels, jlong offset) { return call_method<"writeInputStream", void>(dngOutput, size, pixels, offset); }
	void writeByteBuffer(jni::ref<java::io::OutputStream> dngOutput, jni::ref<android::util::Size> size, jni::ref<java::nio::ByteBuffer> pixels, jlong offset) { return call_method<"writeByteBuffer", void>(dngOutput, size, pixels, offset); }
	void writeImage(jni::ref<java::io::OutputStream> dngOutput, jni::ref<android::media::Image> pixels) { return call_method<"writeImage", void>(dngOutput, pixels); }
	void close() { return call_method<"close", void>(); }

protected:

	DngCreator(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA2_DNGCREATOR
