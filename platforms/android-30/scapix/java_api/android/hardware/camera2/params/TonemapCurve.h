// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA2_PARAMS_TONEMAPCURVE_FWD
#define SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA2_PARAMS_TONEMAPCURVE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::hardware::camera2::params { class TonemapCurve; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::hardware::camera2::params::TonemapCurve>
{
	static constexpr fixed_string class_name = "android/hardware/camera2/params/TonemapCurve";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA2_PARAMS_TONEMAPCURVE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA2_PARAMS_TONEMAPCURVE)
#define SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA2_PARAMS_TONEMAPCURVE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/graphics/PointF.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::hardware::camera2::params::TonemapCurve : public jni::object_base<"android/hardware/camera2/params/TonemapCurve",
	java::lang::Object>
{
public:

	static jint CHANNEL_BLUE() { return get_static_field<"CHANNEL_BLUE", jint>(); }
	static jint CHANNEL_GREEN() { return get_static_field<"CHANNEL_GREEN", jint>(); }
	static jint CHANNEL_RED() { return get_static_field<"CHANNEL_RED", jint>(); }
	static jfloat LEVEL_BLACK() { return get_static_field<"LEVEL_BLACK", jfloat>(); }
	static jfloat LEVEL_WHITE() { return get_static_field<"LEVEL_WHITE", jfloat>(); }
	static jint POINT_SIZE() { return get_static_field<"POINT_SIZE", jint>(); }

	static jni::ref<android::hardware::camera2::params::TonemapCurve> new_object(jni::ref<jni::array<jfloat>> red, jni::ref<jni::array<jfloat>> green, jni::ref<jni::array<jfloat>> blue) { return base_::new_object(red, green, blue); }
	jint getPointCount(jint colorChannel) { return call_method<"getPointCount", jint>(colorChannel); }
	jni::ref<android::graphics::PointF> getPoint(jint colorChannel, jint index) { return call_method<"getPoint", jni::ref<android::graphics::PointF>>(colorChannel, index); }
	void copyColorCurve(jint colorChannel, jni::ref<jni::array<jfloat>> destination, jint offset) { return call_method<"copyColorCurve", void>(colorChannel, destination, offset); }
	jboolean equals(jni::ref<java::lang::Object> obj) { return call_method<"equals", jboolean>(obj); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	TonemapCurve(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA2_PARAMS_TONEMAPCURVE
