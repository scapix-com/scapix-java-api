// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIACODEC_LINEARBLOCK_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIACODEC_LINEARBLOCK_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media { class MediaCodec_LinearBlock; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::MediaCodec_LinearBlock>
{
	static constexpr fixed_string class_name = "android/media/MediaCodec$LinearBlock";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIACODEC_LINEARBLOCK_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIACODEC_LINEARBLOCK)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIACODEC_LINEARBLOCK

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/nio/ByteBuffer.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::MediaCodec_LinearBlock : public jni::object_base<"android/media/MediaCodec$LinearBlock",
	java::lang::Object>
{
public:

	jboolean isMappable() { return call_method<"isMappable", jboolean>(); }
	jni::ref<java::nio::ByteBuffer> map() { return call_method<"map", jni::ref<java::nio::ByteBuffer>>(); }
	void recycle() { return call_method<"recycle", void>(); }
	static jboolean isCodecCopyFreeCompatible(jni::ref<jni::array<java::lang::String>> codecNames) { return call_static_method<"isCodecCopyFreeCompatible", jboolean>(codecNames); }
	static jni::ref<android::media::MediaCodec_LinearBlock> obtain(jint capacity, jni::ref<jni::array<java::lang::String>> codecNames) { return call_static_method<"obtain", jni::ref<android::media::MediaCodec_LinearBlock>>(capacity, codecNames); }

protected:

	MediaCodec_LinearBlock(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIACODEC_LINEARBLOCK
