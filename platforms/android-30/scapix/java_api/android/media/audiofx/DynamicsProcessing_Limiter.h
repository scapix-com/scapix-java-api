// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/media/audiofx/DynamicsProcessing_Stage.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOFX_DYNAMICSPROCESSING_LIMITER_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOFX_DYNAMICSPROCESSING_LIMITER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media::audiofx { class DynamicsProcessing_Limiter; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::audiofx::DynamicsProcessing_Limiter>
{
	static constexpr fixed_string class_name = "android/media/audiofx/DynamicsProcessing$Limiter";
	using base_classes = std::tuple<scapix::java_api::android::media::audiofx::DynamicsProcessing_Stage>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOFX_DYNAMICSPROCESSING_LIMITER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOFX_DYNAMICSPROCESSING_LIMITER)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOFX_DYNAMICSPROCESSING_LIMITER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::audiofx::DynamicsProcessing_Limiter : public jni::object_base<"android/media/audiofx/DynamicsProcessing$Limiter",
	android::media::audiofx::DynamicsProcessing_Stage>
{
public:

	static jni::ref<android::media::audiofx::DynamicsProcessing_Limiter> new_object(jboolean inUse, jboolean enabled, jint linkGroup, jfloat attackTime, jfloat releaseTime, jfloat ratio, jfloat threshold, jfloat postGain) { return base_::new_object(inUse, enabled, linkGroup, attackTime, releaseTime, ratio, threshold, postGain); }
	static jni::ref<android::media::audiofx::DynamicsProcessing_Limiter> new_object(jni::ref<android::media::audiofx::DynamicsProcessing_Limiter> cfg) { return base_::new_object(cfg); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jint getLinkGroup() { return call_method<"getLinkGroup", jint>(); }
	void setLinkGroup(jint linkGroup) { return call_method<"setLinkGroup", void>(linkGroup); }
	jfloat getAttackTime() { return call_method<"getAttackTime", jfloat>(); }
	void setAttackTime(jfloat attackTime) { return call_method<"setAttackTime", void>(attackTime); }
	jfloat getReleaseTime() { return call_method<"getReleaseTime", jfloat>(); }
	void setReleaseTime(jfloat releaseTime) { return call_method<"setReleaseTime", void>(releaseTime); }
	jfloat getRatio() { return call_method<"getRatio", jfloat>(); }
	void setRatio(jfloat ratio) { return call_method<"setRatio", void>(ratio); }
	jfloat getThreshold() { return call_method<"getThreshold", jfloat>(); }
	void setThreshold(jfloat threshold) { return call_method<"setThreshold", void>(threshold); }
	jfloat getPostGain() { return call_method<"getPostGain", jfloat>(); }
	void setPostGain(jfloat postGain) { return call_method<"setPostGain", void>(postGain); }

protected:

	DynamicsProcessing_Limiter(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOFX_DYNAMICSPROCESSING_LIMITER
