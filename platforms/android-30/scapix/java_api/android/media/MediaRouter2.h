// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIAROUTER2_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIAROUTER2_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media { class MediaRouter2; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::MediaRouter2>
{
	static constexpr fixed_string class_name = "android/media/MediaRouter2";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIAROUTER2_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIAROUTER2)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIAROUTER2

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/media/MediaRoute2Info.h>
#include <scapix/java_api/android/media/MediaRouter2_ControllerCallback.h>
#include <scapix/java_api/android/media/MediaRouter2_OnGetControllerHintsListener.h>
#include <scapix/java_api/android/media/MediaRouter2_RouteCallback.h>
#include <scapix/java_api/android/media/MediaRouter2_RoutingController.h>
#include <scapix/java_api/android/media/MediaRouter2_TransferCallback.h>
#include <scapix/java_api/android/media/RouteDiscoveryPreference.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/java/util/concurrent/Executor.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::MediaRouter2 : public jni::object_base<"android/media/MediaRouter2",
	java::lang::Object>
{
public:

	using TransferCallback = MediaRouter2_TransferCallback;
	using RoutingController = MediaRouter2_RoutingController;
	using RouteCallback = MediaRouter2_RouteCallback;
	using OnGetControllerHintsListener = MediaRouter2_OnGetControllerHintsListener;
	using ControllerCallback = MediaRouter2_ControllerCallback;

	static jni::ref<android::media::MediaRouter2> getInstance(jni::ref<android::content::Context> context) { return call_static_method<"getInstance", jni::ref<android::media::MediaRouter2>>(context); }
	void registerRouteCallback(jni::ref<java::util::concurrent::Executor> executor, jni::ref<android::media::MediaRouter2_RouteCallback> routeCallback, jni::ref<android::media::RouteDiscoveryPreference> preference) { return call_method<"registerRouteCallback", void>(executor, routeCallback, preference); }
	void unregisterRouteCallback(jni::ref<android::media::MediaRouter2_RouteCallback> routeCallback) { return call_method<"unregisterRouteCallback", void>(routeCallback); }
	jni::ref<java::util::List> getRoutes() { return call_method<"getRoutes", jni::ref<java::util::List>>(); }
	void registerTransferCallback(jni::ref<java::util::concurrent::Executor> executor, jni::ref<android::media::MediaRouter2_TransferCallback> callback) { return call_method<"registerTransferCallback", void>(executor, callback); }
	void unregisterTransferCallback(jni::ref<android::media::MediaRouter2_TransferCallback> callback) { return call_method<"unregisterTransferCallback", void>(callback); }
	void registerControllerCallback(jni::ref<java::util::concurrent::Executor> executor, jni::ref<android::media::MediaRouter2_ControllerCallback> callback) { return call_method<"registerControllerCallback", void>(executor, callback); }
	void unregisterControllerCallback(jni::ref<android::media::MediaRouter2_ControllerCallback> callback) { return call_method<"unregisterControllerCallback", void>(callback); }
	void setOnGetControllerHintsListener(jni::ref<android::media::MediaRouter2_OnGetControllerHintsListener> listener) { return call_method<"setOnGetControllerHintsListener", void>(listener); }
	void transferTo(jni::ref<android::media::MediaRoute2Info> route) { return call_method<"transferTo", void>(route); }
	void stop() { return call_method<"stop", void>(); }
	jni::ref<android::media::MediaRouter2_RoutingController> getSystemController() { return call_method<"getSystemController", jni::ref<android::media::MediaRouter2_RoutingController>>(); }
	jni::ref<java::util::List> getControllers() { return call_method<"getControllers", jni::ref<java::util::List>>(); }

protected:

	MediaRouter2(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIAROUTER2
