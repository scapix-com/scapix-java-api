// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIAROUTER_ROUTEINFO_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIAROUTER_ROUTEINFO_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media { class MediaRouter_RouteInfo; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::MediaRouter_RouteInfo>
{
	static constexpr fixed_string class_name = "android/media/MediaRouter$RouteInfo";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIAROUTER_ROUTEINFO_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIAROUTER_ROUTEINFO)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIAROUTER_ROUTEINFO

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/graphics/drawable/Drawable.h>
#include <scapix/java_api/android/media/MediaRouter_RouteCategory.h>
#include <scapix/java_api/android/media/MediaRouter_RouteGroup.h>
#include <scapix/java_api/android/view/Display.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::MediaRouter_RouteInfo : public jni::object_base<"android/media/MediaRouter$RouteInfo",
	java::lang::Object>
{
public:

	static jint DEVICE_TYPE_BLUETOOTH() { return get_static_field<"DEVICE_TYPE_BLUETOOTH", jint>(); }
	static jint DEVICE_TYPE_SPEAKER() { return get_static_field<"DEVICE_TYPE_SPEAKER", jint>(); }
	static jint DEVICE_TYPE_TV() { return get_static_field<"DEVICE_TYPE_TV", jint>(); }
	static jint DEVICE_TYPE_UNKNOWN() { return get_static_field<"DEVICE_TYPE_UNKNOWN", jint>(); }
	static jint PLAYBACK_TYPE_LOCAL() { return get_static_field<"PLAYBACK_TYPE_LOCAL", jint>(); }
	static jint PLAYBACK_TYPE_REMOTE() { return get_static_field<"PLAYBACK_TYPE_REMOTE", jint>(); }
	static jint PLAYBACK_VOLUME_FIXED() { return get_static_field<"PLAYBACK_VOLUME_FIXED", jint>(); }
	static jint PLAYBACK_VOLUME_VARIABLE() { return get_static_field<"PLAYBACK_VOLUME_VARIABLE", jint>(); }

	jni::ref<java::lang::CharSequence> getName() { return call_method<"getName", jni::ref<java::lang::CharSequence>>(); }
	jni::ref<java::lang::CharSequence> getName(jni::ref<android::content::Context> context) { return call_method<"getName", jni::ref<java::lang::CharSequence>>(context); }
	jni::ref<java::lang::CharSequence> getDescription() { return call_method<"getDescription", jni::ref<java::lang::CharSequence>>(); }
	jni::ref<java::lang::CharSequence> getStatus() { return call_method<"getStatus", jni::ref<java::lang::CharSequence>>(); }
	jint getSupportedTypes() { return call_method<"getSupportedTypes", jint>(); }
	jint getDeviceType() { return call_method<"getDeviceType", jint>(); }
	jni::ref<android::media::MediaRouter_RouteGroup> getGroup() { return call_method<"getGroup", jni::ref<android::media::MediaRouter_RouteGroup>>(); }
	jni::ref<android::media::MediaRouter_RouteCategory> getCategory() { return call_method<"getCategory", jni::ref<android::media::MediaRouter_RouteCategory>>(); }
	jni::ref<android::graphics::drawable::Drawable> getIconDrawable() { return call_method<"getIconDrawable", jni::ref<android::graphics::drawable::Drawable>>(); }
	void setTag(jni::ref<java::lang::Object> tag) { return call_method<"setTag", void>(tag); }
	jni::ref<java::lang::Object> getTag() { return call_method<"getTag", jni::ref<java::lang::Object>>(); }
	jint getPlaybackType() { return call_method<"getPlaybackType", jint>(); }
	jint getPlaybackStream() { return call_method<"getPlaybackStream", jint>(); }
	jint getVolume() { return call_method<"getVolume", jint>(); }
	void requestSetVolume(jint volume) { return call_method<"requestSetVolume", void>(volume); }
	void requestUpdateVolume(jint direction) { return call_method<"requestUpdateVolume", void>(direction); }
	jint getVolumeMax() { return call_method<"getVolumeMax", jint>(); }
	jint getVolumeHandling() { return call_method<"getVolumeHandling", jint>(); }
	jni::ref<android::view::Display> getPresentationDisplay() { return call_method<"getPresentationDisplay", jni::ref<android::view::Display>>(); }
	jboolean isEnabled() { return call_method<"isEnabled", jboolean>(); }
	jboolean isConnecting() { return call_method<"isConnecting", jboolean>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	MediaRouter_RouteInfo(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIAROUTER_ROUTEINFO
