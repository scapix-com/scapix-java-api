// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOPRESENTATION_BUILDER_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOPRESENTATION_BUILDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media { class AudioPresentation_Builder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::AudioPresentation_Builder>
{
	static constexpr fixed_string class_name = "android/media/AudioPresentation$Builder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOPRESENTATION_BUILDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOPRESENTATION_BUILDER)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOPRESENTATION_BUILDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/icu/util/ULocale.h>
#include <scapix/java_api/android/media/AudioPresentation.h>
#include <scapix/java_api/java/util/Map.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::AudioPresentation_Builder : public jni::object_base<"android/media/AudioPresentation$Builder",
	java::lang::Object>
{
public:

	static jni::ref<android::media::AudioPresentation_Builder> new_object(jint presentationId) { return base_::new_object(presentationId); }
	jni::ref<android::media::AudioPresentation_Builder> setProgramId(jint programId) { return call_method<"setProgramId", jni::ref<android::media::AudioPresentation_Builder>>(programId); }
	jni::ref<android::media::AudioPresentation_Builder> setLocale(jni::ref<android::icu::util::ULocale> language) { return call_method<"setLocale", jni::ref<android::media::AudioPresentation_Builder>>(language); }
	jni::ref<android::media::AudioPresentation_Builder> setMasteringIndication(jint masteringIndication) { return call_method<"setMasteringIndication", jni::ref<android::media::AudioPresentation_Builder>>(masteringIndication); }
	jni::ref<android::media::AudioPresentation_Builder> setLabels(jni::ref<java::util::Map> labels) { return call_method<"setLabels", jni::ref<android::media::AudioPresentation_Builder>>(labels); }
	jni::ref<android::media::AudioPresentation_Builder> setHasAudioDescription(jboolean audioDescriptionAvailable) { return call_method<"setHasAudioDescription", jni::ref<android::media::AudioPresentation_Builder>>(audioDescriptionAvailable); }
	jni::ref<android::media::AudioPresentation_Builder> setHasSpokenSubtitles(jboolean spokenSubtitlesAvailable) { return call_method<"setHasSpokenSubtitles", jni::ref<android::media::AudioPresentation_Builder>>(spokenSubtitlesAvailable); }
	jni::ref<android::media::AudioPresentation_Builder> setHasDialogueEnhancement(jboolean dialogueEnhancementAvailable) { return call_method<"setHasDialogueEnhancement", jni::ref<android::media::AudioPresentation_Builder>>(dialogueEnhancementAvailable); }
	jni::ref<android::media::AudioPresentation> build() { return call_method<"build", jni::ref<android::media::AudioPresentation>>(); }

protected:

	AudioPresentation_Builder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOPRESENTATION_BUILDER
