// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_DATABASE_OBSERVABLE_FWD
#define SCAPIX_JAVA_API_ANDROID_DATABASE_OBSERVABLE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::database { class Observable; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::database::Observable>
{
	static constexpr fixed_string class_name = "android/database/Observable";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_DATABASE_OBSERVABLE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_DATABASE_OBSERVABLE)
#define SCAPIX_JAVA_API_ANDROID_DATABASE_OBSERVABLE

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::database::Observable : public jni::object_base<"android/database/Observable",
	java::lang::Object>
{
public:

	static jni::ref<android::database::Observable> new_object() { return base_::new_object(); }
	void registerObserver(jni::ref<java::lang::Object> observer) { return call_method<"registerObserver", void>(observer); }
	void unregisterObserver(jni::ref<java::lang::Object> observer) { return call_method<"unregisterObserver", void>(observer); }
	void unregisterAll() { return call_method<"unregisterAll", void>(); }

protected:

	Observable(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_DATABASE_OBSERVABLE
