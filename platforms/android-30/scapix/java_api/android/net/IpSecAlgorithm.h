// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_NET_IPSECALGORITHM_FWD
#define SCAPIX_JAVA_API_ANDROID_NET_IPSECALGORITHM_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::net { class IpSecAlgorithm; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::net::IpSecAlgorithm>
{
	static constexpr fixed_string class_name = "android/net/IpSecAlgorithm";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_IPSECALGORITHM_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_NET_IPSECALGORITHM)
#define SCAPIX_JAVA_API_ANDROID_NET_IPSECALGORITHM

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::net::IpSecAlgorithm : public jni::object_base<"android/net/IpSecAlgorithm",
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static jni::ref<java::lang::String> AUTH_CRYPT_AES_GCM() { return get_static_field<"AUTH_CRYPT_AES_GCM", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> AUTH_HMAC_MD5() { return get_static_field<"AUTH_HMAC_MD5", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> AUTH_HMAC_SHA1() { return get_static_field<"AUTH_HMAC_SHA1", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> AUTH_HMAC_SHA256() { return get_static_field<"AUTH_HMAC_SHA256", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> AUTH_HMAC_SHA384() { return get_static_field<"AUTH_HMAC_SHA384", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> AUTH_HMAC_SHA512() { return get_static_field<"AUTH_HMAC_SHA512", jni::ref<java::lang::String>>(); }
	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }
	static jni::ref<java::lang::String> CRYPT_AES_CBC() { return get_static_field<"CRYPT_AES_CBC", jni::ref<java::lang::String>>(); }

	static jni::ref<android::net::IpSecAlgorithm> new_object(jni::ref<java::lang::String> algorithm, jni::ref<jni::array<jbyte>> key) { return base_::new_object(algorithm, key); }
	static jni::ref<android::net::IpSecAlgorithm> new_object(jni::ref<java::lang::String> algorithm, jni::ref<jni::array<jbyte>> key, jint truncLenBits) { return base_::new_object(algorithm, key, truncLenBits); }
	jni::ref<java::lang::String> getName() { return call_method<"getName", jni::ref<java::lang::String>>(); }
	jni::ref<jni::array<jbyte>> getKey() { return call_method<"getKey", jni::ref<jni::array<jbyte>>>(); }
	jint getTruncationLengthBits() { return call_method<"getTruncationLengthBits", jint>(); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	void writeToParcel(jni::ref<android::os::Parcel> out, jint flags) { return call_method<"writeToParcel", void>(out, flags); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	IpSecAlgorithm(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_IPSECALGORITHM
