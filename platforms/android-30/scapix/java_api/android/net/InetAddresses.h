// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_NET_INETADDRESSES_FWD
#define SCAPIX_JAVA_API_ANDROID_NET_INETADDRESSES_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::net { class InetAddresses; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::net::InetAddresses>
{
	static constexpr fixed_string class_name = "android/net/InetAddresses";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_INETADDRESSES_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_NET_INETADDRESSES)
#define SCAPIX_JAVA_API_ANDROID_NET_INETADDRESSES

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/net/InetAddress.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::net::InetAddresses : public jni::object_base<"android/net/InetAddresses",
	java::lang::Object>
{
public:

	static jboolean isNumericAddress(jni::ref<java::lang::String> address) { return call_static_method<"isNumericAddress", jboolean>(address); }
	static jni::ref<java::net::InetAddress> parseNumericAddress(jni::ref<java::lang::String> address) { return call_static_method<"parseNumericAddress", jni::ref<java::net::InetAddress>>(address); }

protected:

	InetAddresses(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_INETADDRESSES
