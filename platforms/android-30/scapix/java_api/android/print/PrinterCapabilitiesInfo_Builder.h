// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_PRINT_PRINTERCAPABILITIESINFO_BUILDER_FWD
#define SCAPIX_JAVA_API_ANDROID_PRINT_PRINTERCAPABILITIESINFO_BUILDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::print { class PrinterCapabilitiesInfo_Builder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::print::PrinterCapabilitiesInfo_Builder>
{
	static constexpr fixed_string class_name = "android/print/PrinterCapabilitiesInfo$Builder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_PRINT_PRINTERCAPABILITIESINFO_BUILDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_PRINT_PRINTERCAPABILITIESINFO_BUILDER)
#define SCAPIX_JAVA_API_ANDROID_PRINT_PRINTERCAPABILITIESINFO_BUILDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/print/PrintAttributes_Margins.h>
#include <scapix/java_api/android/print/PrintAttributes_MediaSize.h>
#include <scapix/java_api/android/print/PrintAttributes_Resolution.h>
#include <scapix/java_api/android/print/PrinterCapabilitiesInfo.h>
#include <scapix/java_api/android/print/PrinterId.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::print::PrinterCapabilitiesInfo_Builder : public jni::object_base<"android/print/PrinterCapabilitiesInfo$Builder",
	java::lang::Object>
{
public:

	static jni::ref<android::print::PrinterCapabilitiesInfo_Builder> new_object(jni::ref<android::print::PrinterId> printerId) { return base_::new_object(printerId); }
	jni::ref<android::print::PrinterCapabilitiesInfo_Builder> addMediaSize(jni::ref<android::print::PrintAttributes_MediaSize> mediaSize, jboolean isDefault) { return call_method<"addMediaSize", jni::ref<android::print::PrinterCapabilitiesInfo_Builder>>(mediaSize, isDefault); }
	jni::ref<android::print::PrinterCapabilitiesInfo_Builder> addResolution(jni::ref<android::print::PrintAttributes_Resolution> resolution, jboolean isDefault) { return call_method<"addResolution", jni::ref<android::print::PrinterCapabilitiesInfo_Builder>>(resolution, isDefault); }
	jni::ref<android::print::PrinterCapabilitiesInfo_Builder> setMinMargins(jni::ref<android::print::PrintAttributes_Margins> margins) { return call_method<"setMinMargins", jni::ref<android::print::PrinterCapabilitiesInfo_Builder>>(margins); }
	jni::ref<android::print::PrinterCapabilitiesInfo_Builder> setColorModes(jint colorModes, jint defaultColorMode) { return call_method<"setColorModes", jni::ref<android::print::PrinterCapabilitiesInfo_Builder>>(colorModes, defaultColorMode); }
	jni::ref<android::print::PrinterCapabilitiesInfo_Builder> setDuplexModes(jint duplexModes, jint defaultDuplexMode) { return call_method<"setDuplexModes", jni::ref<android::print::PrinterCapabilitiesInfo_Builder>>(duplexModes, defaultDuplexMode); }
	jni::ref<android::print::PrinterCapabilitiesInfo> build() { return call_method<"build", jni::ref<android::print::PrinterCapabilitiesInfo>>(); }

protected:

	PrinterCapabilitiesInfo_Builder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_PRINT_PRINTERCAPABILITIESINFO_BUILDER
