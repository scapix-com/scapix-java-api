// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_TELEPHONY_SIGNALSTRENGTH_FWD
#define SCAPIX_JAVA_API_ANDROID_TELEPHONY_SIGNALSTRENGTH_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::telephony { class SignalStrength; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::telephony::SignalStrength>
{
	static constexpr fixed_string class_name = "android/telephony/SignalStrength";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TELEPHONY_SIGNALSTRENGTH_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_TELEPHONY_SIGNALSTRENGTH)
#define SCAPIX_JAVA_API_ANDROID_TELEPHONY_SIGNALSTRENGTH

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::telephony::SignalStrength : public jni::object_base<"android/telephony/SignalStrength",
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }
	static jint INVALID() { return get_static_field<"INVALID", jint>(); }

	jni::ref<java::util::List> getCellSignalStrengths() { return call_method<"getCellSignalStrengths", jni::ref<java::util::List>>(); }
	jni::ref<java::util::List> getCellSignalStrengths(jni::ref<java::lang::Class> clazz) { return call_method<"getCellSignalStrengths", jni::ref<java::util::List>>(clazz); }
	void writeToParcel(jni::ref<android::os::Parcel> out, jint flags) { return call_method<"writeToParcel", void>(out, flags); }
	jlong getTimestampMillis() { return call_method<"getTimestampMillis", jlong>(); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	jint getGsmSignalStrength() { return call_method<"getGsmSignalStrength", jint>(); }
	jint getGsmBitErrorRate() { return call_method<"getGsmBitErrorRate", jint>(); }
	jint getCdmaDbm() { return call_method<"getCdmaDbm", jint>(); }
	jint getCdmaEcio() { return call_method<"getCdmaEcio", jint>(); }
	jint getEvdoDbm() { return call_method<"getEvdoDbm", jint>(); }
	jint getEvdoEcio() { return call_method<"getEvdoEcio", jint>(); }
	jint getEvdoSnr() { return call_method<"getEvdoSnr", jint>(); }
	jint getLevel() { return call_method<"getLevel", jint>(); }
	jboolean isGsm() { return call_method<"isGsm", jboolean>(); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jboolean equals(jni::ref<java::lang::Object> o) { return call_method<"equals", jboolean>(o); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	SignalStrength(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TELEPHONY_SIGNALSTRENGTH
