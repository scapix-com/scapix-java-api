// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_OS_TRACE_FWD
#define SCAPIX_JAVA_API_ANDROID_OS_TRACE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::os { class Trace; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::os::Trace>
{
	static constexpr fixed_string class_name = "android/os/Trace";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_OS_TRACE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_OS_TRACE)
#define SCAPIX_JAVA_API_ANDROID_OS_TRACE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::os::Trace : public jni::object_base<"android/os/Trace",
	java::lang::Object>
{
public:

	static jboolean isEnabled() { return call_static_method<"isEnabled", jboolean>(); }
	static void beginSection(jni::ref<java::lang::String> sectionName) { return call_static_method<"beginSection", void>(sectionName); }
	static void endSection() { return call_static_method<"endSection", void>(); }
	static void beginAsyncSection(jni::ref<java::lang::String> methodName, jint cookie) { return call_static_method<"beginAsyncSection", void>(methodName, cookie); }
	static void endAsyncSection(jni::ref<java::lang::String> methodName, jint cookie) { return call_static_method<"endAsyncSection", void>(methodName, cookie); }
	static void setCounter(jni::ref<java::lang::String> counterName, jlong counterValue) { return call_static_method<"setCounter", void>(counterName, counterValue); }

protected:

	Trace(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_OS_TRACE
