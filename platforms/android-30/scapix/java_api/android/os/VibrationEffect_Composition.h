// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_OS_VIBRATIONEFFECT_COMPOSITION_FWD
#define SCAPIX_JAVA_API_ANDROID_OS_VIBRATIONEFFECT_COMPOSITION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::os { class VibrationEffect_Composition; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::os::VibrationEffect_Composition>
{
	static constexpr fixed_string class_name = "android/os/VibrationEffect$Composition";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_OS_VIBRATIONEFFECT_COMPOSITION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_OS_VIBRATIONEFFECT_COMPOSITION)
#define SCAPIX_JAVA_API_ANDROID_OS_VIBRATIONEFFECT_COMPOSITION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/os/VibrationEffect.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::os::VibrationEffect_Composition : public jni::object_base<"android/os/VibrationEffect$Composition",
	java::lang::Object>
{
public:

	static jint PRIMITIVE_CLICK() { return get_static_field<"PRIMITIVE_CLICK", jint>(); }
	static jint PRIMITIVE_QUICK_FALL() { return get_static_field<"PRIMITIVE_QUICK_FALL", jint>(); }
	static jint PRIMITIVE_QUICK_RISE() { return get_static_field<"PRIMITIVE_QUICK_RISE", jint>(); }
	static jint PRIMITIVE_SLOW_RISE() { return get_static_field<"PRIMITIVE_SLOW_RISE", jint>(); }
	static jint PRIMITIVE_TICK() { return get_static_field<"PRIMITIVE_TICK", jint>(); }

	jni::ref<android::os::VibrationEffect_Composition> addPrimitive(jint primitiveId) { return call_method<"addPrimitive", jni::ref<android::os::VibrationEffect_Composition>>(primitiveId); }
	jni::ref<android::os::VibrationEffect_Composition> addPrimitive(jint primitiveId, jfloat scale) { return call_method<"addPrimitive", jni::ref<android::os::VibrationEffect_Composition>>(primitiveId, scale); }
	jni::ref<android::os::VibrationEffect_Composition> addPrimitive(jint primitiveId, jfloat scale, jint delay) { return call_method<"addPrimitive", jni::ref<android::os::VibrationEffect_Composition>>(primitiveId, scale, delay); }
	jni::ref<android::os::VibrationEffect> compose() { return call_method<"compose", jni::ref<android::os::VibrationEffect>>(); }

protected:

	VibrationEffect_Composition(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_OS_VIBRATIONEFFECT_COMPOSITION
