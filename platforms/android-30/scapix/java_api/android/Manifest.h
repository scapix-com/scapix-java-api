// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MANIFEST_FWD
#define SCAPIX_JAVA_API_ANDROID_MANIFEST_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android { class Manifest; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::Manifest>
{
	static constexpr fixed_string class_name = "android/Manifest";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MANIFEST_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MANIFEST)
#define SCAPIX_JAVA_API_ANDROID_MANIFEST

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/Manifest_permission_group.h>
#include <scapix/java_api/android/Manifest_permission.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::Manifest : public jni::object_base<"android/Manifest",
	java::lang::Object>
{
public:

	using permission_group = Manifest_permission_group;
	using permission = Manifest_permission;

	static jni::ref<android::Manifest> new_object() { return base_::new_object(); }

protected:

	Manifest(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MANIFEST
