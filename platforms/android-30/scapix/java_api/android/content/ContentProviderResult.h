// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_CONTENT_CONTENTPROVIDERRESULT_FWD
#define SCAPIX_JAVA_API_ANDROID_CONTENT_CONTENTPROVIDERRESULT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::content { class ContentProviderResult; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::content::ContentProviderResult>
{
	static constexpr fixed_string class_name = "android/content/ContentProviderResult";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_CONTENT_CONTENTPROVIDERRESULT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_CONTENT_CONTENTPROVIDERRESULT)
#define SCAPIX_JAVA_API_ANDROID_CONTENT_CONTENTPROVIDERRESULT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/Integer.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/Throwable.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::content::ContentProviderResult : public jni::object_base<"android/content/ContentProviderResult",
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }
	jni::ref<java::lang::Integer> count() { return get_field<"count", jni::ref<java::lang::Integer>>(); }
	jni::ref<java::lang::Throwable> exception() { return get_field<"exception", jni::ref<java::lang::Throwable>>(); }
	jni::ref<android::os::Bundle> extras() { return get_field<"extras", jni::ref<android::os::Bundle>>(); }
	jni::ref<android::net::Uri> uri() { return get_field<"uri", jni::ref<android::net::Uri>>(); }

	static jni::ref<android::content::ContentProviderResult> new_object(jni::ref<android::net::Uri> uri) { return base_::new_object(uri); }
	static jni::ref<android::content::ContentProviderResult> new_object(jint count) { return base_::new_object(count); }
	static jni::ref<android::content::ContentProviderResult> new_object(jni::ref<android::os::Bundle> extras) { return base_::new_object(extras); }
	static jni::ref<android::content::ContentProviderResult> new_object(jni::ref<java::lang::Throwable> exception) { return base_::new_object(exception); }
	static jni::ref<android::content::ContentProviderResult> new_object(jni::ref<android::os::Parcel> source) { return base_::new_object(source); }
	void writeToParcel(jni::ref<android::os::Parcel> dest, jint flags) { return call_method<"writeToParcel", void>(dest, flags); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	ContentProviderResult(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_CONTENT_CONTENTPROVIDERRESULT
