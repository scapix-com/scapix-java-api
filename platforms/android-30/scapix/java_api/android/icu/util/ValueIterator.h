// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_ICU_UTIL_VALUEITERATOR_FWD
#define SCAPIX_JAVA_API_ANDROID_ICU_UTIL_VALUEITERATOR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::icu::util { class ValueIterator; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::icu::util::ValueIterator>
{
	static constexpr fixed_string class_name = "android/icu/util/ValueIterator";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_UTIL_VALUEITERATOR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_ICU_UTIL_VALUEITERATOR)
#define SCAPIX_JAVA_API_ANDROID_ICU_UTIL_VALUEITERATOR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/icu/util/ValueIterator_Element.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::icu::util::ValueIterator : public jni::object_base<"android/icu/util/ValueIterator",
	java::lang::Object>
{
public:

	using Element = ValueIterator_Element;

	jboolean next(jni::ref<android::icu::util::ValueIterator_Element> p1) { return call_method<"next", jboolean>(p1); }
	void reset() { return call_method<"reset", void>(); }
	void setRange(jint p1, jint p2) { return call_method<"setRange", void>(p1, p2); }

protected:

	ValueIterator(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_UTIL_VALUEITERATOR
