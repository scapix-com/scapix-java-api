// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/text/InputFilter.h>

#ifndef SCAPIX_JAVA_API_ANDROID_TEXT_LOGINFILTER_FWD
#define SCAPIX_JAVA_API_ANDROID_TEXT_LOGINFILTER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::text { class LoginFilter; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::text::LoginFilter>
{
	static constexpr fixed_string class_name = "android/text/LoginFilter";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::text::InputFilter>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEXT_LOGINFILTER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_TEXT_LOGINFILTER)
#define SCAPIX_JAVA_API_ANDROID_TEXT_LOGINFILTER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/text/Spanned.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/android/text/LoginFilter_UsernameFilterGeneric.h>
#include <scapix/java_api/android/text/LoginFilter_UsernameFilterGMail.h>
#include <scapix/java_api/android/text/LoginFilter_PasswordFilterGMail.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::text::LoginFilter : public jni::object_base<"android/text/LoginFilter",
	java::lang::Object,
	android::text::InputFilter>
{
public:

	using UsernameFilterGeneric = LoginFilter_UsernameFilterGeneric;
	using UsernameFilterGMail = LoginFilter_UsernameFilterGMail;
	using PasswordFilterGMail = LoginFilter_PasswordFilterGMail;

	jni::ref<java::lang::CharSequence> filter(jni::ref<java::lang::CharSequence> source, jint start, jint end, jni::ref<android::text::Spanned> dest, jint dstart, jint dend) { return call_method<"filter", jni::ref<java::lang::CharSequence>>(source, start, end, dest, dstart, dend); }
	void onStart() { return call_method<"onStart", void>(); }
	void onInvalidCharacter(jchar c) { return call_method<"onInvalidCharacter", void>(c); }
	void onStop() { return call_method<"onStop", void>(); }
	jboolean isAllowed(jchar p1) { return call_method<"isAllowed", jboolean>(p1); }

protected:

	LoginFilter(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEXT_LOGINFILTER
