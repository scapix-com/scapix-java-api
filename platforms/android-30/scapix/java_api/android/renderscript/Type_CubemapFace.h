// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Enum.h>

#ifndef SCAPIX_JAVA_API_ANDROID_RENDERSCRIPT_TYPE_CUBEMAPFACE_FWD
#define SCAPIX_JAVA_API_ANDROID_RENDERSCRIPT_TYPE_CUBEMAPFACE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::renderscript { class Type_CubemapFace; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::renderscript::Type_CubemapFace>
{
	static constexpr fixed_string class_name = "android/renderscript/Type$CubemapFace";
	using base_classes = std::tuple<scapix::java_api::java::lang::Enum>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_RENDERSCRIPT_TYPE_CUBEMAPFACE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_RENDERSCRIPT_TYPE_CUBEMAPFACE)
#define SCAPIX_JAVA_API_ANDROID_RENDERSCRIPT_TYPE_CUBEMAPFACE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::renderscript::Type_CubemapFace : public jni::object_base<"android/renderscript/Type$CubemapFace",
	java::lang::Enum>
{
public:

	static jni::ref<android::renderscript::Type_CubemapFace> POSITIVE_X() { return get_static_field<"POSITIVE_X", jni::ref<android::renderscript::Type_CubemapFace>>(); }
	static jni::ref<android::renderscript::Type_CubemapFace> NEGATIVE_X() { return get_static_field<"NEGATIVE_X", jni::ref<android::renderscript::Type_CubemapFace>>(); }
	static jni::ref<android::renderscript::Type_CubemapFace> POSITIVE_Y() { return get_static_field<"POSITIVE_Y", jni::ref<android::renderscript::Type_CubemapFace>>(); }
	static jni::ref<android::renderscript::Type_CubemapFace> NEGATIVE_Y() { return get_static_field<"NEGATIVE_Y", jni::ref<android::renderscript::Type_CubemapFace>>(); }
	static jni::ref<android::renderscript::Type_CubemapFace> POSITIVE_Z() { return get_static_field<"POSITIVE_Z", jni::ref<android::renderscript::Type_CubemapFace>>(); }
	static jni::ref<android::renderscript::Type_CubemapFace> NEGATIVE_Z() { return get_static_field<"NEGATIVE_Z", jni::ref<android::renderscript::Type_CubemapFace>>(); }
	static jni::ref<android::renderscript::Type_CubemapFace> POSITVE_X() { return get_static_field<"POSITVE_X", jni::ref<android::renderscript::Type_CubemapFace>>(); }
	static jni::ref<android::renderscript::Type_CubemapFace> POSITVE_Y() { return get_static_field<"POSITVE_Y", jni::ref<android::renderscript::Type_CubemapFace>>(); }
	static jni::ref<android::renderscript::Type_CubemapFace> POSITVE_Z() { return get_static_field<"POSITVE_Z", jni::ref<android::renderscript::Type_CubemapFace>>(); }

	static jni::ref<jni::array<android::renderscript::Type_CubemapFace>> values() { return call_static_method<"values", jni::ref<jni::array<android::renderscript::Type_CubemapFace>>>(); }
	static jni::ref<android::renderscript::Type_CubemapFace> valueOf(jni::ref<java::lang::String> name) { return call_static_method<"valueOf", jni::ref<android::renderscript::Type_CubemapFace>>(name); }

protected:

	Type_CubemapFace(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_RENDERSCRIPT_TYPE_CUBEMAPFACE
