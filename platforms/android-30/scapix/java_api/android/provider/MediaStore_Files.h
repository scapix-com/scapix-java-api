// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_PROVIDER_MEDIASTORE_FILES_FWD
#define SCAPIX_JAVA_API_ANDROID_PROVIDER_MEDIASTORE_FILES_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::provider { class MediaStore_Files; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::provider::MediaStore_Files>
{
	static constexpr fixed_string class_name = "android/provider/MediaStore$Files";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_PROVIDER_MEDIASTORE_FILES_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_PROVIDER_MEDIASTORE_FILES)
#define SCAPIX_JAVA_API_ANDROID_PROVIDER_MEDIASTORE_FILES

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/android/provider/MediaStore_Files_FileColumns.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::provider::MediaStore_Files : public jni::object_base<"android/provider/MediaStore$Files",
	java::lang::Object>
{
public:

	using FileColumns = MediaStore_Files_FileColumns;

	static jni::ref<android::provider::MediaStore_Files> new_object() { return base_::new_object(); }
	static jni::ref<android::net::Uri> getContentUri(jni::ref<java::lang::String> volumeName) { return call_static_method<"getContentUri", jni::ref<android::net::Uri>>(volumeName); }
	static jni::ref<android::net::Uri> getContentUri(jni::ref<java::lang::String> volumeName, jlong rowId) { return call_static_method<"getContentUri", jni::ref<android::net::Uri>>(volumeName, rowId); }

protected:

	MediaStore_Files(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_PROVIDER_MEDIASTORE_FILES
