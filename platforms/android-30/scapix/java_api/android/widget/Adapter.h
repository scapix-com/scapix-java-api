// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_WIDGET_ADAPTER_FWD
#define SCAPIX_JAVA_API_ANDROID_WIDGET_ADAPTER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::widget { class Adapter; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::widget::Adapter>
{
	static constexpr fixed_string class_name = "android/widget/Adapter";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_WIDGET_ADAPTER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_WIDGET_ADAPTER)
#define SCAPIX_JAVA_API_ANDROID_WIDGET_ADAPTER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/database/DataSetObserver.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/android/view/ViewGroup.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::widget::Adapter : public jni::object_base<"android/widget/Adapter",
	java::lang::Object>
{
public:

	static jint IGNORE_ITEM_VIEW_TYPE() { return get_static_field<"IGNORE_ITEM_VIEW_TYPE", jint>(); }
	static jint NO_SELECTION() { return get_static_field<"NO_SELECTION", jint>(); }

	void registerDataSetObserver(jni::ref<android::database::DataSetObserver> p1) { return call_method<"registerDataSetObserver", void>(p1); }
	void unregisterDataSetObserver(jni::ref<android::database::DataSetObserver> p1) { return call_method<"unregisterDataSetObserver", void>(p1); }
	jint getCount() { return call_method<"getCount", jint>(); }
	jni::ref<java::lang::Object> getItem(jint p1) { return call_method<"getItem", jni::ref<java::lang::Object>>(p1); }
	jlong getItemId(jint p1) { return call_method<"getItemId", jlong>(p1); }
	jboolean hasStableIds() { return call_method<"hasStableIds", jboolean>(); }
	jni::ref<android::view::View> getView(jint p1, jni::ref<android::view::View> p2, jni::ref<android::view::ViewGroup> p3) { return call_method<"getView", jni::ref<android::view::View>>(p1, p2, p3); }
	jint getItemViewType(jint p1) { return call_method<"getItemViewType", jint>(p1); }
	jint getViewTypeCount() { return call_method<"getViewTypeCount", jint>(); }
	jboolean isEmpty() { return call_method<"isEmpty", jboolean>(); }
	jni::ref<jni::array<java::lang::CharSequence>> getAutofillOptions() { return call_method<"getAutofillOptions", jni::ref<jni::array<java::lang::CharSequence>>>(); }

protected:

	Adapter(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_WIDGET_ADAPTER
