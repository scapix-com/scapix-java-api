// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_VIEW_TEXTCLASSIFIER_CONVERSATIONACTIONS_REQUEST_FWD
#define SCAPIX_JAVA_API_ANDROID_VIEW_TEXTCLASSIFIER_CONVERSATIONACTIONS_REQUEST_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::view::textclassifier { class ConversationActions_Request; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::view::textclassifier::ConversationActions_Request>
{
	static constexpr fixed_string class_name = "android/view/textclassifier/ConversationActions$Request";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_TEXTCLASSIFIER_CONVERSATIONACTIONS_REQUEST_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_VIEW_TEXTCLASSIFIER_CONVERSATIONACTIONS_REQUEST)
#define SCAPIX_JAVA_API_ANDROID_VIEW_TEXTCLASSIFIER_CONVERSATIONACTIONS_REQUEST

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/android/view/textclassifier/TextClassifier_EntityConfig.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/android/view/textclassifier/ConversationActions_Request_Builder.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::view::textclassifier::ConversationActions_Request : public jni::object_base<"android/view/textclassifier/ConversationActions$Request",
	java::lang::Object,
	android::os::Parcelable>
{
public:

	using Builder = ConversationActions_Request_Builder;

	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }
	static jni::ref<java::lang::String> HINT_FOR_IN_APP() { return get_static_field<"HINT_FOR_IN_APP", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> HINT_FOR_NOTIFICATION() { return get_static_field<"HINT_FOR_NOTIFICATION", jni::ref<java::lang::String>>(); }

	void writeToParcel(jni::ref<android::os::Parcel> parcel, jint flags) { return call_method<"writeToParcel", void>(parcel, flags); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	jni::ref<android::view::textclassifier::TextClassifier_EntityConfig> getTypeConfig() { return call_method<"getTypeConfig", jni::ref<android::view::textclassifier::TextClassifier_EntityConfig>>(); }
	jni::ref<java::util::List> getConversation() { return call_method<"getConversation", jni::ref<java::util::List>>(); }
	jint getMaxSuggestions() { return call_method<"getMaxSuggestions", jint>(); }
	jni::ref<java::util::List> getHints() { return call_method<"getHints", jni::ref<java::util::List>>(); }
	jni::ref<java::lang::String> getCallingPackageName() { return call_method<"getCallingPackageName", jni::ref<java::lang::String>>(); }
	jni::ref<android::os::Bundle> getExtras() { return call_method<"getExtras", jni::ref<android::os::Bundle>>(); }

protected:

	ConversationActions_Request(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_TEXTCLASSIFIER_CONVERSATIONACTIONS_REQUEST
