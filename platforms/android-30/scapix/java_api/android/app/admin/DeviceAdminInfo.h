// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_APP_ADMIN_DEVICEADMININFO_FWD
#define SCAPIX_JAVA_API_ANDROID_APP_ADMIN_DEVICEADMININFO_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::app::admin { class DeviceAdminInfo; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::app::admin::DeviceAdminInfo>
{
	static constexpr fixed_string class_name = "android/app/admin/DeviceAdminInfo";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_ADMIN_DEVICEADMININFO_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_APP_ADMIN_DEVICEADMININFO)
#define SCAPIX_JAVA_API_ANDROID_APP_ADMIN_DEVICEADMININFO

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/ComponentName.h>
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/content/pm/ActivityInfo.h>
#include <scapix/java_api/android/content/pm/PackageManager.h>
#include <scapix/java_api/android/content/pm/ResolveInfo.h>
#include <scapix/java_api/android/graphics/drawable/Drawable.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/android/util/Printer.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::app::admin::DeviceAdminInfo : public jni::object_base<"android/app/admin/DeviceAdminInfo",
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }
	static jint USES_ENCRYPTED_STORAGE() { return get_static_field<"USES_ENCRYPTED_STORAGE", jint>(); }
	static jint USES_POLICY_DISABLE_CAMERA() { return get_static_field<"USES_POLICY_DISABLE_CAMERA", jint>(); }
	static jint USES_POLICY_DISABLE_KEYGUARD_FEATURES() { return get_static_field<"USES_POLICY_DISABLE_KEYGUARD_FEATURES", jint>(); }
	static jint USES_POLICY_EXPIRE_PASSWORD() { return get_static_field<"USES_POLICY_EXPIRE_PASSWORD", jint>(); }
	static jint USES_POLICY_FORCE_LOCK() { return get_static_field<"USES_POLICY_FORCE_LOCK", jint>(); }
	static jint USES_POLICY_LIMIT_PASSWORD() { return get_static_field<"USES_POLICY_LIMIT_PASSWORD", jint>(); }
	static jint USES_POLICY_RESET_PASSWORD() { return get_static_field<"USES_POLICY_RESET_PASSWORD", jint>(); }
	static jint USES_POLICY_WATCH_LOGIN() { return get_static_field<"USES_POLICY_WATCH_LOGIN", jint>(); }
	static jint USES_POLICY_WIPE_DATA() { return get_static_field<"USES_POLICY_WIPE_DATA", jint>(); }

	static jni::ref<android::app::admin::DeviceAdminInfo> new_object(jni::ref<android::content::Context> context, jni::ref<android::content::pm::ResolveInfo> resolveInfo) { return base_::new_object(context, resolveInfo); }
	jni::ref<java::lang::String> getPackageName() { return call_method<"getPackageName", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getReceiverName() { return call_method<"getReceiverName", jni::ref<java::lang::String>>(); }
	jni::ref<android::content::pm::ActivityInfo> getActivityInfo() { return call_method<"getActivityInfo", jni::ref<android::content::pm::ActivityInfo>>(); }
	jni::ref<android::content::ComponentName> getComponent() { return call_method<"getComponent", jni::ref<android::content::ComponentName>>(); }
	jni::ref<java::lang::CharSequence> loadLabel(jni::ref<android::content::pm::PackageManager> pm) { return call_method<"loadLabel", jni::ref<java::lang::CharSequence>>(pm); }
	jni::ref<java::lang::CharSequence> loadDescription(jni::ref<android::content::pm::PackageManager> pm) { return call_method<"loadDescription", jni::ref<java::lang::CharSequence>>(pm); }
	jni::ref<android::graphics::drawable::Drawable> loadIcon(jni::ref<android::content::pm::PackageManager> pm) { return call_method<"loadIcon", jni::ref<android::graphics::drawable::Drawable>>(pm); }
	jboolean isVisible() { return call_method<"isVisible", jboolean>(); }
	jboolean usesPolicy(jint policyIdent) { return call_method<"usesPolicy", jboolean>(policyIdent); }
	jni::ref<java::lang::String> getTagForPolicy(jint policyIdent) { return call_method<"getTagForPolicy", jni::ref<java::lang::String>>(policyIdent); }
	jboolean supportsTransferOwnership() { return call_method<"supportsTransferOwnership", jboolean>(); }
	void dump(jni::ref<android::util::Printer> pw, jni::ref<java::lang::String> prefix) { return call_method<"dump", void>(pw, prefix); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	void writeToParcel(jni::ref<android::os::Parcel> dest, jint flags) { return call_method<"writeToParcel", void>(dest, flags); }
	jint describeContents() { return call_method<"describeContents", jint>(); }

protected:

	DeviceAdminInfo(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_ADMIN_DEVICEADMININFO
