// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/app/Dialog.h>
#include <scapix/java_api/android/content/DialogInterface.h>

#ifndef SCAPIX_JAVA_API_ANDROID_APP_ALERTDIALOG_FWD
#define SCAPIX_JAVA_API_ANDROID_APP_ALERTDIALOG_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::app { class AlertDialog; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::app::AlertDialog>
{
	static constexpr fixed_string class_name = "android/app/AlertDialog";
	using base_classes = std::tuple<scapix::java_api::android::app::Dialog, scapix::java_api::android::content::DialogInterface>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_ALERTDIALOG_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_APP_ALERTDIALOG)
#define SCAPIX_JAVA_API_ANDROID_APP_ALERTDIALOG

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/DialogInterface_OnClickListener.h>
#include <scapix/java_api/android/graphics/drawable/Drawable.h>
#include <scapix/java_api/android/os/Message.h>
#include <scapix/java_api/android/view/KeyEvent.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/android/widget/Button.h>
#include <scapix/java_api/android/widget/ListView.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/android/app/AlertDialog_Builder.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::app::AlertDialog : public jni::object_base<"android/app/AlertDialog",
	android::app::Dialog,
	android::content::DialogInterface>
{
public:

	using Builder = AlertDialog_Builder;

	static jint THEME_DEVICE_DEFAULT_DARK() { return get_static_field<"THEME_DEVICE_DEFAULT_DARK", jint>(); }
	static jint THEME_DEVICE_DEFAULT_LIGHT() { return get_static_field<"THEME_DEVICE_DEFAULT_LIGHT", jint>(); }
	static jint THEME_HOLO_DARK() { return get_static_field<"THEME_HOLO_DARK", jint>(); }
	static jint THEME_HOLO_LIGHT() { return get_static_field<"THEME_HOLO_LIGHT", jint>(); }
	static jint THEME_TRADITIONAL() { return get_static_field<"THEME_TRADITIONAL", jint>(); }

	jni::ref<android::widget::Button> getButton(jint whichButton) { return call_method<"getButton", jni::ref<android::widget::Button>>(whichButton); }
	jni::ref<android::widget::ListView> getListView() { return call_method<"getListView", jni::ref<android::widget::ListView>>(); }
	void setTitle(jni::ref<java::lang::CharSequence> title) { return call_method<"setTitle", void>(title); }
	void setCustomTitle(jni::ref<android::view::View> customTitleView) { return call_method<"setCustomTitle", void>(customTitleView); }
	void setMessage(jni::ref<java::lang::CharSequence> message) { return call_method<"setMessage", void>(message); }
	void setView(jni::ref<android::view::View> view) { return call_method<"setView", void>(view); }
	void setView(jni::ref<android::view::View> view, jint viewSpacingLeft, jint viewSpacingTop, jint viewSpacingRight, jint viewSpacingBottom) { return call_method<"setView", void>(view, viewSpacingLeft, viewSpacingTop, viewSpacingRight, viewSpacingBottom); }
	void setButton(jint whichButton, jni::ref<java::lang::CharSequence> text, jni::ref<android::os::Message> msg) { return call_method<"setButton", void>(whichButton, text, msg); }
	void setButton(jint whichButton, jni::ref<java::lang::CharSequence> text, jni::ref<android::content::DialogInterface_OnClickListener> listener) { return call_method<"setButton", void>(whichButton, text, listener); }
	void setButton(jni::ref<java::lang::CharSequence> text, jni::ref<android::os::Message> msg) { return call_method<"setButton", void>(text, msg); }
	void setButton2(jni::ref<java::lang::CharSequence> text, jni::ref<android::os::Message> msg) { return call_method<"setButton2", void>(text, msg); }
	void setButton3(jni::ref<java::lang::CharSequence> text, jni::ref<android::os::Message> msg) { return call_method<"setButton3", void>(text, msg); }
	void setButton(jni::ref<java::lang::CharSequence> text, jni::ref<android::content::DialogInterface_OnClickListener> listener) { return call_method<"setButton", void>(text, listener); }
	void setButton2(jni::ref<java::lang::CharSequence> text, jni::ref<android::content::DialogInterface_OnClickListener> listener) { return call_method<"setButton2", void>(text, listener); }
	void setButton3(jni::ref<java::lang::CharSequence> text, jni::ref<android::content::DialogInterface_OnClickListener> listener) { return call_method<"setButton3", void>(text, listener); }
	void setIcon(jint resId) { return call_method<"setIcon", void>(resId); }
	void setIcon(jni::ref<android::graphics::drawable::Drawable> icon) { return call_method<"setIcon", void>(icon); }
	void setIconAttribute(jint attrId) { return call_method<"setIconAttribute", void>(attrId); }
	void setInverseBackgroundForced(jboolean forceInverseBackground) { return call_method<"setInverseBackgroundForced", void>(forceInverseBackground); }
	jboolean onKeyDown(jint keyCode, jni::ref<android::view::KeyEvent> event) { return call_method<"onKeyDown", jboolean>(keyCode, event); }
	jboolean onKeyUp(jint keyCode, jni::ref<android::view::KeyEvent> event) { return call_method<"onKeyUp", jboolean>(keyCode, event); }

protected:

	AlertDialog(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_ALERTDIALOG
