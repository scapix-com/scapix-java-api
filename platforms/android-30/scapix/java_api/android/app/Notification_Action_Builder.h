// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_APP_NOTIFICATION_ACTION_BUILDER_FWD
#define SCAPIX_JAVA_API_ANDROID_APP_NOTIFICATION_ACTION_BUILDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::app { class Notification_Action_Builder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::app::Notification_Action_Builder>
{
	static constexpr fixed_string class_name = "android/app/Notification$Action$Builder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_NOTIFICATION_ACTION_BUILDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_APP_NOTIFICATION_ACTION_BUILDER)
#define SCAPIX_JAVA_API_ANDROID_APP_NOTIFICATION_ACTION_BUILDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/app/Notification_Action.h>
#include <scapix/java_api/android/app/Notification_Action_Extender.h>
#include <scapix/java_api/android/app/PendingIntent.h>
#include <scapix/java_api/android/app/RemoteInput.h>
#include <scapix/java_api/android/graphics/drawable/Icon.h>
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::app::Notification_Action_Builder : public jni::object_base<"android/app/Notification$Action$Builder",
	java::lang::Object>
{
public:

	static jni::ref<android::app::Notification_Action_Builder> new_object(jint icon, jni::ref<java::lang::CharSequence> title, jni::ref<android::app::PendingIntent> intent) { return base_::new_object(icon, title, intent); }
	static jni::ref<android::app::Notification_Action_Builder> new_object(jni::ref<android::graphics::drawable::Icon> icon, jni::ref<java::lang::CharSequence> title, jni::ref<android::app::PendingIntent> intent) { return base_::new_object(icon, title, intent); }
	static jni::ref<android::app::Notification_Action_Builder> new_object(jni::ref<android::app::Notification_Action> action) { return base_::new_object(action); }
	jni::ref<android::app::Notification_Action_Builder> addExtras(jni::ref<android::os::Bundle> extras) { return call_method<"addExtras", jni::ref<android::app::Notification_Action_Builder>>(extras); }
	jni::ref<android::os::Bundle> getExtras() { return call_method<"getExtras", jni::ref<android::os::Bundle>>(); }
	jni::ref<android::app::Notification_Action_Builder> addRemoteInput(jni::ref<android::app::RemoteInput> remoteInput) { return call_method<"addRemoteInput", jni::ref<android::app::Notification_Action_Builder>>(remoteInput); }
	jni::ref<android::app::Notification_Action_Builder> setAllowGeneratedReplies(jboolean allowGeneratedReplies) { return call_method<"setAllowGeneratedReplies", jni::ref<android::app::Notification_Action_Builder>>(allowGeneratedReplies); }
	jni::ref<android::app::Notification_Action_Builder> setSemanticAction(jint semanticAction) { return call_method<"setSemanticAction", jni::ref<android::app::Notification_Action_Builder>>(semanticAction); }
	jni::ref<android::app::Notification_Action_Builder> setContextual(jboolean isContextual) { return call_method<"setContextual", jni::ref<android::app::Notification_Action_Builder>>(isContextual); }
	jni::ref<android::app::Notification_Action_Builder> extend(jni::ref<android::app::Notification_Action_Extender> extender) { return call_method<"extend", jni::ref<android::app::Notification_Action_Builder>>(extender); }
	jni::ref<android::app::Notification_Action> build() { return call_method<"build", jni::ref<android::app::Notification_Action>>(); }

protected:

	Notification_Action_Builder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_NOTIFICATION_ACTION_BUILDER
