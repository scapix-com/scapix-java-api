// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_LANG_INVOKE_CALLSITE_FWD
#define SCAPIX_JAVA_API_JAVA_LANG_INVOKE_CALLSITE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::lang::invoke { class CallSite; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::lang::invoke::CallSite>
{
	static constexpr fixed_string class_name = "java/lang/invoke/CallSite";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_INVOKE_CALLSITE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_LANG_INVOKE_CALLSITE)
#define SCAPIX_JAVA_API_JAVA_LANG_INVOKE_CALLSITE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/invoke/MethodHandle.h>
#include <scapix/java_api/java/lang/invoke/MethodType.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::lang::invoke::CallSite : public jni::object_base<"java/lang/invoke/CallSite",
	java::lang::Object>
{
public:

	jni::ref<java::lang::invoke::MethodType> type() { return call_method<"type", jni::ref<java::lang::invoke::MethodType>>(); }
	jni::ref<java::lang::invoke::MethodHandle> getTarget() { return call_method<"getTarget", jni::ref<java::lang::invoke::MethodHandle>>(); }
	void setTarget(jni::ref<java::lang::invoke::MethodHandle> p1) { return call_method<"setTarget", void>(p1); }
	jni::ref<java::lang::invoke::MethodHandle> dynamicInvoker() { return call_method<"dynamicInvoker", jni::ref<java::lang::invoke::MethodHandle>>(); }

protected:

	CallSite(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_INVOKE_CALLSITE
