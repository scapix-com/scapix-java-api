// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/javax/crypto/spec/PSource.h>

#ifndef SCAPIX_JAVA_API_JAVAX_CRYPTO_SPEC_PSOURCE_PSPECIFIED_FWD
#define SCAPIX_JAVA_API_JAVAX_CRYPTO_SPEC_PSOURCE_PSPECIFIED_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::crypto::spec { class PSource_PSpecified; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::crypto::spec::PSource_PSpecified>
{
	static constexpr fixed_string class_name = "javax/crypto/spec/PSource$PSpecified";
	using base_classes = std::tuple<scapix::java_api::javax::crypto::spec::PSource>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_CRYPTO_SPEC_PSOURCE_PSPECIFIED_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_CRYPTO_SPEC_PSOURCE_PSPECIFIED)
#define SCAPIX_JAVA_API_JAVAX_CRYPTO_SPEC_PSOURCE_PSPECIFIED

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::crypto::spec::PSource_PSpecified : public jni::object_base<"javax/crypto/spec/PSource$PSpecified",
	javax::crypto::spec::PSource>
{
public:

	static jni::ref<javax::crypto::spec::PSource_PSpecified> DEFAULT() { return get_static_field<"DEFAULT", jni::ref<javax::crypto::spec::PSource_PSpecified>>(); }

	static jni::ref<javax::crypto::spec::PSource_PSpecified> new_object(jni::ref<jni::array<jbyte>> p) { return base_::new_object(p); }
	jni::ref<jni::array<jbyte>> getValue() { return call_method<"getValue", jni::ref<jni::array<jbyte>>>(); }

protected:

	PSource_PSpecified(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_CRYPTO_SPEC_PSOURCE_PSPECIFIED
