// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_APP_ACTIVITYMANAGER_TASKDESCRIPTION_FWD
#define SCAPIX_JAVA_API_ANDROID_APP_ACTIVITYMANAGER_TASKDESCRIPTION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::app { class ActivityManager_TaskDescription; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::app::ActivityManager_TaskDescription>
{
	static constexpr fixed_string class_name = "android/app/ActivityManager$TaskDescription";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_ACTIVITYMANAGER_TASKDESCRIPTION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_APP_ACTIVITYMANAGER_TASKDESCRIPTION)
#define SCAPIX_JAVA_API_ANDROID_APP_ACTIVITYMANAGER_TASKDESCRIPTION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/graphics/Bitmap.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::app::ActivityManager_TaskDescription : public jni::object_base<"android/app/ActivityManager$TaskDescription",
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }

	static jni::ref<android::app::ActivityManager_TaskDescription> new_object(jni::ref<java::lang::String> label, jni::ref<android::graphics::Bitmap> icon, jint colorPrimary) { return base_::new_object(label, icon, colorPrimary); }
	static jni::ref<android::app::ActivityManager_TaskDescription> new_object(jni::ref<java::lang::String> label, jint iconRes, jint colorPrimary) { return base_::new_object(label, iconRes, colorPrimary); }
	static jni::ref<android::app::ActivityManager_TaskDescription> new_object(jni::ref<java::lang::String> label, jni::ref<android::graphics::Bitmap> icon) { return base_::new_object(label, icon); }
	static jni::ref<android::app::ActivityManager_TaskDescription> new_object(jni::ref<java::lang::String> label, jint iconRes) { return base_::new_object(label, iconRes); }
	static jni::ref<android::app::ActivityManager_TaskDescription> new_object(jni::ref<java::lang::String> label) { return base_::new_object(label); }
	static jni::ref<android::app::ActivityManager_TaskDescription> new_object() { return base_::new_object(); }
	static jni::ref<android::app::ActivityManager_TaskDescription> new_object(jni::ref<android::app::ActivityManager_TaskDescription> td) { return base_::new_object(td); }
	jni::ref<java::lang::String> getLabel() { return call_method<"getLabel", jni::ref<java::lang::String>>(); }
	jni::ref<android::graphics::Bitmap> getIcon() { return call_method<"getIcon", jni::ref<android::graphics::Bitmap>>(); }
	jint getPrimaryColor() { return call_method<"getPrimaryColor", jint>(); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	void writeToParcel(jni::ref<android::os::Parcel> dest, jint flags) { return call_method<"writeToParcel", void>(dest, flags); }
	void readFromParcel(jni::ref<android::os::Parcel> source) { return call_method<"readFromParcel", void>(source); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	ActivityManager_TaskDescription(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_ACTIVITYMANAGER_TASKDESCRIPTION
