// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/app/Notification_Extender.h>

#ifndef SCAPIX_JAVA_API_ANDROID_APP_NOTIFICATION_CAREXTENDER_FWD
#define SCAPIX_JAVA_API_ANDROID_APP_NOTIFICATION_CAREXTENDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::app { class Notification_CarExtender; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::app::Notification_CarExtender>
{
	static constexpr fixed_string class_name = "android/app/Notification$CarExtender";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::app::Notification_Extender>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_NOTIFICATION_CAREXTENDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_APP_NOTIFICATION_CAREXTENDER)
#define SCAPIX_JAVA_API_ANDROID_APP_NOTIFICATION_CAREXTENDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/app/Notification.h>
#include <scapix/java_api/android/app/Notification_Builder.h>
#include <scapix/java_api/android/app/Notification_CarExtender_UnreadConversation.h>
#include <scapix/java_api/android/graphics/Bitmap.h>
#include <scapix/java_api/android/app/Notification_CarExtender_Builder.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::app::Notification_CarExtender : public jni::object_base<"android/app/Notification$CarExtender",
	java::lang::Object,
	android::app::Notification_Extender>
{
public:

	using UnreadConversation = Notification_CarExtender_UnreadConversation;
	using Builder = Notification_CarExtender_Builder;

	static jni::ref<android::app::Notification_CarExtender> new_object() { return base_::new_object(); }
	static jni::ref<android::app::Notification_CarExtender> new_object(jni::ref<android::app::Notification> notif) { return base_::new_object(notif); }
	jni::ref<android::app::Notification_Builder> extend(jni::ref<android::app::Notification_Builder> builder) { return call_method<"extend", jni::ref<android::app::Notification_Builder>>(builder); }
	jni::ref<android::app::Notification_CarExtender> setColor(jint color) { return call_method<"setColor", jni::ref<android::app::Notification_CarExtender>>(color); }
	jint getColor() { return call_method<"getColor", jint>(); }
	jni::ref<android::app::Notification_CarExtender> setLargeIcon(jni::ref<android::graphics::Bitmap> largeIcon) { return call_method<"setLargeIcon", jni::ref<android::app::Notification_CarExtender>>(largeIcon); }
	jni::ref<android::graphics::Bitmap> getLargeIcon() { return call_method<"getLargeIcon", jni::ref<android::graphics::Bitmap>>(); }
	jni::ref<android::app::Notification_CarExtender> setUnreadConversation(jni::ref<android::app::Notification_CarExtender_UnreadConversation> unreadConversation) { return call_method<"setUnreadConversation", jni::ref<android::app::Notification_CarExtender>>(unreadConversation); }
	jni::ref<android::app::Notification_CarExtender_UnreadConversation> getUnreadConversation() { return call_method<"getUnreadConversation", jni::ref<android::app::Notification_CarExtender_UnreadConversation>>(); }

protected:

	Notification_CarExtender(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_NOTIFICATION_CAREXTENDER
