// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_PROVIDER_CONTACTSCONTRACT_FWD
#define SCAPIX_JAVA_API_ANDROID_PROVIDER_CONTACTSCONTRACT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::provider { class ContactsContract; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::provider::ContactsContract>
{
	static constexpr fixed_string class_name = "android/provider/ContactsContract";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_PROVIDER_CONTACTSCONTRACT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_PROVIDER_CONTACTSCONTRACT)
#define SCAPIX_JAVA_API_ANDROID_PROVIDER_CONTACTSCONTRACT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/android/provider/ContactsContract_SyncState.h>
#include <scapix/java_api/android/provider/ContactsContract_StatusUpdates.h>
#include <scapix/java_api/android/provider/ContactsContract_Settings.h>
#include <scapix/java_api/android/provider/ContactsContract_SearchSnippets.h>
#include <scapix/java_api/android/provider/ContactsContract_RawContactsEntity.h>
#include <scapix/java_api/android/provider/ContactsContract_RawContacts.h>
#include <scapix/java_api/android/provider/ContactsContract_QuickContact.h>
#include <scapix/java_api/android/provider/ContactsContract_ProviderStatus.h>
#include <scapix/java_api/android/provider/ContactsContract_ProfileSyncState.h>
#include <scapix/java_api/android/provider/ContactsContract_Profile.h>
#include <scapix/java_api/android/provider/ContactsContract_Presence.h>
#include <scapix/java_api/android/provider/ContactsContract_PinnedPositions.h>
#include <scapix/java_api/android/provider/ContactsContract_PhoneticNameStyle.h>
#include <scapix/java_api/android/provider/ContactsContract_PhoneLookup.h>
#include <scapix/java_api/android/provider/ContactsContract_Intents.h>
#include <scapix/java_api/android/provider/ContactsContract_Groups.h>
#include <scapix/java_api/android/provider/ContactsContract_FullNameStyle.h>
#include <scapix/java_api/android/provider/ContactsContract_DisplayPhoto.h>
#include <scapix/java_api/android/provider/ContactsContract_DisplayNameSources.h>
#include <scapix/java_api/android/provider/ContactsContract_Directory.h>
#include <scapix/java_api/android/provider/ContactsContract_DeletedContacts.h>
#include <scapix/java_api/android/provider/ContactsContract_DataUsageFeedback.h>
#include <scapix/java_api/android/provider/ContactsContract_Data.h>
#include <scapix/java_api/android/provider/ContactsContract_Contacts.h>
#include <scapix/java_api/android/provider/ContactsContract_CommonDataKinds.h>
#include <scapix/java_api/android/provider/ContactsContract_AggregationExceptions.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::provider::ContactsContract : public jni::object_base<"android/provider/ContactsContract",
	java::lang::Object>
{
public:

	using SyncState = ContactsContract_SyncState;
	using StatusUpdates = ContactsContract_StatusUpdates;
	using Settings = ContactsContract_Settings;
	using SearchSnippets = ContactsContract_SearchSnippets;
	using RawContactsEntity = ContactsContract_RawContactsEntity;
	using RawContacts = ContactsContract_RawContacts;
	using QuickContact = ContactsContract_QuickContact;
	using ProviderStatus = ContactsContract_ProviderStatus;
	using ProfileSyncState = ContactsContract_ProfileSyncState;
	using Profile = ContactsContract_Profile;
	using Presence = ContactsContract_Presence;
	using PinnedPositions = ContactsContract_PinnedPositions;
	using PhoneticNameStyle = ContactsContract_PhoneticNameStyle;
	using PhoneLookup = ContactsContract_PhoneLookup;
	using Intents = ContactsContract_Intents;
	using Groups = ContactsContract_Groups;
	using FullNameStyle = ContactsContract_FullNameStyle;
	using DisplayPhoto = ContactsContract_DisplayPhoto;
	using DisplayNameSources = ContactsContract_DisplayNameSources;
	using Directory = ContactsContract_Directory;
	using DeletedContacts = ContactsContract_DeletedContacts;
	using DataUsageFeedback = ContactsContract_DataUsageFeedback;
	using Data = ContactsContract_Data;
	using Contacts = ContactsContract_Contacts;
	using CommonDataKinds = ContactsContract_CommonDataKinds;
	using AggregationExceptions = ContactsContract_AggregationExceptions;

	static jni::ref<java::lang::String> AUTHORITY() { return get_static_field<"AUTHORITY", jni::ref<java::lang::String>>(); }
	static jni::ref<android::net::Uri> AUTHORITY_URI() { return get_static_field<"AUTHORITY_URI", jni::ref<android::net::Uri>>(); }
	static jni::ref<java::lang::String> CALLER_IS_SYNCADAPTER() { return get_static_field<"CALLER_IS_SYNCADAPTER", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> DEFERRED_SNIPPETING() { return get_static_field<"DEFERRED_SNIPPETING", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> DEFERRED_SNIPPETING_QUERY() { return get_static_field<"DEFERRED_SNIPPETING_QUERY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> DIRECTORY_PARAM_KEY() { return get_static_field<"DIRECTORY_PARAM_KEY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> LIMIT_PARAM_KEY() { return get_static_field<"LIMIT_PARAM_KEY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> PRIMARY_ACCOUNT_NAME() { return get_static_field<"PRIMARY_ACCOUNT_NAME", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> PRIMARY_ACCOUNT_TYPE() { return get_static_field<"PRIMARY_ACCOUNT_TYPE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> REMOVE_DUPLICATE_ENTRIES() { return get_static_field<"REMOVE_DUPLICATE_ENTRIES", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> STREQUENT_PHONE_ONLY() { return get_static_field<"STREQUENT_PHONE_ONLY", jni::ref<java::lang::String>>(); }

	static jni::ref<android::provider::ContactsContract> new_object() { return base_::new_object(); }
	static jboolean isProfileId(jlong id) { return call_static_method<"isProfileId", jboolean>(id); }

protected:

	ContactsContract(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_PROVIDER_CONTACTSCONTRACT
