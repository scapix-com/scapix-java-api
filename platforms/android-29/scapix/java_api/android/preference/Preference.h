// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/Comparable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_PREFERENCE_PREFERENCE_FWD
#define SCAPIX_JAVA_API_ANDROID_PREFERENCE_PREFERENCE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::preference { class Preference; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::preference::Preference>
{
	static constexpr fixed_string class_name = "android/preference/Preference";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::lang::Comparable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_PREFERENCE_PREFERENCE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_PREFERENCE_PREFERENCE)
#define SCAPIX_JAVA_API_ANDROID_PREFERENCE_PREFERENCE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/content/Intent.h>
#include <scapix/java_api/android/content/SharedPreferences.h>
#include <scapix/java_api/android/content/SharedPreferences_Editor.h>
#include <scapix/java_api/android/graphics/drawable/Drawable.h>
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/android/preference/Preference_OnPreferenceChangeListener.h>
#include <scapix/java_api/android/preference/Preference_OnPreferenceClickListener.h>
#include <scapix/java_api/android/preference/PreferenceDataStore.h>
#include <scapix/java_api/android/preference/PreferenceGroup.h>
#include <scapix/java_api/android/preference/PreferenceManager.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/android/view/ViewGroup.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Set.h>
#include <scapix/java_api/android/preference/Preference_BaseSavedState.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::preference::Preference : public jni::object_base<"android/preference/Preference",
	java::lang::Object,
	java::lang::Comparable>
{
public:

	using OnPreferenceClickListener = Preference_OnPreferenceClickListener;
	using OnPreferenceChangeListener = Preference_OnPreferenceChangeListener;
	using BaseSavedState = Preference_BaseSavedState;

	static jint DEFAULT_ORDER() { return get_static_field<"DEFAULT_ORDER", jint>(); }

	static jni::ref<android::preference::Preference> new_object(jni::ref<android::content::Context> context, jni::ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes) { return base_::new_object(context, attrs, defStyleAttr, defStyleRes); }
	static jni::ref<android::preference::Preference> new_object(jni::ref<android::content::Context> context, jni::ref<android::util::AttributeSet> attrs, jint defStyleAttr) { return base_::new_object(context, attrs, defStyleAttr); }
	static jni::ref<android::preference::Preference> new_object(jni::ref<android::content::Context> context, jni::ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
	static jni::ref<android::preference::Preference> new_object(jni::ref<android::content::Context> context) { return base_::new_object(context); }
	void setIntent(jni::ref<android::content::Intent> intent) { return call_method<"setIntent", void>(intent); }
	jni::ref<android::content::Intent> getIntent() { return call_method<"getIntent", jni::ref<android::content::Intent>>(); }
	void setFragment(jni::ref<java::lang::String> fragment) { return call_method<"setFragment", void>(fragment); }
	jni::ref<java::lang::String> getFragment() { return call_method<"getFragment", jni::ref<java::lang::String>>(); }
	void setPreferenceDataStore(jni::ref<android::preference::PreferenceDataStore> dataStore) { return call_method<"setPreferenceDataStore", void>(dataStore); }
	jni::ref<android::preference::PreferenceDataStore> getPreferenceDataStore() { return call_method<"getPreferenceDataStore", jni::ref<android::preference::PreferenceDataStore>>(); }
	jni::ref<android::os::Bundle> getExtras() { return call_method<"getExtras", jni::ref<android::os::Bundle>>(); }
	jni::ref<android::os::Bundle> peekExtras() { return call_method<"peekExtras", jni::ref<android::os::Bundle>>(); }
	void setLayoutResource(jint layoutResId) { return call_method<"setLayoutResource", void>(layoutResId); }
	jint getLayoutResource() { return call_method<"getLayoutResource", jint>(); }
	void setWidgetLayoutResource(jint widgetLayoutResId) { return call_method<"setWidgetLayoutResource", void>(widgetLayoutResId); }
	jint getWidgetLayoutResource() { return call_method<"getWidgetLayoutResource", jint>(); }
	jni::ref<android::view::View> getView(jni::ref<android::view::View> convertView, jni::ref<android::view::ViewGroup> parent) { return call_method<"getView", jni::ref<android::view::View>>(convertView, parent); }
	void setOrder(jint order) { return call_method<"setOrder", void>(order); }
	jint getOrder() { return call_method<"getOrder", jint>(); }
	void setTitle(jni::ref<java::lang::CharSequence> title) { return call_method<"setTitle", void>(title); }
	void setTitle(jint titleResId) { return call_method<"setTitle", void>(titleResId); }
	jint getTitleRes() { return call_method<"getTitleRes", jint>(); }
	jni::ref<java::lang::CharSequence> getTitle() { return call_method<"getTitle", jni::ref<java::lang::CharSequence>>(); }
	void setIcon(jni::ref<android::graphics::drawable::Drawable> icon) { return call_method<"setIcon", void>(icon); }
	void setIcon(jint iconResId) { return call_method<"setIcon", void>(iconResId); }
	jni::ref<android::graphics::drawable::Drawable> getIcon() { return call_method<"getIcon", jni::ref<android::graphics::drawable::Drawable>>(); }
	jni::ref<java::lang::CharSequence> getSummary() { return call_method<"getSummary", jni::ref<java::lang::CharSequence>>(); }
	void setSummary(jni::ref<java::lang::CharSequence> summary) { return call_method<"setSummary", void>(summary); }
	void setSummary(jint summaryResId) { return call_method<"setSummary", void>(summaryResId); }
	void setEnabled(jboolean enabled) { return call_method<"setEnabled", void>(enabled); }
	jboolean isEnabled() { return call_method<"isEnabled", jboolean>(); }
	void setSelectable(jboolean selectable) { return call_method<"setSelectable", void>(selectable); }
	jboolean isSelectable() { return call_method<"isSelectable", jboolean>(); }
	void setShouldDisableView(jboolean shouldDisableView) { return call_method<"setShouldDisableView", void>(shouldDisableView); }
	jboolean getShouldDisableView() { return call_method<"getShouldDisableView", jboolean>(); }
	void setRecycleEnabled(jboolean enabled) { return call_method<"setRecycleEnabled", void>(enabled); }
	jboolean isRecycleEnabled() { return call_method<"isRecycleEnabled", jboolean>(); }
	void setSingleLineTitle(jboolean singleLineTitle) { return call_method<"setSingleLineTitle", void>(singleLineTitle); }
	jboolean isSingleLineTitle() { return call_method<"isSingleLineTitle", jboolean>(); }
	void setIconSpaceReserved(jboolean iconSpaceReserved) { return call_method<"setIconSpaceReserved", void>(iconSpaceReserved); }
	jboolean isIconSpaceReserved() { return call_method<"isIconSpaceReserved", jboolean>(); }
	void setKey(jni::ref<java::lang::String> key) { return call_method<"setKey", void>(key); }
	jni::ref<java::lang::String> getKey() { return call_method<"getKey", jni::ref<java::lang::String>>(); }
	jboolean hasKey() { return call_method<"hasKey", jboolean>(); }
	jboolean isPersistent() { return call_method<"isPersistent", jboolean>(); }
	void setPersistent(jboolean persistent) { return call_method<"setPersistent", void>(persistent); }
	void setOnPreferenceChangeListener(jni::ref<android::preference::Preference_OnPreferenceChangeListener> onPreferenceChangeListener) { return call_method<"setOnPreferenceChangeListener", void>(onPreferenceChangeListener); }
	jni::ref<android::preference::Preference_OnPreferenceChangeListener> getOnPreferenceChangeListener() { return call_method<"getOnPreferenceChangeListener", jni::ref<android::preference::Preference_OnPreferenceChangeListener>>(); }
	void setOnPreferenceClickListener(jni::ref<android::preference::Preference_OnPreferenceClickListener> onPreferenceClickListener) { return call_method<"setOnPreferenceClickListener", void>(onPreferenceClickListener); }
	jni::ref<android::preference::Preference_OnPreferenceClickListener> getOnPreferenceClickListener() { return call_method<"getOnPreferenceClickListener", jni::ref<android::preference::Preference_OnPreferenceClickListener>>(); }
	jni::ref<android::content::Context> getContext() { return call_method<"getContext", jni::ref<android::content::Context>>(); }
	jni::ref<android::content::SharedPreferences> getSharedPreferences() { return call_method<"getSharedPreferences", jni::ref<android::content::SharedPreferences>>(); }
	jni::ref<android::content::SharedPreferences_Editor> getEditor() { return call_method<"getEditor", jni::ref<android::content::SharedPreferences_Editor>>(); }
	jboolean shouldCommit() { return call_method<"shouldCommit", jboolean>(); }
	jint compareTo(jni::ref<android::preference::Preference> another) { return call_method<"compareTo", jint>(another); }
	jni::ref<android::preference::PreferenceManager> getPreferenceManager() { return call_method<"getPreferenceManager", jni::ref<android::preference::PreferenceManager>>(); }
	void notifyDependencyChange(jboolean disableDependents) { return call_method<"notifyDependencyChange", void>(disableDependents); }
	void onDependencyChanged(jni::ref<android::preference::Preference> dependency, jboolean disableDependent) { return call_method<"onDependencyChanged", void>(dependency, disableDependent); }
	void onParentChanged(jni::ref<android::preference::Preference> parent, jboolean disableChild) { return call_method<"onParentChanged", void>(parent, disableChild); }
	jboolean shouldDisableDependents() { return call_method<"shouldDisableDependents", jboolean>(); }
	void setDependency(jni::ref<java::lang::String> dependencyKey) { return call_method<"setDependency", void>(dependencyKey); }
	jni::ref<java::lang::String> getDependency() { return call_method<"getDependency", jni::ref<java::lang::String>>(); }
	jni::ref<android::preference::PreferenceGroup> getParent() { return call_method<"getParent", jni::ref<android::preference::PreferenceGroup>>(); }
	void setDefaultValue(jni::ref<java::lang::Object> defaultValue) { return call_method<"setDefaultValue", void>(defaultValue); }
	jboolean persistStringSet(jni::ref<java::util::Set> values) { return call_method<"persistStringSet", jboolean>(values); }
	jni::ref<java::util::Set> getPersistedStringSet(jni::ref<java::util::Set> defaultReturnValue) { return call_method<"getPersistedStringSet", jni::ref<java::util::Set>>(defaultReturnValue); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	void saveHierarchyState(jni::ref<android::os::Bundle> container) { return call_method<"saveHierarchyState", void>(container); }
	void restoreHierarchyState(jni::ref<android::os::Bundle> container) { return call_method<"restoreHierarchyState", void>(container); }

protected:

	Preference(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_PREFERENCE_PREFERENCE
