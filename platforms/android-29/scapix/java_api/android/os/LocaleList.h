// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_OS_LOCALELIST_FWD
#define SCAPIX_JAVA_API_ANDROID_OS_LOCALELIST_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::os { class LocaleList; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::os::LocaleList>
{
	static constexpr fixed_string class_name = "android/os/LocaleList";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_OS_LOCALELIST_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_OS_LOCALELIST)
#define SCAPIX_JAVA_API_ANDROID_OS_LOCALELIST

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/icu/util/ULocale.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Locale.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::os::LocaleList : public jni::object_base<"android/os/LocaleList",
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }

	static jni::ref<android::os::LocaleList> new_object(jni::ref<jni::array<java::util::Locale>> list) { return base_::new_object(list); }
	jni::ref<java::util::Locale> get(jint index) { return call_method<"get", jni::ref<java::util::Locale>>(index); }
	jboolean isEmpty() { return call_method<"isEmpty", jboolean>(); }
	jint size() { return call_method<"size", jint>(); }
	jint indexOf(jni::ref<java::util::Locale> locale) { return call_method<"indexOf", jint>(locale); }
	jboolean equals(jni::ref<java::lang::Object> other) { return call_method<"equals", jboolean>(other); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	void writeToParcel(jni::ref<android::os::Parcel> dest, jint parcelableFlags) { return call_method<"writeToParcel", void>(dest, parcelableFlags); }
	jni::ref<java::lang::String> toLanguageTags() { return call_method<"toLanguageTags", jni::ref<java::lang::String>>(); }
	static jni::ref<android::os::LocaleList> getEmptyLocaleList() { return call_static_method<"getEmptyLocaleList", jni::ref<android::os::LocaleList>>(); }
	static jni::ref<android::os::LocaleList> forLanguageTags(jni::ref<java::lang::String> list) { return call_static_method<"forLanguageTags", jni::ref<android::os::LocaleList>>(list); }
	static jboolean isPseudoLocale(jni::ref<android::icu::util::ULocale> locale) { return call_static_method<"isPseudoLocale", jboolean>(locale); }
	jni::ref<java::util::Locale> getFirstMatch(jni::ref<jni::array<java::lang::String>> supportedLocales) { return call_method<"getFirstMatch", jni::ref<java::util::Locale>>(supportedLocales); }
	static jni::ref<android::os::LocaleList> getDefault() { return call_static_method<"getDefault", jni::ref<android::os::LocaleList>>(); }
	static jni::ref<android::os::LocaleList> getAdjustedDefault() { return call_static_method<"getAdjustedDefault", jni::ref<android::os::LocaleList>>(); }
	static void setDefault(jni::ref<android::os::LocaleList> locales) { return call_static_method<"setDefault", void>(locales); }

protected:

	LocaleList(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_OS_LOCALELIST
