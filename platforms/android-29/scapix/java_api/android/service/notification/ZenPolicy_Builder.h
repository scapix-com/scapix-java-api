// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_SERVICE_NOTIFICATION_ZENPOLICY_BUILDER_FWD
#define SCAPIX_JAVA_API_ANDROID_SERVICE_NOTIFICATION_ZENPOLICY_BUILDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::service::notification { class ZenPolicy_Builder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::service::notification::ZenPolicy_Builder>
{
	static constexpr fixed_string class_name = "android/service/notification/ZenPolicy$Builder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_SERVICE_NOTIFICATION_ZENPOLICY_BUILDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_SERVICE_NOTIFICATION_ZENPOLICY_BUILDER)
#define SCAPIX_JAVA_API_ANDROID_SERVICE_NOTIFICATION_ZENPOLICY_BUILDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/service/notification/ZenPolicy.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::service::notification::ZenPolicy_Builder : public jni::object_base<"android/service/notification/ZenPolicy$Builder",
	java::lang::Object>
{
public:

	static jni::ref<android::service::notification::ZenPolicy_Builder> new_object() { return base_::new_object(); }
	jni::ref<android::service::notification::ZenPolicy> build() { return call_method<"build", jni::ref<android::service::notification::ZenPolicy>>(); }
	jni::ref<android::service::notification::ZenPolicy_Builder> allowAllSounds() { return call_method<"allowAllSounds", jni::ref<android::service::notification::ZenPolicy_Builder>>(); }
	jni::ref<android::service::notification::ZenPolicy_Builder> disallowAllSounds() { return call_method<"disallowAllSounds", jni::ref<android::service::notification::ZenPolicy_Builder>>(); }
	jni::ref<android::service::notification::ZenPolicy_Builder> showAllVisualEffects() { return call_method<"showAllVisualEffects", jni::ref<android::service::notification::ZenPolicy_Builder>>(); }
	jni::ref<android::service::notification::ZenPolicy_Builder> hideAllVisualEffects() { return call_method<"hideAllVisualEffects", jni::ref<android::service::notification::ZenPolicy_Builder>>(); }
	jni::ref<android::service::notification::ZenPolicy_Builder> allowReminders(jboolean allow) { return call_method<"allowReminders", jni::ref<android::service::notification::ZenPolicy_Builder>>(allow); }
	jni::ref<android::service::notification::ZenPolicy_Builder> allowEvents(jboolean allow) { return call_method<"allowEvents", jni::ref<android::service::notification::ZenPolicy_Builder>>(allow); }
	jni::ref<android::service::notification::ZenPolicy_Builder> allowMessages(jint audienceType) { return call_method<"allowMessages", jni::ref<android::service::notification::ZenPolicy_Builder>>(audienceType); }
	jni::ref<android::service::notification::ZenPolicy_Builder> allowCalls(jint audienceType) { return call_method<"allowCalls", jni::ref<android::service::notification::ZenPolicy_Builder>>(audienceType); }
	jni::ref<android::service::notification::ZenPolicy_Builder> allowRepeatCallers(jboolean allow) { return call_method<"allowRepeatCallers", jni::ref<android::service::notification::ZenPolicy_Builder>>(allow); }
	jni::ref<android::service::notification::ZenPolicy_Builder> allowAlarms(jboolean allow) { return call_method<"allowAlarms", jni::ref<android::service::notification::ZenPolicy_Builder>>(allow); }
	jni::ref<android::service::notification::ZenPolicy_Builder> allowMedia(jboolean allow) { return call_method<"allowMedia", jni::ref<android::service::notification::ZenPolicy_Builder>>(allow); }
	jni::ref<android::service::notification::ZenPolicy_Builder> allowSystem(jboolean allow) { return call_method<"allowSystem", jni::ref<android::service::notification::ZenPolicy_Builder>>(allow); }
	jni::ref<android::service::notification::ZenPolicy_Builder> showFullScreenIntent(jboolean show) { return call_method<"showFullScreenIntent", jni::ref<android::service::notification::ZenPolicy_Builder>>(show); }
	jni::ref<android::service::notification::ZenPolicy_Builder> showLights(jboolean show) { return call_method<"showLights", jni::ref<android::service::notification::ZenPolicy_Builder>>(show); }
	jni::ref<android::service::notification::ZenPolicy_Builder> showPeeking(jboolean show) { return call_method<"showPeeking", jni::ref<android::service::notification::ZenPolicy_Builder>>(show); }
	jni::ref<android::service::notification::ZenPolicy_Builder> showStatusBarIcons(jboolean show) { return call_method<"showStatusBarIcons", jni::ref<android::service::notification::ZenPolicy_Builder>>(show); }
	jni::ref<android::service::notification::ZenPolicy_Builder> showBadges(jboolean show) { return call_method<"showBadges", jni::ref<android::service::notification::ZenPolicy_Builder>>(show); }
	jni::ref<android::service::notification::ZenPolicy_Builder> showInAmbientDisplay(jboolean show) { return call_method<"showInAmbientDisplay", jni::ref<android::service::notification::ZenPolicy_Builder>>(show); }
	jni::ref<android::service::notification::ZenPolicy_Builder> showInNotificationList(jboolean show) { return call_method<"showInNotificationList", jni::ref<android::service::notification::ZenPolicy_Builder>>(show); }

protected:

	ZenPolicy_Builder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_SERVICE_NOTIFICATION_ZENPOLICY_BUILDER
