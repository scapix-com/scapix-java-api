// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_ICU_TEXT_LOCALEDISPLAYNAMES_FWD
#define SCAPIX_JAVA_API_ANDROID_ICU_TEXT_LOCALEDISPLAYNAMES_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::icu::text { class LocaleDisplayNames; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::icu::text::LocaleDisplayNames>
{
	static constexpr fixed_string class_name = "android/icu/text/LocaleDisplayNames";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_TEXT_LOCALEDISPLAYNAMES_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_ICU_TEXT_LOCALEDISPLAYNAMES)
#define SCAPIX_JAVA_API_ANDROID_ICU_TEXT_LOCALEDISPLAYNAMES

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/icu/text/DisplayContext.h>
#include <scapix/java_api/android/icu/text/DisplayContext_Type.h>
#include <scapix/java_api/android/icu/text/LocaleDisplayNames_DialectHandling.h>
#include <scapix/java_api/android/icu/util/ULocale.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Comparator.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/java/util/Locale.h>
#include <scapix/java_api/java/util/Set.h>
#include <scapix/java_api/android/icu/text/LocaleDisplayNames_UiListItem.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::icu::text::LocaleDisplayNames : public jni::object_base<"android/icu/text/LocaleDisplayNames",
	java::lang::Object>
{
public:

	using UiListItem = LocaleDisplayNames_UiListItem;
	using DialectHandling = LocaleDisplayNames_DialectHandling;

	static jni::ref<android::icu::text::LocaleDisplayNames> getInstance(jni::ref<android::icu::util::ULocale> locale) { return call_static_method<"getInstance", jni::ref<android::icu::text::LocaleDisplayNames>>(locale); }
	static jni::ref<android::icu::text::LocaleDisplayNames> getInstance(jni::ref<java::util::Locale> locale) { return call_static_method<"getInstance", jni::ref<android::icu::text::LocaleDisplayNames>>(locale); }
	static jni::ref<android::icu::text::LocaleDisplayNames> getInstance(jni::ref<android::icu::util::ULocale> locale, jni::ref<android::icu::text::LocaleDisplayNames_DialectHandling> dialectHandling) { return call_static_method<"getInstance", jni::ref<android::icu::text::LocaleDisplayNames>>(locale, dialectHandling); }
	static jni::ref<android::icu::text::LocaleDisplayNames> getInstance(jni::ref<android::icu::util::ULocale> locale, jni::ref<jni::array<android::icu::text::DisplayContext>> contexts) { return call_static_method<"getInstance", jni::ref<android::icu::text::LocaleDisplayNames>>(locale, contexts); }
	static jni::ref<android::icu::text::LocaleDisplayNames> getInstance(jni::ref<java::util::Locale> locale, jni::ref<jni::array<android::icu::text::DisplayContext>> contexts) { return call_static_method<"getInstance", jni::ref<android::icu::text::LocaleDisplayNames>>(locale, contexts); }
	jni::ref<android::icu::util::ULocale> getLocale() { return call_method<"getLocale", jni::ref<android::icu::util::ULocale>>(); }
	jni::ref<android::icu::text::LocaleDisplayNames_DialectHandling> getDialectHandling() { return call_method<"getDialectHandling", jni::ref<android::icu::text::LocaleDisplayNames_DialectHandling>>(); }
	jni::ref<android::icu::text::DisplayContext> getContext(jni::ref<android::icu::text::DisplayContext_Type> p1) { return call_method<"getContext", jni::ref<android::icu::text::DisplayContext>>(p1); }
	jni::ref<java::lang::String> localeDisplayName(jni::ref<android::icu::util::ULocale> p1) { return call_method<"localeDisplayName", jni::ref<java::lang::String>>(p1); }
	jni::ref<java::lang::String> localeDisplayName(jni::ref<java::util::Locale> p1) { return call_method<"localeDisplayName", jni::ref<java::lang::String>>(p1); }
	jni::ref<java::lang::String> localeDisplayName(jni::ref<java::lang::String> p1) { return call_method<"localeDisplayName", jni::ref<java::lang::String>>(p1); }
	jni::ref<java::lang::String> languageDisplayName(jni::ref<java::lang::String> p1) { return call_method<"languageDisplayName", jni::ref<java::lang::String>>(p1); }
	jni::ref<java::lang::String> scriptDisplayName(jni::ref<java::lang::String> p1) { return call_method<"scriptDisplayName", jni::ref<java::lang::String>>(p1); }
	jni::ref<java::lang::String> scriptDisplayName(jint p1) { return call_method<"scriptDisplayName", jni::ref<java::lang::String>>(p1); }
	jni::ref<java::lang::String> regionDisplayName(jni::ref<java::lang::String> p1) { return call_method<"regionDisplayName", jni::ref<java::lang::String>>(p1); }
	jni::ref<java::lang::String> variantDisplayName(jni::ref<java::lang::String> p1) { return call_method<"variantDisplayName", jni::ref<java::lang::String>>(p1); }
	jni::ref<java::lang::String> keyDisplayName(jni::ref<java::lang::String> p1) { return call_method<"keyDisplayName", jni::ref<java::lang::String>>(p1); }
	jni::ref<java::lang::String> keyValueDisplayName(jni::ref<java::lang::String> p1, jni::ref<java::lang::String> p2) { return call_method<"keyValueDisplayName", jni::ref<java::lang::String>>(p1, p2); }
	jni::ref<java::util::List> getUiList(jni::ref<java::util::Set> localeSet, jboolean inSelf, jni::ref<java::util::Comparator> collator) { return call_method<"getUiList", jni::ref<java::util::List>>(localeSet, inSelf, collator); }
	jni::ref<java::util::List> getUiListCompareWholeItems(jni::ref<java::util::Set> p1, jni::ref<java::util::Comparator> p2) { return call_method<"getUiListCompareWholeItems", jni::ref<java::util::List>>(p1, p2); }

protected:

	LocaleDisplayNames(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_TEXT_LOCALEDISPLAYNAMES
