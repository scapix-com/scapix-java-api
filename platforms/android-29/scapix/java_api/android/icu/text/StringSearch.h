// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/icu/text/SearchIterator.h>

#ifndef SCAPIX_JAVA_API_ANDROID_ICU_TEXT_STRINGSEARCH_FWD
#define SCAPIX_JAVA_API_ANDROID_ICU_TEXT_STRINGSEARCH_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::icu::text { class StringSearch; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::icu::text::StringSearch>
{
	static constexpr fixed_string class_name = "android/icu/text/StringSearch";
	using base_classes = std::tuple<scapix::java_api::android::icu::text::SearchIterator>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_TEXT_STRINGSEARCH_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_ICU_TEXT_STRINGSEARCH)
#define SCAPIX_JAVA_API_ANDROID_ICU_TEXT_STRINGSEARCH

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/icu/text/BreakIterator.h>
#include <scapix/java_api/android/icu/text/RuleBasedCollator.h>
#include <scapix/java_api/android/icu/util/ULocale.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/text/CharacterIterator.h>
#include <scapix/java_api/java/util/Locale.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::icu::text::StringSearch : public jni::object_base<"android/icu/text/StringSearch",
	android::icu::text::SearchIterator>
{
public:

	static jni::ref<android::icu::text::StringSearch> new_object(jni::ref<java::lang::String> pattern, jni::ref<java::text::CharacterIterator> target, jni::ref<android::icu::text::RuleBasedCollator> collator, jni::ref<android::icu::text::BreakIterator> breakiter) { return base_::new_object(pattern, target, collator, breakiter); }
	static jni::ref<android::icu::text::StringSearch> new_object(jni::ref<java::lang::String> pattern, jni::ref<java::text::CharacterIterator> target, jni::ref<android::icu::text::RuleBasedCollator> collator) { return base_::new_object(pattern, target, collator); }
	static jni::ref<android::icu::text::StringSearch> new_object(jni::ref<java::lang::String> pattern, jni::ref<java::text::CharacterIterator> target, jni::ref<java::util::Locale> locale) { return base_::new_object(pattern, target, locale); }
	static jni::ref<android::icu::text::StringSearch> new_object(jni::ref<java::lang::String> pattern, jni::ref<java::text::CharacterIterator> target, jni::ref<android::icu::util::ULocale> locale) { return base_::new_object(pattern, target, locale); }
	static jni::ref<android::icu::text::StringSearch> new_object(jni::ref<java::lang::String> pattern, jni::ref<java::lang::String> target) { return base_::new_object(pattern, target); }
	jni::ref<android::icu::text::RuleBasedCollator> getCollator() { return call_method<"getCollator", jni::ref<android::icu::text::RuleBasedCollator>>(); }
	void setCollator(jni::ref<android::icu::text::RuleBasedCollator> collator) { return call_method<"setCollator", void>(collator); }
	jni::ref<java::lang::String> getPattern() { return call_method<"getPattern", jni::ref<java::lang::String>>(); }
	void setPattern(jni::ref<java::lang::String> pattern) { return call_method<"setPattern", void>(pattern); }
	jboolean isCanonical() { return call_method<"isCanonical", jboolean>(); }
	void setCanonical(jboolean allowCanonical) { return call_method<"setCanonical", void>(allowCanonical); }
	void setTarget(jni::ref<java::text::CharacterIterator> text) { return call_method<"setTarget", void>(text); }
	jint getIndex() { return call_method<"getIndex", jint>(); }
	void setIndex(jint position) { return call_method<"setIndex", void>(position); }
	void reset() { return call_method<"reset", void>(); }

protected:

	StringSearch(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_TEXT_STRINGSEARCH
