// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/icu/text/DecimalFormat.h>

#ifndef SCAPIX_JAVA_API_ANDROID_ICU_TEXT_COMPACTDECIMALFORMAT_FWD
#define SCAPIX_JAVA_API_ANDROID_ICU_TEXT_COMPACTDECIMALFORMAT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::icu::text { class CompactDecimalFormat; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::icu::text::CompactDecimalFormat>
{
	static constexpr fixed_string class_name = "android/icu/text/CompactDecimalFormat";
	using base_classes = std::tuple<scapix::java_api::android::icu::text::DecimalFormat>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_TEXT_COMPACTDECIMALFORMAT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_ICU_TEXT_COMPACTDECIMALFORMAT)
#define SCAPIX_JAVA_API_ANDROID_ICU_TEXT_COMPACTDECIMALFORMAT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/icu/text/CompactDecimalFormat_CompactStyle.h>
#include <scapix/java_api/android/icu/util/CurrencyAmount.h>
#include <scapix/java_api/android/icu/util/ULocale.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/Number.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/text/ParsePosition.h>
#include <scapix/java_api/java/util/Locale.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::icu::text::CompactDecimalFormat : public jni::object_base<"android/icu/text/CompactDecimalFormat",
	android::icu::text::DecimalFormat>
{
public:

	using CompactStyle = CompactDecimalFormat_CompactStyle;

	static jni::ref<android::icu::text::CompactDecimalFormat> getInstance(jni::ref<android::icu::util::ULocale> locale, jni::ref<android::icu::text::CompactDecimalFormat_CompactStyle> style) { return call_static_method<"getInstance", jni::ref<android::icu::text::CompactDecimalFormat>>(locale, style); }
	static jni::ref<android::icu::text::CompactDecimalFormat> getInstance(jni::ref<java::util::Locale> locale, jni::ref<android::icu::text::CompactDecimalFormat_CompactStyle> style) { return call_static_method<"getInstance", jni::ref<android::icu::text::CompactDecimalFormat>>(locale, style); }
	jni::ref<java::lang::Number> parse(jni::ref<java::lang::String> text, jni::ref<java::text::ParsePosition> parsePosition) { return call_method<"parse", jni::ref<java::lang::Number>>(text, parsePosition); }
	jni::ref<android::icu::util::CurrencyAmount> parseCurrency(jni::ref<java::lang::CharSequence> text, jni::ref<java::text::ParsePosition> parsePosition) { return call_method<"parseCurrency", jni::ref<android::icu::util::CurrencyAmount>>(text, parsePosition); }

protected:

	CompactDecimalFormat(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_TEXT_COMPACTDECIMALFORMAT
