// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_OPENGL_GLU_FWD
#define SCAPIX_JAVA_API_ANDROID_OPENGL_GLU_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::opengl { class GLU; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::opengl::GLU>
{
	static constexpr fixed_string class_name = "android/opengl/GLU";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_OPENGL_GLU_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_OPENGL_GLU)
#define SCAPIX_JAVA_API_ANDROID_OPENGL_GLU

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/microedition/khronos/opengles/GL10.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::opengl::GLU : public jni::object_base<"android/opengl/GLU",
	java::lang::Object>
{
public:

	static jni::ref<android::opengl::GLU> new_object() { return base_::new_object(); }
	static jni::ref<java::lang::String> gluErrorString(jint error) { return call_static_method<"gluErrorString", jni::ref<java::lang::String>>(error); }
	static void gluLookAt(jni::ref<javax::microedition::khronos::opengles::GL10> gl, jfloat eyeX, jfloat eyeY, jfloat eyeZ, jfloat centerX, jfloat centerY, jfloat centerZ, jfloat upX, jfloat upY, jfloat upZ) { return call_static_method<"gluLookAt", void>(gl, eyeX, eyeY, eyeZ, centerX, centerY, centerZ, upX, upY, upZ); }
	static void gluOrtho2D(jni::ref<javax::microedition::khronos::opengles::GL10> gl, jfloat left, jfloat right, jfloat bottom, jfloat top) { return call_static_method<"gluOrtho2D", void>(gl, left, right, bottom, top); }
	static void gluPerspective(jni::ref<javax::microedition::khronos::opengles::GL10> gl, jfloat fovy, jfloat aspect, jfloat zNear, jfloat zFar) { return call_static_method<"gluPerspective", void>(gl, fovy, aspect, zNear, zFar); }
	static jint gluProject(jfloat objX, jfloat objY, jfloat objZ, jni::ref<jni::array<jfloat>> model, jint modelOffset, jni::ref<jni::array<jfloat>> project, jint projectOffset, jni::ref<jni::array<jint>> view, jint viewOffset, jni::ref<jni::array<jfloat>> win, jint winOffset) { return call_static_method<"gluProject", jint>(objX, objY, objZ, model, modelOffset, project, projectOffset, view, viewOffset, win, winOffset); }
	static jint gluUnProject(jfloat winX, jfloat winY, jfloat winZ, jni::ref<jni::array<jfloat>> model, jint modelOffset, jni::ref<jni::array<jfloat>> project, jint projectOffset, jni::ref<jni::array<jint>> view, jint viewOffset, jni::ref<jni::array<jfloat>> obj, jint objOffset) { return call_static_method<"gluUnProject", jint>(winX, winY, winZ, model, modelOffset, project, projectOffset, view, viewOffset, obj, objOffset); }

protected:

	GLU(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_OPENGL_GLU
