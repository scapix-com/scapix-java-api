// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_GRAPHICS_BITMAPREGIONDECODER_FWD
#define SCAPIX_JAVA_API_ANDROID_GRAPHICS_BITMAPREGIONDECODER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::graphics { class BitmapRegionDecoder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::graphics::BitmapRegionDecoder>
{
	static constexpr fixed_string class_name = "android/graphics/BitmapRegionDecoder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_GRAPHICS_BITMAPREGIONDECODER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_GRAPHICS_BITMAPREGIONDECODER)
#define SCAPIX_JAVA_API_ANDROID_GRAPHICS_BITMAPREGIONDECODER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/graphics/Bitmap.h>
#include <scapix/java_api/android/graphics/BitmapFactory_Options.h>
#include <scapix/java_api/android/graphics/Rect.h>
#include <scapix/java_api/java/io/FileDescriptor.h>
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::graphics::BitmapRegionDecoder : public jni::object_base<"android/graphics/BitmapRegionDecoder",
	java::lang::Object>
{
public:

	static jni::ref<android::graphics::BitmapRegionDecoder> newInstance(jni::ref<jni::array<jbyte>> data, jint offset, jint length, jboolean isShareable) { return call_static_method<"newInstance", jni::ref<android::graphics::BitmapRegionDecoder>>(data, offset, length, isShareable); }
	static jni::ref<android::graphics::BitmapRegionDecoder> newInstance(jni::ref<java::io::FileDescriptor> fd, jboolean isShareable) { return call_static_method<"newInstance", jni::ref<android::graphics::BitmapRegionDecoder>>(fd, isShareable); }
	static jni::ref<android::graphics::BitmapRegionDecoder> newInstance(jni::ref<java::io::InputStream> is, jboolean isShareable) { return call_static_method<"newInstance", jni::ref<android::graphics::BitmapRegionDecoder>>(is, isShareable); }
	static jni::ref<android::graphics::BitmapRegionDecoder> newInstance(jni::ref<java::lang::String> pathName, jboolean isShareable) { return call_static_method<"newInstance", jni::ref<android::graphics::BitmapRegionDecoder>>(pathName, isShareable); }
	jni::ref<android::graphics::Bitmap> decodeRegion(jni::ref<android::graphics::Rect> rect, jni::ref<android::graphics::BitmapFactory_Options> options) { return call_method<"decodeRegion", jni::ref<android::graphics::Bitmap>>(rect, options); }
	jint getWidth() { return call_method<"getWidth", jint>(); }
	jint getHeight() { return call_method<"getHeight", jint>(); }
	void recycle() { return call_method<"recycle", void>(); }
	jboolean isRecycled() { return call_method<"isRecycled", jboolean>(); }

protected:

	BitmapRegionDecoder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_GRAPHICS_BITMAPREGIONDECODER
