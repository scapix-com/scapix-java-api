// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_CONTENT_RESTRICTIONSMANAGER_FWD
#define SCAPIX_JAVA_API_ANDROID_CONTENT_RESTRICTIONSMANAGER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::content { class RestrictionsManager; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::content::RestrictionsManager>
{
	static constexpr fixed_string class_name = "android/content/RestrictionsManager";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_CONTENT_RESTRICTIONSMANAGER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_CONTENT_RESTRICTIONSMANAGER)
#define SCAPIX_JAVA_API_ANDROID_CONTENT_RESTRICTIONSMANAGER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/Intent.h>
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/android/os/PersistableBundle.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::content::RestrictionsManager : public jni::object_base<"android/content/RestrictionsManager",
	java::lang::Object>
{
public:

	static jni::ref<java::lang::String> ACTION_PERMISSION_RESPONSE_RECEIVED() { return get_static_field<"ACTION_PERMISSION_RESPONSE_RECEIVED", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ACTION_REQUEST_LOCAL_APPROVAL() { return get_static_field<"ACTION_REQUEST_LOCAL_APPROVAL", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ACTION_REQUEST_PERMISSION() { return get_static_field<"ACTION_REQUEST_PERMISSION", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> EXTRA_PACKAGE_NAME() { return get_static_field<"EXTRA_PACKAGE_NAME", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> EXTRA_REQUEST_BUNDLE() { return get_static_field<"EXTRA_REQUEST_BUNDLE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> EXTRA_REQUEST_ID() { return get_static_field<"EXTRA_REQUEST_ID", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> EXTRA_REQUEST_TYPE() { return get_static_field<"EXTRA_REQUEST_TYPE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> EXTRA_RESPONSE_BUNDLE() { return get_static_field<"EXTRA_RESPONSE_BUNDLE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> META_DATA_APP_RESTRICTIONS() { return get_static_field<"META_DATA_APP_RESTRICTIONS", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> REQUEST_KEY_APPROVE_LABEL() { return get_static_field<"REQUEST_KEY_APPROVE_LABEL", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> REQUEST_KEY_DATA() { return get_static_field<"REQUEST_KEY_DATA", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> REQUEST_KEY_DENY_LABEL() { return get_static_field<"REQUEST_KEY_DENY_LABEL", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> REQUEST_KEY_ICON() { return get_static_field<"REQUEST_KEY_ICON", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> REQUEST_KEY_ID() { return get_static_field<"REQUEST_KEY_ID", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> REQUEST_KEY_MESSAGE() { return get_static_field<"REQUEST_KEY_MESSAGE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> REQUEST_KEY_NEW_REQUEST() { return get_static_field<"REQUEST_KEY_NEW_REQUEST", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> REQUEST_KEY_TITLE() { return get_static_field<"REQUEST_KEY_TITLE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> REQUEST_TYPE_APPROVAL() { return get_static_field<"REQUEST_TYPE_APPROVAL", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> RESPONSE_KEY_ERROR_CODE() { return get_static_field<"RESPONSE_KEY_ERROR_CODE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> RESPONSE_KEY_MESSAGE() { return get_static_field<"RESPONSE_KEY_MESSAGE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> RESPONSE_KEY_RESPONSE_TIMESTAMP() { return get_static_field<"RESPONSE_KEY_RESPONSE_TIMESTAMP", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> RESPONSE_KEY_RESULT() { return get_static_field<"RESPONSE_KEY_RESULT", jni::ref<java::lang::String>>(); }
	static jint RESULT_APPROVED() { return get_static_field<"RESULT_APPROVED", jint>(); }
	static jint RESULT_DENIED() { return get_static_field<"RESULT_DENIED", jint>(); }
	static jint RESULT_ERROR() { return get_static_field<"RESULT_ERROR", jint>(); }
	static jint RESULT_ERROR_BAD_REQUEST() { return get_static_field<"RESULT_ERROR_BAD_REQUEST", jint>(); }
	static jint RESULT_ERROR_INTERNAL() { return get_static_field<"RESULT_ERROR_INTERNAL", jint>(); }
	static jint RESULT_ERROR_NETWORK() { return get_static_field<"RESULT_ERROR_NETWORK", jint>(); }
	static jint RESULT_NO_RESPONSE() { return get_static_field<"RESULT_NO_RESPONSE", jint>(); }
	static jint RESULT_UNKNOWN_REQUEST() { return get_static_field<"RESULT_UNKNOWN_REQUEST", jint>(); }

	jni::ref<android::os::Bundle> getApplicationRestrictions() { return call_method<"getApplicationRestrictions", jni::ref<android::os::Bundle>>(); }
	jboolean hasRestrictionsProvider() { return call_method<"hasRestrictionsProvider", jboolean>(); }
	void requestPermission(jni::ref<java::lang::String> requestType, jni::ref<java::lang::String> requestId, jni::ref<android::os::PersistableBundle> request) { return call_method<"requestPermission", void>(requestType, requestId, request); }
	jni::ref<android::content::Intent> createLocalApprovalIntent() { return call_method<"createLocalApprovalIntent", jni::ref<android::content::Intent>>(); }
	void notifyPermissionResponse(jni::ref<java::lang::String> packageName, jni::ref<android::os::PersistableBundle> response) { return call_method<"notifyPermissionResponse", void>(packageName, response); }
	jni::ref<java::util::List> getManifestRestrictions(jni::ref<java::lang::String> packageName) { return call_method<"getManifestRestrictions", jni::ref<java::util::List>>(packageName); }
	static jni::ref<android::os::Bundle> convertRestrictionsToBundle(jni::ref<java::util::List> entries) { return call_static_method<"convertRestrictionsToBundle", jni::ref<android::os::Bundle>>(entries); }

protected:

	RestrictionsManager(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_CONTENT_RESTRICTIONSMANAGER
