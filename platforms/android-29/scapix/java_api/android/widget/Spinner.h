// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/widget/AbsSpinner.h>
#include <scapix/java_api/android/content/DialogInterface_OnClickListener.h>

#ifndef SCAPIX_JAVA_API_ANDROID_WIDGET_SPINNER_FWD
#define SCAPIX_JAVA_API_ANDROID_WIDGET_SPINNER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::widget { class Spinner; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::widget::Spinner>
{
	static constexpr fixed_string class_name = "android/widget/Spinner";
	using base_classes = std::tuple<scapix::java_api::android::widget::AbsSpinner, scapix::java_api::android::content::DialogInterface_OnClickListener>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_WIDGET_SPINNER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_WIDGET_SPINNER)
#define SCAPIX_JAVA_API_ANDROID_WIDGET_SPINNER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/content/DialogInterface.h>
#include <scapix/java_api/android/content/res/Resources_Theme.h>
#include <scapix/java_api/android/graphics/drawable/Drawable.h>
#include <scapix/java_api/android/os/Parcelable.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/view/MotionEvent.h>
#include <scapix/java_api/android/view/PointerIcon.h>
#include <scapix/java_api/android/widget/AdapterView_OnItemClickListener.h>
#include <scapix/java_api/android/widget/SpinnerAdapter.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::widget::Spinner : public jni::object_base<"android/widget/Spinner",
	android::widget::AbsSpinner,
	android::content::DialogInterface_OnClickListener>
{
public:

	static jint MODE_DIALOG() { return get_static_field<"MODE_DIALOG", jint>(); }
	static jint MODE_DROPDOWN() { return get_static_field<"MODE_DROPDOWN", jint>(); }

	static jni::ref<android::widget::Spinner> new_object(jni::ref<android::content::Context> context) { return base_::new_object(context); }
	static jni::ref<android::widget::Spinner> new_object(jni::ref<android::content::Context> context, jint mode) { return base_::new_object(context, mode); }
	static jni::ref<android::widget::Spinner> new_object(jni::ref<android::content::Context> context, jni::ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
	static jni::ref<android::widget::Spinner> new_object(jni::ref<android::content::Context> context, jni::ref<android::util::AttributeSet> attrs, jint defStyleAttr) { return base_::new_object(context, attrs, defStyleAttr); }
	static jni::ref<android::widget::Spinner> new_object(jni::ref<android::content::Context> context, jni::ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint mode) { return base_::new_object(context, attrs, defStyleAttr, mode); }
	static jni::ref<android::widget::Spinner> new_object(jni::ref<android::content::Context> context, jni::ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes, jint mode) { return base_::new_object(context, attrs, defStyleAttr, defStyleRes, mode); }
	static jni::ref<android::widget::Spinner> new_object(jni::ref<android::content::Context> context, jni::ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes, jint mode, jni::ref<android::content::res::Resources_Theme> popupTheme) { return base_::new_object(context, attrs, defStyleAttr, defStyleRes, mode, popupTheme); }
	jni::ref<android::content::Context> getPopupContext() { return call_method<"getPopupContext", jni::ref<android::content::Context>>(); }
	void setPopupBackgroundDrawable(jni::ref<android::graphics::drawable::Drawable> background) { return call_method<"setPopupBackgroundDrawable", void>(background); }
	void setPopupBackgroundResource(jint resId) { return call_method<"setPopupBackgroundResource", void>(resId); }
	jni::ref<android::graphics::drawable::Drawable> getPopupBackground() { return call_method<"getPopupBackground", jni::ref<android::graphics::drawable::Drawable>>(); }
	void setDropDownVerticalOffset(jint pixels) { return call_method<"setDropDownVerticalOffset", void>(pixels); }
	jint getDropDownVerticalOffset() { return call_method<"getDropDownVerticalOffset", jint>(); }
	void setDropDownHorizontalOffset(jint pixels) { return call_method<"setDropDownHorizontalOffset", void>(pixels); }
	jint getDropDownHorizontalOffset() { return call_method<"getDropDownHorizontalOffset", jint>(); }
	void setDropDownWidth(jint pixels) { return call_method<"setDropDownWidth", void>(pixels); }
	jint getDropDownWidth() { return call_method<"getDropDownWidth", jint>(); }
	void setEnabled(jboolean enabled) { return call_method<"setEnabled", void>(enabled); }
	void setGravity(jint gravity) { return call_method<"setGravity", void>(gravity); }
	jint getGravity() { return call_method<"getGravity", jint>(); }
	void setAdapter(jni::ref<android::widget::SpinnerAdapter> adapter) { return call_method<"setAdapter", void>(adapter); }
	jint getBaseline() { return call_method<"getBaseline", jint>(); }
	void setOnItemClickListener(jni::ref<android::widget::AdapterView_OnItemClickListener> l) { return call_method<"setOnItemClickListener", void>(l); }
	jboolean onTouchEvent(jni::ref<android::view::MotionEvent> event) { return call_method<"onTouchEvent", jboolean>(event); }
	jboolean performClick() { return call_method<"performClick", jboolean>(); }
	void onClick(jni::ref<android::content::DialogInterface> dialog, jint which) { return call_method<"onClick", void>(dialog, which); }
	jni::ref<java::lang::CharSequence> getAccessibilityClassName() { return call_method<"getAccessibilityClassName", jni::ref<java::lang::CharSequence>>(); }
	void setPrompt(jni::ref<java::lang::CharSequence> prompt) { return call_method<"setPrompt", void>(prompt); }
	void setPromptId(jint promptId) { return call_method<"setPromptId", void>(promptId); }
	jni::ref<java::lang::CharSequence> getPrompt() { return call_method<"getPrompt", jni::ref<java::lang::CharSequence>>(); }
	jni::ref<android::os::Parcelable> onSaveInstanceState() { return call_method<"onSaveInstanceState", jni::ref<android::os::Parcelable>>(); }
	void onRestoreInstanceState(jni::ref<android::os::Parcelable> state) { return call_method<"onRestoreInstanceState", void>(state); }
	jni::ref<android::view::PointerIcon> onResolvePointerIcon(jni::ref<android::view::MotionEvent> event, jint pointerIndex) { return call_method<"onResolvePointerIcon", jni::ref<android::view::PointerIcon>>(event, pointerIndex); }

protected:

	Spinner(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_WIDGET_SPINNER
