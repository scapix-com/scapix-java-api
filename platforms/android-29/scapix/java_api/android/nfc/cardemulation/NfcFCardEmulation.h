// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_NFC_CARDEMULATION_NFCFCARDEMULATION_FWD
#define SCAPIX_JAVA_API_ANDROID_NFC_CARDEMULATION_NFCFCARDEMULATION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::nfc::cardemulation { class NfcFCardEmulation; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::nfc::cardemulation::NfcFCardEmulation>
{
	static constexpr fixed_string class_name = "android/nfc/cardemulation/NfcFCardEmulation";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NFC_CARDEMULATION_NFCFCARDEMULATION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_NFC_CARDEMULATION_NFCFCARDEMULATION)
#define SCAPIX_JAVA_API_ANDROID_NFC_CARDEMULATION_NFCFCARDEMULATION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/app/Activity.h>
#include <scapix/java_api/android/content/ComponentName.h>
#include <scapix/java_api/android/nfc/NfcAdapter.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::nfc::cardemulation::NfcFCardEmulation : public jni::object_base<"android/nfc/cardemulation/NfcFCardEmulation",
	java::lang::Object>
{
public:

	static jni::ref<android::nfc::cardemulation::NfcFCardEmulation> getInstance(jni::ref<android::nfc::NfcAdapter> adapter) { return call_static_method<"getInstance", jni::ref<android::nfc::cardemulation::NfcFCardEmulation>>(adapter); }
	jni::ref<java::lang::String> getSystemCodeForService(jni::ref<android::content::ComponentName> service) { return call_method<"getSystemCodeForService", jni::ref<java::lang::String>>(service); }
	jboolean registerSystemCodeForService(jni::ref<android::content::ComponentName> service, jni::ref<java::lang::String> systemCode) { return call_method<"registerSystemCodeForService", jboolean>(service, systemCode); }
	jboolean unregisterSystemCodeForService(jni::ref<android::content::ComponentName> service) { return call_method<"unregisterSystemCodeForService", jboolean>(service); }
	jni::ref<java::lang::String> getNfcid2ForService(jni::ref<android::content::ComponentName> service) { return call_method<"getNfcid2ForService", jni::ref<java::lang::String>>(service); }
	jboolean setNfcid2ForService(jni::ref<android::content::ComponentName> service, jni::ref<java::lang::String> nfcid2) { return call_method<"setNfcid2ForService", jboolean>(service, nfcid2); }
	jboolean enableService(jni::ref<android::app::Activity> activity, jni::ref<android::content::ComponentName> service) { return call_method<"enableService", jboolean>(activity, service); }
	jboolean disableService(jni::ref<android::app::Activity> activity) { return call_method<"disableService", jboolean>(activity); }

protected:

	NfcFCardEmulation(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NFC_CARDEMULATION_NFCFCARDEMULATION
