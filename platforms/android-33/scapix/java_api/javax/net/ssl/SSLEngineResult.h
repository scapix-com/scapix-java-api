// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVAX_NET_SSL_SSLENGINERESULT_FWD
#define SCAPIX_JAVA_API_JAVAX_NET_SSL_SSLENGINERESULT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::net::ssl { class SSLEngineResult; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::net::ssl::SSLEngineResult>
{
	static constexpr fixed_string class_name = "javax/net/ssl/SSLEngineResult";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_NET_SSL_SSLENGINERESULT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_NET_SSL_SSLENGINERESULT)
#define SCAPIX_JAVA_API_JAVAX_NET_SSL_SSLENGINERESULT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/net/ssl/SSLEngineResult_HandshakeStatus.h>
#include <scapix/java_api/javax/net/ssl/SSLEngineResult_Status.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::net::ssl::SSLEngineResult : public jni::object_base<"javax/net/ssl/SSLEngineResult",
	java::lang::Object>
{
public:

	using Status = SSLEngineResult_Status;
	using HandshakeStatus = SSLEngineResult_HandshakeStatus;

	static jni::ref<javax::net::ssl::SSLEngineResult> new_object(jni::ref<javax::net::ssl::SSLEngineResult_Status> status, jni::ref<javax::net::ssl::SSLEngineResult_HandshakeStatus> handshakeStatus, jint bytesConsumed, jint bytesProduced) { return base_::new_object(status, handshakeStatus, bytesConsumed, bytesProduced); }
	jni::ref<javax::net::ssl::SSLEngineResult_Status> getStatus() { return call_method<"getStatus", jni::ref<javax::net::ssl::SSLEngineResult_Status>>(); }
	jni::ref<javax::net::ssl::SSLEngineResult_HandshakeStatus> getHandshakeStatus() { return call_method<"getHandshakeStatus", jni::ref<javax::net::ssl::SSLEngineResult_HandshakeStatus>>(); }
	jint bytesConsumed() { return call_method<"bytesConsumed", jint>(); }
	jint bytesProduced() { return call_method<"bytesProduced", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	SSLEngineResult(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_NET_SSL_SSLENGINERESULT
