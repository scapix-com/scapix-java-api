// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/inputmethodservice/AbstractInputMethodService_AbstractInputMethodImpl.h>

#ifndef SCAPIX_JAVA_API_ANDROID_INPUTMETHODSERVICE_INPUTMETHODSERVICE_INPUTMETHODIMPL_FWD
#define SCAPIX_JAVA_API_ANDROID_INPUTMETHODSERVICE_INPUTMETHODSERVICE_INPUTMETHODIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::inputmethodservice { class InputMethodService_InputMethodImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::inputmethodservice::InputMethodService_InputMethodImpl>
{
	static constexpr fixed_string class_name = "android/inputmethodservice/InputMethodService$InputMethodImpl";
	using base_classes = std::tuple<scapix::java_api::android::inputmethodservice::AbstractInputMethodService_AbstractInputMethodImpl>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_INPUTMETHODSERVICE_INPUTMETHODSERVICE_INPUTMETHODIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_INPUTMETHODSERVICE_INPUTMETHODSERVICE_INPUTMETHODIMPL)
#define SCAPIX_JAVA_API_ANDROID_INPUTMETHODSERVICE_INPUTMETHODSERVICE_INPUTMETHODIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/inputmethodservice/InputMethodService.h>
#include <scapix/java_api/android/os/IBinder.h>
#include <scapix/java_api/android/os/ResultReceiver.h>
#include <scapix/java_api/android/view/inputmethod/EditorInfo.h>
#include <scapix/java_api/android/view/inputmethod/InputBinding.h>
#include <scapix/java_api/android/view/inputmethod/InputConnection.h>
#include <scapix/java_api/android/view/inputmethod/InputMethodSubtype.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::inputmethodservice::InputMethodService_InputMethodImpl : public jni::object_base<"android/inputmethodservice/InputMethodService$InputMethodImpl",
	android::inputmethodservice::AbstractInputMethodService_AbstractInputMethodImpl>
{
public:

	static jni::ref<android::inputmethodservice::InputMethodService_InputMethodImpl> new_object(jni::ref<android::inputmethodservice::InputMethodService> this_0) { return base_::new_object(this_0); }
	void attachToken(jni::ref<android::os::IBinder> token) { return call_method<"attachToken", void>(token); }
	void bindInput(jni::ref<android::view::inputmethod::InputBinding> binding) { return call_method<"bindInput", void>(binding); }
	void unbindInput() { return call_method<"unbindInput", void>(); }
	void startInput(jni::ref<android::view::inputmethod::InputConnection> ic, jni::ref<android::view::inputmethod::EditorInfo> attribute) { return call_method<"startInput", void>(ic, attribute); }
	void restartInput(jni::ref<android::view::inputmethod::InputConnection> ic, jni::ref<android::view::inputmethod::EditorInfo> attribute) { return call_method<"restartInput", void>(ic, attribute); }
	void hideSoftInput(jint flags, jni::ref<android::os::ResultReceiver> resultReceiver) { return call_method<"hideSoftInput", void>(flags, resultReceiver); }
	void showSoftInput(jint flags, jni::ref<android::os::ResultReceiver> resultReceiver) { return call_method<"showSoftInput", void>(flags, resultReceiver); }
	void changeInputMethodSubtype(jni::ref<android::view::inputmethod::InputMethodSubtype> subtype) { return call_method<"changeInputMethodSubtype", void>(subtype); }

protected:

	InputMethodService_InputMethodImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_INPUTMETHODSERVICE_INPUTMETHODSERVICE_INPUTMETHODIMPL
