// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_GRAPHICS_FONTS_FONT_FWD
#define SCAPIX_JAVA_API_ANDROID_GRAPHICS_FONTS_FONT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::graphics::fonts { class Font; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::graphics::fonts::Font>
{
	static constexpr fixed_string class_name = "android/graphics/fonts/Font";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_GRAPHICS_FONTS_FONT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_GRAPHICS_FONTS_FONT)
#define SCAPIX_JAVA_API_ANDROID_GRAPHICS_FONTS_FONT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/graphics/Paint.h>
#include <scapix/java_api/android/graphics/Paint_FontMetrics.h>
#include <scapix/java_api/android/graphics/RectF.h>
#include <scapix/java_api/android/graphics/fonts/FontStyle.h>
#include <scapix/java_api/android/graphics/fonts/FontVariationAxis.h>
#include <scapix/java_api/android/os/LocaleList.h>
#include <scapix/java_api/java/io/File.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/nio/ByteBuffer.h>
#include <scapix/java_api/android/graphics/fonts/Font_Builder.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::graphics::fonts::Font : public jni::object_base<"android/graphics/fonts/Font",
	java::lang::Object>
{
public:

	using Builder = Font_Builder;

	jni::ref<java::nio::ByteBuffer> getBuffer() { return call_method<"getBuffer", jni::ref<java::nio::ByteBuffer>>(); }
	jni::ref<java::io::File> getFile() { return call_method<"getFile", jni::ref<java::io::File>>(); }
	jni::ref<android::graphics::fonts::FontStyle> getStyle() { return call_method<"getStyle", jni::ref<android::graphics::fonts::FontStyle>>(); }
	jint getTtcIndex() { return call_method<"getTtcIndex", jint>(); }
	jni::ref<jni::array<android::graphics::fonts::FontVariationAxis>> getAxes() { return call_method<"getAxes", jni::ref<jni::array<android::graphics::fonts::FontVariationAxis>>>(); }
	jni::ref<android::os::LocaleList> getLocaleList() { return call_method<"getLocaleList", jni::ref<android::os::LocaleList>>(); }
	jfloat getGlyphBounds(jint glyphId, jni::ref<android::graphics::Paint> paint, jni::ref<android::graphics::RectF> outBoundingBox) { return call_method<"getGlyphBounds", jfloat>(glyphId, paint, outBoundingBox); }
	void getMetrics(jni::ref<android::graphics::Paint> paint, jni::ref<android::graphics::Paint_FontMetrics> outMetrics) { return call_method<"getMetrics", void>(paint, outMetrics); }
	jint getSourceIdentifier() { return call_method<"getSourceIdentifier", jint>(); }
	jboolean equals(jni::ref<java::lang::Object> o) { return call_method<"equals", jboolean>(o); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	Font(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_GRAPHICS_FONTS_FONT
