// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_GRAPHICS_TEXT_LINEBREAKCONFIG_FWD
#define SCAPIX_JAVA_API_ANDROID_GRAPHICS_TEXT_LINEBREAKCONFIG_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::graphics::text { class LineBreakConfig; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::graphics::text::LineBreakConfig>
{
	static constexpr fixed_string class_name = "android/graphics/text/LineBreakConfig";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_GRAPHICS_TEXT_LINEBREAKCONFIG_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_GRAPHICS_TEXT_LINEBREAKCONFIG)
#define SCAPIX_JAVA_API_ANDROID_GRAPHICS_TEXT_LINEBREAKCONFIG

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/graphics/text/LineBreakConfig_Builder.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::graphics::text::LineBreakConfig : public jni::object_base<"android/graphics/text/LineBreakConfig",
	java::lang::Object>
{
public:

	using Builder = LineBreakConfig_Builder;

	static jint LINE_BREAK_STYLE_LOOSE() { return get_static_field<"LINE_BREAK_STYLE_LOOSE", jint>(); }
	static jint LINE_BREAK_STYLE_NONE() { return get_static_field<"LINE_BREAK_STYLE_NONE", jint>(); }
	static jint LINE_BREAK_STYLE_NORMAL() { return get_static_field<"LINE_BREAK_STYLE_NORMAL", jint>(); }
	static jint LINE_BREAK_STYLE_STRICT() { return get_static_field<"LINE_BREAK_STYLE_STRICT", jint>(); }
	static jint LINE_BREAK_WORD_STYLE_NONE() { return get_static_field<"LINE_BREAK_WORD_STYLE_NONE", jint>(); }
	static jint LINE_BREAK_WORD_STYLE_PHRASE() { return get_static_field<"LINE_BREAK_WORD_STYLE_PHRASE", jint>(); }

	jint getLineBreakStyle() { return call_method<"getLineBreakStyle", jint>(); }
	jint getLineBreakWordStyle() { return call_method<"getLineBreakWordStyle", jint>(); }
	jboolean equals(jni::ref<java::lang::Object> o) { return call_method<"equals", jboolean>(o); }
	jint hashCode() { return call_method<"hashCode", jint>(); }

protected:

	LineBreakConfig(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_GRAPHICS_TEXT_LINEBREAKCONFIG
