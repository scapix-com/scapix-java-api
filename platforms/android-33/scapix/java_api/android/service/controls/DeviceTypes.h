// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_SERVICE_CONTROLS_DEVICETYPES_FWD
#define SCAPIX_JAVA_API_ANDROID_SERVICE_CONTROLS_DEVICETYPES_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::service::controls { class DeviceTypes; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::service::controls::DeviceTypes>
{
	static constexpr fixed_string class_name = "android/service/controls/DeviceTypes";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_SERVICE_CONTROLS_DEVICETYPES_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_SERVICE_CONTROLS_DEVICETYPES)
#define SCAPIX_JAVA_API_ANDROID_SERVICE_CONTROLS_DEVICETYPES

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::service::controls::DeviceTypes : public jni::object_base<"android/service/controls/DeviceTypes",
	java::lang::Object>
{
public:

	static jint TYPE_AC_HEATER() { return get_static_field<"TYPE_AC_HEATER", jint>(); }
	static jint TYPE_AC_UNIT() { return get_static_field<"TYPE_AC_UNIT", jint>(); }
	static jint TYPE_AIR_FRESHENER() { return get_static_field<"TYPE_AIR_FRESHENER", jint>(); }
	static jint TYPE_AIR_PURIFIER() { return get_static_field<"TYPE_AIR_PURIFIER", jint>(); }
	static jint TYPE_AWNING() { return get_static_field<"TYPE_AWNING", jint>(); }
	static jint TYPE_BLINDS() { return get_static_field<"TYPE_BLINDS", jint>(); }
	static jint TYPE_CAMERA() { return get_static_field<"TYPE_CAMERA", jint>(); }
	static jint TYPE_CLOSET() { return get_static_field<"TYPE_CLOSET", jint>(); }
	static jint TYPE_COFFEE_MAKER() { return get_static_field<"TYPE_COFFEE_MAKER", jint>(); }
	static jint TYPE_CURTAIN() { return get_static_field<"TYPE_CURTAIN", jint>(); }
	static jint TYPE_DEHUMIDIFIER() { return get_static_field<"TYPE_DEHUMIDIFIER", jint>(); }
	static jint TYPE_DISHWASHER() { return get_static_field<"TYPE_DISHWASHER", jint>(); }
	static jint TYPE_DISPLAY() { return get_static_field<"TYPE_DISPLAY", jint>(); }
	static jint TYPE_DOOR() { return get_static_field<"TYPE_DOOR", jint>(); }
	static jint TYPE_DOORBELL() { return get_static_field<"TYPE_DOORBELL", jint>(); }
	static jint TYPE_DRAWER() { return get_static_field<"TYPE_DRAWER", jint>(); }
	static jint TYPE_DRYER() { return get_static_field<"TYPE_DRYER", jint>(); }
	static jint TYPE_FAN() { return get_static_field<"TYPE_FAN", jint>(); }
	static jint TYPE_GARAGE() { return get_static_field<"TYPE_GARAGE", jint>(); }
	static jint TYPE_GATE() { return get_static_field<"TYPE_GATE", jint>(); }
	static jint TYPE_GENERIC_ARM_DISARM() { return get_static_field<"TYPE_GENERIC_ARM_DISARM", jint>(); }
	static jint TYPE_GENERIC_LOCK_UNLOCK() { return get_static_field<"TYPE_GENERIC_LOCK_UNLOCK", jint>(); }
	static jint TYPE_GENERIC_ON_OFF() { return get_static_field<"TYPE_GENERIC_ON_OFF", jint>(); }
	static jint TYPE_GENERIC_OPEN_CLOSE() { return get_static_field<"TYPE_GENERIC_OPEN_CLOSE", jint>(); }
	static jint TYPE_GENERIC_START_STOP() { return get_static_field<"TYPE_GENERIC_START_STOP", jint>(); }
	static jint TYPE_GENERIC_TEMP_SETTING() { return get_static_field<"TYPE_GENERIC_TEMP_SETTING", jint>(); }
	static jint TYPE_GENERIC_VIEWSTREAM() { return get_static_field<"TYPE_GENERIC_VIEWSTREAM", jint>(); }
	static jint TYPE_HEATER() { return get_static_field<"TYPE_HEATER", jint>(); }
	static jint TYPE_HOOD() { return get_static_field<"TYPE_HOOD", jint>(); }
	static jint TYPE_HUMIDIFIER() { return get_static_field<"TYPE_HUMIDIFIER", jint>(); }
	static jint TYPE_KETTLE() { return get_static_field<"TYPE_KETTLE", jint>(); }
	static jint TYPE_LIGHT() { return get_static_field<"TYPE_LIGHT", jint>(); }
	static jint TYPE_LOCK() { return get_static_field<"TYPE_LOCK", jint>(); }
	static jint TYPE_MICROWAVE() { return get_static_field<"TYPE_MICROWAVE", jint>(); }
	static jint TYPE_MOP() { return get_static_field<"TYPE_MOP", jint>(); }
	static jint TYPE_MOWER() { return get_static_field<"TYPE_MOWER", jint>(); }
	static jint TYPE_MULTICOOKER() { return get_static_field<"TYPE_MULTICOOKER", jint>(); }
	static jint TYPE_OUTLET() { return get_static_field<"TYPE_OUTLET", jint>(); }
	static jint TYPE_PERGOLA() { return get_static_field<"TYPE_PERGOLA", jint>(); }
	static jint TYPE_RADIATOR() { return get_static_field<"TYPE_RADIATOR", jint>(); }
	static jint TYPE_REFRIGERATOR() { return get_static_field<"TYPE_REFRIGERATOR", jint>(); }
	static jint TYPE_REMOTE_CONTROL() { return get_static_field<"TYPE_REMOTE_CONTROL", jint>(); }
	static jint TYPE_ROUTINE() { return get_static_field<"TYPE_ROUTINE", jint>(); }
	static jint TYPE_SECURITY_SYSTEM() { return get_static_field<"TYPE_SECURITY_SYSTEM", jint>(); }
	static jint TYPE_SET_TOP() { return get_static_field<"TYPE_SET_TOP", jint>(); }
	static jint TYPE_SHOWER() { return get_static_field<"TYPE_SHOWER", jint>(); }
	static jint TYPE_SHUTTER() { return get_static_field<"TYPE_SHUTTER", jint>(); }
	static jint TYPE_SPRINKLER() { return get_static_field<"TYPE_SPRINKLER", jint>(); }
	static jint TYPE_STANDMIXER() { return get_static_field<"TYPE_STANDMIXER", jint>(); }
	static jint TYPE_STYLER() { return get_static_field<"TYPE_STYLER", jint>(); }
	static jint TYPE_SWITCH() { return get_static_field<"TYPE_SWITCH", jint>(); }
	static jint TYPE_THERMOSTAT() { return get_static_field<"TYPE_THERMOSTAT", jint>(); }
	static jint TYPE_TV() { return get_static_field<"TYPE_TV", jint>(); }
	static jint TYPE_UNKNOWN() { return get_static_field<"TYPE_UNKNOWN", jint>(); }
	static jint TYPE_VACUUM() { return get_static_field<"TYPE_VACUUM", jint>(); }
	static jint TYPE_VALVE() { return get_static_field<"TYPE_VALVE", jint>(); }
	static jint TYPE_WASHER() { return get_static_field<"TYPE_WASHER", jint>(); }
	static jint TYPE_WATER_HEATER() { return get_static_field<"TYPE_WATER_HEATER", jint>(); }
	static jint TYPE_WINDOW() { return get_static_field<"TYPE_WINDOW", jint>(); }

	static jboolean validDeviceType(jint deviceType) { return call_static_method<"validDeviceType", jboolean>(deviceType); }

protected:

	DeviceTypes(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_SERVICE_CONTROLS_DEVICETYPES
