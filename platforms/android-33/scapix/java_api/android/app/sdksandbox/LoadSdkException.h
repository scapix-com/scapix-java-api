// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Exception.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_APP_SDKSANDBOX_LOADSDKEXCEPTION_FWD
#define SCAPIX_JAVA_API_ANDROID_APP_SDKSANDBOX_LOADSDKEXCEPTION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::app::sdksandbox { class LoadSdkException; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::app::sdksandbox::LoadSdkException>
{
	static constexpr fixed_string class_name = "android/app/sdksandbox/LoadSdkException";
	using base_classes = std::tuple<scapix::java_api::java::lang::Exception, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_SDKSANDBOX_LOADSDKEXCEPTION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_APP_SDKSANDBOX_LOADSDKEXCEPTION)
#define SCAPIX_JAVA_API_ANDROID_APP_SDKSANDBOX_LOADSDKEXCEPTION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/Throwable.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::app::sdksandbox::LoadSdkException : public jni::object_base<"android/app/sdksandbox/LoadSdkException",
	java::lang::Exception,
	android::os::Parcelable>
{
public:

	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }

	static jni::ref<android::app::sdksandbox::LoadSdkException> new_object(jni::ref<java::lang::Throwable> cause, jni::ref<android::os::Bundle> extraInfo) { return base_::new_object(cause, extraInfo); }
	jint getLoadSdkErrorCode() { return call_method<"getLoadSdkErrorCode", jint>(); }
	jni::ref<android::os::Bundle> getExtraInformation() { return call_method<"getExtraInformation", jni::ref<android::os::Bundle>>(); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	void writeToParcel(jni::ref<android::os::Parcel> destination, jint flags) { return call_method<"writeToParcel", void>(destination, flags); }

protected:

	LoadSdkException(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_SDKSANDBOX_LOADSDKEXCEPTION
