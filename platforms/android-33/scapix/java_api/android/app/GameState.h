// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_APP_GAMESTATE_FWD
#define SCAPIX_JAVA_API_ANDROID_APP_GAMESTATE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::app { class GameState; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::app::GameState>
{
	static constexpr fixed_string class_name = "android/app/GameState";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_GAMESTATE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_APP_GAMESTATE)
#define SCAPIX_JAVA_API_ANDROID_APP_GAMESTATE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::app::GameState : public jni::object_base<"android/app/GameState",
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }
	static jint MODE_CONTENT() { return get_static_field<"MODE_CONTENT", jint>(); }
	static jint MODE_GAMEPLAY_INTERRUPTIBLE() { return get_static_field<"MODE_GAMEPLAY_INTERRUPTIBLE", jint>(); }
	static jint MODE_GAMEPLAY_UNINTERRUPTIBLE() { return get_static_field<"MODE_GAMEPLAY_UNINTERRUPTIBLE", jint>(); }
	static jint MODE_NONE() { return get_static_field<"MODE_NONE", jint>(); }
	static jint MODE_UNKNOWN() { return get_static_field<"MODE_UNKNOWN", jint>(); }

	static jni::ref<android::app::GameState> new_object(jboolean isLoading, jint mode) { return base_::new_object(isLoading, mode); }
	static jni::ref<android::app::GameState> new_object(jboolean isLoading, jint mode, jint label, jint quality) { return base_::new_object(isLoading, mode, label, quality); }
	jboolean isLoading() { return call_method<"isLoading", jboolean>(); }
	jint getMode() { return call_method<"getMode", jint>(); }
	jint getLabel() { return call_method<"getLabel", jint>(); }
	jint getQuality() { return call_method<"getQuality", jint>(); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	void writeToParcel(jni::ref<android::os::Parcel> parcel, jint flags) { return call_method<"writeToParcel", void>(parcel, flags); }

protected:

	GameState(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_APP_GAMESTATE
