// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_ACCESSIBILITYSERVICE_INPUTMETHOD_FWD
#define SCAPIX_JAVA_API_ANDROID_ACCESSIBILITYSERVICE_INPUTMETHOD_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::accessibilityservice { class InputMethod; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::accessibilityservice::InputMethod>
{
	static constexpr fixed_string class_name = "android/accessibilityservice/InputMethod";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ACCESSIBILITYSERVICE_INPUTMETHOD_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_ACCESSIBILITYSERVICE_INPUTMETHOD)
#define SCAPIX_JAVA_API_ANDROID_ACCESSIBILITYSERVICE_INPUTMETHOD

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/accessibilityservice/AccessibilityService.h>
#include <scapix/java_api/android/accessibilityservice/InputMethod_AccessibilityInputConnection.h>
#include <scapix/java_api/android/view/inputmethod/EditorInfo.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::accessibilityservice::InputMethod : public jni::object_base<"android/accessibilityservice/InputMethod",
	java::lang::Object>
{
public:

	using AccessibilityInputConnection = InputMethod_AccessibilityInputConnection;

	static jni::ref<android::accessibilityservice::InputMethod> new_object(jni::ref<android::accessibilityservice::AccessibilityService> service) { return base_::new_object(service); }
	jni::ref<android::accessibilityservice::InputMethod_AccessibilityInputConnection> getCurrentInputConnection() { return call_method<"getCurrentInputConnection", jni::ref<android::accessibilityservice::InputMethod_AccessibilityInputConnection>>(); }
	jboolean getCurrentInputStarted() { return call_method<"getCurrentInputStarted", jboolean>(); }
	jni::ref<android::view::inputmethod::EditorInfo> getCurrentInputEditorInfo() { return call_method<"getCurrentInputEditorInfo", jni::ref<android::view::inputmethod::EditorInfo>>(); }
	void onStartInput(jni::ref<android::view::inputmethod::EditorInfo> attribute, jboolean restarting) { return call_method<"onStartInput", void>(attribute, restarting); }
	void onFinishInput() { return call_method<"onFinishInput", void>(); }
	void onUpdateSelection(jint oldSelStart, jint oldSelEnd, jint newSelStart, jint newSelEnd, jint candidatesStart, jint candidatesEnd) { return call_method<"onUpdateSelection", void>(oldSelStart, oldSelEnd, newSelStart, newSelEnd, candidatesStart, candidatesEnd); }

protected:

	InputMethod(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ACCESSIBILITYSERVICE_INPUTMETHOD
