// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_ACCESSIBILITYSERVICE_TOUCHINTERACTIONCONTROLLER_FWD
#define SCAPIX_JAVA_API_ANDROID_ACCESSIBILITYSERVICE_TOUCHINTERACTIONCONTROLLER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::accessibilityservice { class TouchInteractionController; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::accessibilityservice::TouchInteractionController>
{
	static constexpr fixed_string class_name = "android/accessibilityservice/TouchInteractionController";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ACCESSIBILITYSERVICE_TOUCHINTERACTIONCONTROLLER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_ACCESSIBILITYSERVICE_TOUCHINTERACTIONCONTROLLER)
#define SCAPIX_JAVA_API_ANDROID_ACCESSIBILITYSERVICE_TOUCHINTERACTIONCONTROLLER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/accessibilityservice/TouchInteractionController_Callback.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/concurrent/Executor.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::accessibilityservice::TouchInteractionController : public jni::object_base<"android/accessibilityservice/TouchInteractionController",
	java::lang::Object>
{
public:

	using Callback = TouchInteractionController_Callback;

	static jint STATE_CLEAR() { return get_static_field<"STATE_CLEAR", jint>(); }
	static jint STATE_DELEGATING() { return get_static_field<"STATE_DELEGATING", jint>(); }
	static jint STATE_DRAGGING() { return get_static_field<"STATE_DRAGGING", jint>(); }
	static jint STATE_TOUCH_EXPLORING() { return get_static_field<"STATE_TOUCH_EXPLORING", jint>(); }
	static jint STATE_TOUCH_INTERACTING() { return get_static_field<"STATE_TOUCH_INTERACTING", jint>(); }

	void registerCallback(jni::ref<java::util::concurrent::Executor> executor, jni::ref<android::accessibilityservice::TouchInteractionController_Callback> callback) { return call_method<"registerCallback", void>(executor, callback); }
	jboolean unregisterCallback(jni::ref<android::accessibilityservice::TouchInteractionController_Callback> callback) { return call_method<"unregisterCallback", jboolean>(callback); }
	void unregisterAllCallbacks() { return call_method<"unregisterAllCallbacks", void>(); }
	void requestTouchExploration() { return call_method<"requestTouchExploration", void>(); }
	void requestDragging(jint pointerId) { return call_method<"requestDragging", void>(pointerId); }
	void requestDelegating() { return call_method<"requestDelegating", void>(); }
	void performClick() { return call_method<"performClick", void>(); }
	void performLongClickAndStartDrag() { return call_method<"performLongClickAndStartDrag", void>(); }
	jint getMaxPointerCount() { return call_method<"getMaxPointerCount", jint>(); }
	jint getDisplayId() { return call_method<"getDisplayId", jint>(); }
	jint getState() { return call_method<"getState", jint>(); }
	static jni::ref<java::lang::String> stateToString(jint state) { return call_static_method<"stateToString", jni::ref<java::lang::String>>(state); }

protected:

	TouchInteractionController(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ACCESSIBILITYSERVICE_TOUCHINTERACTIONCONTROLLER
