// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_ACCESSIBILITYSERVICE_INPUTMETHOD_ACCESSIBILITYINPUTCONNECTION_FWD
#define SCAPIX_JAVA_API_ANDROID_ACCESSIBILITYSERVICE_INPUTMETHOD_ACCESSIBILITYINPUTCONNECTION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::accessibilityservice { class InputMethod_AccessibilityInputConnection; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::accessibilityservice::InputMethod_AccessibilityInputConnection>
{
	static constexpr fixed_string class_name = "android/accessibilityservice/InputMethod$AccessibilityInputConnection";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ACCESSIBILITYSERVICE_INPUTMETHOD_ACCESSIBILITYINPUTCONNECTION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_ACCESSIBILITYSERVICE_INPUTMETHOD_ACCESSIBILITYINPUTCONNECTION)
#define SCAPIX_JAVA_API_ANDROID_ACCESSIBILITYSERVICE_INPUTMETHOD_ACCESSIBILITYINPUTCONNECTION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/view/KeyEvent.h>
#include <scapix/java_api/android/view/inputmethod/SurroundingText.h>
#include <scapix/java_api/android/view/inputmethod/TextAttribute.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::accessibilityservice::InputMethod_AccessibilityInputConnection : public jni::object_base<"android/accessibilityservice/InputMethod$AccessibilityInputConnection",
	java::lang::Object>
{
public:

	void commitText(jni::ref<java::lang::CharSequence> text, jint newCursorPosition, jni::ref<android::view::inputmethod::TextAttribute> textAttribute) { return call_method<"commitText", void>(text, newCursorPosition, textAttribute); }
	void setSelection(jint start, jint end) { return call_method<"setSelection", void>(start, end); }
	jni::ref<android::view::inputmethod::SurroundingText> getSurroundingText(jint beforeLength, jint afterLength, jint flags) { return call_method<"getSurroundingText", jni::ref<android::view::inputmethod::SurroundingText>>(beforeLength, afterLength, flags); }
	void deleteSurroundingText(jint beforeLength, jint afterLength) { return call_method<"deleteSurroundingText", void>(beforeLength, afterLength); }
	void sendKeyEvent(jni::ref<android::view::KeyEvent> event) { return call_method<"sendKeyEvent", void>(event); }
	void performEditorAction(jint editorAction) { return call_method<"performEditorAction", void>(editorAction); }
	void performContextMenuAction(jint id) { return call_method<"performContextMenuAction", void>(id); }
	jint getCursorCapsMode(jint reqModes) { return call_method<"getCursorCapsMode", jint>(reqModes); }
	void clearMetaKeyStates(jint states) { return call_method<"clearMetaKeyStates", void>(states); }

protected:

	InputMethod_AccessibilityInputConnection(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ACCESSIBILITYSERVICE_INPUTMETHOD_ACCESSIBILITYINPUTCONNECTION
