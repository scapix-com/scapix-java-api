// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_LOCATION_GNSSANTENNAINFO_BUILDER_FWD
#define SCAPIX_JAVA_API_ANDROID_LOCATION_GNSSANTENNAINFO_BUILDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::location { class GnssAntennaInfo_Builder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::location::GnssAntennaInfo_Builder>
{
	static constexpr fixed_string class_name = "android/location/GnssAntennaInfo$Builder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_LOCATION_GNSSANTENNAINFO_BUILDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_LOCATION_GNSSANTENNAINFO_BUILDER)
#define SCAPIX_JAVA_API_ANDROID_LOCATION_GNSSANTENNAINFO_BUILDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/location/GnssAntennaInfo.h>
#include <scapix/java_api/android/location/GnssAntennaInfo_PhaseCenterOffset.h>
#include <scapix/java_api/android/location/GnssAntennaInfo_SphericalCorrections.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::location::GnssAntennaInfo_Builder : public jni::object_base<"android/location/GnssAntennaInfo$Builder",
	java::lang::Object>
{
public:

	static jni::ref<android::location::GnssAntennaInfo_Builder> new_object() { return base_::new_object(); }
	static jni::ref<android::location::GnssAntennaInfo_Builder> new_object(jdouble carrierFrequencyMHz, jni::ref<android::location::GnssAntennaInfo_PhaseCenterOffset> p2) { return base_::new_object(carrierFrequencyMHz, p2); }
	static jni::ref<android::location::GnssAntennaInfo_Builder> new_object(jni::ref<android::location::GnssAntennaInfo> antennaInfo) { return base_::new_object(antennaInfo); }
	jni::ref<android::location::GnssAntennaInfo_Builder> setCarrierFrequencyMHz(jdouble carrierFrequencyMHz) { return call_method<"setCarrierFrequencyMHz", jni::ref<android::location::GnssAntennaInfo_Builder>>(carrierFrequencyMHz); }
	jni::ref<android::location::GnssAntennaInfo_Builder> setPhaseCenterOffset(jni::ref<android::location::GnssAntennaInfo_PhaseCenterOffset> phaseCenterOffset) { return call_method<"setPhaseCenterOffset", jni::ref<android::location::GnssAntennaInfo_Builder>>(phaseCenterOffset); }
	jni::ref<android::location::GnssAntennaInfo_Builder> setPhaseCenterVariationCorrections(jni::ref<android::location::GnssAntennaInfo_SphericalCorrections> phaseCenterVariationCorrections) { return call_method<"setPhaseCenterVariationCorrections", jni::ref<android::location::GnssAntennaInfo_Builder>>(phaseCenterVariationCorrections); }
	jni::ref<android::location::GnssAntennaInfo_Builder> setSignalGainCorrections(jni::ref<android::location::GnssAntennaInfo_SphericalCorrections> signalGainCorrections) { return call_method<"setSignalGainCorrections", jni::ref<android::location::GnssAntennaInfo_Builder>>(signalGainCorrections); }
	jni::ref<android::location::GnssAntennaInfo> build() { return call_method<"build", jni::ref<android::location::GnssAntennaInfo>>(); }

protected:

	GnssAntennaInfo_Builder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_LOCATION_GNSSANTENNAINFO_BUILDER
