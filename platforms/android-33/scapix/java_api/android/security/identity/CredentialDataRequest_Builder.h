// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_SECURITY_IDENTITY_CREDENTIALDATAREQUEST_BUILDER_FWD
#define SCAPIX_JAVA_API_ANDROID_SECURITY_IDENTITY_CREDENTIALDATAREQUEST_BUILDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::security::identity { class CredentialDataRequest_Builder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::security::identity::CredentialDataRequest_Builder>
{
	static constexpr fixed_string class_name = "android/security/identity/CredentialDataRequest$Builder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_SECURITY_IDENTITY_CREDENTIALDATAREQUEST_BUILDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_SECURITY_IDENTITY_CREDENTIALDATAREQUEST_BUILDER)
#define SCAPIX_JAVA_API_ANDROID_SECURITY_IDENTITY_CREDENTIALDATAREQUEST_BUILDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/security/identity/CredentialDataRequest.h>
#include <scapix/java_api/java/util/Map.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::security::identity::CredentialDataRequest_Builder : public jni::object_base<"android/security/identity/CredentialDataRequest$Builder",
	java::lang::Object>
{
public:

	static jni::ref<android::security::identity::CredentialDataRequest_Builder> new_object() { return base_::new_object(); }
	jni::ref<android::security::identity::CredentialDataRequest_Builder> setDeviceSignedEntriesToRequest(jni::ref<java::util::Map> entriesToRequest) { return call_method<"setDeviceSignedEntriesToRequest", jni::ref<android::security::identity::CredentialDataRequest_Builder>>(entriesToRequest); }
	jni::ref<android::security::identity::CredentialDataRequest_Builder> setIssuerSignedEntriesToRequest(jni::ref<java::util::Map> entriesToRequest) { return call_method<"setIssuerSignedEntriesToRequest", jni::ref<android::security::identity::CredentialDataRequest_Builder>>(entriesToRequest); }
	jni::ref<android::security::identity::CredentialDataRequest_Builder> setAllowUsingExhaustedKeys(jboolean allowUsingExhaustedKeys) { return call_method<"setAllowUsingExhaustedKeys", jni::ref<android::security::identity::CredentialDataRequest_Builder>>(allowUsingExhaustedKeys); }
	jni::ref<android::security::identity::CredentialDataRequest_Builder> setAllowUsingExpiredKeys(jboolean allowUsingExpiredKeys) { return call_method<"setAllowUsingExpiredKeys", jni::ref<android::security::identity::CredentialDataRequest_Builder>>(allowUsingExpiredKeys); }
	jni::ref<android::security::identity::CredentialDataRequest_Builder> setIncrementUseCount(jboolean incrementUseCount) { return call_method<"setIncrementUseCount", jni::ref<android::security::identity::CredentialDataRequest_Builder>>(incrementUseCount); }
	jni::ref<android::security::identity::CredentialDataRequest_Builder> setRequestMessage(jni::ref<jni::array<jbyte>> requestMessage) { return call_method<"setRequestMessage", jni::ref<android::security::identity::CredentialDataRequest_Builder>>(requestMessage); }
	jni::ref<android::security::identity::CredentialDataRequest_Builder> setReaderSignature(jni::ref<jni::array<jbyte>> readerSignature) { return call_method<"setReaderSignature", jni::ref<android::security::identity::CredentialDataRequest_Builder>>(readerSignature); }
	jni::ref<android::security::identity::CredentialDataRequest> build() { return call_method<"build", jni::ref<android::security::identity::CredentialDataRequest>>(); }

protected:

	CredentialDataRequest_Builder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_SECURITY_IDENTITY_CREDENTIALDATAREQUEST_BUILDER
