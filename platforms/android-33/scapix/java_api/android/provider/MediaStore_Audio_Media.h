// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/provider/MediaStore_Audio_AudioColumns.h>

#ifndef SCAPIX_JAVA_API_ANDROID_PROVIDER_MEDIASTORE_AUDIO_MEDIA_FWD
#define SCAPIX_JAVA_API_ANDROID_PROVIDER_MEDIASTORE_AUDIO_MEDIA_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::provider { class MediaStore_Audio_Media; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::provider::MediaStore_Audio_Media>
{
	static constexpr fixed_string class_name = "android/provider/MediaStore$Audio$Media";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::provider::MediaStore_Audio_AudioColumns>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_PROVIDER_MEDIASTORE_AUDIO_MEDIA_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_PROVIDER_MEDIASTORE_AUDIO_MEDIA)
#define SCAPIX_JAVA_API_ANDROID_PROVIDER_MEDIASTORE_AUDIO_MEDIA

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::provider::MediaStore_Audio_Media : public jni::object_base<"android/provider/MediaStore$Audio$Media",
	java::lang::Object,
	android::provider::MediaStore_Audio_AudioColumns>
{
public:

	static jni::ref<java::lang::String> CONTENT_TYPE() { return get_static_field<"CONTENT_TYPE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> DEFAULT_SORT_ORDER() { return get_static_field<"DEFAULT_SORT_ORDER", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ENTRY_CONTENT_TYPE() { return get_static_field<"ENTRY_CONTENT_TYPE", jni::ref<java::lang::String>>(); }
	static jni::ref<android::net::Uri> EXTERNAL_CONTENT_URI() { return get_static_field<"EXTERNAL_CONTENT_URI", jni::ref<android::net::Uri>>(); }
	static jni::ref<java::lang::String> EXTRA_MAX_BYTES() { return get_static_field<"EXTRA_MAX_BYTES", jni::ref<java::lang::String>>(); }
	static jni::ref<android::net::Uri> INTERNAL_CONTENT_URI() { return get_static_field<"INTERNAL_CONTENT_URI", jni::ref<android::net::Uri>>(); }
	static jni::ref<java::lang::String> RECORD_SOUND_ACTION() { return get_static_field<"RECORD_SOUND_ACTION", jni::ref<java::lang::String>>(); }

	static jni::ref<android::provider::MediaStore_Audio_Media> new_object() { return base_::new_object(); }
	static jni::ref<android::net::Uri> getContentUri(jni::ref<java::lang::String> volumeName) { return call_static_method<"getContentUri", jni::ref<android::net::Uri>>(volumeName); }
	static jni::ref<android::net::Uri> getContentUri(jni::ref<java::lang::String> volumeName, jlong id) { return call_static_method<"getContentUri", jni::ref<android::net::Uri>>(volumeName, id); }
	static jni::ref<android::net::Uri> getContentUriForPath(jni::ref<java::lang::String> path) { return call_static_method<"getContentUriForPath", jni::ref<android::net::Uri>>(path); }

protected:

	MediaStore_Audio_Media(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_PROVIDER_MEDIASTORE_AUDIO_MEDIA
