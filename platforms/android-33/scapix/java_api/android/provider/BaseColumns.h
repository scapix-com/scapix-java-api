// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_PROVIDER_BASECOLUMNS_FWD
#define SCAPIX_JAVA_API_ANDROID_PROVIDER_BASECOLUMNS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::provider { class BaseColumns; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::provider::BaseColumns>
{
	static constexpr fixed_string class_name = "android/provider/BaseColumns";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_PROVIDER_BASECOLUMNS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_PROVIDER_BASECOLUMNS)
#define SCAPIX_JAVA_API_ANDROID_PROVIDER_BASECOLUMNS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::provider::BaseColumns : public jni::object_base<"android/provider/BaseColumns",
	java::lang::Object>
{
public:

	static jni::ref<java::lang::String> _COUNT() { return get_static_field<"_COUNT", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> _ID() { return get_static_field<"_ID", jni::ref<java::lang::String>>(); }


protected:

	BaseColumns(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_PROVIDER_BASECOLUMNS
