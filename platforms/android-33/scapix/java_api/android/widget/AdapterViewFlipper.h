// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/widget/AdapterViewAnimator.h>

#ifndef SCAPIX_JAVA_API_ANDROID_WIDGET_ADAPTERVIEWFLIPPER_FWD
#define SCAPIX_JAVA_API_ANDROID_WIDGET_ADAPTERVIEWFLIPPER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::widget { class AdapterViewFlipper; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::widget::AdapterViewFlipper>
{
	static constexpr fixed_string class_name = "android/widget/AdapterViewFlipper";
	using base_classes = std::tuple<scapix::java_api::android::widget::AdapterViewAnimator>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_WIDGET_ADAPTERVIEWFLIPPER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_WIDGET_ADAPTERVIEWFLIPPER)
#define SCAPIX_JAVA_API_ANDROID_WIDGET_ADAPTERVIEWFLIPPER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/widget/Adapter.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::widget::AdapterViewFlipper : public jni::object_base<"android/widget/AdapterViewFlipper",
	android::widget::AdapterViewAnimator>
{
public:

	static jni::ref<android::widget::AdapterViewFlipper> new_object(jni::ref<android::content::Context> context) { return base_::new_object(context); }
	static jni::ref<android::widget::AdapterViewFlipper> new_object(jni::ref<android::content::Context> context, jni::ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
	static jni::ref<android::widget::AdapterViewFlipper> new_object(jni::ref<android::content::Context> context, jni::ref<android::util::AttributeSet> attrs, jint defStyleAttr) { return base_::new_object(context, attrs, defStyleAttr); }
	static jni::ref<android::widget::AdapterViewFlipper> new_object(jni::ref<android::content::Context> context, jni::ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes) { return base_::new_object(context, attrs, defStyleAttr, defStyleRes); }
	void setAdapter(jni::ref<android::widget::Adapter> adapter) { return call_method<"setAdapter", void>(adapter); }
	jint getFlipInterval() { return call_method<"getFlipInterval", jint>(); }
	void setFlipInterval(jint flipInterval) { return call_method<"setFlipInterval", void>(flipInterval); }
	void startFlipping() { return call_method<"startFlipping", void>(); }
	void stopFlipping() { return call_method<"stopFlipping", void>(); }
	void showNext() { return call_method<"showNext", void>(); }
	void showPrevious() { return call_method<"showPrevious", void>(); }
	jboolean isFlipping() { return call_method<"isFlipping", jboolean>(); }
	void setAutoStart(jboolean autoStart) { return call_method<"setAutoStart", void>(autoStart); }
	jboolean isAutoStart() { return call_method<"isAutoStart", jboolean>(); }
	void fyiWillBeAdvancedByHostKThx() { return call_method<"fyiWillBeAdvancedByHostKThx", void>(); }
	jni::ref<java::lang::CharSequence> getAccessibilityClassName() { return call_method<"getAccessibilityClassName", jni::ref<java::lang::CharSequence>>(); }

protected:

	AdapterViewFlipper(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_WIDGET_ADAPTERVIEWFLIPPER
