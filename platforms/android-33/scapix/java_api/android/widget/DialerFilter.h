// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/widget/RelativeLayout.h>

#ifndef SCAPIX_JAVA_API_ANDROID_WIDGET_DIALERFILTER_FWD
#define SCAPIX_JAVA_API_ANDROID_WIDGET_DIALERFILTER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::widget { class DialerFilter; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::widget::DialerFilter>
{
	static constexpr fixed_string class_name = "android/widget/DialerFilter";
	using base_classes = std::tuple<scapix::java_api::android::widget::RelativeLayout>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_WIDGET_DIALERFILTER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_WIDGET_DIALERFILTER)
#define SCAPIX_JAVA_API_ANDROID_WIDGET_DIALERFILTER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/text/TextWatcher.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/view/KeyEvent.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::widget::DialerFilter : public jni::object_base<"android/widget/DialerFilter",
	android::widget::RelativeLayout>
{
public:

	static jint DIGITS_AND_LETTERS() { return get_static_field<"DIGITS_AND_LETTERS", jint>(); }
	static jint DIGITS_AND_LETTERS_NO_DIGITS() { return get_static_field<"DIGITS_AND_LETTERS_NO_DIGITS", jint>(); }
	static jint DIGITS_AND_LETTERS_NO_LETTERS() { return get_static_field<"DIGITS_AND_LETTERS_NO_LETTERS", jint>(); }
	static jint DIGITS_ONLY() { return get_static_field<"DIGITS_ONLY", jint>(); }
	static jint LETTERS_ONLY() { return get_static_field<"LETTERS_ONLY", jint>(); }

	static jni::ref<android::widget::DialerFilter> new_object(jni::ref<android::content::Context> context) { return base_::new_object(context); }
	static jni::ref<android::widget::DialerFilter> new_object(jni::ref<android::content::Context> context, jni::ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
	jboolean isQwertyKeyboard() { return call_method<"isQwertyKeyboard", jboolean>(); }
	jboolean onKeyDown(jint keyCode, jni::ref<android::view::KeyEvent> event) { return call_method<"onKeyDown", jboolean>(keyCode, event); }
	jboolean onKeyUp(jint keyCode, jni::ref<android::view::KeyEvent> event) { return call_method<"onKeyUp", jboolean>(keyCode, event); }
	jint getMode() { return call_method<"getMode", jint>(); }
	void setMode(jint newMode) { return call_method<"setMode", void>(newMode); }
	jni::ref<java::lang::CharSequence> getLetters() { return call_method<"getLetters", jni::ref<java::lang::CharSequence>>(); }
	jni::ref<java::lang::CharSequence> getDigits() { return call_method<"getDigits", jni::ref<java::lang::CharSequence>>(); }
	jni::ref<java::lang::CharSequence> getFilterText() { return call_method<"getFilterText", jni::ref<java::lang::CharSequence>>(); }
	void append(jni::ref<java::lang::String> text) { return call_method<"append", void>(text); }
	void clearText() { return call_method<"clearText", void>(); }
	void setLettersWatcher(jni::ref<android::text::TextWatcher> watcher) { return call_method<"setLettersWatcher", void>(watcher); }
	void setDigitsWatcher(jni::ref<android::text::TextWatcher> watcher) { return call_method<"setDigitsWatcher", void>(watcher); }
	void setFilterWatcher(jni::ref<android::text::TextWatcher> watcher) { return call_method<"setFilterWatcher", void>(watcher); }
	void removeFilterWatcher(jni::ref<android::text::TextWatcher> watcher) { return call_method<"removeFilterWatcher", void>(watcher); }

protected:

	DialerFilter(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_WIDGET_DIALERFILTER
