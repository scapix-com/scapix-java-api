// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/widget/BaseExpandableListAdapter.h>
#include <scapix/java_api/android/widget/Filterable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_WIDGET_CURSORTREEADAPTER_FWD
#define SCAPIX_JAVA_API_ANDROID_WIDGET_CURSORTREEADAPTER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::widget { class CursorTreeAdapter; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::widget::CursorTreeAdapter>
{
	static constexpr fixed_string class_name = "android/widget/CursorTreeAdapter";
	using base_classes = std::tuple<scapix::java_api::android::widget::BaseExpandableListAdapter, scapix::java_api::android::widget::Filterable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_WIDGET_CURSORTREEADAPTER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_WIDGET_CURSORTREEADAPTER)
#define SCAPIX_JAVA_API_ANDROID_WIDGET_CURSORTREEADAPTER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/database/Cursor.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/android/view/ViewGroup.h>
#include <scapix/java_api/android/widget/Filter.h>
#include <scapix/java_api/android/widget/FilterQueryProvider.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::widget::CursorTreeAdapter : public jni::object_base<"android/widget/CursorTreeAdapter",
	android::widget::BaseExpandableListAdapter,
	android::widget::Filterable>
{
public:

	static jni::ref<android::widget::CursorTreeAdapter> new_object(jni::ref<android::database::Cursor> cursor, jni::ref<android::content::Context> context) { return base_::new_object(cursor, context); }
	static jni::ref<android::widget::CursorTreeAdapter> new_object(jni::ref<android::database::Cursor> cursor, jni::ref<android::content::Context> context, jboolean autoRequery) { return base_::new_object(cursor, context, autoRequery); }
	void setGroupCursor(jni::ref<android::database::Cursor> cursor) { return call_method<"setGroupCursor", void>(cursor); }
	void setChildrenCursor(jint groupPosition, jni::ref<android::database::Cursor> childrenCursor) { return call_method<"setChildrenCursor", void>(groupPosition, childrenCursor); }
	jni::ref<android::database::Cursor> getChild(jint groupPosition, jint childPosition) { return call_method<"getChild", jni::ref<android::database::Cursor>>(groupPosition, childPosition); }
	jlong getChildId(jint groupPosition, jint childPosition) { return call_method<"getChildId", jlong>(groupPosition, childPosition); }
	jint getChildrenCount(jint groupPosition) { return call_method<"getChildrenCount", jint>(groupPosition); }
	jni::ref<android::database::Cursor> getGroup(jint groupPosition) { return call_method<"getGroup", jni::ref<android::database::Cursor>>(groupPosition); }
	jint getGroupCount() { return call_method<"getGroupCount", jint>(); }
	jlong getGroupId(jint groupPosition) { return call_method<"getGroupId", jlong>(groupPosition); }
	jni::ref<android::view::View> getGroupView(jint groupPosition, jboolean isExpanded, jni::ref<android::view::View> convertView, jni::ref<android::view::ViewGroup> parent) { return call_method<"getGroupView", jni::ref<android::view::View>>(groupPosition, isExpanded, convertView, parent); }
	jni::ref<android::view::View> getChildView(jint groupPosition, jint childPosition, jboolean isLastChild, jni::ref<android::view::View> convertView, jni::ref<android::view::ViewGroup> parent) { return call_method<"getChildView", jni::ref<android::view::View>>(groupPosition, childPosition, isLastChild, convertView, parent); }
	jboolean isChildSelectable(jint groupPosition, jint childPosition) { return call_method<"isChildSelectable", jboolean>(groupPosition, childPosition); }
	jboolean hasStableIds() { return call_method<"hasStableIds", jboolean>(); }
	void notifyDataSetChanged() { return call_method<"notifyDataSetChanged", void>(); }
	void notifyDataSetChanged(jboolean releaseCursors) { return call_method<"notifyDataSetChanged", void>(releaseCursors); }
	void notifyDataSetInvalidated() { return call_method<"notifyDataSetInvalidated", void>(); }
	void onGroupCollapsed(jint groupPosition) { return call_method<"onGroupCollapsed", void>(groupPosition); }
	jni::ref<java::lang::String> convertToString(jni::ref<android::database::Cursor> cursor) { return call_method<"convertToString", jni::ref<java::lang::String>>(cursor); }
	jni::ref<android::database::Cursor> runQueryOnBackgroundThread(jni::ref<java::lang::CharSequence> constraint) { return call_method<"runQueryOnBackgroundThread", jni::ref<android::database::Cursor>>(constraint); }
	jni::ref<android::widget::Filter> getFilter() { return call_method<"getFilter", jni::ref<android::widget::Filter>>(); }
	jni::ref<android::widget::FilterQueryProvider> getFilterQueryProvider() { return call_method<"getFilterQueryProvider", jni::ref<android::widget::FilterQueryProvider>>(); }
	void setFilterQueryProvider(jni::ref<android::widget::FilterQueryProvider> filterQueryProvider) { return call_method<"setFilterQueryProvider", void>(filterQueryProvider); }
	void changeCursor(jni::ref<android::database::Cursor> cursor) { return call_method<"changeCursor", void>(cursor); }
	jni::ref<android::database::Cursor> getCursor() { return call_method<"getCursor", jni::ref<android::database::Cursor>>(); }

protected:

	CursorTreeAdapter(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_WIDGET_CURSORTREEADAPTER
