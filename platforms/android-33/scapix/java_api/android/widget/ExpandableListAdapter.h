// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_WIDGET_EXPANDABLELISTADAPTER_FWD
#define SCAPIX_JAVA_API_ANDROID_WIDGET_EXPANDABLELISTADAPTER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::widget { class ExpandableListAdapter; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::widget::ExpandableListAdapter>
{
	static constexpr fixed_string class_name = "android/widget/ExpandableListAdapter";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_WIDGET_EXPANDABLELISTADAPTER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_WIDGET_EXPANDABLELISTADAPTER)
#define SCAPIX_JAVA_API_ANDROID_WIDGET_EXPANDABLELISTADAPTER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/database/DataSetObserver.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/android/view/ViewGroup.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::widget::ExpandableListAdapter : public jni::object_base<"android/widget/ExpandableListAdapter",
	java::lang::Object>
{
public:

	void registerDataSetObserver(jni::ref<android::database::DataSetObserver> p1) { return call_method<"registerDataSetObserver", void>(p1); }
	void unregisterDataSetObserver(jni::ref<android::database::DataSetObserver> p1) { return call_method<"unregisterDataSetObserver", void>(p1); }
	jint getGroupCount() { return call_method<"getGroupCount", jint>(); }
	jint getChildrenCount(jint p1) { return call_method<"getChildrenCount", jint>(p1); }
	jni::ref<java::lang::Object> getGroup(jint p1) { return call_method<"getGroup", jni::ref<java::lang::Object>>(p1); }
	jni::ref<java::lang::Object> getChild(jint p1, jint p2) { return call_method<"getChild", jni::ref<java::lang::Object>>(p1, p2); }
	jlong getGroupId(jint p1) { return call_method<"getGroupId", jlong>(p1); }
	jlong getChildId(jint p1, jint p2) { return call_method<"getChildId", jlong>(p1, p2); }
	jboolean hasStableIds() { return call_method<"hasStableIds", jboolean>(); }
	jni::ref<android::view::View> getGroupView(jint p1, jboolean p2, jni::ref<android::view::View> p3, jni::ref<android::view::ViewGroup> p4) { return call_method<"getGroupView", jni::ref<android::view::View>>(p1, p2, p3, p4); }
	jni::ref<android::view::View> getChildView(jint p1, jint p2, jboolean p3, jni::ref<android::view::View> p4, jni::ref<android::view::ViewGroup> p5) { return call_method<"getChildView", jni::ref<android::view::View>>(p1, p2, p3, p4, p5); }
	jboolean isChildSelectable(jint p1, jint p2) { return call_method<"isChildSelectable", jboolean>(p1, p2); }
	jboolean areAllItemsEnabled() { return call_method<"areAllItemsEnabled", jboolean>(); }
	jboolean isEmpty() { return call_method<"isEmpty", jboolean>(); }
	void onGroupExpanded(jint p1) { return call_method<"onGroupExpanded", void>(p1); }
	void onGroupCollapsed(jint p1) { return call_method<"onGroupCollapsed", void>(p1); }
	jlong getCombinedChildId(jlong p1, jlong p2) { return call_method<"getCombinedChildId", jlong>(p1, p2); }
	jlong getCombinedGroupId(jlong p1) { return call_method<"getCombinedGroupId", jlong>(p1); }

protected:

	ExpandableListAdapter(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_WIDGET_EXPANDABLELISTADAPTER
