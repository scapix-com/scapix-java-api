// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_TEXT_METHOD_METAKEYKEYLISTENER_FWD
#define SCAPIX_JAVA_API_ANDROID_TEXT_METHOD_METAKEYKEYLISTENER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::text::method { class MetaKeyKeyListener; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::text::method::MetaKeyKeyListener>
{
	static constexpr fixed_string class_name = "android/text/method/MetaKeyKeyListener";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEXT_METHOD_METAKEYKEYLISTENER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_TEXT_METHOD_METAKEYKEYLISTENER)
#define SCAPIX_JAVA_API_ANDROID_TEXT_METHOD_METAKEYKEYLISTENER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/text/Editable.h>
#include <scapix/java_api/android/text/Spannable.h>
#include <scapix/java_api/android/view/KeyEvent.h>
#include <scapix/java_api/android/view/View.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::text::method::MetaKeyKeyListener : public jni::object_base<"android/text/method/MetaKeyKeyListener",
	java::lang::Object>
{
public:

	static jint META_ALT_LOCKED() { return get_static_field<"META_ALT_LOCKED", jint>(); }
	static jint META_ALT_ON() { return get_static_field<"META_ALT_ON", jint>(); }
	static jint META_CAP_LOCKED() { return get_static_field<"META_CAP_LOCKED", jint>(); }
	static jint META_SHIFT_ON() { return get_static_field<"META_SHIFT_ON", jint>(); }
	static jint META_SYM_LOCKED() { return get_static_field<"META_SYM_LOCKED", jint>(); }
	static jint META_SYM_ON() { return get_static_field<"META_SYM_ON", jint>(); }

	static jni::ref<android::text::method::MetaKeyKeyListener> new_object() { return base_::new_object(); }
	static void resetMetaState(jni::ref<android::text::Spannable> text) { return call_static_method<"resetMetaState", void>(text); }
	static jint getMetaState(jni::ref<java::lang::CharSequence> text) { return call_static_method<"getMetaState", jint>(text); }
	static jint getMetaState(jni::ref<java::lang::CharSequence> text, jni::ref<android::view::KeyEvent> event) { return call_static_method<"getMetaState", jint>(text, event); }
	static jint getMetaState(jni::ref<java::lang::CharSequence> text, jint meta) { return call_static_method<"getMetaState", jint>(text, meta); }
	static jint getMetaState(jni::ref<java::lang::CharSequence> text, jint meta, jni::ref<android::view::KeyEvent> event) { return call_static_method<"getMetaState", jint>(text, meta, event); }
	static void adjustMetaAfterKeypress(jni::ref<android::text::Spannable> content) { return call_static_method<"adjustMetaAfterKeypress", void>(content); }
	static jboolean isMetaTracker(jni::ref<java::lang::CharSequence> text, jni::ref<java::lang::Object> what) { return call_static_method<"isMetaTracker", jboolean>(text, what); }
	static jboolean isSelectingMetaTracker(jni::ref<java::lang::CharSequence> text, jni::ref<java::lang::Object> what) { return call_static_method<"isSelectingMetaTracker", jboolean>(text, what); }
	jboolean onKeyDown(jni::ref<android::view::View> view, jni::ref<android::text::Editable> content, jint keyCode, jni::ref<android::view::KeyEvent> event) { return call_method<"onKeyDown", jboolean>(view, content, keyCode, event); }
	jboolean onKeyUp(jni::ref<android::view::View> view, jni::ref<android::text::Editable> content, jint keyCode, jni::ref<android::view::KeyEvent> event) { return call_method<"onKeyUp", jboolean>(view, content, keyCode, event); }
	void clearMetaKeyState(jni::ref<android::view::View> view, jni::ref<android::text::Editable> content, jint states) { return call_method<"clearMetaKeyState", void>(view, content, states); }
	static void clearMetaKeyState(jni::ref<android::text::Editable> content, jint states) { return call_static_method<"clearMetaKeyState", void>(content, states); }
	static jlong resetLockedMeta(jlong state) { return call_static_method<"resetLockedMeta", jlong>(state); }
	static jint getMetaState(jlong state) { return call_static_method<"getMetaState", jint>(state); }
	static jint getMetaState(jlong state, jint p2) { return call_static_method<"getMetaState", jint>(state, p2); }
	static jlong adjustMetaAfterKeypress(jlong state) { return call_static_method<"adjustMetaAfterKeypress", jlong>(state); }
	static jlong handleKeyDown(jlong state, jint p2, jni::ref<android::view::KeyEvent> keyCode) { return call_static_method<"handleKeyDown", jlong>(state, p2, keyCode); }
	static jlong handleKeyUp(jlong state, jint p2, jni::ref<android::view::KeyEvent> keyCode) { return call_static_method<"handleKeyUp", jlong>(state, p2, keyCode); }
	jlong clearMetaKeyState(jlong state, jint p2) { return call_method<"clearMetaKeyState", jlong>(state, p2); }

protected:

	MetaKeyKeyListener(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEXT_METHOD_METAKEYKEYLISTENER
