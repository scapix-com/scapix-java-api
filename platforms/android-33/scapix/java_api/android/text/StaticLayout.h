// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/text/Layout.h>

#ifndef SCAPIX_JAVA_API_ANDROID_TEXT_STATICLAYOUT_FWD
#define SCAPIX_JAVA_API_ANDROID_TEXT_STATICLAYOUT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::text { class StaticLayout; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::text::StaticLayout>
{
	static constexpr fixed_string class_name = "android/text/StaticLayout";
	using base_classes = std::tuple<scapix::java_api::android::text::Layout>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEXT_STATICLAYOUT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_TEXT_STATICLAYOUT)
#define SCAPIX_JAVA_API_ANDROID_TEXT_STATICLAYOUT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/text/Layout_Alignment.h>
#include <scapix/java_api/android/text/Layout_Directions.h>
#include <scapix/java_api/android/text/TextPaint.h>
#include <scapix/java_api/android/text/TextUtils_TruncateAt.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/android/text/StaticLayout_Builder.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::text::StaticLayout : public jni::object_base<"android/text/StaticLayout",
	android::text::Layout>
{
public:

	using Builder = StaticLayout_Builder;

	static jni::ref<android::text::StaticLayout> new_object(jni::ref<java::lang::CharSequence> source, jni::ref<android::text::TextPaint> paint, jint width, jni::ref<android::text::Layout_Alignment> align, jfloat spacingmult, jfloat spacingadd, jboolean includepad) { return base_::new_object(source, paint, width, align, spacingmult, spacingadd, includepad); }
	static jni::ref<android::text::StaticLayout> new_object(jni::ref<java::lang::CharSequence> source, jint bufstart, jint bufend, jni::ref<android::text::TextPaint> paint, jint outerwidth, jni::ref<android::text::Layout_Alignment> align, jfloat spacingmult, jfloat spacingadd, jboolean includepad) { return base_::new_object(source, bufstart, bufend, paint, outerwidth, align, spacingmult, spacingadd, includepad); }
	static jni::ref<android::text::StaticLayout> new_object(jni::ref<java::lang::CharSequence> source, jint bufstart, jint bufend, jni::ref<android::text::TextPaint> paint, jint outerwidth, jni::ref<android::text::Layout_Alignment> align, jfloat spacingmult, jfloat spacingadd, jboolean includepad, jni::ref<android::text::TextUtils_TruncateAt> ellipsize, jint ellipsizedWidth) { return base_::new_object(source, bufstart, bufend, paint, outerwidth, align, spacingmult, spacingadd, includepad, ellipsize, ellipsizedWidth); }
	jint getLineForVertical(jint vertical) { return call_method<"getLineForVertical", jint>(vertical); }
	jint getLineCount() { return call_method<"getLineCount", jint>(); }
	jint getLineTop(jint line) { return call_method<"getLineTop", jint>(line); }
	jint getLineDescent(jint line) { return call_method<"getLineDescent", jint>(line); }
	jint getLineStart(jint line) { return call_method<"getLineStart", jint>(line); }
	jint getParagraphDirection(jint line) { return call_method<"getParagraphDirection", jint>(line); }
	jboolean getLineContainsTab(jint line) { return call_method<"getLineContainsTab", jboolean>(line); }
	jni::ref<android::text::Layout_Directions> getLineDirections(jint line) { return call_method<"getLineDirections", jni::ref<android::text::Layout_Directions>>(line); }
	jint getTopPadding() { return call_method<"getTopPadding", jint>(); }
	jint getBottomPadding() { return call_method<"getBottomPadding", jint>(); }
	jint getEllipsisCount(jint line) { return call_method<"getEllipsisCount", jint>(line); }
	jint getEllipsisStart(jint line) { return call_method<"getEllipsisStart", jint>(line); }
	jint getEllipsizedWidth() { return call_method<"getEllipsizedWidth", jint>(); }
	jboolean isFallbackLineSpacingEnabled() { return call_method<"isFallbackLineSpacingEnabled", jboolean>(); }

protected:

	StaticLayout(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEXT_STATICLAYOUT
