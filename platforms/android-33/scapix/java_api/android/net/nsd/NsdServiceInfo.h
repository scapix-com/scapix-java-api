// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_NET_NSD_NSDSERVICEINFO_FWD
#define SCAPIX_JAVA_API_ANDROID_NET_NSD_NSDSERVICEINFO_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::net::nsd { class NsdServiceInfo; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::net::nsd::NsdServiceInfo>
{
	static constexpr fixed_string class_name = "android/net/nsd/NsdServiceInfo";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_NSD_NSDSERVICEINFO_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_NET_NSD_NSDSERVICEINFO)
#define SCAPIX_JAVA_API_ANDROID_NET_NSD_NSDSERVICEINFO

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/net/Network.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/net/InetAddress.h>
#include <scapix/java_api/java/util/Map.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::net::nsd::NsdServiceInfo : public jni::object_base<"android/net/nsd/NsdServiceInfo",
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }

	static jni::ref<android::net::nsd::NsdServiceInfo> new_object() { return base_::new_object(); }
	jni::ref<java::lang::String> getServiceName() { return call_method<"getServiceName", jni::ref<java::lang::String>>(); }
	void setServiceName(jni::ref<java::lang::String> s) { return call_method<"setServiceName", void>(s); }
	jni::ref<java::lang::String> getServiceType() { return call_method<"getServiceType", jni::ref<java::lang::String>>(); }
	void setServiceType(jni::ref<java::lang::String> s) { return call_method<"setServiceType", void>(s); }
	jni::ref<java::net::InetAddress> getHost() { return call_method<"getHost", jni::ref<java::net::InetAddress>>(); }
	void setHost(jni::ref<java::net::InetAddress> s) { return call_method<"setHost", void>(s); }
	jint getPort() { return call_method<"getPort", jint>(); }
	void setPort(jint p) { return call_method<"setPort", void>(p); }
	void setAttribute(jni::ref<java::lang::String> key, jni::ref<java::lang::String> value) { return call_method<"setAttribute", void>(key, value); }
	void removeAttribute(jni::ref<java::lang::String> key) { return call_method<"removeAttribute", void>(key); }
	jni::ref<java::util::Map> getAttributes() { return call_method<"getAttributes", jni::ref<java::util::Map>>(); }
	jni::ref<android::net::Network> getNetwork() { return call_method<"getNetwork", jni::ref<android::net::Network>>(); }
	void setNetwork(jni::ref<android::net::Network> network) { return call_method<"setNetwork", void>(network); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	void writeToParcel(jni::ref<android::os::Parcel> dest, jint flags) { return call_method<"writeToParcel", void>(dest, flags); }

protected:

	NsdServiceInfo(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_NSD_NSDSERVICEINFO
