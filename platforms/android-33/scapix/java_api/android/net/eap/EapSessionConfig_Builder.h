// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_NET_EAP_EAPSESSIONCONFIG_BUILDER_FWD
#define SCAPIX_JAVA_API_ANDROID_NET_EAP_EAPSESSIONCONFIG_BUILDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::net::eap { class EapSessionConfig_Builder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::net::eap::EapSessionConfig_Builder>
{
	static constexpr fixed_string class_name = "android/net/eap/EapSessionConfig$Builder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_EAP_EAPSESSIONCONFIG_BUILDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_NET_EAP_EAPSESSIONCONFIG_BUILDER)
#define SCAPIX_JAVA_API_ANDROID_NET_EAP_EAPSESSIONCONFIG_BUILDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/net/eap/EapSessionConfig.h>
#include <scapix/java_api/android/net/eap/EapSessionConfig_EapAkaOption.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/security/cert/X509Certificate.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::net::eap::EapSessionConfig_Builder : public jni::object_base<"android/net/eap/EapSessionConfig$Builder",
	java::lang::Object>
{
public:

	static jni::ref<android::net::eap::EapSessionConfig_Builder> new_object() { return base_::new_object(); }
	jni::ref<android::net::eap::EapSessionConfig_Builder> setEapIdentity(jni::ref<jni::array<jbyte>> eapIdentity) { return call_method<"setEapIdentity", jni::ref<android::net::eap::EapSessionConfig_Builder>>(eapIdentity); }
	jni::ref<android::net::eap::EapSessionConfig_Builder> setEapSimConfig(jint subId, jint apptype) { return call_method<"setEapSimConfig", jni::ref<android::net::eap::EapSessionConfig_Builder>>(subId, apptype); }
	jni::ref<android::net::eap::EapSessionConfig_Builder> setEapAkaConfig(jint subId, jint apptype) { return call_method<"setEapAkaConfig", jni::ref<android::net::eap::EapSessionConfig_Builder>>(subId, apptype); }
	jni::ref<android::net::eap::EapSessionConfig_Builder> setEapAkaConfig(jint subId, jint apptype, jni::ref<android::net::eap::EapSessionConfig_EapAkaOption> options) { return call_method<"setEapAkaConfig", jni::ref<android::net::eap::EapSessionConfig_Builder>>(subId, apptype, options); }
	jni::ref<android::net::eap::EapSessionConfig_Builder> setEapAkaPrimeConfig(jint subId, jint apptype, jni::ref<java::lang::String> networkName, jboolean allowMismatchedNetworkNames) { return call_method<"setEapAkaPrimeConfig", jni::ref<android::net::eap::EapSessionConfig_Builder>>(subId, apptype, networkName, allowMismatchedNetworkNames); }
	jni::ref<android::net::eap::EapSessionConfig_Builder> setEapMsChapV2Config(jni::ref<java::lang::String> username, jni::ref<java::lang::String> password) { return call_method<"setEapMsChapV2Config", jni::ref<android::net::eap::EapSessionConfig_Builder>>(username, password); }
	jni::ref<android::net::eap::EapSessionConfig_Builder> setEapTtlsConfig(jni::ref<java::security::cert::X509Certificate> serverCaCert, jni::ref<android::net::eap::EapSessionConfig> innerEapSessionConfig) { return call_method<"setEapTtlsConfig", jni::ref<android::net::eap::EapSessionConfig_Builder>>(serverCaCert, innerEapSessionConfig); }
	jni::ref<android::net::eap::EapSessionConfig> build() { return call_method<"build", jni::ref<android::net::eap::EapSessionConfig>>(); }

protected:

	EapSessionConfig_Builder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_EAP_EAPSESSIONCONFIG_BUILDER
