// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_NET_SSL_SSLSOCKETS_FWD
#define SCAPIX_JAVA_API_ANDROID_NET_SSL_SSLSOCKETS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::net::ssl { class SSLSockets; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::net::ssl::SSLSockets>
{
	static constexpr fixed_string class_name = "android/net/ssl/SSLSockets";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_SSL_SSLSOCKETS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_NET_SSL_SSLSOCKETS)
#define SCAPIX_JAVA_API_ANDROID_NET_SSL_SSLSOCKETS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/javax/net/ssl/SSLSocket.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::net::ssl::SSLSockets : public jni::object_base<"android/net/ssl/SSLSockets",
	java::lang::Object>
{
public:

	static jboolean isSupportedSocket(jni::ref<javax::net::ssl::SSLSocket> socket) { return call_static_method<"isSupportedSocket", jboolean>(socket); }
	static void setUseSessionTickets(jni::ref<javax::net::ssl::SSLSocket> socket, jboolean useSessionTickets) { return call_static_method<"setUseSessionTickets", void>(socket, useSessionTickets); }
	static jni::ref<jni::array<jbyte>> exportKeyingMaterial(jni::ref<javax::net::ssl::SSLSocket> socket, jni::ref<java::lang::String> label, jni::ref<jni::array<jbyte>> context, jint length) { return call_static_method<"exportKeyingMaterial", jni::ref<jni::array<jbyte>>>(socket, label, context, length); }

protected:

	SSLSockets(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_SSL_SSLSOCKETS
