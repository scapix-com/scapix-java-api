// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_NET_VCN_VCNMANAGER_FWD
#define SCAPIX_JAVA_API_ANDROID_NET_VCN_VCNMANAGER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::net::vcn { class VcnManager; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::net::vcn::VcnManager>
{
	static constexpr fixed_string class_name = "android/net/vcn/VcnManager";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_VCN_VCNMANAGER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_NET_VCN_VCNMANAGER)
#define SCAPIX_JAVA_API_ANDROID_NET_VCN_VCNMANAGER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/net/vcn/VcnConfig.h>
#include <scapix/java_api/android/net/vcn/VcnManager_VcnStatusCallback.h>
#include <scapix/java_api/android/os/ParcelUuid.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/java/util/concurrent/Executor.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::net::vcn::VcnManager : public jni::object_base<"android/net/vcn/VcnManager",
	java::lang::Object>
{
public:

	using VcnStatusCallback = VcnManager_VcnStatusCallback;

	static jint VCN_ERROR_CODE_CONFIG_ERROR() { return get_static_field<"VCN_ERROR_CODE_CONFIG_ERROR", jint>(); }
	static jint VCN_ERROR_CODE_INTERNAL_ERROR() { return get_static_field<"VCN_ERROR_CODE_INTERNAL_ERROR", jint>(); }
	static jint VCN_ERROR_CODE_NETWORK_ERROR() { return get_static_field<"VCN_ERROR_CODE_NETWORK_ERROR", jint>(); }
	static jint VCN_STATUS_CODE_ACTIVE() { return get_static_field<"VCN_STATUS_CODE_ACTIVE", jint>(); }
	static jint VCN_STATUS_CODE_INACTIVE() { return get_static_field<"VCN_STATUS_CODE_INACTIVE", jint>(); }
	static jint VCN_STATUS_CODE_NOT_CONFIGURED() { return get_static_field<"VCN_STATUS_CODE_NOT_CONFIGURED", jint>(); }
	static jint VCN_STATUS_CODE_SAFE_MODE() { return get_static_field<"VCN_STATUS_CODE_SAFE_MODE", jint>(); }

	void setVcnConfig(jni::ref<android::os::ParcelUuid> subscriptionGroup, jni::ref<android::net::vcn::VcnConfig> config) { return call_method<"setVcnConfig", void>(subscriptionGroup, config); }
	void clearVcnConfig(jni::ref<android::os::ParcelUuid> subscriptionGroup) { return call_method<"clearVcnConfig", void>(subscriptionGroup); }
	jni::ref<java::util::List> getConfiguredSubscriptionGroups() { return call_method<"getConfiguredSubscriptionGroups", jni::ref<java::util::List>>(); }
	void registerVcnStatusCallback(jni::ref<android::os::ParcelUuid> subscriptionGroup, jni::ref<java::util::concurrent::Executor> executor, jni::ref<android::net::vcn::VcnManager_VcnStatusCallback> callback) { return call_method<"registerVcnStatusCallback", void>(subscriptionGroup, executor, callback); }
	void unregisterVcnStatusCallback(jni::ref<android::net::vcn::VcnManager_VcnStatusCallback> callback) { return call_method<"unregisterVcnStatusCallback", void>(callback); }

protected:

	VcnManager(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_VCN_VCNMANAGER
