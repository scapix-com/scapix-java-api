// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_NET_VCN_VCNUNDERLYINGNETWORKTEMPLATE_FWD
#define SCAPIX_JAVA_API_ANDROID_NET_VCN_VCNUNDERLYINGNETWORKTEMPLATE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::net::vcn { class VcnUnderlyingNetworkTemplate; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::net::vcn::VcnUnderlyingNetworkTemplate>
{
	static constexpr fixed_string class_name = "android/net/vcn/VcnUnderlyingNetworkTemplate";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_VCN_VCNUNDERLYINGNETWORKTEMPLATE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_NET_VCN_VCNUNDERLYINGNETWORKTEMPLATE)
#define SCAPIX_JAVA_API_ANDROID_NET_VCN_VCNUNDERLYINGNETWORKTEMPLATE

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::net::vcn::VcnUnderlyingNetworkTemplate : public jni::object_base<"android/net/vcn/VcnUnderlyingNetworkTemplate",
	java::lang::Object>
{
public:

	static jint MATCH_ANY() { return get_static_field<"MATCH_ANY", jint>(); }
	static jint MATCH_FORBIDDEN() { return get_static_field<"MATCH_FORBIDDEN", jint>(); }
	static jint MATCH_REQUIRED() { return get_static_field<"MATCH_REQUIRED", jint>(); }

	jint hashCode() { return call_method<"hashCode", jint>(); }
	jboolean equals(jni::ref<java::lang::Object> other) { return call_method<"equals", jboolean>(other); }
	jint getMetered() { return call_method<"getMetered", jint>(); }
	jint getMinEntryUpstreamBandwidthKbps() { return call_method<"getMinEntryUpstreamBandwidthKbps", jint>(); }
	jint getMinExitUpstreamBandwidthKbps() { return call_method<"getMinExitUpstreamBandwidthKbps", jint>(); }
	jint getMinEntryDownstreamBandwidthKbps() { return call_method<"getMinEntryDownstreamBandwidthKbps", jint>(); }
	jint getMinExitDownstreamBandwidthKbps() { return call_method<"getMinExitDownstreamBandwidthKbps", jint>(); }

protected:

	VcnUnderlyingNetworkTemplate(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_VCN_VCNUNDERLYINGNETWORKTEMPLATE
