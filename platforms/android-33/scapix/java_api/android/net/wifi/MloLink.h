// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_NET_WIFI_MLOLINK_FWD
#define SCAPIX_JAVA_API_ANDROID_NET_WIFI_MLOLINK_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::net::wifi { class MloLink; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::net::wifi::MloLink>
{
	static constexpr fixed_string class_name = "android/net/wifi/MloLink";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_WIFI_MLOLINK_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_NET_WIFI_MLOLINK)
#define SCAPIX_JAVA_API_ANDROID_NET_WIFI_MLOLINK

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/net/MacAddress.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::net::wifi::MloLink : public jni::object_base<"android/net/wifi/MloLink",
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }
	static jint INVALID_MLO_LINK_ID() { return get_static_field<"INVALID_MLO_LINK_ID", jint>(); }
	static jint MLO_LINK_STATE_ACTIVE() { return get_static_field<"MLO_LINK_STATE_ACTIVE", jint>(); }
	static jint MLO_LINK_STATE_IDLE() { return get_static_field<"MLO_LINK_STATE_IDLE", jint>(); }
	static jint MLO_LINK_STATE_INVALID() { return get_static_field<"MLO_LINK_STATE_INVALID", jint>(); }
	static jint MLO_LINK_STATE_UNASSOCIATED() { return get_static_field<"MLO_LINK_STATE_UNASSOCIATED", jint>(); }

	static jni::ref<android::net::wifi::MloLink> new_object() { return base_::new_object(); }
	jint getBand() { return call_method<"getBand", jint>(); }
	jint getChannel() { return call_method<"getChannel", jint>(); }
	jint getLinkId() { return call_method<"getLinkId", jint>(); }
	jint getState() { return call_method<"getState", jint>(); }
	jni::ref<android::net::MacAddress> getApMacAddress() { return call_method<"getApMacAddress", jni::ref<android::net::MacAddress>>(); }
	jni::ref<android::net::MacAddress> getStaMacAddress() { return call_method<"getStaMacAddress", jni::ref<android::net::MacAddress>>(); }
	jboolean equals(jni::ref<java::lang::Object> o) { return call_method<"equals", jboolean>(o); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	void writeToParcel(jni::ref<android::os::Parcel> dest, jint flags) { return call_method<"writeToParcel", void>(dest, flags); }

protected:

	MloLink(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_WIFI_MLOLINK
