// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_NET_WIFI_AWARE_WIFIAWAREMANAGER_FWD
#define SCAPIX_JAVA_API_ANDROID_NET_WIFI_AWARE_WIFIAWAREMANAGER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::net::wifi::aware { class WifiAwareManager; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::net::wifi::aware::WifiAwareManager>
{
	static constexpr fixed_string class_name = "android/net/wifi/aware/WifiAwareManager";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_WIFI_AWARE_WIFIAWAREMANAGER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_NET_WIFI_AWARE_WIFIAWAREMANAGER)
#define SCAPIX_JAVA_API_ANDROID_NET_WIFI_AWARE_WIFIAWAREMANAGER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/net/wifi/aware/AttachCallback.h>
#include <scapix/java_api/android/net/wifi/aware/AwareResources.h>
#include <scapix/java_api/android/net/wifi/aware/Characteristics.h>
#include <scapix/java_api/android/net/wifi/aware/IdentityChangedListener.h>
#include <scapix/java_api/android/os/Handler.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::net::wifi::aware::WifiAwareManager : public jni::object_base<"android/net/wifi/aware/WifiAwareManager",
	java::lang::Object>
{
public:

	static jni::ref<java::lang::String> ACTION_WIFI_AWARE_RESOURCE_CHANGED() { return get_static_field<"ACTION_WIFI_AWARE_RESOURCE_CHANGED", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ACTION_WIFI_AWARE_STATE_CHANGED() { return get_static_field<"ACTION_WIFI_AWARE_STATE_CHANGED", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> EXTRA_AWARE_RESOURCES() { return get_static_field<"EXTRA_AWARE_RESOURCES", jni::ref<java::lang::String>>(); }
	static jint WIFI_AWARE_DATA_PATH_ROLE_INITIATOR() { return get_static_field<"WIFI_AWARE_DATA_PATH_ROLE_INITIATOR", jint>(); }
	static jint WIFI_AWARE_DATA_PATH_ROLE_RESPONDER() { return get_static_field<"WIFI_AWARE_DATA_PATH_ROLE_RESPONDER", jint>(); }
	static jint WIFI_AWARE_DISCOVERY_LOST_REASON_PEER_NOT_VISIBLE() { return get_static_field<"WIFI_AWARE_DISCOVERY_LOST_REASON_PEER_NOT_VISIBLE", jint>(); }
	static jint WIFI_AWARE_DISCOVERY_LOST_REASON_UNKNOWN() { return get_static_field<"WIFI_AWARE_DISCOVERY_LOST_REASON_UNKNOWN", jint>(); }

	jboolean isAvailable() { return call_method<"isAvailable", jboolean>(); }
	jboolean isDeviceAttached() { return call_method<"isDeviceAttached", jboolean>(); }
	jboolean isSetChannelOnDataPathSupported() { return call_method<"isSetChannelOnDataPathSupported", jboolean>(); }
	jboolean isInstantCommunicationModeEnabled() { return call_method<"isInstantCommunicationModeEnabled", jboolean>(); }
	jni::ref<android::net::wifi::aware::Characteristics> getCharacteristics() { return call_method<"getCharacteristics", jni::ref<android::net::wifi::aware::Characteristics>>(); }
	jni::ref<android::net::wifi::aware::AwareResources> getAvailableAwareResources() { return call_method<"getAvailableAwareResources", jni::ref<android::net::wifi::aware::AwareResources>>(); }
	void attach(jni::ref<android::net::wifi::aware::AttachCallback> attachCallback, jni::ref<android::os::Handler> handler) { return call_method<"attach", void>(attachCallback, handler); }
	void attach(jni::ref<android::net::wifi::aware::AttachCallback> attachCallback, jni::ref<android::net::wifi::aware::IdentityChangedListener> identityChangedListener, jni::ref<android::os::Handler> handler) { return call_method<"attach", void>(attachCallback, identityChangedListener, handler); }

protected:

	WifiAwareManager(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_WIFI_AWARE_WIFIAWAREMANAGER
