// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_NET_WIFI_WIFINETWORKSUGGESTION_BUILDER_FWD
#define SCAPIX_JAVA_API_ANDROID_NET_WIFI_WIFINETWORKSUGGESTION_BUILDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::net::wifi { class WifiNetworkSuggestion_Builder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::net::wifi::WifiNetworkSuggestion_Builder>
{
	static constexpr fixed_string class_name = "android/net/wifi/WifiNetworkSuggestion$Builder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_WIFI_WIFINETWORKSUGGESTION_BUILDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_NET_WIFI_WIFINETWORKSUGGESTION_BUILDER)
#define SCAPIX_JAVA_API_ANDROID_NET_WIFI_WIFINETWORKSUGGESTION_BUILDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/net/MacAddress.h>
#include <scapix/java_api/android/net/wifi/WifiEnterpriseConfig.h>
#include <scapix/java_api/android/net/wifi/WifiNetworkSuggestion.h>
#include <scapix/java_api/android/net/wifi/WifiSsid.h>
#include <scapix/java_api/android/net/wifi/hotspot2/PasspointConfiguration.h>
#include <scapix/java_api/android/os/ParcelUuid.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::net::wifi::WifiNetworkSuggestion_Builder : public jni::object_base<"android/net/wifi/WifiNetworkSuggestion$Builder",
	java::lang::Object>
{
public:

	static jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder> new_object() { return base_::new_object(); }
	jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder> setSsid(jni::ref<java::lang::String> ssid) { return call_method<"setSsid", jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder>>(ssid); }
	jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder> setWifiSsid(jni::ref<android::net::wifi::WifiSsid> wifiSsid) { return call_method<"setWifiSsid", jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder>>(wifiSsid); }
	jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder> setBssid(jni::ref<android::net::MacAddress> bssid) { return call_method<"setBssid", jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder>>(bssid); }
	jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder> setIsEnhancedOpen(jboolean isEnhancedOpen) { return call_method<"setIsEnhancedOpen", jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder>>(isEnhancedOpen); }
	jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder> setWpa2Passphrase(jni::ref<java::lang::String> passphrase) { return call_method<"setWpa2Passphrase", jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder>>(passphrase); }
	jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder> setWpa3Passphrase(jni::ref<java::lang::String> passphrase) { return call_method<"setWpa3Passphrase", jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder>>(passphrase); }
	jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder> setWpa2EnterpriseConfig(jni::ref<android::net::wifi::WifiEnterpriseConfig> enterpriseConfig) { return call_method<"setWpa2EnterpriseConfig", jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder>>(enterpriseConfig); }
	jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder> setWpa3EnterpriseConfig(jni::ref<android::net::wifi::WifiEnterpriseConfig> enterpriseConfig) { return call_method<"setWpa3EnterpriseConfig", jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder>>(enterpriseConfig); }
	jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder> setWpa3EnterpriseStandardModeConfig(jni::ref<android::net::wifi::WifiEnterpriseConfig> enterpriseConfig) { return call_method<"setWpa3EnterpriseStandardModeConfig", jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder>>(enterpriseConfig); }
	jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder> setWpa3Enterprise192BitModeConfig(jni::ref<android::net::wifi::WifiEnterpriseConfig> enterpriseConfig) { return call_method<"setWpa3Enterprise192BitModeConfig", jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder>>(enterpriseConfig); }
	jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder> setPasspointConfig(jni::ref<android::net::wifi::hotspot2::PasspointConfiguration> passpointConfig) { return call_method<"setPasspointConfig", jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder>>(passpointConfig); }
	jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder> setSubscriptionId(jint subscriptionId) { return call_method<"setSubscriptionId", jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder>>(subscriptionId); }
	jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder> setSubscriptionGroup(jni::ref<android::os::ParcelUuid> groupUuid) { return call_method<"setSubscriptionGroup", jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder>>(groupUuid); }
	jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder> setPriorityGroup(jint priorityGroup) { return call_method<"setPriorityGroup", jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder>>(priorityGroup); }
	jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder> setWapiPassphrase(jni::ref<java::lang::String> passphrase) { return call_method<"setWapiPassphrase", jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder>>(passphrase); }
	jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder> setWapiEnterpriseConfig(jni::ref<android::net::wifi::WifiEnterpriseConfig> enterpriseConfig) { return call_method<"setWapiEnterpriseConfig", jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder>>(enterpriseConfig); }
	jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder> setIsHiddenSsid(jboolean isHiddenSsid) { return call_method<"setIsHiddenSsid", jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder>>(isHiddenSsid); }
	jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder> setMacRandomizationSetting(jint macRandomizationSetting) { return call_method<"setMacRandomizationSetting", jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder>>(macRandomizationSetting); }
	jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder> setIsAppInteractionRequired(jboolean isAppInteractionRequired) { return call_method<"setIsAppInteractionRequired", jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder>>(isAppInteractionRequired); }
	jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder> setIsUserInteractionRequired(jboolean isUserInteractionRequired) { return call_method<"setIsUserInteractionRequired", jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder>>(isUserInteractionRequired); }
	jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder> setPriority(jint priority) { return call_method<"setPriority", jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder>>(priority); }
	jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder> setIsMetered(jboolean isMetered) { return call_method<"setIsMetered", jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder>>(isMetered); }
	jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder> setCredentialSharedWithUser(jboolean isShared) { return call_method<"setCredentialSharedWithUser", jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder>>(isShared); }
	jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder> setIsInitialAutojoinEnabled(jboolean enabled) { return call_method<"setIsInitialAutojoinEnabled", jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder>>(enabled); }
	jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder> setUntrusted(jboolean isUntrusted) { return call_method<"setUntrusted", jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder>>(isUntrusted); }
	jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder> setRestricted(jboolean isRestricted) { return call_method<"setRestricted", jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder>>(isRestricted); }
	jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder> setCarrierMerged(jboolean isCarrierMerged) { return call_method<"setCarrierMerged", jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder>>(isCarrierMerged); }
	jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder> setIsWpa3SaeH2eOnlyModeEnabled(jboolean enable) { return call_method<"setIsWpa3SaeH2eOnlyModeEnabled", jni::ref<android::net::wifi::WifiNetworkSuggestion_Builder>>(enable); }
	jni::ref<android::net::wifi::WifiNetworkSuggestion> build() { return call_method<"build", jni::ref<android::net::wifi::WifiNetworkSuggestion>>(); }

protected:

	WifiNetworkSuggestion_Builder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_WIFI_WIFINETWORKSUGGESTION_BUILDER
