// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_BLUETOOTH_LE_SCANCALLBACK_FWD
#define SCAPIX_JAVA_API_ANDROID_BLUETOOTH_LE_SCANCALLBACK_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::bluetooth::le { class ScanCallback; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::bluetooth::le::ScanCallback>
{
	static constexpr fixed_string class_name = "android/bluetooth/le/ScanCallback";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_BLUETOOTH_LE_SCANCALLBACK_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_BLUETOOTH_LE_SCANCALLBACK)
#define SCAPIX_JAVA_API_ANDROID_BLUETOOTH_LE_SCANCALLBACK

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/bluetooth/le/ScanResult.h>
#include <scapix/java_api/java/util/List.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::bluetooth::le::ScanCallback : public jni::object_base<"android/bluetooth/le/ScanCallback",
	java::lang::Object>
{
public:

	static jint SCAN_FAILED_ALREADY_STARTED() { return get_static_field<"SCAN_FAILED_ALREADY_STARTED", jint>(); }
	static jint SCAN_FAILED_APPLICATION_REGISTRATION_FAILED() { return get_static_field<"SCAN_FAILED_APPLICATION_REGISTRATION_FAILED", jint>(); }
	static jint SCAN_FAILED_FEATURE_UNSUPPORTED() { return get_static_field<"SCAN_FAILED_FEATURE_UNSUPPORTED", jint>(); }
	static jint SCAN_FAILED_INTERNAL_ERROR() { return get_static_field<"SCAN_FAILED_INTERNAL_ERROR", jint>(); }
	static jint SCAN_FAILED_OUT_OF_HARDWARE_RESOURCES() { return get_static_field<"SCAN_FAILED_OUT_OF_HARDWARE_RESOURCES", jint>(); }
	static jint SCAN_FAILED_SCANNING_TOO_FREQUENTLY() { return get_static_field<"SCAN_FAILED_SCANNING_TOO_FREQUENTLY", jint>(); }

	static jni::ref<android::bluetooth::le::ScanCallback> new_object() { return base_::new_object(); }
	void onScanResult(jint callbackType, jni::ref<android::bluetooth::le::ScanResult> result) { return call_method<"onScanResult", void>(callbackType, result); }
	void onBatchScanResults(jni::ref<java::util::List> results) { return call_method<"onBatchScanResults", void>(results); }
	void onScanFailed(jint errorCode) { return call_method<"onScanFailed", void>(errorCode); }

protected:

	ScanCallback(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_BLUETOOTH_LE_SCANCALLBACK
