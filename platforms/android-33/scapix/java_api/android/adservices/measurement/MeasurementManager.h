// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_ADSERVICES_MEASUREMENT_MEASUREMENTMANAGER_FWD
#define SCAPIX_JAVA_API_ANDROID_ADSERVICES_MEASUREMENT_MEASUREMENTMANAGER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::adservices::measurement { class MeasurementManager; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::adservices::measurement::MeasurementManager>
{
	static constexpr fixed_string class_name = "android/adservices/measurement/MeasurementManager";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ADSERVICES_MEASUREMENT_MEASUREMENTMANAGER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_ADSERVICES_MEASUREMENT_MEASUREMENTMANAGER)
#define SCAPIX_JAVA_API_ANDROID_ADSERVICES_MEASUREMENT_MEASUREMENTMANAGER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/adservices/measurement/DeletionRequest.h>
#include <scapix/java_api/android/adservices/measurement/WebSourceRegistrationRequest.h>
#include <scapix/java_api/android/adservices/measurement/WebTriggerRegistrationRequest.h>
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/android/os/OutcomeReceiver.h>
#include <scapix/java_api/android/view/InputEvent.h>
#include <scapix/java_api/java/util/concurrent/Executor.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::adservices::measurement::MeasurementManager : public jni::object_base<"android/adservices/measurement/MeasurementManager",
	java::lang::Object>
{
public:

	static jint MEASUREMENT_API_STATE_DISABLED() { return get_static_field<"MEASUREMENT_API_STATE_DISABLED", jint>(); }
	static jint MEASUREMENT_API_STATE_ENABLED() { return get_static_field<"MEASUREMENT_API_STATE_ENABLED", jint>(); }

	void registerSource(jni::ref<android::net::Uri> attributionSource, jni::ref<android::view::InputEvent> inputEvent, jni::ref<java::util::concurrent::Executor> executor, jni::ref<android::os::OutcomeReceiver> callback) { return call_method<"registerSource", void>(attributionSource, inputEvent, executor, callback); }
	void registerWebSource(jni::ref<android::adservices::measurement::WebSourceRegistrationRequest> request, jni::ref<java::util::concurrent::Executor> executor, jni::ref<android::os::OutcomeReceiver> callback) { return call_method<"registerWebSource", void>(request, executor, callback); }
	void registerWebTrigger(jni::ref<android::adservices::measurement::WebTriggerRegistrationRequest> request, jni::ref<java::util::concurrent::Executor> executor, jni::ref<android::os::OutcomeReceiver> callback) { return call_method<"registerWebTrigger", void>(request, executor, callback); }
	void registerTrigger(jni::ref<android::net::Uri> trigger, jni::ref<java::util::concurrent::Executor> executor, jni::ref<android::os::OutcomeReceiver> callback) { return call_method<"registerTrigger", void>(trigger, executor, callback); }
	void deleteRegistrations(jni::ref<android::adservices::measurement::DeletionRequest> deletionRequest, jni::ref<java::util::concurrent::Executor> executor, jni::ref<android::os::OutcomeReceiver> callback) { return call_method<"deleteRegistrations", void>(deletionRequest, executor, callback); }
	void getMeasurementApiStatus(jni::ref<java::util::concurrent::Executor> executor, jni::ref<android::os::OutcomeReceiver> callback) { return call_method<"getMeasurementApiStatus", void>(executor, callback); }

protected:

	MeasurementManager(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ADSERVICES_MEASUREMENT_MEASUREMENTMANAGER
