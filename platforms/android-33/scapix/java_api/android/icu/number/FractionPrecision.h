// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/icu/number/Precision.h>

#ifndef SCAPIX_JAVA_API_ANDROID_ICU_NUMBER_FRACTIONPRECISION_FWD
#define SCAPIX_JAVA_API_ANDROID_ICU_NUMBER_FRACTIONPRECISION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::icu::number { class FractionPrecision; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::icu::number::FractionPrecision>
{
	static constexpr fixed_string class_name = "android/icu/number/FractionPrecision";
	using base_classes = std::tuple<scapix::java_api::android::icu::number::Precision>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_NUMBER_FRACTIONPRECISION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_ICU_NUMBER_FRACTIONPRECISION)
#define SCAPIX_JAVA_API_ANDROID_ICU_NUMBER_FRACTIONPRECISION

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::icu::number::FractionPrecision : public jni::object_base<"android/icu/number/FractionPrecision",
	android::icu::number::Precision>
{
public:

	jni::ref<android::icu::number::Precision> withMinDigits(jint minSignificantDigits) { return call_method<"withMinDigits", jni::ref<android::icu::number::Precision>>(minSignificantDigits); }
	jni::ref<android::icu::number::Precision> withMaxDigits(jint maxSignificantDigits) { return call_method<"withMaxDigits", jni::ref<android::icu::number::Precision>>(maxSignificantDigits); }

protected:

	FractionPrecision(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_NUMBER_FRACTIONPRECISION
