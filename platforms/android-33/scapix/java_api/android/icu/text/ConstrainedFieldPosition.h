// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_ICU_TEXT_CONSTRAINEDFIELDPOSITION_FWD
#define SCAPIX_JAVA_API_ANDROID_ICU_TEXT_CONSTRAINEDFIELDPOSITION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::icu::text { class ConstrainedFieldPosition; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::icu::text::ConstrainedFieldPosition>
{
	static constexpr fixed_string class_name = "android/icu/text/ConstrainedFieldPosition";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_TEXT_CONSTRAINEDFIELDPOSITION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_ICU_TEXT_CONSTRAINEDFIELDPOSITION)
#define SCAPIX_JAVA_API_ANDROID_ICU_TEXT_CONSTRAINEDFIELDPOSITION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/text/Format_Field.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::icu::text::ConstrainedFieldPosition : public jni::object_base<"android/icu/text/ConstrainedFieldPosition",
	java::lang::Object>
{
public:

	static jni::ref<android::icu::text::ConstrainedFieldPosition> new_object() { return base_::new_object(); }
	void reset() { return call_method<"reset", void>(); }
	void constrainField(jni::ref<java::text::Format_Field> field) { return call_method<"constrainField", void>(field); }
	void constrainClass(jni::ref<java::lang::Class> classConstraint) { return call_method<"constrainClass", void>(classConstraint); }
	jni::ref<java::text::Format_Field> getField() { return call_method<"getField", jni::ref<java::text::Format_Field>>(); }
	jint getStart() { return call_method<"getStart", jint>(); }
	jint getLimit() { return call_method<"getLimit", jint>(); }
	jni::ref<java::lang::Object> getFieldValue() { return call_method<"getFieldValue", jni::ref<java::lang::Object>>(); }
	jlong getInt64IterationContext() { return call_method<"getInt64IterationContext", jlong>(); }
	void setInt64IterationContext(jlong context) { return call_method<"setInt64IterationContext", void>(context); }
	void setState(jni::ref<java::text::Format_Field> field, jni::ref<java::lang::Object> value, jint start, jint limit) { return call_method<"setState", void>(field, value, start, limit); }
	jboolean matchesField(jni::ref<java::text::Format_Field> field, jni::ref<java::lang::Object> fieldValue) { return call_method<"matchesField", jboolean>(field, fieldValue); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	ConstrainedFieldPosition(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_TEXT_CONSTRAINEDFIELDPOSITION
