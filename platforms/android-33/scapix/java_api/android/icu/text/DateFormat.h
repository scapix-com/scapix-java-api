// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/icu/text/UFormat.h>

#ifndef SCAPIX_JAVA_API_ANDROID_ICU_TEXT_DATEFORMAT_FWD
#define SCAPIX_JAVA_API_ANDROID_ICU_TEXT_DATEFORMAT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::icu::text { class DateFormat; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::icu::text::DateFormat>
{
	static constexpr fixed_string class_name = "android/icu/text/DateFormat";
	using base_classes = std::tuple<scapix::java_api::android::icu::text::UFormat>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_TEXT_DATEFORMAT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_ICU_TEXT_DATEFORMAT)
#define SCAPIX_JAVA_API_ANDROID_ICU_TEXT_DATEFORMAT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/icu/text/DateFormat_BooleanAttribute.h>
#include <scapix/java_api/android/icu/text/DisplayContext.h>
#include <scapix/java_api/android/icu/text/DisplayContext_Type.h>
#include <scapix/java_api/android/icu/text/NumberFormat.h>
#include <scapix/java_api/android/icu/util/Calendar.h>
#include <scapix/java_api/android/icu/util/TimeZone.h>
#include <scapix/java_api/android/icu/util/ULocale.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/StringBuffer.h>
#include <scapix/java_api/java/text/FieldPosition.h>
#include <scapix/java_api/java/text/ParsePosition.h>
#include <scapix/java_api/java/util/Date.h>
#include <scapix/java_api/java/util/Locale.h>
#include <scapix/java_api/android/icu/text/DateFormat_HourCycle.h>
#include <scapix/java_api/android/icu/text/DateFormat_Field.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::icu::text::DateFormat : public jni::object_base<"android/icu/text/DateFormat",
	android::icu::text::UFormat>
{
public:

	using HourCycle = DateFormat_HourCycle;
	using Field = DateFormat_Field;
	using BooleanAttribute = DateFormat_BooleanAttribute;

	static jni::ref<java::lang::String> ABBR_GENERIC_TZ() { return get_static_field<"ABBR_GENERIC_TZ", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ABBR_MONTH() { return get_static_field<"ABBR_MONTH", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ABBR_MONTH_DAY() { return get_static_field<"ABBR_MONTH_DAY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ABBR_MONTH_WEEKDAY_DAY() { return get_static_field<"ABBR_MONTH_WEEKDAY_DAY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ABBR_QUARTER() { return get_static_field<"ABBR_QUARTER", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ABBR_SPECIFIC_TZ() { return get_static_field<"ABBR_SPECIFIC_TZ", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ABBR_UTC_TZ() { return get_static_field<"ABBR_UTC_TZ", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ABBR_WEEKDAY() { return get_static_field<"ABBR_WEEKDAY", jni::ref<java::lang::String>>(); }
	static jint AM_PM_FIELD() { return get_static_field<"AM_PM_FIELD", jint>(); }
	static jint AM_PM_MIDNIGHT_NOON_FIELD() { return get_static_field<"AM_PM_MIDNIGHT_NOON_FIELD", jint>(); }
	static jint DATE_FIELD() { return get_static_field<"DATE_FIELD", jint>(); }
	static jni::ref<java::lang::String> DAY() { return get_static_field<"DAY", jni::ref<java::lang::String>>(); }
	static jint DAY_OF_WEEK_FIELD() { return get_static_field<"DAY_OF_WEEK_FIELD", jint>(); }
	static jint DAY_OF_WEEK_IN_MONTH_FIELD() { return get_static_field<"DAY_OF_WEEK_IN_MONTH_FIELD", jint>(); }
	static jint DAY_OF_YEAR_FIELD() { return get_static_field<"DAY_OF_YEAR_FIELD", jint>(); }
	static jint DEFAULT() { return get_static_field<"DEFAULT", jint>(); }
	static jint DOW_LOCAL_FIELD() { return get_static_field<"DOW_LOCAL_FIELD", jint>(); }
	static jint ERA_FIELD() { return get_static_field<"ERA_FIELD", jint>(); }
	static jint EXTENDED_YEAR_FIELD() { return get_static_field<"EXTENDED_YEAR_FIELD", jint>(); }
	static jint FLEXIBLE_DAY_PERIOD_FIELD() { return get_static_field<"FLEXIBLE_DAY_PERIOD_FIELD", jint>(); }
	static jint FRACTIONAL_SECOND_FIELD() { return get_static_field<"FRACTIONAL_SECOND_FIELD", jint>(); }
	static jint FULL() { return get_static_field<"FULL", jint>(); }
	static jni::ref<java::lang::String> GENERIC_TZ() { return get_static_field<"GENERIC_TZ", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> HOUR() { return get_static_field<"HOUR", jni::ref<java::lang::String>>(); }
	static jint HOUR0_FIELD() { return get_static_field<"HOUR0_FIELD", jint>(); }
	static jint HOUR1_FIELD() { return get_static_field<"HOUR1_FIELD", jint>(); }
	static jni::ref<java::lang::String> HOUR24() { return get_static_field<"HOUR24", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> HOUR24_MINUTE() { return get_static_field<"HOUR24_MINUTE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> HOUR24_MINUTE_SECOND() { return get_static_field<"HOUR24_MINUTE_SECOND", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> HOUR_MINUTE() { return get_static_field<"HOUR_MINUTE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> HOUR_MINUTE_SECOND() { return get_static_field<"HOUR_MINUTE_SECOND", jni::ref<java::lang::String>>(); }
	static jint HOUR_OF_DAY0_FIELD() { return get_static_field<"HOUR_OF_DAY0_FIELD", jint>(); }
	static jint HOUR_OF_DAY1_FIELD() { return get_static_field<"HOUR_OF_DAY1_FIELD", jint>(); }
	static jint JULIAN_DAY_FIELD() { return get_static_field<"JULIAN_DAY_FIELD", jint>(); }
	static jni::ref<java::lang::String> LOCATION_TZ() { return get_static_field<"LOCATION_TZ", jni::ref<java::lang::String>>(); }
	static jint LONG() { return get_static_field<"LONG", jint>(); }
	static jint MEDIUM() { return get_static_field<"MEDIUM", jint>(); }
	static jint MILLISECONDS_IN_DAY_FIELD() { return get_static_field<"MILLISECONDS_IN_DAY_FIELD", jint>(); }
	static jint MILLISECOND_FIELD() { return get_static_field<"MILLISECOND_FIELD", jint>(); }
	static jni::ref<java::lang::String> MINUTE() { return get_static_field<"MINUTE", jni::ref<java::lang::String>>(); }
	static jint MINUTE_FIELD() { return get_static_field<"MINUTE_FIELD", jint>(); }
	static jni::ref<java::lang::String> MINUTE_SECOND() { return get_static_field<"MINUTE_SECOND", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MONTH() { return get_static_field<"MONTH", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> MONTH_DAY() { return get_static_field<"MONTH_DAY", jni::ref<java::lang::String>>(); }
	static jint MONTH_FIELD() { return get_static_field<"MONTH_FIELD", jint>(); }
	static jni::ref<java::lang::String> MONTH_WEEKDAY_DAY() { return get_static_field<"MONTH_WEEKDAY_DAY", jni::ref<java::lang::String>>(); }
	static jint NONE() { return get_static_field<"NONE", jint>(); }
	static jni::ref<java::lang::String> NUM_MONTH() { return get_static_field<"NUM_MONTH", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> NUM_MONTH_DAY() { return get_static_field<"NUM_MONTH_DAY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> NUM_MONTH_WEEKDAY_DAY() { return get_static_field<"NUM_MONTH_WEEKDAY_DAY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> QUARTER() { return get_static_field<"QUARTER", jni::ref<java::lang::String>>(); }
	static jint QUARTER_FIELD() { return get_static_field<"QUARTER_FIELD", jint>(); }
	static jint RELATIVE() { return get_static_field<"RELATIVE", jint>(); }
	static jint RELATIVE_DEFAULT() { return get_static_field<"RELATIVE_DEFAULT", jint>(); }
	static jint RELATIVE_FULL() { return get_static_field<"RELATIVE_FULL", jint>(); }
	static jint RELATIVE_LONG() { return get_static_field<"RELATIVE_LONG", jint>(); }
	static jint RELATIVE_MEDIUM() { return get_static_field<"RELATIVE_MEDIUM", jint>(); }
	static jint RELATIVE_SHORT() { return get_static_field<"RELATIVE_SHORT", jint>(); }
	static jni::ref<java::lang::String> SECOND() { return get_static_field<"SECOND", jni::ref<java::lang::String>>(); }
	static jint SECOND_FIELD() { return get_static_field<"SECOND_FIELD", jint>(); }
	static jint SHORT() { return get_static_field<"SHORT", jint>(); }
	static jni::ref<java::lang::String> SPECIFIC_TZ() { return get_static_field<"SPECIFIC_TZ", jni::ref<java::lang::String>>(); }
	static jint STANDALONE_DAY_FIELD() { return get_static_field<"STANDALONE_DAY_FIELD", jint>(); }
	static jint STANDALONE_MONTH_FIELD() { return get_static_field<"STANDALONE_MONTH_FIELD", jint>(); }
	static jint STANDALONE_QUARTER_FIELD() { return get_static_field<"STANDALONE_QUARTER_FIELD", jint>(); }
	static jint TIMEZONE_FIELD() { return get_static_field<"TIMEZONE_FIELD", jint>(); }
	static jint TIMEZONE_GENERIC_FIELD() { return get_static_field<"TIMEZONE_GENERIC_FIELD", jint>(); }
	static jint TIMEZONE_ISO_FIELD() { return get_static_field<"TIMEZONE_ISO_FIELD", jint>(); }
	static jint TIMEZONE_ISO_LOCAL_FIELD() { return get_static_field<"TIMEZONE_ISO_LOCAL_FIELD", jint>(); }
	static jint TIMEZONE_LOCALIZED_GMT_OFFSET_FIELD() { return get_static_field<"TIMEZONE_LOCALIZED_GMT_OFFSET_FIELD", jint>(); }
	static jint TIMEZONE_RFC_FIELD() { return get_static_field<"TIMEZONE_RFC_FIELD", jint>(); }
	static jint TIMEZONE_SPECIAL_FIELD() { return get_static_field<"TIMEZONE_SPECIAL_FIELD", jint>(); }
	static jni::ref<java::lang::String> WEEKDAY() { return get_static_field<"WEEKDAY", jni::ref<java::lang::String>>(); }
	static jint WEEK_OF_MONTH_FIELD() { return get_static_field<"WEEK_OF_MONTH_FIELD", jint>(); }
	static jint WEEK_OF_YEAR_FIELD() { return get_static_field<"WEEK_OF_YEAR_FIELD", jint>(); }
	static jni::ref<java::lang::String> YEAR() { return get_static_field<"YEAR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> YEAR_ABBR_MONTH() { return get_static_field<"YEAR_ABBR_MONTH", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> YEAR_ABBR_MONTH_DAY() { return get_static_field<"YEAR_ABBR_MONTH_DAY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> YEAR_ABBR_MONTH_WEEKDAY_DAY() { return get_static_field<"YEAR_ABBR_MONTH_WEEKDAY_DAY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> YEAR_ABBR_QUARTER() { return get_static_field<"YEAR_ABBR_QUARTER", jni::ref<java::lang::String>>(); }
	static jint YEAR_FIELD() { return get_static_field<"YEAR_FIELD", jint>(); }
	static jni::ref<java::lang::String> YEAR_MONTH() { return get_static_field<"YEAR_MONTH", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> YEAR_MONTH_DAY() { return get_static_field<"YEAR_MONTH_DAY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> YEAR_MONTH_WEEKDAY_DAY() { return get_static_field<"YEAR_MONTH_WEEKDAY_DAY", jni::ref<java::lang::String>>(); }
	static jint YEAR_NAME_FIELD() { return get_static_field<"YEAR_NAME_FIELD", jint>(); }
	static jni::ref<java::lang::String> YEAR_NUM_MONTH() { return get_static_field<"YEAR_NUM_MONTH", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> YEAR_NUM_MONTH_DAY() { return get_static_field<"YEAR_NUM_MONTH_DAY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> YEAR_NUM_MONTH_WEEKDAY_DAY() { return get_static_field<"YEAR_NUM_MONTH_WEEKDAY_DAY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> YEAR_QUARTER() { return get_static_field<"YEAR_QUARTER", jni::ref<java::lang::String>>(); }
	static jint YEAR_WOY_FIELD() { return get_static_field<"YEAR_WOY_FIELD", jint>(); }

	jni::ref<java::lang::StringBuffer> format(jni::ref<java::lang::Object> obj, jni::ref<java::lang::StringBuffer> toAppendTo, jni::ref<java::text::FieldPosition> fieldPosition) { return call_method<"format", jni::ref<java::lang::StringBuffer>>(obj, toAppendTo, fieldPosition); }
	jni::ref<java::lang::StringBuffer> format(jni::ref<android::icu::util::Calendar> p1, jni::ref<java::lang::StringBuffer> p2, jni::ref<java::text::FieldPosition> p3) { return call_method<"format", jni::ref<java::lang::StringBuffer>>(p1, p2, p3); }
	jni::ref<java::lang::StringBuffer> format(jni::ref<java::util::Date> date, jni::ref<java::lang::StringBuffer> toAppendTo, jni::ref<java::text::FieldPosition> fieldPosition) { return call_method<"format", jni::ref<java::lang::StringBuffer>>(date, toAppendTo, fieldPosition); }
	jni::ref<java::lang::String> format(jni::ref<java::util::Date> date) { return call_method<"format", jni::ref<java::lang::String>>(date); }
	jni::ref<java::util::Date> parse(jni::ref<java::lang::String> text) { return call_method<"parse", jni::ref<java::util::Date>>(text); }
	void parse(jni::ref<java::lang::String> p1, jni::ref<android::icu::util::Calendar> p2, jni::ref<java::text::ParsePosition> p3) { return call_method<"parse", void>(p1, p2, p3); }
	jni::ref<java::util::Date> parse(jni::ref<java::lang::String> text, jni::ref<java::text::ParsePosition> pos) { return call_method<"parse", jni::ref<java::util::Date>>(text, pos); }
	jni::ref<java::lang::Object> parseObject(jni::ref<java::lang::String> source, jni::ref<java::text::ParsePosition> pos) { return call_method<"parseObject", jni::ref<java::lang::Object>>(source, pos); }
	static jni::ref<android::icu::text::DateFormat> getTimeInstance() { return call_static_method<"getTimeInstance", jni::ref<android::icu::text::DateFormat>>(); }
	static jni::ref<android::icu::text::DateFormat> getTimeInstance(jint style) { return call_static_method<"getTimeInstance", jni::ref<android::icu::text::DateFormat>>(style); }
	static jni::ref<android::icu::text::DateFormat> getTimeInstance(jint style, jni::ref<java::util::Locale> aLocale) { return call_static_method<"getTimeInstance", jni::ref<android::icu::text::DateFormat>>(style, aLocale); }
	static jni::ref<android::icu::text::DateFormat> getTimeInstance(jint style, jni::ref<android::icu::util::ULocale> locale) { return call_static_method<"getTimeInstance", jni::ref<android::icu::text::DateFormat>>(style, locale); }
	static jni::ref<android::icu::text::DateFormat> getDateInstance() { return call_static_method<"getDateInstance", jni::ref<android::icu::text::DateFormat>>(); }
	static jni::ref<android::icu::text::DateFormat> getDateInstance(jint style) { return call_static_method<"getDateInstance", jni::ref<android::icu::text::DateFormat>>(style); }
	static jni::ref<android::icu::text::DateFormat> getDateInstance(jint style, jni::ref<java::util::Locale> aLocale) { return call_static_method<"getDateInstance", jni::ref<android::icu::text::DateFormat>>(style, aLocale); }
	static jni::ref<android::icu::text::DateFormat> getDateInstance(jint style, jni::ref<android::icu::util::ULocale> locale) { return call_static_method<"getDateInstance", jni::ref<android::icu::text::DateFormat>>(style, locale); }
	static jni::ref<android::icu::text::DateFormat> getDateTimeInstance() { return call_static_method<"getDateTimeInstance", jni::ref<android::icu::text::DateFormat>>(); }
	static jni::ref<android::icu::text::DateFormat> getDateTimeInstance(jint dateStyle, jint timeStyle) { return call_static_method<"getDateTimeInstance", jni::ref<android::icu::text::DateFormat>>(dateStyle, timeStyle); }
	static jni::ref<android::icu::text::DateFormat> getDateTimeInstance(jint dateStyle, jint timeStyle, jni::ref<java::util::Locale> aLocale) { return call_static_method<"getDateTimeInstance", jni::ref<android::icu::text::DateFormat>>(dateStyle, timeStyle, aLocale); }
	static jni::ref<android::icu::text::DateFormat> getDateTimeInstance(jint dateStyle, jint timeStyle, jni::ref<android::icu::util::ULocale> locale) { return call_static_method<"getDateTimeInstance", jni::ref<android::icu::text::DateFormat>>(dateStyle, timeStyle, locale); }
	static jni::ref<android::icu::text::DateFormat> getInstance() { return call_static_method<"getInstance", jni::ref<android::icu::text::DateFormat>>(); }
	static jni::ref<jni::array<java::util::Locale>> getAvailableLocales() { return call_static_method<"getAvailableLocales", jni::ref<jni::array<java::util::Locale>>>(); }
	void setCalendar(jni::ref<android::icu::util::Calendar> newCalendar) { return call_method<"setCalendar", void>(newCalendar); }
	jni::ref<android::icu::util::Calendar> getCalendar() { return call_method<"getCalendar", jni::ref<android::icu::util::Calendar>>(); }
	void setNumberFormat(jni::ref<android::icu::text::NumberFormat> newNumberFormat) { return call_method<"setNumberFormat", void>(newNumberFormat); }
	jni::ref<android::icu::text::NumberFormat> getNumberFormat() { return call_method<"getNumberFormat", jni::ref<android::icu::text::NumberFormat>>(); }
	void setTimeZone(jni::ref<android::icu::util::TimeZone> zone) { return call_method<"setTimeZone", void>(zone); }
	jni::ref<android::icu::util::TimeZone> getTimeZone() { return call_method<"getTimeZone", jni::ref<android::icu::util::TimeZone>>(); }
	void setLenient(jboolean lenient) { return call_method<"setLenient", void>(lenient); }
	jboolean isLenient() { return call_method<"isLenient", jboolean>(); }
	void setCalendarLenient(jboolean lenient) { return call_method<"setCalendarLenient", void>(lenient); }
	jboolean isCalendarLenient() { return call_method<"isCalendarLenient", jboolean>(); }
	jni::ref<android::icu::text::DateFormat> setBooleanAttribute(jni::ref<android::icu::text::DateFormat_BooleanAttribute> key, jboolean value) { return call_method<"setBooleanAttribute", jni::ref<android::icu::text::DateFormat>>(key, value); }
	jboolean getBooleanAttribute(jni::ref<android::icu::text::DateFormat_BooleanAttribute> key) { return call_method<"getBooleanAttribute", jboolean>(key); }
	void setContext(jni::ref<android::icu::text::DisplayContext> context) { return call_method<"setContext", void>(context); }
	jni::ref<android::icu::text::DisplayContext> getContext(jni::ref<android::icu::text::DisplayContext_Type> type) { return call_method<"getContext", jni::ref<android::icu::text::DisplayContext>>(type); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jboolean equals(jni::ref<java::lang::Object> obj) { return call_method<"equals", jboolean>(obj); }
	jni::ref<java::lang::Object> clone() { return call_method<"clone", jni::ref<java::lang::Object>>(); }
	static jni::ref<android::icu::text::DateFormat> getDateInstance(jni::ref<android::icu::util::Calendar> cal, jint dateStyle, jni::ref<java::util::Locale> locale) { return call_static_method<"getDateInstance", jni::ref<android::icu::text::DateFormat>>(cal, dateStyle, locale); }
	static jni::ref<android::icu::text::DateFormat> getDateInstance(jni::ref<android::icu::util::Calendar> cal, jint dateStyle, jni::ref<android::icu::util::ULocale> locale) { return call_static_method<"getDateInstance", jni::ref<android::icu::text::DateFormat>>(cal, dateStyle, locale); }
	static jni::ref<android::icu::text::DateFormat> getTimeInstance(jni::ref<android::icu::util::Calendar> cal, jint timeStyle, jni::ref<java::util::Locale> locale) { return call_static_method<"getTimeInstance", jni::ref<android::icu::text::DateFormat>>(cal, timeStyle, locale); }
	static jni::ref<android::icu::text::DateFormat> getTimeInstance(jni::ref<android::icu::util::Calendar> cal, jint timeStyle, jni::ref<android::icu::util::ULocale> locale) { return call_static_method<"getTimeInstance", jni::ref<android::icu::text::DateFormat>>(cal, timeStyle, locale); }
	static jni::ref<android::icu::text::DateFormat> getDateTimeInstance(jni::ref<android::icu::util::Calendar> cal, jint dateStyle, jint timeStyle, jni::ref<java::util::Locale> locale) { return call_static_method<"getDateTimeInstance", jni::ref<android::icu::text::DateFormat>>(cal, dateStyle, timeStyle, locale); }
	static jni::ref<android::icu::text::DateFormat> getDateTimeInstance(jni::ref<android::icu::util::Calendar> cal, jint dateStyle, jint timeStyle, jni::ref<android::icu::util::ULocale> locale) { return call_static_method<"getDateTimeInstance", jni::ref<android::icu::text::DateFormat>>(cal, dateStyle, timeStyle, locale); }
	static jni::ref<android::icu::text::DateFormat> getInstance(jni::ref<android::icu::util::Calendar> cal, jni::ref<java::util::Locale> locale) { return call_static_method<"getInstance", jni::ref<android::icu::text::DateFormat>>(cal, locale); }
	static jni::ref<android::icu::text::DateFormat> getInstance(jni::ref<android::icu::util::Calendar> cal, jni::ref<android::icu::util::ULocale> locale) { return call_static_method<"getInstance", jni::ref<android::icu::text::DateFormat>>(cal, locale); }
	static jni::ref<android::icu::text::DateFormat> getInstance(jni::ref<android::icu::util::Calendar> cal) { return call_static_method<"getInstance", jni::ref<android::icu::text::DateFormat>>(cal); }
	static jni::ref<android::icu::text::DateFormat> getDateInstance(jni::ref<android::icu::util::Calendar> cal, jint dateStyle) { return call_static_method<"getDateInstance", jni::ref<android::icu::text::DateFormat>>(cal, dateStyle); }
	static jni::ref<android::icu::text::DateFormat> getTimeInstance(jni::ref<android::icu::util::Calendar> cal, jint timeStyle) { return call_static_method<"getTimeInstance", jni::ref<android::icu::text::DateFormat>>(cal, timeStyle); }
	static jni::ref<android::icu::text::DateFormat> getDateTimeInstance(jni::ref<android::icu::util::Calendar> cal, jint dateStyle, jint timeStyle) { return call_static_method<"getDateTimeInstance", jni::ref<android::icu::text::DateFormat>>(cal, dateStyle, timeStyle); }
	static jni::ref<android::icu::text::DateFormat> getInstanceForSkeleton(jni::ref<java::lang::String> skeleton) { return call_static_method<"getInstanceForSkeleton", jni::ref<android::icu::text::DateFormat>>(skeleton); }
	static jni::ref<android::icu::text::DateFormat> getInstanceForSkeleton(jni::ref<java::lang::String> skeleton, jni::ref<java::util::Locale> locale) { return call_static_method<"getInstanceForSkeleton", jni::ref<android::icu::text::DateFormat>>(skeleton, locale); }
	static jni::ref<android::icu::text::DateFormat> getInstanceForSkeleton(jni::ref<java::lang::String> skeleton, jni::ref<android::icu::util::ULocale> locale) { return call_static_method<"getInstanceForSkeleton", jni::ref<android::icu::text::DateFormat>>(skeleton, locale); }
	static jni::ref<android::icu::text::DateFormat> getInstanceForSkeleton(jni::ref<android::icu::util::Calendar> cal, jni::ref<java::lang::String> skeleton, jni::ref<java::util::Locale> locale) { return call_static_method<"getInstanceForSkeleton", jni::ref<android::icu::text::DateFormat>>(cal, skeleton, locale); }
	static jni::ref<android::icu::text::DateFormat> getInstanceForSkeleton(jni::ref<android::icu::util::Calendar> cal, jni::ref<java::lang::String> skeleton, jni::ref<android::icu::util::ULocale> locale) { return call_static_method<"getInstanceForSkeleton", jni::ref<android::icu::text::DateFormat>>(cal, skeleton, locale); }
	static jni::ref<android::icu::text::DateFormat> getPatternInstance(jni::ref<java::lang::String> skeleton) { return call_static_method<"getPatternInstance", jni::ref<android::icu::text::DateFormat>>(skeleton); }
	static jni::ref<android::icu::text::DateFormat> getPatternInstance(jni::ref<java::lang::String> skeleton, jni::ref<java::util::Locale> locale) { return call_static_method<"getPatternInstance", jni::ref<android::icu::text::DateFormat>>(skeleton, locale); }
	static jni::ref<android::icu::text::DateFormat> getPatternInstance(jni::ref<java::lang::String> skeleton, jni::ref<android::icu::util::ULocale> locale) { return call_static_method<"getPatternInstance", jni::ref<android::icu::text::DateFormat>>(skeleton, locale); }
	static jni::ref<android::icu::text::DateFormat> getPatternInstance(jni::ref<android::icu::util::Calendar> cal, jni::ref<java::lang::String> skeleton, jni::ref<java::util::Locale> locale) { return call_static_method<"getPatternInstance", jni::ref<android::icu::text::DateFormat>>(cal, skeleton, locale); }
	static jni::ref<android::icu::text::DateFormat> getPatternInstance(jni::ref<android::icu::util::Calendar> cal, jni::ref<java::lang::String> skeleton, jni::ref<android::icu::util::ULocale> locale) { return call_static_method<"getPatternInstance", jni::ref<android::icu::text::DateFormat>>(cal, skeleton, locale); }

protected:

	DateFormat(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_TEXT_DATEFORMAT
