// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/database/AbstractWindowedCursor.h>

#ifndef SCAPIX_JAVA_API_ANDROID_DATABASE_SQLITE_SQLITECURSOR_FWD
#define SCAPIX_JAVA_API_ANDROID_DATABASE_SQLITE_SQLITECURSOR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::database::sqlite { class SQLiteCursor; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::database::sqlite::SQLiteCursor>
{
	static constexpr fixed_string class_name = "android/database/sqlite/SQLiteCursor";
	using base_classes = std::tuple<scapix::java_api::android::database::AbstractWindowedCursor>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_DATABASE_SQLITE_SQLITECURSOR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_DATABASE_SQLITE_SQLITECURSOR)
#define SCAPIX_JAVA_API_ANDROID_DATABASE_SQLITE_SQLITECURSOR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/database/CursorWindow.h>
#include <scapix/java_api/android/database/sqlite/SQLiteCursorDriver.h>
#include <scapix/java_api/android/database/sqlite/SQLiteDatabase.h>
#include <scapix/java_api/android/database/sqlite/SQLiteQuery.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::database::sqlite::SQLiteCursor : public jni::object_base<"android/database/sqlite/SQLiteCursor",
	android::database::AbstractWindowedCursor>
{
public:

	static jni::ref<android::database::sqlite::SQLiteCursor> new_object(jni::ref<android::database::sqlite::SQLiteDatabase> db, jni::ref<android::database::sqlite::SQLiteCursorDriver> driver, jni::ref<java::lang::String> editTable, jni::ref<android::database::sqlite::SQLiteQuery> query) { return base_::new_object(db, driver, editTable, query); }
	static jni::ref<android::database::sqlite::SQLiteCursor> new_object(jni::ref<android::database::sqlite::SQLiteCursorDriver> driver, jni::ref<java::lang::String> editTable, jni::ref<android::database::sqlite::SQLiteQuery> query) { return base_::new_object(driver, editTable, query); }
	jni::ref<android::database::sqlite::SQLiteDatabase> getDatabase() { return call_method<"getDatabase", jni::ref<android::database::sqlite::SQLiteDatabase>>(); }
	jboolean onMove(jint oldPosition, jint newPosition) { return call_method<"onMove", jboolean>(oldPosition, newPosition); }
	jint getCount() { return call_method<"getCount", jint>(); }
	jint getColumnIndex(jni::ref<java::lang::String> columnName) { return call_method<"getColumnIndex", jint>(columnName); }
	jni::ref<jni::array<java::lang::String>> getColumnNames() { return call_method<"getColumnNames", jni::ref<jni::array<java::lang::String>>>(); }
	void deactivate() { return call_method<"deactivate", void>(); }
	void close() { return call_method<"close", void>(); }
	jboolean requery() { return call_method<"requery", jboolean>(); }
	void setWindow(jni::ref<android::database::CursorWindow> window) { return call_method<"setWindow", void>(window); }
	void setSelectionArguments(jni::ref<jni::array<java::lang::String>> selectionArgs) { return call_method<"setSelectionArguments", void>(selectionArgs); }
	void setFillWindowForwardOnly(jboolean fillWindowForwardOnly) { return call_method<"setFillWindowForwardOnly", void>(fillWindowForwardOnly); }

protected:

	SQLiteCursor(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_DATABASE_SQLITE_SQLITECURSOR
