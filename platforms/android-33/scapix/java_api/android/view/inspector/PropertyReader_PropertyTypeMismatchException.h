// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/RuntimeException.h>

#ifndef SCAPIX_JAVA_API_ANDROID_VIEW_INSPECTOR_PROPERTYREADER_PROPERTYTYPEMISMATCHEXCEPTION_FWD
#define SCAPIX_JAVA_API_ANDROID_VIEW_INSPECTOR_PROPERTYREADER_PROPERTYTYPEMISMATCHEXCEPTION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::view::inspector { class PropertyReader_PropertyTypeMismatchException; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::view::inspector::PropertyReader_PropertyTypeMismatchException>
{
	static constexpr fixed_string class_name = "android/view/inspector/PropertyReader$PropertyTypeMismatchException";
	using base_classes = std::tuple<scapix::java_api::java::lang::RuntimeException>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_INSPECTOR_PROPERTYREADER_PROPERTYTYPEMISMATCHEXCEPTION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_VIEW_INSPECTOR_PROPERTYREADER_PROPERTYTYPEMISMATCHEXCEPTION)
#define SCAPIX_JAVA_API_ANDROID_VIEW_INSPECTOR_PROPERTYREADER_PROPERTYTYPEMISMATCHEXCEPTION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::view::inspector::PropertyReader_PropertyTypeMismatchException : public jni::object_base<"android/view/inspector/PropertyReader$PropertyTypeMismatchException",
	java::lang::RuntimeException>
{
public:

	static jni::ref<android::view::inspector::PropertyReader_PropertyTypeMismatchException> new_object(jint id, jni::ref<java::lang::String> expectedPropertyType, jni::ref<java::lang::String> actualPropertyType, jni::ref<java::lang::String> propertyName) { return base_::new_object(id, expectedPropertyType, actualPropertyType, propertyName); }
	static jni::ref<android::view::inspector::PropertyReader_PropertyTypeMismatchException> new_object(jint id, jni::ref<java::lang::String> expectedPropertyType, jni::ref<java::lang::String> actualPropertyType) { return base_::new_object(id, expectedPropertyType, actualPropertyType); }

protected:

	PropertyReader_PropertyTypeMismatchException(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_INSPECTOR_PROPERTYREADER_PROPERTYTYPEMISMATCHEXCEPTION
