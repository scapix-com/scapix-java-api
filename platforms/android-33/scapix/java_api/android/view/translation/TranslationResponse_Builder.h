// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_VIEW_TRANSLATION_TRANSLATIONRESPONSE_BUILDER_FWD
#define SCAPIX_JAVA_API_ANDROID_VIEW_TRANSLATION_TRANSLATIONRESPONSE_BUILDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::view::translation { class TranslationResponse_Builder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::view::translation::TranslationResponse_Builder>
{
	static constexpr fixed_string class_name = "android/view/translation/TranslationResponse$Builder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_TRANSLATION_TRANSLATIONRESPONSE_BUILDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_VIEW_TRANSLATION_TRANSLATIONRESPONSE_BUILDER)
#define SCAPIX_JAVA_API_ANDROID_VIEW_TRANSLATION_TRANSLATIONRESPONSE_BUILDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/util/SparseArray.h>
#include <scapix/java_api/android/view/translation/TranslationResponse.h>
#include <scapix/java_api/android/view/translation/TranslationResponseValue.h>
#include <scapix/java_api/android/view/translation/ViewTranslationResponse.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::view::translation::TranslationResponse_Builder : public jni::object_base<"android/view/translation/TranslationResponse$Builder",
	java::lang::Object>
{
public:

	static jni::ref<android::view::translation::TranslationResponse_Builder> new_object(jint translationStatus) { return base_::new_object(translationStatus); }
	jni::ref<android::view::translation::TranslationResponse_Builder> setTranslationResponseValues(jni::ref<android::util::SparseArray> value) { return call_method<"setTranslationResponseValues", jni::ref<android::view::translation::TranslationResponse_Builder>>(value); }
	jni::ref<android::view::translation::TranslationResponse_Builder> setViewTranslationResponses(jni::ref<android::util::SparseArray> value) { return call_method<"setViewTranslationResponses", jni::ref<android::view::translation::TranslationResponse_Builder>>(value); }
	jni::ref<android::view::translation::TranslationResponse_Builder> setFinalResponse(jboolean value) { return call_method<"setFinalResponse", jni::ref<android::view::translation::TranslationResponse_Builder>>(value); }
	jni::ref<android::view::translation::TranslationResponse> build() { return call_method<"build", jni::ref<android::view::translation::TranslationResponse>>(); }
	jni::ref<android::view::translation::TranslationResponse_Builder> setTranslationResponseValue(jint index, jni::ref<android::view::translation::TranslationResponseValue> value) { return call_method<"setTranslationResponseValue", jni::ref<android::view::translation::TranslationResponse_Builder>>(index, value); }
	jni::ref<android::view::translation::TranslationResponse_Builder> setViewTranslationResponse(jint index, jni::ref<android::view::translation::ViewTranslationResponse> response) { return call_method<"setViewTranslationResponse", jni::ref<android::view::translation::TranslationResponse_Builder>>(index, response); }

protected:

	TranslationResponse_Builder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_TRANSLATION_TRANSLATIONRESPONSE_BUILDER
