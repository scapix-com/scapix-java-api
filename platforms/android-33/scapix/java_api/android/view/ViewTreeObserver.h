// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_VIEW_VIEWTREEOBSERVER_FWD
#define SCAPIX_JAVA_API_ANDROID_VIEW_VIEWTREEOBSERVER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::view { class ViewTreeObserver; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::view::ViewTreeObserver>
{
	static constexpr fixed_string class_name = "android/view/ViewTreeObserver";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_VIEWTREEOBSERVER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_VIEW_VIEWTREEOBSERVER)
#define SCAPIX_JAVA_API_ANDROID_VIEW_VIEWTREEOBSERVER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/view/ViewTreeObserver_OnDrawListener.h>
#include <scapix/java_api/android/view/ViewTreeObserver_OnGlobalFocusChangeListener.h>
#include <scapix/java_api/android/view/ViewTreeObserver_OnGlobalLayoutListener.h>
#include <scapix/java_api/android/view/ViewTreeObserver_OnPreDrawListener.h>
#include <scapix/java_api/android/view/ViewTreeObserver_OnScrollChangedListener.h>
#include <scapix/java_api/android/view/ViewTreeObserver_OnTouchModeChangeListener.h>
#include <scapix/java_api/android/view/ViewTreeObserver_OnWindowAttachListener.h>
#include <scapix/java_api/android/view/ViewTreeObserver_OnWindowFocusChangeListener.h>
#include <scapix/java_api/java/lang/Runnable.h>
#include <scapix/java_api/java/util/function/Consumer.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::view::ViewTreeObserver : public jni::object_base<"android/view/ViewTreeObserver",
	java::lang::Object>
{
public:

	using OnWindowFocusChangeListener = ViewTreeObserver_OnWindowFocusChangeListener;
	using OnWindowAttachListener = ViewTreeObserver_OnWindowAttachListener;
	using OnTouchModeChangeListener = ViewTreeObserver_OnTouchModeChangeListener;
	using OnScrollChangedListener = ViewTreeObserver_OnScrollChangedListener;
	using OnPreDrawListener = ViewTreeObserver_OnPreDrawListener;
	using OnGlobalLayoutListener = ViewTreeObserver_OnGlobalLayoutListener;
	using OnGlobalFocusChangeListener = ViewTreeObserver_OnGlobalFocusChangeListener;
	using OnDrawListener = ViewTreeObserver_OnDrawListener;

	void addOnWindowAttachListener(jni::ref<android::view::ViewTreeObserver_OnWindowAttachListener> listener) { return call_method<"addOnWindowAttachListener", void>(listener); }
	void removeOnWindowAttachListener(jni::ref<android::view::ViewTreeObserver_OnWindowAttachListener> victim) { return call_method<"removeOnWindowAttachListener", void>(victim); }
	void addOnWindowFocusChangeListener(jni::ref<android::view::ViewTreeObserver_OnWindowFocusChangeListener> listener) { return call_method<"addOnWindowFocusChangeListener", void>(listener); }
	void removeOnWindowFocusChangeListener(jni::ref<android::view::ViewTreeObserver_OnWindowFocusChangeListener> victim) { return call_method<"removeOnWindowFocusChangeListener", void>(victim); }
	void addOnGlobalFocusChangeListener(jni::ref<android::view::ViewTreeObserver_OnGlobalFocusChangeListener> listener) { return call_method<"addOnGlobalFocusChangeListener", void>(listener); }
	void removeOnGlobalFocusChangeListener(jni::ref<android::view::ViewTreeObserver_OnGlobalFocusChangeListener> victim) { return call_method<"removeOnGlobalFocusChangeListener", void>(victim); }
	void addOnGlobalLayoutListener(jni::ref<android::view::ViewTreeObserver_OnGlobalLayoutListener> listener) { return call_method<"addOnGlobalLayoutListener", void>(listener); }
	void removeGlobalOnLayoutListener(jni::ref<android::view::ViewTreeObserver_OnGlobalLayoutListener> victim) { return call_method<"removeGlobalOnLayoutListener", void>(victim); }
	void removeOnGlobalLayoutListener(jni::ref<android::view::ViewTreeObserver_OnGlobalLayoutListener> victim) { return call_method<"removeOnGlobalLayoutListener", void>(victim); }
	void addOnPreDrawListener(jni::ref<android::view::ViewTreeObserver_OnPreDrawListener> listener) { return call_method<"addOnPreDrawListener", void>(listener); }
	void removeOnPreDrawListener(jni::ref<android::view::ViewTreeObserver_OnPreDrawListener> victim) { return call_method<"removeOnPreDrawListener", void>(victim); }
	void addOnDrawListener(jni::ref<android::view::ViewTreeObserver_OnDrawListener> listener) { return call_method<"addOnDrawListener", void>(listener); }
	void removeOnDrawListener(jni::ref<android::view::ViewTreeObserver_OnDrawListener> victim) { return call_method<"removeOnDrawListener", void>(victim); }
	void registerFrameCommitCallback(jni::ref<java::lang::Runnable> callback) { return call_method<"registerFrameCommitCallback", void>(callback); }
	jboolean unregisterFrameCommitCallback(jni::ref<java::lang::Runnable> callback) { return call_method<"unregisterFrameCommitCallback", jboolean>(callback); }
	void addOnScrollChangedListener(jni::ref<android::view::ViewTreeObserver_OnScrollChangedListener> listener) { return call_method<"addOnScrollChangedListener", void>(listener); }
	void removeOnScrollChangedListener(jni::ref<android::view::ViewTreeObserver_OnScrollChangedListener> victim) { return call_method<"removeOnScrollChangedListener", void>(victim); }
	void addOnTouchModeChangeListener(jni::ref<android::view::ViewTreeObserver_OnTouchModeChangeListener> listener) { return call_method<"addOnTouchModeChangeListener", void>(listener); }
	void removeOnTouchModeChangeListener(jni::ref<android::view::ViewTreeObserver_OnTouchModeChangeListener> victim) { return call_method<"removeOnTouchModeChangeListener", void>(victim); }
	void addOnSystemGestureExclusionRectsChangedListener(jni::ref<java::util::function::Consumer> listener) { return call_method<"addOnSystemGestureExclusionRectsChangedListener", void>(listener); }
	void removeOnSystemGestureExclusionRectsChangedListener(jni::ref<java::util::function::Consumer> listener) { return call_method<"removeOnSystemGestureExclusionRectsChangedListener", void>(listener); }
	jboolean isAlive() { return call_method<"isAlive", jboolean>(); }
	void dispatchOnGlobalLayout() { return call_method<"dispatchOnGlobalLayout", void>(); }
	jboolean dispatchOnPreDraw() { return call_method<"dispatchOnPreDraw", jboolean>(); }
	void dispatchOnDraw() { return call_method<"dispatchOnDraw", void>(); }

protected:

	ViewTreeObserver(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_VIEWTREEOBSERVER
