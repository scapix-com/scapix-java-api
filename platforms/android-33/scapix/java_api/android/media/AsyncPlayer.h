// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_ASYNCPLAYER_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_ASYNCPLAYER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media { class AsyncPlayer; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::AsyncPlayer>
{
	static constexpr fixed_string class_name = "android/media/AsyncPlayer";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_ASYNCPLAYER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_ASYNCPLAYER)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_ASYNCPLAYER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/media/AudioAttributes.h>
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::AsyncPlayer : public jni::object_base<"android/media/AsyncPlayer",
	java::lang::Object>
{
public:

	static jni::ref<android::media::AsyncPlayer> new_object(jni::ref<java::lang::String> tag) { return base_::new_object(tag); }
	void play(jni::ref<android::content::Context> context, jni::ref<android::net::Uri> uri, jboolean looping, jint stream) { return call_method<"play", void>(context, uri, looping, stream); }
	void play(jni::ref<android::content::Context> context, jni::ref<android::net::Uri> uri, jboolean looping, jni::ref<android::media::AudioAttributes> attributes) { return call_method<"play", void>(context, uri, looping, attributes); }
	void stop() { return call_method<"stop", void>(); }

protected:

	AsyncPlayer(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_ASYNCPLAYER
