// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_FACEDETECTOR_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_FACEDETECTOR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media { class FaceDetector; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::FaceDetector>
{
	static constexpr fixed_string class_name = "android/media/FaceDetector";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_FACEDETECTOR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_FACEDETECTOR)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_FACEDETECTOR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/graphics/Bitmap.h>
#include <scapix/java_api/android/media/FaceDetector_Face.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::FaceDetector : public jni::object_base<"android/media/FaceDetector",
	java::lang::Object>
{
public:

	using Face = FaceDetector_Face;

	static jni::ref<android::media::FaceDetector> new_object(jint width, jint height, jint maxFaces) { return base_::new_object(width, height, maxFaces); }
	jint findFaces(jni::ref<android::graphics::Bitmap> bitmap, jni::ref<jni::array<android::media::FaceDetector_Face>> faces) { return call_method<"findFaces", jint>(bitmap, faces); }

protected:

	FaceDetector(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_FACEDETECTOR
