// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOPRESENTATION_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOPRESENTATION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media { class AudioPresentation; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::AudioPresentation>
{
	static constexpr fixed_string class_name = "android/media/AudioPresentation";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOPRESENTATION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOPRESENTATION)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOPRESENTATION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Locale.h>
#include <scapix/java_api/java/util/Map.h>
#include <scapix/java_api/android/media/AudioPresentation_Builder.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::AudioPresentation : public jni::object_base<"android/media/AudioPresentation",
	java::lang::Object>
{
public:

	using Builder = AudioPresentation_Builder;

	static jint CONTENT_COMMENTARY() { return get_static_field<"CONTENT_COMMENTARY", jint>(); }
	static jint CONTENT_DIALOG() { return get_static_field<"CONTENT_DIALOG", jint>(); }
	static jint CONTENT_EMERGENCY() { return get_static_field<"CONTENT_EMERGENCY", jint>(); }
	static jint CONTENT_HEARING_IMPAIRED() { return get_static_field<"CONTENT_HEARING_IMPAIRED", jint>(); }
	static jint CONTENT_MAIN() { return get_static_field<"CONTENT_MAIN", jint>(); }
	static jint CONTENT_MUSIC_AND_EFFECTS() { return get_static_field<"CONTENT_MUSIC_AND_EFFECTS", jint>(); }
	static jint CONTENT_UNKNOWN() { return get_static_field<"CONTENT_UNKNOWN", jint>(); }
	static jint CONTENT_VISUALLY_IMPAIRED() { return get_static_field<"CONTENT_VISUALLY_IMPAIRED", jint>(); }
	static jint CONTENT_VOICEOVER() { return get_static_field<"CONTENT_VOICEOVER", jint>(); }
	static jint MASTERED_FOR_3D() { return get_static_field<"MASTERED_FOR_3D", jint>(); }
	static jint MASTERED_FOR_HEADPHONE() { return get_static_field<"MASTERED_FOR_HEADPHONE", jint>(); }
	static jint MASTERED_FOR_STEREO() { return get_static_field<"MASTERED_FOR_STEREO", jint>(); }
	static jint MASTERED_FOR_SURROUND() { return get_static_field<"MASTERED_FOR_SURROUND", jint>(); }
	static jint MASTERING_NOT_INDICATED() { return get_static_field<"MASTERING_NOT_INDICATED", jint>(); }

	jint getPresentationId() { return call_method<"getPresentationId", jint>(); }
	jint getProgramId() { return call_method<"getProgramId", jint>(); }
	jni::ref<java::util::Map> getLabels() { return call_method<"getLabels", jni::ref<java::util::Map>>(); }
	jni::ref<java::util::Locale> getLocale() { return call_method<"getLocale", jni::ref<java::util::Locale>>(); }
	jint getMasteringIndication() { return call_method<"getMasteringIndication", jint>(); }
	jboolean hasAudioDescription() { return call_method<"hasAudioDescription", jboolean>(); }
	jboolean hasSpokenSubtitles() { return call_method<"hasSpokenSubtitles", jboolean>(); }
	jboolean hasDialogueEnhancement() { return call_method<"hasDialogueEnhancement", jboolean>(); }
	jboolean equals(jni::ref<java::lang::Object> o) { return call_method<"equals", jboolean>(o); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	AudioPresentation(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_AUDIOPRESENTATION
