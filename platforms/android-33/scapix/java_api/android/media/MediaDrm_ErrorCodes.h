// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIADRM_ERRORCODES_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIADRM_ERRORCODES_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media { class MediaDrm_ErrorCodes; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::MediaDrm_ErrorCodes>
{
	static constexpr fixed_string class_name = "android/media/MediaDrm$ErrorCodes";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIADRM_ERRORCODES_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIADRM_ERRORCODES)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIADRM_ERRORCODES

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::MediaDrm_ErrorCodes : public jni::object_base<"android/media/MediaDrm$ErrorCodes",
	java::lang::Object>
{
public:

	static jint ERROR_CERTIFICATE_MALFORMED() { return get_static_field<"ERROR_CERTIFICATE_MALFORMED", jint>(); }
	static jint ERROR_CERTIFICATE_MISSING() { return get_static_field<"ERROR_CERTIFICATE_MISSING", jint>(); }
	static jint ERROR_CRYPTO_LIBRARY() { return get_static_field<"ERROR_CRYPTO_LIBRARY", jint>(); }
	static jint ERROR_FRAME_TOO_LARGE() { return get_static_field<"ERROR_FRAME_TOO_LARGE", jint>(); }
	static jint ERROR_GENERIC_OEM() { return get_static_field<"ERROR_GENERIC_OEM", jint>(); }
	static jint ERROR_GENERIC_PLUGIN() { return get_static_field<"ERROR_GENERIC_PLUGIN", jint>(); }
	static jint ERROR_INIT_DATA() { return get_static_field<"ERROR_INIT_DATA", jint>(); }
	static jint ERROR_INSUFFICIENT_OUTPUT_PROTECTION() { return get_static_field<"ERROR_INSUFFICIENT_OUTPUT_PROTECTION", jint>(); }
	static jint ERROR_INSUFFICIENT_SECURITY() { return get_static_field<"ERROR_INSUFFICIENT_SECURITY", jint>(); }
	static jint ERROR_KEY_EXPIRED() { return get_static_field<"ERROR_KEY_EXPIRED", jint>(); }
	static jint ERROR_KEY_NOT_LOADED() { return get_static_field<"ERROR_KEY_NOT_LOADED", jint>(); }
	static jint ERROR_LICENSE_PARSE() { return get_static_field<"ERROR_LICENSE_PARSE", jint>(); }
	static jint ERROR_LICENSE_POLICY() { return get_static_field<"ERROR_LICENSE_POLICY", jint>(); }
	static jint ERROR_LICENSE_RELEASE() { return get_static_field<"ERROR_LICENSE_RELEASE", jint>(); }
	static jint ERROR_LICENSE_REQUEST_REJECTED() { return get_static_field<"ERROR_LICENSE_REQUEST_REJECTED", jint>(); }
	static jint ERROR_LICENSE_RESTORE() { return get_static_field<"ERROR_LICENSE_RESTORE", jint>(); }
	static jint ERROR_LICENSE_STATE() { return get_static_field<"ERROR_LICENSE_STATE", jint>(); }
	static jint ERROR_LOST_STATE() { return get_static_field<"ERROR_LOST_STATE", jint>(); }
	static jint ERROR_MEDIA_FRAMEWORK() { return get_static_field<"ERROR_MEDIA_FRAMEWORK", jint>(); }
	static jint ERROR_NO_KEY() { return get_static_field<"ERROR_NO_KEY", jint>(); }
	static jint ERROR_PROVISIONING_CERTIFICATE() { return get_static_field<"ERROR_PROVISIONING_CERTIFICATE", jint>(); }
	static jint ERROR_PROVISIONING_CONFIG() { return get_static_field<"ERROR_PROVISIONING_CONFIG", jint>(); }
	static jint ERROR_PROVISIONING_PARSE() { return get_static_field<"ERROR_PROVISIONING_PARSE", jint>(); }
	static jint ERROR_PROVISIONING_REQUEST_REJECTED() { return get_static_field<"ERROR_PROVISIONING_REQUEST_REJECTED", jint>(); }
	static jint ERROR_PROVISIONING_RETRY() { return get_static_field<"ERROR_PROVISIONING_RETRY", jint>(); }
	static jint ERROR_RESOURCE_BUSY() { return get_static_field<"ERROR_RESOURCE_BUSY", jint>(); }
	static jint ERROR_RESOURCE_CONTENTION() { return get_static_field<"ERROR_RESOURCE_CONTENTION", jint>(); }
	static jint ERROR_SECURE_STOP_RELEASE() { return get_static_field<"ERROR_SECURE_STOP_RELEASE", jint>(); }
	static jint ERROR_SESSION_NOT_OPENED() { return get_static_field<"ERROR_SESSION_NOT_OPENED", jint>(); }
	static jint ERROR_STORAGE_READ() { return get_static_field<"ERROR_STORAGE_READ", jint>(); }
	static jint ERROR_STORAGE_WRITE() { return get_static_field<"ERROR_STORAGE_WRITE", jint>(); }
	static jint ERROR_UNKNOWN() { return get_static_field<"ERROR_UNKNOWN", jint>(); }
	static jint ERROR_UNSUPPORTED_OPERATION() { return get_static_field<"ERROR_UNSUPPORTED_OPERATION", jint>(); }
	static jint ERROR_ZERO_SUBSAMPLES() { return get_static_field<"ERROR_ZERO_SUBSAMPLES", jint>(); }


protected:

	MediaDrm_ErrorCodes(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIADRM_ERRORCODES
