// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIACODECINFO_AUDIOCAPABILITIES_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIACODECINFO_AUDIOCAPABILITIES_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media { class MediaCodecInfo_AudioCapabilities; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::MediaCodecInfo_AudioCapabilities>
{
	static constexpr fixed_string class_name = "android/media/MediaCodecInfo$AudioCapabilities";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIACODECINFO_AUDIOCAPABILITIES_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIACODECINFO_AUDIOCAPABILITIES)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIACODECINFO_AUDIOCAPABILITIES

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/util/Range.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::MediaCodecInfo_AudioCapabilities : public jni::object_base<"android/media/MediaCodecInfo$AudioCapabilities",
	java::lang::Object>
{
public:

	jni::ref<android::util::Range> getBitrateRange() { return call_method<"getBitrateRange", jni::ref<android::util::Range>>(); }
	jni::ref<jni::array<jint>> getSupportedSampleRates() { return call_method<"getSupportedSampleRates", jni::ref<jni::array<jint>>>(); }
	jni::ref<jni::array<android::util::Range>> getSupportedSampleRateRanges() { return call_method<"getSupportedSampleRateRanges", jni::ref<jni::array<android::util::Range>>>(); }
	jint getMaxInputChannelCount() { return call_method<"getMaxInputChannelCount", jint>(); }
	jint getMinInputChannelCount() { return call_method<"getMinInputChannelCount", jint>(); }
	jni::ref<jni::array<android::util::Range>> getInputChannelCountRanges() { return call_method<"getInputChannelCountRanges", jni::ref<jni::array<android::util::Range>>>(); }
	jboolean isSampleRateSupported(jint sampleRate) { return call_method<"isSampleRateSupported", jboolean>(sampleRate); }

protected:

	MediaCodecInfo_AudioCapabilities(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIACODECINFO_AUDIOCAPABILITIES
