// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/media/tv/BroadcastInfoRequest.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_TV_COMMANDREQUEST_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_TV_COMMANDREQUEST_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media::tv { class CommandRequest; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::tv::CommandRequest>
{
	static constexpr fixed_string class_name = "android/media/tv/CommandRequest";
	using base_classes = std::tuple<scapix::java_api::android::media::tv::BroadcastInfoRequest, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_TV_COMMANDREQUEST_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_TV_COMMANDREQUEST)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_TV_COMMANDREQUEST

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::tv::CommandRequest : public jni::object_base<"android/media/tv/CommandRequest",
	android::media::tv::BroadcastInfoRequest,
	android::os::Parcelable>
{
public:

	static jni::ref<java::lang::String> ARGUMENT_TYPE_JSON() { return get_static_field<"ARGUMENT_TYPE_JSON", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ARGUMENT_TYPE_XML() { return get_static_field<"ARGUMENT_TYPE_XML", jni::ref<java::lang::String>>(); }
	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }

	static jni::ref<android::media::tv::CommandRequest> new_object(jint requestId, jint option, jni::ref<java::lang::String> namespace_, jni::ref<java::lang::String> name, jni::ref<java::lang::String> arguments, jni::ref<java::lang::String> argumentType) { return base_::new_object(requestId, option, namespace_, name, arguments, argumentType); }
	jni::ref<java::lang::String> getNamespace() { return call_method<"getNamespace", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getName() { return call_method<"getName", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getArguments() { return call_method<"getArguments", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getArgumentType() { return call_method<"getArgumentType", jni::ref<java::lang::String>>(); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	void writeToParcel(jni::ref<android::os::Parcel> dest, jint flags) { return call_method<"writeToParcel", void>(dest, flags); }

protected:

	CommandRequest(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_TV_COMMANDREQUEST
