// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIAPLAYER_ONPREPAREDLISTENER_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIAPLAYER_ONPREPAREDLISTENER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media { class MediaPlayer_OnPreparedListener; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::MediaPlayer_OnPreparedListener>
{
	static constexpr fixed_string class_name = "android/media/MediaPlayer$OnPreparedListener";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIAPLAYER_ONPREPAREDLISTENER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIAPLAYER_ONPREPAREDLISTENER)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIAPLAYER_ONPREPAREDLISTENER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/media/MediaPlayer.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::MediaPlayer_OnPreparedListener : public jni::object_base<"android/media/MediaPlayer$OnPreparedListener",
	java::lang::Object>
{
public:

	void onPrepared(jni::ref<android::media::MediaPlayer> p1) { return call_method<"onPrepared", void>(p1); }

protected:

	MediaPlayer_OnPreparedListener(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIAPLAYER_ONPREPAREDLISTENER
