// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/AutoCloseable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_METRICS_PLAYBACKSESSION_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_METRICS_PLAYBACKSESSION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media::metrics { class PlaybackSession; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::metrics::PlaybackSession>
{
	static constexpr fixed_string class_name = "android/media/metrics/PlaybackSession";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::lang::AutoCloseable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_METRICS_PLAYBACKSESSION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_METRICS_PLAYBACKSESSION)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_METRICS_PLAYBACKSESSION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/media/metrics/LogSessionId.h>
#include <scapix/java_api/android/media/metrics/NetworkEvent.h>
#include <scapix/java_api/android/media/metrics/PlaybackErrorEvent.h>
#include <scapix/java_api/android/media/metrics/PlaybackMetrics.h>
#include <scapix/java_api/android/media/metrics/PlaybackStateEvent.h>
#include <scapix/java_api/android/media/metrics/TrackChangeEvent.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::metrics::PlaybackSession : public jni::object_base<"android/media/metrics/PlaybackSession",
	java::lang::Object,
	java::lang::AutoCloseable>
{
public:

	void reportPlaybackMetrics(jni::ref<android::media::metrics::PlaybackMetrics> metrics) { return call_method<"reportPlaybackMetrics", void>(metrics); }
	void reportPlaybackErrorEvent(jni::ref<android::media::metrics::PlaybackErrorEvent> event) { return call_method<"reportPlaybackErrorEvent", void>(event); }
	void reportNetworkEvent(jni::ref<android::media::metrics::NetworkEvent> event) { return call_method<"reportNetworkEvent", void>(event); }
	void reportPlaybackStateEvent(jni::ref<android::media::metrics::PlaybackStateEvent> event) { return call_method<"reportPlaybackStateEvent", void>(event); }
	void reportTrackChangeEvent(jni::ref<android::media::metrics::TrackChangeEvent> event) { return call_method<"reportTrackChangeEvent", void>(event); }
	jni::ref<android::media::metrics::LogSessionId> getSessionId() { return call_method<"getSessionId", jni::ref<android::media::metrics::LogSessionId>>(); }
	jboolean equals(jni::ref<java::lang::Object> o) { return call_method<"equals", jboolean>(o); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	void close() { return call_method<"close", void>(); }

protected:

	PlaybackSession(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_METRICS_PLAYBACKSESSION
