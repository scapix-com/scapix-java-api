// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_METRICS_TRACKCHANGEEVENT_BUILDER_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_METRICS_TRACKCHANGEEVENT_BUILDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media::metrics { class TrackChangeEvent_Builder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::metrics::TrackChangeEvent_Builder>
{
	static constexpr fixed_string class_name = "android/media/metrics/TrackChangeEvent$Builder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_METRICS_TRACKCHANGEEVENT_BUILDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_METRICS_TRACKCHANGEEVENT_BUILDER)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_METRICS_TRACKCHANGEEVENT_BUILDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/media/metrics/TrackChangeEvent.h>
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::metrics::TrackChangeEvent_Builder : public jni::object_base<"android/media/metrics/TrackChangeEvent$Builder",
	java::lang::Object>
{
public:

	static jni::ref<android::media::metrics::TrackChangeEvent_Builder> new_object(jint type) { return base_::new_object(type); }
	jni::ref<android::media::metrics::TrackChangeEvent_Builder> setTrackState(jint value) { return call_method<"setTrackState", jni::ref<android::media::metrics::TrackChangeEvent_Builder>>(value); }
	jni::ref<android::media::metrics::TrackChangeEvent_Builder> setTrackChangeReason(jint value) { return call_method<"setTrackChangeReason", jni::ref<android::media::metrics::TrackChangeEvent_Builder>>(value); }
	jni::ref<android::media::metrics::TrackChangeEvent_Builder> setContainerMimeType(jni::ref<java::lang::String> value) { return call_method<"setContainerMimeType", jni::ref<android::media::metrics::TrackChangeEvent_Builder>>(value); }
	jni::ref<android::media::metrics::TrackChangeEvent_Builder> setSampleMimeType(jni::ref<java::lang::String> value) { return call_method<"setSampleMimeType", jni::ref<android::media::metrics::TrackChangeEvent_Builder>>(value); }
	jni::ref<android::media::metrics::TrackChangeEvent_Builder> setCodecName(jni::ref<java::lang::String> value) { return call_method<"setCodecName", jni::ref<android::media::metrics::TrackChangeEvent_Builder>>(value); }
	jni::ref<android::media::metrics::TrackChangeEvent_Builder> setBitrate(jint value) { return call_method<"setBitrate", jni::ref<android::media::metrics::TrackChangeEvent_Builder>>(value); }
	jni::ref<android::media::metrics::TrackChangeEvent_Builder> setTimeSinceCreatedMillis(jlong value) { return call_method<"setTimeSinceCreatedMillis", jni::ref<android::media::metrics::TrackChangeEvent_Builder>>(value); }
	jni::ref<android::media::metrics::TrackChangeEvent_Builder> setLanguage(jni::ref<java::lang::String> value) { return call_method<"setLanguage", jni::ref<android::media::metrics::TrackChangeEvent_Builder>>(value); }
	jni::ref<android::media::metrics::TrackChangeEvent_Builder> setLanguageRegion(jni::ref<java::lang::String> value) { return call_method<"setLanguageRegion", jni::ref<android::media::metrics::TrackChangeEvent_Builder>>(value); }
	jni::ref<android::media::metrics::TrackChangeEvent_Builder> setChannelCount(jint value) { return call_method<"setChannelCount", jni::ref<android::media::metrics::TrackChangeEvent_Builder>>(value); }
	jni::ref<android::media::metrics::TrackChangeEvent_Builder> setAudioSampleRate(jint value) { return call_method<"setAudioSampleRate", jni::ref<android::media::metrics::TrackChangeEvent_Builder>>(value); }
	jni::ref<android::media::metrics::TrackChangeEvent_Builder> setWidth(jint value) { return call_method<"setWidth", jni::ref<android::media::metrics::TrackChangeEvent_Builder>>(value); }
	jni::ref<android::media::metrics::TrackChangeEvent_Builder> setHeight(jint value) { return call_method<"setHeight", jni::ref<android::media::metrics::TrackChangeEvent_Builder>>(value); }
	jni::ref<android::media::metrics::TrackChangeEvent_Builder> setVideoFrameRate(jfloat value) { return call_method<"setVideoFrameRate", jni::ref<android::media::metrics::TrackChangeEvent_Builder>>(value); }
	jni::ref<android::media::metrics::TrackChangeEvent_Builder> setMetricsBundle(jni::ref<android::os::Bundle> metricsBundle) { return call_method<"setMetricsBundle", jni::ref<android::media::metrics::TrackChangeEvent_Builder>>(metricsBundle); }
	jni::ref<android::media::metrics::TrackChangeEvent> build() { return call_method<"build", jni::ref<android::media::metrics::TrackChangeEvent>>(); }

protected:

	TrackChangeEvent_Builder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_METRICS_TRACKCHANGEEVENT_BUILDER
