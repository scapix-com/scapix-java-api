// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/content/Loader.h>

#ifndef SCAPIX_JAVA_API_ANDROID_CONTENT_ASYNCTASKLOADER_FWD
#define SCAPIX_JAVA_API_ANDROID_CONTENT_ASYNCTASKLOADER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::content { class AsyncTaskLoader; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::content::AsyncTaskLoader>
{
	static constexpr fixed_string class_name = "android/content/AsyncTaskLoader";
	using base_classes = std::tuple<scapix::java_api::android::content::Loader>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_CONTENT_ASYNCTASKLOADER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_CONTENT_ASYNCTASKLOADER)
#define SCAPIX_JAVA_API_ANDROID_CONTENT_ASYNCTASKLOADER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/java/io/FileDescriptor.h>
#include <scapix/java_api/java/io/PrintWriter.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::content::AsyncTaskLoader : public jni::object_base<"android/content/AsyncTaskLoader",
	android::content::Loader>
{
public:

	static jni::ref<android::content::AsyncTaskLoader> new_object(jni::ref<android::content::Context> context) { return base_::new_object(context); }
	void setUpdateThrottle(jlong delayMS) { return call_method<"setUpdateThrottle", void>(delayMS); }
	void onCanceled(jni::ref<java::lang::Object> data) { return call_method<"onCanceled", void>(data); }
	jni::ref<java::lang::Object> loadInBackground() { return call_method<"loadInBackground", jni::ref<java::lang::Object>>(); }
	void cancelLoadInBackground() { return call_method<"cancelLoadInBackground", void>(); }
	jboolean isLoadInBackgroundCanceled() { return call_method<"isLoadInBackgroundCanceled", jboolean>(); }
	void dump(jni::ref<java::lang::String> prefix, jni::ref<java::io::FileDescriptor> fd, jni::ref<java::io::PrintWriter> writer, jni::ref<jni::array<java::lang::String>> args) { return call_method<"dump", void>(prefix, fd, writer, args); }

protected:

	AsyncTaskLoader(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_CONTENT_ASYNCTASKLOADER
