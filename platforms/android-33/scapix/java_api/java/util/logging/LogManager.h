// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_UTIL_LOGGING_LOGMANAGER_FWD
#define SCAPIX_JAVA_API_JAVA_UTIL_LOGGING_LOGMANAGER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::util::logging { class LogManager; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::util::logging::LogManager>
{
	static constexpr fixed_string class_name = "java/util/logging/LogManager";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_LOGGING_LOGMANAGER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_UTIL_LOGGING_LOGMANAGER)
#define SCAPIX_JAVA_API_JAVA_UTIL_LOGGING_LOGMANAGER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/beans/PropertyChangeListener.h>
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Enumeration.h>
#include <scapix/java_api/java/util/logging/Logger.h>
#include <scapix/java_api/java/util/logging/LoggingMXBean.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::util::logging::LogManager : public jni::object_base<"java/util/logging/LogManager",
	java::lang::Object>
{
public:

	static jni::ref<java::lang::String> LOGGING_MXBEAN_NAME() { return get_static_field<"LOGGING_MXBEAN_NAME", jni::ref<java::lang::String>>(); }

	static jni::ref<java::util::logging::LogManager> getLogManager() { return call_static_method<"getLogManager", jni::ref<java::util::logging::LogManager>>(); }
	void addPropertyChangeListener(jni::ref<java::beans::PropertyChangeListener> l) { return call_method<"addPropertyChangeListener", void>(l); }
	void removePropertyChangeListener(jni::ref<java::beans::PropertyChangeListener> l) { return call_method<"removePropertyChangeListener", void>(l); }
	jboolean addLogger(jni::ref<java::util::logging::Logger> logger) { return call_method<"addLogger", jboolean>(logger); }
	jni::ref<java::util::logging::Logger> getLogger(jni::ref<java::lang::String> name) { return call_method<"getLogger", jni::ref<java::util::logging::Logger>>(name); }
	jni::ref<java::util::Enumeration> getLoggerNames() { return call_method<"getLoggerNames", jni::ref<java::util::Enumeration>>(); }
	void readConfiguration() { return call_method<"readConfiguration", void>(); }
	void reset() { return call_method<"reset", void>(); }
	void readConfiguration(jni::ref<java::io::InputStream> ins) { return call_method<"readConfiguration", void>(ins); }
	jni::ref<java::lang::String> getProperty(jni::ref<java::lang::String> name) { return call_method<"getProperty", jni::ref<java::lang::String>>(name); }
	void checkAccess() { return call_method<"checkAccess", void>(); }
	static jni::ref<java::util::logging::LoggingMXBean> getLoggingMXBean() { return call_static_method<"getLoggingMXBean", jni::ref<java::util::logging::LoggingMXBean>>(); }

protected:

	LogManager(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_LOGGING_LOGMANAGER
