// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Enum.h>

#ifndef SCAPIX_JAVA_API_JAVA_NIO_FILE_ATTRIBUTE_POSIXFILEPERMISSION_FWD
#define SCAPIX_JAVA_API_JAVA_NIO_FILE_ATTRIBUTE_POSIXFILEPERMISSION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::nio::file::attribute { class PosixFilePermission; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::nio::file::attribute::PosixFilePermission>
{
	static constexpr fixed_string class_name = "java/nio/file/attribute/PosixFilePermission";
	using base_classes = std::tuple<scapix::java_api::java::lang::Enum>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_NIO_FILE_ATTRIBUTE_POSIXFILEPERMISSION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_NIO_FILE_ATTRIBUTE_POSIXFILEPERMISSION)
#define SCAPIX_JAVA_API_JAVA_NIO_FILE_ATTRIBUTE_POSIXFILEPERMISSION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::nio::file::attribute::PosixFilePermission : public jni::object_base<"java/nio/file/attribute/PosixFilePermission",
	java::lang::Enum>
{
public:

	static jni::ref<java::nio::file::attribute::PosixFilePermission> GROUP_EXECUTE() { return get_static_field<"GROUP_EXECUTE", jni::ref<java::nio::file::attribute::PosixFilePermission>>(); }
	static jni::ref<java::nio::file::attribute::PosixFilePermission> GROUP_READ() { return get_static_field<"GROUP_READ", jni::ref<java::nio::file::attribute::PosixFilePermission>>(); }
	static jni::ref<java::nio::file::attribute::PosixFilePermission> GROUP_WRITE() { return get_static_field<"GROUP_WRITE", jni::ref<java::nio::file::attribute::PosixFilePermission>>(); }
	static jni::ref<java::nio::file::attribute::PosixFilePermission> OTHERS_EXECUTE() { return get_static_field<"OTHERS_EXECUTE", jni::ref<java::nio::file::attribute::PosixFilePermission>>(); }
	static jni::ref<java::nio::file::attribute::PosixFilePermission> OTHERS_READ() { return get_static_field<"OTHERS_READ", jni::ref<java::nio::file::attribute::PosixFilePermission>>(); }
	static jni::ref<java::nio::file::attribute::PosixFilePermission> OTHERS_WRITE() { return get_static_field<"OTHERS_WRITE", jni::ref<java::nio::file::attribute::PosixFilePermission>>(); }
	static jni::ref<java::nio::file::attribute::PosixFilePermission> OWNER_EXECUTE() { return get_static_field<"OWNER_EXECUTE", jni::ref<java::nio::file::attribute::PosixFilePermission>>(); }
	static jni::ref<java::nio::file::attribute::PosixFilePermission> OWNER_READ() { return get_static_field<"OWNER_READ", jni::ref<java::nio::file::attribute::PosixFilePermission>>(); }
	static jni::ref<java::nio::file::attribute::PosixFilePermission> OWNER_WRITE() { return get_static_field<"OWNER_WRITE", jni::ref<java::nio::file::attribute::PosixFilePermission>>(); }

	static jni::ref<jni::array<java::nio::file::attribute::PosixFilePermission>> values() { return call_static_method<"values", jni::ref<jni::array<java::nio::file::attribute::PosixFilePermission>>>(); }
	static jni::ref<java::nio::file::attribute::PosixFilePermission> valueOf(jni::ref<java::lang::String> name) { return call_static_method<"valueOf", jni::ref<java::nio::file::attribute::PosixFilePermission>>(name); }

protected:

	PosixFilePermission(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_NIO_FILE_ATTRIBUTE_POSIXFILEPERMISSION
