// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/security/Provider.h>

#ifndef SCAPIX_JAVA_API_JAVA_SECURITY_AUTHPROVIDER_FWD
#define SCAPIX_JAVA_API_JAVA_SECURITY_AUTHPROVIDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::security { class AuthProvider; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::security::AuthProvider>
{
	static constexpr fixed_string class_name = "java/security/AuthProvider";
	using base_classes = std::tuple<scapix::java_api::java::security::Provider>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_SECURITY_AUTHPROVIDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_SECURITY_AUTHPROVIDER)
#define SCAPIX_JAVA_API_JAVA_SECURITY_AUTHPROVIDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/javax/security/auth/Subject.h>
#include <scapix/java_api/javax/security/auth/callback/CallbackHandler.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::security::AuthProvider : public jni::object_base<"java/security/AuthProvider",
	java::security::Provider>
{
public:

	void login(jni::ref<javax::security::auth::Subject> p1, jni::ref<javax::security::auth::callback::CallbackHandler> p2) { return call_method<"login", void>(p1, p2); }
	void logout() { return call_method<"logout", void>(); }
	void setCallbackHandler(jni::ref<javax::security::auth::callback::CallbackHandler> p1) { return call_method<"setCallbackHandler", void>(p1); }

protected:

	AuthProvider(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_SECURITY_AUTHPROVIDER
