// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_ACCESSIBILITYSERVICE_ACCESSIBILITYSERVICE_MAGNIFICATIONCONTROLLER_FWD
#define SCAPIX_JAVA_API_ANDROID_ACCESSIBILITYSERVICE_ACCESSIBILITYSERVICE_MAGNIFICATIONCONTROLLER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::accessibilityservice { class AccessibilityService_MagnificationController; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::accessibilityservice::AccessibilityService_MagnificationController>
{
	static constexpr fixed_string class_name = "android/accessibilityservice/AccessibilityService$MagnificationController";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ACCESSIBILITYSERVICE_ACCESSIBILITYSERVICE_MAGNIFICATIONCONTROLLER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_ACCESSIBILITYSERVICE_ACCESSIBILITYSERVICE_MAGNIFICATIONCONTROLLER)
#define SCAPIX_JAVA_API_ANDROID_ACCESSIBILITYSERVICE_ACCESSIBILITYSERVICE_MAGNIFICATIONCONTROLLER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/accessibilityservice/AccessibilityService_MagnificationController_OnMagnificationChangedListener.h>
#include <scapix/java_api/android/graphics/Region.h>
#include <scapix/java_api/android/os/Handler.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::accessibilityservice::AccessibilityService_MagnificationController : public jni::object_base<"android/accessibilityservice/AccessibilityService$MagnificationController",
	java::lang::Object>
{
public:

	using OnMagnificationChangedListener = AccessibilityService_MagnificationController_OnMagnificationChangedListener;

	void addListener(jni::ref<android::accessibilityservice::AccessibilityService_MagnificationController_OnMagnificationChangedListener> listener) { return call_method<"addListener", void>(listener); }
	void addListener(jni::ref<android::accessibilityservice::AccessibilityService_MagnificationController_OnMagnificationChangedListener> listener, jni::ref<android::os::Handler> handler) { return call_method<"addListener", void>(listener, handler); }
	jboolean removeListener(jni::ref<android::accessibilityservice::AccessibilityService_MagnificationController_OnMagnificationChangedListener> listener) { return call_method<"removeListener", jboolean>(listener); }
	jfloat getScale() { return call_method<"getScale", jfloat>(); }
	jfloat getCenterX() { return call_method<"getCenterX", jfloat>(); }
	jfloat getCenterY() { return call_method<"getCenterY", jfloat>(); }
	jni::ref<android::graphics::Region> getMagnificationRegion() { return call_method<"getMagnificationRegion", jni::ref<android::graphics::Region>>(); }
	jboolean reset(jboolean animate) { return call_method<"reset", jboolean>(animate); }
	jboolean setScale(jfloat scale, jboolean animate) { return call_method<"setScale", jboolean>(scale, animate); }
	jboolean setCenter(jfloat centerX, jfloat centerY, jboolean animate) { return call_method<"setCenter", jboolean>(centerX, centerY, animate); }

protected:

	AccessibilityService_MagnificationController(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ACCESSIBILITYSERVICE_ACCESSIBILITYSERVICE_MAGNIFICATIONCONTROLLER
