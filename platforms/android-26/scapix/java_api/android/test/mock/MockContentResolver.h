// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/content/ContentResolver.h>

#ifndef SCAPIX_JAVA_API_ANDROID_TEST_MOCK_MOCKCONTENTRESOLVER_FWD
#define SCAPIX_JAVA_API_ANDROID_TEST_MOCK_MOCKCONTENTRESOLVER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::test::mock { class MockContentResolver; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::test::mock::MockContentResolver>
{
	static constexpr fixed_string class_name = "android/test/mock/MockContentResolver";
	using base_classes = std::tuple<scapix::java_api::android::content::ContentResolver>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEST_MOCK_MOCKCONTENTRESOLVER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_TEST_MOCK_MOCKCONTENTRESOLVER)
#define SCAPIX_JAVA_API_ANDROID_TEST_MOCK_MOCKCONTENTRESOLVER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/ContentProvider.h>
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/database/ContentObserver.h>
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::test::mock::MockContentResolver : public jni::object_base<"android/test/mock/MockContentResolver",
	android::content::ContentResolver>
{
public:

	static jni::ref<android::test::mock::MockContentResolver> new_object() { return base_::new_object(); }
	static jni::ref<android::test::mock::MockContentResolver> new_object(jni::ref<android::content::Context> context) { return base_::new_object(context); }
	void addProvider(jni::ref<java::lang::String> name, jni::ref<android::content::ContentProvider> provider) { return call_method<"addProvider", void>(name, provider); }
	void notifyChange(jni::ref<android::net::Uri> uri, jni::ref<android::database::ContentObserver> observer, jboolean syncToNetwork) { return call_method<"notifyChange", void>(uri, observer, syncToNetwork); }

protected:

	MockContentResolver(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEST_MOCK_MOCKCONTENTRESOLVER
