// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/junit/framework/TestCase.h>

#ifndef SCAPIX_JAVA_API_ANDROID_TEST_ANDROIDTESTCASE_FWD
#define SCAPIX_JAVA_API_ANDROID_TEST_ANDROIDTESTCASE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::test { class AndroidTestCase; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::test::AndroidTestCase>
{
	static constexpr fixed_string class_name = "android/test/AndroidTestCase";
	using base_classes = std::tuple<scapix::java_api::junit::framework::TestCase>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEST_ANDROIDTESTCASE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_TEST_ANDROIDTESTCASE)
#define SCAPIX_JAVA_API_ANDROID_TEST_ANDROIDTESTCASE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::test::AndroidTestCase : public jni::object_base<"android/test/AndroidTestCase",
	junit::framework::TestCase>
{
public:

	static jni::ref<android::test::AndroidTestCase> new_object() { return base_::new_object(); }
	void testAndroidTestCaseSetupProperly() { return call_method<"testAndroidTestCaseSetupProperly", void>(); }
	void setContext(jni::ref<android::content::Context> context) { return call_method<"setContext", void>(context); }
	jni::ref<android::content::Context> getContext() { return call_method<"getContext", jni::ref<android::content::Context>>(); }
	void assertActivityRequiresPermission(jni::ref<java::lang::String> packageName, jni::ref<java::lang::String> className, jni::ref<java::lang::String> permission) { return call_method<"assertActivityRequiresPermission", void>(packageName, className, permission); }
	void assertReadingContentUriRequiresPermission(jni::ref<android::net::Uri> uri, jni::ref<java::lang::String> permission) { return call_method<"assertReadingContentUriRequiresPermission", void>(uri, permission); }
	void assertWritingContentUriRequiresPermission(jni::ref<android::net::Uri> uri, jni::ref<java::lang::String> permission) { return call_method<"assertWritingContentUriRequiresPermission", void>(uri, permission); }

protected:

	AndroidTestCase(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEST_ANDROIDTESTCASE
