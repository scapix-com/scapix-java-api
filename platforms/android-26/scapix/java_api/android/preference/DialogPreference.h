// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/preference/Preference.h>
#include <scapix/java_api/android/content/DialogInterface_OnClickListener.h>
#include <scapix/java_api/android/content/DialogInterface_OnDismissListener.h>
#include <scapix/java_api/android/preference/PreferenceManager_OnActivityDestroyListener.h>

#ifndef SCAPIX_JAVA_API_ANDROID_PREFERENCE_DIALOGPREFERENCE_FWD
#define SCAPIX_JAVA_API_ANDROID_PREFERENCE_DIALOGPREFERENCE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::preference { class DialogPreference; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::preference::DialogPreference>
{
	static constexpr fixed_string class_name = "android/preference/DialogPreference";
	using base_classes = std::tuple<scapix::java_api::android::preference::Preference, scapix::java_api::android::content::DialogInterface_OnClickListener, scapix::java_api::android::content::DialogInterface_OnDismissListener, scapix::java_api::android::preference::PreferenceManager_OnActivityDestroyListener>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_PREFERENCE_DIALOGPREFERENCE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_PREFERENCE_DIALOGPREFERENCE)
#define SCAPIX_JAVA_API_ANDROID_PREFERENCE_DIALOGPREFERENCE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/app/Dialog.h>
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/content/DialogInterface.h>
#include <scapix/java_api/android/graphics/drawable/Drawable.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::preference::DialogPreference : public jni::object_base<"android/preference/DialogPreference",
	android::preference::Preference,
	android::content::DialogInterface_OnClickListener,
	android::content::DialogInterface_OnDismissListener,
	android::preference::PreferenceManager_OnActivityDestroyListener>
{
public:

	static jni::ref<android::preference::DialogPreference> new_object(jni::ref<android::content::Context> context, jni::ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes) { return base_::new_object(context, attrs, defStyleAttr, defStyleRes); }
	static jni::ref<android::preference::DialogPreference> new_object(jni::ref<android::content::Context> context, jni::ref<android::util::AttributeSet> attrs, jint defStyleAttr) { return base_::new_object(context, attrs, defStyleAttr); }
	static jni::ref<android::preference::DialogPreference> new_object(jni::ref<android::content::Context> context, jni::ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
	static jni::ref<android::preference::DialogPreference> new_object(jni::ref<android::content::Context> context) { return base_::new_object(context); }
	void setDialogTitle(jni::ref<java::lang::CharSequence> dialogTitle) { return call_method<"setDialogTitle", void>(dialogTitle); }
	void setDialogTitle(jint dialogTitleResId) { return call_method<"setDialogTitle", void>(dialogTitleResId); }
	jni::ref<java::lang::CharSequence> getDialogTitle() { return call_method<"getDialogTitle", jni::ref<java::lang::CharSequence>>(); }
	void setDialogMessage(jni::ref<java::lang::CharSequence> dialogMessage) { return call_method<"setDialogMessage", void>(dialogMessage); }
	void setDialogMessage(jint dialogMessageResId) { return call_method<"setDialogMessage", void>(dialogMessageResId); }
	jni::ref<java::lang::CharSequence> getDialogMessage() { return call_method<"getDialogMessage", jni::ref<java::lang::CharSequence>>(); }
	void setDialogIcon(jni::ref<android::graphics::drawable::Drawable> dialogIcon) { return call_method<"setDialogIcon", void>(dialogIcon); }
	void setDialogIcon(jint dialogIconRes) { return call_method<"setDialogIcon", void>(dialogIconRes); }
	jni::ref<android::graphics::drawable::Drawable> getDialogIcon() { return call_method<"getDialogIcon", jni::ref<android::graphics::drawable::Drawable>>(); }
	void setPositiveButtonText(jni::ref<java::lang::CharSequence> positiveButtonText) { return call_method<"setPositiveButtonText", void>(positiveButtonText); }
	void setPositiveButtonText(jint positiveButtonTextResId) { return call_method<"setPositiveButtonText", void>(positiveButtonTextResId); }
	jni::ref<java::lang::CharSequence> getPositiveButtonText() { return call_method<"getPositiveButtonText", jni::ref<java::lang::CharSequence>>(); }
	void setNegativeButtonText(jni::ref<java::lang::CharSequence> negativeButtonText) { return call_method<"setNegativeButtonText", void>(negativeButtonText); }
	void setNegativeButtonText(jint negativeButtonTextResId) { return call_method<"setNegativeButtonText", void>(negativeButtonTextResId); }
	jni::ref<java::lang::CharSequence> getNegativeButtonText() { return call_method<"getNegativeButtonText", jni::ref<java::lang::CharSequence>>(); }
	void setDialogLayoutResource(jint dialogLayoutResId) { return call_method<"setDialogLayoutResource", void>(dialogLayoutResId); }
	jint getDialogLayoutResource() { return call_method<"getDialogLayoutResource", jint>(); }
	void onClick(jni::ref<android::content::DialogInterface> dialog, jint which) { return call_method<"onClick", void>(dialog, which); }
	void onDismiss(jni::ref<android::content::DialogInterface> dialog) { return call_method<"onDismiss", void>(dialog); }
	jni::ref<android::app::Dialog> getDialog() { return call_method<"getDialog", jni::ref<android::app::Dialog>>(); }
	void onActivityDestroy() { return call_method<"onActivityDestroy", void>(); }

protected:

	DialogPreference(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_PREFERENCE_DIALOGPREFERENCE
