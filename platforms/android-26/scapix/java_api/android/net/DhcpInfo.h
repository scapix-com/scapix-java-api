// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_NET_DHCPINFO_FWD
#define SCAPIX_JAVA_API_ANDROID_NET_DHCPINFO_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::net { class DhcpInfo; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::net::DhcpInfo>
{
	static constexpr fixed_string class_name = "android/net/DhcpInfo";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_DHCPINFO_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_NET_DHCPINFO)
#define SCAPIX_JAVA_API_ANDROID_NET_DHCPINFO

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::net::DhcpInfo : public jni::object_base<"android/net/DhcpInfo",
	java::lang::Object,
	android::os::Parcelable>
{
public:

	jint dns1() { return get_field<"dns1", jint>(); }
	void dns1(jint v) { set_field<"dns1", jint>(v); }
	jint dns2() { return get_field<"dns2", jint>(); }
	void dns2(jint v) { set_field<"dns2", jint>(v); }
	jint gateway() { return get_field<"gateway", jint>(); }
	void gateway(jint v) { set_field<"gateway", jint>(v); }
	jint ipAddress() { return get_field<"ipAddress", jint>(); }
	void ipAddress(jint v) { set_field<"ipAddress", jint>(v); }
	jint leaseDuration() { return get_field<"leaseDuration", jint>(); }
	void leaseDuration(jint v) { set_field<"leaseDuration", jint>(v); }
	jint netmask() { return get_field<"netmask", jint>(); }
	void netmask(jint v) { set_field<"netmask", jint>(v); }
	jint serverAddress() { return get_field<"serverAddress", jint>(); }
	void serverAddress(jint v) { set_field<"serverAddress", jint>(v); }

	static jni::ref<android::net::DhcpInfo> new_object() { return base_::new_object(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	void writeToParcel(jni::ref<android::os::Parcel> dest, jint flags) { return call_method<"writeToParcel", void>(dest, flags); }

protected:

	DhcpInfo(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_NET_DHCPINFO
