// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_BLUETOOTH_LE_SCANSETTINGS_BUILDER_FWD
#define SCAPIX_JAVA_API_ANDROID_BLUETOOTH_LE_SCANSETTINGS_BUILDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::bluetooth::le { class ScanSettings_Builder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::bluetooth::le::ScanSettings_Builder>
{
	static constexpr fixed_string class_name = "android/bluetooth/le/ScanSettings$Builder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_BLUETOOTH_LE_SCANSETTINGS_BUILDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_BLUETOOTH_LE_SCANSETTINGS_BUILDER)
#define SCAPIX_JAVA_API_ANDROID_BLUETOOTH_LE_SCANSETTINGS_BUILDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/bluetooth/le/ScanSettings.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::bluetooth::le::ScanSettings_Builder : public jni::object_base<"android/bluetooth/le/ScanSettings$Builder",
	java::lang::Object>
{
public:

	static jni::ref<android::bluetooth::le::ScanSettings_Builder> new_object() { return base_::new_object(); }
	jni::ref<android::bluetooth::le::ScanSettings_Builder> setScanMode(jint scanMode) { return call_method<"setScanMode", jni::ref<android::bluetooth::le::ScanSettings_Builder>>(scanMode); }
	jni::ref<android::bluetooth::le::ScanSettings_Builder> setCallbackType(jint callbackType) { return call_method<"setCallbackType", jni::ref<android::bluetooth::le::ScanSettings_Builder>>(callbackType); }
	jni::ref<android::bluetooth::le::ScanSettings_Builder> setReportDelay(jlong reportDelayMillis) { return call_method<"setReportDelay", jni::ref<android::bluetooth::le::ScanSettings_Builder>>(reportDelayMillis); }
	jni::ref<android::bluetooth::le::ScanSettings_Builder> setNumOfMatches(jint numOfMatches) { return call_method<"setNumOfMatches", jni::ref<android::bluetooth::le::ScanSettings_Builder>>(numOfMatches); }
	jni::ref<android::bluetooth::le::ScanSettings_Builder> setMatchMode(jint matchMode) { return call_method<"setMatchMode", jni::ref<android::bluetooth::le::ScanSettings_Builder>>(matchMode); }
	jni::ref<android::bluetooth::le::ScanSettings_Builder> setLegacy(jboolean legacy) { return call_method<"setLegacy", jni::ref<android::bluetooth::le::ScanSettings_Builder>>(legacy); }
	jni::ref<android::bluetooth::le::ScanSettings_Builder> setPhy(jint phy) { return call_method<"setPhy", jni::ref<android::bluetooth::le::ScanSettings_Builder>>(phy); }
	jni::ref<android::bluetooth::le::ScanSettings> build() { return call_method<"build", jni::ref<android::bluetooth::le::ScanSettings>>(); }

protected:

	ScanSettings_Builder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_BLUETOOTH_LE_SCANSETTINGS_BUILDER
