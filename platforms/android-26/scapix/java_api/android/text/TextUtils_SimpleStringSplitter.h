// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/text/TextUtils_StringSplitter.h>
#include <scapix/java_api/java/util/Iterator.h>

#ifndef SCAPIX_JAVA_API_ANDROID_TEXT_TEXTUTILS_SIMPLESTRINGSPLITTER_FWD
#define SCAPIX_JAVA_API_ANDROID_TEXT_TEXTUTILS_SIMPLESTRINGSPLITTER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::text { class TextUtils_SimpleStringSplitter; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::text::TextUtils_SimpleStringSplitter>
{
	static constexpr fixed_string class_name = "android/text/TextUtils$SimpleStringSplitter";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::text::TextUtils_StringSplitter, scapix::java_api::java::util::Iterator>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEXT_TEXTUTILS_SIMPLESTRINGSPLITTER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_TEXT_TEXTUTILS_SIMPLESTRINGSPLITTER)
#define SCAPIX_JAVA_API_ANDROID_TEXT_TEXTUTILS_SIMPLESTRINGSPLITTER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::text::TextUtils_SimpleStringSplitter : public jni::object_base<"android/text/TextUtils$SimpleStringSplitter",
	java::lang::Object,
	android::text::TextUtils_StringSplitter,
	java::util::Iterator>
{
public:

	static jni::ref<android::text::TextUtils_SimpleStringSplitter> new_object(jchar delimiter) { return base_::new_object(delimiter); }
	void setString(jni::ref<java::lang::String> string) { return call_method<"setString", void>(string); }
	jni::ref<java::util::Iterator> iterator() { return call_method<"iterator", jni::ref<java::util::Iterator>>(); }
	jboolean hasNext() { return call_method<"hasNext", jboolean>(); }
	jni::ref<java::lang::String> next() { return call_method<"next", jni::ref<java::lang::String>>(); }
	void remove() { return call_method<"remove", void>(); }

protected:

	TextUtils_SimpleStringSplitter(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEXT_TEXTUTILS_SIMPLESTRINGSPLITTER
