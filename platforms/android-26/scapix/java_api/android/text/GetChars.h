// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/CharSequence.h>

#ifndef SCAPIX_JAVA_API_ANDROID_TEXT_GETCHARS_FWD
#define SCAPIX_JAVA_API_ANDROID_TEXT_GETCHARS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::text { class GetChars; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::text::GetChars>
{
	static constexpr fixed_string class_name = "android/text/GetChars";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::lang::CharSequence>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEXT_GETCHARS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_TEXT_GETCHARS)
#define SCAPIX_JAVA_API_ANDROID_TEXT_GETCHARS

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::text::GetChars : public jni::object_base<"android/text/GetChars",
	java::lang::Object,
	java::lang::CharSequence>
{
public:

	void getChars(jint p1, jint p2, jni::ref<jni::array<jchar>> p3, jint p4) { return call_method<"getChars", void>(p1, p2, p3, p4); }

protected:

	GetChars(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEXT_GETCHARS
