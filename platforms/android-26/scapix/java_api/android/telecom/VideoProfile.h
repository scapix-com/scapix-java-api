// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_TELECOM_VIDEOPROFILE_FWD
#define SCAPIX_JAVA_API_ANDROID_TELECOM_VIDEOPROFILE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::telecom { class VideoProfile; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::telecom::VideoProfile>
{
	static constexpr fixed_string class_name = "android/telecom/VideoProfile";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TELECOM_VIDEOPROFILE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_TELECOM_VIDEOPROFILE)
#define SCAPIX_JAVA_API_ANDROID_TELECOM_VIDEOPROFILE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/android/telecom/VideoProfile_CameraCapabilities.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::telecom::VideoProfile : public jni::object_base<"android/telecom/VideoProfile",
	java::lang::Object,
	android::os::Parcelable>
{
public:

	using CameraCapabilities = VideoProfile_CameraCapabilities;

	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }
	static jint QUALITY_DEFAULT() { return get_static_field<"QUALITY_DEFAULT", jint>(); }
	static jint QUALITY_HIGH() { return get_static_field<"QUALITY_HIGH", jint>(); }
	static jint QUALITY_LOW() { return get_static_field<"QUALITY_LOW", jint>(); }
	static jint QUALITY_MEDIUM() { return get_static_field<"QUALITY_MEDIUM", jint>(); }
	static jint STATE_AUDIO_ONLY() { return get_static_field<"STATE_AUDIO_ONLY", jint>(); }
	static jint STATE_BIDIRECTIONAL() { return get_static_field<"STATE_BIDIRECTIONAL", jint>(); }
	static jint STATE_PAUSED() { return get_static_field<"STATE_PAUSED", jint>(); }
	static jint STATE_RX_ENABLED() { return get_static_field<"STATE_RX_ENABLED", jint>(); }
	static jint STATE_TX_ENABLED() { return get_static_field<"STATE_TX_ENABLED", jint>(); }

	static jni::ref<android::telecom::VideoProfile> new_object(jint videoState) { return base_::new_object(videoState); }
	static jni::ref<android::telecom::VideoProfile> new_object(jint videoState, jint quality) { return base_::new_object(videoState, quality); }
	jint getVideoState() { return call_method<"getVideoState", jint>(); }
	jint getQuality() { return call_method<"getQuality", jint>(); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	void writeToParcel(jni::ref<android::os::Parcel> dest, jint flags) { return call_method<"writeToParcel", void>(dest, flags); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> videoStateToString(jint videoState) { return call_static_method<"videoStateToString", jni::ref<java::lang::String>>(videoState); }
	static jboolean isAudioOnly(jint videoState) { return call_static_method<"isAudioOnly", jboolean>(videoState); }
	static jboolean isVideo(jint videoState) { return call_static_method<"isVideo", jboolean>(videoState); }
	static jboolean isTransmissionEnabled(jint videoState) { return call_static_method<"isTransmissionEnabled", jboolean>(videoState); }
	static jboolean isReceptionEnabled(jint videoState) { return call_static_method<"isReceptionEnabled", jboolean>(videoState); }
	static jboolean isBidirectional(jint videoState) { return call_static_method<"isBidirectional", jboolean>(videoState); }
	static jboolean isPaused(jint videoState) { return call_static_method<"isPaused", jboolean>(videoState); }

protected:

	VideoProfile(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TELECOM_VIDEOPROFILE
