// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_CONTENT_PM_PACKAGESTATS_FWD
#define SCAPIX_JAVA_API_ANDROID_CONTENT_PM_PACKAGESTATS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::content::pm { class PackageStats; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::content::pm::PackageStats>
{
	static constexpr fixed_string class_name = "android/content/pm/PackageStats";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_CONTENT_PM_PACKAGESTATS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_CONTENT_PM_PACKAGESTATS)
#define SCAPIX_JAVA_API_ANDROID_CONTENT_PM_PACKAGESTATS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::content::pm::PackageStats : public jni::object_base<"android/content/pm/PackageStats",
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }
	jlong cacheSize() { return get_field<"cacheSize", jlong>(); }
	void cacheSize(jlong v) { set_field<"cacheSize", jlong>(v); }
	jlong codeSize() { return get_field<"codeSize", jlong>(); }
	void codeSize(jlong v) { set_field<"codeSize", jlong>(v); }
	jlong dataSize() { return get_field<"dataSize", jlong>(); }
	void dataSize(jlong v) { set_field<"dataSize", jlong>(v); }
	jlong externalCacheSize() { return get_field<"externalCacheSize", jlong>(); }
	void externalCacheSize(jlong v) { set_field<"externalCacheSize", jlong>(v); }
	jlong externalCodeSize() { return get_field<"externalCodeSize", jlong>(); }
	void externalCodeSize(jlong v) { set_field<"externalCodeSize", jlong>(v); }
	jlong externalDataSize() { return get_field<"externalDataSize", jlong>(); }
	void externalDataSize(jlong v) { set_field<"externalDataSize", jlong>(v); }
	jlong externalMediaSize() { return get_field<"externalMediaSize", jlong>(); }
	void externalMediaSize(jlong v) { set_field<"externalMediaSize", jlong>(v); }
	jlong externalObbSize() { return get_field<"externalObbSize", jlong>(); }
	void externalObbSize(jlong v) { set_field<"externalObbSize", jlong>(v); }
	jni::ref<java::lang::String> packageName() { return get_field<"packageName", jni::ref<java::lang::String>>(); }
	void packageName(jni::ref<java::lang::String> v) { set_field<"packageName", jni::ref<java::lang::String>>(v); }

	static jni::ref<android::content::pm::PackageStats> new_object(jni::ref<java::lang::String> pkgName) { return base_::new_object(pkgName); }
	static jni::ref<android::content::pm::PackageStats> new_object(jni::ref<android::os::Parcel> source) { return base_::new_object(source); }
	static jni::ref<android::content::pm::PackageStats> new_object(jni::ref<android::content::pm::PackageStats> pStats) { return base_::new_object(pStats); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	void writeToParcel(jni::ref<android::os::Parcel> dest, jint parcelableFlags) { return call_method<"writeToParcel", void>(dest, parcelableFlags); }
	jboolean equals(jni::ref<java::lang::Object> obj) { return call_method<"equals", jboolean>(obj); }
	jint hashCode() { return call_method<"hashCode", jint>(); }

protected:

	PackageStats(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_CONTENT_PM_PACKAGESTATS
