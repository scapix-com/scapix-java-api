// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_VIEW_INPUTMETHOD_EXTRACTEDTEXT_FWD
#define SCAPIX_JAVA_API_ANDROID_VIEW_INPUTMETHOD_EXTRACTEDTEXT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::view::inputmethod { class ExtractedText; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::view::inputmethod::ExtractedText>
{
	static constexpr fixed_string class_name = "android/view/inputmethod/ExtractedText";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_INPUTMETHOD_EXTRACTEDTEXT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_VIEW_INPUTMETHOD_EXTRACTEDTEXT)
#define SCAPIX_JAVA_API_ANDROID_VIEW_INPUTMETHOD_EXTRACTEDTEXT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::view::inputmethod::ExtractedText : public jni::object_base<"android/view/inputmethod/ExtractedText",
	java::lang::Object,
	android::os::Parcelable>
{
public:

	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }
	static jint FLAG_SELECTING() { return get_static_field<"FLAG_SELECTING", jint>(); }
	static jint FLAG_SINGLE_LINE() { return get_static_field<"FLAG_SINGLE_LINE", jint>(); }
	jint flags() { return get_field<"flags", jint>(); }
	void flags(jint v) { set_field<"flags", jint>(v); }
	jint partialEndOffset() { return get_field<"partialEndOffset", jint>(); }
	void partialEndOffset(jint v) { set_field<"partialEndOffset", jint>(v); }
	jint partialStartOffset() { return get_field<"partialStartOffset", jint>(); }
	void partialStartOffset(jint v) { set_field<"partialStartOffset", jint>(v); }
	jint selectionEnd() { return get_field<"selectionEnd", jint>(); }
	void selectionEnd(jint v) { set_field<"selectionEnd", jint>(v); }
	jint selectionStart() { return get_field<"selectionStart", jint>(); }
	void selectionStart(jint v) { set_field<"selectionStart", jint>(v); }
	jint startOffset() { return get_field<"startOffset", jint>(); }
	void startOffset(jint v) { set_field<"startOffset", jint>(v); }
	jni::ref<java::lang::CharSequence> text() { return get_field<"text", jni::ref<java::lang::CharSequence>>(); }
	void text(jni::ref<java::lang::CharSequence> v) { set_field<"text", jni::ref<java::lang::CharSequence>>(v); }

	static jni::ref<android::view::inputmethod::ExtractedText> new_object() { return base_::new_object(); }
	void writeToParcel(jni::ref<android::os::Parcel> dest, jint flags) { return call_method<"writeToParcel", void>(dest, flags); }
	jint describeContents() { return call_method<"describeContents", jint>(); }

protected:

	ExtractedText(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_INPUTMETHOD_EXTRACTEDTEXT
