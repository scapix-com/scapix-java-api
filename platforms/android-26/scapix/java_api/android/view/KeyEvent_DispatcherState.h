// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_VIEW_KEYEVENT_DISPATCHERSTATE_FWD
#define SCAPIX_JAVA_API_ANDROID_VIEW_KEYEVENT_DISPATCHERSTATE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::view { class KeyEvent_DispatcherState; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::view::KeyEvent_DispatcherState>
{
	static constexpr fixed_string class_name = "android/view/KeyEvent$DispatcherState";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_KEYEVENT_DISPATCHERSTATE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_VIEW_KEYEVENT_DISPATCHERSTATE)
#define SCAPIX_JAVA_API_ANDROID_VIEW_KEYEVENT_DISPATCHERSTATE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/view/KeyEvent.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::view::KeyEvent_DispatcherState : public jni::object_base<"android/view/KeyEvent$DispatcherState",
	java::lang::Object>
{
public:

	static jni::ref<android::view::KeyEvent_DispatcherState> new_object() { return base_::new_object(); }
	void reset() { return call_method<"reset", void>(); }
	void reset(jni::ref<java::lang::Object> target) { return call_method<"reset", void>(target); }
	void startTracking(jni::ref<android::view::KeyEvent> event, jni::ref<java::lang::Object> target) { return call_method<"startTracking", void>(event, target); }
	jboolean isTracking(jni::ref<android::view::KeyEvent> event) { return call_method<"isTracking", jboolean>(event); }
	void performedLongPress(jni::ref<android::view::KeyEvent> event) { return call_method<"performedLongPress", void>(event); }
	void handleUpEvent(jni::ref<android::view::KeyEvent> event) { return call_method<"handleUpEvent", void>(event); }

protected:

	KeyEvent_DispatcherState(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_VIEW_KEYEVENT_DISPATCHERSTATE
