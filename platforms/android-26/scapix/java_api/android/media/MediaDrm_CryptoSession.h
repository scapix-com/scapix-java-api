// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIADRM_CRYPTOSESSION_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIADRM_CRYPTOSESSION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media { class MediaDrm_CryptoSession; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::MediaDrm_CryptoSession>
{
	static constexpr fixed_string class_name = "android/media/MediaDrm$CryptoSession";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIADRM_CRYPTOSESSION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIADRM_CRYPTOSESSION)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIADRM_CRYPTOSESSION

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::MediaDrm_CryptoSession : public jni::object_base<"android/media/MediaDrm$CryptoSession",
	java::lang::Object>
{
public:

	jni::ref<jni::array<jbyte>> encrypt(jni::ref<jni::array<jbyte>> keyid, jni::ref<jni::array<jbyte>> input, jni::ref<jni::array<jbyte>> iv) { return call_method<"encrypt", jni::ref<jni::array<jbyte>>>(keyid, input, iv); }
	jni::ref<jni::array<jbyte>> decrypt(jni::ref<jni::array<jbyte>> keyid, jni::ref<jni::array<jbyte>> input, jni::ref<jni::array<jbyte>> iv) { return call_method<"decrypt", jni::ref<jni::array<jbyte>>>(keyid, input, iv); }
	jni::ref<jni::array<jbyte>> sign(jni::ref<jni::array<jbyte>> keyid, jni::ref<jni::array<jbyte>> message) { return call_method<"sign", jni::ref<jni::array<jbyte>>>(keyid, message); }
	jboolean verify(jni::ref<jni::array<jbyte>> keyid, jni::ref<jni::array<jbyte>> message, jni::ref<jni::array<jbyte>> signature) { return call_method<"verify", jboolean>(keyid, message, signature); }

protected:

	MediaDrm_CryptoSession(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIADRM_CRYPTOSESSION
