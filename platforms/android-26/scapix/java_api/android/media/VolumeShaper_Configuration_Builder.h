// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_VOLUMESHAPER_CONFIGURATION_BUILDER_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_VOLUMESHAPER_CONFIGURATION_BUILDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media { class VolumeShaper_Configuration_Builder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::VolumeShaper_Configuration_Builder>
{
	static constexpr fixed_string class_name = "android/media/VolumeShaper$Configuration$Builder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_VOLUMESHAPER_CONFIGURATION_BUILDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_VOLUMESHAPER_CONFIGURATION_BUILDER)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_VOLUMESHAPER_CONFIGURATION_BUILDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/media/VolumeShaper_Configuration.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::VolumeShaper_Configuration_Builder : public jni::object_base<"android/media/VolumeShaper$Configuration$Builder",
	java::lang::Object>
{
public:

	static jni::ref<android::media::VolumeShaper_Configuration_Builder> new_object() { return base_::new_object(); }
	static jni::ref<android::media::VolumeShaper_Configuration_Builder> new_object(jni::ref<android::media::VolumeShaper_Configuration> configuration) { return base_::new_object(configuration); }
	jni::ref<android::media::VolumeShaper_Configuration_Builder> setInterpolatorType(jint interpolatorType) { return call_method<"setInterpolatorType", jni::ref<android::media::VolumeShaper_Configuration_Builder>>(interpolatorType); }
	jni::ref<android::media::VolumeShaper_Configuration_Builder> setDuration(jlong durationMillis) { return call_method<"setDuration", jni::ref<android::media::VolumeShaper_Configuration_Builder>>(durationMillis); }
	jni::ref<android::media::VolumeShaper_Configuration_Builder> setCurve(jni::ref<jni::array<jfloat>> times, jni::ref<jni::array<jfloat>> volumes) { return call_method<"setCurve", jni::ref<android::media::VolumeShaper_Configuration_Builder>>(times, volumes); }
	jni::ref<android::media::VolumeShaper_Configuration_Builder> reflectTimes() { return call_method<"reflectTimes", jni::ref<android::media::VolumeShaper_Configuration_Builder>>(); }
	jni::ref<android::media::VolumeShaper_Configuration_Builder> invertVolumes() { return call_method<"invertVolumes", jni::ref<android::media::VolumeShaper_Configuration_Builder>>(); }
	jni::ref<android::media::VolumeShaper_Configuration_Builder> scaleToEndVolume(jfloat volume) { return call_method<"scaleToEndVolume", jni::ref<android::media::VolumeShaper_Configuration_Builder>>(volume); }
	jni::ref<android::media::VolumeShaper_Configuration_Builder> scaleToStartVolume(jfloat volume) { return call_method<"scaleToStartVolume", jni::ref<android::media::VolumeShaper_Configuration_Builder>>(volume); }
	jni::ref<android::media::VolumeShaper_Configuration> build() { return call_method<"build", jni::ref<android::media::VolumeShaper_Configuration>>(); }

protected:

	VolumeShaper_Configuration_Builder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_VOLUMESHAPER_CONFIGURATION_BUILDER
