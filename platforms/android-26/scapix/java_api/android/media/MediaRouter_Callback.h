// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIAROUTER_CALLBACK_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIAROUTER_CALLBACK_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media { class MediaRouter_Callback; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::MediaRouter_Callback>
{
	static constexpr fixed_string class_name = "android/media/MediaRouter$Callback";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIAROUTER_CALLBACK_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIAROUTER_CALLBACK)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIAROUTER_CALLBACK

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/media/MediaRouter.h>
#include <scapix/java_api/android/media/MediaRouter_RouteGroup.h>
#include <scapix/java_api/android/media/MediaRouter_RouteInfo.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::MediaRouter_Callback : public jni::object_base<"android/media/MediaRouter$Callback",
	java::lang::Object>
{
public:

	static jni::ref<android::media::MediaRouter_Callback> new_object() { return base_::new_object(); }
	void onRouteSelected(jni::ref<android::media::MediaRouter> p1, jint p2, jni::ref<android::media::MediaRouter_RouteInfo> p3) { return call_method<"onRouteSelected", void>(p1, p2, p3); }
	void onRouteUnselected(jni::ref<android::media::MediaRouter> p1, jint p2, jni::ref<android::media::MediaRouter_RouteInfo> p3) { return call_method<"onRouteUnselected", void>(p1, p2, p3); }
	void onRouteAdded(jni::ref<android::media::MediaRouter> p1, jni::ref<android::media::MediaRouter_RouteInfo> p2) { return call_method<"onRouteAdded", void>(p1, p2); }
	void onRouteRemoved(jni::ref<android::media::MediaRouter> p1, jni::ref<android::media::MediaRouter_RouteInfo> p2) { return call_method<"onRouteRemoved", void>(p1, p2); }
	void onRouteChanged(jni::ref<android::media::MediaRouter> p1, jni::ref<android::media::MediaRouter_RouteInfo> p2) { return call_method<"onRouteChanged", void>(p1, p2); }
	void onRouteGrouped(jni::ref<android::media::MediaRouter> p1, jni::ref<android::media::MediaRouter_RouteInfo> p2, jni::ref<android::media::MediaRouter_RouteGroup> p3, jint p4) { return call_method<"onRouteGrouped", void>(p1, p2, p3, p4); }
	void onRouteUngrouped(jni::ref<android::media::MediaRouter> p1, jni::ref<android::media::MediaRouter_RouteInfo> p2, jni::ref<android::media::MediaRouter_RouteGroup> p3) { return call_method<"onRouteUngrouped", void>(p1, p2, p3); }
	void onRouteVolumeChanged(jni::ref<android::media::MediaRouter> p1, jni::ref<android::media::MediaRouter_RouteInfo> p2) { return call_method<"onRouteVolumeChanged", void>(p1, p2); }
	void onRoutePresentationDisplayChanged(jni::ref<android::media::MediaRouter> router, jni::ref<android::media::MediaRouter_RouteInfo> info) { return call_method<"onRoutePresentationDisplayChanged", void>(router, info); }

protected:

	MediaRouter_Callback(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIAROUTER_CALLBACK
