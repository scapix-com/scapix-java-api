// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/AutoCloseable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIADESCRAMBLER_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIADESCRAMBLER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media { class MediaDescrambler; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::MediaDescrambler>
{
	static constexpr fixed_string class_name = "android/media/MediaDescrambler";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::lang::AutoCloseable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIADESCRAMBLER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIADESCRAMBLER)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIADESCRAMBLER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/media/MediaCas_Session.h>
#include <scapix/java_api/android/media/MediaCodec_CryptoInfo.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/nio/ByteBuffer.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::MediaDescrambler : public jni::object_base<"android/media/MediaDescrambler",
	java::lang::Object,
	java::lang::AutoCloseable>
{
public:

	static jni::ref<android::media::MediaDescrambler> new_object(jint CA_system_id) { return base_::new_object(CA_system_id); }
	jboolean requiresSecureDecoderComponent(jni::ref<java::lang::String> mime) { return call_method<"requiresSecureDecoderComponent", jboolean>(mime); }
	void setMediaCasSession(jni::ref<android::media::MediaCas_Session> session) { return call_method<"setMediaCasSession", void>(session); }
	jint descramble(jni::ref<java::nio::ByteBuffer> srcBuf, jni::ref<java::nio::ByteBuffer> dstBuf, jni::ref<android::media::MediaCodec_CryptoInfo> cryptoInfo) { return call_method<"descramble", jint>(srcBuf, dstBuf, cryptoInfo); }
	void close() { return call_method<"close", void>(); }

protected:

	MediaDescrambler(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIADESCRAMBLER
