// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIAMETADATA_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIAMETADATA_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media { class MediaMetadata; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::MediaMetadata>
{
	static constexpr fixed_string class_name = "android/media/MediaMetadata";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIAMETADATA_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIAMETADATA)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIAMETADATA

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/graphics/Bitmap.h>
#include <scapix/java_api/android/media/MediaDescription.h>
#include <scapix/java_api/android/media/Rating.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Set.h>
#include <scapix/java_api/android/media/MediaMetadata_Builder.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::MediaMetadata : public jni::object_base<"android/media/MediaMetadata",
	java::lang::Object,
	android::os::Parcelable>
{
public:

	using Builder = MediaMetadata_Builder;

	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }
	static jni::ref<java::lang::String> METADATA_KEY_ALBUM() { return get_static_field<"METADATA_KEY_ALBUM", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> METADATA_KEY_ALBUM_ART() { return get_static_field<"METADATA_KEY_ALBUM_ART", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> METADATA_KEY_ALBUM_ARTIST() { return get_static_field<"METADATA_KEY_ALBUM_ARTIST", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> METADATA_KEY_ALBUM_ART_URI() { return get_static_field<"METADATA_KEY_ALBUM_ART_URI", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> METADATA_KEY_ART() { return get_static_field<"METADATA_KEY_ART", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> METADATA_KEY_ARTIST() { return get_static_field<"METADATA_KEY_ARTIST", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> METADATA_KEY_ART_URI() { return get_static_field<"METADATA_KEY_ART_URI", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> METADATA_KEY_AUTHOR() { return get_static_field<"METADATA_KEY_AUTHOR", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> METADATA_KEY_BT_FOLDER_TYPE() { return get_static_field<"METADATA_KEY_BT_FOLDER_TYPE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> METADATA_KEY_COMPILATION() { return get_static_field<"METADATA_KEY_COMPILATION", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> METADATA_KEY_COMPOSER() { return get_static_field<"METADATA_KEY_COMPOSER", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> METADATA_KEY_DATE() { return get_static_field<"METADATA_KEY_DATE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> METADATA_KEY_DISC_NUMBER() { return get_static_field<"METADATA_KEY_DISC_NUMBER", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> METADATA_KEY_DISPLAY_DESCRIPTION() { return get_static_field<"METADATA_KEY_DISPLAY_DESCRIPTION", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> METADATA_KEY_DISPLAY_ICON() { return get_static_field<"METADATA_KEY_DISPLAY_ICON", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> METADATA_KEY_DISPLAY_ICON_URI() { return get_static_field<"METADATA_KEY_DISPLAY_ICON_URI", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> METADATA_KEY_DISPLAY_SUBTITLE() { return get_static_field<"METADATA_KEY_DISPLAY_SUBTITLE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> METADATA_KEY_DISPLAY_TITLE() { return get_static_field<"METADATA_KEY_DISPLAY_TITLE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> METADATA_KEY_DURATION() { return get_static_field<"METADATA_KEY_DURATION", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> METADATA_KEY_GENRE() { return get_static_field<"METADATA_KEY_GENRE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> METADATA_KEY_MEDIA_ID() { return get_static_field<"METADATA_KEY_MEDIA_ID", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> METADATA_KEY_MEDIA_URI() { return get_static_field<"METADATA_KEY_MEDIA_URI", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> METADATA_KEY_NUM_TRACKS() { return get_static_field<"METADATA_KEY_NUM_TRACKS", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> METADATA_KEY_RATING() { return get_static_field<"METADATA_KEY_RATING", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> METADATA_KEY_TITLE() { return get_static_field<"METADATA_KEY_TITLE", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> METADATA_KEY_TRACK_NUMBER() { return get_static_field<"METADATA_KEY_TRACK_NUMBER", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> METADATA_KEY_USER_RATING() { return get_static_field<"METADATA_KEY_USER_RATING", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> METADATA_KEY_WRITER() { return get_static_field<"METADATA_KEY_WRITER", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> METADATA_KEY_YEAR() { return get_static_field<"METADATA_KEY_YEAR", jni::ref<java::lang::String>>(); }

	jboolean containsKey(jni::ref<java::lang::String> key) { return call_method<"containsKey", jboolean>(key); }
	jni::ref<java::lang::CharSequence> getText(jni::ref<java::lang::String> key) { return call_method<"getText", jni::ref<java::lang::CharSequence>>(key); }
	jni::ref<java::lang::String> getString(jni::ref<java::lang::String> key) { return call_method<"getString", jni::ref<java::lang::String>>(key); }
	jlong getLong(jni::ref<java::lang::String> key) { return call_method<"getLong", jlong>(key); }
	jni::ref<android::media::Rating> getRating(jni::ref<java::lang::String> key) { return call_method<"getRating", jni::ref<android::media::Rating>>(key); }
	jni::ref<android::graphics::Bitmap> getBitmap(jni::ref<java::lang::String> key) { return call_method<"getBitmap", jni::ref<android::graphics::Bitmap>>(key); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	void writeToParcel(jni::ref<android::os::Parcel> dest, jint flags) { return call_method<"writeToParcel", void>(dest, flags); }
	jint size() { return call_method<"size", jint>(); }
	jni::ref<java::util::Set> keySet() { return call_method<"keySet", jni::ref<java::util::Set>>(); }
	jni::ref<android::media::MediaDescription> getDescription() { return call_method<"getDescription", jni::ref<android::media::MediaDescription>>(); }

protected:

	MediaMetadata(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_MEDIAMETADATA
