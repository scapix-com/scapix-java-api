// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_PROVIDER_FONTSCONTRACT_FWD
#define SCAPIX_JAVA_API_ANDROID_PROVIDER_FONTSCONTRACT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::provider { class FontsContract; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::provider::FontsContract>
{
	static constexpr fixed_string class_name = "android/provider/FontsContract";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_PROVIDER_FONTSCONTRACT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_PROVIDER_FONTSCONTRACT)
#define SCAPIX_JAVA_API_ANDROID_PROVIDER_FONTSCONTRACT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/graphics/Typeface.h>
#include <scapix/java_api/android/os/CancellationSignal.h>
#include <scapix/java_api/android/os/Handler.h>
#include <scapix/java_api/android/provider/FontRequest.h>
#include <scapix/java_api/android/provider/FontsContract_FontFamilyResult.h>
#include <scapix/java_api/android/provider/FontsContract_FontInfo.h>
#include <scapix/java_api/android/provider/FontsContract_FontRequestCallback.h>
#include <scapix/java_api/android/provider/FontsContract_Columns.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::provider::FontsContract : public jni::object_base<"android/provider/FontsContract",
	java::lang::Object>
{
public:

	using FontRequestCallback = FontsContract_FontRequestCallback;
	using FontFamilyResult = FontsContract_FontFamilyResult;
	using FontInfo = FontsContract_FontInfo;
	using Columns = FontsContract_Columns;

	static void requestFonts(jni::ref<android::content::Context> context, jni::ref<android::provider::FontRequest> request, jni::ref<android::os::Handler> handler, jni::ref<android::os::CancellationSignal> cancellationSignal, jni::ref<android::provider::FontsContract_FontRequestCallback> callback) { return call_static_method<"requestFonts", void>(context, request, handler, cancellationSignal, callback); }
	static jni::ref<android::provider::FontsContract_FontFamilyResult> fetchFonts(jni::ref<android::content::Context> context, jni::ref<android::os::CancellationSignal> cancellationSignal, jni::ref<android::provider::FontRequest> request) { return call_static_method<"fetchFonts", jni::ref<android::provider::FontsContract_FontFamilyResult>>(context, cancellationSignal, request); }
	static jni::ref<android::graphics::Typeface> buildTypeface(jni::ref<android::content::Context> context, jni::ref<android::os::CancellationSignal> cancellationSignal, jni::ref<jni::array<android::provider::FontsContract_FontInfo>> fonts) { return call_static_method<"buildTypeface", jni::ref<android::graphics::Typeface>>(context, cancellationSignal, fonts); }

protected:

	FontsContract(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_PROVIDER_FONTSCONTRACT
