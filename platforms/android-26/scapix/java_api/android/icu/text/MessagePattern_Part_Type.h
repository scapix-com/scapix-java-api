// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Enum.h>

#ifndef SCAPIX_JAVA_API_ANDROID_ICU_TEXT_MESSAGEPATTERN_PART_TYPE_FWD
#define SCAPIX_JAVA_API_ANDROID_ICU_TEXT_MESSAGEPATTERN_PART_TYPE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::icu::text { class MessagePattern_Part_Type; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::icu::text::MessagePattern_Part_Type>
{
	static constexpr fixed_string class_name = "android/icu/text/MessagePattern$Part$Type";
	using base_classes = std::tuple<scapix::java_api::java::lang::Enum>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_TEXT_MESSAGEPATTERN_PART_TYPE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_ICU_TEXT_MESSAGEPATTERN_PART_TYPE)
#define SCAPIX_JAVA_API_ANDROID_ICU_TEXT_MESSAGEPATTERN_PART_TYPE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::icu::text::MessagePattern_Part_Type : public jni::object_base<"android/icu/text/MessagePattern$Part$Type",
	java::lang::Enum>
{
public:

	static jni::ref<android::icu::text::MessagePattern_Part_Type> ARG_DOUBLE() { return get_static_field<"ARG_DOUBLE", jni::ref<android::icu::text::MessagePattern_Part_Type>>(); }
	static jni::ref<android::icu::text::MessagePattern_Part_Type> ARG_INT() { return get_static_field<"ARG_INT", jni::ref<android::icu::text::MessagePattern_Part_Type>>(); }
	static jni::ref<android::icu::text::MessagePattern_Part_Type> ARG_LIMIT() { return get_static_field<"ARG_LIMIT", jni::ref<android::icu::text::MessagePattern_Part_Type>>(); }
	static jni::ref<android::icu::text::MessagePattern_Part_Type> ARG_NAME() { return get_static_field<"ARG_NAME", jni::ref<android::icu::text::MessagePattern_Part_Type>>(); }
	static jni::ref<android::icu::text::MessagePattern_Part_Type> ARG_NUMBER() { return get_static_field<"ARG_NUMBER", jni::ref<android::icu::text::MessagePattern_Part_Type>>(); }
	static jni::ref<android::icu::text::MessagePattern_Part_Type> ARG_SELECTOR() { return get_static_field<"ARG_SELECTOR", jni::ref<android::icu::text::MessagePattern_Part_Type>>(); }
	static jni::ref<android::icu::text::MessagePattern_Part_Type> ARG_START() { return get_static_field<"ARG_START", jni::ref<android::icu::text::MessagePattern_Part_Type>>(); }
	static jni::ref<android::icu::text::MessagePattern_Part_Type> ARG_STYLE() { return get_static_field<"ARG_STYLE", jni::ref<android::icu::text::MessagePattern_Part_Type>>(); }
	static jni::ref<android::icu::text::MessagePattern_Part_Type> ARG_TYPE() { return get_static_field<"ARG_TYPE", jni::ref<android::icu::text::MessagePattern_Part_Type>>(); }
	static jni::ref<android::icu::text::MessagePattern_Part_Type> INSERT_CHAR() { return get_static_field<"INSERT_CHAR", jni::ref<android::icu::text::MessagePattern_Part_Type>>(); }
	static jni::ref<android::icu::text::MessagePattern_Part_Type> MSG_LIMIT() { return get_static_field<"MSG_LIMIT", jni::ref<android::icu::text::MessagePattern_Part_Type>>(); }
	static jni::ref<android::icu::text::MessagePattern_Part_Type> MSG_START() { return get_static_field<"MSG_START", jni::ref<android::icu::text::MessagePattern_Part_Type>>(); }
	static jni::ref<android::icu::text::MessagePattern_Part_Type> REPLACE_NUMBER() { return get_static_field<"REPLACE_NUMBER", jni::ref<android::icu::text::MessagePattern_Part_Type>>(); }
	static jni::ref<android::icu::text::MessagePattern_Part_Type> SKIP_SYNTAX() { return get_static_field<"SKIP_SYNTAX", jni::ref<android::icu::text::MessagePattern_Part_Type>>(); }

	static jni::ref<jni::array<android::icu::text::MessagePattern_Part_Type>> values() { return call_static_method<"values", jni::ref<jni::array<android::icu::text::MessagePattern_Part_Type>>>(); }
	static jni::ref<android::icu::text::MessagePattern_Part_Type> valueOf(jni::ref<java::lang::String> name) { return call_static_method<"valueOf", jni::ref<android::icu::text::MessagePattern_Part_Type>>(name); }
	jboolean hasNumericValue() { return call_method<"hasNumericValue", jboolean>(); }

protected:

	MessagePattern_Part_Type(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_TEXT_MESSAGEPATTERN_PART_TYPE
