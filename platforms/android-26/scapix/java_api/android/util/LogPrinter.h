// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/util/Printer.h>

#ifndef SCAPIX_JAVA_API_ANDROID_UTIL_LOGPRINTER_FWD
#define SCAPIX_JAVA_API_ANDROID_UTIL_LOGPRINTER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::util { class LogPrinter; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::util::LogPrinter>
{
	static constexpr fixed_string class_name = "android/util/LogPrinter";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::util::Printer>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_UTIL_LOGPRINTER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_UTIL_LOGPRINTER)
#define SCAPIX_JAVA_API_ANDROID_UTIL_LOGPRINTER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::util::LogPrinter : public jni::object_base<"android/util/LogPrinter",
	java::lang::Object,
	android::util::Printer>
{
public:

	static jni::ref<android::util::LogPrinter> new_object(jint priority, jni::ref<java::lang::String> tag) { return base_::new_object(priority, tag); }
	void println(jni::ref<java::lang::String> x) { return call_method<"println", void>(x); }

protected:

	LogPrinter(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_UTIL_LOGPRINTER
