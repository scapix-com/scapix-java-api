// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_DALVIK_BYTECODE_OPCODEINFO_FWD
#define SCAPIX_JAVA_API_DALVIK_BYTECODE_OPCODEINFO_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::dalvik::bytecode { class OpcodeInfo; }

template<>
struct scapix::jni::object_traits<scapix::java_api::dalvik::bytecode::OpcodeInfo>
{
	static constexpr fixed_string class_name = "dalvik/bytecode/OpcodeInfo";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_DALVIK_BYTECODE_OPCODEINFO_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_DALVIK_BYTECODE_OPCODEINFO)
#define SCAPIX_JAVA_API_DALVIK_BYTECODE_OPCODEINFO

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class dalvik::bytecode::OpcodeInfo : public jni::object_base<"dalvik/bytecode/OpcodeInfo",
	java::lang::Object>
{
public:

	static jint MAXIMUM_PACKED_VALUE() { return get_static_field<"MAXIMUM_PACKED_VALUE", jint>(); }
	static jint MAXIMUM_VALUE() { return get_static_field<"MAXIMUM_VALUE", jint>(); }


protected:

	OpcodeInfo(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_DALVIK_BYTECODE_OPCODEINFO
