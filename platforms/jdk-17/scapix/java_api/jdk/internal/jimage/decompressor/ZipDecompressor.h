// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/jdk/internal/jimage/decompressor/ResourceDecompressor.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_JIMAGE_DECOMPRESSOR_ZIPDECOMPRESSOR_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_JIMAGE_DECOMPRESSOR_ZIPDECOMPRESSOR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::jimage::decompressor { class ZipDecompressor; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::jimage::decompressor::ZipDecompressor>
{
	static constexpr fixed_string class_name = "jdk/internal/jimage/decompressor/ZipDecompressor";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::jdk::internal::jimage::decompressor::ResourceDecompressor>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_JIMAGE_DECOMPRESSOR_ZIPDECOMPRESSOR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_JIMAGE_DECOMPRESSOR_ZIPDECOMPRESSOR)
#define SCAPIX_JAVA_API_JDK_INTERNAL_JIMAGE_DECOMPRESSOR_ZIPDECOMPRESSOR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/jdk/internal/jimage/decompressor/ResourceDecompressor_StringsProvider.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class jdk::internal::jimage::decompressor::ZipDecompressor : public jni::object_base<"jdk/internal/jimage/decompressor/ZipDecompressor",
	java::lang::Object,
	jdk::internal::jimage::decompressor::ResourceDecompressor>
{
public:

	jni::ref<java::lang::String> getName() { return call_method<"getName", jni::ref<java::lang::String>>(); }
	jni::ref<jni::array<jbyte>> decompress(jni::ref<jdk::internal::jimage::decompressor::ResourceDecompressor_StringsProvider> reader, jni::ref<jni::array<jbyte>> content, jint offset, jlong originalSize) { return call_method<"decompress", jni::ref<jni::array<jbyte>>>(reader, content, offset, originalSize); }

protected:

	ZipDecompressor(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_JIMAGE_DECOMPRESSOR_ZIPDECOMPRESSOR
