// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_UTIL_XML_SAXPARSER_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_UTIL_XML_SAXPARSER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::util::xml { class SAXParser; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::util::xml::SAXParser>
{
	static constexpr fixed_string class_name = "jdk/internal/util/xml/SAXParser";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_UTIL_XML_SAXPARSER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_UTIL_XML_SAXPARSER)
#define SCAPIX_JAVA_API_JDK_INTERNAL_UTIL_XML_SAXPARSER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/File.h>
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/jdk/internal/org/xml/sax/InputSource.h>
#include <scapix/java_api/jdk/internal/org/xml/sax/XMLReader.h>
#include <scapix/java_api/jdk/internal/org/xml/sax/helpers/DefaultHandler.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::util::xml::SAXParser : public jni::object_base<"jdk/internal/util/xml/SAXParser",
	java::lang::Object>
{
public:

	void parse(jni::ref<java::io::InputStream> is, jni::ref<jdk::internal::org::xml::sax::helpers::DefaultHandler> dh) { return call_method<"parse", void>(is, dh); }
	void parse(jni::ref<java::lang::String> uri, jni::ref<jdk::internal::org::xml::sax::helpers::DefaultHandler> dh) { return call_method<"parse", void>(uri, dh); }
	void parse(jni::ref<java::io::File> f, jni::ref<jdk::internal::org::xml::sax::helpers::DefaultHandler> dh) { return call_method<"parse", void>(f, dh); }
	void parse(jni::ref<jdk::internal::org::xml::sax::InputSource> is, jni::ref<jdk::internal::org::xml::sax::helpers::DefaultHandler> dh) { return call_method<"parse", void>(is, dh); }
	jni::ref<jdk::internal::org::xml::sax::XMLReader> getXMLReader() { return call_method<"getXMLReader", jni::ref<jdk::internal::org::xml::sax::XMLReader>>(); }
	jboolean isNamespaceAware() { return call_method<"isNamespaceAware", jboolean>(); }
	jboolean isValidating() { return call_method<"isValidating", jboolean>(); }
	jboolean isXIncludeAware() { return call_method<"isXIncludeAware", jboolean>(); }

protected:

	SAXParser(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_UTIL_XML_SAXPARSER
