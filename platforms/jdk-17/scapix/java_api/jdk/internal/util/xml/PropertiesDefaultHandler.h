// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/jdk/internal/org/xml/sax/helpers/DefaultHandler.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_UTIL_XML_PROPERTIESDEFAULTHANDLER_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_UTIL_XML_PROPERTIESDEFAULTHANDLER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::util::xml { class PropertiesDefaultHandler; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::util::xml::PropertiesDefaultHandler>
{
	static constexpr fixed_string class_name = "jdk/internal/util/xml/PropertiesDefaultHandler";
	using base_classes = std::tuple<scapix::java_api::jdk::internal::org::xml::sax::helpers::DefaultHandler>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_UTIL_XML_PROPERTIESDEFAULTHANDLER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_UTIL_XML_PROPERTIESDEFAULTHANDLER)
#define SCAPIX_JAVA_API_JDK_INTERNAL_UTIL_XML_PROPERTIESDEFAULTHANDLER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/io/OutputStream.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/nio/charset/Charset.h>
#include <scapix/java_api/java/util/Properties.h>
#include <scapix/java_api/jdk/internal/org/xml/sax/Attributes.h>
#include <scapix/java_api/jdk/internal/org/xml/sax/InputSource.h>
#include <scapix/java_api/jdk/internal/org/xml/sax/SAXParseException.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::util::xml::PropertiesDefaultHandler : public jni::object_base<"jdk/internal/util/xml/PropertiesDefaultHandler",
	jdk::internal::org::xml::sax::helpers::DefaultHandler>
{
public:

	static jni::ref<jdk::internal::util::xml::PropertiesDefaultHandler> new_object() { return base_::new_object(); }
	void load(jni::ref<java::util::Properties> props, jni::ref<java::io::InputStream> in) { return call_method<"load", void>(props, in); }
	void store(jni::ref<java::util::Properties> props, jni::ref<java::io::OutputStream> os, jni::ref<java::lang::String> comment, jni::ref<java::nio::charset::Charset> charset) { return call_method<"store", void>(props, os, comment, charset); }
	void startElement(jni::ref<java::lang::String> uri, jni::ref<java::lang::String> localName, jni::ref<java::lang::String> qName, jni::ref<jdk::internal::org::xml::sax::Attributes> attributes) { return call_method<"startElement", void>(uri, localName, qName, attributes); }
	void characters(jni::ref<jni::array<jchar>> ch, jint start, jint length) { return call_method<"characters", void>(ch, start, length); }
	void endElement(jni::ref<java::lang::String> uri, jni::ref<java::lang::String> localName, jni::ref<java::lang::String> qName) { return call_method<"endElement", void>(uri, localName, qName); }
	jni::ref<jdk::internal::org::xml::sax::InputSource> resolveEntity(jni::ref<java::lang::String> pubid, jni::ref<java::lang::String> sysid) { return call_method<"resolveEntity", jni::ref<jdk::internal::org::xml::sax::InputSource>>(pubid, sysid); }
	void error(jni::ref<jdk::internal::org::xml::sax::SAXParseException> x) { return call_method<"error", void>(x); }
	void fatalError(jni::ref<jdk::internal::org::xml::sax::SAXParseException> x) { return call_method<"fatalError", void>(x); }
	void warning(jni::ref<jdk::internal::org::xml::sax::SAXParseException> x) { return call_method<"warning", void>(x); }
	void startDTD(jni::ref<java::lang::String> name, jni::ref<java::lang::String> publicId, jni::ref<java::lang::String> systemId) { return call_method<"startDTD", void>(name, publicId, systemId); }
	void startInternalSub() { return call_method<"startInternalSub", void>(); }

protected:

	PropertiesDefaultHandler(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_UTIL_XML_PROPERTIESDEFAULTHANDLER
