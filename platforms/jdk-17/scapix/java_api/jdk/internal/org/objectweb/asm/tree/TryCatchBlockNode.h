// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_ORG_OBJECTWEB_ASM_TREE_TRYCATCHBLOCKNODE_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_ORG_OBJECTWEB_ASM_TREE_TRYCATCHBLOCKNODE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::org::objectweb::asm_::tree { class TryCatchBlockNode; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::org::objectweb::asm_::tree::TryCatchBlockNode>
{
	static constexpr fixed_string class_name = "jdk/internal/org/objectweb/asm/tree/TryCatchBlockNode";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_ORG_OBJECTWEB_ASM_TREE_TRYCATCHBLOCKNODE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_ORG_OBJECTWEB_ASM_TREE_TRYCATCHBLOCKNODE)
#define SCAPIX_JAVA_API_JDK_INTERNAL_ORG_OBJECTWEB_ASM_TREE_TRYCATCHBLOCKNODE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/jdk/internal/org/objectweb/asm/MethodVisitor.h>
#include <scapix/java_api/jdk/internal/org/objectweb/asm/tree/LabelNode.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::org::objectweb::asm_::tree::TryCatchBlockNode : public jni::object_base<"jdk/internal/org/objectweb/asm/tree/TryCatchBlockNode",
	java::lang::Object>
{
public:

	jni::ref<jdk::internal::org::objectweb::asm_::tree::LabelNode> start() { return get_field<"start", jni::ref<jdk::internal::org::objectweb::asm_::tree::LabelNode>>(); }
	void start(jni::ref<jdk::internal::org::objectweb::asm_::tree::LabelNode> v) { set_field<"start", jni::ref<jdk::internal::org::objectweb::asm_::tree::LabelNode>>(v); }
	jni::ref<jdk::internal::org::objectweb::asm_::tree::LabelNode> end() { return get_field<"end", jni::ref<jdk::internal::org::objectweb::asm_::tree::LabelNode>>(); }
	void end(jni::ref<jdk::internal::org::objectweb::asm_::tree::LabelNode> v) { set_field<"end", jni::ref<jdk::internal::org::objectweb::asm_::tree::LabelNode>>(v); }
	jni::ref<jdk::internal::org::objectweb::asm_::tree::LabelNode> handler() { return get_field<"handler", jni::ref<jdk::internal::org::objectweb::asm_::tree::LabelNode>>(); }
	void handler(jni::ref<jdk::internal::org::objectweb::asm_::tree::LabelNode> v) { set_field<"handler", jni::ref<jdk::internal::org::objectweb::asm_::tree::LabelNode>>(v); }
	jni::ref<java::lang::String> type() { return get_field<"type", jni::ref<java::lang::String>>(); }
	void type(jni::ref<java::lang::String> v) { set_field<"type", jni::ref<java::lang::String>>(v); }
	jni::ref<java::util::List> visibleTypeAnnotations() { return get_field<"visibleTypeAnnotations", jni::ref<java::util::List>>(); }
	void visibleTypeAnnotations(jni::ref<java::util::List> v) { set_field<"visibleTypeAnnotations", jni::ref<java::util::List>>(v); }
	jni::ref<java::util::List> invisibleTypeAnnotations() { return get_field<"invisibleTypeAnnotations", jni::ref<java::util::List>>(); }
	void invisibleTypeAnnotations(jni::ref<java::util::List> v) { set_field<"invisibleTypeAnnotations", jni::ref<java::util::List>>(v); }

	static jni::ref<jdk::internal::org::objectweb::asm_::tree::TryCatchBlockNode> new_object(jni::ref<jdk::internal::org::objectweb::asm_::tree::LabelNode> start, jni::ref<jdk::internal::org::objectweb::asm_::tree::LabelNode> end, jni::ref<jdk::internal::org::objectweb::asm_::tree::LabelNode> handler, jni::ref<java::lang::String> type) { return base_::new_object(start, end, handler, type); }
	void updateIndex(jint index) { return call_method<"updateIndex", void>(index); }
	void accept(jni::ref<jdk::internal::org::objectweb::asm_::MethodVisitor> methodVisitor) { return call_method<"accept", void>(methodVisitor); }

protected:

	TryCatchBlockNode(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_ORG_OBJECTWEB_ASM_TREE_TRYCATCHBLOCKNODE
