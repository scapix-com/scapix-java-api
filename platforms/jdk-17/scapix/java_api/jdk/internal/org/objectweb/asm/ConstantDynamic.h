// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_ORG_OBJECTWEB_ASM_CONSTANTDYNAMIC_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_ORG_OBJECTWEB_ASM_CONSTANTDYNAMIC_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::org::objectweb::asm_ { class ConstantDynamic; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::org::objectweb::asm_::ConstantDynamic>
{
	static constexpr fixed_string class_name = "jdk/internal/org/objectweb/asm/ConstantDynamic";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_ORG_OBJECTWEB_ASM_CONSTANTDYNAMIC_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_ORG_OBJECTWEB_ASM_CONSTANTDYNAMIC)
#define SCAPIX_JAVA_API_JDK_INTERNAL_ORG_OBJECTWEB_ASM_CONSTANTDYNAMIC

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/jdk/internal/org/objectweb/asm/Handle.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::org::objectweb::asm_::ConstantDynamic : public jni::object_base<"jdk/internal/org/objectweb/asm/ConstantDynamic",
	java::lang::Object>
{
public:

	static jni::ref<jdk::internal::org::objectweb::asm_::ConstantDynamic> new_object(jni::ref<java::lang::String> name, jni::ref<java::lang::String> descriptor, jni::ref<jdk::internal::org::objectweb::asm_::Handle> bootstrapMethod, jni::ref<jni::array<java::lang::Object>> bootstrapMethodArguments) { return base_::new_object(name, descriptor, bootstrapMethod, bootstrapMethodArguments); }
	jni::ref<java::lang::String> getName() { return call_method<"getName", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getDescriptor() { return call_method<"getDescriptor", jni::ref<java::lang::String>>(); }
	jni::ref<jdk::internal::org::objectweb::asm_::Handle> getBootstrapMethod() { return call_method<"getBootstrapMethod", jni::ref<jdk::internal::org::objectweb::asm_::Handle>>(); }
	jint getBootstrapMethodArgumentCount() { return call_method<"getBootstrapMethodArgumentCount", jint>(); }
	jni::ref<java::lang::Object> getBootstrapMethodArgument(jint index) { return call_method<"getBootstrapMethodArgument", jni::ref<java::lang::Object>>(index); }
	jint getSize() { return call_method<"getSize", jint>(); }
	jboolean equals(jni::ref<java::lang::Object> object) { return call_method<"equals", jboolean>(object); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	ConstantDynamic(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_ORG_OBJECTWEB_ASM_CONSTANTDYNAMIC
