// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/ref/PhantomReference.h>

#ifndef SCAPIX_JAVA_API_JDK_INTERNAL_REF_CLEANER_FWD
#define SCAPIX_JAVA_API_JDK_INTERNAL_REF_CLEANER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::jdk::internal::ref { class Cleaner; }

template<>
struct scapix::jni::object_traits<scapix::java_api::jdk::internal::ref::Cleaner>
{
	static constexpr fixed_string class_name = "jdk/internal/ref/Cleaner";
	using base_classes = std::tuple<scapix::java_api::java::lang::ref::PhantomReference>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_REF_CLEANER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JDK_INTERNAL_REF_CLEANER)
#define SCAPIX_JAVA_API_JDK_INTERNAL_REF_CLEANER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/Runnable.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class jdk::internal::ref::Cleaner : public jni::object_base<"jdk/internal/ref/Cleaner",
	java::lang::ref::PhantomReference>
{
public:

	static jni::ref<jdk::internal::ref::Cleaner> create(jni::ref<java::lang::Object> ob, jni::ref<java::lang::Runnable> thunk) { return call_static_method<"create", jni::ref<jdk::internal::ref::Cleaner>>(ob, thunk); }
	void clean() { return call_method<"clean", void>(); }

protected:

	Cleaner(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JDK_INTERNAL_REF_CLEANER
