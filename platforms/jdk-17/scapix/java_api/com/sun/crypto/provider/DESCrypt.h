// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/com/sun/crypto/provider/SymmetricCipher.h>
#include <scapix/java_api/com/sun/crypto/provider/DESConstants.h>

#ifndef SCAPIX_JAVA_API_COM_SUN_CRYPTO_PROVIDER_DESCRYPT_FWD
#define SCAPIX_JAVA_API_COM_SUN_CRYPTO_PROVIDER_DESCRYPT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::com::sun::crypto::provider { class DESCrypt; }

template<>
struct scapix::jni::object_traits<scapix::java_api::com::sun::crypto::provider::DESCrypt>
{
	static constexpr fixed_string class_name = "com/sun/crypto/provider/DESCrypt";
	using base_classes = std::tuple<scapix::java_api::com::sun::crypto::provider::SymmetricCipher, scapix::java_api::com::sun::crypto::provider::DESConstants>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CRYPTO_PROVIDER_DESCRYPT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_COM_SUN_CRYPTO_PROVIDER_DESCRYPT)
#define SCAPIX_JAVA_API_COM_SUN_CRYPTO_PROVIDER_DESCRYPT

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class com::sun::crypto::provider::DESCrypt : public jni::object_base<"com/sun/crypto/provider/DESCrypt",
	com::sun::crypto::provider::SymmetricCipher,
	com::sun::crypto::provider::DESConstants>
{
public:


protected:

	DESCrypt(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_COM_SUN_CRYPTO_PROVIDER_DESCRYPT
