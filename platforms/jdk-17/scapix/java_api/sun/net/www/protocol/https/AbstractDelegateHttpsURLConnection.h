// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/sun/net/www/protocol/http/HttpURLConnection.h>

#ifndef SCAPIX_JAVA_API_SUN_NET_WWW_PROTOCOL_HTTPS_ABSTRACTDELEGATEHTTPSURLCONNECTION_FWD
#define SCAPIX_JAVA_API_SUN_NET_WWW_PROTOCOL_HTTPS_ABSTRACTDELEGATEHTTPSURLCONNECTION_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::net::www::protocol::https { class AbstractDelegateHttpsURLConnection; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::net::www::protocol::https::AbstractDelegateHttpsURLConnection>
{
	static constexpr fixed_string class_name = "sun/net/www/protocol/https/AbstractDelegateHttpsURLConnection";
	using base_classes = std::tuple<scapix::java_api::sun::net::www::protocol::http::HttpURLConnection>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NET_WWW_PROTOCOL_HTTPS_ABSTRACTDELEGATEHTTPSURLCONNECTION_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_NET_WWW_PROTOCOL_HTTPS_ABSTRACTDELEGATEHTTPSURLCONNECTION)
#define SCAPIX_JAVA_API_SUN_NET_WWW_PROTOCOL_HTTPS_ABSTRACTDELEGATEHTTPSURLCONNECTION

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/net/URL.h>
#include <scapix/java_api/java/security/cert/Certificate.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::net::www::protocol::https::AbstractDelegateHttpsURLConnection : public jni::object_base<"sun/net/www/protocol/https/AbstractDelegateHttpsURLConnection",
	sun::net::www::protocol::http::HttpURLConnection>
{
public:

	void setNewClient(jni::ref<java::net::URL> url) { return call_method<"setNewClient", void>(url); }
	void setNewClient(jni::ref<java::net::URL> url, jboolean useCache) { return call_method<"setNewClient", void>(url, useCache); }
	void setProxiedClient(jni::ref<java::net::URL> url, jni::ref<java::lang::String> proxyHost, jint proxyPort) { return call_method<"setProxiedClient", void>(url, proxyHost, proxyPort); }
	void setProxiedClient(jni::ref<java::net::URL> url, jni::ref<java::lang::String> proxyHost, jint proxyPort, jboolean useCache) { return call_method<"setProxiedClient", void>(url, proxyHost, proxyPort, useCache); }
	jboolean isConnected() { return call_method<"isConnected", jboolean>(); }
	void setConnected(jboolean conn) { return call_method<"setConnected", void>(conn); }
	void connect() { return call_method<"connect", void>(); }
	jni::ref<java::lang::String> getCipherSuite() { return call_method<"getCipherSuite", jni::ref<java::lang::String>>(); }
	jni::ref<jni::array<java::security::cert::Certificate>> getLocalCertificates() { return call_method<"getLocalCertificates", jni::ref<jni::array<java::security::cert::Certificate>>>(); }
	jni::ref<jni::array<java::security::cert::Certificate>> getServerCertificates() { return call_method<"getServerCertificates", jni::ref<jni::array<java::security::cert::Certificate>>>(); }

protected:

	AbstractDelegateHttpsURLConnection(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NET_WWW_PROTOCOL_HTTPS_ABSTRACTDELEGATEHTTPSURLCONNECTION
