// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/io/InputStream.h>

#ifndef SCAPIX_JAVA_API_SUN_NET_WWW_PROTOCOL_HTTP_EMPTYINPUTSTREAM_FWD
#define SCAPIX_JAVA_API_SUN_NET_WWW_PROTOCOL_HTTP_EMPTYINPUTSTREAM_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::net::www::protocol::http { class EmptyInputStream; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::net::www::protocol::http::EmptyInputStream>
{
	static constexpr fixed_string class_name = "sun/net/www/protocol/http/EmptyInputStream";
	using base_classes = std::tuple<scapix::java_api::java::io::InputStream>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NET_WWW_PROTOCOL_HTTP_EMPTYINPUTSTREAM_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_NET_WWW_PROTOCOL_HTTP_EMPTYINPUTSTREAM)
#define SCAPIX_JAVA_API_SUN_NET_WWW_PROTOCOL_HTTP_EMPTYINPUTSTREAM

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::net::www::protocol::http::EmptyInputStream : public jni::object_base<"sun/net/www/protocol/http/EmptyInputStream",
	java::io::InputStream>
{
public:

	jint available() { return call_method<"available", jint>(); }
	jint read() { return call_method<"read", jint>(); }

protected:

	EmptyInputStream(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NET_WWW_PROTOCOL_HTTP_EMPTYINPUTSTREAM
