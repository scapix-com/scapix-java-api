// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/io/BufferedOutputStream.h>

#ifndef SCAPIX_JAVA_API_SUN_NET_TELNETOUTPUTSTREAM_FWD
#define SCAPIX_JAVA_API_SUN_NET_TELNETOUTPUTSTREAM_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::net { class TelnetOutputStream; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::net::TelnetOutputStream>
{
	static constexpr fixed_string class_name = "sun/net/TelnetOutputStream";
	using base_classes = std::tuple<scapix::java_api::java::io::BufferedOutputStream>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NET_TELNETOUTPUTSTREAM_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_NET_TELNETOUTPUTSTREAM)
#define SCAPIX_JAVA_API_SUN_NET_TELNETOUTPUTSTREAM

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/OutputStream.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::net::TelnetOutputStream : public jni::object_base<"sun/net/TelnetOutputStream",
	java::io::BufferedOutputStream>
{
public:

	jboolean binaryMode() { return get_field<"binaryMode", jboolean>(); }
	void binaryMode(jboolean v) { set_field<"binaryMode", jboolean>(v); }

	static jni::ref<sun::net::TelnetOutputStream> new_object(jni::ref<java::io::OutputStream> fd, jboolean binary) { return base_::new_object(fd, binary); }
	void setStickyCRLF(jboolean on) { return call_method<"setStickyCRLF", void>(on); }
	void write(jint c) { return call_method<"write", void>(c); }
	void write(jni::ref<jni::array<jbyte>> bytes, jint off, jint length) { return call_method<"write", void>(bytes, off, length); }

protected:

	TelnetOutputStream(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NET_TELNETOUTPUTSTREAM
