// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_PROVIDER_ENTROPYSOURCE_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_PROVIDER_ENTROPYSOURCE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::provider { class EntropySource; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::provider::EntropySource>
{
	static constexpr fixed_string class_name = "sun/security/provider/EntropySource";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_PROVIDER_ENTROPYSOURCE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_PROVIDER_ENTROPYSOURCE)
#define SCAPIX_JAVA_API_SUN_SECURITY_PROVIDER_ENTROPYSOURCE

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::security::provider::EntropySource : public jni::object_base<"sun/security/provider/EntropySource",
	java::lang::Object>
{
public:

	jni::ref<jni::array<jbyte>> getEntropy(jint p1, jint p2, jint p3, jboolean p4) { return call_method<"getEntropy", jni::ref<jni::array<jbyte>>>(p1, p2, p3, p4); }

protected:

	EntropySource(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_PROVIDER_ENTROPYSOURCE
