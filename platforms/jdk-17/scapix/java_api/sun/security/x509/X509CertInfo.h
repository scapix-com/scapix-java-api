// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/sun/security/x509/CertAttrSet.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_X509_X509CERTINFO_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_X509_X509CERTINFO_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::x509 { class X509CertInfo; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::x509::X509CertInfo>
{
	static constexpr fixed_string class_name = "sun/security/x509/X509CertInfo";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::sun::security::x509::CertAttrSet>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_X509_X509CERTINFO_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_X509_X509CERTINFO)
#define SCAPIX_JAVA_API_SUN_SECURITY_X509_X509CERTINFO

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/OutputStream.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Enumeration.h>
#include <scapix/java_api/sun/security/util/DerValue.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::security::x509::X509CertInfo : public jni::object_base<"sun/security/x509/X509CertInfo",
	java::lang::Object,
	sun::security::x509::CertAttrSet>
{
public:

	static jni::ref<java::lang::String> IDENT() { return get_static_field<"IDENT", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> NAME() { return get_static_field<"NAME", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> DN_NAME() { return get_static_field<"DN_NAME", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> VERSION() { return get_static_field<"VERSION", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> SERIAL_NUMBER() { return get_static_field<"SERIAL_NUMBER", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ALGORITHM_ID() { return get_static_field<"ALGORITHM_ID", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ISSUER() { return get_static_field<"ISSUER", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> SUBJECT() { return get_static_field<"SUBJECT", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> VALIDITY() { return get_static_field<"VALIDITY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> KEY() { return get_static_field<"KEY", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> ISSUER_ID() { return get_static_field<"ISSUER_ID", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> SUBJECT_ID() { return get_static_field<"SUBJECT_ID", jni::ref<java::lang::String>>(); }
	static jni::ref<java::lang::String> EXTENSIONS() { return get_static_field<"EXTENSIONS", jni::ref<java::lang::String>>(); }

	static jni::ref<sun::security::x509::X509CertInfo> new_object() { return base_::new_object(); }
	static jni::ref<sun::security::x509::X509CertInfo> new_object(jni::ref<jni::array<jbyte>> cert) { return base_::new_object(cert); }
	static jni::ref<sun::security::x509::X509CertInfo> new_object(jni::ref<sun::security::util::DerValue> derVal) { return base_::new_object(derVal); }
	void encode(jni::ref<java::io::OutputStream> out) { return call_method<"encode", void>(out); }
	jni::ref<java::util::Enumeration> getElements() { return call_method<"getElements", jni::ref<java::util::Enumeration>>(); }
	jni::ref<java::lang::String> getName() { return call_method<"getName", jni::ref<java::lang::String>>(); }
	jni::ref<jni::array<jbyte>> getEncodedInfo() { return call_method<"getEncodedInfo", jni::ref<jni::array<jbyte>>>(); }
	jboolean equals(jni::ref<java::lang::Object> other) { return call_method<"equals", jboolean>(other); }
	jboolean equals(jni::ref<sun::security::x509::X509CertInfo> other) { return call_method<"equals", jboolean>(other); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	void set(jni::ref<java::lang::String> name, jni::ref<java::lang::Object> val) { return call_method<"set", void>(name, val); }
	void delete_(jni::ref<java::lang::String> name) { return call_method<"delete", void>(name); }
	jni::ref<java::lang::Object> get(jni::ref<java::lang::String> name) { return call_method<"get", jni::ref<java::lang::Object>>(name); }

protected:

	X509CertInfo(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_X509_X509CERTINFO
