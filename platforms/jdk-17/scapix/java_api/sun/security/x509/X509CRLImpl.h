// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/security/cert/X509CRL.h>
#include <scapix/java_api/sun/security/util/DerEncoder.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_X509_X509CRLIMPL_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_X509_X509CRLIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::x509 { class X509CRLImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::x509::X509CRLImpl>
{
	static constexpr fixed_string class_name = "sun/security/x509/X509CRLImpl";
	using base_classes = std::tuple<scapix::java_api::java::security::cert::X509CRL, scapix::java_api::sun::security::util::DerEncoder>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_X509_X509CRLIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_X509_X509CRLIMPL)
#define SCAPIX_JAVA_API_SUN_SECURITY_X509_X509CRLIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/io/OutputStream.h>
#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/math/BigInteger.h>
#include <scapix/java_api/java/security/Principal.h>
#include <scapix/java_api/java/security/PrivateKey.h>
#include <scapix/java_api/java/security/Provider.h>
#include <scapix/java_api/java/security/PublicKey.h>
#include <scapix/java_api/java/security/cert/Certificate.h>
#include <scapix/java_api/java/security/cert/X509CRLEntry.h>
#include <scapix/java_api/java/security/cert/X509Certificate.h>
#include <scapix/java_api/java/util/Date.h>
#include <scapix/java_api/java/util/Set.h>
#include <scapix/java_api/javax/security/auth/x500/X500Principal.h>
#include <scapix/java_api/sun/security/util/DerValue.h>
#include <scapix/java_api/sun/security/util/ObjectIdentifier.h>
#include <scapix/java_api/sun/security/x509/AlgorithmId.h>
#include <scapix/java_api/sun/security/x509/AuthorityKeyIdentifierExtension.h>
#include <scapix/java_api/sun/security/x509/CRLExtensions.h>
#include <scapix/java_api/sun/security/x509/CRLNumberExtension.h>
#include <scapix/java_api/sun/security/x509/DeltaCRLIndicatorExtension.h>
#include <scapix/java_api/sun/security/x509/IssuerAlternativeNameExtension.h>
#include <scapix/java_api/sun/security/x509/IssuingDistributionPointExtension.h>
#include <scapix/java_api/sun/security/x509/KeyIdentifier.h>
#include <scapix/java_api/sun/security/x509/X500Name.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::security::x509::X509CRLImpl : public jni::object_base<"sun/security/x509/X509CRLImpl",
	java::security::cert::X509CRL,
	sun::security::util::DerEncoder>
{
public:

	static jni::ref<sun::security::x509::X509CRLImpl> new_object(jni::ref<jni::array<jbyte>> crlData) { return base_::new_object(crlData); }
	static jni::ref<sun::security::x509::X509CRLImpl> new_object(jni::ref<sun::security::util::DerValue> val) { return base_::new_object(val); }
	static jni::ref<sun::security::x509::X509CRLImpl> new_object(jni::ref<java::io::InputStream> inStrm) { return base_::new_object(inStrm); }
	static jni::ref<sun::security::x509::X509CRLImpl> new_object(jni::ref<sun::security::x509::X500Name> issuer, jni::ref<java::util::Date> thisDate, jni::ref<java::util::Date> nextDate) { return base_::new_object(issuer, thisDate, nextDate); }
	static jni::ref<sun::security::x509::X509CRLImpl> new_object(jni::ref<sun::security::x509::X500Name> issuer, jni::ref<java::util::Date> thisDate, jni::ref<java::util::Date> nextDate, jni::ref<jni::array<java::security::cert::X509CRLEntry>> badCerts) { return base_::new_object(issuer, thisDate, nextDate, badCerts); }
	static jni::ref<sun::security::x509::X509CRLImpl> new_object(jni::ref<sun::security::x509::X500Name> issuer, jni::ref<java::util::Date> thisDate, jni::ref<java::util::Date> nextDate, jni::ref<jni::array<java::security::cert::X509CRLEntry>> badCerts, jni::ref<sun::security::x509::CRLExtensions> crlExts) { return base_::new_object(issuer, thisDate, nextDate, badCerts, crlExts); }
	jni::ref<jni::array<jbyte>> getEncodedInternal() { return call_method<"getEncodedInternal", jni::ref<jni::array<jbyte>>>(); }
	jni::ref<jni::array<jbyte>> getEncoded() { return call_method<"getEncoded", jni::ref<jni::array<jbyte>>>(); }
	void encodeInfo(jni::ref<java::io::OutputStream> out) { return call_method<"encodeInfo", void>(out); }
	void verify(jni::ref<java::security::PublicKey> key) { return call_method<"verify", void>(key); }
	void verify(jni::ref<java::security::PublicKey> key, jni::ref<java::lang::String> sigProvider) { return call_method<"verify", void>(key, sigProvider); }
	void verify(jni::ref<java::security::PublicKey> key, jni::ref<java::security::Provider> sigProvider) { return call_method<"verify", void>(key, sigProvider); }
	void sign(jni::ref<java::security::PrivateKey> key, jni::ref<java::lang::String> algorithm) { return call_method<"sign", void>(key, algorithm); }
	void sign(jni::ref<java::security::PrivateKey> key, jni::ref<java::lang::String> algorithm, jni::ref<java::lang::String> provider) { return call_method<"sign", void>(key, algorithm, provider); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> toStringWithAlgName(jni::ref<java::lang::String> name) { return call_method<"toStringWithAlgName", jni::ref<java::lang::String>>(name); }
	jboolean isRevoked(jni::ref<java::security::cert::Certificate> cert) { return call_method<"isRevoked", jboolean>(cert); }
	jint getVersion() { return call_method<"getVersion", jint>(); }
	jni::ref<java::security::Principal> getIssuerDN() { return call_method<"getIssuerDN", jni::ref<java::security::Principal>>(); }
	jni::ref<javax::security::auth::x500::X500Principal> getIssuerX500Principal() { return call_method<"getIssuerX500Principal", jni::ref<javax::security::auth::x500::X500Principal>>(); }
	jni::ref<java::util::Date> getThisUpdate() { return call_method<"getThisUpdate", jni::ref<java::util::Date>>(); }
	jni::ref<java::util::Date> getNextUpdate() { return call_method<"getNextUpdate", jni::ref<java::util::Date>>(); }
	jni::ref<java::security::cert::X509CRLEntry> getRevokedCertificate(jni::ref<java::math::BigInteger> serialNumber) { return call_method<"getRevokedCertificate", jni::ref<java::security::cert::X509CRLEntry>>(serialNumber); }
	jni::ref<java::security::cert::X509CRLEntry> getRevokedCertificate(jni::ref<java::security::cert::X509Certificate> cert) { return call_method<"getRevokedCertificate", jni::ref<java::security::cert::X509CRLEntry>>(cert); }
	jni::ref<java::util::Set> getRevokedCertificates() { return call_method<"getRevokedCertificates", jni::ref<java::util::Set>>(); }
	jni::ref<jni::array<jbyte>> getTBSCertList() { return call_method<"getTBSCertList", jni::ref<jni::array<jbyte>>>(); }
	jni::ref<jni::array<jbyte>> getSignature() { return call_method<"getSignature", jni::ref<jni::array<jbyte>>>(); }
	jni::ref<java::lang::String> getSigAlgName() { return call_method<"getSigAlgName", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> getSigAlgOID() { return call_method<"getSigAlgOID", jni::ref<java::lang::String>>(); }
	jni::ref<jni::array<jbyte>> getSigAlgParams() { return call_method<"getSigAlgParams", jni::ref<jni::array<jbyte>>>(); }
	jni::ref<sun::security::x509::AlgorithmId> getSigAlgId() { return call_method<"getSigAlgId", jni::ref<sun::security::x509::AlgorithmId>>(); }
	jni::ref<sun::security::x509::KeyIdentifier> getAuthKeyId() { return call_method<"getAuthKeyId", jni::ref<sun::security::x509::KeyIdentifier>>(); }
	jni::ref<sun::security::x509::AuthorityKeyIdentifierExtension> getAuthKeyIdExtension() { return call_method<"getAuthKeyIdExtension", jni::ref<sun::security::x509::AuthorityKeyIdentifierExtension>>(); }
	jni::ref<sun::security::x509::CRLNumberExtension> getCRLNumberExtension() { return call_method<"getCRLNumberExtension", jni::ref<sun::security::x509::CRLNumberExtension>>(); }
	jni::ref<java::math::BigInteger> getCRLNumber() { return call_method<"getCRLNumber", jni::ref<java::math::BigInteger>>(); }
	jni::ref<sun::security::x509::DeltaCRLIndicatorExtension> getDeltaCRLIndicatorExtension() { return call_method<"getDeltaCRLIndicatorExtension", jni::ref<sun::security::x509::DeltaCRLIndicatorExtension>>(); }
	jni::ref<java::math::BigInteger> getBaseCRLNumber() { return call_method<"getBaseCRLNumber", jni::ref<java::math::BigInteger>>(); }
	jni::ref<sun::security::x509::IssuerAlternativeNameExtension> getIssuerAltNameExtension() { return call_method<"getIssuerAltNameExtension", jni::ref<sun::security::x509::IssuerAlternativeNameExtension>>(); }
	jni::ref<sun::security::x509::IssuingDistributionPointExtension> getIssuingDistributionPointExtension() { return call_method<"getIssuingDistributionPointExtension", jni::ref<sun::security::x509::IssuingDistributionPointExtension>>(); }
	jboolean hasUnsupportedCriticalExtension() { return call_method<"hasUnsupportedCriticalExtension", jboolean>(); }
	jni::ref<java::util::Set> getCriticalExtensionOIDs() { return call_method<"getCriticalExtensionOIDs", jni::ref<java::util::Set>>(); }
	jni::ref<java::util::Set> getNonCriticalExtensionOIDs() { return call_method<"getNonCriticalExtensionOIDs", jni::ref<java::util::Set>>(); }
	jni::ref<jni::array<jbyte>> getExtensionValue(jni::ref<java::lang::String> oid) { return call_method<"getExtensionValue", jni::ref<jni::array<jbyte>>>(oid); }
	jni::ref<java::lang::Object> getExtension(jni::ref<sun::security::util::ObjectIdentifier> oid) { return call_method<"getExtension", jni::ref<java::lang::Object>>(oid); }
	static jni::ref<javax::security::auth::x500::X500Principal> getIssuerX500Principal(jni::ref<java::security::cert::X509CRL> crl) { return call_static_method<"getIssuerX500Principal", jni::ref<javax::security::auth::x500::X500Principal>>(crl); }
	static jni::ref<jni::array<jbyte>> getEncodedInternal(jni::ref<java::security::cert::X509CRL> crl) { return call_static_method<"getEncodedInternal", jni::ref<jni::array<jbyte>>>(crl); }
	static jni::ref<sun::security::x509::X509CRLImpl> toImpl(jni::ref<java::security::cert::X509CRL> crl) { return call_static_method<"toImpl", jni::ref<sun::security::x509::X509CRLImpl>>(crl); }
	void derEncode(jni::ref<java::io::OutputStream> out) { return call_method<"derEncode", void>(out); }

protected:

	X509CRLImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_X509_X509CRLIMPL
