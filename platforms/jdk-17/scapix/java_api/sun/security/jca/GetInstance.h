// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_JCA_GETINSTANCE_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_JCA_GETINSTANCE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::jca { class GetInstance; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::jca::GetInstance>
{
	static constexpr fixed_string class_name = "sun/security/jca/GetInstance";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_JCA_GETINSTANCE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_JCA_GETINSTANCE)
#define SCAPIX_JAVA_API_SUN_SECURITY_JCA_GETINSTANCE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/security/Provider.h>
#include <scapix/java_api/java/security/Provider_Service.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/sun/security/jca/GetInstance_Instance.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::security::jca::GetInstance : public jni::object_base<"sun/security/jca/GetInstance",
	java::lang::Object>
{
public:

	using Instance = GetInstance_Instance;

	static jni::ref<java::security::Provider_Service> getService(jni::ref<java::lang::String> type, jni::ref<java::lang::String> algorithm) { return call_static_method<"getService", jni::ref<java::security::Provider_Service>>(type, algorithm); }
	static jni::ref<java::security::Provider_Service> getService(jni::ref<java::lang::String> type, jni::ref<java::lang::String> algorithm, jni::ref<java::lang::String> provider) { return call_static_method<"getService", jni::ref<java::security::Provider_Service>>(type, algorithm, provider); }
	static jni::ref<java::security::Provider_Service> getService(jni::ref<java::lang::String> type, jni::ref<java::lang::String> algorithm, jni::ref<java::security::Provider> provider) { return call_static_method<"getService", jni::ref<java::security::Provider_Service>>(type, algorithm, provider); }
	static jni::ref<java::util::List> getServices(jni::ref<java::lang::String> type, jni::ref<java::lang::String> algorithm) { return call_static_method<"getServices", jni::ref<java::util::List>>(type, algorithm); }
	static jni::ref<java::util::List> getServices(jni::ref<java::lang::String> type, jni::ref<java::util::List> algorithms) { return call_static_method<"getServices", jni::ref<java::util::List>>(type, algorithms); }
	static jni::ref<java::util::List> getServices(jni::ref<java::util::List> ids) { return call_static_method<"getServices", jni::ref<java::util::List>>(ids); }
	static jni::ref<sun::security::jca::GetInstance_Instance> getInstance(jni::ref<java::lang::String> type, jni::ref<java::lang::Class> clazz, jni::ref<java::lang::String> algorithm) { return call_static_method<"getInstance", jni::ref<sun::security::jca::GetInstance_Instance>>(type, clazz, algorithm); }
	static jni::ref<sun::security::jca::GetInstance_Instance> getInstance(jni::ref<java::lang::String> type, jni::ref<java::lang::Class> clazz, jni::ref<java::lang::String> algorithm, jni::ref<java::lang::Object> param) { return call_static_method<"getInstance", jni::ref<sun::security::jca::GetInstance_Instance>>(type, clazz, algorithm, param); }
	static jni::ref<sun::security::jca::GetInstance_Instance> getInstance(jni::ref<java::lang::String> type, jni::ref<java::lang::Class> clazz, jni::ref<java::lang::String> algorithm, jni::ref<java::lang::String> provider) { return call_static_method<"getInstance", jni::ref<sun::security::jca::GetInstance_Instance>>(type, clazz, algorithm, provider); }
	static jni::ref<sun::security::jca::GetInstance_Instance> getInstance(jni::ref<java::lang::String> type, jni::ref<java::lang::Class> clazz, jni::ref<java::lang::String> algorithm, jni::ref<java::lang::Object> param, jni::ref<java::lang::String> provider) { return call_static_method<"getInstance", jni::ref<sun::security::jca::GetInstance_Instance>>(type, clazz, algorithm, param, provider); }
	static jni::ref<sun::security::jca::GetInstance_Instance> getInstance(jni::ref<java::lang::String> type, jni::ref<java::lang::Class> clazz, jni::ref<java::lang::String> algorithm, jni::ref<java::security::Provider> provider) { return call_static_method<"getInstance", jni::ref<sun::security::jca::GetInstance_Instance>>(type, clazz, algorithm, provider); }
	static jni::ref<sun::security::jca::GetInstance_Instance> getInstance(jni::ref<java::lang::String> type, jni::ref<java::lang::Class> clazz, jni::ref<java::lang::String> algorithm, jni::ref<java::lang::Object> param, jni::ref<java::security::Provider> provider) { return call_static_method<"getInstance", jni::ref<sun::security::jca::GetInstance_Instance>>(type, clazz, algorithm, param, provider); }
	static jni::ref<sun::security::jca::GetInstance_Instance> getInstance(jni::ref<java::security::Provider_Service> s, jni::ref<java::lang::Class> clazz) { return call_static_method<"getInstance", jni::ref<sun::security::jca::GetInstance_Instance>>(s, clazz); }
	static jni::ref<sun::security::jca::GetInstance_Instance> getInstance(jni::ref<java::security::Provider_Service> s, jni::ref<java::lang::Class> clazz, jni::ref<java::lang::Object> param) { return call_static_method<"getInstance", jni::ref<sun::security::jca::GetInstance_Instance>>(s, clazz, param); }
	static void checkSuperClass(jni::ref<java::security::Provider_Service> s, jni::ref<java::lang::Class> subClass, jni::ref<java::lang::Class> superClass) { return call_static_method<"checkSuperClass", void>(s, subClass, superClass); }

protected:

	GetInstance(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_JCA_GETINSTANCE
