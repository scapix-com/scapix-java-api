// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_UTIL_MATH_INTEGERFIELDMODULOP_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_UTIL_MATH_INTEGERFIELDMODULOP_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::util::math { class IntegerFieldModuloP; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::util::math::IntegerFieldModuloP>
{
	static constexpr fixed_string class_name = "sun/security/util/math/IntegerFieldModuloP";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_UTIL_MATH_INTEGERFIELDMODULOP_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_UTIL_MATH_INTEGERFIELDMODULOP)
#define SCAPIX_JAVA_API_SUN_SECURITY_UTIL_MATH_INTEGERFIELDMODULOP

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/math/BigInteger.h>
#include <scapix/java_api/sun/security/util/math/ImmutableIntegerModuloP.h>
#include <scapix/java_api/sun/security/util/math/SmallValue.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::security::util::math::IntegerFieldModuloP : public jni::object_base<"sun/security/util/math/IntegerFieldModuloP",
	java::lang::Object>
{
public:

	jni::ref<java::math::BigInteger> getSize() { return call_method<"getSize", jni::ref<java::math::BigInteger>>(); }
	jni::ref<sun::security::util::math::ImmutableIntegerModuloP> get0() { return call_method<"get0", jni::ref<sun::security::util::math::ImmutableIntegerModuloP>>(); }
	jni::ref<sun::security::util::math::ImmutableIntegerModuloP> get1() { return call_method<"get1", jni::ref<sun::security::util::math::ImmutableIntegerModuloP>>(); }
	jni::ref<sun::security::util::math::ImmutableIntegerModuloP> getElement(jni::ref<java::math::BigInteger> p1) { return call_method<"getElement", jni::ref<sun::security::util::math::ImmutableIntegerModuloP>>(p1); }
	jni::ref<sun::security::util::math::SmallValue> getSmallValue(jint p1) { return call_method<"getSmallValue", jni::ref<sun::security::util::math::SmallValue>>(p1); }
	jni::ref<sun::security::util::math::ImmutableIntegerModuloP> getElement(jni::ref<jni::array<jbyte>> v) { return call_method<"getElement", jni::ref<sun::security::util::math::ImmutableIntegerModuloP>>(v); }
	jni::ref<sun::security::util::math::ImmutableIntegerModuloP> getElement(jni::ref<jni::array<jbyte>> p1, jint p2, jint p3, jbyte p4) { return call_method<"getElement", jni::ref<sun::security::util::math::ImmutableIntegerModuloP>>(p1, p2, p3, p4); }

protected:

	IntegerFieldModuloP(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_UTIL_MATH_INTEGERFIELDMODULOP
