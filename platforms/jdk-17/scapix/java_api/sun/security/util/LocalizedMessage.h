// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_UTIL_LOCALIZEDMESSAGE_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_UTIL_LOCALIZEDMESSAGE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::util { class LocalizedMessage; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::util::LocalizedMessage>
{
	static constexpr fixed_string class_name = "sun/security/util/LocalizedMessage";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_UTIL_LOCALIZEDMESSAGE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_UTIL_LOCALIZEDMESSAGE)
#define SCAPIX_JAVA_API_SUN_SECURITY_UTIL_LOCALIZEDMESSAGE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::security::util::LocalizedMessage : public jni::object_base<"sun/security/util/LocalizedMessage",
	java::lang::Object>
{
public:

	static jni::ref<sun::security::util::LocalizedMessage> new_object(jni::ref<java::lang::String> key) { return base_::new_object(key); }
	jni::ref<java::lang::String> formatLocalized(jni::ref<jni::array<java::lang::Object>> arguments) { return call_method<"formatLocalized", jni::ref<java::lang::String>>(arguments); }
	jni::ref<java::lang::String> formatNonlocalized(jni::ref<jni::array<java::lang::Object>> arguments) { return call_method<"formatNonlocalized", jni::ref<java::lang::String>>(arguments); }
	static jni::ref<java::lang::String> getNonlocalized(jni::ref<java::lang::String> key, jni::ref<jni::array<java::lang::Object>> arguments) { return call_static_method<"getNonlocalized", jni::ref<java::lang::String>>(key, arguments); }
	static jni::ref<java::lang::String> getLocalized(jni::ref<java::lang::String> key, jni::ref<jni::array<java::lang::Object>> arguments) { return call_static_method<"getLocalized", jni::ref<java::lang::String>>(key, arguments); }

protected:

	LocalizedMessage(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_UTIL_LOCALIZEDMESSAGE
