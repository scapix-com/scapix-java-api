// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Enum.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_SSL_ALERT_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_SSL_ALERT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::ssl { class Alert; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::ssl::Alert>
{
	static constexpr fixed_string class_name = "sun/security/ssl/Alert";
	using base_classes = std::tuple<scapix::java_api::java::lang::Enum>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_SSL_ALERT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_SSL_ALERT)
#define SCAPIX_JAVA_API_SUN_SECURITY_SSL_ALERT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::security::ssl::Alert : public jni::object_base<"sun/security/ssl/Alert",
	java::lang::Enum>
{
public:

	static jni::ref<sun::security::ssl::Alert> CLOSE_NOTIFY() { return get_static_field<"CLOSE_NOTIFY", jni::ref<sun::security::ssl::Alert>>(); }
	static jni::ref<sun::security::ssl::Alert> UNEXPECTED_MESSAGE() { return get_static_field<"UNEXPECTED_MESSAGE", jni::ref<sun::security::ssl::Alert>>(); }
	static jni::ref<sun::security::ssl::Alert> BAD_RECORD_MAC() { return get_static_field<"BAD_RECORD_MAC", jni::ref<sun::security::ssl::Alert>>(); }
	static jni::ref<sun::security::ssl::Alert> DECRYPTION_FAILED() { return get_static_field<"DECRYPTION_FAILED", jni::ref<sun::security::ssl::Alert>>(); }
	static jni::ref<sun::security::ssl::Alert> RECORD_OVERFLOW() { return get_static_field<"RECORD_OVERFLOW", jni::ref<sun::security::ssl::Alert>>(); }
	static jni::ref<sun::security::ssl::Alert> DECOMPRESSION_FAILURE() { return get_static_field<"DECOMPRESSION_FAILURE", jni::ref<sun::security::ssl::Alert>>(); }
	static jni::ref<sun::security::ssl::Alert> HANDSHAKE_FAILURE() { return get_static_field<"HANDSHAKE_FAILURE", jni::ref<sun::security::ssl::Alert>>(); }
	static jni::ref<sun::security::ssl::Alert> NO_CERTIFICATE() { return get_static_field<"NO_CERTIFICATE", jni::ref<sun::security::ssl::Alert>>(); }
	static jni::ref<sun::security::ssl::Alert> BAD_CERTIFICATE() { return get_static_field<"BAD_CERTIFICATE", jni::ref<sun::security::ssl::Alert>>(); }
	static jni::ref<sun::security::ssl::Alert> UNSUPPORTED_CERTIFICATE() { return get_static_field<"UNSUPPORTED_CERTIFICATE", jni::ref<sun::security::ssl::Alert>>(); }
	static jni::ref<sun::security::ssl::Alert> CERTIFICATE_REVOKED() { return get_static_field<"CERTIFICATE_REVOKED", jni::ref<sun::security::ssl::Alert>>(); }
	static jni::ref<sun::security::ssl::Alert> CERTIFICATE_EXPIRED() { return get_static_field<"CERTIFICATE_EXPIRED", jni::ref<sun::security::ssl::Alert>>(); }
	static jni::ref<sun::security::ssl::Alert> CERTIFICATE_UNKNOWN() { return get_static_field<"CERTIFICATE_UNKNOWN", jni::ref<sun::security::ssl::Alert>>(); }
	static jni::ref<sun::security::ssl::Alert> ILLEGAL_PARAMETER() { return get_static_field<"ILLEGAL_PARAMETER", jni::ref<sun::security::ssl::Alert>>(); }
	static jni::ref<sun::security::ssl::Alert> UNKNOWN_CA() { return get_static_field<"UNKNOWN_CA", jni::ref<sun::security::ssl::Alert>>(); }
	static jni::ref<sun::security::ssl::Alert> ACCESS_DENIED() { return get_static_field<"ACCESS_DENIED", jni::ref<sun::security::ssl::Alert>>(); }
	static jni::ref<sun::security::ssl::Alert> DECODE_ERROR() { return get_static_field<"DECODE_ERROR", jni::ref<sun::security::ssl::Alert>>(); }
	static jni::ref<sun::security::ssl::Alert> DECRYPT_ERROR() { return get_static_field<"DECRYPT_ERROR", jni::ref<sun::security::ssl::Alert>>(); }
	static jni::ref<sun::security::ssl::Alert> EXPORT_RESTRICTION() { return get_static_field<"EXPORT_RESTRICTION", jni::ref<sun::security::ssl::Alert>>(); }
	static jni::ref<sun::security::ssl::Alert> PROTOCOL_VERSION() { return get_static_field<"PROTOCOL_VERSION", jni::ref<sun::security::ssl::Alert>>(); }
	static jni::ref<sun::security::ssl::Alert> INSUFFICIENT_SECURITY() { return get_static_field<"INSUFFICIENT_SECURITY", jni::ref<sun::security::ssl::Alert>>(); }
	static jni::ref<sun::security::ssl::Alert> INTERNAL_ERROR() { return get_static_field<"INTERNAL_ERROR", jni::ref<sun::security::ssl::Alert>>(); }
	static jni::ref<sun::security::ssl::Alert> INAPPROPRIATE_FALLBACK() { return get_static_field<"INAPPROPRIATE_FALLBACK", jni::ref<sun::security::ssl::Alert>>(); }
	static jni::ref<sun::security::ssl::Alert> USER_CANCELED() { return get_static_field<"USER_CANCELED", jni::ref<sun::security::ssl::Alert>>(); }
	static jni::ref<sun::security::ssl::Alert> NO_RENEGOTIATION() { return get_static_field<"NO_RENEGOTIATION", jni::ref<sun::security::ssl::Alert>>(); }
	static jni::ref<sun::security::ssl::Alert> MISSING_EXTENSION() { return get_static_field<"MISSING_EXTENSION", jni::ref<sun::security::ssl::Alert>>(); }
	static jni::ref<sun::security::ssl::Alert> UNSUPPORTED_EXTENSION() { return get_static_field<"UNSUPPORTED_EXTENSION", jni::ref<sun::security::ssl::Alert>>(); }
	static jni::ref<sun::security::ssl::Alert> CERT_UNOBTAINABLE() { return get_static_field<"CERT_UNOBTAINABLE", jni::ref<sun::security::ssl::Alert>>(); }
	static jni::ref<sun::security::ssl::Alert> UNRECOGNIZED_NAME() { return get_static_field<"UNRECOGNIZED_NAME", jni::ref<sun::security::ssl::Alert>>(); }
	static jni::ref<sun::security::ssl::Alert> BAD_CERT_STATUS_RESPONSE() { return get_static_field<"BAD_CERT_STATUS_RESPONSE", jni::ref<sun::security::ssl::Alert>>(); }
	static jni::ref<sun::security::ssl::Alert> BAD_CERT_HASH_VALUE() { return get_static_field<"BAD_CERT_HASH_VALUE", jni::ref<sun::security::ssl::Alert>>(); }
	static jni::ref<sun::security::ssl::Alert> UNKNOWN_PSK_IDENTITY() { return get_static_field<"UNKNOWN_PSK_IDENTITY", jni::ref<sun::security::ssl::Alert>>(); }
	static jni::ref<sun::security::ssl::Alert> CERTIFICATE_REQUIRED() { return get_static_field<"CERTIFICATE_REQUIRED", jni::ref<sun::security::ssl::Alert>>(); }
	static jni::ref<sun::security::ssl::Alert> NO_APPLICATION_PROTOCOL() { return get_static_field<"NO_APPLICATION_PROTOCOL", jni::ref<sun::security::ssl::Alert>>(); }

	static jni::ref<jni::array<sun::security::ssl::Alert>> values() { return call_static_method<"values", jni::ref<jni::array<sun::security::ssl::Alert>>>(); }
	static jni::ref<sun::security::ssl::Alert> valueOf(jni::ref<java::lang::String> name) { return call_static_method<"valueOf", jni::ref<sun::security::ssl::Alert>>(name); }

protected:

	Alert(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_SSL_ALERT
