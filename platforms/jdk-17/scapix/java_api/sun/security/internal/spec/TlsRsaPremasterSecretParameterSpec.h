// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/security/spec/AlgorithmParameterSpec.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_INTERNAL_SPEC_TLSRSAPREMASTERSECRETPARAMETERSPEC_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_INTERNAL_SPEC_TLSRSAPREMASTERSECRETPARAMETERSPEC_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::internal::spec { class TlsRsaPremasterSecretParameterSpec; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::internal::spec::TlsRsaPremasterSecretParameterSpec>
{
	static constexpr fixed_string class_name = "sun/security/internal/spec/TlsRsaPremasterSecretParameterSpec";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::security::spec::AlgorithmParameterSpec>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_INTERNAL_SPEC_TLSRSAPREMASTERSECRETPARAMETERSPEC_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_INTERNAL_SPEC_TLSRSAPREMASTERSECRETPARAMETERSPEC)
#define SCAPIX_JAVA_API_SUN_SECURITY_INTERNAL_SPEC_TLSRSAPREMASTERSECRETPARAMETERSPEC

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::security::internal::spec::TlsRsaPremasterSecretParameterSpec : public jni::object_base<"sun/security/internal/spec/TlsRsaPremasterSecretParameterSpec",
	java::lang::Object,
	java::security::spec::AlgorithmParameterSpec>
{
public:

	static jni::ref<sun::security::internal::spec::TlsRsaPremasterSecretParameterSpec> new_object(jint clientVersion, jint serverVersion) { return base_::new_object(clientVersion, serverVersion); }
	static jni::ref<sun::security::internal::spec::TlsRsaPremasterSecretParameterSpec> new_object(jint clientVersion, jint serverVersion, jni::ref<jni::array<jbyte>> encodedSecret) { return base_::new_object(clientVersion, serverVersion, encodedSecret); }
	jint getClientVersion() { return call_method<"getClientVersion", jint>(); }
	jint getServerVersion() { return call_method<"getServerVersion", jint>(); }
	jint getMajorVersion() { return call_method<"getMajorVersion", jint>(); }
	jint getMinorVersion() { return call_method<"getMinorVersion", jint>(); }
	jni::ref<jni::array<jbyte>> getEncodedSecret() { return call_method<"getEncodedSecret", jni::ref<jni::array<jbyte>>>(); }

protected:

	TlsRsaPremasterSecretParameterSpec(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_INTERNAL_SPEC_TLSRSAPREMASTERSECRETPARAMETERSPEC
