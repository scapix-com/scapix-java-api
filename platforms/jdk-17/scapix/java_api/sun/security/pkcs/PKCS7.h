// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_SECURITY_PKCS_PKCS7_FWD
#define SCAPIX_JAVA_API_SUN_SECURITY_PKCS_PKCS7_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::security::pkcs { class PKCS7; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::security::pkcs::PKCS7>
{
	static constexpr fixed_string class_name = "sun/security/pkcs/PKCS7";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_PKCS_PKCS7_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_SECURITY_PKCS_PKCS7)
#define SCAPIX_JAVA_API_SUN_SECURITY_PKCS_PKCS7

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/io/InputStream.h>
#include <scapix/java_api/java/io/OutputStream.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/math/BigInteger.h>
#include <scapix/java_api/java/net/URI.h>
#include <scapix/java_api/java/security/PrivateKey.h>
#include <scapix/java_api/java/security/Provider.h>
#include <scapix/java_api/java/security/cert/X509CRL.h>
#include <scapix/java_api/java/security/cert/X509Certificate.h>
#include <scapix/java_api/java/util/function/Function.h>
#include <scapix/java_api/sun/security/pkcs/ContentInfo.h>
#include <scapix/java_api/sun/security/pkcs/SignerInfo.h>
#include <scapix/java_api/sun/security/timestamp/Timestamper.h>
#include <scapix/java_api/sun/security/util/DerInputStream.h>
#include <scapix/java_api/sun/security/util/DerOutputStream.h>
#include <scapix/java_api/sun/security/x509/AlgorithmId.h>
#include <scapix/java_api/sun/security/x509/X500Name.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::security::pkcs::PKCS7 : public jni::object_base<"sun/security/pkcs/PKCS7",
	java::lang::Object>
{
public:

	static jni::ref<sun::security::pkcs::PKCS7> new_object(jni::ref<java::io::InputStream> in) { return base_::new_object(in); }
	static jni::ref<sun::security::pkcs::PKCS7> new_object(jni::ref<sun::security::util::DerInputStream> derin) { return base_::new_object(derin); }
	static jni::ref<sun::security::pkcs::PKCS7> new_object(jni::ref<jni::array<jbyte>> bytes) { return base_::new_object(bytes); }
	static jni::ref<sun::security::pkcs::PKCS7> new_object(jni::ref<jni::array<sun::security::x509::AlgorithmId>> digestAlgorithmIds, jni::ref<sun::security::pkcs::ContentInfo> contentInfo, jni::ref<jni::array<java::security::cert::X509Certificate>> certificates, jni::ref<jni::array<java::security::cert::X509CRL>> crls, jni::ref<jni::array<sun::security::pkcs::SignerInfo>> signerInfos) { return base_::new_object(digestAlgorithmIds, contentInfo, certificates, crls, signerInfos); }
	static jni::ref<sun::security::pkcs::PKCS7> new_object(jni::ref<jni::array<sun::security::x509::AlgorithmId>> digestAlgorithmIds, jni::ref<sun::security::pkcs::ContentInfo> contentInfo, jni::ref<jni::array<java::security::cert::X509Certificate>> certificates, jni::ref<jni::array<sun::security::pkcs::SignerInfo>> signerInfos) { return base_::new_object(digestAlgorithmIds, contentInfo, certificates, signerInfos); }
	void encodeSignedData(jni::ref<java::io::OutputStream> out) { return call_method<"encodeSignedData", void>(out); }
	void encodeSignedData(jni::ref<sun::security::util::DerOutputStream> out) { return call_method<"encodeSignedData", void>(out); }
	jni::ref<sun::security::pkcs::SignerInfo> verify(jni::ref<sun::security::pkcs::SignerInfo> info, jni::ref<jni::array<jbyte>> bytes) { return call_method<"verify", jni::ref<sun::security::pkcs::SignerInfo>>(info, bytes); }
	jni::ref<jni::array<sun::security::pkcs::SignerInfo>> verify(jni::ref<jni::array<jbyte>> bytes) { return call_method<"verify", jni::ref<jni::array<sun::security::pkcs::SignerInfo>>>(bytes); }
	jni::ref<jni::array<sun::security::pkcs::SignerInfo>> verify() { return call_method<"verify", jni::ref<jni::array<sun::security::pkcs::SignerInfo>>>(); }
	jni::ref<java::math::BigInteger> getVersion() { return call_method<"getVersion", jni::ref<java::math::BigInteger>>(); }
	jni::ref<jni::array<sun::security::x509::AlgorithmId>> getDigestAlgorithmIds() { return call_method<"getDigestAlgorithmIds", jni::ref<jni::array<sun::security::x509::AlgorithmId>>>(); }
	jni::ref<sun::security::pkcs::ContentInfo> getContentInfo() { return call_method<"getContentInfo", jni::ref<sun::security::pkcs::ContentInfo>>(); }
	jni::ref<jni::array<java::security::cert::X509Certificate>> getCertificates() { return call_method<"getCertificates", jni::ref<jni::array<java::security::cert::X509Certificate>>>(); }
	jni::ref<jni::array<java::security::cert::X509CRL>> getCRLs() { return call_method<"getCRLs", jni::ref<jni::array<java::security::cert::X509CRL>>>(); }
	jni::ref<jni::array<sun::security::pkcs::SignerInfo>> getSignerInfos() { return call_method<"getSignerInfos", jni::ref<jni::array<sun::security::pkcs::SignerInfo>>>(); }
	jni::ref<java::security::cert::X509Certificate> getCertificate(jni::ref<java::math::BigInteger> serial, jni::ref<sun::security::x509::X500Name> issuerName) { return call_method<"getCertificate", jni::ref<java::security::cert::X509Certificate>>(serial, issuerName); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jboolean isOldStyle() { return call_method<"isOldStyle", jboolean>(); }
	static jni::ref<jni::array<jbyte>> generateNewSignedData(jni::ref<java::lang::String> sigalg, jni::ref<java::security::Provider> sigProvider, jni::ref<java::security::PrivateKey> privateKey, jni::ref<jni::array<java::security::cert::X509Certificate>> signerChain, jni::ref<jni::array<jbyte>> content, jboolean internalsf, jboolean directsign, jni::ref<java::util::function::Function> ts) { return call_static_method<"generateNewSignedData", jni::ref<jni::array<jbyte>>>(sigalg, sigProvider, privateKey, signerChain, content, internalsf, directsign, ts); }
	static jni::ref<jni::array<jbyte>> generateSignedData(jni::ref<jni::array<jbyte>> signature, jni::ref<jni::array<java::security::cert::X509Certificate>> signerChain, jni::ref<jni::array<jbyte>> content, jni::ref<java::lang::String> signatureAlgorithm, jni::ref<java::net::URI> tsaURI, jni::ref<java::lang::String> tSAPolicyID, jni::ref<java::lang::String> tSADigestAlg) { return call_static_method<"generateSignedData", jni::ref<jni::array<jbyte>>>(signature, signerChain, content, signatureAlgorithm, tsaURI, tSAPolicyID, tSADigestAlg); }
	static jni::ref<java::net::URI> getTimestampingURI(jni::ref<java::security::cert::X509Certificate> tsaCertificate) { return call_static_method<"getTimestampingURI", jni::ref<java::net::URI>>(tsaCertificate); }
	static jni::ref<jni::array<jbyte>> generateTimestampToken(jni::ref<sun::security::timestamp::Timestamper> tsa, jni::ref<java::lang::String> tSAPolicyID, jni::ref<java::lang::String> tSADigestAlg, jni::ref<jni::array<jbyte>> toBeTimestamped) { return call_static_method<"generateTimestampToken", jni::ref<jni::array<jbyte>>>(tsa, tSAPolicyID, tSADigestAlg, toBeTimestamped); }

protected:

	PKCS7(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_SECURITY_PKCS_PKCS7
