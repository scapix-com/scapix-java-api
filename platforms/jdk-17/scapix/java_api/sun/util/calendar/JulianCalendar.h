// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/sun/util/calendar/BaseCalendar.h>

#ifndef SCAPIX_JAVA_API_SUN_UTIL_CALENDAR_JULIANCALENDAR_FWD
#define SCAPIX_JAVA_API_SUN_UTIL_CALENDAR_JULIANCALENDAR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::util::calendar { class JulianCalendar; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::util::calendar::JulianCalendar>
{
	static constexpr fixed_string class_name = "sun/util/calendar/JulianCalendar";
	using base_classes = std::tuple<scapix::java_api::sun::util::calendar::BaseCalendar>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_UTIL_CALENDAR_JULIANCALENDAR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_UTIL_CALENDAR_JULIANCALENDAR)
#define SCAPIX_JAVA_API_SUN_UTIL_CALENDAR_JULIANCALENDAR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/TimeZone.h>
#include <scapix/java_api/sun/util/calendar/BaseCalendar_Date.h>
#include <scapix/java_api/sun/util/calendar/CalendarDate.h>
#include <scapix/java_api/sun/util/calendar/JulianCalendar_Date.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::util::calendar::JulianCalendar : public jni::object_base<"sun/util/calendar/JulianCalendar",
	sun::util::calendar::BaseCalendar>
{
public:

	jni::ref<java::lang::String> getName() { return call_method<"getName", jni::ref<java::lang::String>>(); }
	jni::ref<sun::util::calendar::JulianCalendar_Date> getCalendarDate() { return call_method<"getCalendarDate", jni::ref<sun::util::calendar::JulianCalendar_Date>>(); }
	jni::ref<sun::util::calendar::JulianCalendar_Date> getCalendarDate(jlong millis) { return call_method<"getCalendarDate", jni::ref<sun::util::calendar::JulianCalendar_Date>>(millis); }
	jni::ref<sun::util::calendar::JulianCalendar_Date> getCalendarDate(jlong millis, jni::ref<sun::util::calendar::CalendarDate> p2) { return call_method<"getCalendarDate", jni::ref<sun::util::calendar::JulianCalendar_Date>>(millis, p2); }
	jni::ref<sun::util::calendar::JulianCalendar_Date> getCalendarDate(jlong millis, jni::ref<java::util::TimeZone> p2) { return call_method<"getCalendarDate", jni::ref<sun::util::calendar::JulianCalendar_Date>>(millis, p2); }
	jni::ref<sun::util::calendar::JulianCalendar_Date> newCalendarDate() { return call_method<"newCalendarDate", jni::ref<sun::util::calendar::JulianCalendar_Date>>(); }
	jni::ref<sun::util::calendar::JulianCalendar_Date> newCalendarDate(jni::ref<java::util::TimeZone> zone) { return call_method<"newCalendarDate", jni::ref<sun::util::calendar::JulianCalendar_Date>>(zone); }
	jlong getFixedDate(jint jyear, jint month, jint dayOfMonth, jni::ref<sun::util::calendar::BaseCalendar_Date> cache) { return call_method<"getFixedDate", jlong>(jyear, month, dayOfMonth, cache); }
	void getCalendarDateFromFixedDate(jni::ref<sun::util::calendar::CalendarDate> date, jlong fixedDate) { return call_method<"getCalendarDateFromFixedDate", void>(date, fixedDate); }
	jint getYearFromFixedDate(jlong fixedDate) { return call_method<"getYearFromFixedDate", jint>(fixedDate); }
	jint getDayOfWeek(jni::ref<sun::util::calendar::CalendarDate> date) { return call_method<"getDayOfWeek", jint>(date); }

protected:

	JulianCalendar(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_UTIL_CALENDAR_JULIANCALENDAR
