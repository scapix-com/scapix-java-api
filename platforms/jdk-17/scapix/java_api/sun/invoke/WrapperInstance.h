// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_INVOKE_WRAPPERINSTANCE_FWD
#define SCAPIX_JAVA_API_SUN_INVOKE_WRAPPERINSTANCE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::invoke { class WrapperInstance; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::invoke::WrapperInstance>
{
	static constexpr fixed_string class_name = "sun/invoke/WrapperInstance";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_INVOKE_WRAPPERINSTANCE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_INVOKE_WRAPPERINSTANCE)
#define SCAPIX_JAVA_API_SUN_INVOKE_WRAPPERINSTANCE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/invoke/MethodHandle.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::invoke::WrapperInstance : public jni::object_base<"sun/invoke/WrapperInstance",
	java::lang::Object>
{
public:

	jni::ref<java::lang::invoke::MethodHandle> getWrapperInstanceTarget() { return call_method<"getWrapperInstanceTarget", jni::ref<java::lang::invoke::MethodHandle>>(); }
	jni::ref<java::lang::Class> getWrapperInstanceType() { return call_method<"getWrapperInstanceType", jni::ref<java::lang::Class>>(); }

protected:

	WrapperInstance(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_INVOKE_WRAPPERINSTANCE
