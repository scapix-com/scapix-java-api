// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/net/SocketImpl.h>
#include <scapix/java_api/sun/net/PlatformSocketImpl.h>

#ifndef SCAPIX_JAVA_API_SUN_NIO_CH_NIOSOCKETIMPL_FWD
#define SCAPIX_JAVA_API_SUN_NIO_CH_NIOSOCKETIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::nio::ch { class NioSocketImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::nio::ch::NioSocketImpl>
{
	static constexpr fixed_string class_name = "sun/nio/ch/NioSocketImpl";
	using base_classes = std::tuple<scapix::java_api::java::net::SocketImpl, scapix::java_api::sun::net::PlatformSocketImpl>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NIO_CH_NIOSOCKETIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_NIO_CH_NIOSOCKETIMPL)
#define SCAPIX_JAVA_API_SUN_NIO_CH_NIOSOCKETIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class sun::nio::ch::NioSocketImpl : public jni::object_base<"sun/nio/ch/NioSocketImpl",
	java::net::SocketImpl,
	sun::net::PlatformSocketImpl>
{
public:

	static jni::ref<sun::nio::ch::NioSocketImpl> new_object(jboolean server) { return base_::new_object(server); }
	void setOption(jint opt, jni::ref<java::lang::Object> value) { return call_method<"setOption", void>(opt, value); }
	jni::ref<java::lang::Object> getOption(jint opt) { return call_method<"getOption", jni::ref<java::lang::Object>>(opt); }

protected:

	NioSocketImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NIO_CH_NIOSOCKETIMPL
