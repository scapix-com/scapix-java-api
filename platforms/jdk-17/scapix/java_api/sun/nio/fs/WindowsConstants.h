// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_SUN_NIO_FS_WINDOWSCONSTANTS_FWD
#define SCAPIX_JAVA_API_SUN_NIO_FS_WINDOWSCONSTANTS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::sun::nio::fs { class WindowsConstants; }

template<>
struct scapix::jni::object_traits<scapix::java_api::sun::nio::fs::WindowsConstants>
{
	static constexpr fixed_string class_name = "sun/nio/fs/WindowsConstants";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NIO_FS_WINDOWSCONSTANTS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_SUN_NIO_FS_WINDOWSCONSTANTS)
#define SCAPIX_JAVA_API_SUN_NIO_FS_WINDOWSCONSTANTS

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class sun::nio::fs::WindowsConstants : public jni::object_base<"sun/nio/fs/WindowsConstants",
	java::lang::Object>
{
public:

	static jlong INVALID_HANDLE_VALUE() { return get_static_field<"INVALID_HANDLE_VALUE", jlong>(); }
	static jint GENERIC_READ() { return get_static_field<"GENERIC_READ", jint>(); }
	static jint GENERIC_WRITE() { return get_static_field<"GENERIC_WRITE", jint>(); }
	static jint FILE_SHARE_READ() { return get_static_field<"FILE_SHARE_READ", jint>(); }
	static jint FILE_SHARE_WRITE() { return get_static_field<"FILE_SHARE_WRITE", jint>(); }
	static jint FILE_SHARE_DELETE() { return get_static_field<"FILE_SHARE_DELETE", jint>(); }
	static jint CREATE_NEW() { return get_static_field<"CREATE_NEW", jint>(); }
	static jint CREATE_ALWAYS() { return get_static_field<"CREATE_ALWAYS", jint>(); }
	static jint OPEN_EXISTING() { return get_static_field<"OPEN_EXISTING", jint>(); }
	static jint OPEN_ALWAYS() { return get_static_field<"OPEN_ALWAYS", jint>(); }
	static jint TRUNCATE_EXISTING() { return get_static_field<"TRUNCATE_EXISTING", jint>(); }
	static jint FILE_ATTRIBUTE_READONLY() { return get_static_field<"FILE_ATTRIBUTE_READONLY", jint>(); }
	static jint FILE_ATTRIBUTE_HIDDEN() { return get_static_field<"FILE_ATTRIBUTE_HIDDEN", jint>(); }
	static jint FILE_ATTRIBUTE_SYSTEM() { return get_static_field<"FILE_ATTRIBUTE_SYSTEM", jint>(); }
	static jint FILE_ATTRIBUTE_DIRECTORY() { return get_static_field<"FILE_ATTRIBUTE_DIRECTORY", jint>(); }
	static jint FILE_ATTRIBUTE_ARCHIVE() { return get_static_field<"FILE_ATTRIBUTE_ARCHIVE", jint>(); }
	static jint FILE_ATTRIBUTE_DEVICE() { return get_static_field<"FILE_ATTRIBUTE_DEVICE", jint>(); }
	static jint FILE_ATTRIBUTE_NORMAL() { return get_static_field<"FILE_ATTRIBUTE_NORMAL", jint>(); }
	static jint FILE_ATTRIBUTE_REPARSE_POINT() { return get_static_field<"FILE_ATTRIBUTE_REPARSE_POINT", jint>(); }
	static jint FILE_FLAG_NO_BUFFERING() { return get_static_field<"FILE_FLAG_NO_BUFFERING", jint>(); }
	static jint FILE_FLAG_OVERLAPPED() { return get_static_field<"FILE_FLAG_OVERLAPPED", jint>(); }
	static jint FILE_FLAG_WRITE_THROUGH() { return get_static_field<"FILE_FLAG_WRITE_THROUGH", jint>(); }
	static jint FILE_FLAG_BACKUP_SEMANTICS() { return get_static_field<"FILE_FLAG_BACKUP_SEMANTICS", jint>(); }
	static jint FILE_FLAG_DELETE_ON_CLOSE() { return get_static_field<"FILE_FLAG_DELETE_ON_CLOSE", jint>(); }
	static jint FILE_FLAG_OPEN_REPARSE_POINT() { return get_static_field<"FILE_FLAG_OPEN_REPARSE_POINT", jint>(); }
	static jint BACKUP_ALTERNATE_DATA() { return get_static_field<"BACKUP_ALTERNATE_DATA", jint>(); }
	static jint BACKUP_SPARSE_BLOCK() { return get_static_field<"BACKUP_SPARSE_BLOCK", jint>(); }
	static jint IO_REPARSE_TAG_SYMLINK() { return get_static_field<"IO_REPARSE_TAG_SYMLINK", jint>(); }
	static jint IO_REPARSE_TAG_AF_UNIX() { return get_static_field<"IO_REPARSE_TAG_AF_UNIX", jint>(); }
	static jint MAXIMUM_REPARSE_DATA_BUFFER_SIZE() { return get_static_field<"MAXIMUM_REPARSE_DATA_BUFFER_SIZE", jint>(); }
	static jint SYMBOLIC_LINK_FLAG_DIRECTORY() { return get_static_field<"SYMBOLIC_LINK_FLAG_DIRECTORY", jint>(); }
	static jint SYMBOLIC_LINK_FLAG_ALLOW_UNPRIVILEGED_CREATE() { return get_static_field<"SYMBOLIC_LINK_FLAG_ALLOW_UNPRIVILEGED_CREATE", jint>(); }
	static jint FILE_CASE_SENSITIVE_SEARCH() { return get_static_field<"FILE_CASE_SENSITIVE_SEARCH", jint>(); }
	static jint FILE_CASE_PRESERVED_NAMES() { return get_static_field<"FILE_CASE_PRESERVED_NAMES", jint>(); }
	static jint FILE_PERSISTENT_ACLS() { return get_static_field<"FILE_PERSISTENT_ACLS", jint>(); }
	static jint FILE_VOLUME_IS_COMPRESSED() { return get_static_field<"FILE_VOLUME_IS_COMPRESSED", jint>(); }
	static jint FILE_NAMED_STREAMS() { return get_static_field<"FILE_NAMED_STREAMS", jint>(); }
	static jint FILE_READ_ONLY_VOLUME() { return get_static_field<"FILE_READ_ONLY_VOLUME", jint>(); }
	static jint ERROR_FILE_NOT_FOUND() { return get_static_field<"ERROR_FILE_NOT_FOUND", jint>(); }
	static jint ERROR_PATH_NOT_FOUND() { return get_static_field<"ERROR_PATH_NOT_FOUND", jint>(); }
	static jint ERROR_ACCESS_DENIED() { return get_static_field<"ERROR_ACCESS_DENIED", jint>(); }
	static jint ERROR_INVALID_HANDLE() { return get_static_field<"ERROR_INVALID_HANDLE", jint>(); }
	static jint ERROR_INVALID_DATA() { return get_static_field<"ERROR_INVALID_DATA", jint>(); }
	static jint ERROR_NOT_SAME_DEVICE() { return get_static_field<"ERROR_NOT_SAME_DEVICE", jint>(); }
	static jint ERROR_NOT_READY() { return get_static_field<"ERROR_NOT_READY", jint>(); }
	static jint ERROR_SHARING_VIOLATION() { return get_static_field<"ERROR_SHARING_VIOLATION", jint>(); }
	static jint ERROR_FILE_EXISTS() { return get_static_field<"ERROR_FILE_EXISTS", jint>(); }
	static jint ERROR_INVALID_PARAMETER() { return get_static_field<"ERROR_INVALID_PARAMETER", jint>(); }
	static jint ERROR_DISK_FULL() { return get_static_field<"ERROR_DISK_FULL", jint>(); }
	static jint ERROR_INSUFFICIENT_BUFFER() { return get_static_field<"ERROR_INSUFFICIENT_BUFFER", jint>(); }
	static jint ERROR_INVALID_LEVEL() { return get_static_field<"ERROR_INVALID_LEVEL", jint>(); }
	static jint ERROR_DIR_NOT_ROOT() { return get_static_field<"ERROR_DIR_NOT_ROOT", jint>(); }
	static jint ERROR_DIR_NOT_EMPTY() { return get_static_field<"ERROR_DIR_NOT_EMPTY", jint>(); }
	static jint ERROR_ALREADY_EXISTS() { return get_static_field<"ERROR_ALREADY_EXISTS", jint>(); }
	static jint ERROR_MORE_DATA() { return get_static_field<"ERROR_MORE_DATA", jint>(); }
	static jint ERROR_DIRECTORY() { return get_static_field<"ERROR_DIRECTORY", jint>(); }
	static jint ERROR_NOTIFY_ENUM_DIR() { return get_static_field<"ERROR_NOTIFY_ENUM_DIR", jint>(); }
	static jint ERROR_PRIVILEGE_NOT_HELD() { return get_static_field<"ERROR_PRIVILEGE_NOT_HELD", jint>(); }
	static jint ERROR_NONE_MAPPED() { return get_static_field<"ERROR_NONE_MAPPED", jint>(); }
	static jint ERROR_CANT_ACCESS_FILE() { return get_static_field<"ERROR_CANT_ACCESS_FILE", jint>(); }
	static jint ERROR_NOT_A_REPARSE_POINT() { return get_static_field<"ERROR_NOT_A_REPARSE_POINT", jint>(); }
	static jint ERROR_INVALID_REPARSE_DATA() { return get_static_field<"ERROR_INVALID_REPARSE_DATA", jint>(); }
	static jint FILE_NOTIFY_CHANGE_FILE_NAME() { return get_static_field<"FILE_NOTIFY_CHANGE_FILE_NAME", jint>(); }
	static jint FILE_NOTIFY_CHANGE_DIR_NAME() { return get_static_field<"FILE_NOTIFY_CHANGE_DIR_NAME", jint>(); }
	static jint FILE_NOTIFY_CHANGE_ATTRIBUTES() { return get_static_field<"FILE_NOTIFY_CHANGE_ATTRIBUTES", jint>(); }
	static jint FILE_NOTIFY_CHANGE_SIZE() { return get_static_field<"FILE_NOTIFY_CHANGE_SIZE", jint>(); }
	static jint FILE_NOTIFY_CHANGE_LAST_WRITE() { return get_static_field<"FILE_NOTIFY_CHANGE_LAST_WRITE", jint>(); }
	static jint FILE_NOTIFY_CHANGE_LAST_ACCESS() { return get_static_field<"FILE_NOTIFY_CHANGE_LAST_ACCESS", jint>(); }
	static jint FILE_NOTIFY_CHANGE_CREATION() { return get_static_field<"FILE_NOTIFY_CHANGE_CREATION", jint>(); }
	static jint FILE_NOTIFY_CHANGE_SECURITY() { return get_static_field<"FILE_NOTIFY_CHANGE_SECURITY", jint>(); }
	static jint FILE_ACTION_ADDED() { return get_static_field<"FILE_ACTION_ADDED", jint>(); }
	static jint FILE_ACTION_REMOVED() { return get_static_field<"FILE_ACTION_REMOVED", jint>(); }
	static jint FILE_ACTION_MODIFIED() { return get_static_field<"FILE_ACTION_MODIFIED", jint>(); }
	static jint FILE_ACTION_RENAMED_OLD_NAME() { return get_static_field<"FILE_ACTION_RENAMED_OLD_NAME", jint>(); }
	static jint FILE_ACTION_RENAMED_NEW_NAME() { return get_static_field<"FILE_ACTION_RENAMED_NEW_NAME", jint>(); }
	static jint COPY_FILE_FAIL_IF_EXISTS() { return get_static_field<"COPY_FILE_FAIL_IF_EXISTS", jint>(); }
	static jint COPY_FILE_COPY_SYMLINK() { return get_static_field<"COPY_FILE_COPY_SYMLINK", jint>(); }
	static jint MOVEFILE_REPLACE_EXISTING() { return get_static_field<"MOVEFILE_REPLACE_EXISTING", jint>(); }
	static jint MOVEFILE_COPY_ALLOWED() { return get_static_field<"MOVEFILE_COPY_ALLOWED", jint>(); }
	static jint DRIVE_UNKNOWN() { return get_static_field<"DRIVE_UNKNOWN", jint>(); }
	static jint DRIVE_NO_ROOT_DIR() { return get_static_field<"DRIVE_NO_ROOT_DIR", jint>(); }
	static jint DRIVE_REMOVABLE() { return get_static_field<"DRIVE_REMOVABLE", jint>(); }
	static jint DRIVE_FIXED() { return get_static_field<"DRIVE_FIXED", jint>(); }
	static jint DRIVE_REMOTE() { return get_static_field<"DRIVE_REMOTE", jint>(); }
	static jint DRIVE_CDROM() { return get_static_field<"DRIVE_CDROM", jint>(); }
	static jint DRIVE_RAMDISK() { return get_static_field<"DRIVE_RAMDISK", jint>(); }
	static jint OWNER_SECURITY_INFORMATION() { return get_static_field<"OWNER_SECURITY_INFORMATION", jint>(); }
	static jint GROUP_SECURITY_INFORMATION() { return get_static_field<"GROUP_SECURITY_INFORMATION", jint>(); }
	static jint DACL_SECURITY_INFORMATION() { return get_static_field<"DACL_SECURITY_INFORMATION", jint>(); }
	static jint SACL_SECURITY_INFORMATION() { return get_static_field<"SACL_SECURITY_INFORMATION", jint>(); }
	static jint SidTypeUser() { return get_static_field<"SidTypeUser", jint>(); }
	static jint SidTypeGroup() { return get_static_field<"SidTypeGroup", jint>(); }
	static jint SidTypeDomain() { return get_static_field<"SidTypeDomain", jint>(); }
	static jint SidTypeAlias() { return get_static_field<"SidTypeAlias", jint>(); }
	static jint SidTypeWellKnownGroup() { return get_static_field<"SidTypeWellKnownGroup", jint>(); }
	static jint SidTypeDeletedAccount() { return get_static_field<"SidTypeDeletedAccount", jint>(); }
	static jint SidTypeInvalid() { return get_static_field<"SidTypeInvalid", jint>(); }
	static jint SidTypeUnknown() { return get_static_field<"SidTypeUnknown", jint>(); }
	static jint SidTypeComputer() { return get_static_field<"SidTypeComputer", jint>(); }
	static jbyte ACCESS_ALLOWED_ACE_TYPE() { return get_static_field<"ACCESS_ALLOWED_ACE_TYPE", jbyte>(); }
	static jbyte ACCESS_DENIED_ACE_TYPE() { return get_static_field<"ACCESS_DENIED_ACE_TYPE", jbyte>(); }
	static jbyte OBJECT_INHERIT_ACE() { return get_static_field<"OBJECT_INHERIT_ACE", jbyte>(); }
	static jbyte CONTAINER_INHERIT_ACE() { return get_static_field<"CONTAINER_INHERIT_ACE", jbyte>(); }
	static jbyte NO_PROPAGATE_INHERIT_ACE() { return get_static_field<"NO_PROPAGATE_INHERIT_ACE", jbyte>(); }
	static jbyte INHERIT_ONLY_ACE() { return get_static_field<"INHERIT_ONLY_ACE", jbyte>(); }
	static jint DELETE() { return get_static_field<"DELETE", jint>(); }
	static jint READ_CONTROL() { return get_static_field<"READ_CONTROL", jint>(); }
	static jint WRITE_DAC() { return get_static_field<"WRITE_DAC", jint>(); }
	static jint WRITE_OWNER() { return get_static_field<"WRITE_OWNER", jint>(); }
	static jint SYNCHRONIZE() { return get_static_field<"SYNCHRONIZE", jint>(); }
	static jint FILE_LIST_DIRECTORY() { return get_static_field<"FILE_LIST_DIRECTORY", jint>(); }
	static jint FILE_READ_DATA() { return get_static_field<"FILE_READ_DATA", jint>(); }
	static jint FILE_WRITE_DATA() { return get_static_field<"FILE_WRITE_DATA", jint>(); }
	static jint FILE_APPEND_DATA() { return get_static_field<"FILE_APPEND_DATA", jint>(); }
	static jint FILE_READ_EA() { return get_static_field<"FILE_READ_EA", jint>(); }
	static jint FILE_WRITE_EA() { return get_static_field<"FILE_WRITE_EA", jint>(); }
	static jint FILE_EXECUTE() { return get_static_field<"FILE_EXECUTE", jint>(); }
	static jint FILE_DELETE_CHILD() { return get_static_field<"FILE_DELETE_CHILD", jint>(); }
	static jint FILE_READ_ATTRIBUTES() { return get_static_field<"FILE_READ_ATTRIBUTES", jint>(); }
	static jint FILE_WRITE_ATTRIBUTES() { return get_static_field<"FILE_WRITE_ATTRIBUTES", jint>(); }
	static jint FILE_GENERIC_READ() { return get_static_field<"FILE_GENERIC_READ", jint>(); }
	static jint FILE_GENERIC_WRITE() { return get_static_field<"FILE_GENERIC_WRITE", jint>(); }
	static jint FILE_GENERIC_EXECUTE() { return get_static_field<"FILE_GENERIC_EXECUTE", jint>(); }
	static jint FILE_ALL_ACCESS() { return get_static_field<"FILE_ALL_ACCESS", jint>(); }
	static jint TOKEN_DUPLICATE() { return get_static_field<"TOKEN_DUPLICATE", jint>(); }
	static jint TOKEN_IMPERSONATE() { return get_static_field<"TOKEN_IMPERSONATE", jint>(); }
	static jint TOKEN_QUERY() { return get_static_field<"TOKEN_QUERY", jint>(); }
	static jint TOKEN_ADJUST_PRIVILEGES() { return get_static_field<"TOKEN_ADJUST_PRIVILEGES", jint>(); }
	static jint SE_PRIVILEGE_ENABLED() { return get_static_field<"SE_PRIVILEGE_ENABLED", jint>(); }
	static jint TokenUser() { return get_static_field<"TokenUser", jint>(); }
	static jint PROCESS_QUERY_INFORMATION() { return get_static_field<"PROCESS_QUERY_INFORMATION", jint>(); }


protected:

	WindowsConstants(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_SUN_NIO_FS_WINDOWSCONSTANTS
