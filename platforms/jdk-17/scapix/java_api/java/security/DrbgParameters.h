// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_SECURITY_DRBGPARAMETERS_FWD
#define SCAPIX_JAVA_API_JAVA_SECURITY_DRBGPARAMETERS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::security { class DrbgParameters; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::security::DrbgParameters>
{
	static constexpr fixed_string class_name = "java/security/DrbgParameters";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_SECURITY_DRBGPARAMETERS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_SECURITY_DRBGPARAMETERS)
#define SCAPIX_JAVA_API_JAVA_SECURITY_DRBGPARAMETERS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/security/DrbgParameters_Capability.h>
#include <scapix/java_api/java/security/DrbgParameters_Instantiation.h>
#include <scapix/java_api/java/security/DrbgParameters_NextBytes.h>
#include <scapix/java_api/java/security/DrbgParameters_Reseed.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::security::DrbgParameters : public jni::object_base<"java/security/DrbgParameters",
	java::lang::Object>
{
public:

	using Instantiation = DrbgParameters_Instantiation;
	using Capability = DrbgParameters_Capability;
	using NextBytes = DrbgParameters_NextBytes;
	using Reseed = DrbgParameters_Reseed;

	static jni::ref<java::security::DrbgParameters_Instantiation> instantiation(jint strength, jni::ref<java::security::DrbgParameters_Capability> capability, jni::ref<jni::array<jbyte>> personalizationString) { return call_static_method<"instantiation", jni::ref<java::security::DrbgParameters_Instantiation>>(strength, capability, personalizationString); }
	static jni::ref<java::security::DrbgParameters_NextBytes> nextBytes(jint strength, jboolean predictionResistance, jni::ref<jni::array<jbyte>> additionalInput) { return call_static_method<"nextBytes", jni::ref<java::security::DrbgParameters_NextBytes>>(strength, predictionResistance, additionalInput); }
	static jni::ref<java::security::DrbgParameters_Reseed> reseed(jboolean predictionResistance, jni::ref<jni::array<jbyte>> additionalInput) { return call_static_method<"reseed", jni::ref<java::security::DrbgParameters_Reseed>>(predictionResistance, additionalInput); }

protected:

	DrbgParameters(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_SECURITY_DRBGPARAMETERS
