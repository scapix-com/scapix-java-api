// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/ProcessHandle_Info.h>

#ifndef SCAPIX_JAVA_API_JAVA_LANG_PROCESSHANDLEIMPL_INFO_FWD
#define SCAPIX_JAVA_API_JAVA_LANG_PROCESSHANDLEIMPL_INFO_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::lang { class ProcessHandleImpl_Info; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::lang::ProcessHandleImpl_Info>
{
	static constexpr fixed_string class_name = "java/lang/ProcessHandleImpl$Info";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::lang::ProcessHandle_Info>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_PROCESSHANDLEIMPL_INFO_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_LANG_PROCESSHANDLEIMPL_INFO)
#define SCAPIX_JAVA_API_JAVA_LANG_PROCESSHANDLEIMPL_INFO

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Optional.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::lang::ProcessHandleImpl_Info : public jni::object_base<"java/lang/ProcessHandleImpl$Info",
	java::lang::Object,
	java::lang::ProcessHandle_Info>
{
public:

	static jni::ref<java::lang::ProcessHandle_Info> info(jlong pid, jlong p2) { return call_static_method<"info", jni::ref<java::lang::ProcessHandle_Info>>(pid, p2); }
	jni::ref<java::util::Optional> command() { return call_method<"command", jni::ref<java::util::Optional>>(); }
	jni::ref<java::util::Optional> commandLine() { return call_method<"commandLine", jni::ref<java::util::Optional>>(); }
	jni::ref<java::util::Optional> arguments() { return call_method<"arguments", jni::ref<java::util::Optional>>(); }
	jni::ref<java::util::Optional> startInstant() { return call_method<"startInstant", jni::ref<java::util::Optional>>(); }
	jni::ref<java::util::Optional> totalCpuDuration() { return call_method<"totalCpuDuration", jni::ref<java::util::Optional>>(); }
	jni::ref<java::util::Optional> user() { return call_method<"user", jni::ref<java::util::Optional>>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	ProcessHandleImpl_Info(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_PROCESSHANDLEIMPL_INFO
