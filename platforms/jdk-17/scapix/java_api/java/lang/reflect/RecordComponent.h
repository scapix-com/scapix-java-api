// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/lang/reflect/AnnotatedElement.h>

#ifndef SCAPIX_JAVA_API_JAVA_LANG_REFLECT_RECORDCOMPONENT_FWD
#define SCAPIX_JAVA_API_JAVA_LANG_REFLECT_RECORDCOMPONENT_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::lang::reflect { class RecordComponent; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::lang::reflect::RecordComponent>
{
	static constexpr fixed_string class_name = "java/lang/reflect/RecordComponent";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::lang::reflect::AnnotatedElement>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_REFLECT_RECORDCOMPONENT_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_LANG_REFLECT_RECORDCOMPONENT)
#define SCAPIX_JAVA_API_JAVA_LANG_REFLECT_RECORDCOMPONENT

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Class.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/annotation/Annotation.h>
#include <scapix/java_api/java/lang/reflect/AnnotatedType.h>
#include <scapix/java_api/java/lang/reflect/Method.h>
#include <scapix/java_api/java/lang/reflect/Type.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::lang::reflect::RecordComponent : public jni::object_base<"java/lang/reflect/RecordComponent",
	java::lang::Object,
	java::lang::reflect::AnnotatedElement>
{
public:

	jni::ref<java::lang::String> getName() { return call_method<"getName", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::Class> getType() { return call_method<"getType", jni::ref<java::lang::Class>>(); }
	jni::ref<java::lang::String> getGenericSignature() { return call_method<"getGenericSignature", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::reflect::Type> getGenericType() { return call_method<"getGenericType", jni::ref<java::lang::reflect::Type>>(); }
	jni::ref<java::lang::reflect::AnnotatedType> getAnnotatedType() { return call_method<"getAnnotatedType", jni::ref<java::lang::reflect::AnnotatedType>>(); }
	jni::ref<java::lang::reflect::Method> getAccessor() { return call_method<"getAccessor", jni::ref<java::lang::reflect::Method>>(); }
	jni::ref<java::lang::annotation::Annotation> getAnnotation(jni::ref<java::lang::Class> annotationClass) { return call_method<"getAnnotation", jni::ref<java::lang::annotation::Annotation>>(annotationClass); }
	jni::ref<jni::array<java::lang::annotation::Annotation>> getAnnotations() { return call_method<"getAnnotations", jni::ref<jni::array<java::lang::annotation::Annotation>>>(); }
	jni::ref<jni::array<java::lang::annotation::Annotation>> getDeclaredAnnotations() { return call_method<"getDeclaredAnnotations", jni::ref<jni::array<java::lang::annotation::Annotation>>>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::Class> getDeclaringRecord() { return call_method<"getDeclaringRecord", jni::ref<java::lang::Class>>(); }

protected:

	RecordComponent(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_REFLECT_RECORDCOMPONENT
