// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_NET_SOCKSCONSTS_FWD
#define SCAPIX_JAVA_API_JAVA_NET_SOCKSCONSTS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::net { class SocksConsts; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::net::SocksConsts>
{
	static constexpr fixed_string class_name = "java/net/SocksConsts";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_NET_SOCKSCONSTS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_NET_SOCKSCONSTS)
#define SCAPIX_JAVA_API_JAVA_NET_SOCKSCONSTS

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::net::SocksConsts : public jni::object_base<"java/net/SocksConsts",
	java::lang::Object>
{
public:

	static jint PROTO_VERS4() { return get_static_field<"PROTO_VERS4", jint>(); }
	static jint PROTO_VERS() { return get_static_field<"PROTO_VERS", jint>(); }
	static jint DEFAULT_PORT() { return get_static_field<"DEFAULT_PORT", jint>(); }
	static jint NO_AUTH() { return get_static_field<"NO_AUTH", jint>(); }
	static jint GSSAPI() { return get_static_field<"GSSAPI", jint>(); }
	static jint USER_PASSW() { return get_static_field<"USER_PASSW", jint>(); }
	static jint NO_METHODS() { return get_static_field<"NO_METHODS", jint>(); }
	static jint CONNECT() { return get_static_field<"CONNECT", jint>(); }
	static jint BIND() { return get_static_field<"BIND", jint>(); }
	static jint UDP_ASSOC() { return get_static_field<"UDP_ASSOC", jint>(); }
	static jint IPV4() { return get_static_field<"IPV4", jint>(); }
	static jint DOMAIN_NAME() { return get_static_field<"DOMAIN_NAME", jint>(); }
	static jint IPV6() { return get_static_field<"IPV6", jint>(); }
	static jint REQUEST_OK() { return get_static_field<"REQUEST_OK", jint>(); }
	static jint GENERAL_FAILURE() { return get_static_field<"GENERAL_FAILURE", jint>(); }
	static jint NOT_ALLOWED() { return get_static_field<"NOT_ALLOWED", jint>(); }
	static jint NET_UNREACHABLE() { return get_static_field<"NET_UNREACHABLE", jint>(); }
	static jint HOST_UNREACHABLE() { return get_static_field<"HOST_UNREACHABLE", jint>(); }
	static jint CONN_REFUSED() { return get_static_field<"CONN_REFUSED", jint>(); }
	static jint TTL_EXPIRED() { return get_static_field<"TTL_EXPIRED", jint>(); }
	static jint CMD_NOT_SUPPORTED() { return get_static_field<"CMD_NOT_SUPPORTED", jint>(); }
	static jint ADDR_TYPE_NOT_SUP() { return get_static_field<"ADDR_TYPE_NOT_SUP", jint>(); }


protected:

	SocksConsts(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_NET_SOCKSCONSTS
