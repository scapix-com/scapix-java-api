// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/util/spi/LocaleServiceProvider.h>

#ifndef SCAPIX_JAVA_API_JAVA_UTIL_SPI_CURRENCYNAMEPROVIDER_FWD
#define SCAPIX_JAVA_API_JAVA_UTIL_SPI_CURRENCYNAMEPROVIDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::util::spi { class CurrencyNameProvider; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::util::spi::CurrencyNameProvider>
{
	static constexpr fixed_string class_name = "java/util/spi/CurrencyNameProvider";
	using base_classes = std::tuple<scapix::java_api::java::util::spi::LocaleServiceProvider>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_SPI_CURRENCYNAMEPROVIDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_UTIL_SPI_CURRENCYNAMEPROVIDER)
#define SCAPIX_JAVA_API_JAVA_UTIL_SPI_CURRENCYNAMEPROVIDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Locale.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::util::spi::CurrencyNameProvider : public jni::object_base<"java/util/spi/CurrencyNameProvider",
	java::util::spi::LocaleServiceProvider>
{
public:

	jni::ref<java::lang::String> getSymbol(jni::ref<java::lang::String> p1, jni::ref<java::util::Locale> p2) { return call_method<"getSymbol", jni::ref<java::lang::String>>(p1, p2); }
	jni::ref<java::lang::String> getDisplayName(jni::ref<java::lang::String> currencyCode, jni::ref<java::util::Locale> locale) { return call_method<"getDisplayName", jni::ref<java::lang::String>>(currencyCode, locale); }

protected:

	CurrencyNameProvider(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_SPI_CURRENCYNAMEPROVIDER
