// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/util/Formatter_FormatString.h>

#ifndef SCAPIX_JAVA_API_JAVA_UTIL_FORMATTER_FORMATSPECIFIER_FWD
#define SCAPIX_JAVA_API_JAVA_UTIL_FORMATTER_FORMATSPECIFIER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::util { class Formatter_FormatSpecifier; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::util::Formatter_FormatSpecifier>
{
	static constexpr fixed_string class_name = "java/util/Formatter$FormatSpecifier";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::util::Formatter_FormatString>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_FORMATTER_FORMATSPECIFIER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_UTIL_FORMATTER_FORMATSPECIFIER)
#define SCAPIX_JAVA_API_JAVA_UTIL_FORMATTER_FORMATSPECIFIER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Locale.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::util::Formatter_FormatSpecifier : public jni::object_base<"java/util/Formatter$FormatSpecifier",
	java::lang::Object,
	java::util::Formatter_FormatString>
{
public:

	jint index() { return call_method<"index", jint>(); }
	void print(jni::ref<java::lang::Object> arg, jni::ref<java::util::Locale> l) { return call_method<"print", void>(arg, l); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	Formatter_FormatSpecifier(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_FORMATTER_FORMATSPECIFIER
