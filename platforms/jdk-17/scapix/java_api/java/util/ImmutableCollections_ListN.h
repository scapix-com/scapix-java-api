// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/util/ImmutableCollections_AbstractImmutableList.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_API_JAVA_UTIL_IMMUTABLECOLLECTIONS_LISTN_FWD
#define SCAPIX_JAVA_API_JAVA_UTIL_IMMUTABLECOLLECTIONS_LISTN_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::util { class ImmutableCollections_ListN; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::util::ImmutableCollections_ListN>
{
	static constexpr fixed_string class_name = "java/util/ImmutableCollections$ListN";
	using base_classes = std::tuple<scapix::java_api::java::util::ImmutableCollections_AbstractImmutableList, scapix::java_api::java::io::Serializable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_IMMUTABLECOLLECTIONS_LISTN_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_UTIL_IMMUTABLECOLLECTIONS_LISTN)
#define SCAPIX_JAVA_API_JAVA_UTIL_IMMUTABLECOLLECTIONS_LISTN

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/Object.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::util::ImmutableCollections_ListN : public jni::object_base<"java/util/ImmutableCollections$ListN",
	java::util::ImmutableCollections_AbstractImmutableList,
	java::io::Serializable>
{
public:

	jboolean isEmpty() { return call_method<"isEmpty", jboolean>(); }
	jint size() { return call_method<"size", jint>(); }
	jni::ref<java::lang::Object> get(jint index) { return call_method<"get", jni::ref<java::lang::Object>>(index); }
	jni::ref<jni::array<java::lang::Object>> toArray() { return call_method<"toArray", jni::ref<jni::array<java::lang::Object>>>(); }
	jni::ref<jni::array<java::lang::Object>> toArray(jni::ref<jni::array<java::lang::Object>> a) { return call_method<"toArray", jni::ref<jni::array<java::lang::Object>>>(a); }
	jint indexOf(jni::ref<java::lang::Object> o) { return call_method<"indexOf", jint>(o); }
	jint lastIndexOf(jni::ref<java::lang::Object> o) { return call_method<"lastIndexOf", jint>(o); }

protected:

	ImmutableCollections_ListN(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_IMMUTABLECOLLECTIONS_LISTN
