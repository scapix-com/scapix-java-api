// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/util/stream/Streams_AbstractStreamBuilderImpl.h>
#include <scapix/java_api/java/util/stream/LongStream_Builder.h>
#include <scapix/java_api/java/util/Spliterator_OfLong.h>

#ifndef SCAPIX_JAVA_API_JAVA_UTIL_STREAM_STREAMS_LONGSTREAMBUILDERIMPL_FWD
#define SCAPIX_JAVA_API_JAVA_UTIL_STREAM_STREAMS_LONGSTREAMBUILDERIMPL_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::util::stream { class Streams_LongStreamBuilderImpl; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::util::stream::Streams_LongStreamBuilderImpl>
{
	static constexpr fixed_string class_name = "java/util/stream/Streams$LongStreamBuilderImpl";
	using base_classes = std::tuple<scapix::java_api::java::util::stream::Streams_AbstractStreamBuilderImpl, scapix::java_api::java::util::stream::LongStream_Builder, scapix::java_api::java::util::Spliterator_OfLong>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_STREAM_STREAMS_LONGSTREAMBUILDERIMPL_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_UTIL_STREAM_STREAMS_LONGSTREAMBUILDERIMPL)
#define SCAPIX_JAVA_API_JAVA_UTIL_STREAM_STREAMS_LONGSTREAMBUILDERIMPL

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/util/function/LongConsumer.h>
#include <scapix/java_api/java/util/stream/LongStream.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::util::stream::Streams_LongStreamBuilderImpl : public jni::object_base<"java/util/stream/Streams$LongStreamBuilderImpl",
	java::util::stream::Streams_AbstractStreamBuilderImpl,
	java::util::stream::LongStream_Builder,
	java::util::Spliterator_OfLong>
{
public:

	void accept(jlong t) { return call_method<"accept", void>(t); }
	jni::ref<java::util::stream::LongStream> build() { return call_method<"build", jni::ref<java::util::stream::LongStream>>(); }
	jboolean tryAdvance(jni::ref<java::util::function::LongConsumer> action) { return call_method<"tryAdvance", jboolean>(action); }
	void forEachRemaining(jni::ref<java::util::function::LongConsumer> action) { return call_method<"forEachRemaining", void>(action); }

protected:

	Streams_LongStreamBuilderImpl(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_STREAM_STREAMS_LONGSTREAMBUILDERIMPL
