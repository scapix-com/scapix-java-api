// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_UTIL_STREAM_MATCHOPS_FWD
#define SCAPIX_JAVA_API_JAVA_UTIL_STREAM_MATCHOPS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::util::stream { class MatchOps; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::util::stream::MatchOps>
{
	static constexpr fixed_string class_name = "java/util/stream/MatchOps";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_STREAM_MATCHOPS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_UTIL_STREAM_MATCHOPS)
#define SCAPIX_JAVA_API_JAVA_UTIL_STREAM_MATCHOPS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/util/function/DoublePredicate.h>
#include <scapix/java_api/java/util/function/IntPredicate.h>
#include <scapix/java_api/java/util/function/LongPredicate.h>
#include <scapix/java_api/java/util/function/Predicate.h>
#include <scapix/java_api/java/util/stream/MatchOps_MatchKind.h>
#include <scapix/java_api/java/util/stream/TerminalOp.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::util::stream::MatchOps : public jni::object_base<"java/util/stream/MatchOps",
	java::lang::Object>
{
public:

	static jni::ref<java::util::stream::TerminalOp> makeRef(jni::ref<java::util::function::Predicate> predicate, jni::ref<java::util::stream::MatchOps_MatchKind> matchKind) { return call_static_method<"makeRef", jni::ref<java::util::stream::TerminalOp>>(predicate, matchKind); }
	static jni::ref<java::util::stream::TerminalOp> makeInt(jni::ref<java::util::function::IntPredicate> predicate, jni::ref<java::util::stream::MatchOps_MatchKind> matchKind) { return call_static_method<"makeInt", jni::ref<java::util::stream::TerminalOp>>(predicate, matchKind); }
	static jni::ref<java::util::stream::TerminalOp> makeLong(jni::ref<java::util::function::LongPredicate> predicate, jni::ref<java::util::stream::MatchOps_MatchKind> matchKind) { return call_static_method<"makeLong", jni::ref<java::util::stream::TerminalOp>>(predicate, matchKind); }
	static jni::ref<java::util::stream::TerminalOp> makeDouble(jni::ref<java::util::function::DoublePredicate> predicate, jni::ref<java::util::stream::MatchOps_MatchKind> matchKind) { return call_static_method<"makeDouble", jni::ref<java::util::stream::TerminalOp>>(predicate, matchKind); }

protected:

	MatchOps(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_STREAM_MATCHOPS
