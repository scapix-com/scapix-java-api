// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/util/stream/TerminalOp.h>

#ifndef SCAPIX_JAVA_API_JAVA_UTIL_STREAM_FINDOPS_FINDOP_FWD
#define SCAPIX_JAVA_API_JAVA_UTIL_STREAM_FINDOPS_FINDOP_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::util::stream { class FindOps_FindOp; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::util::stream::FindOps_FindOp>
{
	static constexpr fixed_string class_name = "java/util/stream/FindOps$FindOp";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::util::stream::TerminalOp>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_STREAM_FINDOPS_FINDOP_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_UTIL_STREAM_FINDOPS_FINDOP)
#define SCAPIX_JAVA_API_JAVA_UTIL_STREAM_FINDOPS_FINDOP

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/util/Spliterator.h>
#include <scapix/java_api/java/util/stream/PipelineHelper.h>
#include <scapix/java_api/java/util/stream/StreamShape.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::util::stream::FindOps_FindOp : public jni::object_base<"java/util/stream/FindOps$FindOp",
	java::lang::Object,
	java::util::stream::TerminalOp>
{
public:

	jint getOpFlags() { return call_method<"getOpFlags", jint>(); }
	jni::ref<java::util::stream::StreamShape> inputShape() { return call_method<"inputShape", jni::ref<java::util::stream::StreamShape>>(); }
	jni::ref<java::lang::Object> evaluateSequential(jni::ref<java::util::stream::PipelineHelper> helper, jni::ref<java::util::Spliterator> spliterator) { return call_method<"evaluateSequential", jni::ref<java::lang::Object>>(helper, spliterator); }
	jni::ref<java::lang::Object> evaluateParallel(jni::ref<java::util::stream::PipelineHelper> helper, jni::ref<java::util::Spliterator> spliterator) { return call_method<"evaluateParallel", jni::ref<java::lang::Object>>(helper, spliterator); }

protected:

	FindOps_FindOp(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_STREAM_FINDOPS_FINDOP
