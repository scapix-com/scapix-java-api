// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_UTIL_FORMATTER_FLAGS_FWD
#define SCAPIX_JAVA_API_JAVA_UTIL_FORMATTER_FLAGS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::util { class Formatter_Flags; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::util::Formatter_Flags>
{
	static constexpr fixed_string class_name = "java/util/Formatter$Flags";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_FORMATTER_FLAGS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_UTIL_FORMATTER_FLAGS)
#define SCAPIX_JAVA_API_JAVA_UTIL_FORMATTER_FLAGS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::util::Formatter_Flags : public jni::object_base<"java/util/Formatter$Flags",
	java::lang::Object>
{
public:

	jint valueOf() { return call_method<"valueOf", jint>(); }
	jboolean contains(jni::ref<java::util::Formatter_Flags> f) { return call_method<"contains", jboolean>(f); }
	jni::ref<java::util::Formatter_Flags> dup() { return call_method<"dup", jni::ref<java::util::Formatter_Flags>>(); }
	jni::ref<java::util::Formatter_Flags> remove(jni::ref<java::util::Formatter_Flags> f) { return call_method<"remove", jni::ref<java::util::Formatter_Flags>>(f); }
	static jni::ref<java::util::Formatter_Flags> parse(jni::ref<java::lang::String> s, jint start, jint end) { return call_static_method<"parse", jni::ref<java::util::Formatter_Flags>>(s, start, end); }
	static jni::ref<java::lang::String> toString(jni::ref<java::util::Formatter_Flags> f) { return call_static_method<"toString", jni::ref<java::lang::String>>(f); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	Formatter_Flags(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_UTIL_FORMATTER_FLAGS
