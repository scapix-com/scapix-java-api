// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JAVA_TIME_FORMAT_ZONENAME_FWD
#define SCAPIX_JAVA_API_JAVA_TIME_FORMAT_ZONENAME_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::time::format { class ZoneName; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::time::format::ZoneName>
{
	static constexpr fixed_string class_name = "java/time/format/ZoneName";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_TIME_FORMAT_ZONENAME_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_TIME_FORMAT_ZONENAME)
#define SCAPIX_JAVA_API_JAVA_TIME_FORMAT_ZONENAME

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/Locale.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

// private
class java::time::format::ZoneName : public jni::object_base<"java/time/format/ZoneName",
	java::lang::Object>
{
public:

	static jni::ref<java::lang::String> toZid(jni::ref<java::lang::String> zid, jni::ref<java::util::Locale> locale) { return call_static_method<"toZid", jni::ref<java::lang::String>>(zid, locale); }
	static jni::ref<java::lang::String> toZid(jni::ref<java::lang::String> zid) { return call_static_method<"toZid", jni::ref<java::lang::String>>(zid); }

protected:

	ZoneName(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_TIME_FORMAT_ZONENAME
