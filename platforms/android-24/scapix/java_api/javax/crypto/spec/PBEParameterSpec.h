// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/security/spec/AlgorithmParameterSpec.h>

#ifndef SCAPIX_JAVA_API_JAVAX_CRYPTO_SPEC_PBEPARAMETERSPEC_FWD
#define SCAPIX_JAVA_API_JAVAX_CRYPTO_SPEC_PBEPARAMETERSPEC_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::javax::crypto::spec { class PBEParameterSpec; }

template<>
struct scapix::jni::object_traits<scapix::java_api::javax::crypto::spec::PBEParameterSpec>
{
	static constexpr fixed_string class_name = "javax/crypto/spec/PBEParameterSpec";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::security::spec::AlgorithmParameterSpec>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_CRYPTO_SPEC_PBEPARAMETERSPEC_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVAX_CRYPTO_SPEC_PBEPARAMETERSPEC)
#define SCAPIX_JAVA_API_JAVAX_CRYPTO_SPEC_PBEPARAMETERSPEC

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class javax::crypto::spec::PBEParameterSpec : public jni::object_base<"javax/crypto/spec/PBEParameterSpec",
	java::lang::Object,
	java::security::spec::AlgorithmParameterSpec>
{
public:

	static jni::ref<javax::crypto::spec::PBEParameterSpec> new_object(jni::ref<jni::array<jbyte>> salt, jint iterationCount) { return base_::new_object(salt, iterationCount); }
	jni::ref<jni::array<jbyte>> getSalt() { return call_method<"getSalt", jni::ref<jni::array<jbyte>>>(); }
	jint getIterationCount() { return call_method<"getIterationCount", jint>(); }

protected:

	PBEParameterSpec(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVAX_CRYPTO_SPEC_PBEPARAMETERSPEC
