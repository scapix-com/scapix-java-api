// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/java/io/Serializable.h>

#ifndef SCAPIX_JAVA_API_JAVA_LANG_NUMBER_FWD
#define SCAPIX_JAVA_API_JAVA_LANG_NUMBER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::java::lang { class Number; }

template<>
struct scapix::jni::object_traits<scapix::java_api::java::lang::Number>
{
	static constexpr fixed_string class_name = "java/lang/Number";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::java::io::Serializable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_NUMBER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JAVA_LANG_NUMBER)
#define SCAPIX_JAVA_API_JAVA_LANG_NUMBER

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class java::lang::Number : public jni::object_base<"java/lang/Number",
	java::lang::Object,
	java::io::Serializable>
{
public:

	static jni::ref<java::lang::Number> new_object() { return base_::new_object(); }
	jint intValue() { return call_method<"intValue", jint>(); }
	jlong longValue() { return call_method<"longValue", jlong>(); }
	jfloat floatValue() { return call_method<"floatValue", jfloat>(); }
	jdouble doubleValue() { return call_method<"doubleValue", jdouble>(); }
	jbyte byteValue() { return call_method<"byteValue", jbyte>(); }
	jshort shortValue() { return call_method<"shortValue", jshort>(); }

protected:

	Number(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JAVA_LANG_NUMBER
