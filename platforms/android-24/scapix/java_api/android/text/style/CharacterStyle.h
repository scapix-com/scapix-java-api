// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_TEXT_STYLE_CHARACTERSTYLE_FWD
#define SCAPIX_JAVA_API_ANDROID_TEXT_STYLE_CHARACTERSTYLE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::text::style { class CharacterStyle; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::text::style::CharacterStyle>
{
	static constexpr fixed_string class_name = "android/text/style/CharacterStyle";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEXT_STYLE_CHARACTERSTYLE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_TEXT_STYLE_CHARACTERSTYLE)
#define SCAPIX_JAVA_API_ANDROID_TEXT_STYLE_CHARACTERSTYLE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/text/TextPaint.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::text::style::CharacterStyle : public jni::object_base<"android/text/style/CharacterStyle",
	java::lang::Object>
{
public:

	static jni::ref<android::text::style::CharacterStyle> new_object() { return base_::new_object(); }
	void updateDrawState(jni::ref<android::text::TextPaint> p1) { return call_method<"updateDrawState", void>(p1); }
	static jni::ref<android::text::style::CharacterStyle> wrap(jni::ref<android::text::style::CharacterStyle> cs) { return call_static_method<"wrap", jni::ref<android::text::style::CharacterStyle>>(cs); }
	jni::ref<android::text::style::CharacterStyle> getUnderlying() { return call_method<"getUnderlying", jni::ref<android::text::style::CharacterStyle>>(); }

protected:

	CharacterStyle(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_TEXT_STYLE_CHARACTERSTYLE
