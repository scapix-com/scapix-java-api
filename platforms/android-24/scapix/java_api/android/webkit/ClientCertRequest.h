// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_WEBKIT_CLIENTCERTREQUEST_FWD
#define SCAPIX_JAVA_API_ANDROID_WEBKIT_CLIENTCERTREQUEST_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::webkit { class ClientCertRequest; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::webkit::ClientCertRequest>
{
	static constexpr fixed_string class_name = "android/webkit/ClientCertRequest";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_WEBKIT_CLIENTCERTREQUEST_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_WEBKIT_CLIENTCERTREQUEST)
#define SCAPIX_JAVA_API_ANDROID_WEBKIT_CLIENTCERTREQUEST

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/security/Principal.h>
#include <scapix/java_api/java/security/PrivateKey.h>
#include <scapix/java_api/java/security/cert/X509Certificate.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::webkit::ClientCertRequest : public jni::object_base<"android/webkit/ClientCertRequest",
	java::lang::Object>
{
public:

	static jni::ref<android::webkit::ClientCertRequest> new_object() { return base_::new_object(); }
	jni::ref<jni::array<java::lang::String>> getKeyTypes() { return call_method<"getKeyTypes", jni::ref<jni::array<java::lang::String>>>(); }
	jni::ref<jni::array<java::security::Principal>> getPrincipals() { return call_method<"getPrincipals", jni::ref<jni::array<java::security::Principal>>>(); }
	jni::ref<java::lang::String> getHost() { return call_method<"getHost", jni::ref<java::lang::String>>(); }
	jint getPort() { return call_method<"getPort", jint>(); }
	void proceed(jni::ref<java::security::PrivateKey> p1, jni::ref<jni::array<java::security::cert::X509Certificate>> p2) { return call_method<"proceed", void>(p1, p2); }
	void ignore() { return call_method<"ignore", void>(); }
	void cancel() { return call_method<"cancel", void>(); }

protected:

	ClientCertRequest(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_WEBKIT_CLIENTCERTREQUEST
