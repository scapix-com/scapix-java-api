// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_ICU_UTIL_ULOCALE_BUILDER_FWD
#define SCAPIX_JAVA_API_ANDROID_ICU_UTIL_ULOCALE_BUILDER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::icu::util { class ULocale_Builder; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::icu::util::ULocale_Builder>
{
	static constexpr fixed_string class_name = "android/icu/util/ULocale$Builder";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_UTIL_ULOCALE_BUILDER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_ICU_UTIL_ULOCALE_BUILDER)
#define SCAPIX_JAVA_API_ANDROID_ICU_UTIL_ULOCALE_BUILDER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/icu/util/ULocale.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::icu::util::ULocale_Builder : public jni::object_base<"android/icu/util/ULocale$Builder",
	java::lang::Object>
{
public:

	static jni::ref<android::icu::util::ULocale_Builder> new_object() { return base_::new_object(); }
	jni::ref<android::icu::util::ULocale_Builder> setLocale(jni::ref<android::icu::util::ULocale> locale) { return call_method<"setLocale", jni::ref<android::icu::util::ULocale_Builder>>(locale); }
	jni::ref<android::icu::util::ULocale_Builder> setLanguageTag(jni::ref<java::lang::String> languageTag) { return call_method<"setLanguageTag", jni::ref<android::icu::util::ULocale_Builder>>(languageTag); }
	jni::ref<android::icu::util::ULocale_Builder> setLanguage(jni::ref<java::lang::String> language) { return call_method<"setLanguage", jni::ref<android::icu::util::ULocale_Builder>>(language); }
	jni::ref<android::icu::util::ULocale_Builder> setScript(jni::ref<java::lang::String> script) { return call_method<"setScript", jni::ref<android::icu::util::ULocale_Builder>>(script); }
	jni::ref<android::icu::util::ULocale_Builder> setRegion(jni::ref<java::lang::String> region) { return call_method<"setRegion", jni::ref<android::icu::util::ULocale_Builder>>(region); }
	jni::ref<android::icu::util::ULocale_Builder> setVariant(jni::ref<java::lang::String> variant) { return call_method<"setVariant", jni::ref<android::icu::util::ULocale_Builder>>(variant); }
	jni::ref<android::icu::util::ULocale_Builder> setExtension(jchar key, jni::ref<java::lang::String> value) { return call_method<"setExtension", jni::ref<android::icu::util::ULocale_Builder>>(key, value); }
	jni::ref<android::icu::util::ULocale_Builder> setUnicodeLocaleKeyword(jni::ref<java::lang::String> key, jni::ref<java::lang::String> type) { return call_method<"setUnicodeLocaleKeyword", jni::ref<android::icu::util::ULocale_Builder>>(key, type); }
	jni::ref<android::icu::util::ULocale_Builder> addUnicodeLocaleAttribute(jni::ref<java::lang::String> attribute) { return call_method<"addUnicodeLocaleAttribute", jni::ref<android::icu::util::ULocale_Builder>>(attribute); }
	jni::ref<android::icu::util::ULocale_Builder> removeUnicodeLocaleAttribute(jni::ref<java::lang::String> attribute) { return call_method<"removeUnicodeLocaleAttribute", jni::ref<android::icu::util::ULocale_Builder>>(attribute); }
	jni::ref<android::icu::util::ULocale_Builder> clear() { return call_method<"clear", jni::ref<android::icu::util::ULocale_Builder>>(); }
	jni::ref<android::icu::util::ULocale_Builder> clearExtensions() { return call_method<"clearExtensions", jni::ref<android::icu::util::ULocale_Builder>>(); }
	jni::ref<android::icu::util::ULocale> build() { return call_method<"build", jni::ref<android::icu::util::ULocale>>(); }

protected:

	ULocale_Builder(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_ICU_UTIL_ULOCALE_BUILDER
