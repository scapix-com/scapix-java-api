// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/android/widget/FrameLayout.h>

#ifndef SCAPIX_JAVA_API_ANDROID_WIDGET_TIMEPICKER_FWD
#define SCAPIX_JAVA_API_ANDROID_WIDGET_TIMEPICKER_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::widget { class TimePicker; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::widget::TimePicker>
{
	static constexpr fixed_string class_name = "android/widget/TimePicker";
	using base_classes = std::tuple<scapix::java_api::android::widget::FrameLayout>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_WIDGET_TIMEPICKER_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_WIDGET_TIMEPICKER)
#define SCAPIX_JAVA_API_ANDROID_WIDGET_TIMEPICKER

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/content/Context.h>
#include <scapix/java_api/android/util/AttributeSet.h>
#include <scapix/java_api/android/widget/TimePicker_OnTimeChangedListener.h>
#include <scapix/java_api/java/lang/Boolean.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/Integer.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::widget::TimePicker : public jni::object_base<"android/widget/TimePicker",
	android::widget::FrameLayout>
{
public:

	using OnTimeChangedListener = TimePicker_OnTimeChangedListener;

	static jni::ref<android::widget::TimePicker> new_object(jni::ref<android::content::Context> context) { return base_::new_object(context); }
	static jni::ref<android::widget::TimePicker> new_object(jni::ref<android::content::Context> context, jni::ref<android::util::AttributeSet> attrs) { return base_::new_object(context, attrs); }
	static jni::ref<android::widget::TimePicker> new_object(jni::ref<android::content::Context> context, jni::ref<android::util::AttributeSet> attrs, jint defStyleAttr) { return base_::new_object(context, attrs, defStyleAttr); }
	static jni::ref<android::widget::TimePicker> new_object(jni::ref<android::content::Context> context, jni::ref<android::util::AttributeSet> attrs, jint defStyleAttr, jint defStyleRes) { return base_::new_object(context, attrs, defStyleAttr, defStyleRes); }
	void setHour(jint hour) { return call_method<"setHour", void>(hour); }
	jint getHour() { return call_method<"getHour", jint>(); }
	void setMinute(jint minute) { return call_method<"setMinute", void>(minute); }
	jint getMinute() { return call_method<"getMinute", jint>(); }
	void setCurrentHour(jni::ref<java::lang::Integer> currentHour) { return call_method<"setCurrentHour", void>(currentHour); }
	jni::ref<java::lang::Integer> getCurrentHour() { return call_method<"getCurrentHour", jni::ref<java::lang::Integer>>(); }
	void setCurrentMinute(jni::ref<java::lang::Integer> currentMinute) { return call_method<"setCurrentMinute", void>(currentMinute); }
	jni::ref<java::lang::Integer> getCurrentMinute() { return call_method<"getCurrentMinute", jni::ref<java::lang::Integer>>(); }
	void setIs24HourView(jni::ref<java::lang::Boolean> is24HourView) { return call_method<"setIs24HourView", void>(is24HourView); }
	jboolean is24HourView() { return call_method<"is24HourView", jboolean>(); }
	void setOnTimeChangedListener(jni::ref<android::widget::TimePicker_OnTimeChangedListener> onTimeChangedListener) { return call_method<"setOnTimeChangedListener", void>(onTimeChangedListener); }
	void setEnabled(jboolean enabled) { return call_method<"setEnabled", void>(enabled); }
	jboolean isEnabled() { return call_method<"isEnabled", jboolean>(); }
	jint getBaseline() { return call_method<"getBaseline", jint>(); }
	jni::ref<java::lang::CharSequence> getAccessibilityClassName() { return call_method<"getAccessibilityClassName", jni::ref<java::lang::CharSequence>>(); }

protected:

	TimePicker(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_WIDGET_TIMEPICKER
