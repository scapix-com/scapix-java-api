// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_RENDERSCRIPT_SHORT3_FWD
#define SCAPIX_JAVA_API_ANDROID_RENDERSCRIPT_SHORT3_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::renderscript { class Short3; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::renderscript::Short3>
{
	static constexpr fixed_string class_name = "android/renderscript/Short3";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_RENDERSCRIPT_SHORT3_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_RENDERSCRIPT_SHORT3)
#define SCAPIX_JAVA_API_ANDROID_RENDERSCRIPT_SHORT3

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::renderscript::Short3 : public jni::object_base<"android/renderscript/Short3",
	java::lang::Object>
{
public:

	jshort x() { return get_field<"x", jshort>(); }
	void x(jshort v) { set_field<"x", jshort>(v); }
	jshort y() { return get_field<"y", jshort>(); }
	void y(jshort v) { set_field<"y", jshort>(v); }
	jshort z() { return get_field<"z", jshort>(); }
	void z(jshort v) { set_field<"z", jshort>(v); }

	static jni::ref<android::renderscript::Short3> new_object() { return base_::new_object(); }
	static jni::ref<android::renderscript::Short3> new_object(jshort x, jshort y, jshort z) { return base_::new_object(x, y, z); }

protected:

	Short3(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_RENDERSCRIPT_SHORT3
