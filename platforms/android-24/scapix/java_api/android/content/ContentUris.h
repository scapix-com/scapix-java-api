// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_CONTENT_CONTENTURIS_FWD
#define SCAPIX_JAVA_API_ANDROID_CONTENT_CONTENTURIS_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::content { class ContentUris; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::content::ContentUris>
{
	static constexpr fixed_string class_name = "android/content/ContentUris";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_CONTENT_CONTENTURIS_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_CONTENT_CONTENTURIS)
#define SCAPIX_JAVA_API_ANDROID_CONTENT_CONTENTURIS

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/android/net/Uri_Builder.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::content::ContentUris : public jni::object_base<"android/content/ContentUris",
	java::lang::Object>
{
public:

	static jni::ref<android::content::ContentUris> new_object() { return base_::new_object(); }
	static jlong parseId(jni::ref<android::net::Uri> contentUri) { return call_static_method<"parseId", jlong>(contentUri); }
	static jni::ref<android::net::Uri_Builder> appendId(jni::ref<android::net::Uri_Builder> builder, jlong id) { return call_static_method<"appendId", jni::ref<android::net::Uri_Builder>>(builder, id); }
	static jni::ref<android::net::Uri> withAppendedId(jni::ref<android::net::Uri> contentUri, jlong id) { return call_static_method<"withAppendedId", jni::ref<android::net::Uri>>(contentUri, id); }

protected:

	ContentUris(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_CONTENT_CONTENTURIS
