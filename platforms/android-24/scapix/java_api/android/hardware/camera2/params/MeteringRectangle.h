// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA2_PARAMS_METERINGRECTANGLE_FWD
#define SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA2_PARAMS_METERINGRECTANGLE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::hardware::camera2::params { class MeteringRectangle; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::hardware::camera2::params::MeteringRectangle>
{
	static constexpr fixed_string class_name = "android/hardware/camera2/params/MeteringRectangle";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA2_PARAMS_METERINGRECTANGLE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA2_PARAMS_METERINGRECTANGLE)
#define SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA2_PARAMS_METERINGRECTANGLE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/graphics/Point.h>
#include <scapix/java_api/android/graphics/Rect.h>
#include <scapix/java_api/android/util/Size.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::hardware::camera2::params::MeteringRectangle : public jni::object_base<"android/hardware/camera2/params/MeteringRectangle",
	java::lang::Object>
{
public:

	static jint METERING_WEIGHT_DONT_CARE() { return get_static_field<"METERING_WEIGHT_DONT_CARE", jint>(); }
	static jint METERING_WEIGHT_MAX() { return get_static_field<"METERING_WEIGHT_MAX", jint>(); }
	static jint METERING_WEIGHT_MIN() { return get_static_field<"METERING_WEIGHT_MIN", jint>(); }

	static jni::ref<android::hardware::camera2::params::MeteringRectangle> new_object(jint x, jint y, jint width, jint height, jint meteringWeight) { return base_::new_object(x, y, width, height, meteringWeight); }
	static jni::ref<android::hardware::camera2::params::MeteringRectangle> new_object(jni::ref<android::graphics::Point> xy, jni::ref<android::util::Size> dimensions, jint meteringWeight) { return base_::new_object(xy, dimensions, meteringWeight); }
	static jni::ref<android::hardware::camera2::params::MeteringRectangle> new_object(jni::ref<android::graphics::Rect> rect, jint meteringWeight) { return base_::new_object(rect, meteringWeight); }
	jint getX() { return call_method<"getX", jint>(); }
	jint getY() { return call_method<"getY", jint>(); }
	jint getWidth() { return call_method<"getWidth", jint>(); }
	jint getHeight() { return call_method<"getHeight", jint>(); }
	jint getMeteringWeight() { return call_method<"getMeteringWeight", jint>(); }
	jni::ref<android::graphics::Point> getUpperLeftPoint() { return call_method<"getUpperLeftPoint", jni::ref<android::graphics::Point>>(); }
	jni::ref<android::util::Size> getSize() { return call_method<"getSize", jni::ref<android::util::Size>>(); }
	jni::ref<android::graphics::Rect> getRect() { return call_method<"getRect", jni::ref<android::graphics::Rect>>(); }
	jboolean equals(jni::ref<java::lang::Object> other) { return call_method<"equals", jboolean>(other); }
	jboolean equals(jni::ref<android::hardware::camera2::params::MeteringRectangle> other) { return call_method<"equals", jboolean>(other); }
	jint hashCode() { return call_method<"hashCode", jint>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }

protected:

	MeteringRectangle(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_HARDWARE_CAMERA2_PARAMS_METERINGRECTANGLE
