// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_TV_TVRECORDINGCLIENT_RECORDINGCALLBACK_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_TV_TVRECORDINGCLIENT_RECORDINGCALLBACK_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media::tv { class TvRecordingClient_RecordingCallback; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::tv::TvRecordingClient_RecordingCallback>
{
	static constexpr fixed_string class_name = "android/media/tv/TvRecordingClient$RecordingCallback";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_TV_TVRECORDINGCLIENT_RECORDINGCALLBACK_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_TV_TVRECORDINGCLIENT_RECORDINGCALLBACK)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_TV_TVRECORDINGCLIENT_RECORDINGCALLBACK

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/net/Uri.h>
#include <scapix/java_api/java/lang/String.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::tv::TvRecordingClient_RecordingCallback : public jni::object_base<"android/media/tv/TvRecordingClient$RecordingCallback",
	java::lang::Object>
{
public:

	static jni::ref<android::media::tv::TvRecordingClient_RecordingCallback> new_object() { return base_::new_object(); }
	void onConnectionFailed(jni::ref<java::lang::String> inputId) { return call_method<"onConnectionFailed", void>(inputId); }
	void onDisconnected(jni::ref<java::lang::String> inputId) { return call_method<"onDisconnected", void>(inputId); }
	void onTuned(jni::ref<android::net::Uri> channelUri) { return call_method<"onTuned", void>(channelUri); }
	void onRecordingStopped(jni::ref<android::net::Uri> recordedProgramUri) { return call_method<"onRecordingStopped", void>(recordedProgramUri); }
	void onError(jint error) { return call_method<"onError", void>(error); }

protected:

	TvRecordingClient_RecordingCallback(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_TV_TVRECORDINGCLIENT_RECORDINGCALLBACK
