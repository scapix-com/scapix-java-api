// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>
#include <scapix/java_api/android/os/Parcelable.h>

#ifndef SCAPIX_JAVA_API_ANDROID_MEDIA_SESSION_PLAYBACKSTATE_FWD
#define SCAPIX_JAVA_API_ANDROID_MEDIA_SESSION_PLAYBACKSTATE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::media::session { class PlaybackState; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::media::session::PlaybackState>
{
	static constexpr fixed_string class_name = "android/media/session/PlaybackState";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object, scapix::java_api::android::os::Parcelable>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_SESSION_PLAYBACKSTATE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_MEDIA_SESSION_PLAYBACKSTATE)
#define SCAPIX_JAVA_API_ANDROID_MEDIA_SESSION_PLAYBACKSTATE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/os/Bundle.h>
#include <scapix/java_api/android/os/Parcel.h>
#include <scapix/java_api/android/os/Parcelable_Creator.h>
#include <scapix/java_api/java/lang/CharSequence.h>
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/util/List.h>
#include <scapix/java_api/android/media/session/PlaybackState_Builder.h>
#include <scapix/java_api/android/media/session/PlaybackState_CustomAction.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::media::session::PlaybackState : public jni::object_base<"android/media/session/PlaybackState",
	java::lang::Object,
	android::os::Parcelable>
{
public:

	using Builder = PlaybackState_Builder;
	using CustomAction = PlaybackState_CustomAction;

	static jlong ACTION_FAST_FORWARD() { return get_static_field<"ACTION_FAST_FORWARD", jlong>(); }
	static jlong ACTION_PAUSE() { return get_static_field<"ACTION_PAUSE", jlong>(); }
	static jlong ACTION_PLAY() { return get_static_field<"ACTION_PLAY", jlong>(); }
	static jlong ACTION_PLAY_FROM_MEDIA_ID() { return get_static_field<"ACTION_PLAY_FROM_MEDIA_ID", jlong>(); }
	static jlong ACTION_PLAY_FROM_SEARCH() { return get_static_field<"ACTION_PLAY_FROM_SEARCH", jlong>(); }
	static jlong ACTION_PLAY_FROM_URI() { return get_static_field<"ACTION_PLAY_FROM_URI", jlong>(); }
	static jlong ACTION_PLAY_PAUSE() { return get_static_field<"ACTION_PLAY_PAUSE", jlong>(); }
	static jlong ACTION_PREPARE() { return get_static_field<"ACTION_PREPARE", jlong>(); }
	static jlong ACTION_PREPARE_FROM_MEDIA_ID() { return get_static_field<"ACTION_PREPARE_FROM_MEDIA_ID", jlong>(); }
	static jlong ACTION_PREPARE_FROM_SEARCH() { return get_static_field<"ACTION_PREPARE_FROM_SEARCH", jlong>(); }
	static jlong ACTION_PREPARE_FROM_URI() { return get_static_field<"ACTION_PREPARE_FROM_URI", jlong>(); }
	static jlong ACTION_REWIND() { return get_static_field<"ACTION_REWIND", jlong>(); }
	static jlong ACTION_SEEK_TO() { return get_static_field<"ACTION_SEEK_TO", jlong>(); }
	static jlong ACTION_SET_RATING() { return get_static_field<"ACTION_SET_RATING", jlong>(); }
	static jlong ACTION_SKIP_TO_NEXT() { return get_static_field<"ACTION_SKIP_TO_NEXT", jlong>(); }
	static jlong ACTION_SKIP_TO_PREVIOUS() { return get_static_field<"ACTION_SKIP_TO_PREVIOUS", jlong>(); }
	static jlong ACTION_SKIP_TO_QUEUE_ITEM() { return get_static_field<"ACTION_SKIP_TO_QUEUE_ITEM", jlong>(); }
	static jlong ACTION_STOP() { return get_static_field<"ACTION_STOP", jlong>(); }
	static jni::ref<android::os::Parcelable_Creator> CREATOR() { return get_static_field<"CREATOR", jni::ref<android::os::Parcelable_Creator>>(); }
	static jlong PLAYBACK_POSITION_UNKNOWN() { return get_static_field<"PLAYBACK_POSITION_UNKNOWN", jlong>(); }
	static jint STATE_BUFFERING() { return get_static_field<"STATE_BUFFERING", jint>(); }
	static jint STATE_CONNECTING() { return get_static_field<"STATE_CONNECTING", jint>(); }
	static jint STATE_ERROR() { return get_static_field<"STATE_ERROR", jint>(); }
	static jint STATE_FAST_FORWARDING() { return get_static_field<"STATE_FAST_FORWARDING", jint>(); }
	static jint STATE_NONE() { return get_static_field<"STATE_NONE", jint>(); }
	static jint STATE_PAUSED() { return get_static_field<"STATE_PAUSED", jint>(); }
	static jint STATE_PLAYING() { return get_static_field<"STATE_PLAYING", jint>(); }
	static jint STATE_REWINDING() { return get_static_field<"STATE_REWINDING", jint>(); }
	static jint STATE_SKIPPING_TO_NEXT() { return get_static_field<"STATE_SKIPPING_TO_NEXT", jint>(); }
	static jint STATE_SKIPPING_TO_PREVIOUS() { return get_static_field<"STATE_SKIPPING_TO_PREVIOUS", jint>(); }
	static jint STATE_SKIPPING_TO_QUEUE_ITEM() { return get_static_field<"STATE_SKIPPING_TO_QUEUE_ITEM", jint>(); }
	static jint STATE_STOPPED() { return get_static_field<"STATE_STOPPED", jint>(); }

	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jint describeContents() { return call_method<"describeContents", jint>(); }
	void writeToParcel(jni::ref<android::os::Parcel> dest, jint flags) { return call_method<"writeToParcel", void>(dest, flags); }
	jint getState() { return call_method<"getState", jint>(); }
	jlong getPosition() { return call_method<"getPosition", jlong>(); }
	jlong getBufferedPosition() { return call_method<"getBufferedPosition", jlong>(); }
	jfloat getPlaybackSpeed() { return call_method<"getPlaybackSpeed", jfloat>(); }
	jlong getActions() { return call_method<"getActions", jlong>(); }
	jni::ref<java::util::List> getCustomActions() { return call_method<"getCustomActions", jni::ref<java::util::List>>(); }
	jni::ref<java::lang::CharSequence> getErrorMessage() { return call_method<"getErrorMessage", jni::ref<java::lang::CharSequence>>(); }
	jlong getLastPositionUpdateTime() { return call_method<"getLastPositionUpdateTime", jlong>(); }
	jlong getActiveQueueItemId() { return call_method<"getActiveQueueItemId", jlong>(); }
	jni::ref<android::os::Bundle> getExtras() { return call_method<"getExtras", jni::ref<android::os::Bundle>>(); }

protected:

	PlaybackState(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_MEDIA_SESSION_PLAYBACKSTATE
