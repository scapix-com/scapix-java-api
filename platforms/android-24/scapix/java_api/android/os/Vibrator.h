// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_ANDROID_OS_VIBRATOR_FWD
#define SCAPIX_JAVA_API_ANDROID_OS_VIBRATOR_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::android::os { class Vibrator; }

template<>
struct scapix::jni::object_traits<scapix::java_api::android::os::Vibrator>
{
	static constexpr fixed_string class_name = "android/os/Vibrator";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_OS_VIBRATOR_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_ANDROID_OS_VIBRATOR)
#define SCAPIX_JAVA_API_ANDROID_OS_VIBRATOR

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/android/media/AudioAttributes.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class android::os::Vibrator : public jni::object_base<"android/os/Vibrator",
	java::lang::Object>
{
public:

	jboolean hasVibrator() { return call_method<"hasVibrator", jboolean>(); }
	void vibrate(jlong milliseconds) { return call_method<"vibrate", void>(milliseconds); }
	void vibrate(jlong milliseconds, jni::ref<android::media::AudioAttributes> p2) { return call_method<"vibrate", void>(milliseconds, p2); }
	void vibrate(jni::ref<jni::array<jlong>> pattern, jint repeat) { return call_method<"vibrate", void>(pattern, repeat); }
	void vibrate(jni::ref<jni::array<jlong>> pattern, jint repeat, jni::ref<android::media::AudioAttributes> attributes) { return call_method<"vibrate", void>(pattern, repeat, attributes); }
	void cancel() { return call_method<"cancel", void>(); }

protected:

	Vibrator(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_ANDROID_OS_VIBRATOR
