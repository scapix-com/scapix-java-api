// Generated by Scapix Java API 2.0
// https://www.scapix.com

#include <scapix/java_api/java/lang/Object.h>

#ifndef SCAPIX_JAVA_API_JUNIT_FRAMEWORK_TESTFAILURE_FWD
#define SCAPIX_JAVA_API_JUNIT_FRAMEWORK_TESTFAILURE_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api::junit::framework { class TestFailure; }

template<>
struct scapix::jni::object_traits<scapix::java_api::junit::framework::TestFailure>
{
	static constexpr fixed_string class_name = "junit/framework/TestFailure";
	using base_classes = std::tuple<scapix::java_api::java::lang::Object>;
};

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JUNIT_FRAMEWORK_TESTFAILURE_FWD

#if !defined(SCAPIX_JAVA_API_FWD) && !defined(SCAPIX_JAVA_API_JUNIT_FRAMEWORK_TESTFAILURE)
#define SCAPIX_JAVA_API_JUNIT_FRAMEWORK_TESTFAILURE

#define SCAPIX_JAVA_API_FWD
#include <scapix/java_api/java/lang/String.h>
#include <scapix/java_api/java/lang/Throwable.h>
#include <scapix/java_api/junit/framework/Test.h>
#undef SCAPIX_JAVA_API_FWD

#include <scapix/jni/java_api/macros_push.h>

namespace scapix::java_api {

class junit::framework::TestFailure : public jni::object_base<"junit/framework/TestFailure",
	java::lang::Object>
{
public:

	static jni::ref<junit::framework::TestFailure> new_object(jni::ref<junit::framework::Test> failedTest, jni::ref<java::lang::Throwable> thrownException) { return base_::new_object(failedTest, thrownException); }
	jni::ref<junit::framework::Test> failedTest() { return call_method<"failedTest", jni::ref<junit::framework::Test>>(); }
	jni::ref<java::lang::Throwable> thrownException() { return call_method<"thrownException", jni::ref<java::lang::Throwable>>(); }
	jni::ref<java::lang::String> toString() { return call_method<"toString", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> trace() { return call_method<"trace", jni::ref<java::lang::String>>(); }
	jni::ref<java::lang::String> exceptionMessage() { return call_method<"exceptionMessage", jni::ref<java::lang::String>>(); }
	jboolean isFailure() { return call_method<"isFailure", jboolean>(); }

protected:

	TestFailure(handle_type h) : base_(h) {}

};

} // namespace scapix::java_api

#include <scapix/jni/java_api/macros_pop.h>

#endif // SCAPIX_JAVA_API_JUNIT_FRAMEWORK_TESTFAILURE
